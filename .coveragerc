[run]
source = .
omit =
    */tests/*
    */test_*
    *_test.py
    */venv/*
    */__pycache__/*
    */node_modules/*
    */htmlcov*/*
    */test-reports/*
    */coverage/*
    */build/*
    */dist/*
    */.git/*
    */migrations/*
    */alembic/*
    */scripts/*
    */examples/*
    */stubs/*
    */web/*
    */nginx/*
    */monitoring/*
    */observability/*
    */security/*
    */docs/*
    */k8s/*
    */deploy/*
    */deployment/*
    */postgres/*
    */redis/*
    */secrets/*
    */ssl/*
    */certs/*
    */logs/*
    */performance_documentation/*
    */memory_profiling_reports/*
    */benchmarks/*
    */cleanup_scripts/*
    */taskmaster_tasks/*
    */test-reports/*
    */knowledge_graphs/*

# Include core modules only
include =
    agents/*
    api/*
    coalitions/*
    database/*
    inference/*
    llm/*
    services/*
    world/*
    knowledge_graph/*
    auth/*
    websocket/*

[report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
    except.*ImportError.*:
    except.*RuntimeError.*:
    if.*not.*TORCH_AVAILABLE
    if.*not.*PYMDP_AVAILABLE
    print.*Warning.*not available

precision = 2
show_missing = true
skip_covered = false
fail_under = 90

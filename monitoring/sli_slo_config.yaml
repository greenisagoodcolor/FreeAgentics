# FreeAgentics SLI/SLO Configuration
# Service Level Indicators and Objectives for production monitoring

version: "1.0"
service: "freeagentics"
environment: "production"
updated: "2024-07-15"

# Service Level Indicators (SLIs)
slis:
  availability:
    name: "System Availability"
    description: "Percentage of time the system is available and responding"
    query: 'avg_over_time(up{job="freeagentics-backend"}[5m])'
    unit: "ratio"
    good_events: "HTTP 200 responses"
    total_events: "All HTTP responses"
    measurement_window: "5m"
    
  latency:
    name: "Request Latency"
    description: "Percentage of requests served within acceptable latency"
    query: 'histogram_quantile(0.95, rate(http_request_duration_seconds_bucket{job="freeagentics-backend"}[5m]))'
    unit: "seconds"
    good_events: "Requests < 500ms"
    total_events: "All requests"
    measurement_window: "5m"
    
  quality:
    name: "Request Quality"
    description: "Percentage of requests that are successful"
    query: 'rate(http_requests_total{job="freeagentics-backend",status!~"5.."}[5m]) / rate(http_requests_total{job="freeagentics-backend"}[5m])'
    unit: "ratio"
    good_events: "HTTP 2xx, 3xx, 4xx responses"
    total_events: "All HTTP responses"
    measurement_window: "5m"
    
  coordination:
    name: "Agent Coordination Success"
    description: "Percentage of agent coordination requests that succeed"
    query: 'rate(freeagentics_agent_coordination_requests_total{status="success"}[5m]) / rate(freeagentics_agent_coordination_requests_total[5m])'
    unit: "ratio"
    good_events: "Successful coordination requests"
    total_events: "All coordination requests"
    measurement_window: "5m"
    
  memory_efficiency:
    name: "Memory Efficiency"
    description: "Percentage of agents operating within memory limits"
    query: 'count(freeagentics_agent_memory_usage_bytes <= 30*1024*1024) / count(freeagentics_agent_memory_usage_bytes)'
    unit: "ratio"
    good_events: "Agents using <= 30MB"
    total_events: "All active agents"
    measurement_window: "5m"

# Service Level Objectives (SLOs)
slos:
  availability:
    sli: "availability"
    target: 0.999  # 99.9% uptime
    error_budget: 0.001  # 43.2 minutes per month
    measurement_window: "30d"
    alerting_threshold: 0.995  # Alert at 99.5%
    burn_rate_thresholds:
      - window: "1h"
        threshold: 14.4  # 2% of monthly budget in 1 hour
      - window: "6h"
        threshold: 6.0   # 5% of monthly budget in 6 hours
      - window: "24h"
        threshold: 3.0   # 10% of monthly budget in 24 hours
    
  latency:
    sli: "latency"
    target: 0.5  # P95 < 500ms
    error_budget: 0.05  # 5% of requests may exceed 500ms
    measurement_window: "24h"
    alerting_threshold: 0.6  # Alert at P95 > 600ms
    burn_rate_thresholds:
      - window: "5m"
        threshold: 0.5   # 50% above target for 5 minutes
      - window: "30m"
        threshold: 0.55  # 55% above target for 30 minutes
      - window: "2h"
        threshold: 0.6   # 60% above target for 2 hours
    
  quality:
    sli: "quality"
    target: 0.99  # 99% success rate
    error_budget: 0.01  # 1% of requests may fail
    measurement_window: "24h"
    alerting_threshold: 0.90  # Alert at 90% success rate
    burn_rate_thresholds:
      - window: "5m"
        threshold: 0.20  # 20% error rate for 5 minutes
      - window: "30m"
        threshold: 0.15  # 15% error rate for 30 minutes
      - window: "2h"
        threshold: 0.10  # 10% error rate for 2 hours
    
  coordination:
    sli: "coordination"
    target: 0.95  # 95% coordination success
    error_budget: 0.05  # 5% of coordination requests may fail
    measurement_window: "1h"
    alerting_threshold: 0.90  # Alert at 90% success rate
    burn_rate_thresholds:
      - window: "5m"
        threshold: 0.20  # 20% failure rate for 5 minutes
      - window: "30m"
        threshold: 0.15  # 15% failure rate for 30 minutes
      - window: "1h"
        threshold: 0.10  # 10% failure rate for 1 hour
    
  memory_efficiency:
    sli: "memory_efficiency"
    target: 0.90  # 90% of agents within memory limits
    error_budget: 0.10  # 10% of agents may exceed limits
    measurement_window: "1h"
    alerting_threshold: 0.80  # Alert when only 80% within limits
    burn_rate_thresholds:
      - window: "5m"
        threshold: 0.50  # 50% agents over limit for 5 minutes
      - window: "30m"
        threshold: 0.30  # 30% agents over limit for 30 minutes
      - window: "1h"
        threshold: 0.20  # 20% agents over limit for 1 hour

# Alert Rules for SLO Violations
alert_rules:
  - name: "SLO_Availability_BurnRate_High"
    condition: "burn_rate(availability) > 14.4"
    severity: "critical"
    duration: "2m"
    description: "High burn rate detected for availability SLO"
    
  - name: "SLO_Availability_BurnRate_Medium"
    condition: "burn_rate(availability) > 6.0"
    severity: "warning"
    duration: "15m"
    description: "Medium burn rate detected for availability SLO"
    
  - name: "SLO_Latency_BurnRate_High"
    condition: "burn_rate(latency) > 0.5"
    severity: "critical"
    duration: "2m"
    description: "High burn rate detected for latency SLO"
    
  - name: "SLO_Quality_BurnRate_High"
    condition: "burn_rate(quality) > 0.20"
    severity: "critical"
    duration: "2m"
    description: "High burn rate detected for quality SLO"
    
  - name: "SLO_Coordination_BurnRate_High"
    condition: "burn_rate(coordination) > 0.20"
    severity: "critical"
    duration: "2m"
    description: "High burn rate detected for coordination SLO"
    
  - name: "SLO_Memory_BurnRate_High"
    condition: "burn_rate(memory_efficiency) > 0.50"
    severity: "critical"
    duration: "2m"
    description: "High burn rate detected for memory efficiency SLO"

# Error Budget Policies
error_budget_policies:
  - name: "Fast Burn"
    description: "Rapid error budget consumption"
    condition: "error_budget_remaining < 0.50 AND burn_rate > 10x"
    actions:
      - "Page on-call engineer"
      - "Halt non-critical deployments"
      - "Escalate to engineering manager"
    
  - name: "Slow Burn"
    description: "Gradual error budget consumption"
    condition: "error_budget_remaining < 0.25 AND burn_rate > 1x"
    actions:
      - "Notify development team"
      - "Review deployment frequency"
      - "Prioritize reliability improvements"
    
  - name: "Budget Exhausted"
    description: "Error budget completely consumed"
    condition: "error_budget_remaining <= 0"
    actions:
      - "Halt all deployments"
      - "Focus on reliability"
      - "Incident response activation"
      - "Executive notification"

# Reporting Configuration
reporting:
  slo_dashboard:
    url: "https://grafana.freeagentics.com/d/slo-overview"
    refresh_interval: "1m"
    
  daily_report:
    recipients: ["engineering@freeagentics.com", "sre@freeagentics.com"]
    schedule: "0 9 * * *"  # 9 AM daily
    
  weekly_review:
    recipients: ["engineering-leads@freeagentics.com", "product@freeagentics.com"]
    schedule: "0 10 * * 1"  # 10 AM Mondays
    
  monthly_analysis:
    recipients: ["leadership@freeagentics.com", "engineering@freeagentics.com"]
    schedule: "0 9 1 * *"  # 9 AM first day of month

# Performance Baselines
performance_baselines:
  system_level:
    memory_usage:
      baseline: 1.5  # GB
      warning: 1.8   # GB
      critical: 2.0  # GB
      
    cpu_usage:
      baseline: 40   # %
      warning: 70    # %
      critical: 90   # %
      
    disk_usage:
      baseline: 60   # %
      warning: 80    # %
      critical: 90   # %
  
  agent_coordination:
    active_agents:
      baseline: 15
      warning: 40
      critical: 50
      
    coordination_duration_p95:
      baseline: 1.5  # seconds
      warning: 1.8   # seconds
      critical: 2.0  # seconds
      
    timeout_rate:
      baseline: 0.02  # 2%
      warning: 0.03   # 3%
      critical: 0.05  # 5%
  
  memory_usage:
    per_agent_avg:
      baseline: 20   # MB
      warning: 30    # MB
      critical: 34.5 # MB
      
    per_agent_max:
      baseline: 30   # MB
      warning: 32    # MB
      critical: 34.5 # MB
  
  api_performance:
    response_time_p95:
      baseline: 0.3  # seconds
      warning: 0.4   # seconds
      critical: 0.5  # seconds
      
    error_rate:
      baseline: 0.01  # 1%
      warning: 0.05   # 5%
      critical: 0.10  # 10%
  
  belief_system:
    free_energy:
      baseline: 2.5
      warning: 8
      critical: 10
      
    accuracy:
      baseline: 0.8   # 80%
      warning: 0.75   # 75%
      critical: 0.7   # 70%
  
  business_metrics:
    user_interaction_rate:
      baseline: 0.1   # per hour
      warning: 0.05   # per hour
      critical: 0.01  # per hour
      
    response_quality:
      baseline: 0.75  # 75%
      warning: 0.7    # 70%
      critical: 0.6   # 60%

# Capacity Planning
capacity_planning:
  growth_projections:
    agents:
      current: 15
      "3_months": 25
      "6_months": 40
      "12_months": 60
      
    memory:
      current: 300  # MB
      "3_months": 500  # MB
      "6_months": 1000  # MB
      "12_months": 2000  # MB
      
    requests:
      current: 50     # per second
      "3_months": 100   # per second
      "6_months": 200   # per second
      "12_months": 500  # per second
  
  scale_triggers:
    scale_up:
      agent_capacity: 0.8  # 80% of coordination limit
      memory_usage: 0.8    # 80% of available memory
      cpu_usage: 0.7       # 70% sustained for 30 minutes
      disk_usage: 0.8      # 80% of available disk
      
    scale_down:
      agent_capacity: 0.3  # 30% of coordination limit
      memory_usage: 0.4    # 40% of available memory
      cpu_usage: 0.3       # 30% sustained for 60 minutes
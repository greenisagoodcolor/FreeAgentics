{"version":3,"names":["AgentActivityTimeline","generateMockActivities","agents","agentDetails","cov_1mmapynq1u","f","activities","s","now","Date","eventTypes","type","icon","_lucidereact","Activity","color","template","MessageSquare","Target","Brain","Navigation","Zap","length","b","i","agent","Math","floor","random","eventType","minutesAgo","description","details","id","status","otherAgent","find","a","name","position","x","y","push","agentId","agentName","timestamp","getTime","sort","formatTimeAgo","date","seconds","minutes","hours","days","_jsxruntime","jsxs","className","jsx","_card","CardHeader","CardTitle","CardContent","_scrollarea","ScrollArea","map","activity","Icon","Clock","_badge","Badge","variant","replace"],"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/components/agent-activity-timeline.tsx"],"sourcesContent":["\"use client\";\n\nimport { Badge } from \"@/components/ui/badge\";\nimport { CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport type { Agent } from \"@/lib/types\";\nimport type { AgentDetailed } from \"@/lib/types/agent-api\";\nimport {\n  Activity,\n  Brain,\n  Clock,\n  MessageSquare,\n  Navigation,\n  Target,\n  Zap,\n} from \"lucide-react\";\nimport type React from \"react\";\n\ninterface AgentActivityTimelineProps {\n  agents: Agent[];\n  agentDetails: Record<string, AgentDetailed>;\n}\n\ninterface IActivityEvent {\n  id: string;\n  agentId: string;\n  agentName: string;\n  type:\n    | \"status_change\"\n    | \"interaction\"\n    | \"goal_update\"\n    | \"learning\"\n    | \"movement\"\n    | \"resource_change\";\n  description: string;\n  timestamp: Date;\n  icon: React.ElementType;\n  color: string;\n}\n\n// Generate mock activity events\nfunction generateMockActivities(\n  agents: Agent[],\n  agentDetails: Record<string, AgentDetailed>,\n): IActivityEvent[] {\n  const activities: IActivityEvent[] = [];\n  const now = new Date();\n\n  const eventTypes = [\n    {\n      type: \"status_change\",\n      icon: Activity,\n      color: \"text-blue-500\",\n      template: \"changed status to\",\n    },\n    {\n      type: \"interaction\",\n      icon: MessageSquare,\n      color: \"text-green-500\",\n      template: \"interacted with\",\n    },\n    {\n      type: \"goal_update\",\n      icon: Target,\n      color: \"text-yellow-500\",\n      template: \"completed goal:\",\n    },\n    {\n      type: \"learning\",\n      icon: Brain,\n      color: \"text-purple-500\",\n      template: \"learned new pattern:\",\n    },\n    {\n      type: \"movement\",\n      icon: Navigation,\n      color: \"text-orange-500\",\n      template: \"moved to position\",\n    },\n    {\n      type: \"resource_change\",\n      icon: Zap,\n      color: \"text-red-500\",\n      template: \"resource update:\",\n    },\n  ] as const;\n\n  // Return empty array if no agents\n  if (agents.length === 0) {\n    return activities;\n  }\n\n  // Generate 20 random activities\n  for (let i = 0; i < 20; i++) {\n    const agent = agents[Math.floor(Math.random() * agents.length)];\n    if (!agent) continue; // Skip if agent is undefined\n\n    const eventType = eventTypes[Math.floor(Math.random() * eventTypes.length)];\n    const minutesAgo = Math.floor(Math.random() * 60);\n\n    let description = \"\";\n    switch (eventType.type) {\n      case \"status_change\":\n        const details = agentDetails[agent.id];\n        description = `${eventType.template} ${details?.status || \"idle\"}`;\n        break;\n      case \"interaction\":\n        const otherAgent = agents.find((a) => a.id !== agent.id);\n        description = `${eventType.template} ${otherAgent?.name || \"unknown\"}`;\n        break;\n      case \"goal_update\":\n        description = `${eventType.template} \"Explore sector 7\"`;\n        break;\n      case \"learning\":\n        description = `${eventType.template} \"Optimal pathfinding\"`;\n        break;\n      case \"movement\":\n        description = `${eventType.template} (${agent.position?.x || 0}, ${agent.position?.y || 0})`;\n        break;\n      case \"resource_change\":\n        description = `${eventType.template} Energy +15%`;\n        break;\n    }\n\n    activities.push({\n      id: `activity-${i}`,\n      agentId: agent.id,\n      agentName: agent.name,\n      type: eventType.type,\n      description,\n      timestamp: new Date(now.getTime() - minutesAgo * 60000),\n      icon: eventType.icon,\n      color: eventType.color,\n    });\n  }\n\n  // Sort by timestamp descending\n  return activities.sort(\n    (a, b) => b.timestamp.getTime() - a.timestamp.getTime(),\n  );\n}\n\nfunction formatTimeAgo(date: Date): string {\n  const now = new Date();\n  const seconds = Math.floor((now.getTime() - date.getTime()) / 1000);\n\n  if (seconds < 60) return `${seconds}s ago`;\n  const minutes = Math.floor(seconds / 60);\n  if (minutes < 60) return `${minutes}m ago`;\n  const hours = Math.floor(minutes / 60);\n  if (hours < 24) return `${hours}h ago`;\n  const days = Math.floor(hours / 24);\n  return `${days}d ago`;\n}\n\nexport default function AgentActivityTimeline({\n  agents,\n  agentDetails,\n}: AgentActivityTimelineProps) {\n  const activities = generateMockActivities(agents, agentDetails);\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      <CardHeader>\n        <CardTitle>Recent Activity</CardTitle>\n      </CardHeader>\n      <CardContent className=\"flex-1 overflow-hidden\">\n        <ScrollArea className=\"h-full pr-4\">\n          <div className=\"space-y-4\">\n            {activities.map((activity) => {\n              const Icon = activity.icon;\n              return (\n                <div key={activity.id} className=\"flex items-start gap-3\">\n                  <div className={`mt-1 ${activity.color}`}>\n                    <Icon className=\"w-4 h-4\" />\n                  </div>\n                  <div className=\"flex-1 space-y-1\">\n                    <div className=\"flex items-center gap-2\">\n                      <span className=\"font-medium\">{activity.agentName}</span>\n                      <span className=\"text-sm text-muted-foreground\">\n                        {activity.description}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <Clock className=\"w-3 h-3 text-muted-foreground\" />\n                      <span className=\"text-xs text-muted-foreground\">\n                        {formatTimeAgo(activity.timestamp)}\n                      </span>\n                      <Badge variant=\"outline\" className=\"text-xs\">\n                        {activity.type.replace(\"_\", \" \")}\n                      </Badge>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </ScrollArea>\n      </CardContent>\n    </div>\n  );\n}\n"],"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","ignoreList":[]}
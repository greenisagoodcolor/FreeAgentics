5ed580a1ba72bea485703d8d0e800ad1
"use strict";

/* istanbul ignore next */
function cov_2igs5nep8f() {
  var path = "/Users/matthewmoroney/builds/FreeAgentics/web/lib/llm-constants.ts";
  var hash = "42c9075fb650506053462418dad0a0dcdc2ffcad";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewmoroney/builds/FreeAgentics/web/lib/llm-constants.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 31
        }
      },
      "3": {
        start: {
          line: 11,
          column: 24
        },
        end: {
          line: 20,
          column: 1
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    f: {
      "0": 0
    },
    b: {},
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matthewmoroney/builds/FreeAgentics/web/lib/llm-constants.ts"],
      sourcesContent: ["export const defaultSettings = {\n  provider: \"openai\",\n  model: \"gpt-4o\",\n  temperature: 0.7,\n  maxTokens: 1024,\n  topP: 0.9,\n  frequencyPenalty: 0,\n  presencePenalty: 0,\n  systemFingerprint: false,\n};\n"],
      names: ["defaultSettings", "provider", "model", "temperature", "maxTokens", "topP", "frequencyPenalty", "presencePenalty", "systemFingerprint"],
      mappings: ";;;;+BAAaA;;;eAAAA;;;AAAN,MAAMA,kBAAkB;IAC7BC,UAAU;IACVC,OAAO;IACPC,aAAa;IACbC,WAAW;IACXC,MAAM;IACNC,kBAAkB;IAClBC,iBAAiB;IACjBC,mBAAmB;AACrB"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "42c9075fb650506053462418dad0a0dcdc2ffcad"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2igs5nep8f = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2igs5nep8f();
cov_2igs5nep8f().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2igs5nep8f().s[1]++;
Object.defineProperty(exports, "defaultSettings", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2igs5nep8f().f[0]++;
    cov_2igs5nep8f().s[2]++;
    return defaultSettings;
  }
});
const defaultSettings =
/* istanbul ignore next */
(cov_2igs5nep8f().s[3]++, {
  provider: "openai",
  model: "gpt-4o",
  temperature: 0.7,
  maxTokens: 1024,
  topP: 0.9,
  frequencyPenalty: 0,
  presencePenalty: 0,
  systemFingerprint: false
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmlnczVuZXA4ZiIsImFjdHVhbENvdmVyYWdlIiwicyIsImRlZmF1bHRTZXR0aW5ncyIsInByb3ZpZGVyIiwibW9kZWwiLCJ0ZW1wZXJhdHVyZSIsIm1heFRva2VucyIsInRvcFAiLCJmcmVxdWVuY3lQZW5hbHR5IiwicHJlc2VuY2VQZW5hbHR5Iiwic3lzdGVtRmluZ2VycHJpbnQiXSwic291cmNlcyI6WyIvVXNlcnMvbWF0dGhld21vcm9uZXkvYnVpbGRzL0ZyZWVBZ2VudGljcy93ZWIvbGliL2xsbS1jb25zdGFudHMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGRlZmF1bHRTZXR0aW5ncyA9IHtcbiAgcHJvdmlkZXI6IFwib3BlbmFpXCIsXG4gIG1vZGVsOiBcImdwdC00b1wiLFxuICB0ZW1wZXJhdHVyZTogMC43LFxuICBtYXhUb2tlbnM6IDEwMjQsXG4gIHRvcFA6IDAuOSxcbiAgZnJlcXVlbmN5UGVuYWx0eTogMCxcbiAgcHJlc2VuY2VQZW5hbHR5OiAwLFxuICBzeXN0ZW1GaW5nZXJwcmludDogZmFsc2UsXG59O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFLUTtJQUFBQSxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxjQUFBO0FBQUFBLGNBQUEsR0FBQUUsQ0FBQTs7Ozs7OytCQUxLOzs7Ozs7V0FBQUMsZUFBQTs7O0FBQU4sTUFBTUEsZUFBQTtBQUFBO0FBQUEsQ0FBQUgsY0FBQSxHQUFBRSxDQUFBLE9BQWtCO0VBQzdCRSxRQUFBLEVBQVU7RUFDVkMsS0FBQSxFQUFPO0VBQ1BDLFdBQUEsRUFBYTtFQUNiQyxTQUFBLEVBQVc7RUFDWEMsSUFBQSxFQUFNO0VBQ05DLGdCQUFBLEVBQWtCO0VBQ2xCQyxlQUFBLEVBQWlCO0VBQ2pCQyxpQkFBQSxFQUFtQjtBQUNyQiIsImlnbm9yZUxpc3QiOltdfQ==
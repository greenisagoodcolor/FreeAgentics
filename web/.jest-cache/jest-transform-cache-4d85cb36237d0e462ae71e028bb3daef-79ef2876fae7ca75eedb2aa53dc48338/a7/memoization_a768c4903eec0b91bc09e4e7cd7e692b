ec8595035b1c394a27e58737f0d210bf
"use client";
"use strict";

/* istanbul ignore next */
function cov_1oi3i9708f() {
  var path = "/Users/matthewmoroney/builds/FreeAgentics/web/lib/performance/memoization.ts";
  var hash = "e220207f11b33f38fb203bc82c031bb71cce6c97";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewmoroney/builds/FreeAgentics/web/lib/performance/memoization.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 37,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 29
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 28
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 35
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 25
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 35
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 31
        }
      },
      "10": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 33
        }
      },
      "11": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 34
        }
      },
      "12": {
        start: {
          line: 38,
          column: 29
        },
        end: {
          line: 38,
          column: 72
        }
      },
      "13": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 51
        }
      },
      "14": {
        start: {
          line: 40,
          column: 39
        },
        end: {
          line: 40,
          column: 51
        }
      },
      "15": {
        start: {
          line: 41,
          column: 28
        },
        end: {
          line: 41,
          column: 41
        }
      },
      "16": {
        start: {
          line: 42,
          column: 27
        },
        end: {
          line: 42,
          column: 40
        }
      },
      "17": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 45,
          column: 20
        }
      },
      "18": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 66
        }
      },
      "19": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "20": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 19
        }
      },
      "21": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "22": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 54,
          column: 10
        }
      },
      "23": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 56,
          column: 53
        }
      },
      "24": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 59,
          column: 5
        }
      },
      "25": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 30
        }
      },
      "26": {
        start: {
          line: 60,
          column: 17
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "27": {
        start: {
          line: 63,
          column: 32
        },
        end: {
          line: 63,
          column: 88
        }
      },
      "28": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 73,
          column: 5
        }
      },
      "29": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 72,
          column: 9
        }
      },
      "30": {
        start: {
          line: 66,
          column: 23
        },
        end: {
          line: 66,
          column: 95
        }
      },
      "31": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 71,
          column: 13
        }
      },
      "32": {
        start: {
          line: 68,
          column: 16
        },
        end: {
          line: 68,
          column: 57
        }
      },
      "33": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 70,
          column: 39
        }
      },
      "34": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 74,
          column: 25
        }
      },
      "35": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 77,
          column: 5
        }
      },
      "36": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 31
        }
      },
      "37": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 78,
          column: 18
        }
      },
      "38": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 31
        }
      },
      "39": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 23
        }
      },
      "40": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 29
        }
      },
      "41": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 31
        }
      },
      "42": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 30
        }
      },
      "43": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 93,
          column: 10
        }
      },
      "44": {
        start: {
          line: 96,
          column: 22
        },
        end: {
          line: 96,
          column: 41
        }
      },
      "45": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "46": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 32
        }
      },
      "47": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 43
        }
      },
      "48": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 33
        }
      },
      "49": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 29
        }
      },
      "50": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "51": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 36
        }
      },
      "52": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 32
        }
      },
      "53": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 43
        }
      },
      "54": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 33
        }
      },
      "55": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 29
        }
      },
      "56": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 28
        }
      },
      "57": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 40
        }
      },
      "58": {
        start: {
          line: 115,
          column: 22
        },
        end: {
          line: 115,
          column: 51
        }
      },
      "59": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 118,
          column: 9
        }
      },
      "60": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 46
        }
      },
      "61": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 35
        }
      },
      "62": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 26
        }
      },
      "63": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 38
        }
      },
      "64": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 29
        }
      },
      "65": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 27
        }
      },
      "66": {
        start: {
          line: 126,
          column: 25
        },
        end: {
          line: 126,
          column: 44
        }
      },
      "67": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 132,
          column: 9
        }
      },
      "68": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 35
        }
      },
      "69": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 44
        }
      },
      "70": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 47
        }
      },
      "71": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 19
        }
      },
      "72": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 136,
          column: 9
        }
      },
      "73": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 42
        }
      },
      "74": {
        start: {
          line: 137,
          column: 22
        },
        end: {
          line: 142,
          column: 9
        }
      },
      "75": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 143,
          column: 35
        }
      },
      "76": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 144,
          column: 35
        }
      },
      "77": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 42
        }
      },
      "78": {
        start: {
          line: 148,
          column: 24
        },
        end: {
          line: 148,
          column: 46
        }
      },
      "79": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 157,
          column: 9
        }
      },
      "80": {
        start: {
          line: 150,
          column: 26
        },
        end: {
          line: 150,
          column: 55
        }
      },
      "81": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 153,
          column: 13
        }
      },
      "82": {
        start: {
          line: 152,
          column: 16
        },
        end: {
          line: 152,
          column: 50
        }
      },
      "83": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 35
        }
      },
      "84": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 46
        }
      },
      "85": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 156,
          column: 52
        }
      },
      "86": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 158,
          column: 23
        }
      },
      "87": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 164,
          column: 9
        }
      },
      "88": {
        start: {
          line: 162,
          column: 27
        },
        end: {
          line: 162,
          column: 46
        }
      },
      "89": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 163,
          column: 40
        }
      },
      "90": {
        start: {
          line: 167,
          column: 22
        },
        end: {
          line: 167,
          column: 57
        }
      },
      "91": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 168,
          column: 75
        }
      },
      "92": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 171,
          column: 27
        }
      },
      "93": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 30
        }
      },
      "94": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 179,
          column: 10
        }
      },
      "95": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 184,
          column: 10
        }
      },
      "96": {
        start: {
          line: 188,
          column: 20
        },
        end: {
          line: 188,
          column: 30
        }
      },
      "97": {
        start: {
          line: 189,
          column: 22
        },
        end: {
          line: 189,
          column: 23
        }
      },
      "98": {
        start: {
          line: 190,
          column: 24
        },
        end: {
          line: 190,
          column: 56
        }
      },
      "99": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 196,
          column: 9
        }
      },
      "100": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 195,
          column: 13
        }
      },
      "101": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 193,
          column: 40
        }
      },
      "102": {
        start: {
          line: 194,
          column: 16
        },
        end: {
          line: 194,
          column: 26
        }
      },
      "103": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 197,
          column: 23
        }
      },
      "104": {
        start: {
          line: 201,
          column: 23
        },
        end: {
          line: 201,
          column: 61
        }
      },
      "105": {
        start: {
          line: 202,
          column: 25
        },
        end: {
          line: 202,
          column: 62
        }
      },
      "106": {
        start: {
          line: 204,
          column: 16
        },
        end: {
          line: 204,
          column: 58
        }
      },
      "107": {
        start: {
          line: 206,
          column: 23
        },
        end: {
          line: 206,
          column: 43
        }
      },
      "108": {
        start: {
          line: 207,
          column: 4
        },
        end: {
          line: 223,
          column: 7
        }
      },
      "109": {
        start: {
          line: 209,
          column: 23
        },
        end: {
          line: 209,
          column: 48
        }
      },
      "110": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 212,
          column: 9
        }
      },
      "111": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 211,
          column: 26
        }
      },
      "112": {
        start: {
          line: 214,
          column: 23
        },
        end: {
          line: 214,
          column: 32
        }
      },
      "113": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 216,
          column: 42
        }
      },
      "114": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 217,
          column: 22
        }
      },
      "115": {
        start: {
          line: 226,
          column: 16
        },
        end: {
          line: 226,
          column: 62
        }
      },
      "116": {
        start: {
          line: 228,
          column: 23
        },
        end: {
          line: 228,
          column: 43
        }
      },
      "117": {
        start: {
          line: 229,
          column: 4
        },
        end: {
          line: 251,
          column: 7
        }
      },
      "118": {
        start: {
          line: 230,
          column: 23
        },
        end: {
          line: 230,
          column: 55
        }
      },
      "119": {
        start: {
          line: 232,
          column: 23
        },
        end: {
          line: 232,
          column: 51
        }
      },
      "120": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 235,
          column: 9
        }
      },
      "121": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 234,
          column: 26
        }
      },
      "122": {
        start: {
          line: 237,
          column: 23
        },
        end: {
          line: 237,
          column: 40
        }
      },
      "123": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 244,
          column: 9
        }
      },
      "124": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 240,
          column: 35
        }
      },
      "125": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 241,
          column: 49
        }
      },
      "126": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 245,
          column: 22
        }
      },
      "127": {
        start: {
          line: 254,
          column: 102
        },
        end: {
          line: 254,
          column: 108
        }
      },
      "128": {
        start: {
          line: 254,
          column: 36
        },
        end: {
          line: 254,
          column: 57
        }
      },
      "129": {
        start: {
          line: 255,
          column: 18
        },
        end: {
          line: 255,
          column: 62
        }
      },
      "130": {
        start: {
          line: 256,
          column: 30
        },
        end: {
          line: 272,
          column: 6
        }
      },
      "131": {
        start: {
          line: 257,
          column: 20
        },
        end: {
          line: 257,
          column: 39
        }
      },
      "132": {
        start: {
          line: 259,
          column: 23
        },
        end: {
          line: 259,
          column: 37
        }
      },
      "133": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 262,
          column: 9
        }
      },
      "134": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 261,
          column: 26
        }
      },
      "135": {
        start: {
          line: 264,
          column: 24
        },
        end: {
          line: 264,
          column: 62
        }
      },
      "136": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 265,
          column: 32
        }
      },
      "137": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 266,
          column: 23
        }
      },
      "138": {
        start: {
          line: 269,
          column: 24
        },
        end: {
          line: 269,
          column: 47
        }
      },
      "139": {
        start: {
          line: 270,
          column: 24
        },
        end: {
          line: 270,
          column: 47
        }
      },
      "140": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 271,
          column: 35
        }
      },
      "141": {
        start: {
          line: 273,
          column: 4
        },
        end: {
          line: 273,
          column: 107
        }
      },
      "142": {
        start: {
          line: 274,
          column: 4
        },
        end: {
          line: 274,
          column: 29
        }
      },
      "143": {
        start: {
          line: 277,
          column: 30
        },
        end: {
          line: 277,
          column: 59
        }
      },
      "144": {
        start: {
          line: 278,
          column: 21
        },
        end: {
          line: 280,
          column: 6
        }
      },
      "145": {
        start: {
          line: 281,
          column: 25
        },
        end: {
          line: 302,
          column: 10
        }
      },
      "146": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 282,
          column: 58
        }
      },
      "147": {
        start: {
          line: 282,
          column: 51
        },
        end: {
          line: 282,
          column: 58
        }
      },
      "148": {
        start: {
          line: 283,
          column: 24
        },
        end: {
          line: 285,
          column: 9
        }
      },
      "149": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 286,
          column: 38
        }
      },
      "150": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 297,
          column: 11
        }
      },
      "151": {
        start: {
          line: 288,
          column: 31
        },
        end: {
          line: 288,
          column: 40
        }
      },
      "152": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 295,
          column: 13
        }
      },
      "153": {
        start: {
          line: 290,
          column: 16
        },
        end: {
          line: 294,
          column: 17
        }
      },
      "154": {
        start: {
          line: 291,
          column: 20
        },
        end: {
          line: 291,
          column: 56
        }
      },
      "155": {
        start: {
          line: 293,
          column: 20
        },
        end: {
          line: 293,
          column: 42
        }
      },
      "156": {
        start: {
          line: 296,
          column: 12
        },
        end: {
          line: 296,
          column: 32
        }
      },
      "157": {
        start: {
          line: 298,
          column: 8
        },
        end: {
          line: 301,
          column: 9
        }
      },
      "158": {
        start: {
          line: 299,
          column: 12
        },
        end: {
          line: 299,
          column: 53
        }
      },
      "159": {
        start: {
          line: 300,
          column: 12
        },
        end: {
          line: 300,
          column: 51
        }
      },
      "160": {
        start: {
          line: 303,
          column: 28
        },
        end: {
          line: 312,
          column: 6
        }
      },
      "161": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 304,
          column: 47
        }
      },
      "162": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 307,
          column: 9
        }
      },
      "163": {
        start: {
          line: 306,
          column: 12
        },
        end: {
          line: 306,
          column: 53
        }
      },
      "164": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 308,
          column: 74
        }
      },
      "165": {
        start: {
          line: 313,
          column: 23
        },
        end: {
          line: 321,
          column: 6
        }
      },
      "166": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 317,
          column: 9
        }
      },
      "167": {
        start: {
          line: 315,
          column: 12
        },
        end: {
          line: 315,
          column: 53
        }
      },
      "168": {
        start: {
          line: 316,
          column: 12
        },
        end: {
          line: 316,
          column: 51
        }
      },
      "169": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 318,
          column: 23
        }
      },
      "170": {
        start: {
          line: 323,
          column: 4
        },
        end: {
          line: 330,
          column: 11
        }
      },
      "171": {
        start: {
          line: 324,
          column: 32
        },
        end: {
          line: 324,
          column: 48
        }
      },
      "172": {
        start: {
          line: 325,
          column: 8
        },
        end: {
          line: 329,
          column: 10
        }
      },
      "173": {
        start: {
          line: 326,
          column: 12
        },
        end: {
          line: 328,
          column: 13
        }
      },
      "174": {
        start: {
          line: 327,
          column: 16
        },
        end: {
          line: 327,
          column: 56
        }
      },
      "175": {
        start: {
          line: 331,
          column: 4
        },
        end: {
          line: 335,
          column: 6
        }
      },
      "176": {
        start: {
          line: 338,
          column: 75
        },
        end: {
          line: 338,
          column: 81
        }
      },
      "177": {
        start: {
          line: 339,
          column: 38
        },
        end: {
          line: 339,
          column: 61
        }
      },
      "178": {
        start: {
          line: 340,
          column: 18
        },
        end: {
          line: 340,
          column: 66
        }
      },
      "179": {
        start: {
          line: 341,
          column: 25
        },
        end: {
          line: 354,
          column: 6
        }
      },
      "180": {
        start: {
          line: 342,
          column: 22
        },
        end: {
          line: 342,
          column: 56
        }
      },
      "181": {
        start: {
          line: 343,
          column: 20
        },
        end: {
          line: 343,
          column: 101
        }
      },
      "182": {
        start: {
          line: 344,
          column: 8
        },
        end: {
          line: 347,
          column: 10
        }
      },
      "183": {
        start: {
          line: 355,
          column: 25
        },
        end: {
          line: 376,
          column: 6
        }
      },
      "184": {
        start: {
          line: 356,
          column: 25
        },
        end: {
          line: 356,
          column: 27
        }
      },
      "185": {
        start: {
          line: 357,
          column: 8
        },
        end: {
          line: 370,
          column: 9
        }
      },
      "186": {
        start: {
          line: 357,
          column: 20
        },
        end: {
          line: 357,
          column: 38
        }
      },
      "187": {
        start: {
          line: 358,
          column: 25
        },
        end: {
          line: 358,
          column: 33
        }
      },
      "188": {
        start: {
          line: 359,
          column: 29
        },
        end: {
          line: 359,
          column: 64
        }
      },
      "189": {
        start: {
          line: 360,
          column: 23
        },
        end: {
          line: 360,
          column: 50
        }
      },
      "190": {
        start: {
          line: 361,
          column: 12
        },
        end: {
          line: 364,
          column: 13
        }
      },
      "191": {
        start: {
          line: 362,
          column: 16
        },
        end: {
          line: 362,
          column: 43
        }
      },
      "192": {
        start: {
          line: 363,
          column: 16
        },
        end: {
          line: 363,
          column: 50
        }
      },
      "193": {
        start: {
          line: 365,
          column: 12
        },
        end: {
          line: 369,
          column: 15
        }
      },
      "194": {
        start: {
          line: 371,
          column: 8
        },
        end: {
          line: 371,
          column: 24
        }
      },
      "195": {
        start: {
          line: 377,
          column: 25
        },
        end: {
          line: 379,
          column: 10
        }
      },
      "196": {
        start: {
          line: 378,
          column: 8
        },
        end: {
          line: 378,
          column: 52
        }
      },
      "197": {
        start: {
          line: 380,
          column: 4
        },
        end: {
          line: 386,
          column: 6
        }
      },
      "198": {
        start: {
          line: 388,
          column: 21
        },
        end: {
          line: 412,
          column: 1
        }
      },
      "199": {
        start: {
          line: 389,
          column: 32
        },
        end: {
          line: 389,
          column: 57
        }
      },
      "200": {
        start: {
          line: 390,
          column: 34
        },
        end: {
          line: 390,
          column: 61
        }
      },
      "201": {
        start: {
          line: 391,
          column: 29
        },
        end: {
          line: 391,
          column: 51
        }
      },
      "202": {
        start: {
          line: 392,
          column: 31
        },
        end: {
          line: 392,
          column: 55
        }
      },
      "203": {
        start: {
          line: 394,
          column: 33
        },
        end: {
          line: 394,
          column: 57
        }
      },
      "204": {
        start: {
          line: 395,
          column: 35
        },
        end: {
          line: 395,
          column: 61
        }
      },
      "205": {
        start: {
          line: 396,
          column: 8
        },
        end: {
          line: 399,
          column: 10
        }
      },
      "206": {
        start: {
          line: 402,
          column: 26
        },
        end: {
          line: 402,
          column: 51
        }
      },
      "207": {
        start: {
          line: 403,
          column: 27
        },
        end: {
          line: 403,
          column: 54
        }
      },
      "208": {
        start: {
          line: 404,
          column: 8
        },
        end: {
          line: 410,
          column: 10
        }
      },
      "209": {
        start: {
          line: 413,
          column: 28
        },
        end: {
          line: 440,
          column: 1
        }
      },
      "210": {
        start: {
          line: 415,
          column: 8
        },
        end: {
          line: 415,
          column: 62
        }
      },
      "211": {
        start: {
          line: 416,
          column: 8
        },
        end: {
          line: 416,
          column: 57
        }
      },
      "212": {
        start: {
          line: 417,
          column: 8
        },
        end: {
          line: 417,
          column: 27
        }
      },
      "213": {
        start: {
          line: 420,
          column: 8
        },
        end: {
          line: 426,
          column: 10
        }
      },
      "214": {
        start: {
          line: 421,
          column: 26
        },
        end: {
          line: 421,
          column: 43
        }
      },
      "215": {
        start: {
          line: 422,
          column: 27
        },
        end: {
          line: 422,
          column: 38
        }
      },
      "216": {
        start: {
          line: 423,
          column: 24
        },
        end: {
          line: 423,
          column: 41
        }
      },
      "217": {
        start: {
          line: 424,
          column: 12
        },
        end: {
          line: 424,
          column: 70
        }
      },
      "218": {
        start: {
          line: 425,
          column: 12
        },
        end: {
          line: 425,
          column: 26
        }
      },
      "219": {
        start: {
          line: 429,
          column: 34
        },
        end: {
          line: 436,
          column: 10
        }
      },
      "220": {
        start: {
          line: 430,
          column: 32
        },
        end: {
          line: 430,
          column: 49
        }
      },
      "221": {
        start: {
          line: 431,
          column: 12
        },
        end: {
          line: 434,
          column: 15
        }
      },
      "222": {
        start: {
          line: 432,
          column: 34
        },
        end: {
          line: 432,
          column: 51
        }
      },
      "223": {
        start: {
          line: 433,
          column: 16
        },
        end: {
          line: 433,
          column: 105
        }
      },
      "224": {
        start: {
          line: 435,
          column: 12
        },
        end: {
          line: 435,
          column: 58
        }
      },
      "225": {
        start: {
          line: 437,
          column: 8
        },
        end: {
          line: 437,
          column: 69
        }
      },
      "226": {
        start: {
          line: 438,
          column: 8
        },
        end: {
          line: 438,
          column: 33
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 19
          },
          end: {
            line: 13,
            column: 20
          }
        },
        loc: {
          start: {
            line: 13,
            column: 30
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 18
          },
          end: {
            line: 16,
            column: 19
          }
        },
        loc: {
          start: {
            line: 16,
            column: 29
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 25
          },
          end: {
            line: 19,
            column: 26
          }
        },
        loc: {
          start: {
            line: 19,
            column: 36
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 15
          },
          end: {
            line: 22,
            column: 16
          }
        },
        loc: {
          start: {
            line: 22,
            column: 26
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 25
          },
          end: {
            line: 25,
            column: 26
          }
        },
        loc: {
          start: {
            line: 25,
            column: 36
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 28,
            column: 21
          },
          end: {
            line: 28,
            column: 22
          }
        },
        loc: {
          start: {
            line: 28,
            column: 32
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 31,
            column: 23
          },
          end: {
            line: 31,
            column: 24
          }
        },
        loc: {
          start: {
            line: 31,
            column: 34
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 34,
            column: 24
          },
          end: {
            line: 34,
            column: 25
          }
        },
        loc: {
          start: {
            line: 34,
            column: 35
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 34
      },
      "9": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 39,
            column: 9
          },
          end: {
            line: 39,
            column: 33
          }
        },
        loc: {
          start: {
            line: 39,
            column: 47
          },
          end: {
            line: 46,
            column: 1
          }
        },
        line: 39
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 43,
            column: 39
          },
          end: {
            line: 43,
            column: 40
          }
        },
        loc: {
          start: {
            line: 43,
            column: 61
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 43
      },
      "11": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 47,
            column: 9
          },
          end: {
            line: 47,
            column: 34
          }
        },
        loc: {
          start: {
            line: 47,
            column: 53
          },
          end: {
            line: 79,
            column: 1
          }
        },
        line: 47
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        },
        loc: {
          start: {
            line: 81,
            column: 64
          },
          end: {
            line: 94,
            column: 5
          }
        },
        line: 81
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        },
        loc: {
          start: {
            line: 95,
            column: 13
          },
          end: {
            line: 124,
            column: 5
          }
        },
        line: 95
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        },
        loc: {
          start: {
            line: 125,
            column: 20
          },
          end: {
            line: 146,
            column: 5
          }
        },
        line: 125
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 147,
            column: 4
          },
          end: {
            line: 147,
            column: 5
          }
        },
        loc: {
          start: {
            line: 147,
            column: 24
          },
          end: {
            line: 159,
            column: 5
          }
        },
        line: 147
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 160,
            column: 4
          },
          end: {
            line: 160,
            column: 5
          }
        },
        loc: {
          start: {
            line: 160,
            column: 29
          },
          end: {
            line: 165,
            column: 5
          }
        },
        line: 160
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 166,
            column: 4
          },
          end: {
            line: 166,
            column: 5
          }
        },
        loc: {
          start: {
            line: 166,
            column: 20
          },
          end: {
            line: 169,
            column: 5
          }
        },
        line: 166
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 170,
            column: 4
          },
          end: {
            line: 170,
            column: 5
          }
        },
        loc: {
          start: {
            line: 170,
            column: 12
          },
          end: {
            line: 180,
            column: 5
          }
        },
        line: 170
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 181,
            column: 4
          },
          end: {
            line: 181,
            column: 5
          }
        },
        loc: {
          start: {
            line: 181,
            column: 15
          },
          end: {
            line: 185,
            column: 5
          }
        },
        line: 181
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 187,
            column: 4
          },
          end: {
            line: 187,
            column: 5
          }
        },
        loc: {
          start: {
            line: 187,
            column: 14
          },
          end: {
            line: 198,
            column: 5
          }
        },
        line: 187
      },
      "21": {
        name: "useAdvancedMemo",
        decl: {
          start: {
            line: 203,
            column: 9
          },
          end: {
            line: 203,
            column: 24
          }
        },
        loc: {
          start: {
            line: 203,
            column: 50
          },
          end: {
            line: 224,
            column: 1
          }
        },
        line: 203
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 207,
            column: 31
          },
          end: {
            line: 207,
            column: 32
          }
        },
        loc: {
          start: {
            line: 207,
            column: 35
          },
          end: {
            line: 219,
            column: 5
          }
        },
        line: 207
      },
      "23": {
        name: "useAdvancedCallback",
        decl: {
          start: {
            line: 225,
            column: 9
          },
          end: {
            line: 225,
            column: 28
          }
        },
        loc: {
          start: {
            line: 225,
            column: 55
          },
          end: {
            line: 252,
            column: 1
          }
        },
        line: 225
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 229,
            column: 35
          },
          end: {
            line: 229,
            column: 36
          }
        },
        loc: {
          start: {
            line: 229,
            column: 46
          },
          end: {
            line: 247,
            column: 5
          }
        },
        line: 229
      },
      "25": {
        name: "smartMemo",
        decl: {
          start: {
            line: 253,
            column: 9
          },
          end: {
            line: 253,
            column: 18
          }
        },
        loc: {
          start: {
            line: 253,
            column: 43
          },
          end: {
            line: 275,
            column: 1
          }
        },
        line: 253
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 254,
            column: 27
          },
          end: {
            line: 254,
            column: 28
          }
        },
        loc: {
          start: {
            line: 254,
            column: 36
          },
          end: {
            line: 254,
            column: 57
          }
        },
        line: 254
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 256,
            column: 47
          },
          end: {
            line: 256,
            column: 48
          }
        },
        loc: {
          start: {
            line: 256,
            column: 56
          },
          end: {
            line: 267,
            column: 5
          }
        },
        line: 256
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 267,
            column: 7
          },
          end: {
            line: 267,
            column: 8
          }
        },
        loc: {
          start: {
            line: 267,
            column: 31
          },
          end: {
            line: 272,
            column: 5
          }
        },
        line: 267
      },
      "29": {
        name: "useBatchedUpdates",
        decl: {
          start: {
            line: 276,
            column: 9
          },
          end: {
            line: 276,
            column: 26
          }
        },
        loc: {
          start: {
            line: 276,
            column: 58
          },
          end: {
            line: 336,
            column: 1
          }
        },
        line: 276
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 281,
            column: 49
          },
          end: {
            line: 281,
            column: 50
          }
        },
        loc: {
          start: {
            line: 281,
            column: 53
          },
          end: {
            line: 302,
            column: 5
          }
        },
        line: 281
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 287,
            column: 17
          },
          end: {
            line: 287,
            column: 18
          }
        },
        loc: {
          start: {
            line: 287,
            column: 30
          },
          end: {
            line: 297,
            column: 9
          }
        },
        line: 287
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 303,
            column: 52
          },
          end: {
            line: 303,
            column: 53
          }
        },
        loc: {
          start: {
            line: 303,
            column: 63
          },
          end: {
            line: 309,
            column: 5
          }
        },
        line: 303
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 313,
            column: 47
          },
          end: {
            line: 313,
            column: 48
          }
        },
        loc: {
          start: {
            line: 313,
            column: 51
          },
          end: {
            line: 319,
            column: 5
          }
        },
        line: 313
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 323,
            column: 21
          },
          end: {
            line: 323,
            column: 22
          }
        },
        loc: {
          start: {
            line: 323,
            column: 25
          },
          end: {
            line: 330,
            column: 5
          }
        },
        line: 323
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 325,
            column: 15
          },
          end: {
            line: 325,
            column: 16
          }
        },
        loc: {
          start: {
            line: 325,
            column: 19
          },
          end: {
            line: 329,
            column: 9
          }
        },
        line: 325
      },
      "36": {
        name: "useVirtualizedList",
        decl: {
          start: {
            line: 337,
            column: 9
          },
          end: {
            line: 337,
            column: 27
          }
        },
        loc: {
          start: {
            line: 337,
            column: 55
          },
          end: {
            line: 387,
            column: 1
          }
        },
        line: 337
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 341,
            column: 45
          },
          end: {
            line: 341,
            column: 46
          }
        },
        loc: {
          start: {
            line: 341,
            column: 49
          },
          end: {
            line: 348,
            column: 5
          }
        },
        line: 341
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 355,
            column: 45
          },
          end: {
            line: 355,
            column: 46
          }
        },
        loc: {
          start: {
            line: 355,
            column: 49
          },
          end: {
            line: 372,
            column: 5
          }
        },
        line: 355
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 377,
            column: 49
          },
          end: {
            line: 377,
            column: 50
          }
        },
        loc: {
          start: {
            line: 377,
            column: 58
          },
          end: {
            line: 379,
            column: 5
          }
        },
        line: 377
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 389,
            column: 28
          },
          end: {
            line: 389,
            column: 29
          }
        },
        loc: {
          start: {
            line: 389,
            column: 32
          },
          end: {
            line: 389,
            column: 57
          }
        },
        line: 389
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 390,
            column: 30
          },
          end: {
            line: 390,
            column: 31
          }
        },
        loc: {
          start: {
            line: 390,
            column: 34
          },
          end: {
            line: 390,
            column: 61
          }
        },
        line: 390
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 391,
            column: 25
          },
          end: {
            line: 391,
            column: 26
          }
        },
        loc: {
          start: {
            line: 391,
            column: 29
          },
          end: {
            line: 391,
            column: 51
          }
        },
        line: 391
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 392,
            column: 27
          },
          end: {
            line: 392,
            column: 28
          }
        },
        loc: {
          start: {
            line: 392,
            column: 31
          },
          end: {
            line: 392,
            column: 55
          }
        },
        line: 392
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 393,
            column: 20
          },
          end: {
            line: 393,
            column: 21
          }
        },
        loc: {
          start: {
            line: 393,
            column: 24
          },
          end: {
            line: 400,
            column: 5
          }
        },
        line: 393
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 401,
            column: 24
          },
          end: {
            line: 401,
            column: 25
          }
        },
        loc: {
          start: {
            line: 401,
            column: 28
          },
          end: {
            line: 411,
            column: 5
          }
        },
        line: 401
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 414,
            column: 19
          },
          end: {
            line: 414,
            column: 20
          }
        },
        loc: {
          start: {
            line: 414,
            column: 23
          },
          end: {
            line: 418,
            column: 5
          }
        },
        line: 414
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 419,
            column: 23
          },
          end: {
            line: 419,
            column: 24
          }
        },
        loc: {
          start: {
            line: 419,
            column: 47
          },
          end: {
            line: 427,
            column: 5
          }
        },
        line: 419
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 420,
            column: 15
          },
          end: {
            line: 420,
            column: 16
          }
        },
        loc: {
          start: {
            line: 420,
            column: 26
          },
          end: {
            line: 426,
            column: 9
          }
        },
        line: 420
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 428,
            column: 22
          },
          end: {
            line: 428,
            column: 23
          }
        },
        loc: {
          start: {
            line: 428,
            column: 50
          },
          end: {
            line: 439,
            column: 5
          }
        },
        line: 428
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 429,
            column: 51
          },
          end: {
            line: 429,
            column: 52
          }
        },
        loc: {
          start: {
            line: 429,
            column: 60
          },
          end: {
            line: 436,
            column: 9
          }
        },
        line: 429
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 431,
            column: 29
          },
          end: {
            line: 431,
            column: 30
          }
        },
        loc: {
          start: {
            line: 431,
            column: 33
          },
          end: {
            line: 434,
            column: 13
          }
        },
        line: 431
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 40,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 40,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "1": {
        loc: {
          start: {
            line: 44,
            column: 15
          },
          end: {
            line: 44,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 44,
            column: 29
          },
          end: {
            line: 44,
            column: 45
          }
        }, {
          start: {
            line: 44,
            column: 48
          },
          end: {
            line: 44,
            column: 65
          }
        }],
        line: 44
      },
      "2": {
        loc: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "3": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 48,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 48,
            column: 20
          }
        }, {
          start: {
            line: 48,
            column: 24
          },
          end: {
            line: 48,
            column: 27
          }
        }, {
          start: {
            line: 48,
            column: 31
          },
          end: {
            line: 48,
            column: 45
          }
        }],
        line: 48
      },
      "4": {
        loc: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "5": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 51,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 51,
            column: 20
          }
        }, {
          start: {
            line: 51,
            column: 24
          },
          end: {
            line: 51,
            column: 47
          }
        }, {
          start: {
            line: 51,
            column: 51
          },
          end: {
            line: 51,
            column: 76
          }
        }],
        line: 51
      },
      "6": {
        loc: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "7": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 57,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 57,
            column: 13
          }
        }, {
          start: {
            line: 57,
            column: 17
          },
          end: {
            line: 57,
            column: 31
          }
        }],
        line: 57
      },
      "8": {
        loc: {
          start: {
            line: 63,
            column: 32
          },
          end: {
            line: 63,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 32
          },
          end: {
            line: 63,
            column: 53
          }
        }, {
          start: {
            line: 63,
            column: 57
          },
          end: {
            line: 63,
            column: 88
          }
        }],
        line: 63
      },
      "9": {
        loc: {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "10": {
        loc: {
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 65,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 65,
            column: 29
          }
        }, {
          start: {
            line: 65,
            column: 33
          },
          end: {
            line: 65,
            column: 79
          }
        }],
        line: 65
      },
      "11": {
        loc: {
          start: {
            line: 66,
            column: 23
          },
          end: {
            line: 66,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 66,
            column: 47
          },
          end: {
            line: 66,
            column: 88
          }
        }, {
          start: {
            line: 66,
            column: 91
          },
          end: {
            line: 66,
            column: 95
          }
        }],
        line: 66
      },
      "12": {
        loc: {
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 71,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 71,
            column: 13
          }
        }, {
          start: {
            line: 69,
            column: 19
          },
          end: {
            line: 71,
            column: 13
          }
        }],
        line: 67
      },
      "13": {
        loc: {
          start: {
            line: 67,
            column: 16
          },
          end: {
            line: 67,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 16
          },
          end: {
            line: 67,
            column: 20
          }
        }, {
          start: {
            line: 67,
            column: 25
          },
          end: {
            line: 67,
            column: 33
          }
        }, {
          start: {
            line: 67,
            column: 37
          },
          end: {
            line: 67,
            column: 45
          }
        }],
        line: 67
      },
      "14": {
        loc: {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 77,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 77,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "15": {
        loc: {
          start: {
            line: 81,
            column: 16
          },
          end: {
            line: 81,
            column: 29
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 81,
            column: 26
          },
          end: {
            line: 81,
            column: 29
          }
        }],
        line: 81
      },
      "16": {
        loc: {
          start: {
            line: 81,
            column: 31
          },
          end: {
            line: 81,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 81,
            column: 37
          },
          end: {
            line: 81,
            column: 50
          }
        }],
        line: 81
      },
      "17": {
        loc: {
          start: {
            line: 81,
            column: 52
          },
          end: {
            line: 81,
            column: 63
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 81,
            column: 61
          },
          end: {
            line: 81,
            column: 63
          }
        }],
        line: 81
      },
      "18": {
        loc: {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "19": {
        loc: {
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "20": {
        loc: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "21": {
        loc: {
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 132,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 132,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "22": {
        loc: {
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "23": {
        loc: {
          start: {
            line: 149,
            column: 8
          },
          end: {
            line: 157,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 8
          },
          end: {
            line: 157,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 149
      },
      "24": {
        loc: {
          start: {
            line: 151,
            column: 12
          },
          end: {
            line: 153,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 12
          },
          end: {
            line: 153,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      },
      "25": {
        loc: {
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 164,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 164,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "26": {
        loc: {
          start: {
            line: 168,
            column: 29
          },
          end: {
            line: 168,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 168,
            column: 41
          },
          end: {
            line: 168,
            column: 70
          }
        }, {
          start: {
            line: 168,
            column: 73
          },
          end: {
            line: 168,
            column: 74
          }
        }],
        line: 168
      },
      "27": {
        loc: {
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 195,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 195,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "28": {
        loc: {
          start: {
            line: 204,
            column: 16
          },
          end: {
            line: 204,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 204,
            column: 16
          },
          end: {
            line: 204,
            column: 24
          }
        }, {
          start: {
            line: 204,
            column: 28
          },
          end: {
            line: 204,
            column: 58
          }
        }],
        line: 204
      },
      "29": {
        loc: {
          start: {
            line: 210,
            column: 8
          },
          end: {
            line: 212,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 210,
            column: 8
          },
          end: {
            line: 212,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 210
      },
      "30": {
        loc: {
          start: {
            line: 226,
            column: 16
          },
          end: {
            line: 226,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 226,
            column: 16
          },
          end: {
            line: 226,
            column: 24
          }
        }, {
          start: {
            line: 226,
            column: 28
          },
          end: {
            line: 226,
            column: 62
          }
        }],
        line: 226
      },
      "31": {
        loc: {
          start: {
            line: 233,
            column: 8
          },
          end: {
            line: 235,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 233,
            column: 8
          },
          end: {
            line: 235,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 233
      },
      "32": {
        loc: {
          start: {
            line: 253,
            column: 30
          },
          end: {
            line: 253,
            column: 41
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 253,
            column: 39
          },
          end: {
            line: 253,
            column: 41
          }
        }],
        line: 253
      },
      "33": {
        loc: {
          start: {
            line: 254,
            column: 12
          },
          end: {
            line: 254,
            column: 57
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 254,
            column: 27
          },
          end: {
            line: 254,
            column: 57
          }
        }],
        line: 254
      },
      "34": {
        loc: {
          start: {
            line: 254,
            column: 59
          },
          end: {
            line: 254,
            column: 76
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 254,
            column: 74
          },
          end: {
            line: 254,
            column: 76
          }
        }],
        line: 254
      },
      "35": {
        loc: {
          start: {
            line: 254,
            column: 78
          },
          end: {
            line: 254,
            column: 97
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 254,
            column: 84
          },
          end: {
            line: 254,
            column: 97
          }
        }],
        line: 254
      },
      "36": {
        loc: {
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 262,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 262,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 260
      },
      "37": {
        loc: {
          start: {
            line: 273,
            column: 49
          },
          end: {
            line: 273,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 273,
            column: 49
          },
          end: {
            line: 273,
            column: 70
          }
        }, {
          start: {
            line: 273,
            column: 74
          },
          end: {
            line: 273,
            column: 88
          }
        }, {
          start: {
            line: 273,
            column: 92
          },
          end: {
            line: 273,
            column: 103
          }
        }],
        line: 273
      },
      "38": {
        loc: {
          start: {
            line: 276,
            column: 41
          },
          end: {
            line: 276,
            column: 56
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 276,
            column: 54
          },
          end: {
            line: 276,
            column: 56
          }
        }],
        line: 276
      },
      "39": {
        loc: {
          start: {
            line: 282,
            column: 8
          },
          end: {
            line: 282,
            column: 58
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 282,
            column: 8
          },
          end: {
            line: 282,
            column: 58
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 282
      },
      "40": {
        loc: {
          start: {
            line: 290,
            column: 16
          },
          end: {
            line: 294,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 290,
            column: 16
          },
          end: {
            line: 294,
            column: 17
          }
        }, {
          start: {
            line: 292,
            column: 23
          },
          end: {
            line: 294,
            column: 17
          }
        }],
        line: 290
      },
      "41": {
        loc: {
          start: {
            line: 298,
            column: 8
          },
          end: {
            line: 301,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 298,
            column: 8
          },
          end: {
            line: 301,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 298
      },
      "42": {
        loc: {
          start: {
            line: 305,
            column: 8
          },
          end: {
            line: 307,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 305,
            column: 8
          },
          end: {
            line: 307,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 305
      },
      "43": {
        loc: {
          start: {
            line: 314,
            column: 8
          },
          end: {
            line: 317,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 314,
            column: 8
          },
          end: {
            line: 317,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 314
      },
      "44": {
        loc: {
          start: {
            line: 326,
            column: 12
          },
          end: {
            line: 328,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 326,
            column: 12
          },
          end: {
            line: 328,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 326
      },
      "45": {
        loc: {
          start: {
            line: 338,
            column: 41
          },
          end: {
            line: 338,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 338,
            column: 52
          },
          end: {
            line: 338,
            column: 53
          }
        }],
        line: 338
      },
      "46": {
        loc: {
          start: {
            line: 338,
            column: 55
          },
          end: {
            line: 338,
            column: 70
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 338,
            column: 67
          },
          end: {
            line: 338,
            column: 70
          }
        }],
        line: 338
      },
      "47": {
        loc: {
          start: {
            line: 361,
            column: 12
          },
          end: {
            line: 364,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 361,
            column: 12
          },
          end: {
            line: 364,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 361
      },
      "48": {
        loc: {
          start: {
            line: 419,
            column: 28
          },
          end: {
            line: 419,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 419,
            column: 36
          },
          end: {
            line: 419,
            column: 44
          }
        }],
        line: 419
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0],
      "17": [0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0],
      "33": [0],
      "34": [0],
      "35": [0],
      "36": [0, 0],
      "37": [0, 0, 0],
      "38": [0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0],
      "46": [0],
      "47": [0, 0],
      "48": [0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matthewmoroney/builds/FreeAgentics/web/lib/performance/memoization.ts"],
      sourcesContent: ["\"use client\";\n\nimport * as React from \"react\";\nimport { memo, useMemo, useCallback, useRef, DependencyList } from \"react\";\n\nexport interface MemoizationConfig {\n  maxCacheSize?: number;\n  ttl?: number; // Time to live in milliseconds\n  keyGenerator?: (...args: any[]) => string;\n  onCacheHit?: (key: string) => void;\n  onCacheMiss?: (key: string) => void;\n  onCacheEvict?: (key: string, reason: \"size\" | \"ttl\") => void;\n}\n\nexport interface CacheEntry<T> {\n  value: T;\n  timestamp: number;\n  accessCount: number;\n  lastAccessed: number;\n}\n\nexport interface CacheStats {\n  hits: number;\n  misses: number;\n  evictions: number;\n  size: number;\n  hitRate: number;\n}\n\n// Advanced LRU cache with TTL support\nexport class AdvancedCache<T> {\n  private cache = new Map<string, CacheEntry<T>>();\n  private accessOrder: string[] = [];\n  private stats: CacheStats = {\n    hits: 0,\n    misses: 0,\n    evictions: 0,\n    size: 0,\n    hitRate: 0,\n  };\n\n  constructor(\n    private maxSize: number = 100,\n    private ttl: number = 5 * 60 * 1000, // 5 minutes default\n    private config: MemoizationConfig = {},\n  ) {}\n\n  get(key: string): T | undefined {\n    const entry = this.cache.get(key);\n\n    if (!entry) {\n      this.stats.misses++;\n      this.config.onCacheMiss?.(key);\n      this.updateHitRate();\n      return undefined;\n    }\n\n    // Check TTL\n    if (Date.now() - entry.timestamp > this.ttl) {\n      this.delete(key, \"ttl\");\n      this.stats.misses++;\n      this.config.onCacheMiss?.(key);\n      this.updateHitRate();\n      return undefined;\n    }\n\n    // Update access tracking\n    entry.accessCount++;\n    entry.lastAccessed = Date.now();\n\n    // Move to end (most recently used)\n    const index = this.accessOrder.indexOf(key);\n    if (index > -1) {\n      this.accessOrder.splice(index, 1);\n    }\n    this.accessOrder.push(key);\n\n    this.stats.hits++;\n    this.config.onCacheHit?.(key);\n    this.updateHitRate();\n\n    return entry.value;\n  }\n\n  set(key: string, value: T): void {\n    const existing = this.cache.get(key);\n\n    if (existing) {\n      existing.value = value;\n      existing.timestamp = Date.now();\n      existing.lastAccessed = Date.now();\n      return;\n    }\n\n    // Check if we need to evict\n    if (this.cache.size >= this.maxSize) {\n      this.evictLeastRecentlyUsed();\n    }\n\n    const entry: CacheEntry<T> = {\n      value,\n      timestamp: Date.now(),\n      accessCount: 1,\n      lastAccessed: Date.now(),\n    };\n\n    this.cache.set(key, entry);\n    this.accessOrder.push(key);\n    this.stats.size = this.cache.size;\n  }\n\n  private delete(key: string, reason: \"size\" | \"ttl\"): boolean {\n    const deleted = this.cache.delete(key);\n    if (deleted) {\n      const index = this.accessOrder.indexOf(key);\n      if (index > -1) {\n        this.accessOrder.splice(index, 1);\n      }\n      this.stats.evictions++;\n      this.stats.size = this.cache.size;\n      this.config.onCacheEvict?.(key, reason);\n    }\n    return deleted;\n  }\n\n  private evictLeastRecentlyUsed(): void {\n    if (this.accessOrder.length > 0) {\n      const lruKey = this.accessOrder[0];\n      this.delete(lruKey, \"size\");\n    }\n  }\n\n  private updateHitRate(): void {\n    const total = this.stats.hits + this.stats.misses;\n    this.stats.hitRate = total > 0 ? (this.stats.hits / total) * 100 : 0;\n  }\n\n  clear(): void {\n    this.cache.clear();\n    this.accessOrder = [];\n    this.stats = { hits: 0, misses: 0, evictions: 0, size: 0, hitRate: 0 };\n  }\n\n  getStats(): CacheStats {\n    return { ...this.stats };\n  }\n\n  // Clean expired entries\n  cleanup(): number {\n    const now = Date.now();\n    let cleaned = 0;\n\n    const entries = Array.from(this.cache.entries());\n    for (const [key, entry] of entries) {\n      if (now - entry.timestamp > this.ttl) {\n        this.delete(key, \"ttl\");\n        cleaned++;\n      }\n    }\n\n    return cleaned;\n  }\n}\n\n// Global cache instances\nconst componentCache = new AdvancedCache<any>(200, 10 * 60 * 1000); // 10 minutes\nconst computationCache = new AdvancedCache<any>(500, 5 * 60 * 1000); // 5 minutes\n\n// Enhanced useMemo with caching\nexport function useAdvancedMemo<T>(\n  factory: () => T,\n  deps: DependencyList,\n  cacheKey?: string,\n): T {\n  const key = cacheKey || `memo_${JSON.stringify(deps)}`;\n\n  // Use a more stable dependency approach - serialize deps to ensure consistency\n  const depsString = JSON.stringify(deps);\n\n  return useMemo(() => {\n    // Try to get from cache first\n    const cached = computationCache.get(key);\n    if (cached !== undefined) {\n      return cached;\n    }\n\n    // Compute new value\n    const result = factory();\n\n    // Cache the result\n    computationCache.set(key, result);\n\n    return result;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [factory, key, depsString]);\n}\n\n// Enhanced useCallback with caching\nexport function useAdvancedCallback<T extends (...args: any[]) => any>(\n  callback: T,\n  deps: DependencyList,\n  cacheKey?: string,\n): T {\n  const key = cacheKey || `callback_${JSON.stringify(deps)}`;\n\n  // Use a more stable dependency approach - serialize deps to ensure consistency\n  const depsString = JSON.stringify(deps);\n\n  return useCallback(\n    (...args: any[]) => {\n      const argKey = `${key}_${JSON.stringify(args)}`;\n\n      // Try to get from cache\n      const cached = computationCache.get(argKey);\n      if (cached !== undefined) {\n        return cached;\n      }\n\n      // Execute callback\n      const result = callback(...args);\n\n      // Cache result if it's serializable\n      try {\n        JSON.stringify(result);\n        computationCache.set(argKey, result);\n      } catch {\n        // Don't cache non-serializable results\n      }\n\n      return result;\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    },\n    [callback, key, depsString],\n  ) as T;\n}\n\n// Smart component memoization\nexport function smartMemo<P extends Record<string, any>>(\n  Component: React.ComponentType<P>,\n  config: MemoizationConfig = {},\n): React.MemoExoticComponent<React.ComponentType<P>> {\n  const {\n    keyGenerator = (props: P) => JSON.stringify(props),\n    maxCacheSize = 50,\n    ttl = 5 * 60 * 1000,\n  } = config;\n\n  const cache = new AdvancedCache<React.ReactElement>(\n    maxCacheSize,\n    ttl,\n    config,\n  );\n\n  const MemoizedComponent = memo(\n    (props: P) => {\n      const key = keyGenerator(props);\n\n      // Try cache first\n      const cached = cache.get(key);\n      if (cached) {\n        return cached;\n      }\n\n      // Render new\n      const element = React.createElement(Component, props);\n      cache.set(key, element);\n\n      return element;\n    },\n    (prevProps, nextProps) => {\n      // Custom comparison based on generated keys\n      const prevKey = keyGenerator(prevProps);\n      const nextKey = keyGenerator(nextProps);\n      return prevKey === nextKey;\n    },\n  );\n\n  MemoizedComponent.displayName = `SmartMemo(${Component.displayName || Component.name || \"Component\"})`;\n\n  return MemoizedComponent;\n}\n\n// Batched state updates utility\nexport function useBatchedUpdates<T>(\n  initialState: T,\n  batchDelay: number = 16, // One frame\n): [T, (updater: T | ((prev: T) => T)) => void, () => void] {\n  const [state, setState] = React.useState(initialState);\n  const batchRef = useRef<{\n    updates: Array<T | ((prev: T) => T)>;\n    timeoutId?: NodeJS.Timeout;\n  }>({ updates: [] });\n\n  const flushUpdates = useCallback(() => {\n    if (batchRef.current.updates.length === 0) return;\n\n    const updates = [...batchRef.current.updates];\n    batchRef.current.updates = [];\n\n    setState((prevState) => {\n      let currentState = prevState;\n      for (const update of updates) {\n        if (typeof update === \"function\") {\n          currentState = (update as (prev: T) => T)(currentState);\n        } else {\n          currentState = update;\n        }\n      }\n      return currentState;\n    });\n\n    if (batchRef.current.timeoutId) {\n      clearTimeout(batchRef.current.timeoutId);\n      batchRef.current.timeoutId = undefined;\n    }\n  }, []);\n\n  const batchedSetState = useCallback(\n    (updater: T | ((prev: T) => T)) => {\n      batchRef.current.updates.push(updater);\n\n      if (batchRef.current.timeoutId) {\n        clearTimeout(batchRef.current.timeoutId);\n      }\n\n      batchRef.current.timeoutId = setTimeout(flushUpdates, batchDelay);\n    },\n    [flushUpdates, batchDelay],\n  );\n\n  const forceFlush = useCallback(() => {\n    if (batchRef.current.timeoutId) {\n      clearTimeout(batchRef.current.timeoutId);\n      batchRef.current.timeoutId = undefined;\n    }\n    flushUpdates();\n  }, [flushUpdates]);\n\n  // Cleanup on unmount\n  React.useEffect(() => {\n    const batchRefCurrent = batchRef.current;\n    return () => {\n      if (batchRefCurrent?.timeoutId) {\n        clearTimeout(batchRefCurrent.timeoutId);\n      }\n    };\n  }, []);\n\n  return [state, batchedSetState, forceFlush];\n}\n\n// Performance-optimized list renderer\nexport function useVirtualizedList<T>(\n  items: T[],\n  renderItem: (item: T, index: number) => React.ReactNode,\n  config: {\n    itemHeight: number;\n    containerHeight: number;\n    overscan?: number;\n    cacheSize?: number;\n  },\n) {\n  const { itemHeight, containerHeight, overscan = 5, cacheSize = 100 } = config;\n\n  const [scrollTop, setScrollTop] = useState(0);\n  const cache = useRef(new AdvancedCache<React.ReactNode>(cacheSize));\n\n  const visibleRange = useMemo(() => {\n    const start = Math.floor(scrollTop / itemHeight);\n    const end = Math.min(\n      items.length - 1,\n      Math.ceil((scrollTop + containerHeight) / itemHeight),\n    );\n\n    return {\n      start: Math.max(0, start - overscan),\n      end: Math.min(items.length - 1, end + overscan),\n    };\n  }, [scrollTop, itemHeight, containerHeight, items.length, overscan]);\n\n  const visibleItems = useMemo(() => {\n    const rendered: Array<{ item: T; index: number; node: React.ReactNode }> =\n      [];\n\n    for (let i = visibleRange.start; i <= visibleRange.end; i++) {\n      const item = items[i];\n      const cacheKey = `item_${i}_${JSON.stringify(item)}`;\n\n      let node = cache.current.get(cacheKey);\n      if (!node) {\n        node = renderItem(item, i);\n        cache.current.set(cacheKey, node);\n      }\n\n      rendered.push({ item, index: i, node });\n    }\n\n    return rendered;\n  }, [items, visibleRange, renderItem]);\n\n  const handleScroll = useCallback((event: React.UIEvent<HTMLDivElement>) => {\n    setScrollTop(event.currentTarget.scrollTop);\n  }, []);\n\n  return {\n    visibleItems,\n    totalHeight: items.length * itemHeight,\n    offsetY: visibleRange.start * itemHeight,\n    handleScroll,\n    cacheStats: cache.current.getStats(),\n  };\n}\n\n// Cache management utilities\nexport const cacheManager = {\n  getComponentCacheStats: () => componentCache.getStats(),\n  getComputationCacheStats: () => computationCache.getStats(),\n  clearComponentCache: () => componentCache.clear(),\n  clearComputationCache: () => computationCache.clear(),\n  cleanupExpired: () => {\n    const componentCleaned = componentCache.cleanup();\n    const computationCleaned = computationCache.cleanup();\n    return { componentCleaned, computationCleaned };\n  },\n  getTotalCacheStats: () => {\n    const compStats = componentCache.getStats();\n    const compuStats = computationCache.getStats();\n\n    return {\n      totalHits: compStats.hits + compuStats.hits,\n      totalMisses: compStats.misses + compuStats.misses,\n      totalEvictions: compStats.evictions + compuStats.evictions,\n      totalSize: compStats.size + compuStats.size,\n      averageHitRate: (compStats.hitRate + compuStats.hitRate) / 2,\n    };\n  },\n};\n\n// Performance debugging utilities\nexport const performanceDebugger = {\n  logCacheStats: () => {\n    console.group(\"\uD83D\uDE80 Performance Cache Stats\");\n    console.table(cacheManager.getTotalCacheStats());\n    console.groupEnd();\n  },\n\n  measureRenderTime: <T extends (...args: any[]) => any>(\n    fn: T,\n    label: string = \"Render\",\n  ): T => {\n    return ((...args: any[]) => {\n      const start = performance.now();\n      const result = fn(...args);\n      const end = performance.now();\n      console.log(`\u23F1\uFE0F ${label}: ${(end - start).toFixed(2)}ms`);\n      return result;\n    }) as T;\n  },\n\n  profileComponent: <P extends Record<string, any>>(\n    Component: React.ComponentType<P>,\n    componentName: string,\n  ) => {\n    const ProfiledComponent = memo((props: P) => {\n      const renderStart = performance.now();\n\n      React.useEffect(() => {\n        const renderEnd = performance.now();\n        console.log(\n          `\uD83D\uDD0D ${componentName} rendered in ${(renderEnd - renderStart).toFixed(2)}ms`,\n        );\n      });\n\n      return React.createElement(Component, props);\n    });\n\n    ProfiledComponent.displayName = `Profiled(${componentName})`;\n\n    return ProfiledComponent;\n  },\n};\n\nimport { useState, useEffect } from \"react\";\n"],
      names: ["AdvancedCache", "cacheManager", "performanceDebugger", "smartMemo", "useAdvancedCallback", "useAdvancedMemo", "useBatchedUpdates", "useVirtualizedList", "constructor", "maxSize", "ttl", "config", "cache", "Map", "accessOrder", "stats", "hits", "misses", "evictions", "size", "hitRate", "get", "key", "entry", "onCacheMiss", "updateHitRate", "undefined", "Date", "now", "timestamp", "delete", "accessCount", "lastAccessed", "index", "indexOf", "splice", "push", "onCacheHit", "value", "set", "existing", "evictLeastRecentlyUsed", "reason", "deleted", "onCacheEvict", "length", "lruKey", "total", "clear", "getStats", "cleanup", "cleaned", "entries", "Array", "from", "componentCache", "computationCache", "factory", "deps", "cacheKey", "JSON", "stringify", "depsString", "useMemo", "cached", "result", "callback", "useCallback", "args", "argKey", "Component", "keyGenerator", "props", "maxCacheSize", "MemoizedComponent", "memo", "element", "React", "createElement", "prevProps", "nextProps", "prevKey", "nextKey", "displayName", "name", "initialState", "batchDelay", "state", "setState", "useState", "batchRef", "useRef", "updates", "flushUpdates", "current", "prevState", "currentState", "update", "timeoutId", "clearTimeout", "batchedSetState", "updater", "setTimeout", "forceFlush", "useEffect", "batchRefCurrent", "items", "renderItem", "itemHeight", "containerHeight", "overscan", "cacheSize", "scrollTop", "setScrollTop", "visibleRange", "start", "Math", "floor", "end", "min", "ceil", "max", "visibleItems", "rendered", "i", "item", "node", "handleScroll", "event", "currentTarget", "totalHeight", "offsetY", "cacheStats", "getComponentCacheStats", "getComputationCacheStats", "clearComponentCache", "clearComputationCache", "cleanupExpired", "componentCleaned", "computationCleaned", "getTotalCacheStats", "compStats", "compuStats", "totalHits", "totalMisses", "totalEvictions", "totalSize", "averageHitRate", "logCacheStats", "console", "group", "table", "groupEnd", "measureRenderTime", "fn", "label", "performance", "log", "toFixed", "profileComponent", "componentName", "ProfiledComponent", "renderStart", "renderEnd"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e220207f11b33f38fb203bc82c031bb71cce6c97"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1oi3i9708f = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1oi3i9708f();
cov_1oi3i9708f().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1oi3i9708f().f[0]++;
  cov_1oi3i9708f().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1oi3i9708f().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1oi3i9708f().s[3]++;
_export(exports, {
  AdvancedCache: function () {
    /* istanbul ignore next */
    cov_1oi3i9708f().f[1]++;
    cov_1oi3i9708f().s[4]++;
    return AdvancedCache;
  },
  cacheManager: function () {
    /* istanbul ignore next */
    cov_1oi3i9708f().f[2]++;
    cov_1oi3i9708f().s[5]++;
    return cacheManager;
  },
  performanceDebugger: function () {
    /* istanbul ignore next */
    cov_1oi3i9708f().f[3]++;
    cov_1oi3i9708f().s[6]++;
    return performanceDebugger;
  },
  smartMemo: function () {
    /* istanbul ignore next */
    cov_1oi3i9708f().f[4]++;
    cov_1oi3i9708f().s[7]++;
    return smartMemo;
  },
  useAdvancedCallback: function () {
    /* istanbul ignore next */
    cov_1oi3i9708f().f[5]++;
    cov_1oi3i9708f().s[8]++;
    return useAdvancedCallback;
  },
  useAdvancedMemo: function () {
    /* istanbul ignore next */
    cov_1oi3i9708f().f[6]++;
    cov_1oi3i9708f().s[9]++;
    return useAdvancedMemo;
  },
  useBatchedUpdates: function () {
    /* istanbul ignore next */
    cov_1oi3i9708f().f[7]++;
    cov_1oi3i9708f().s[10]++;
    return useBatchedUpdates;
  },
  useVirtualizedList: function () {
    /* istanbul ignore next */
    cov_1oi3i9708f().f[8]++;
    cov_1oi3i9708f().s[11]++;
    return useVirtualizedList;
  }
});
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_1oi3i9708f().s[12]++, _interop_require_wildcard(require("react")));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1oi3i9708f().f[9]++;
  cov_1oi3i9708f().s[13]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1oi3i9708f().b[0][0]++;
    cov_1oi3i9708f().s[14]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1oi3i9708f().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1oi3i9708f().s[15]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1oi3i9708f().s[16]++, new WeakMap());
  /* istanbul ignore next */
  cov_1oi3i9708f().s[17]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1oi3i9708f().f[10]++;
    cov_1oi3i9708f().s[18]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1oi3i9708f().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1oi3i9708f().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1oi3i9708f().f[11]++;
  cov_1oi3i9708f().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_1oi3i9708f().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1oi3i9708f().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1oi3i9708f().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1oi3i9708f().b[2][0]++;
    cov_1oi3i9708f().s[20]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1oi3i9708f().b[2][1]++;
  }
  cov_1oi3i9708f().s[21]++;
  if (
  /* istanbul ignore next */
  (cov_1oi3i9708f().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1oi3i9708f().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1oi3i9708f().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1oi3i9708f().b[4][0]++;
    cov_1oi3i9708f().s[22]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1oi3i9708f().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1oi3i9708f().s[23]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1oi3i9708f().s[24]++;
  if (
  /* istanbul ignore next */
  (cov_1oi3i9708f().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1oi3i9708f().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1oi3i9708f().b[6][0]++;
    cov_1oi3i9708f().s[25]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1oi3i9708f().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1oi3i9708f().s[26]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1oi3i9708f().s[27]++,
  /* istanbul ignore next */
  (cov_1oi3i9708f().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1oi3i9708f().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1oi3i9708f().s[28]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1oi3i9708f().s[29]++;
    if (
    /* istanbul ignore next */
    (cov_1oi3i9708f().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1oi3i9708f().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1oi3i9708f().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1oi3i9708f().s[30]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1oi3i9708f().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1oi3i9708f().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1oi3i9708f().s[31]++;
      if (
      /* istanbul ignore next */
      (cov_1oi3i9708f().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1oi3i9708f().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1oi3i9708f().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1oi3i9708f().b[12][0]++;
        cov_1oi3i9708f().s[32]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1oi3i9708f().b[12][1]++;
        cov_1oi3i9708f().s[33]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1oi3i9708f().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1oi3i9708f().s[34]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1oi3i9708f().s[35]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1oi3i9708f().b[14][0]++;
    cov_1oi3i9708f().s[36]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1oi3i9708f().b[14][1]++;
  }
  cov_1oi3i9708f().s[37]++;
  return newObj;
}
class AdvancedCache {
  constructor(maxSize =
  /* istanbul ignore next */
  (cov_1oi3i9708f().b[15][0]++, 100), ttl =
  /* istanbul ignore next */
  (cov_1oi3i9708f().b[16][0]++, 5 * 60 * 1000), config =
  /* istanbul ignore next */
  (cov_1oi3i9708f().b[17][0]++, {})) {
    /* istanbul ignore next */
    cov_1oi3i9708f().f[12]++;
    cov_1oi3i9708f().s[38]++;
    this.maxSize = maxSize;
    /* istanbul ignore next */
    cov_1oi3i9708f().s[39]++;
    this.ttl = ttl;
    /* istanbul ignore next */
    cov_1oi3i9708f().s[40]++;
    this.config = config;
    /* istanbul ignore next */
    cov_1oi3i9708f().s[41]++;
    this.cache = new Map();
    /* istanbul ignore next */
    cov_1oi3i9708f().s[42]++;
    this.accessOrder = [];
    /* istanbul ignore next */
    cov_1oi3i9708f().s[43]++;
    this.stats = {
      hits: 0,
      misses: 0,
      evictions: 0,
      size: 0,
      hitRate: 0
    };
  }
  get(key) {
    /* istanbul ignore next */
    cov_1oi3i9708f().f[13]++;
    const entry =
    /* istanbul ignore next */
    (cov_1oi3i9708f().s[44]++, this.cache.get(key));
    /* istanbul ignore next */
    cov_1oi3i9708f().s[45]++;
    if (!entry) {
      /* istanbul ignore next */
      cov_1oi3i9708f().b[18][0]++;
      cov_1oi3i9708f().s[46]++;
      this.stats.misses++;
      /* istanbul ignore next */
      cov_1oi3i9708f().s[47]++;
      this.config.onCacheMiss?.(key);
      /* istanbul ignore next */
      cov_1oi3i9708f().s[48]++;
      this.updateHitRate();
      /* istanbul ignore next */
      cov_1oi3i9708f().s[49]++;
      return undefined;
    } else
    /* istanbul ignore next */
    {
      cov_1oi3i9708f().b[18][1]++;
    }
    // Check TTL
    cov_1oi3i9708f().s[50]++;
    if (Date.now() - entry.timestamp > this.ttl) {
      /* istanbul ignore next */
      cov_1oi3i9708f().b[19][0]++;
      cov_1oi3i9708f().s[51]++;
      this.delete(key, "ttl");
      /* istanbul ignore next */
      cov_1oi3i9708f().s[52]++;
      this.stats.misses++;
      /* istanbul ignore next */
      cov_1oi3i9708f().s[53]++;
      this.config.onCacheMiss?.(key);
      /* istanbul ignore next */
      cov_1oi3i9708f().s[54]++;
      this.updateHitRate();
      /* istanbul ignore next */
      cov_1oi3i9708f().s[55]++;
      return undefined;
    } else
    /* istanbul ignore next */
    {
      cov_1oi3i9708f().b[19][1]++;
    }
    // Update access tracking
    cov_1oi3i9708f().s[56]++;
    entry.accessCount++;
    /* istanbul ignore next */
    cov_1oi3i9708f().s[57]++;
    entry.lastAccessed = Date.now();
    // Move to end (most recently used)
    const index =
    /* istanbul ignore next */
    (cov_1oi3i9708f().s[58]++, this.accessOrder.indexOf(key));
    /* istanbul ignore next */
    cov_1oi3i9708f().s[59]++;
    if (index > -1) {
      /* istanbul ignore next */
      cov_1oi3i9708f().b[20][0]++;
      cov_1oi3i9708f().s[60]++;
      this.accessOrder.splice(index, 1);
    } else
    /* istanbul ignore next */
    {
      cov_1oi3i9708f().b[20][1]++;
    }
    cov_1oi3i9708f().s[61]++;
    this.accessOrder.push(key);
    /* istanbul ignore next */
    cov_1oi3i9708f().s[62]++;
    this.stats.hits++;
    /* istanbul ignore next */
    cov_1oi3i9708f().s[63]++;
    this.config.onCacheHit?.(key);
    /* istanbul ignore next */
    cov_1oi3i9708f().s[64]++;
    this.updateHitRate();
    /* istanbul ignore next */
    cov_1oi3i9708f().s[65]++;
    return entry.value;
  }
  set(key, value) {
    /* istanbul ignore next */
    cov_1oi3i9708f().f[14]++;
    const existing =
    /* istanbul ignore next */
    (cov_1oi3i9708f().s[66]++, this.cache.get(key));
    /* istanbul ignore next */
    cov_1oi3i9708f().s[67]++;
    if (existing) {
      /* istanbul ignore next */
      cov_1oi3i9708f().b[21][0]++;
      cov_1oi3i9708f().s[68]++;
      existing.value = value;
      /* istanbul ignore next */
      cov_1oi3i9708f().s[69]++;
      existing.timestamp = Date.now();
      /* istanbul ignore next */
      cov_1oi3i9708f().s[70]++;
      existing.lastAccessed = Date.now();
      /* istanbul ignore next */
      cov_1oi3i9708f().s[71]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1oi3i9708f().b[21][1]++;
    }
    // Check if we need to evict
    cov_1oi3i9708f().s[72]++;
    if (this.cache.size >= this.maxSize) {
      /* istanbul ignore next */
      cov_1oi3i9708f().b[22][0]++;
      cov_1oi3i9708f().s[73]++;
      this.evictLeastRecentlyUsed();
    } else
    /* istanbul ignore next */
    {
      cov_1oi3i9708f().b[22][1]++;
    }
    const entry =
    /* istanbul ignore next */
    (cov_1oi3i9708f().s[74]++, {
      value,
      timestamp: Date.now(),
      accessCount: 1,
      lastAccessed: Date.now()
    });
    /* istanbul ignore next */
    cov_1oi3i9708f().s[75]++;
    this.cache.set(key, entry);
    /* istanbul ignore next */
    cov_1oi3i9708f().s[76]++;
    this.accessOrder.push(key);
    /* istanbul ignore next */
    cov_1oi3i9708f().s[77]++;
    this.stats.size = this.cache.size;
  }
  delete(key, reason) {
    /* istanbul ignore next */
    cov_1oi3i9708f().f[15]++;
    const deleted =
    /* istanbul ignore next */
    (cov_1oi3i9708f().s[78]++, this.cache.delete(key));
    /* istanbul ignore next */
    cov_1oi3i9708f().s[79]++;
    if (deleted) {
      /* istanbul ignore next */
      cov_1oi3i9708f().b[23][0]++;
      const index =
      /* istanbul ignore next */
      (cov_1oi3i9708f().s[80]++, this.accessOrder.indexOf(key));
      /* istanbul ignore next */
      cov_1oi3i9708f().s[81]++;
      if (index > -1) {
        /* istanbul ignore next */
        cov_1oi3i9708f().b[24][0]++;
        cov_1oi3i9708f().s[82]++;
        this.accessOrder.splice(index, 1);
      } else
      /* istanbul ignore next */
      {
        cov_1oi3i9708f().b[24][1]++;
      }
      cov_1oi3i9708f().s[83]++;
      this.stats.evictions++;
      /* istanbul ignore next */
      cov_1oi3i9708f().s[84]++;
      this.stats.size = this.cache.size;
      /* istanbul ignore next */
      cov_1oi3i9708f().s[85]++;
      this.config.onCacheEvict?.(key, reason);
    } else
    /* istanbul ignore next */
    {
      cov_1oi3i9708f().b[23][1]++;
    }
    cov_1oi3i9708f().s[86]++;
    return deleted;
  }
  evictLeastRecentlyUsed() {
    /* istanbul ignore next */
    cov_1oi3i9708f().f[16]++;
    cov_1oi3i9708f().s[87]++;
    if (this.accessOrder.length > 0) {
      /* istanbul ignore next */
      cov_1oi3i9708f().b[25][0]++;
      const lruKey =
      /* istanbul ignore next */
      (cov_1oi3i9708f().s[88]++, this.accessOrder[0]);
      /* istanbul ignore next */
      cov_1oi3i9708f().s[89]++;
      this.delete(lruKey, "size");
    } else
    /* istanbul ignore next */
    {
      cov_1oi3i9708f().b[25][1]++;
    }
  }
  updateHitRate() {
    /* istanbul ignore next */
    cov_1oi3i9708f().f[17]++;
    const total =
    /* istanbul ignore next */
    (cov_1oi3i9708f().s[90]++, this.stats.hits + this.stats.misses);
    /* istanbul ignore next */
    cov_1oi3i9708f().s[91]++;
    this.stats.hitRate = total > 0 ?
    /* istanbul ignore next */
    (cov_1oi3i9708f().b[26][0]++, this.stats.hits / total * 100) :
    /* istanbul ignore next */
    (cov_1oi3i9708f().b[26][1]++, 0);
  }
  clear() {
    /* istanbul ignore next */
    cov_1oi3i9708f().f[18]++;
    cov_1oi3i9708f().s[92]++;
    this.cache.clear();
    /* istanbul ignore next */
    cov_1oi3i9708f().s[93]++;
    this.accessOrder = [];
    /* istanbul ignore next */
    cov_1oi3i9708f().s[94]++;
    this.stats = {
      hits: 0,
      misses: 0,
      evictions: 0,
      size: 0,
      hitRate: 0
    };
  }
  getStats() {
    /* istanbul ignore next */
    cov_1oi3i9708f().f[19]++;
    cov_1oi3i9708f().s[95]++;
    return {
      ...this.stats
    };
  }
  // Clean expired entries
  cleanup() {
    /* istanbul ignore next */
    cov_1oi3i9708f().f[20]++;
    const now =
    /* istanbul ignore next */
    (cov_1oi3i9708f().s[96]++, Date.now());
    let cleaned =
    /* istanbul ignore next */
    (cov_1oi3i9708f().s[97]++, 0);
    const entries =
    /* istanbul ignore next */
    (cov_1oi3i9708f().s[98]++, Array.from(this.cache.entries()));
    /* istanbul ignore next */
    cov_1oi3i9708f().s[99]++;
    for (const [key, entry] of entries) {
      /* istanbul ignore next */
      cov_1oi3i9708f().s[100]++;
      if (now - entry.timestamp > this.ttl) {
        /* istanbul ignore next */
        cov_1oi3i9708f().b[27][0]++;
        cov_1oi3i9708f().s[101]++;
        this.delete(key, "ttl");
        /* istanbul ignore next */
        cov_1oi3i9708f().s[102]++;
        cleaned++;
      } else
      /* istanbul ignore next */
      {
        cov_1oi3i9708f().b[27][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1oi3i9708f().s[103]++;
    return cleaned;
  }
}
// Global cache instances
const componentCache =
/* istanbul ignore next */
(cov_1oi3i9708f().s[104]++, new AdvancedCache(200, 10 * 60 * 1000)); // 10 minutes
const computationCache =
/* istanbul ignore next */
(cov_1oi3i9708f().s[105]++, new AdvancedCache(500, 5 * 60 * 1000)); // 5 minutes
function useAdvancedMemo(factory, deps, cacheKey) {
  /* istanbul ignore next */
  cov_1oi3i9708f().f[21]++;
  const key =
  /* istanbul ignore next */
  (cov_1oi3i9708f().s[106]++,
  /* istanbul ignore next */
  (cov_1oi3i9708f().b[28][0]++, cacheKey) ||
  /* istanbul ignore next */
  (cov_1oi3i9708f().b[28][1]++, `memo_${JSON.stringify(deps)}`));
  // Use a more stable dependency approach - serialize deps to ensure consistency
  const depsString =
  /* istanbul ignore next */
  (cov_1oi3i9708f().s[107]++, JSON.stringify(deps));
  /* istanbul ignore next */
  cov_1oi3i9708f().s[108]++;
  return (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_1oi3i9708f().f[22]++;
    // Try to get from cache first
    const cached =
    /* istanbul ignore next */
    (cov_1oi3i9708f().s[109]++, computationCache.get(key));
    /* istanbul ignore next */
    cov_1oi3i9708f().s[110]++;
    if (cached !== undefined) {
      /* istanbul ignore next */
      cov_1oi3i9708f().b[29][0]++;
      cov_1oi3i9708f().s[111]++;
      return cached;
    } else
    /* istanbul ignore next */
    {
      cov_1oi3i9708f().b[29][1]++;
    }
    // Compute new value
    const result =
    /* istanbul ignore next */
    (cov_1oi3i9708f().s[112]++, factory());
    // Cache the result
    /* istanbul ignore next */
    cov_1oi3i9708f().s[113]++;
    computationCache.set(key, result);
    /* istanbul ignore next */
    cov_1oi3i9708f().s[114]++;
    return result;
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [factory, key, depsString]);
}
function useAdvancedCallback(callback, deps, cacheKey) {
  /* istanbul ignore next */
  cov_1oi3i9708f().f[23]++;
  const key =
  /* istanbul ignore next */
  (cov_1oi3i9708f().s[115]++,
  /* istanbul ignore next */
  (cov_1oi3i9708f().b[30][0]++, cacheKey) ||
  /* istanbul ignore next */
  (cov_1oi3i9708f().b[30][1]++, `callback_${JSON.stringify(deps)}`));
  // Use a more stable dependency approach - serialize deps to ensure consistency
  const depsString =
  /* istanbul ignore next */
  (cov_1oi3i9708f().s[116]++, JSON.stringify(deps));
  /* istanbul ignore next */
  cov_1oi3i9708f().s[117]++;
  return (0, _react.useCallback)((...args) => {
    /* istanbul ignore next */
    cov_1oi3i9708f().f[24]++;
    const argKey =
    /* istanbul ignore next */
    (cov_1oi3i9708f().s[118]++, `${key}_${JSON.stringify(args)}`);
    // Try to get from cache
    const cached =
    /* istanbul ignore next */
    (cov_1oi3i9708f().s[119]++, computationCache.get(argKey));
    /* istanbul ignore next */
    cov_1oi3i9708f().s[120]++;
    if (cached !== undefined) {
      /* istanbul ignore next */
      cov_1oi3i9708f().b[31][0]++;
      cov_1oi3i9708f().s[121]++;
      return cached;
    } else
    /* istanbul ignore next */
    {
      cov_1oi3i9708f().b[31][1]++;
    }
    // Execute callback
    const result =
    /* istanbul ignore next */
    (cov_1oi3i9708f().s[122]++, callback(...args));
    // Cache result if it's serializable
    /* istanbul ignore next */
    cov_1oi3i9708f().s[123]++;
    try {
      /* istanbul ignore next */
      cov_1oi3i9708f().s[124]++;
      JSON.stringify(result);
      /* istanbul ignore next */
      cov_1oi3i9708f().s[125]++;
      computationCache.set(argKey, result);
    } catch {
      // Don't cache non-serializable results
    }
    /* istanbul ignore next */
    cov_1oi3i9708f().s[126]++;
    return result;
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [callback, key, depsString]);
}
function smartMemo(Component, config =
/* istanbul ignore next */
(cov_1oi3i9708f().b[32][0]++, {})) {
  /* istanbul ignore next */
  cov_1oi3i9708f().f[25]++;
  const {
    keyGenerator =
    /* istanbul ignore next */
    (cov_1oi3i9708f().b[33][0]++, props => {
      /* istanbul ignore next */
      cov_1oi3i9708f().f[26]++;
      cov_1oi3i9708f().s[128]++;
      return JSON.stringify(props);
    }),
    maxCacheSize =
    /* istanbul ignore next */
    (cov_1oi3i9708f().b[34][0]++, 50),
    ttl =
    /* istanbul ignore next */
    (cov_1oi3i9708f().b[35][0]++, 5 * 60 * 1000)
  } =
  /* istanbul ignore next */
  (cov_1oi3i9708f().s[127]++, config);
  const cache =
  /* istanbul ignore next */
  (cov_1oi3i9708f().s[129]++, new AdvancedCache(maxCacheSize, ttl, config));
  const MemoizedComponent =
  /* istanbul ignore next */
  (cov_1oi3i9708f().s[130]++, (0, _react.memo)(props => {
    /* istanbul ignore next */
    cov_1oi3i9708f().f[27]++;
    const key =
    /* istanbul ignore next */
    (cov_1oi3i9708f().s[131]++, keyGenerator(props));
    // Try cache first
    const cached =
    /* istanbul ignore next */
    (cov_1oi3i9708f().s[132]++, cache.get(key));
    /* istanbul ignore next */
    cov_1oi3i9708f().s[133]++;
    if (cached) {
      /* istanbul ignore next */
      cov_1oi3i9708f().b[36][0]++;
      cov_1oi3i9708f().s[134]++;
      return cached;
    } else
    /* istanbul ignore next */
    {
      cov_1oi3i9708f().b[36][1]++;
    }
    // Render new
    const element =
    /* istanbul ignore next */
    (cov_1oi3i9708f().s[135]++, _react.createElement(Component, props));
    /* istanbul ignore next */
    cov_1oi3i9708f().s[136]++;
    cache.set(key, element);
    /* istanbul ignore next */
    cov_1oi3i9708f().s[137]++;
    return element;
  }, (prevProps, nextProps) => {
    /* istanbul ignore next */
    cov_1oi3i9708f().f[28]++;
    // Custom comparison based on generated keys
    const prevKey =
    /* istanbul ignore next */
    (cov_1oi3i9708f().s[138]++, keyGenerator(prevProps));
    const nextKey =
    /* istanbul ignore next */
    (cov_1oi3i9708f().s[139]++, keyGenerator(nextProps));
    /* istanbul ignore next */
    cov_1oi3i9708f().s[140]++;
    return prevKey === nextKey;
  }));
  /* istanbul ignore next */
  cov_1oi3i9708f().s[141]++;
  MemoizedComponent.displayName = `SmartMemo(${
  /* istanbul ignore next */
  (cov_1oi3i9708f().b[37][0]++, Component.displayName) ||
  /* istanbul ignore next */
  (cov_1oi3i9708f().b[37][1]++, Component.name) ||
  /* istanbul ignore next */
  (cov_1oi3i9708f().b[37][2]++, "Component")})`;
  /* istanbul ignore next */
  cov_1oi3i9708f().s[142]++;
  return MemoizedComponent;
}
function useBatchedUpdates(initialState, batchDelay =
/* istanbul ignore next */
(cov_1oi3i9708f().b[38][0]++, 16)) {
  /* istanbul ignore next */
  cov_1oi3i9708f().f[29]++;
  const [state, setState] =
  /* istanbul ignore next */
  (cov_1oi3i9708f().s[143]++, _react.useState(initialState));
  const batchRef =
  /* istanbul ignore next */
  (cov_1oi3i9708f().s[144]++, (0, _react.useRef)({
    updates: []
  }));
  const flushUpdates =
  /* istanbul ignore next */
  (cov_1oi3i9708f().s[145]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1oi3i9708f().f[30]++;
    cov_1oi3i9708f().s[146]++;
    if (batchRef.current.updates.length === 0) {
      /* istanbul ignore next */
      cov_1oi3i9708f().b[39][0]++;
      cov_1oi3i9708f().s[147]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1oi3i9708f().b[39][1]++;
    }
    const updates =
    /* istanbul ignore next */
    (cov_1oi3i9708f().s[148]++, [...batchRef.current.updates]);
    /* istanbul ignore next */
    cov_1oi3i9708f().s[149]++;
    batchRef.current.updates = [];
    /* istanbul ignore next */
    cov_1oi3i9708f().s[150]++;
    setState(prevState => {
      /* istanbul ignore next */
      cov_1oi3i9708f().f[31]++;
      let currentState =
      /* istanbul ignore next */
      (cov_1oi3i9708f().s[151]++, prevState);
      /* istanbul ignore next */
      cov_1oi3i9708f().s[152]++;
      for (const update of updates) {
        /* istanbul ignore next */
        cov_1oi3i9708f().s[153]++;
        if (typeof update === "function") {
          /* istanbul ignore next */
          cov_1oi3i9708f().b[40][0]++;
          cov_1oi3i9708f().s[154]++;
          currentState = update(currentState);
        } else {
          /* istanbul ignore next */
          cov_1oi3i9708f().b[40][1]++;
          cov_1oi3i9708f().s[155]++;
          currentState = update;
        }
      }
      /* istanbul ignore next */
      cov_1oi3i9708f().s[156]++;
      return currentState;
    });
    /* istanbul ignore next */
    cov_1oi3i9708f().s[157]++;
    if (batchRef.current.timeoutId) {
      /* istanbul ignore next */
      cov_1oi3i9708f().b[41][0]++;
      cov_1oi3i9708f().s[158]++;
      clearTimeout(batchRef.current.timeoutId);
      /* istanbul ignore next */
      cov_1oi3i9708f().s[159]++;
      batchRef.current.timeoutId = undefined;
    } else
    /* istanbul ignore next */
    {
      cov_1oi3i9708f().b[41][1]++;
    }
  }, []));
  const batchedSetState =
  /* istanbul ignore next */
  (cov_1oi3i9708f().s[160]++, (0, _react.useCallback)(updater => {
    /* istanbul ignore next */
    cov_1oi3i9708f().f[32]++;
    cov_1oi3i9708f().s[161]++;
    batchRef.current.updates.push(updater);
    /* istanbul ignore next */
    cov_1oi3i9708f().s[162]++;
    if (batchRef.current.timeoutId) {
      /* istanbul ignore next */
      cov_1oi3i9708f().b[42][0]++;
      cov_1oi3i9708f().s[163]++;
      clearTimeout(batchRef.current.timeoutId);
    } else
    /* istanbul ignore next */
    {
      cov_1oi3i9708f().b[42][1]++;
    }
    cov_1oi3i9708f().s[164]++;
    batchRef.current.timeoutId = setTimeout(flushUpdates, batchDelay);
  }, [flushUpdates, batchDelay]));
  const forceFlush =
  /* istanbul ignore next */
  (cov_1oi3i9708f().s[165]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1oi3i9708f().f[33]++;
    cov_1oi3i9708f().s[166]++;
    if (batchRef.current.timeoutId) {
      /* istanbul ignore next */
      cov_1oi3i9708f().b[43][0]++;
      cov_1oi3i9708f().s[167]++;
      clearTimeout(batchRef.current.timeoutId);
      /* istanbul ignore next */
      cov_1oi3i9708f().s[168]++;
      batchRef.current.timeoutId = undefined;
    } else
    /* istanbul ignore next */
    {
      cov_1oi3i9708f().b[43][1]++;
    }
    cov_1oi3i9708f().s[169]++;
    flushUpdates();
  }, [flushUpdates]));
  // Cleanup on unmount
  /* istanbul ignore next */
  cov_1oi3i9708f().s[170]++;
  _react.useEffect(() => {
    /* istanbul ignore next */
    cov_1oi3i9708f().f[34]++;
    const batchRefCurrent =
    /* istanbul ignore next */
    (cov_1oi3i9708f().s[171]++, batchRef.current);
    /* istanbul ignore next */
    cov_1oi3i9708f().s[172]++;
    return () => {
      /* istanbul ignore next */
      cov_1oi3i9708f().f[35]++;
      cov_1oi3i9708f().s[173]++;
      if (batchRefCurrent?.timeoutId) {
        /* istanbul ignore next */
        cov_1oi3i9708f().b[44][0]++;
        cov_1oi3i9708f().s[174]++;
        clearTimeout(batchRefCurrent.timeoutId);
      } else
      /* istanbul ignore next */
      {
        cov_1oi3i9708f().b[44][1]++;
      }
    };
  }, []);
  /* istanbul ignore next */
  cov_1oi3i9708f().s[175]++;
  return [state, batchedSetState, forceFlush];
}
function useVirtualizedList(items, renderItem, config) {
  /* istanbul ignore next */
  cov_1oi3i9708f().f[36]++;
  const {
    itemHeight,
    containerHeight,
    overscan =
    /* istanbul ignore next */
    (cov_1oi3i9708f().b[45][0]++, 5),
    cacheSize =
    /* istanbul ignore next */
    (cov_1oi3i9708f().b[46][0]++, 100)
  } =
  /* istanbul ignore next */
  (cov_1oi3i9708f().s[176]++, config);
  const [scrollTop, setScrollTop] =
  /* istanbul ignore next */
  (cov_1oi3i9708f().s[177]++, (0, _react.useState)(0));
  const cache =
  /* istanbul ignore next */
  (cov_1oi3i9708f().s[178]++, (0, _react.useRef)(new AdvancedCache(cacheSize)));
  const visibleRange =
  /* istanbul ignore next */
  (cov_1oi3i9708f().s[179]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_1oi3i9708f().f[37]++;
    const start =
    /* istanbul ignore next */
    (cov_1oi3i9708f().s[180]++, Math.floor(scrollTop / itemHeight));
    const end =
    /* istanbul ignore next */
    (cov_1oi3i9708f().s[181]++, Math.min(items.length - 1, Math.ceil((scrollTop + containerHeight) / itemHeight)));
    /* istanbul ignore next */
    cov_1oi3i9708f().s[182]++;
    return {
      start: Math.max(0, start - overscan),
      end: Math.min(items.length - 1, end + overscan)
    };
  }, [scrollTop, itemHeight, containerHeight, items.length, overscan]));
  const visibleItems =
  /* istanbul ignore next */
  (cov_1oi3i9708f().s[183]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_1oi3i9708f().f[38]++;
    const rendered =
    /* istanbul ignore next */
    (cov_1oi3i9708f().s[184]++, []);
    /* istanbul ignore next */
    cov_1oi3i9708f().s[185]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1oi3i9708f().s[186]++, visibleRange.start); i <= visibleRange.end; i++) {
      const item =
      /* istanbul ignore next */
      (cov_1oi3i9708f().s[187]++, items[i]);
      const cacheKey =
      /* istanbul ignore next */
      (cov_1oi3i9708f().s[188]++, `item_${i}_${JSON.stringify(item)}`);
      let node =
      /* istanbul ignore next */
      (cov_1oi3i9708f().s[189]++, cache.current.get(cacheKey));
      /* istanbul ignore next */
      cov_1oi3i9708f().s[190]++;
      if (!node) {
        /* istanbul ignore next */
        cov_1oi3i9708f().b[47][0]++;
        cov_1oi3i9708f().s[191]++;
        node = renderItem(item, i);
        /* istanbul ignore next */
        cov_1oi3i9708f().s[192]++;
        cache.current.set(cacheKey, node);
      } else
      /* istanbul ignore next */
      {
        cov_1oi3i9708f().b[47][1]++;
      }
      cov_1oi3i9708f().s[193]++;
      rendered.push({
        item,
        index: i,
        node
      });
    }
    /* istanbul ignore next */
    cov_1oi3i9708f().s[194]++;
    return rendered;
  }, [items, visibleRange, renderItem]));
  const handleScroll =
  /* istanbul ignore next */
  (cov_1oi3i9708f().s[195]++, (0, _react.useCallback)(event => {
    /* istanbul ignore next */
    cov_1oi3i9708f().f[39]++;
    cov_1oi3i9708f().s[196]++;
    setScrollTop(event.currentTarget.scrollTop);
  }, []));
  /* istanbul ignore next */
  cov_1oi3i9708f().s[197]++;
  return {
    visibleItems,
    totalHeight: items.length * itemHeight,
    offsetY: visibleRange.start * itemHeight,
    handleScroll,
    cacheStats: cache.current.getStats()
  };
}
const cacheManager =
/* istanbul ignore next */
(cov_1oi3i9708f().s[198]++, {
  getComponentCacheStats: () => {
    /* istanbul ignore next */
    cov_1oi3i9708f().f[40]++;
    cov_1oi3i9708f().s[199]++;
    return componentCache.getStats();
  },
  getComputationCacheStats: () => {
    /* istanbul ignore next */
    cov_1oi3i9708f().f[41]++;
    cov_1oi3i9708f().s[200]++;
    return computationCache.getStats();
  },
  clearComponentCache: () => {
    /* istanbul ignore next */
    cov_1oi3i9708f().f[42]++;
    cov_1oi3i9708f().s[201]++;
    return componentCache.clear();
  },
  clearComputationCache: () => {
    /* istanbul ignore next */
    cov_1oi3i9708f().f[43]++;
    cov_1oi3i9708f().s[202]++;
    return computationCache.clear();
  },
  cleanupExpired: () => {
    /* istanbul ignore next */
    cov_1oi3i9708f().f[44]++;
    const componentCleaned =
    /* istanbul ignore next */
    (cov_1oi3i9708f().s[203]++, componentCache.cleanup());
    const computationCleaned =
    /* istanbul ignore next */
    (cov_1oi3i9708f().s[204]++, computationCache.cleanup());
    /* istanbul ignore next */
    cov_1oi3i9708f().s[205]++;
    return {
      componentCleaned,
      computationCleaned
    };
  },
  getTotalCacheStats: () => {
    /* istanbul ignore next */
    cov_1oi3i9708f().f[45]++;
    const compStats =
    /* istanbul ignore next */
    (cov_1oi3i9708f().s[206]++, componentCache.getStats());
    const compuStats =
    /* istanbul ignore next */
    (cov_1oi3i9708f().s[207]++, computationCache.getStats());
    /* istanbul ignore next */
    cov_1oi3i9708f().s[208]++;
    return {
      totalHits: compStats.hits + compuStats.hits,
      totalMisses: compStats.misses + compuStats.misses,
      totalEvictions: compStats.evictions + compuStats.evictions,
      totalSize: compStats.size + compuStats.size,
      averageHitRate: (compStats.hitRate + compuStats.hitRate) / 2
    };
  }
});
const performanceDebugger =
/* istanbul ignore next */
(cov_1oi3i9708f().s[209]++, {
  logCacheStats: () => {
    /* istanbul ignore next */
    cov_1oi3i9708f().f[46]++;
    cov_1oi3i9708f().s[210]++;
    console.group("\uD83D\uDE80 Performance Cache Stats");
    /* istanbul ignore next */
    cov_1oi3i9708f().s[211]++;
    console.table(cacheManager.getTotalCacheStats());
    /* istanbul ignore next */
    cov_1oi3i9708f().s[212]++;
    console.groupEnd();
  },
  measureRenderTime: (fn, label =
  /* istanbul ignore next */
  (cov_1oi3i9708f().b[48][0]++, "Render")) => {
    /* istanbul ignore next */
    cov_1oi3i9708f().f[47]++;
    cov_1oi3i9708f().s[213]++;
    return (...args) => {
      /* istanbul ignore next */
      cov_1oi3i9708f().f[48]++;
      const start =
      /* istanbul ignore next */
      (cov_1oi3i9708f().s[214]++, performance.now());
      const result =
      /* istanbul ignore next */
      (cov_1oi3i9708f().s[215]++, fn(...args));
      const end =
      /* istanbul ignore next */
      (cov_1oi3i9708f().s[216]++, performance.now());
      /* istanbul ignore next */
      cov_1oi3i9708f().s[217]++;
      console.log(`⏱️ ${label}: ${(end - start).toFixed(2)}ms`);
      /* istanbul ignore next */
      cov_1oi3i9708f().s[218]++;
      return result;
    };
  },
  profileComponent: (Component, componentName) => {
    /* istanbul ignore next */
    cov_1oi3i9708f().f[49]++;
    const ProfiledComponent =
    /* istanbul ignore next */
    (cov_1oi3i9708f().s[219]++, (0, _react.memo)(props => {
      /* istanbul ignore next */
      cov_1oi3i9708f().f[50]++;
      const renderStart =
      /* istanbul ignore next */
      (cov_1oi3i9708f().s[220]++, performance.now());
      /* istanbul ignore next */
      cov_1oi3i9708f().s[221]++;
      _react.useEffect(() => {
        /* istanbul ignore next */
        cov_1oi3i9708f().f[51]++;
        const renderEnd =
        /* istanbul ignore next */
        (cov_1oi3i9708f().s[222]++, performance.now());
        /* istanbul ignore next */
        cov_1oi3i9708f().s[223]++;
        console.log(`🔍 ${componentName} rendered in ${(renderEnd - renderStart).toFixed(2)}ms`);
      });
      /* istanbul ignore next */
      cov_1oi3i9708f().s[224]++;
      return _react.createElement(Component, props);
    }));
    /* istanbul ignore next */
    cov_1oi3i9708f().s[225]++;
    ProfiledComponent.displayName = `Profiled(${componentName})`;
    /* istanbul ignore next */
    cov_1oi3i9708f().s[226]++;
    return ProfiledComponent;
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
{"version":3,"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/components/conversation/conversation-dashboard.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useCallback, useMemo, useRef } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport {\n  ResizableHandle,\n  ResizablePanel,\n  ResizablePanelGroup,\n} from \"@/components/ui/resizable\";\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\";\nimport { ConversationSearch, ConversationFilters } from \"./conversation-search\";\nimport {\n  MessageQueueVisualization,\n  QueuedMessage,\n  QueueMetrics,\n} from \"./message-queue-visualization\";\nimport { VirtualizedMessageList } from \"./virtualized-message-list\";\nimport { useAutoScroll } from \"@/hooks/useAutoScroll\";\nimport { useConversationWebSocket } from \"@/hooks/useConversationWebSocket\";\nimport type {\n  Message,\n  Agent,\n  Conversation,\n  ConversationThread,\n} from \"@/lib/types\";\nimport {\n  MessageSquare,\n  Users,\n  Settings,\n  Search,\n  Filter,\n  Activity,\n  BarChart3,\n  Play,\n  Pause,\n  ArrowDown,\n  ArrowUp,\n  Maximize2,\n  Minimize2,\n  RefreshCw,\n  Eye,\n  EyeOff,\n  Hash,\n  Clock,\n  Zap,\n  AlertTriangle,\n  TrendingUp,\n  ChevronRight,\n  ChevronDown,\n} from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\nimport { format } from \"date-fns\";\n\nexport interface ConversationDashboardProps {\n  conversations: Conversation[];\n  agents: Agent[];\n  selectedConversationId?: string;\n  onConversationSelect: (conversationId: string) => void;\n  onSendMessage?: (\n    conversationId: string,\n    content: string,\n    senderId: string,\n  ) => void;\n  className?: string;\n}\n\n// Mock data generators for demonstration\nconst generateMockQueue = (): QueuedMessage[] => {\n  return Array.from({ length: 12 }, (_, i) => ({\n    id: `queue-${i}`,\n    conversationId: `conv-${Math.floor(i / 3)}`,\n    agentId: `agent-${i % 4}`,\n    type: [\"response\", \"autonomous\", \"tool_call\", \"retry\"][i % 4] as any,\n    priority: [\"low\", \"normal\", \"high\", \"urgent\"][i % 4] as any,\n    status: [\"queued\", \"processing\", \"completed\", \"failed\"][i % 4] as any,\n    queuedAt: new Date(Date.now() - Math.random() * 300000),\n    progress: i % 4 === 1 ? Math.random() * 100 : undefined,\n    estimatedDuration: 2000 + Math.random() * 8000,\n    metadata: {\n      messageContent: `Sample message content ${i}...`,\n      modelUsed: [\"gpt-4\", \"claude-3\", \"llama-2\"][i % 3],\n      confidence: Math.random(),\n    },\n  }));\n};\n\nconst generateMockMetrics = (): QueueMetrics => ({\n  totalQueued: 5,\n  totalProcessing: 3,\n  totalCompleted: 42,\n  totalFailed: 2,\n  averageProcessingTime: 3500,\n  averageQueueTime: 1200,\n  throughputPerMinute: 8.5,\n  errorRate: 0.04,\n  queuedByPriority: { urgent: 1, high: 2, normal: 2, low: 0 },\n  processingByAgent: { \"agent-1\": 2, \"agent-2\": 1 },\n  conversationLoad: { \"conv-1\": 3, \"conv-2\": 2 },\n});\n\nexport function ConversationDashboard({\n  conversations,\n  agents,\n  selectedConversationId,\n  onConversationSelect,\n  onSendMessage,\n  className,\n}: ConversationDashboardProps) {\n  const [filters, setFilters] = useState<ConversationFilters>({\n    searchQuery: \"\",\n    status: [],\n    participants: [],\n    messageTypes: [],\n    dateRange: undefined,\n    messageCountRange: [0, 1000],\n    durationRange: [0, 120],\n    hasErrors: false,\n    isLive: false,\n    threadCount: [0, 10],\n    agentTypes: [],\n  });\n\n  const [searchResults, setSearchResults] = useState<any>(null);\n  const [selectedTab, setSelectedTab] = useState<\n    \"conversations\" | \"queue\" | \"analytics\"\n  >(\"conversations\");\n  const [showAdvancedControls, setShowAdvancedControls] = useState(false);\n  const [isQueuePaused, setIsQueuePaused] = useState(false);\n  const [expandedSections, setExpandedSections] = useState({\n    search: true,\n    queue: true,\n    controls: false,\n  });\n\n  // Mock data\n  const [mockQueue] = useState(generateMockQueue());\n  const [mockMetrics] = useState(generateMockMetrics());\n\n  // Refs for auto-scroll\n  const conversationListRef = useRef<HTMLDivElement>(null);\n  const messageListRef = useRef<HTMLDivElement>(null);\n\n  // Auto-scroll for conversations list\n  const conversationAutoScroll = useAutoScroll(\n    conversationListRef,\n    [conversations],\n    {\n      threshold: 100,\n      enableUserOverride: true,\n      overrideTimeout: 10000,\n      onScrollStateChange: (enabled, atBottom) => {\n        console.log(\"Conversation scroll state:\", { enabled, atBottom });\n      },\n    },\n  );\n\n  // Auto-scroll for message list\n  const messageAutoScroll = useAutoScroll(\n    messageListRef,\n    [selectedConversationId],\n    {\n      threshold: 50,\n      enableUserOverride: true,\n      overrideTimeout: 5000,\n    },\n  );\n\n  // WebSocket connection\n  const {\n    isConnected,\n    isConnecting,\n    error: wsError,\n    connectionStats,\n  } = useConversationWebSocket({\n    autoConnect: true,\n    onEvent: (event) => {\n      console.log(\"Dashboard received WebSocket event:\", event);\n    },\n  });\n\n  // Filter conversations\n  const filteredConversations = useMemo(() => {\n    return conversations.filter((conversation) => {\n      // Search query\n      if (filters.searchQuery) {\n        const query = filters.searchQuery.toLowerCase();\n        const matchesContent = conversation.messages?.some((msg) =>\n          msg.content.toLowerCase().includes(query),\n        );\n        const matchesParticipants = conversation.participants?.some((pid) => {\n          const agent = agents.find((a) => a.id === pid);\n          return agent?.name.toLowerCase().includes(query);\n        });\n        if (!matchesContent && !matchesParticipants) return false;\n      }\n\n      // Status filter\n      if (filters.status.length > 0) {\n        const status = conversation.endTime ? \"completed\" : \"active\";\n        if (!filters.status.includes(status)) return false;\n      }\n\n      // Participants filter\n      if (filters.participants.length > 0) {\n        const hasMatchingParticipant = filters.participants.some((pid) =>\n          conversation.participants?.includes(pid),\n        );\n        if (!hasMatchingParticipant) return false;\n      }\n\n      // Message count filter\n      const messageCount = conversation.messages?.length || 0;\n      if (\n        messageCount < filters.messageCountRange[0] ||\n        messageCount > filters.messageCountRange[1]\n      ) {\n        return false;\n      }\n\n      // Date range filter\n      if (filters.dateRange?.from || filters.dateRange?.to) {\n        const startTime = new Date(conversation.startTime);\n        if (filters.dateRange.from && startTime < filters.dateRange.from)\n          return false;\n        if (filters.dateRange.to && startTime > filters.dateRange.to)\n          return false;\n      }\n\n      return true;\n    });\n  }, [conversations, agents, filters]);\n\n  // Get selected conversation\n  const selectedConversation = conversations.find(\n    (conv) => conv.id === selectedConversationId,\n  );\n\n  // Handle search\n  const handleSearch = useCallback(\n    (query: string) => {\n      if (!query.trim()) {\n        setSearchResults(null);\n        return;\n      }\n\n      // Mock search results\n      const mockResults = {\n        conversations: conversations.slice(0, 3).map((c) => c.id),\n        messages: conversations.slice(0, 2).flatMap(\n          (conv) =>\n            conv.messages?.slice(0, 2).map((msg) => ({\n              conversationId: conv.id,\n              messageId: msg.id,\n              snippet: msg.content.substring(0, 100) + \"...\",\n            })) || [],\n        ),\n        totalResults: 8,\n      };\n\n      setSearchResults(mockResults);\n    },\n    [conversations],\n  );\n\n  // Handle queue actions\n  const handleCancelMessage = useCallback((messageId: string) => {\n    console.log(\"Canceling message:\", messageId);\n  }, []);\n\n  const handleRetryMessage = useCallback((messageId: string) => {\n    console.log(\"Retrying message:\", messageId);\n  }, []);\n\n  const handlePauseQueue = useCallback(() => {\n    setIsQueuePaused(true);\n  }, []);\n\n  const handleResumeQueue = useCallback(() => {\n    setIsQueuePaused(false);\n  }, []);\n\n  // Toggle section expansion\n  const toggleSection = useCallback(\n    (section: keyof typeof expandedSections) => {\n      setExpandedSections((prev) => ({\n        ...prev,\n        [section]: !prev[section],\n      }));\n    },\n    [],\n  );\n\n  return (\n    <TooltipProvider>\n      <div className={cn(\"h-full flex flex-col\", className)}>\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-4 border-b\">\n          <div className=\"flex items-center gap-4\">\n            <h1 className=\"text-2xl font-bold\">Conversation Dashboard</h1>\n\n            {/* Connection Status */}\n            <div className=\"flex items-center gap-2\">\n              <div\n                className={cn(\n                  \"w-2 h-2 rounded-full\",\n                  isConnected\n                    ? \"bg-green-500\"\n                    : isConnecting\n                      ? \"bg-yellow-500\"\n                      : \"bg-red-500\",\n                )}\n              />\n              <span className=\"text-sm text-muted-foreground\">\n                {isConnected\n                  ? \"Connected\"\n                  : isConnecting\n                    ? \"Connecting...\"\n                    : \"Disconnected\"}\n              </span>\n              {connectionStats && (\n                <Badge variant=\"outline\" className=\"text-xs\">\n                  {connectionStats.total_connections} clients\n                </Badge>\n              )}\n            </div>\n          </div>\n\n          {/* Controls */}\n          <div className=\"flex items-center gap-2\">\n            <Tooltip>\n              <TooltipTrigger asChild>\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => setShowAdvancedControls(!showAdvancedControls)}\n                >\n                  <Settings className=\"w-4 h-4\" />\n                </Button>\n              </TooltipTrigger>\n              <TooltipContent>\n                <p>Advanced Controls</p>\n              </TooltipContent>\n            </Tooltip>\n\n            <Tooltip>\n              <TooltipTrigger asChild>\n                <Button variant=\"outline\" size=\"sm\">\n                  <RefreshCw className=\"w-4 h-4\" />\n                </Button>\n              </TooltipTrigger>\n              <TooltipContent>\n                <p>Refresh Data</p>\n              </TooltipContent>\n            </Tooltip>\n          </div>\n        </div>\n\n        {/* Main Content */}\n        <div className=\"flex-1 flex\">\n          <ResizablePanelGroup direction=\"horizontal\">\n            {/* Left Panel - Controls and Conversations */}\n            <ResizablePanel defaultSize={30} minSize={25}>\n              <div className=\"h-full flex flex-col\">\n                {/* Search and Filters */}\n                <div className=\"border-b\">\n                  <div className=\"p-4\">\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <h3 className=\"font-semibold\">Search & Filter</h3>\n                      <Button\n                        variant=\"ghost\"\n                        size=\"sm\"\n                        onClick={() => toggleSection(\"search\")}\n                      >\n                        {expandedSections.search ? (\n                          <ChevronDown className=\"w-4 h-4\" />\n                        ) : (\n                          <ChevronRight className=\"w-4 h-4\" />\n                        )}\n                      </Button>\n                    </div>\n\n                    {expandedSections.search && (\n                      <ConversationSearch\n                        conversations={conversations}\n                        agents={agents}\n                        filters={filters}\n                        onFiltersChange={setFilters}\n                        onSearch={handleSearch}\n                        searchResults={searchResults}\n                      />\n                    )}\n                  </div>\n                </div>\n\n                {/* Conversation List */}\n                <div className=\"flex-1 min-h-0\">\n                  <div className=\"p-4\">\n                    <div className=\"flex items-center justify-between mb-4\">\n                      <h3 className=\"font-semibold\">\n                        Conversations ({filteredConversations.length})\n                      </h3>\n\n                      {/* Auto-scroll controls */}\n                      <div className=\"flex items-center gap-1\">\n                        <Tooltip>\n                          <TooltipTrigger asChild>\n                            <Button\n                              variant=\"ghost\"\n                              size=\"sm\"\n                              onClick={() =>\n                                conversationAutoScroll.scrollToTop()\n                              }\n                            >\n                              <ArrowUp className=\"w-4 h-4\" />\n                            </Button>\n                          </TooltipTrigger>\n                          <TooltipContent>\n                            <p>Scroll to top</p>\n                          </TooltipContent>\n                        </Tooltip>\n\n                        <Tooltip>\n                          <TooltipTrigger asChild>\n                            <Button\n                              variant=\"ghost\"\n                              size=\"sm\"\n                              onClick={() =>\n                                conversationAutoScroll.scrollToBottom()\n                              }\n                            >\n                              <ArrowDown className=\"w-4 h-4\" />\n                            </Button>\n                          </TooltipTrigger>\n                          <TooltipContent>\n                            <p>Scroll to bottom</p>\n                          </TooltipContent>\n                        </Tooltip>\n\n                        <Tooltip>\n                          <TooltipTrigger asChild>\n                            <Button\n                              variant=\"ghost\"\n                              size=\"sm\"\n                              onClick={conversationAutoScroll.toggleAutoScroll}\n                              className={cn(\n                                conversationAutoScroll.state.isAutoScrollEnabled\n                                  ? \"text-blue-500\"\n                                  : \"text-muted-foreground\",\n                              )}\n                            >\n                              {conversationAutoScroll.state\n                                .isAutoScrollEnabled ? (\n                                <Eye className=\"w-4 h-4\" />\n                              ) : (\n                                <EyeOff className=\"w-4 h-4\" />\n                              )}\n                            </Button>\n                          </TooltipTrigger>\n                          <TooltipContent>\n                            <p>\n                              {conversationAutoScroll.state.isAutoScrollEnabled\n                                ? \"Disable\"\n                                : \"Enable\"}{\" \"}\n                              auto-scroll\n                            </p>\n                          </TooltipContent>\n                        </Tooltip>\n                      </div>\n                    </div>\n\n                    {/* Conversation List */}\n                    <div\n                      ref={conversationListRef}\n                      className=\"space-y-2 max-h-96 overflow-y-auto\"\n                    >\n                      {filteredConversations.map((conversation) => (\n                        <Card\n                          key={conversation.id}\n                          className={cn(\n                            \"cursor-pointer transition-all hover:shadow-md\",\n                            selectedConversationId === conversation.id &&\n                              \"border-primary bg-primary/5\",\n                          )}\n                          onClick={() => onConversationSelect(conversation.id)}\n                        >\n                          <CardContent className=\"p-3\">\n                            <div className=\"flex justify-between items-start mb-2\">\n                              <div className=\"flex items-center gap-2\">\n                                <MessageSquare className=\"w-4 h-4\" />\n                                <span className=\"font-medium text-sm\">\n                                  {conversation.id.substring(0, 8)}\n                                </span>\n                              </div>\n                              <Badge\n                                variant={\n                                  conversation.endTime ? \"secondary\" : \"default\"\n                                }\n                                className=\"text-xs\"\n                              >\n                                {conversation.endTime ? \"Completed\" : \"Active\"}\n                              </Badge>\n                            </div>\n\n                            <div className=\"text-xs text-muted-foreground space-y-1\">\n                              <div className=\"flex items-center gap-1\">\n                                <Users className=\"w-3 h-3\" />\n                                <span>\n                                  {conversation.participants?.length || 0}{\" \"}\n                                  participants\n                                </span>\n                              </div>\n                              <div className=\"flex items-center gap-1\">\n                                <MessageSquare className=\"w-3 h-3\" />\n                                <span>\n                                  {conversation.messages?.length || 0} messages\n                                </span>\n                              </div>\n                              <div className=\"flex items-center gap-1\">\n                                <Clock className=\"w-3 h-3\" />\n                                <span>\n                                  {format(\n                                    new Date(conversation.startTime),\n                                    \"HH:mm\",\n                                  )}\n                                </span>\n                              </div>\n                            </div>\n                          </CardContent>\n                        </Card>\n                      ))}\n\n                      {filteredConversations.length === 0 && (\n                        <div className=\"text-center py-8 text-muted-foreground\">\n                          <MessageSquare className=\"w-12 h-12 mx-auto mb-4 opacity-50\" />\n                          <p>No conversations match your filters</p>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </ResizablePanel>\n\n            <ResizableHandle withHandle />\n\n            {/* Center Panel - Message View */}\n            <ResizablePanel defaultSize={45} minSize={30}>\n              <div className=\"h-full flex flex-col\">\n                {selectedConversation ? (\n                  <>\n                    {/* Message Header */}\n                    <div className=\"border-b p-4\">\n                      <div className=\"flex items-center justify-between\">\n                        <h3 className=\"font-semibold\">\n                          Conversation {selectedConversation.id.substring(0, 8)}\n                        </h3>\n\n                        {/* Message controls */}\n                        <div className=\"flex items-center gap-2\">\n                          <Badge variant=\"outline\" className=\"text-xs\">\n                            Progress:{\" \"}\n                            {Math.round(\n                              messageAutoScroll.state.scrollProgress * 100,\n                            )}\n                            %\n                          </Badge>\n\n                          <Tooltip>\n                            <TooltipTrigger asChild>\n                              <Button\n                                variant=\"ghost\"\n                                size=\"sm\"\n                                onClick={messageAutoScroll.jumpToLatest}\n                                disabled={messageAutoScroll.state.isAtBottom}\n                              >\n                                <ArrowDown className=\"w-4 h-4\" />\n                              </Button>\n                            </TooltipTrigger>\n                            <TooltipContent>\n                              <p>Jump to latest</p>\n                            </TooltipContent>\n                          </Tooltip>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Message List */}\n                    <div ref={messageListRef} className=\"flex-1 min-h-0\">\n                      <VirtualizedMessageList\n                        messages={selectedConversation.messages || []}\n                        agents={agents}\n                        height={500}\n                        onMessageClick={(message) =>\n                          console.log(\"Message clicked:\", message)\n                        }\n                        onReply={(message) => console.log(\"Reply to:\", message)}\n                        onReaction={(messageId, type) =>\n                          console.log(\"Reaction:\", type, messageId)\n                        }\n                        className=\"h-full\"\n                      />\n                    </div>\n                  </>\n                ) : (\n                  <div className=\"flex items-center justify-center h-full\">\n                    <div className=\"text-center text-muted-foreground\">\n                      <MessageSquare className=\"w-16 h-16 mx-auto mb-4 opacity-50\" />\n                      <h3 className=\"text-lg font-semibold mb-2\">\n                        No Conversation Selected\n                      </h3>\n                      <p>\n                        Select a conversation from the list to view messages\n                      </p>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </ResizablePanel>\n\n            <ResizableHandle withHandle />\n\n            {/* Right Panel - Analytics and Queue */}\n            <ResizablePanel defaultSize={25} minSize={20}>\n              <Tabs\n                value={selectedTab}\n                onValueChange={(value: any) => setSelectedTab(value)}\n              >\n                <div className=\"border-b p-4\">\n                  <TabsList className=\"grid w-full grid-cols-3\">\n                    <TabsTrigger value=\"conversations\" className=\"text-xs\">\n                      Stats\n                    </TabsTrigger>\n                    <TabsTrigger value=\"queue\" className=\"text-xs\">\n                      Queue\n                    </TabsTrigger>\n                    <TabsTrigger value=\"analytics\" className=\"text-xs\">\n                      Analytics\n                    </TabsTrigger>\n                  </TabsList>\n                </div>\n\n                <div className=\"p-4\">\n                  <TabsContent value=\"conversations\" className=\"mt-0 space-y-4\">\n                    <div className=\"grid grid-cols-2 gap-2\">\n                      <Card className=\"p-3\">\n                        <div className=\"text-center\">\n                          <div className=\"text-2xl font-bold\">\n                            {conversations.length}\n                          </div>\n                          <div className=\"text-xs text-muted-foreground\">\n                            Total\n                          </div>\n                        </div>\n                      </Card>\n                      <Card className=\"p-3\">\n                        <div className=\"text-center\">\n                          <div className=\"text-2xl font-bold text-green-500\">\n                            {conversations.filter((c) => !c.endTime).length}\n                          </div>\n                          <div className=\"text-xs text-muted-foreground\">\n                            Active\n                          </div>\n                        </div>\n                      </Card>\n                    </div>\n                  </TabsContent>\n\n                  <TabsContent value=\"queue\" className=\"mt-0\">\n                    <MessageQueueVisualization\n                      queue={mockQueue}\n                      agents={agents}\n                      conversations={conversations}\n                      metrics={mockMetrics}\n                      onCancelMessage={handleCancelMessage}\n                      onRetryMessage={handleRetryMessage}\n                      onPauseQueue={handlePauseQueue}\n                      onResumeQueue={handleResumeQueue}\n                      isPaused={isQueuePaused}\n                    />\n                  </TabsContent>\n\n                  <TabsContent value=\"analytics\" className=\"mt-0\">\n                    <div className=\"space-y-4\">\n                      <Card className=\"p-4\">\n                        <div className=\"text-center\">\n                          <TrendingUp className=\"w-8 h-8 mx-auto mb-2 text-blue-500\" />\n                          <div className=\"text-lg font-semibold\">Analytics</div>\n                          <div className=\"text-sm text-muted-foreground\">\n                            Advanced metrics coming soon\n                          </div>\n                        </div>\n                      </Card>\n                    </div>\n                  </TabsContent>\n                </div>\n              </Tabs>\n            </ResizablePanel>\n          </ResizablePanelGroup>\n        </div>\n\n        {/* Status Bar */}\n        <div className=\"border-t px-4 py-2 text-xs text-muted-foreground flex items-center justify-between\">\n          <div className=\"flex items-center gap-4\">\n            <span>\n              {filteredConversations.length} of {conversations.length}{\" \"}\n              conversations shown\n            </span>\n            {wsError && (\n              <span className=\"text-red-500 flex items-center gap-1\">\n                <AlertTriangle className=\"w-3 h-3\" />\n                Connection error\n              </span>\n            )}\n          </div>\n\n          <div className=\"flex items-center gap-4\">\n            <span>\n              Auto-scroll:{\" \"}\n              {messageAutoScroll.state.isAutoScrollEnabled ? \"ON\" : \"OFF\"}\n            </span>\n            <span>Queue: {isQueuePaused ? \"PAUSED\" : \"RUNNING\"}</span>\n          </div>\n        </div>\n      </div>\n    </TooltipProvider>\n  );\n}\n"],"names":["ConversationDashboard","generateMockQueue","Array","from","length","_","i","id","conversationId","Math","floor","agentId","type","priority","status","queuedAt","Date","now","random","progress","undefined","estimatedDuration","metadata","messageContent","modelUsed","confidence","generateMockMetrics","totalQueued","totalProcessing","totalCompleted","totalFailed","averageProcessingTime","averageQueueTime","throughputPerMinute","errorRate","queuedByPriority","urgent","high","normal","low","processingByAgent","conversationLoad","conversations","agents","selectedConversationId","onConversationSelect","onSendMessage","className","filters","setFilters","useState","searchQuery","participants","messageTypes","dateRange","messageCountRange","durationRange","hasErrors","isLive","threadCount","agentTypes","searchResults","setSearchResults","selectedTab","setSelectedTab","showAdvancedControls","setShowAdvancedControls","isQueuePaused","setIsQueuePaused","expandedSections","setExpandedSections","search","queue","controls","mockQueue","mockMetrics","conversationListRef","useRef","messageListRef","conversationAutoScroll","useAutoScroll","threshold","enableUserOverride","overrideTimeout","onScrollStateChange","enabled","atBottom","console","log","messageAutoScroll","isConnected","isConnecting","error","wsError","connectionStats","useConversationWebSocket","autoConnect","onEvent","event","filteredConversations","useMemo","filter","conversation","query","toLowerCase","matchesContent","messages","some","msg","content","includes","matchesParticipants","pid","agent","find","a","name","endTime","hasMatchingParticipant","messageCount","to","startTime","selectedConversation","conv","handleSearch","useCallback","trim","mockResults","slice","map","c","flatMap","messageId","snippet","substring","totalResults","handleCancelMessage","handleRetryMessage","handlePauseQueue","handleResumeQueue","toggleSection","section","prev","TooltipProvider","div","cn","h1","span","Badge","variant","total_connections","Tooltip","TooltipTrigger","asChild","Button","size","onClick","Settings","TooltipContent","p","RefreshCw","ResizablePanelGroup","direction","ResizablePanel","defaultSize","minSize","h3","ChevronDown","ChevronRight","ConversationSearch","onFiltersChange","onSearch","scrollToTop","ArrowUp","scrollToBottom","ArrowDown","toggleAutoScroll","state","isAutoScrollEnabled","Eye","EyeOff","ref","Card","CardContent","MessageSquare","Users","Clock","format","ResizableHandle","withHandle","round","scrollProgress","jumpToLatest","disabled","isAtBottom","VirtualizedMessageList","height","onMessageClick","message","onReply","onReaction","Tabs","value","onValueChange","TabsList","TabsTrigger","TabsContent","MessageQueueVisualization","metrics","onCancelMessage","onRetryMessage","onPauseQueue","onResumeQueue","isPaused","TrendingUp","AlertTriangle"],"mappings":"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"}
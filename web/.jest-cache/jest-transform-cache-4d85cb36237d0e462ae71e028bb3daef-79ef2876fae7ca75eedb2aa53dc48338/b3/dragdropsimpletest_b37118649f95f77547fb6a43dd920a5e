9cdd7ba654b2c2bf1210449b426b9099
/**
 * Simplified Drag and Drop Tests
 * Fast synchronous tests for coverage without complex React state
 */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _react1 = require("@testing-library/react");
const _globals = require("@jest/globals");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
// Set short timeout
_globals.jest.setTimeout(1000);
// Simple draggable component
const SimpleDraggable = ({ id, children })=>{
    const [isDragging, setIsDragging] = _react.default.useState(false);
    const handleMouseDown = ()=>{
        setIsDragging(true);
    };
    const handleMouseUp = ()=>{
        setIsDragging(false);
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        "data-testid": `draggable-${id}`,
        className: isDragging ? "dragging" : "",
        onMouseDown: handleMouseDown,
        onMouseUp: handleMouseUp,
        children: children
    });
};
// Simple droppable component
const SimpleDroppable = ({ id, children, onDrop })=>{
    const handleMouseUp = ()=>{
        if (onDrop) {
            onDrop(`item-${id}`);
        }
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        "data-testid": `droppable-${id}`,
        onMouseUp: handleMouseUp,
        children: children
    });
};
describe("Drag and Drop System (Simplified)", ()=>{
    test("should render draggable component", ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(SimpleDraggable, {
            id: "item1",
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                children: "Draggable Item"
            })
        }));
        const draggable = _react1.screen.getByTestId("draggable-item1");
        expect(draggable).toBeInTheDocument();
        expect(draggable).toHaveTextContent("Draggable Item");
    });
    test("should render droppable component", ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(SimpleDroppable, {
            id: "zone1",
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                children: "Drop Zone"
            })
        }));
        const droppable = _react1.screen.getByTestId("droppable-zone1");
        expect(droppable).toBeInTheDocument();
        expect(droppable).toHaveTextContent("Drop Zone");
    });
    test("should handle drag state changes", ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(SimpleDraggable, {
            id: "item1",
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                children: "Item"
            })
        }));
        const draggable = _react1.screen.getByTestId("draggable-item1");
        // Start drag
        _react1.fireEvent.mouseDown(draggable);
        expect(draggable).toHaveClass("dragging");
        // End drag
        _react1.fireEvent.mouseUp(draggable);
        expect(draggable).not.toHaveClass("dragging");
    });
    test("should handle drop events", ()=>{
        const onDrop = _globals.jest.fn();
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(SimpleDroppable, {
            id: "zone1",
            onDrop: onDrop,
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                children: "Drop Zone"
            })
        }));
        const droppable = _react1.screen.getByTestId("droppable-zone1");
        _react1.fireEvent.mouseUp(droppable);
        expect(onDrop).toHaveBeenCalledWith("item-zone1");
    });
    test("should handle multiple components", ()=>{
        (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)(SimpleDraggable, {
                    id: "item1",
                    children: "Item 1"
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(SimpleDraggable, {
                    id: "item2",
                    children: "Item 2"
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(SimpleDroppable, {
                    id: "zone1",
                    children: "Zone 1"
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)(SimpleDroppable, {
                    id: "zone2",
                    children: "Zone 2"
                })
            ]
        }));
        expect(_react1.screen.getByTestId("draggable-item1")).toBeInTheDocument();
        expect(_react1.screen.getByTestId("draggable-item2")).toBeInTheDocument();
        expect(_react1.screen.getByTestId("droppable-zone1")).toBeInTheDocument();
        expect(_react1.screen.getByTestId("droppable-zone2")).toBeInTheDocument();
    });
});

//# sourceMappingURL=data:application/json;base64,
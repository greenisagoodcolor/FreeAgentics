f6b9e837e6b1b95a615b1687f509aacb
"use strict";

/* istanbul ignore next */
function cov_2k387kn02h() {
  var path = "/Users/matthewmoroney/builds/FreeAgentics/web/lib/encryption.ts";
  var hash = "6d6609905587a08de167362cc4aa16b7500a977e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewmoroney/builds/FreeAgentics/web/lib/encryption.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 23
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 23
        }
      },
      "6": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 31
        }
      },
      "7": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 13
          },
          end: {
            line: 12,
            column: 14
          }
        },
        loc: {
          start: {
            line: 12,
            column: 24
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 13
          },
          end: {
            line: 15,
            column: 14
          }
        },
        loc: {
          start: {
            line: 15,
            column: 24
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "encrypt",
        decl: {
          start: {
            line: 19,
            column: 9
          },
          end: {
            line: 19,
            column: 16
          }
        },
        loc: {
          start: {
            line: 19,
            column: 23
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 19
      },
      "4": {
        name: "decrypt",
        decl: {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 16
          }
        },
        loc: {
          start: {
            line: 23,
            column: 23
          },
          end: {
            line: 26,
            column: 1
          }
        },
        line: 23
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {},
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matthewmoroney/builds/FreeAgentics/web/lib/encryption.ts"],
      sourcesContent: ["export function encrypt(text: string): string {\n  // Simple mock encryption for testing\n  return `encrypted_${text}`;\n}\n\nexport function decrypt(text: string): string {\n  // Simple mock decryption for testing\n  return text.replace(\"encrypted_\", \"\");\n}\n"],
      names: ["decrypt", "encrypt", "text", "replace"],
      mappings: ";;;;;;;;;;;IAKgBA,OAAO;eAAPA;;IALAC,OAAO;eAAPA;;;AAAT,SAASA,QAAQC,IAAY;IAClC,qCAAqC;IACrC,OAAO,CAAC,UAAU,EAAEA,KAAK,CAAC;AAC5B;AAEO,SAASF,QAAQE,IAAY;IAClC,qCAAqC;IACrC,OAAOA,KAAKC,OAAO,CAAC,cAAc;AACpC"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6d6609905587a08de167362cc4aa16b7500a977e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2k387kn02h = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2k387kn02h();
cov_2k387kn02h().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2k387kn02h().f[0]++;
  cov_2k387kn02h().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2k387kn02h().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_2k387kn02h().s[3]++;
_export(exports, {
  decrypt: function () {
    /* istanbul ignore next */
    cov_2k387kn02h().f[1]++;
    cov_2k387kn02h().s[4]++;
    return decrypt;
  },
  encrypt: function () {
    /* istanbul ignore next */
    cov_2k387kn02h().f[2]++;
    cov_2k387kn02h().s[5]++;
    return encrypt;
  }
});
function encrypt(text) {
  /* istanbul ignore next */
  cov_2k387kn02h().f[3]++;
  cov_2k387kn02h().s[6]++;
  // Simple mock encryption for testing
  return `encrypted_${text}`;
}
function decrypt(text) {
  /* istanbul ignore next */
  cov_2k387kn02h().f[4]++;
  cov_2k387kn02h().s[7]++;
  // Simple mock decryption for testing
  return text.replace("encrypted_", "");
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkZWNyeXB0IiwiY292XzJrMzg3a24wMmgiLCJmIiwicyIsImVuY3J5cHQiLCJ0ZXh0IiwicmVwbGFjZSJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXR0aGV3bW9yb25leS9idWlsZHMvRnJlZUFnZW50aWNzL3dlYi9saWIvZW5jcnlwdGlvbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gZW5jcnlwdCh0ZXh0OiBzdHJpbmcpOiBzdHJpbmcge1xuICAvLyBTaW1wbGUgbW9jayBlbmNyeXB0aW9uIGZvciB0ZXN0aW5nXG4gIHJldHVybiBgZW5jcnlwdGVkXyR7dGV4dH1gO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZGVjcnlwdCh0ZXh0OiBzdHJpbmcpOiBzdHJpbmcge1xuICAvLyBTaW1wbGUgbW9jayBkZWNyeXB0aW9uIGZvciB0ZXN0aW5nXG4gIHJldHVybiB0ZXh0LnJlcGxhY2UoXCJlbmNyeXB0ZWRfXCIsIFwiXCIpO1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBS2dCQSxPQUFPLFdBQUFBLENBQUE7SUFBQTtJQUFBQyxjQUFBLEdBQUFDLENBQUE7SUFBQUQsY0FBQSxHQUFBRSxDQUFBO1dBQVBILE9BQUE7O0VBTEFJLE9BQU8sV0FBQUEsQ0FBQTtJQUFBO0lBQUFILGNBQUEsR0FBQUMsQ0FBQTtJQUFBRCxjQUFBLEdBQUFFLENBQUE7V0FBUEMsT0FBQTs7O0FBQVQsU0FBU0EsUUFBUUMsSUFBWTtFQUFBO0VBQUFKLGNBQUEsR0FBQUMsQ0FBQTtFQUFBRCxjQUFBLEdBQUFFLENBQUE7RUFDbEM7RUFDQSxPQUFPLGFBQWFFLElBQUEsRUFBTTtBQUM1QjtBQUVPLFNBQVNMLFFBQVFLLElBQVk7RUFBQTtFQUFBSixjQUFBLEdBQUFDLENBQUE7RUFBQUQsY0FBQSxHQUFBRSxDQUFBO0VBQ2xDO0VBQ0EsT0FBT0UsSUFBQSxDQUFLQyxPQUFPLENBQUMsY0FBYztBQUNwQyIsImlnbm9yZUxpc3QiOltdfQ==
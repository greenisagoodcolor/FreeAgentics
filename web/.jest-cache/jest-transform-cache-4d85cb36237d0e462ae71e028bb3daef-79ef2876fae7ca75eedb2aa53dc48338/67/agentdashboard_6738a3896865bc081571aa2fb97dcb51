355d8d0d27b880fbd9fef507d8cbe4f1
"use client";
"use strict";

/* istanbul ignore next */
function cov_1xodi0pun() {
  var path = "/Users/matthewmoroney/builds/FreeAgentics/web/components/agentdashboard.tsx";
  var hash = "60607eb5cbb724eaee8225a7171890b64803f824";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewmoroney/builds/FreeAgentics/web/components/agentdashboard.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 30
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 16
        },
        end: {
          line: 13,
          column: 38
        }
      },
      "5": {
        start: {
          line: 14,
          column: 14
        },
        end: {
          line: 14,
          column: 34
        }
      },
      "6": {
        start: {
          line: 15,
          column: 15
        },
        end: {
          line: 15,
          column: 36
        }
      },
      "7": {
        start: {
          line: 16,
          column: 20
        },
        end: {
          line: 16,
          column: 47
        }
      },
      "8": {
        start: {
          line: 17,
          column: 16
        },
        end: {
          line: 17,
          column: 38
        }
      },
      "9": {
        start: {
          line: 18,
          column: 14
        },
        end: {
          line: 18,
          column: 34
        }
      },
      "10": {
        start: {
          line: 19,
          column: 21
        },
        end: {
          line: 19,
          column: 44
        }
      },
      "11": {
        start: {
          line: 20,
          column: 15
        },
        end: {
          line: 20,
          column: 31
        }
      },
      "12": {
        start: {
          line: 21,
          column: 45
        },
        end: {
          line: 21,
          column: 107
        }
      },
      "13": {
        start: {
          line: 22,
          column: 33
        },
        end: {
          line: 22,
          column: 81
        }
      },
      "14": {
        start: {
          line: 23,
          column: 45
        },
        end: {
          line: 23,
          column: 107
        }
      },
      "15": {
        start: {
          line: 24,
          column: 48
        },
        end: {
          line: 24,
          column: 113
        }
      },
      "16": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 28,
          column: 6
        }
      },
      "17": {
        start: {
          line: 31,
          column: 36
        },
        end: {
          line: 31,
          column: 64
        }
      },
      "18": {
        start: {
          line: 32,
          column: 42
        },
        end: {
          line: 32,
          column: 66
        }
      },
      "19": {
        start: {
          line: 33,
          column: 44
        },
        end: {
          line: 33,
          column: 71
        }
      },
      "20": {
        start: {
          line: 34,
          column: 45
        },
        end: {
          line: 34,
          column: 69
        }
      },
      "21": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 97,
          column: 7
        }
      },
      "22": {
        start: {
          line: 37,
          column: 28
        },
        end: {
          line: 37,
          column: 30
        }
      },
      "23": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 93,
          column: 11
        }
      },
      "24": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 92,
          column: 14
        }
      },
      "25": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 38
        }
      },
      "26": {
        start: {
          line: 99,
          column: 27
        },
        end: {
          line: 104,
          column: 6
        }
      },
      "27": {
        start: {
          line: 100,
          column: 30
        },
        end: {
          line: 100,
          column: 90
        }
      },
      "28": {
        start: {
          line: 101,
          column: 24
        },
        end: {
          line: 101,
          column: 46
        }
      },
      "29": {
        start: {
          line: 102,
          column: 30
        },
        end: {
          line: 102,
          column: 88
        }
      },
      "30": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 46
        }
      },
      "31": {
        start: {
          line: 105,
          column: 4
        },
        end: {
          line: 365,
          column: 7
        }
      },
      "32": {
        start: {
          line: 177,
          column: 71
        },
        end: {
          line: 177,
          column: 101
        }
      },
      "33": {
        start: {
          line: 184,
          column: 72
        },
        end: {
          line: 184,
          column: 94
        }
      },
      "34": {
        start: {
          line: 240,
          column: 69
        },
        end: {
          line: 240,
          column: 88
        }
      },
      "35": {
        start: {
          line: 248,
          column: 69
        },
        end: {
          line: 248,
          column: 88
        }
      },
      "36": {
        start: {
          line: 261,
          column: 96
        },
        end: {
          line: 266,
          column: 60
        }
      },
      "37": {
        start: {
          line: 265,
          column: 65
        },
        end: {
          line: 265,
          column: 85
        }
      },
      "38": {
        start: {
          line: 269,
          column: 96
        },
        end: {
          line: 275,
          column: 60
        }
      },
      "39": {
        start: {
          line: 273,
          column: 65
        },
        end: {
          line: 273,
          column: 85
        }
      },
      "40": {
        start: {
          line: 303,
          column: 106
        },
        end: {
          line: 303,
          column: 152
        }
      },
      "41": {
        start: {
          line: 316,
          column: 85
        },
        end: {
          line: 316,
          column: 101
        }
      },
      "42": {
        start: {
          line: 329,
          column: 85
        },
        end: {
          line: 329,
          column: 102
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 25,
            column: 9
          },
          end: {
            line: 25,
            column: 33
          }
        },
        loc: {
          start: {
            line: 25,
            column: 39
          },
          end: {
            line: 29,
            column: 1
          }
        },
        line: 25
      },
      "2": {
        name: "AgentDashboard",
        decl: {
          start: {
            line: 30,
            column: 9
          },
          end: {
            line: 30,
            column: 23
          }
        },
        loc: {
          start: {
            line: 30,
            column: 77
          },
          end: {
            line: 366,
            column: 1
          }
        },
        line: 30
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 36,
            column: 26
          },
          end: {
            line: 36,
            column: 27
          }
        },
        loc: {
          start: {
            line: 36,
            column: 30
          },
          end: {
            line: 95,
            column: 5
          }
        },
        line: 36
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 38,
            column: 23
          },
          end: {
            line: 38,
            column: 24
          }
        },
        loc: {
          start: {
            line: 38,
            column: 32
          },
          end: {
            line: 93,
            column: 9
          }
        },
        line: 38
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 99,
            column: 41
          },
          end: {
            line: 99,
            column: 42
          }
        },
        loc: {
          start: {
            line: 99,
            column: 50
          },
          end: {
            line: 104,
            column: 5
          }
        },
        line: 99
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 177,
            column: 66
          },
          end: {
            line: 177,
            column: 67
          }
        },
        loc: {
          start: {
            line: 177,
            column: 71
          },
          end: {
            line: 177,
            column: 101
          }
        },
        line: 177
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 184,
            column: 63
          },
          end: {
            line: 184,
            column: 64
          }
        },
        loc: {
          start: {
            line: 184,
            column: 72
          },
          end: {
            line: 184,
            column: 94
          }
        },
        line: 184
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 240,
            column: 65
          },
          end: {
            line: 240,
            column: 66
          }
        },
        loc: {
          start: {
            line: 240,
            column: 69
          },
          end: {
            line: 240,
            column: 88
          }
        },
        line: 240
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 248,
            column: 65
          },
          end: {
            line: 248,
            column: 66
          }
        },
        loc: {
          start: {
            line: 248,
            column: 69
          },
          end: {
            line: 248,
            column: 88
          }
        },
        line: 248
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 261,
            column: 73
          },
          end: {
            line: 261,
            column: 74
          }
        },
        loc: {
          start: {
            line: 261,
            column: 96
          },
          end: {
            line: 266,
            column: 60
          }
        },
        line: 261
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 265,
            column: 61
          },
          end: {
            line: 265,
            column: 62
          }
        },
        loc: {
          start: {
            line: 265,
            column: 65
          },
          end: {
            line: 265,
            column: 85
          }
        },
        line: 265
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 269,
            column: 73
          },
          end: {
            line: 269,
            column: 74
          }
        },
        loc: {
          start: {
            line: 269,
            column: 96
          },
          end: {
            line: 275,
            column: 60
          }
        },
        line: 269
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 273,
            column: 61
          },
          end: {
            line: 273,
            column: 62
          }
        },
        loc: {
          start: {
            line: 273,
            column: 65
          },
          end: {
            line: 273,
            column: 85
          }
        },
        line: 273
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 303,
            column: 101
          },
          end: {
            line: 303,
            column: 102
          }
        },
        loc: {
          start: {
            line: 303,
            column: 106
          },
          end: {
            line: 303,
            column: 152
          }
        },
        line: 303
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 316,
            column: 80
          },
          end: {
            line: 316,
            column: 81
          }
        },
        loc: {
          start: {
            line: 316,
            column: 85
          },
          end: {
            line: 316,
            column: 101
          }
        },
        line: 316
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 329,
            column: 80
          },
          end: {
            line: 329,
            column: 81
          }
        },
        loc: {
          start: {
            line: 329,
            column: 85
          },
          end: {
            line: 329,
            column: 102
          }
        },
        line: 329
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 11
          },
          end: {
            line: 28,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 26,
            column: 35
          },
          end: {
            line: 26,
            column: 38
          }
        }, {
          start: {
            line: 26,
            column: 41
          },
          end: {
            line: 28,
            column: 5
          }
        }],
        line: 26
      },
      "1": {
        loc: {
          start: {
            line: 26,
            column: 11
          },
          end: {
            line: 26,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 11
          },
          end: {
            line: 26,
            column: 14
          }
        }, {
          start: {
            line: 26,
            column: 18
          },
          end: {
            line: 26,
            column: 32
          }
        }],
        line: 26
      },
      "2": {
        loc: {
          start: {
            line: 102,
            column: 30
          },
          end: {
            line: 102,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 30
          },
          end: {
            line: 102,
            column: 52
          }
        }, {
          start: {
            line: 102,
            column: 56
          },
          end: {
            line: 102,
            column: 88
          }
        }],
        line: 102
      },
      "3": {
        loc: {
          start: {
            line: 103,
            column: 15
          },
          end: {
            line: 103,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 15
          },
          end: {
            line: 103,
            column: 28
          }
        }, {
          start: {
            line: 103,
            column: 32
          },
          end: {
            line: 103,
            column: 45
          }
        }],
        line: 103
      },
      "4": {
        loc: {
          start: {
            line: 238,
            column: 65
          },
          end: {
            line: 238,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 238,
            column: 87
          },
          end: {
            line: 238,
            column: 96
          }
        }, {
          start: {
            line: 238,
            column: 99
          },
          end: {
            line: 238,
            column: 108
          }
        }],
        line: 238
      },
      "5": {
        loc: {
          start: {
            line: 246,
            column: 65
          },
          end: {
            line: 246,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 246,
            column: 87
          },
          end: {
            line: 246,
            column: 96
          }
        }, {
          start: {
            line: 246,
            column: 99
          },
          end: {
            line: 246,
            column: 108
          }
        }],
        line: 246
      },
      "6": {
        loc: {
          start: {
            line: 259,
            column: 50
          },
          end: {
            line: 276,
            column: 42
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 259,
            column: 86
          },
          end: {
            line: 267,
            column: 42
          }
        }, {
          start: {
            line: 267,
            column: 59
          },
          end: {
            line: 276,
            column: 42
          }
        }],
        line: 259
      },
      "7": {
        loc: {
          start: {
            line: 303,
            column: 106
          },
          end: {
            line: 303,
            column: 152
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 303,
            column: 106
          },
          end: {
            line: 303,
            column: 128
          }
        }, {
          start: {
            line: 303,
            column: 132
          },
          end: {
            line: 303,
            column: 152
          }
        }],
        line: 303
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matthewmoroney/builds/FreeAgentics/web/components/agentdashboard.tsx"],
      sourcesContent: ["\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport type { Agent } from \"@/lib/types\";\nimport type { AgentDetailed, AgentStatus } from \"@/lib/types/agent-api\";\nimport { Grid3x3, List, RefreshCw, Search } from \"lucide-react\";\nimport { useEffect, useState } from \"react\";\nimport AgentActivityTimeline from \"./agent-activity-timeline\";\nimport AgentCard from \"./agentcard\";\nimport AgentPerformanceChart from \"./agent-performance-chart\";\nimport AgentRelationshipNetwork from \"./agent-relationship-network\";\n\ninterface AgentDashboardProps {\n  agents: Agent[];\n  onSelectAgent: (agent: Agent) => void;\n  selectedAgent: Agent | null;\n  onRefresh?: () => void;\n}\n\ntype ViewMode = \"grid\" | \"list\";\ntype FilterStatus = \"all\" | AgentStatus;\n\nexport default function AgentDashboard({\n  agents,\n  onSelectAgent,\n  selectedAgent,\n  onRefresh,\n}: AgentDashboardProps) {\n  const [viewMode, setViewMode] = useState<ViewMode>(\"grid\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [filterStatus, setFilterStatus] = useState<FilterStatus>(\"all\");\n  const [agentDetails, setAgentDetailed] = useState<\n    Record<string, AgentDetailed>\n  >({});\n\n  // Mock data for agent details - in a real app, this would come from the API\n  useEffect(() => {\n    const mockDetails: Record<string, AgentDetailed> = {};\n    agents.forEach((agent) => {\n      mockDetails[agent.id] = {\n        id: agent.id,\n        name: agent.name,\n        status: [\n          \"idle\",\n          \"moving\",\n          \"interacting\",\n          \"planning\",\n          \"executing\",\n          \"learning\",\n        ][Math.floor(Math.random() * 6)] as AgentStatus,\n        position: agent.position,\n        personality: {\n          openness: Math.random(),\n          conscientiousness: Math.random(),\n          extraversion: Math.random(),\n          agreeableness: Math.random(),\n          neuroticism: Math.random(),\n        },\n        capabilities: [\"movement\", \"perception\", \"communication\"],\n        tags: [\"explorer\", \"active\"],\n        metadata: {},\n        resources: {\n          energy: Math.floor(Math.random() * 100),\n          health: Math.floor(Math.random() * 100),\n          memory_used: Math.floor(Math.random() * 80),\n          memory_capacity: 100,\n        },\n        goals: [\n          {\n            id: \"goal-1\",\n            description: \"Explore the environment\",\n            priority: 0.9,\n            deadline: null,\n          },\n          {\n            id: \"goal-2\",\n            description: \"Gather resources\",\n            priority: 0.6,\n            deadline: null,\n          },\n        ],\n        beliefs: [],\n        relationships: [],\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString(),\n      };\n    });\n    setAgentDetailed(mockDetails);\n  }, [agents]);\n\n  // Filter agents based on search and status\n  const filteredAgents = agents.filter((agent) => {\n    const matchesSearch = agent.name\n      .toLowerCase()\n      .includes(searchQuery.toLowerCase());\n    const details = agentDetails[agent.id];\n    const matchesStatus =\n      filterStatus === \"all\" || details?.status === filterStatus;\n    return matchesSearch && matchesStatus;\n  });\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      <CardHeader className=\"pb-4\">\n        <div className=\"flex items-center justify-between\">\n          <CardTitle className=\"text-2xl font-bold\">Agent Dashboard</CardTitle>\n          <Button\n            onClick={onRefresh}\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"flex items-center gap-2\"\n          >\n            <RefreshCw className=\"w-4 h-4\" />\n            Refresh\n          </Button>\n        </div>\n      </CardHeader>\n\n      <CardContent className=\"flex-1 overflow-hidden\">\n        <Tabs defaultValue=\"overview\" className=\"h-full flex flex-col\">\n          <TabsList className=\"grid w-full grid-cols-4\">\n            <TabsTrigger value=\"overview\">Overview</TabsTrigger>\n            <TabsTrigger value=\"activity\">Activity</TabsTrigger>\n            <TabsTrigger value=\"performance\">Performance</TabsTrigger>\n            <TabsTrigger value=\"relationships\">Relationships</TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"overview\" className=\"flex-1 overflow-hidden\">\n            <div className=\"space-y-4 h-full flex flex-col\">\n              {/* Controls */}\n              <div className=\"flex items-center gap-4\">\n                <div className=\"flex-1 relative\">\n                  <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-4 h-4\" />\n                  <Input\n                    placeholder=\"Search agents...\"\n                    value={searchQuery}\n                    onChange={(e) => setSearchQuery(e.target.value)}\n                    className=\"pl-9\"\n                  />\n                </div>\n                <Select\n                  value={filterStatus}\n                  onValueChange={(value) =>\n                    setFilterStatus(value as FilterStatus)\n                  }\n                >\n                  <SelectTrigger className=\"w-[180px]\">\n                    <SelectValue placeholder=\"Filter by status\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"all\">All Status</SelectItem>\n                    <SelectItem value=\"idle\">Idle</SelectItem>\n                    <SelectItem value=\"moving\">Moving</SelectItem>\n                    <SelectItem value=\"interacting\">Interacting</SelectItem>\n                    <SelectItem value=\"planning\">Planning</SelectItem>\n                    <SelectItem value=\"executing\">Executing</SelectItem>\n                    <SelectItem value=\"learning\">Learning</SelectItem>\n                    <SelectItem value=\"error\">Error</SelectItem>\n                    <SelectItem value=\"offline\">Offline</SelectItem>\n                  </SelectContent>\n                </Select>\n                <div className=\"flex items-center gap-2\">\n                  <Button\n                    variant={viewMode === \"grid\" ? \"default\" : \"outline\"}\n                    size=\"icon\"\n                    onClick={() => setViewMode(\"grid\")}\n                  >\n                    <Grid3x3 className=\"w-4 h-4\" />\n                  </Button>\n                  <Button\n                    variant={viewMode === \"list\" ? \"default\" : \"outline\"}\n                    size=\"icon\"\n                    onClick={() => setViewMode(\"list\")}\n                  >\n                    <List className=\"w-4 h-4\" />\n                  </Button>\n                </div>\n              </div>\n\n              {/* Agent Grid/List */}\n              <ScrollArea className=\"flex-1\">\n                {viewMode === \"grid\" ? (\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\n                    {filteredAgents.map((agent) => (\n                      <AgentCard\n                        key={agent.id}\n                        agent={agent}\n                        agentData={agentDetails[agent.id]}\n                        isSelected={selectedAgent?.id === agent.id}\n                        onClick={() => onSelectAgent(agent)}\n                      />\n                    ))}\n                  </div>\n                ) : (\n                  <div className=\"space-y-2\">\n                    {filteredAgents.map((agent) => (\n                      <AgentCard\n                        key={agent.id}\n                        agent={agent}\n                        agentData={agentDetails[agent.id]}\n                        isSelected={selectedAgent?.id === agent.id}\n                        onClick={() => onSelectAgent(agent)}\n                        className=\"w-full\"\n                      />\n                    ))}\n                  </div>\n                )}\n              </ScrollArea>\n\n              {/* Summary Stats */}\n              <div className=\"grid grid-cols-4 gap-4 pt-4 border-t\">\n                <Card className=\"p-4\">\n                  <div className=\"text-sm text-muted-foreground\">\n                    Total Agents\n                  </div>\n                  <div className=\"text-2xl font-bold\">{agents.length}</div>\n                </Card>\n                <Card className=\"p-4\">\n                  <div className=\"text-sm text-muted-foreground\">Active</div>\n                  <div className=\"text-2xl font-bold text-green-500\">\n                    {\n                      Object.values(agentDetails).filter(\n                        (d) => d.status !== \"offline\" && d.status !== \"error\",\n                      ).length\n                    }\n                  </div>\n                </Card>\n                <Card className=\"p-4\">\n                  <div className=\"text-sm text-muted-foreground\">\n                    In Conversation\n                  </div>\n                  <div className=\"text-2xl font-bold text-blue-500\">\n                    {agents.filter((a) => a.inConversation).length}\n                  </div>\n                </Card>\n                <Card className=\"p-4\">\n                  <div className=\"text-sm text-muted-foreground\">\n                    Autonomous\n                  </div>\n                  <div className=\"text-2xl font-bold text-purple-500\">\n                    {agents.filter((a) => a.autonomyEnabled).length}\n                  </div>\n                </Card>\n              </div>\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"activity\" className=\"flex-1 overflow-hidden\">\n            <AgentActivityTimeline\n              agents={agents}\n              agentDetails={agentDetails}\n            />\n          </TabsContent>\n\n          <TabsContent value=\"performance\" className=\"flex-1 overflow-hidden\">\n            <AgentPerformanceChart\n              agents={agents}\n              agentDetails={agentDetails}\n            />\n          </TabsContent>\n\n          <TabsContent value=\"relationships\" className=\"flex-1 overflow-hidden\">\n            <AgentRelationshipNetwork agents={agents} />\n          </TabsContent>\n        </Tabs>\n      </CardContent>\n    </div>\n  );\n}\n"],
      names: ["AgentDashboard", "agents", "onSelectAgent", "selectedAgent", "onRefresh", "viewMode", "setViewMode", "useState", "searchQuery", "setSearchQuery", "filterStatus", "setFilterStatus", "agentDetails", "setAgentDetailed", "useEffect", "mockDetails", "forEach", "agent", "id", "name", "status", "Math", "floor", "random", "position", "personality", "openness", "conscientiousness", "extraversion", "agreeableness", "neuroticism", "capabilities", "tags", "metadata", "resources", "energy", "health", "memory_used", "memory_capacity", "goals", "description", "priority", "deadline", "beliefs", "relationships", "created_at", "Date", "toISOString", "updated_at", "filteredAgents", "filter", "matchesSearch", "toLowerCase", "includes", "details", "matchesStatus", "div", "className", "CardHeader", "CardTitle", "Button", "onClick", "variant", "size", "RefreshCw", "CardContent", "Tabs", "defaultValue", "TabsList", "TabsTrigger", "value", "TabsContent", "Search", "Input", "placeholder", "onChange", "e", "target", "Select", "onValueChange", "SelectTrigger", "SelectValue", "SelectContent", "SelectItem", "Grid3x3", "List", "ScrollArea", "map", "AgentCard", "agentData", "isSelected", "Card", "length", "Object", "values", "d", "a", "inConversation", "autonomyEnabled", "AgentActivityTimeline", "AgentPerformanceChart", "AgentRelationshipNetwork"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "60607eb5cbb724eaee8225a7171890b64803f824"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1xodi0pun = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1xodi0pun();
cov_1xodi0pun().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1xodi0pun().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1xodi0pun().f[0]++;
    cov_1xodi0pun().s[2]++;
    return AgentDashboard;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1xodi0pun().s[3]++, require("react/jsx-runtime"));
const _button =
/* istanbul ignore next */
(cov_1xodi0pun().s[4]++, require("./ui/button"));
const _card =
/* istanbul ignore next */
(cov_1xodi0pun().s[5]++, require("./ui/card"));
const _input =
/* istanbul ignore next */
(cov_1xodi0pun().s[6]++, require("./ui/input"));
const _scrollarea =
/* istanbul ignore next */
(cov_1xodi0pun().s[7]++, require("./ui/scroll-area"));
const _select =
/* istanbul ignore next */
(cov_1xodi0pun().s[8]++, require("./ui/select"));
const _tabs =
/* istanbul ignore next */
(cov_1xodi0pun().s[9]++, require("./ui/tabs"));
const _lucidereact =
/* istanbul ignore next */
(cov_1xodi0pun().s[10]++, require("lucide-react"));
const _react =
/* istanbul ignore next */
(cov_1xodi0pun().s[11]++, require("react"));
const _agentactivitytimeline =
/* istanbul ignore next */
(/*#__PURE__*/cov_1xodi0pun().s[12]++, _interop_require_default(require("./agent-activity-timeline")));
const _agentcard =
/* istanbul ignore next */
(/*#__PURE__*/cov_1xodi0pun().s[13]++, _interop_require_default(require("./agentcard")));
const _agentperformancechart =
/* istanbul ignore next */
(/*#__PURE__*/cov_1xodi0pun().s[14]++, _interop_require_default(require("./agent-performance-chart")));
const _agentrelationshipnetwork =
/* istanbul ignore next */
(/*#__PURE__*/cov_1xodi0pun().s[15]++, _interop_require_default(require("./agent-relationship-network")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1xodi0pun().f[1]++;
  cov_1xodi0pun().s[16]++;
  return /* istanbul ignore next */(cov_1xodi0pun().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1xodi0pun().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1xodi0pun().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1xodi0pun().b[0][1]++, {
    default: obj
  });
}
function AgentDashboard({
  agents,
  onSelectAgent,
  selectedAgent,
  onRefresh
}) {
  /* istanbul ignore next */
  cov_1xodi0pun().f[2]++;
  const [viewMode, setViewMode] =
  /* istanbul ignore next */
  (cov_1xodi0pun().s[17]++, (0, _react.useState)("grid"));
  const [searchQuery, setSearchQuery] =
  /* istanbul ignore next */
  (cov_1xodi0pun().s[18]++, (0, _react.useState)(""));
  const [filterStatus, setFilterStatus] =
  /* istanbul ignore next */
  (cov_1xodi0pun().s[19]++, (0, _react.useState)("all"));
  const [agentDetails, setAgentDetailed] =
  /* istanbul ignore next */
  (cov_1xodi0pun().s[20]++, (0, _react.useState)({}));
  // Mock data for agent details - in a real app, this would come from the API
  /* istanbul ignore next */
  cov_1xodi0pun().s[21]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1xodi0pun().f[3]++;
    const mockDetails =
    /* istanbul ignore next */
    (cov_1xodi0pun().s[22]++, {});
    /* istanbul ignore next */
    cov_1xodi0pun().s[23]++;
    agents.forEach(agent => {
      /* istanbul ignore next */
      cov_1xodi0pun().f[4]++;
      cov_1xodi0pun().s[24]++;
      mockDetails[agent.id] = {
        id: agent.id,
        name: agent.name,
        status: ["idle", "moving", "interacting", "planning", "executing", "learning"][Math.floor(Math.random() * 6)],
        position: agent.position,
        personality: {
          openness: Math.random(),
          conscientiousness: Math.random(),
          extraversion: Math.random(),
          agreeableness: Math.random(),
          neuroticism: Math.random()
        },
        capabilities: ["movement", "perception", "communication"],
        tags: ["explorer", "active"],
        metadata: {},
        resources: {
          energy: Math.floor(Math.random() * 100),
          health: Math.floor(Math.random() * 100),
          memory_used: Math.floor(Math.random() * 80),
          memory_capacity: 100
        },
        goals: [{
          id: "goal-1",
          description: "Explore the environment",
          priority: 0.9,
          deadline: null
        }, {
          id: "goal-2",
          description: "Gather resources",
          priority: 0.6,
          deadline: null
        }],
        beliefs: [],
        relationships: [],
        created_at: new Date().toISOString(),
        updated_at: new Date().toISOString()
      };
    });
    /* istanbul ignore next */
    cov_1xodi0pun().s[25]++;
    setAgentDetailed(mockDetails);
  }, [agents]);
  // Filter agents based on search and status
  const filteredAgents =
  /* istanbul ignore next */
  (cov_1xodi0pun().s[26]++, agents.filter(agent => {
    /* istanbul ignore next */
    cov_1xodi0pun().f[5]++;
    const matchesSearch =
    /* istanbul ignore next */
    (cov_1xodi0pun().s[27]++, agent.name.toLowerCase().includes(searchQuery.toLowerCase()));
    const details =
    /* istanbul ignore next */
    (cov_1xodi0pun().s[28]++, agentDetails[agent.id]);
    const matchesStatus =
    /* istanbul ignore next */
    (cov_1xodi0pun().s[29]++,
    /* istanbul ignore next */
    (cov_1xodi0pun().b[2][0]++, filterStatus === "all") ||
    /* istanbul ignore next */
    (cov_1xodi0pun().b[2][1]++, details?.status === filterStatus));
    /* istanbul ignore next */
    cov_1xodi0pun().s[30]++;
    return /* istanbul ignore next */(cov_1xodi0pun().b[3][0]++, matchesSearch) &&
    /* istanbul ignore next */
    (cov_1xodi0pun().b[3][1]++, matchesStatus);
  }));
  /* istanbul ignore next */
  cov_1xodi0pun().s[31]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "flex flex-col h-full",
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
      className: "pb-4",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center justify-between",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
          className: "text-2xl font-bold",
          children: "Agent Dashboard"
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
          onClick: onRefresh,
          variant: "outline",
          size: "sm",
          className: "flex items-center gap-2",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.RefreshCw, {
            className: "w-4 h-4"
          }), "Refresh"]
        })]
      })
    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
      className: "flex-1 overflow-hidden",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_tabs.Tabs, {
        defaultValue: "overview",
        className: "h-full flex flex-col",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_tabs.TabsList, {
          className: "grid w-full grid-cols-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsTrigger, {
            value: "overview",
            children: "Overview"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsTrigger, {
            value: "activity",
            children: "Activity"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsTrigger, {
            value: "performance",
            children: "Performance"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsTrigger, {
            value: "relationships",
            children: "Relationships"
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsContent, {
          value: "overview",
          className: "flex-1 overflow-hidden",
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "space-y-4 h-full flex flex-col",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center gap-4",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex-1 relative",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Search, {
                  className: "absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-4 h-4"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
                  placeholder: "Search agents...",
                  value: searchQuery,
                  onChange: e => {
                    /* istanbul ignore next */
                    cov_1xodi0pun().f[6]++;
                    cov_1xodi0pun().s[32]++;
                    return setSearchQuery(e.target.value);
                  },
                  className: "pl-9"
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_select.Select, {
                value: filterStatus,
                onValueChange: value => {
                  /* istanbul ignore next */
                  cov_1xodi0pun().f[7]++;
                  cov_1xodi0pun().s[33]++;
                  return setFilterStatus(value);
                },
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectTrigger, {
                  className: "w-[180px]",
                  children: /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectValue, {
                    placeholder: "Filter by status"
                  })
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_select.SelectContent, {
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                    value: "all",
                    children: "All Status"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                    value: "idle",
                    children: "Idle"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                    value: "moving",
                    children: "Moving"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                    value: "interacting",
                    children: "Interacting"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                    value: "planning",
                    children: "Planning"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                    value: "executing",
                    children: "Executing"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                    value: "learning",
                    children: "Learning"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                    value: "error",
                    children: "Error"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                    value: "offline",
                    children: "Offline"
                  })]
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-center gap-2",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
                  variant: viewMode === "grid" ?
                  /* istanbul ignore next */
                  (cov_1xodi0pun().b[4][0]++, "default") :
                  /* istanbul ignore next */
                  (cov_1xodi0pun().b[4][1]++, "outline"),
                  size: "icon",
                  onClick: () => {
                    /* istanbul ignore next */
                    cov_1xodi0pun().f[8]++;
                    cov_1xodi0pun().s[34]++;
                    return setViewMode("grid");
                  },
                  children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Grid3x3, {
                    className: "w-4 h-4"
                  })
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
                  variant: viewMode === "list" ?
                  /* istanbul ignore next */
                  (cov_1xodi0pun().b[5][0]++, "default") :
                  /* istanbul ignore next */
                  (cov_1xodi0pun().b[5][1]++, "outline"),
                  size: "icon",
                  onClick: () => {
                    /* istanbul ignore next */
                    cov_1xodi0pun().f[9]++;
                    cov_1xodi0pun().s[35]++;
                    return setViewMode("list");
                  },
                  children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.List, {
                    className: "w-4 h-4"
                  })
                })]
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_scrollarea.ScrollArea, {
              className: "flex-1",
              children: viewMode === "grid" ?
              /* istanbul ignore next */
              (/*#__PURE__*/cov_1xodi0pun().b[6][0]++, (0, _jsxruntime.jsx)("div", {
                className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4",
                children: filteredAgents.map(agent => {
                  /* istanbul ignore next */
                  cov_1xodi0pun().f[10]++;
                  cov_1xodi0pun().s[36]++;
                  return /*#__PURE__*/(0, _jsxruntime.jsx)(_agentcard.default, {
                    agent: agent,
                    agentData: agentDetails[agent.id],
                    isSelected: selectedAgent?.id === agent.id,
                    onClick: () => {
                      /* istanbul ignore next */
                      cov_1xodi0pun().f[11]++;
                      cov_1xodi0pun().s[37]++;
                      return onSelectAgent(agent);
                    }
                  }, agent.id);
                })
              })) :
              /* istanbul ignore next */
              (/*#__PURE__*/cov_1xodi0pun().b[6][1]++, (0, _jsxruntime.jsx)("div", {
                className: "space-y-2",
                children: filteredAgents.map(agent => {
                  /* istanbul ignore next */
                  cov_1xodi0pun().f[12]++;
                  cov_1xodi0pun().s[38]++;
                  return /*#__PURE__*/(0, _jsxruntime.jsx)(_agentcard.default, {
                    agent: agent,
                    agentData: agentDetails[agent.id],
                    isSelected: selectedAgent?.id === agent.id,
                    onClick: () => {
                      /* istanbul ignore next */
                      cov_1xodi0pun().f[13]++;
                      cov_1xodi0pun().s[39]++;
                      return onSelectAgent(agent);
                    },
                    className: "w-full"
                  }, agent.id);
                })
              }))
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "grid grid-cols-4 gap-4 pt-4 border-t",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
                className: "p-4",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: "text-sm text-muted-foreground",
                  children: "Total Agents"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: "text-2xl font-bold",
                  children: agents.length
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
                className: "p-4",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: "text-sm text-muted-foreground",
                  children: "Active"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: "text-2xl font-bold text-green-500",
                  children: Object.values(agentDetails).filter(d => {
                    /* istanbul ignore next */
                    cov_1xodi0pun().f[14]++;
                    cov_1xodi0pun().s[40]++;
                    return /* istanbul ignore next */(cov_1xodi0pun().b[7][0]++, d.status !== "offline") &&
                    /* istanbul ignore next */
                    (cov_1xodi0pun().b[7][1]++, d.status !== "error");
                  }).length
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
                className: "p-4",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: "text-sm text-muted-foreground",
                  children: "In Conversation"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: "text-2xl font-bold text-blue-500",
                  children: agents.filter(a => {
                    /* istanbul ignore next */
                    cov_1xodi0pun().f[15]++;
                    cov_1xodi0pun().s[41]++;
                    return a.inConversation;
                  }).length
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
                className: "p-4",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: "text-sm text-muted-foreground",
                  children: "Autonomous"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: "text-2xl font-bold text-purple-500",
                  children: agents.filter(a => {
                    /* istanbul ignore next */
                    cov_1xodi0pun().f[16]++;
                    cov_1xodi0pun().s[42]++;
                    return a.autonomyEnabled;
                  }).length
                })]
              })]
            })]
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsContent, {
          value: "activity",
          className: "flex-1 overflow-hidden",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_agentactivitytimeline.default, {
            agents: agents,
            agentDetails: agentDetails
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsContent, {
          value: "performance",
          className: "flex-1 overflow-hidden",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_agentperformancechart.default, {
            agents: agents,
            agentDetails: agentDetails
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsContent, {
          value: "relationships",
          className: "flex-1 overflow-hidden",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_agentrelationshipnetwork.default, {
            agents: agents
          })
        })]
      })
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
3638285a4be81ace00d3294d161e69e9
"use client";
"use strict";

/* istanbul ignore next */
function cov_yudmz47fz() {
  var path = "/Users/matthewmoroney/builds/FreeAgentics/web/components/conversation/virtualized-message-list.tsx";
  var hash = "2e0842eb47dd6272eb1a2cb7187bbd8f94935dc4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewmoroney/builds/FreeAgentics/web/components/conversation/virtualized-message-list.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 38
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 14,
          column: 44
        }
      },
      "6": {
        start: {
          line: 15,
          column: 17
        },
        end: {
          line: 15,
          column: 36
        }
      },
      "7": {
        start: {
          line: 16,
          column: 16
        },
        end: {
          line: 16,
          column: 39
        }
      },
      "8": {
        start: {
          line: 17,
          column: 15
        },
        end: {
          line: 17,
          column: 37
        }
      },
      "9": {
        start: {
          line: 18,
          column: 16
        },
        end: {
          line: 18,
          column: 39
        }
      },
      "10": {
        start: {
          line: 19,
          column: 17
        },
        end: {
          line: 19,
          column: 41
        }
      },
      "11": {
        start: {
          line: 20,
          column: 21
        },
        end: {
          line: 20,
          column: 44
        }
      },
      "12": {
        start: {
          line: 21,
          column: 15
        },
        end: {
          line: 21,
          column: 41
        }
      },
      "13": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 51
        }
      },
      "14": {
        start: {
          line: 23,
          column: 39
        },
        end: {
          line: 23,
          column: 51
        }
      },
      "15": {
        start: {
          line: 24,
          column: 28
        },
        end: {
          line: 24,
          column: 41
        }
      },
      "16": {
        start: {
          line: 25,
          column: 27
        },
        end: {
          line: 25,
          column: 40
        }
      },
      "17": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 28,
          column: 20
        }
      },
      "18": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 66
        }
      },
      "19": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "20": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 19
        }
      },
      "21": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "22": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 37,
          column: 10
        }
      },
      "23": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 53
        }
      },
      "24": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "25": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 30
        }
      },
      "26": {
        start: {
          line: 43,
          column: 17
        },
        end: {
          line: 45,
          column: 5
        }
      },
      "27": {
        start: {
          line: 46,
          column: 32
        },
        end: {
          line: 46,
          column: 88
        }
      },
      "28": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 56,
          column: 5
        }
      },
      "29": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "30": {
        start: {
          line: 49,
          column: 23
        },
        end: {
          line: 49,
          column: 95
        }
      },
      "31": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 54,
          column: 13
        }
      },
      "32": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 51,
          column: 57
        }
      },
      "33": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 39
        }
      },
      "34": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 57,
          column: 25
        }
      },
      "35": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "36": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 31
        }
      },
      "37": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 18
        }
      },
      "38": {
        start: {
          line: 63,
          column: 34
        },
        end: {
          line: 352,
          column: 2
        }
      },
      "39": {
        start: {
          line: 64,
          column: 125
        },
        end: {
          line: 64,
          column: 129
        }
      },
      "40": {
        start: {
          line: 65,
          column: 20
        },
        end: {
          line: 65,
          column: 35
        }
      },
      "41": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 66,
          column: 30
        }
      },
      "42": {
        start: {
          line: 66,
          column: 18
        },
        end: {
          line: 66,
          column: 30
        }
      },
      "43": {
        start: {
          line: 68,
          column: 19
        },
        end: {
          line: 68,
          column: 70
        }
      },
      "44": {
        start: {
          line: 68,
          column: 40
        },
        end: {
          line: 68,
          column: 69
        }
      },
      "45": {
        start: {
          line: 70,
          column: 28
        },
        end: {
          line: 70,
          column: 94
        }
      },
      "46": {
        start: {
          line: 72,
          column: 26
        },
        end: {
          line: 72,
          column: 91
        }
      },
      "47": {
        start: {
          line: 72,
          column: 50
        },
        end: {
          line: 72,
          column: 90
        }
      },
      "48": {
        start: {
          line: 74,
          column: 31
        },
        end: {
          line: 74,
          column: 138
        }
      },
      "49": {
        start: {
          line: 74,
          column: 107
        },
        end: {
          line: 74,
          column: 137
        }
      },
      "50": {
        start: {
          line: 76,
          column: 26
        },
        end: {
          line: 76,
          column: 125
        }
      },
      "51": {
        start: {
          line: 76,
          column: 78
        },
        end: {
          line: 76,
          column: 117
        }
      },
      "52": {
        start: {
          line: 78,
          column: 24
        },
        end: {
          line: 78,
          column: 63
        }
      },
      "53": {
        start: {
          line: 79,
          column: 31
        },
        end: {
          line: 81,
          column: 5
        }
      },
      "54": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 34
        }
      },
      "55": {
        start: {
          line: 82,
          column: 24
        },
        end: {
          line: 85,
          column: 5
        }
      },
      "56": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 28
        }
      },
      "57": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 27
        }
      },
      "58": {
        start: {
          line: 86,
          column: 27
        },
        end: {
          line: 88,
          column: 5
        }
      },
      "59": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 39
        }
      },
      "60": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 113,
          column: 5
        }
      },
      "61": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 112,
          column: 11
        }
      },
      "62": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 351,
          column: 7
        }
      },
      "63": {
        start: {
          line: 262,
          column: 111
        },
        end: {
          line: 266,
          column: 61
        }
      },
      "64": {
        start: {
          line: 280,
          column: 103
        },
        end: {
          line: 289,
          column: 82
        }
      },
      "65": {
        start: {
          line: 283,
          column: 57
        },
        end: {
          line: 283,
          column: 86
        }
      },
      "66": {
        start: {
          line: 321,
          column: 57
        },
        end: {
          line: 321,
          column: 87
        }
      },
      "67": {
        start: {
          line: 330,
          column: 57
        },
        end: {
          line: 330,
          column: 87
        }
      },
      "68": {
        start: {
          line: 353,
          column: 0
        },
        end: {
          line: 353,
          column: 40
        }
      },
      "69": {
        start: {
          line: 356,
          column: 16
        },
        end: {
          line: 356,
          column: 17
        }
      },
      "70": {
        start: {
          line: 357,
          column: 25
        },
        end: {
          line: 357,
          column: 32
        }
      },
      "71": {
        start: {
          line: 358,
          column: 4
        },
        end: {
          line: 364,
          column: 5
        }
      },
      "72": {
        start: {
          line: 359,
          column: 23
        },
        end: {
          line: 359,
          column: 92
        }
      },
      "73": {
        start: {
          line: 359,
          column: 42
        },
        end: {
          line: 359,
          column: 91
        }
      },
      "74": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 360,
          column: 27
        }
      },
      "75": {
        start: {
          line: 360,
          column: 21
        },
        end: {
          line: 360,
          column: 27
        }
      },
      "76": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 361,
          column: 16
        }
      },
      "77": {
        start: {
          line: 362,
          column: 8
        },
        end: {
          line: 362,
          column: 32
        }
      },
      "78": {
        start: {
          line: 363,
          column: 8
        },
        end: {
          line: 363,
          column: 30
        }
      },
      "79": {
        start: {
          line: 363,
          column: 24
        },
        end: {
          line: 363,
          column: 30
        }
      },
      "80": {
        start: {
          line: 365,
          column: 4
        },
        end: {
          line: 365,
          column: 17
        }
      },
      "81": {
        start: {
          line: 367,
          column: 45
        },
        end: {
          line: 504,
          column: 2
        }
      },
      "82": {
        start: {
          line: 368,
          column: 20
        },
        end: {
          line: 368,
          column: 44
        }
      },
      "83": {
        start: {
          line: 369,
          column: 52
        },
        end: {
          line: 369,
          column: 78
        }
      },
      "84": {
        start: {
          line: 371,
          column: 4
        },
        end: {
          line: 378,
          column: 7
        }
      },
      "85": {
        start: {
          line: 372,
          column: 8
        },
        end: {
          line: 374,
          column: 9
        }
      },
      "86": {
        start: {
          line: 373,
          column: 12
        },
        end: {
          line: 373,
          column: 69
        }
      },
      "87": {
        start: {
          line: 380,
          column: 25
        },
        end: {
          line: 383,
          column: 10
        }
      },
      "88": {
        start: {
          line: 381,
          column: 29
        },
        end: {
          line: 381,
          column: 74
        }
      },
      "89": {
        start: {
          line: 382,
          column: 8
        },
        end: {
          line: 382,
          column: 42
        }
      },
      "90": {
        start: {
          line: 385,
          column: 27
        },
        end: {
          line: 399,
          column: 6
        }
      },
      "91": {
        start: {
          line: 386,
          column: 8
        },
        end: {
          line: 396,
          column: 16
        }
      },
      "92": {
        start: {
          line: 386,
          column: 68
        },
        end: {
          line: 396,
          column: 13
        }
      },
      "93": {
        start: {
          line: 401,
          column: 24
        },
        end: {
          line: 413,
          column: 6
        }
      },
      "94": {
        start: {
          line: 402,
          column: 25
        },
        end: {
          line: 404,
          column: 9
        }
      },
      "95": {
        start: {
          line: 405,
          column: 8
        },
        end: {
          line: 407,
          column: 9
        }
      },
      "96": {
        start: {
          line: 406,
          column: 12
        },
        end: {
          line: 406,
          column: 45
        }
      },
      "97": {
        start: {
          line: 408,
          column: 8
        },
        end: {
          line: 408,
          column: 24
        }
      },
      "98": {
        start: {
          line: 414,
          column: 21
        },
        end: {
          line: 434,
          column: 6
        }
      },
      "99": {
        start: {
          line: 414,
          column: 46
        },
        end: {
          line: 424,
          column: 9
        }
      },
      "100": {
        start: {
          line: 436,
          column: 29
        },
        end: {
          line: 447,
          column: 6
        }
      },
      "101": {
        start: {
          line: 438,
          column: 23
        },
        end: {
          line: 438,
          column: 25
        }
      },
      "102": {
        start: {
          line: 440,
          column: 8
        },
        end: {
          line: 440,
          column: 41
        }
      },
      "103": {
        start: {
          line: 440,
          column: 26
        },
        end: {
          line: 440,
          column: 41
        }
      },
      "104": {
        start: {
          line: 442,
          column: 8
        },
        end: {
          line: 442,
          column: 40
        }
      },
      "105": {
        start: {
          line: 442,
          column: 25
        },
        end: {
          line: 442,
          column: 40
        }
      },
      "106": {
        start: {
          line: 443,
          column: 8
        },
        end: {
          line: 443,
          column: 24
        }
      },
      "107": {
        start: {
          line: 448,
          column: 21
        },
        end: {
          line: 448,
          column: 39
        }
      },
      "108": {
        start: {
          line: 449,
          column: 4
        },
        end: {
          line: 468,
          column: 5
        }
      },
      "109": {
        start: {
          line: 450,
          column: 8
        },
        end: {
          line: 467,
          column: 11
        }
      },
      "110": {
        start: {
          line: 469,
          column: 4
        },
        end: {
          line: 503,
          column: 7
        }
      },
      "111": {
        start: {
          line: 491,
          column: 24
        },
        end: {
          line: 491,
          column: 50
        }
      },
      "112": {
        start: {
          line: 492,
          column: 24
        },
        end: {
          line: 492,
          column: 85
        }
      },
      "113": {
        start: {
          line: 505,
          column: 0
        },
        end: {
          line: 505,
          column: 62
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 22,
            column: 9
          },
          end: {
            line: 22,
            column: 33
          }
        },
        loc: {
          start: {
            line: 22,
            column: 47
          },
          end: {
            line: 29,
            column: 1
          }
        },
        line: 22
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 26,
            column: 39
          },
          end: {
            line: 26,
            column: 40
          }
        },
        loc: {
          start: {
            line: 26,
            column: 61
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 26
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 30,
            column: 9
          },
          end: {
            line: 30,
            column: 34
          }
        },
        loc: {
          start: {
            line: 30,
            column: 53
          },
          end: {
            line: 62,
            column: 1
          }
        },
        line: 30
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 63,
            column: 51
          },
          end: {
            line: 63,
            column: 52
          }
        },
        loc: {
          start: {
            line: 63,
            column: 77
          },
          end: {
            line: 352,
            column: 1
          }
        },
        line: 63
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 68,
            column: 31
          },
          end: {
            line: 68,
            column: 32
          }
        },
        loc: {
          start: {
            line: 68,
            column: 40
          },
          end: {
            line: 68,
            column: 69
          }
        },
        line: 68
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 72,
            column: 40
          },
          end: {
            line: 72,
            column: 41
          }
        },
        loc: {
          start: {
            line: 72,
            column: 50
          },
          end: {
            line: 72,
            column: 90
          }
        },
        line: 72
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 74,
            column: 98
          },
          end: {
            line: 74,
            column: 99
          }
        },
        loc: {
          start: {
            line: 74,
            column: 107
          },
          end: {
            line: 74,
            column: 137
          }
        },
        line: 74
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 76,
            column: 73
          },
          end: {
            line: 76,
            column: 74
          }
        },
        loc: {
          start: {
            line: 76,
            column: 78
          },
          end: {
            line: 76,
            column: 117
          }
        },
        line: 76
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 79,
            column: 31
          },
          end: {
            line: 79,
            column: 32
          }
        },
        loc: {
          start: {
            line: 79,
            column: 35
          },
          end: {
            line: 81,
            column: 5
          }
        },
        line: 79
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 82,
            column: 24
          },
          end: {
            line: 82,
            column: 25
          }
        },
        loc: {
          start: {
            line: 82,
            column: 29
          },
          end: {
            line: 85,
            column: 5
          }
        },
        line: 82
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 86,
            column: 27
          },
          end: {
            line: 86,
            column: 28
          }
        },
        loc: {
          start: {
            line: 86,
            column: 35
          },
          end: {
            line: 88,
            column: 5
          }
        },
        line: 86
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 262,
            column: 88
          },
          end: {
            line: 262,
            column: 89
          }
        },
        loc: {
          start: {
            line: 262,
            column: 111
          },
          end: {
            line: 266,
            column: 61
          }
        },
        line: 262
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 280,
            column: 77
          },
          end: {
            line: 280,
            column: 78
          }
        },
        loc: {
          start: {
            line: 280,
            column: 103
          },
          end: {
            line: 289,
            column: 82
          }
        },
        line: 280
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 283,
            column: 53
          },
          end: {
            line: 283,
            column: 54
          }
        },
        loc: {
          start: {
            line: 283,
            column: 57
          },
          end: {
            line: 283,
            column: 86
          }
        },
        line: 283
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 321,
            column: 53
          },
          end: {
            line: 321,
            column: 54
          }
        },
        loc: {
          start: {
            line: 321,
            column: 57
          },
          end: {
            line: 321,
            column: 87
          }
        },
        line: 321
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 330,
            column: 53
          },
          end: {
            line: 330,
            column: 54
          }
        },
        loc: {
          start: {
            line: 330,
            column: 57
          },
          end: {
            line: 330,
            column: 87
          }
        },
        line: 330
      },
      "17": {
        name: "calculateThreadDepth",
        decl: {
          start: {
            line: 355,
            column: 9
          },
          end: {
            line: 355,
            column: 29
          }
        },
        loc: {
          start: {
            line: 355,
            column: 49
          },
          end: {
            line: 366,
            column: 1
          }
        },
        line: 355
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 359,
            column: 37
          },
          end: {
            line: 359,
            column: 38
          }
        },
        loc: {
          start: {
            line: 359,
            column: 42
          },
          end: {
            line: 359,
            column: 91
          }
        },
        line: 359
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 367,
            column: 62
          },
          end: {
            line: 367,
            column: 63
          }
        },
        loc: {
          start: {
            line: 367,
            column: 240
          },
          end: {
            line: 504,
            column: 1
          }
        },
        line: 367
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 371,
            column: 26
          },
          end: {
            line: 371,
            column: 27
          }
        },
        loc: {
          start: {
            line: 371,
            column: 30
          },
          end: {
            line: 375,
            column: 5
          }
        },
        line: 371
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 380,
            column: 49
          },
          end: {
            line: 380,
            column: 50
          }
        },
        loc: {
          start: {
            line: 380,
            column: 94
          },
          end: {
            line: 383,
            column: 5
          }
        },
        line: 380
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 385,
            column: 47
          },
          end: {
            line: 385,
            column: 48
          }
        },
        loc: {
          start: {
            line: 385,
            column: 51
          },
          end: {
            line: 397,
            column: 5
          }
        },
        line: 385
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 386,
            column: 48
          },
          end: {
            line: 386,
            column: 49
          }
        },
        loc: {
          start: {
            line: 386,
            column: 68
          },
          end: {
            line: 396,
            column: 13
          }
        },
        line: 386
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 401,
            column: 44
          },
          end: {
            line: 401,
            column: 45
          }
        },
        loc: {
          start: {
            line: 401,
            column: 48
          },
          end: {
            line: 409,
            column: 5
          }
        },
        line: 401
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 414,
            column: 41
          },
          end: {
            line: 414,
            column: 42
          }
        },
        loc: {
          start: {
            line: 414,
            column: 46
          },
          end: {
            line: 424,
            column: 9
          }
        },
        line: 414
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 436,
            column: 53
          },
          end: {
            line: 436,
            column: 54
          }
        },
        loc: {
          start: {
            line: 436,
            column: 57
          },
          end: {
            line: 444,
            column: 5
          }
        },
        line: 436
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 490,
            column: 29
          },
          end: {
            line: 490,
            column: 30
          }
        },
        loc: {
          start: {
            line: 490,
            column: 33
          },
          end: {
            line: 493,
            column: 21
          }
        },
        line: 490
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "1": {
        loc: {
          start: {
            line: 27,
            column: 15
          },
          end: {
            line: 27,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 29
          },
          end: {
            line: 27,
            column: 45
          }
        }, {
          start: {
            line: 27,
            column: 48
          },
          end: {
            line: 27,
            column: 65
          }
        }],
        line: 27
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "3": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 31,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 31,
            column: 20
          }
        }, {
          start: {
            line: 31,
            column: 24
          },
          end: {
            line: 31,
            column: 27
          }
        }, {
          start: {
            line: 31,
            column: 31
          },
          end: {
            line: 31,
            column: 45
          }
        }],
        line: 31
      },
      "4": {
        loc: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "5": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 20
          }
        }, {
          start: {
            line: 34,
            column: 24
          },
          end: {
            line: 34,
            column: 47
          }
        }, {
          start: {
            line: 34,
            column: 51
          },
          end: {
            line: 34,
            column: 76
          }
        }],
        line: 34
      },
      "6": {
        loc: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "7": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 40,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 40,
            column: 13
          }
        }, {
          start: {
            line: 40,
            column: 17
          },
          end: {
            line: 40,
            column: 31
          }
        }],
        line: 40
      },
      "8": {
        loc: {
          start: {
            line: 46,
            column: 32
          },
          end: {
            line: 46,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 32
          },
          end: {
            line: 46,
            column: 53
          }
        }, {
          start: {
            line: 46,
            column: 57
          },
          end: {
            line: 46,
            column: 88
          }
        }],
        line: 46
      },
      "9": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "10": {
        loc: {
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 48,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 48,
            column: 29
          }
        }, {
          start: {
            line: 48,
            column: 33
          },
          end: {
            line: 48,
            column: 79
          }
        }],
        line: 48
      },
      "11": {
        loc: {
          start: {
            line: 49,
            column: 23
          },
          end: {
            line: 49,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 49,
            column: 47
          },
          end: {
            line: 49,
            column: 88
          }
        }, {
          start: {
            line: 49,
            column: 91
          },
          end: {
            line: 49,
            column: 95
          }
        }],
        line: 49
      },
      "12": {
        loc: {
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 54,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 54,
            column: 13
          }
        }, {
          start: {
            line: 52,
            column: 19
          },
          end: {
            line: 54,
            column: 13
          }
        }],
        line: 50
      },
      "13": {
        loc: {
          start: {
            line: 50,
            column: 16
          },
          end: {
            line: 50,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 16
          },
          end: {
            line: 50,
            column: 20
          }
        }, {
          start: {
            line: 50,
            column: 25
          },
          end: {
            line: 50,
            column: 33
          }
        }, {
          start: {
            line: 50,
            column: 37
          },
          end: {
            line: 50,
            column: 45
          }
        }],
        line: 50
      },
      "14": {
        loc: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "15": {
        loc: {
          start: {
            line: 64,
            column: 103
          },
          end: {
            line: 64,
            column: 120
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 64,
            column: 118
          },
          end: {
            line: 64,
            column: 120
          }
        }],
        line: 64
      },
      "16": {
        loc: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 66,
            column: 30
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 66,
            column: 30
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "17": {
        loc: {
          start: {
            line: 70,
            column: 28
          },
          end: {
            line: 70,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 28
          },
          end: {
            line: 70,
            column: 61
          }
        }, {
          start: {
            line: 70,
            column: 65
          },
          end: {
            line: 70,
            column: 94
          }
        }],
        line: 70
      },
      "18": {
        loc: {
          start: {
            line: 74,
            column: 31
          },
          end: {
            line: 74,
            column: 138
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 31
          },
          end: {
            line: 74,
            column: 61
          }
        }, {
          start: {
            line: 74,
            column: 65
          },
          end: {
            line: 74,
            column: 138
          }
        }],
        line: 74
      },
      "19": {
        loc: {
          start: {
            line: 76,
            column: 26
          },
          end: {
            line: 76,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 76,
            column: 59
          },
          end: {
            line: 76,
            column: 118
          }
        }, {
          start: {
            line: 76,
            column: 121
          },
          end: {
            line: 76,
            column: 125
          }
        }],
        line: 76
      },
      "20": {
        loc: {
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "21": {
        loc: {
          start: {
            line: 104,
            column: 28
          },
          end: {
            line: 107,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 28
          },
          end: {
            line: 104,
            column: 40
          }
        }, {
          start: {
            line: 104,
            column: 44
          },
          end: {
            line: 104,
            column: 61
          }
        }, {
          start: {
            line: 104,
            column: 79
          },
          end: {
            line: 107,
            column: 30
          }
        }],
        line: 104
      },
      "22": {
        loc: {
          start: {
            line: 118,
            column: 62
          },
          end: {
            line: 118,
            column: 116
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 118,
            column: 62
          },
          end: {
            line: 118,
            column: 77
          }
        }, {
          start: {
            line: 118,
            column: 81
          },
          end: {
            line: 118,
            column: 116
          }
        }],
        line: 118
      },
      "23": {
        loc: {
          start: {
            line: 121,
            column: 16
          },
          end: {
            line: 135,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 121,
            column: 16
          },
          end: {
            line: 121,
            column: 27
          }
        }, {
          start: {
            line: 121,
            column: 31
          },
          end: {
            line: 121,
            column: 44
          }
        }, {
          start: {
            line: 121,
            column: 62
          },
          end: {
            line: 135,
            column: 18
          }
        }],
        line: 121
      },
      "24": {
        loc: {
          start: {
            line: 147,
            column: 57
          },
          end: {
            line: 147,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 147,
            column: 57
          },
          end: {
            line: 147,
            column: 70
          }
        }, {
          start: {
            line: 147,
            column: 74
          },
          end: {
            line: 147,
            column: 80
          }
        }],
        line: 147
      },
      "25": {
        loc: {
          start: {
            line: 149,
            column: 46
          },
          end: {
            line: 153,
            column: 38
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 149,
            column: 55
          },
          end: {
            line: 149,
            column: 90
          }
        }, {
          start: {
            line: 149,
            column: 93
          },
          end: {
            line: 153,
            column: 38
          }
        }],
        line: 149
      },
      "26": {
        loc: {
          start: {
            line: 149,
            column: 93
          },
          end: {
            line: 153,
            column: 38
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 149,
            column: 137
          },
          end: {
            line: 151,
            column: 38
          }
        }, {
          start: {
            line: 151,
            column: 55
          },
          end: {
            line: 153,
            column: 38
          }
        }],
        line: 149
      },
      "27": {
        loc: {
          start: {
            line: 165,
            column: 54
          },
          end: {
            line: 165,
            column: 126
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 54
          },
          end: {
            line: 165,
            column: 66
          }
        }, {
          start: {
            line: 165,
            column: 71
          },
          end: {
            line: 165,
            column: 125
          }
        }],
        line: 165
      },
      "28": {
        loc: {
          start: {
            line: 165,
            column: 71
          },
          end: {
            line: 165,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 165,
            column: 101
          },
          end: {
            line: 165,
            column: 106
          }
        }, {
          start: {
            line: 165,
            column: 109
          },
          end: {
            line: 165,
            column: 125
          }
        }],
        line: 165
      },
      "29": {
        loc: {
          start: {
            line: 167,
            column: 40
          },
          end: {
            line: 171,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 167,
            column: 40
          },
          end: {
            line: 167,
            column: 67
          }
        }, {
          start: {
            line: 167,
            column: 85
          },
          end: {
            line: 171,
            column: 42
          }
        }],
        line: 167
      },
      "30": {
        loc: {
          start: {
            line: 172,
            column: 40
          },
          end: {
            line: 181,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 40
          },
          end: {
            line: 172,
            column: 74
          }
        }, {
          start: {
            line: 172,
            column: 92
          },
          end: {
            line: 181,
            column: 42
          }
        }],
        line: 172
      },
      "31": {
        loc: {
          start: {
            line: 182,
            column: 40
          },
          end: {
            line: 186,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 182,
            column: 40
          },
          end: {
            line: 182,
            column: 62
          }
        }, {
          start: {
            line: 182,
            column: 66
          },
          end: {
            line: 182,
            column: 99
          }
        }, {
          start: {
            line: 182,
            column: 117
          },
          end: {
            line: 186,
            column: 42
          }
        }],
        line: 182
      },
      "32": {
        loc: {
          start: {
            line: 191,
            column: 40
          },
          end: {
            line: 218,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 191,
            column: 40
          },
          end: {
            line: 191,
            column: 51
          }
        }, {
          start: {
            line: 191,
            column: 55
          },
          end: {
            line: 191,
            column: 68
          }
        }, {
          start: {
            line: 191,
            column: 86
          },
          end: {
            line: 218,
            column: 42
          }
        }],
        line: 191
      },
      "33": {
        loc: {
          start: {
            line: 204,
            column: 68
          },
          end: {
            line: 204,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 204,
            column: 68
          },
          end: {
            line: 204,
            column: 87
          }
        }, {
          start: {
            line: 204,
            column: 91
          },
          end: {
            line: 204,
            column: 101
          }
        }],
        line: 204
      },
      "34": {
        loc: {
          start: {
            line: 225,
            column: 32
          },
          end: {
            line: 277,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 225,
            column: 32
          },
          end: {
            line: 225,
            column: 44
          }
        }, {
          start: {
            line: 225,
            column: 62
          },
          end: {
            line: 277,
            column: 34
          }
        }],
        line: 225
      },
      "35": {
        loc: {
          start: {
            line: 228,
            column: 40
          },
          end: {
            line: 234,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 228,
            column: 40
          },
          end: {
            line: 228,
            column: 68
          }
        }, {
          start: {
            line: 228,
            column: 86
          },
          end: {
            line: 234,
            column: 42
          }
        }],
        line: 228
      },
      "36": {
        loc: {
          start: {
            line: 235,
            column: 40
          },
          end: {
            line: 243,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 235,
            column: 40
          },
          end: {
            line: 235,
            column: 72
          }
        }, {
          start: {
            line: 235,
            column: 90
          },
          end: {
            line: 243,
            column: 42
          }
        }],
        line: 235
      },
      "37": {
        loc: {
          start: {
            line: 244,
            column: 40
          },
          end: {
            line: 258,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 244,
            column: 40
          },
          end: {
            line: 244,
            column: 72
          }
        }, {
          start: {
            line: 244,
            column: 90
          },
          end: {
            line: 258,
            column: 42
          }
        }],
        line: 244
      },
      "38": {
        loc: {
          start: {
            line: 247,
            column: 48
          },
          end: {
            line: 249,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 247,
            column: 48
          },
          end: {
            line: 247,
            column: 95
          }
        }, {
          start: {
            line: 247,
            column: 113
          },
          end: {
            line: 249,
            column: 50
          }
        }],
        line: 247
      },
      "39": {
        loc: {
          start: {
            line: 250,
            column: 48
          },
          end: {
            line: 252,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 250,
            column: 48
          },
          end: {
            line: 250,
            column: 92
          }
        }, {
          start: {
            line: 250,
            column: 110
          },
          end: {
            line: 252,
            column: 50
          }
        }],
        line: 250
      },
      "40": {
        loc: {
          start: {
            line: 253,
            column: 48
          },
          end: {
            line: 255,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 253,
            column: 48
          },
          end: {
            line: 253,
            column: 93
          }
        }, {
          start: {
            line: 253,
            column: 111
          },
          end: {
            line: 255,
            column: 50
          }
        }],
        line: 253
      },
      "41": {
        loc: {
          start: {
            line: 259,
            column: 40
          },
          end: {
            line: 275,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 259,
            column: 40
          },
          end: {
            line: 259,
            column: 64
          }
        }, {
          start: {
            line: 259,
            column: 68
          },
          end: {
            line: 259,
            column: 102
          }
        }, {
          start: {
            line: 259,
            column: 120
          },
          end: {
            line: 275,
            column: 42
          }
        }],
        line: 259
      },
      "42": {
        loc: {
          start: {
            line: 267,
            column: 48
          },
          end: {
            line: 273,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 267,
            column: 48
          },
          end: {
            line: 267,
            column: 82
          }
        }, {
          start: {
            line: 267,
            column: 100
          },
          end: {
            line: 273,
            column: 50
          }
        }],
        line: 267
      },
      "43": {
        loc: {
          start: {
            line: 278,
            column: 32
          },
          end: {
            line: 290,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 278,
            column: 32
          },
          end: {
            line: 278,
            column: 59
          }
        }, {
          start: {
            line: 278,
            column: 63
          },
          end: {
            line: 278,
            column: 100
          }
        }, {
          start: {
            line: 278,
            column: 118
          },
          end: {
            line: 290,
            column: 34
          }
        }],
        line: 278
      },
      "44": {
        loc: {
          start: {
            line: 291,
            column: 32
          },
          end: {
            line: 301,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 291,
            column: 32
          },
          end: {
            line: 291,
            column: 50
          }
        }, {
          start: {
            line: 291,
            column: 68
          },
          end: {
            line: 301,
            column: 34
          }
        }],
        line: 291
      },
      "45": {
        loc: {
          start: {
            line: 360,
            column: 8
          },
          end: {
            line: 360,
            column: 27
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 360,
            column: 8
          },
          end: {
            line: 360,
            column: 27
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 360
      },
      "46": {
        loc: {
          start: {
            line: 363,
            column: 8
          },
          end: {
            line: 363,
            column: 30
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 363,
            column: 8
          },
          end: {
            line: 363,
            column: 30
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 363
      },
      "47": {
        loc: {
          start: {
            line: 367,
            column: 137
          },
          end: {
            line: 367,
            column: 156
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 367,
            column: 152
          },
          end: {
            line: 367,
            column: 156
          }
        }],
        line: 367
      },
      "48": {
        loc: {
          start: {
            line: 367,
            column: 158
          },
          end: {
            line: 367,
            column: 176
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 367,
            column: 172
          },
          end: {
            line: 367,
            column: 176
          }
        }],
        line: 367
      },
      "49": {
        loc: {
          start: {
            line: 367,
            column: 178
          },
          end: {
            line: 367,
            column: 205
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 367,
            column: 201
          },
          end: {
            line: 367,
            column: 205
          }
        }],
        line: 367
      },
      "50": {
        loc: {
          start: {
            line: 367,
            column: 207
          },
          end: {
            line: 367,
            column: 224
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 367,
            column: 222
          },
          end: {
            line: 367,
            column: 224
          }
        }],
        line: 367
      },
      "51": {
        loc: {
          start: {
            line: 372,
            column: 8
          },
          end: {
            line: 374,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 372,
            column: 8
          },
          end: {
            line: 374,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 372
      },
      "52": {
        loc: {
          start: {
            line: 372,
            column: 12
          },
          end: {
            line: 372,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 372,
            column: 12
          },
          end: {
            line: 372,
            column: 28
          }
        }, {
          start: {
            line: 372,
            column: 32
          },
          end: {
            line: 372,
            column: 47
          }
        }],
        line: 372
      },
      "53": {
        loc: {
          start: {
            line: 388,
            column: 25
          },
          end: {
            line: 388,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 388,
            column: 25
          },
          end: {
            line: 388,
            column: 34
          }
        }, {
          start: {
            line: 388,
            column: 38
          },
          end: {
            line: 388,
            column: 43
          }
        }],
        line: 388
      },
      "54": {
        loc: {
          start: {
            line: 405,
            column: 8
          },
          end: {
            line: 407,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 405,
            column: 8
          },
          end: {
            line: 407,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 405
      },
      "55": {
        loc: {
          start: {
            line: 440,
            column: 8
          },
          end: {
            line: 440,
            column: 41
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 440,
            column: 8
          },
          end: {
            line: 440,
            column: 41
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 440
      },
      "56": {
        loc: {
          start: {
            line: 442,
            column: 8
          },
          end: {
            line: 442,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 442,
            column: 8
          },
          end: {
            line: 442,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 442
      },
      "57": {
        loc: {
          start: {
            line: 449,
            column: 4
          },
          end: {
            line: 468,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 449,
            column: 4
          },
          end: {
            line: 468,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 449
      },
      "58": {
        loc: {
          start: {
            line: 484,
            column: 12
          },
          end: {
            line: 501,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 484,
            column: 12
          },
          end: {
            line: 484,
            column: 29
          }
        }, {
          start: {
            line: 484,
            column: 47
          },
          end: {
            line: 501,
            column: 14
          }
        }],
        line: 484
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0, 0],
      "22": [0, 0],
      "23": [0, 0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0, 0],
      "32": [0, 0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0, 0],
      "42": [0, 0],
      "43": [0, 0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0],
      "48": [0],
      "49": [0],
      "50": [0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matthewmoroney/builds/FreeAgentics/web/components/conversation/virtualized-message-list.tsx"],
      sourcesContent: ["\"use client\";\n\nimport React, {\n  memo,\n  useCallback,\n  useMemo,\n  useRef,\n  useEffect,\n  useState,\n} from \"react\";\nimport { FixedSizeList as List, ListChildComponentProps } from \"react-window\";\nimport { format } from \"date-fns\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\";\nimport type { Message, Agent, ConversationThread } from \"@/lib/types\";\nimport {\n  CornerDownRight,\n  MessageSquare,\n  Clock,\n  User,\n  Bot,\n  AlertCircle,\n  CheckCircle,\n  XCircle,\n  Loader2,\n  Hash,\n  ThumbsUp,\n  ThumbsDown,\n  Reply,\n  MoreHorizontal,\n} from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\n\nexport interface VirtualizedMessageListProps {\n  messages: Message[];\n  agents: Agent[];\n  threads?: ConversationThread[];\n  height: number;\n  onMessageClick?: (message: Message) => void;\n  onReply?: (message: Message) => void;\n  onReaction?: (messageId: string, type: string) => void;\n  showMetadata?: boolean;\n  showThreads?: boolean;\n  showTypingIndicators?: boolean;\n  typingAgents?: Record<string, { text?: string; messageId?: string }>;\n  className?: string;\n}\n\ninterface MessageItemProps extends ListChildComponentProps {\n  data: {\n    messages: Message[];\n    agents: Agent[];\n    threads?: ConversationThread[];\n    onMessageClick?: (message: Message) => void;\n    onReply?: (message: Message) => void;\n    onReaction?: (messageId: string, type: string) => void;\n    showMetadata: boolean;\n    showThreads: boolean;\n    typingAgents?: Record<string, { text?: string; messageId?: string }>;\n  };\n}\n\nconst MessageItem = memo<MessageItemProps>(({ index, style, data }) => {\n  const {\n    messages,\n    agents,\n    threads,\n    onMessageClick,\n    onReply,\n    onReaction,\n    showMetadata,\n    showThreads,\n    typingAgents = {},\n  } = data;\n\n  const message = messages[index];\n  if (!message) return null;\n\n  // Find the agent who sent this message\n  const sender = agents.find((agent) => agent.id === message.senderId);\n\n  // Determine if this is a system message\n  const isSystemMessage =\n    message.metadata?.isSystemMessage || message.senderId === \"system\";\n\n  // Get thread information\n  const messageThread = threads?.find(\n    (thread) => thread.id === message.metadata?.threadId,\n  );\n\n  // Check if this message is being responded to\n  const isBeingRespondedTo =\n    message.metadata?.respondingTo &&\n    Object.values(typingAgents).some((agent) => agent.messageId === message.id);\n\n  // Get the parent message if this is a reply\n  const parentMessage = message.metadata?.respondingTo\n    ? messages.find((m) => m.id === message.metadata?.respondingTo)\n    : null;\n\n  // Calculate message depth for thread visualization\n  const threadDepth = calculateThreadDepth(message, messages);\n\n  const handleMessageClick = () => {\n    onMessageClick?.(message);\n  };\n\n  const handleReply = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    onReply?.(message);\n  };\n\n  const handleReaction = (type: string) => {\n    onReaction?.(message.id, type);\n  };\n\n  if (isSystemMessage) {\n    return (\n      <div style={style} className=\"px-4 py-2\">\n        <div className=\"flex justify-center\">\n          <div className=\"max-w-2xl\">\n            <div className=\"bg-muted/50 rounded-lg px-4 py-2 text-center text-sm text-muted-foreground\">\n              <AlertCircle className=\"inline-block w-4 h-4 mr-2\" />\n              {message.content}\n              {showMetadata && message.timestamp && (\n                <span className=\"ml-2 text-xs\">\n                  {format(new Date(message.timestamp), \"HH:mm:ss\")}\n                </span>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      style={style}\n      className=\"px-4 py-2 hover:bg-muted/20 transition-colors\"\n    >\n      <div\n        className={cn(\n          \"group cursor-pointer\",\n          threadDepth > 0 && \"ml-8 border-l-2 border-muted pl-4\",\n        )}\n        onClick={handleMessageClick}\n      >\n        {/* Thread connection line */}\n        {showThreads && parentMessage && (\n          <div className=\"flex items-center text-xs text-muted-foreground mb-2\">\n            <CornerDownRight className=\"w-3 h-3 mr-1\" />\n            <span>\n              Replying to: {parentMessage.content.substring(0, 30)}...\n            </span>\n          </div>\n        )}\n\n        <div className=\"flex gap-3\">\n          {/* Avatar */}\n          <Avatar className=\"w-8 h-8 flex-shrink-0\">\n            <AvatarImage src={sender?.avatar} />\n            <AvatarFallback\n              style={{ backgroundColor: sender?.color || \"#666\" }}\n            >\n              {sender ? (\n                sender.name.charAt(0).toUpperCase()\n              ) : message.senderId === \"user\" ? (\n                <User className=\"w-4 h-4\" />\n              ) : (\n                <Bot className=\"w-4 h-4\" />\n              )}\n            </AvatarFallback>\n          </Avatar>\n\n          <div className=\"flex-1 min-w-0\">\n            {/* Message header */}\n            <div className=\"flex items-center gap-2 mb-1\">\n              <span className=\"font-semibold text-sm\">\n                {sender?.name ||\n                  (message.senderId === \"user\" ? \"You\" : message.senderId)}\n              </span>\n\n              {/* Agent type badge */}\n              {message.metadata?.agentType && (\n                <Badge variant=\"outline\" className=\"text-xs\">\n                  {message.metadata.agentType}\n                </Badge>\n              )}\n\n              {/* AI generated badge */}\n              {message.metadata?.isGeneratedByLLM && (\n                <Badge variant=\"secondary\" className=\"text-xs\">\n                  <Bot className=\"w-3 h-3 mr-1\" />\n                  AI\n                </Badge>\n              )}\n\n              {/* Message type badge */}\n              {message.metadata?.type && message.metadata.type !== \"agent\" && (\n                <Badge variant=\"outline\" className=\"text-xs\">\n                  {message.metadata.type}\n                </Badge>\n              )}\n\n              {/* Timestamp */}\n              <span className=\"text-xs text-muted-foreground\">\n                {format(new Date(message.timestamp), \"HH:mm:ss\")}\n              </span>\n\n              {/* Thread indicator */}\n              {showThreads && messageThread && (\n                <TooltipProvider>\n                  <Tooltip>\n                    <TooltipTrigger>\n                      <Hash className=\"w-3 h-3 text-muted-foreground\" />\n                    </TooltipTrigger>\n                    <TooltipContent>\n                      <p>Thread: {messageThread.topic || \"Untitled\"}</p>\n                      <p className=\"text-xs\">\n                        {messageThread.messageCount} messages\n                      </p>\n                    </TooltipContent>\n                  </Tooltip>\n                </TooltipProvider>\n              )}\n            </div>\n\n            {/* Message content */}\n            <div className=\"text-sm mb-2\">{message.content}</div>\n\n            {/* Message metadata */}\n            {showMetadata && (\n              <div className=\"flex flex-wrap gap-2 text-xs text-muted-foreground\">\n                {/* Confidence */}\n                {message.metadata?.confidence && (\n                  <span>\n                    Confidence: {Math.round(message.metadata.confidence * 100)}%\n                  </span>\n                )}\n\n                {/* Processing time */}\n                {message.metadata?.processingTime && (\n                  <span>\n                    <Clock className=\"inline w-3 h-3 mr-1\" />\n                    {message.metadata.processingTime}ms\n                  </span>\n                )}\n\n                {/* Delivery status */}\n                {message.metadata?.deliveryStatus && (\n                  <span className=\"flex items-center gap-1\">\n                    {message.metadata.deliveryStatus === \"delivered\" && (\n                      <CheckCircle className=\"w-3 h-3 text-green-500\" />\n                    )}\n                    {message.metadata.deliveryStatus === \"failed\" && (\n                      <XCircle className=\"w-3 h-3 text-red-500\" />\n                    )}\n                    {message.metadata.deliveryStatus === \"pending\" && (\n                      <Loader2 className=\"w-3 h-3 animate-spin text-yellow-500\" />\n                    )}\n                    {message.metadata.deliveryStatus}\n                  </span>\n                )}\n\n                {/* Topics */}\n                {message.metadata?.topics &&\n                  message.metadata.topics.length > 0 && (\n                    <div className=\"flex gap-1\">\n                      {message.metadata.topics\n                        .slice(0, 3)\n                        .map((topic: string) => (\n                          <Badge\n                            key={topic}\n                            variant=\"outline\"\n                            className=\"text-xs\"\n                          >\n                            {topic}\n                          </Badge>\n                        ))}\n                      {message.metadata.topics.length > 3 && (\n                        <span>+{message.metadata.topics.length - 3} more</span>\n                      )}\n                    </div>\n                  )}\n              </div>\n            )}\n\n            {/* Reactions */}\n            {message.metadata?.reactions &&\n              message.metadata.reactions.length > 0 && (\n                <div className=\"flex gap-1 mt-2\">\n                  {message.metadata.reactions.map((reaction: any) => (\n                    <Badge\n                      key={`${reaction.agentId}-${reaction.type}`}\n                      variant=\"outline\"\n                      className=\"text-xs cursor-pointer hover:bg-muted\"\n                      onClick={() => handleReaction(reaction.type)}\n                    >\n                      {reaction.type} {reaction.agentId}\n                    </Badge>\n                  ))}\n                </div>\n              )}\n\n            {/* Response indicator */}\n            {isBeingRespondedTo && (\n              <div className=\"flex items-center gap-2 mt-2 text-xs text-muted-foreground\">\n                <Loader2 className=\"w-3 h-3 animate-spin\" />\n                <span>Agents are responding...</span>\n              </div>\n            )}\n\n            {/* Action buttons (shown on hover) */}\n            <div className=\"flex gap-1 mt-2 opacity-0 group-hover:opacity-100 transition-opacity\">\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                className=\"h-6 px-2 text-xs\"\n                onClick={handleReply}\n              >\n                <Reply className=\"w-3 h-3 mr-1\" />\n                Reply\n              </Button>\n\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                className=\"h-6 px-2 text-xs\"\n                onClick={() => handleReaction(\"\uD83D\uDC4D\")}\n              >\n                <ThumbsUp className=\"w-3 h-3\" />\n              </Button>\n\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                className=\"h-6 px-2 text-xs\"\n                onClick={() => handleReaction(\"\uD83D\uDC4E\")}\n              >\n                <ThumbsDown className=\"w-3 h-3\" />\n              </Button>\n\n              <Button variant=\"ghost\" size=\"sm\" className=\"h-6 px-2 text-xs\">\n                <MoreHorizontal className=\"w-3 h-3\" />\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nMessageItem.displayName = \"MessageItem\";\n\n// Helper function to calculate thread depth\nfunction calculateThreadDepth(message: Message, messages: Message[]): number {\n  let depth = 0;\n  let currentMessage = message;\n\n  while (currentMessage.metadata?.parentMessageId) {\n    const parent = messages.find(\n      (m) => m.id === currentMessage.metadata?.parentMessageId,\n    );\n    if (!parent) break;\n    depth++;\n    currentMessage = parent;\n    if (depth > 10) break; // Prevent infinite loops\n  }\n\n  return depth;\n}\n\nexport const VirtualizedMessageList = memo<VirtualizedMessageListProps>(\n  ({\n    messages,\n    agents,\n    threads,\n    height,\n    onMessageClick,\n    onReply,\n    onReaction,\n    showMetadata = true,\n    showThreads = true,\n    showTypingIndicators = true,\n    typingAgents = {},\n    className,\n  }) => {\n    const listRef = useRef<List>(null);\n    const [shouldAutoScroll, setShouldAutoScroll] = useState(true);\n\n    // Auto-scroll to bottom when new messages arrive\n    useEffect(() => {\n      if (shouldAutoScroll && listRef.current) {\n        listRef.current.scrollToItem(messages.length - 1, \"end\");\n      }\n    }, [messages.length, shouldAutoScroll]);\n\n    // Handle scroll to detect if user is at bottom\n    const handleScroll = useCallback(\n      ({ scrollTop, clientHeight, scrollHeight }: any) => {\n        const isNearBottom = scrollTop + clientHeight >= scrollHeight - 50;\n        setShouldAutoScroll(isNearBottom);\n      },\n      [],\n    );\n\n    // Create typing indicator messages\n    const typingMessages = useMemo(() => {\n      return Object.entries(typingAgents).map(([agentId, info]) => ({\n        id: `typing-${agentId}`,\n        content: info.text || \"...\",\n        senderId: agentId,\n        timestamp: new Date(),\n        metadata: {\n          isTyping: true,\n          type: \"typing\" as const,\n          respondingTo: info.messageId,\n        },\n      })) as Message[];\n    }, [typingAgents]);\n\n    // Combine messages with typing indicators\n    const allMessages = useMemo(() => {\n      const combined = [...messages];\n      if (showTypingIndicators) {\n        combined.push(...typingMessages);\n      }\n      return combined;\n    }, [messages, typingMessages, showTypingIndicators]);\n\n    const itemData = useMemo(\n      () => ({\n        messages: allMessages,\n        agents,\n        threads,\n        onMessageClick,\n        onReply,\n        onReaction,\n        showMetadata,\n        showThreads,\n        typingAgents,\n      }),\n      [\n        allMessages,\n        agents,\n        threads,\n        onMessageClick,\n        onReply,\n        onReaction,\n        showMetadata,\n        showThreads,\n        typingAgents,\n      ],\n    );\n\n    // Estimate item size based on content\n    const estimateItemSize = useCallback(() => {\n      // Base size for avatar and padding\n      let baseSize = 60;\n\n      // Add size for metadata\n      if (showMetadata) baseSize += 20;\n\n      // Add size for thread indicators\n      if (showThreads) baseSize += 10;\n\n      return baseSize;\n    }, [showMetadata, showThreads]);\n\n    const itemSize = estimateItemSize();\n\n    if (allMessages.length === 0) {\n      return (\n        <div\n          className={cn(\"flex items-center justify-center h-full\", className)}\n        >\n          <div className=\"text-center text-muted-foreground\">\n            <MessageSquare className=\"w-12 h-12 mx-auto mb-4 opacity-50\" />\n            <p>No messages yet</p>\n            <p className=\"text-sm\">Start a conversation to see messages here</p>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className={cn(\"relative\", className)}>\n        <List\n          ref={listRef}\n          height={height}\n          width=\"100%\"\n          itemCount={allMessages.length}\n          itemSize={itemSize}\n          itemData={itemData}\n          onScroll={handleScroll}\n          overscanCount={5}\n          className=\"scrollbar-thin scrollbar-thumb-muted scrollbar-track-transparent\"\n        >\n          {MessageItem}\n        </List>\n\n        {/* Scroll to bottom button */}\n        {!shouldAutoScroll && (\n          <div className=\"absolute bottom-4 right-4\">\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              className=\"shadow-lg\"\n              onClick={() => {\n                setShouldAutoScroll(true);\n                listRef.current?.scrollToItem(allMessages.length - 1, \"end\");\n              }}\n            >\n              <CornerDownRight className=\"w-4 h-4 mr-1\" />\n              Jump to bottom\n            </Button>\n          </div>\n        )}\n      </div>\n    );\n  },\n);\n\nVirtualizedMessageList.displayName = \"VirtualizedMessageList\";\n"],
      names: ["VirtualizedMessageList", "MessageItem", "memo", "index", "style", "data", "messages", "agents", "threads", "onMessageClick", "onReply", "onReaction", "showMetadata", "showThreads", "typingAgents", "message", "sender", "find", "agent", "id", "senderId", "isSystemMessage", "metadata", "messageThread", "thread", "threadId", "isBeingRespondedTo", "respondingTo", "Object", "values", "some", "messageId", "parentMessage", "m", "threadDepth", "calculateThreadDepth", "handleMessageClick", "handleReply", "e", "stopPropagation", "handleReaction", "type", "div", "className", "AlertCircle", "content", "timestamp", "span", "format", "Date", "cn", "onClick", "CornerDownRight", "substring", "Avatar", "AvatarImage", "src", "avatar", "AvatarFallback", "backgroundColor", "color", "name", "charAt", "toUpperCase", "User", "Bot", "agentType", "Badge", "variant", "isGeneratedByLLM", "TooltipProvider", "Tooltip", "TooltipTrigger", "Hash", "TooltipContent", "p", "topic", "messageCount", "confidence", "Math", "round", "processingTime", "Clock", "deliveryStatus", "CheckCircle", "XCircle", "Loader2", "topics", "length", "slice", "map", "reactions", "reaction", "agentId", "Button", "size", "Reply", "ThumbsUp", "ThumbsDown", "MoreHorizontal", "displayName", "depth", "currentMessage", "parentMessageId", "parent", "height", "showTypingIndicators", "listRef", "useRef", "shouldAutoScroll", "setShouldAutoScroll", "useState", "useEffect", "current", "scrollToItem", "handleScroll", "useCallback", "scrollTop", "clientHeight", "scrollHeight", "isNearBottom", "typingMessages", "useMemo", "entries", "info", "text", "isTyping", "allMessages", "combined", "push", "itemData", "estimateItemSize", "baseSize", "itemSize", "MessageSquare", "List", "ref", "width", "itemCount", "onScroll", "overscanCount"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2e0842eb47dd6272eb1a2cb7187bbd8f94935dc4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_yudmz47fz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_yudmz47fz();
cov_yudmz47fz().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_yudmz47fz().s[1]++;
Object.defineProperty(exports, "VirtualizedMessageList", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_yudmz47fz().f[0]++;
    cov_yudmz47fz().s[2]++;
    return VirtualizedMessageList;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_yudmz47fz().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_yudmz47fz().s[4]++, _interop_require_wildcard(require("react")));
const _reactwindow =
/* istanbul ignore next */
(cov_yudmz47fz().s[5]++, require("react-window"));
const _datefns =
/* istanbul ignore next */
(cov_yudmz47fz().s[6]++, require("date-fns"));
const _avatar =
/* istanbul ignore next */
(cov_yudmz47fz().s[7]++, require("../ui/avatar"));
const _badge =
/* istanbul ignore next */
(cov_yudmz47fz().s[8]++, require("../ui/badge"));
const _button =
/* istanbul ignore next */
(cov_yudmz47fz().s[9]++, require("../ui/button"));
const _tooltip =
/* istanbul ignore next */
(cov_yudmz47fz().s[10]++, require("../ui/tooltip"));
const _lucidereact =
/* istanbul ignore next */
(cov_yudmz47fz().s[11]++, require("lucide-react"));
const _utils =
/* istanbul ignore next */
(cov_yudmz47fz().s[12]++, require("../../lib/utils"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_yudmz47fz().f[1]++;
  cov_yudmz47fz().s[13]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_yudmz47fz().b[0][0]++;
    cov_yudmz47fz().s[14]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_yudmz47fz().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_yudmz47fz().s[15]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_yudmz47fz().s[16]++, new WeakMap());
  /* istanbul ignore next */
  cov_yudmz47fz().s[17]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_yudmz47fz().f[2]++;
    cov_yudmz47fz().s[18]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_yudmz47fz().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_yudmz47fz().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_yudmz47fz().f[3]++;
  cov_yudmz47fz().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_yudmz47fz().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_yudmz47fz().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_yudmz47fz().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_yudmz47fz().b[2][0]++;
    cov_yudmz47fz().s[20]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_yudmz47fz().b[2][1]++;
  }
  cov_yudmz47fz().s[21]++;
  if (
  /* istanbul ignore next */
  (cov_yudmz47fz().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_yudmz47fz().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_yudmz47fz().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_yudmz47fz().b[4][0]++;
    cov_yudmz47fz().s[22]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_yudmz47fz().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_yudmz47fz().s[23]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_yudmz47fz().s[24]++;
  if (
  /* istanbul ignore next */
  (cov_yudmz47fz().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_yudmz47fz().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_yudmz47fz().b[6][0]++;
    cov_yudmz47fz().s[25]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_yudmz47fz().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_yudmz47fz().s[26]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_yudmz47fz().s[27]++,
  /* istanbul ignore next */
  (cov_yudmz47fz().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_yudmz47fz().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_yudmz47fz().s[28]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_yudmz47fz().s[29]++;
    if (
    /* istanbul ignore next */
    (cov_yudmz47fz().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_yudmz47fz().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_yudmz47fz().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_yudmz47fz().s[30]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_yudmz47fz().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_yudmz47fz().b[11][1]++, null));
      /* istanbul ignore next */
      cov_yudmz47fz().s[31]++;
      if (
      /* istanbul ignore next */
      (cov_yudmz47fz().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_yudmz47fz().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_yudmz47fz().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_yudmz47fz().b[12][0]++;
        cov_yudmz47fz().s[32]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_yudmz47fz().b[12][1]++;
        cov_yudmz47fz().s[33]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_yudmz47fz().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_yudmz47fz().s[34]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_yudmz47fz().s[35]++;
  if (cache) {
    /* istanbul ignore next */
    cov_yudmz47fz().b[14][0]++;
    cov_yudmz47fz().s[36]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_yudmz47fz().b[14][1]++;
  }
  cov_yudmz47fz().s[37]++;
  return newObj;
}
const MessageItem =
/* istanbul ignore next */
(/*#__PURE__*/cov_yudmz47fz().s[38]++, (0, _react.memo)(({
  index,
  style,
  data
}) => {
  /* istanbul ignore next */
  cov_yudmz47fz().f[4]++;
  const {
    messages,
    agents,
    threads,
    onMessageClick,
    onReply,
    onReaction,
    showMetadata,
    showThreads,
    typingAgents =
    /* istanbul ignore next */
    (cov_yudmz47fz().b[15][0]++, {})
  } =
  /* istanbul ignore next */
  (cov_yudmz47fz().s[39]++, data);
  const message =
  /* istanbul ignore next */
  (cov_yudmz47fz().s[40]++, messages[index]);
  /* istanbul ignore next */
  cov_yudmz47fz().s[41]++;
  if (!message) {
    /* istanbul ignore next */
    cov_yudmz47fz().b[16][0]++;
    cov_yudmz47fz().s[42]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_yudmz47fz().b[16][1]++;
  }
  // Find the agent who sent this message
  const sender =
  /* istanbul ignore next */
  (cov_yudmz47fz().s[43]++, agents.find(agent => {
    /* istanbul ignore next */
    cov_yudmz47fz().f[5]++;
    cov_yudmz47fz().s[44]++;
    return agent.id === message.senderId;
  }));
  // Determine if this is a system message
  const isSystemMessage =
  /* istanbul ignore next */
  (cov_yudmz47fz().s[45]++,
  /* istanbul ignore next */
  (cov_yudmz47fz().b[17][0]++, message.metadata?.isSystemMessage) ||
  /* istanbul ignore next */
  (cov_yudmz47fz().b[17][1]++, message.senderId === "system"));
  // Get thread information
  const messageThread =
  /* istanbul ignore next */
  (cov_yudmz47fz().s[46]++, threads?.find(thread => {
    /* istanbul ignore next */
    cov_yudmz47fz().f[6]++;
    cov_yudmz47fz().s[47]++;
    return thread.id === message.metadata?.threadId;
  }));
  // Check if this message is being responded to
  const isBeingRespondedTo =
  /* istanbul ignore next */
  (cov_yudmz47fz().s[48]++,
  /* istanbul ignore next */
  (cov_yudmz47fz().b[18][0]++, message.metadata?.respondingTo) &&
  /* istanbul ignore next */
  (cov_yudmz47fz().b[18][1]++, Object.values(typingAgents).some(agent => {
    /* istanbul ignore next */
    cov_yudmz47fz().f[7]++;
    cov_yudmz47fz().s[49]++;
    return agent.messageId === message.id;
  })));
  // Get the parent message if this is a reply
  const parentMessage =
  /* istanbul ignore next */
  (cov_yudmz47fz().s[50]++, message.metadata?.respondingTo ?
  /* istanbul ignore next */
  (cov_yudmz47fz().b[19][0]++, messages.find(m => {
    /* istanbul ignore next */
    cov_yudmz47fz().f[8]++;
    cov_yudmz47fz().s[51]++;
    return m.id === message.metadata?.respondingTo;
  })) :
  /* istanbul ignore next */
  (cov_yudmz47fz().b[19][1]++, null));
  // Calculate message depth for thread visualization
  const threadDepth =
  /* istanbul ignore next */
  (cov_yudmz47fz().s[52]++, calculateThreadDepth(message, messages));
  /* istanbul ignore next */
  cov_yudmz47fz().s[53]++;
  const handleMessageClick = () => {
    /* istanbul ignore next */
    cov_yudmz47fz().f[9]++;
    cov_yudmz47fz().s[54]++;
    onMessageClick?.(message);
  };
  /* istanbul ignore next */
  cov_yudmz47fz().s[55]++;
  const handleReply = e => {
    /* istanbul ignore next */
    cov_yudmz47fz().f[10]++;
    cov_yudmz47fz().s[56]++;
    e.stopPropagation();
    /* istanbul ignore next */
    cov_yudmz47fz().s[57]++;
    onReply?.(message);
  };
  /* istanbul ignore next */
  cov_yudmz47fz().s[58]++;
  const handleReaction = type => {
    /* istanbul ignore next */
    cov_yudmz47fz().f[11]++;
    cov_yudmz47fz().s[59]++;
    onReaction?.(message.id, type);
  };
  /* istanbul ignore next */
  cov_yudmz47fz().s[60]++;
  if (isSystemMessage) {
    /* istanbul ignore next */
    cov_yudmz47fz().b[20][0]++;
    cov_yudmz47fz().s[61]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      style: style,
      className: "px-4 py-2",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "flex justify-center",
        children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "max-w-2xl",
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "bg-muted/50 rounded-lg px-4 py-2 text-center text-sm text-muted-foreground",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.AlertCircle, {
              className: "inline-block w-4 h-4 mr-2"
            }), message.content,
            /* istanbul ignore next */
            (cov_yudmz47fz().b[21][0]++, showMetadata) &&
            /* istanbul ignore next */
            (cov_yudmz47fz().b[21][1]++, message.timestamp) &&
            /* istanbul ignore next */
            (cov_yudmz47fz().b[21][2]++, /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "ml-2 text-xs",
              children: (0, _datefns.format)(new Date(message.timestamp), "HH:mm:ss")
            }))]
          })
        })
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_yudmz47fz().b[20][1]++;
  }
  cov_yudmz47fz().s[62]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    style: style,
    className: "px-4 py-2 hover:bg-muted/20 transition-colors",
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: (0, _utils.cn)("group cursor-pointer",
      /* istanbul ignore next */
      (cov_yudmz47fz().b[22][0]++, threadDepth > 0) &&
      /* istanbul ignore next */
      (cov_yudmz47fz().b[22][1]++, "ml-8 border-l-2 border-muted pl-4")),
      onClick: handleMessageClick,
      children: [
      /* istanbul ignore next */
      (cov_yudmz47fz().b[23][0]++, showThreads) &&
      /* istanbul ignore next */
      (cov_yudmz47fz().b[23][1]++, parentMessage) &&
      /* istanbul ignore next */
      (cov_yudmz47fz().b[23][2]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center text-xs text-muted-foreground mb-2",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.CornerDownRight, {
          className: "w-3 h-3 mr-1"
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
          children: ["Replying to: ", parentMessage.content.substring(0, 30), "..."]
        })]
      })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex gap-3",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_avatar.Avatar, {
          className: "w-8 h-8 flex-shrink-0",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_avatar.AvatarImage, {
            src: sender?.avatar
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_avatar.AvatarFallback, {
            style: {
              backgroundColor:
              /* istanbul ignore next */
              (cov_yudmz47fz().b[24][0]++, sender?.color) ||
              /* istanbul ignore next */
              (cov_yudmz47fz().b[24][1]++, "#666")
            },
            children: sender ?
            /* istanbul ignore next */
            (cov_yudmz47fz().b[25][0]++, sender.name.charAt(0).toUpperCase()) :
            /* istanbul ignore next */
            (cov_yudmz47fz().b[25][1]++, message.senderId === "user" ?
            /* istanbul ignore next */
            (/*#__PURE__*/cov_yudmz47fz().b[26][0]++, (0, _jsxruntime.jsx)(_lucidereact.User, {
              className: "w-4 h-4"
            })) :
            /* istanbul ignore next */
            (/*#__PURE__*/cov_yudmz47fz().b[26][1]++, (0, _jsxruntime.jsx)(_lucidereact.Bot, {
              className: "w-4 h-4"
            })))
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex-1 min-w-0",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center gap-2 mb-1",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "font-semibold text-sm",
              children:
              /* istanbul ignore next */
              (cov_yudmz47fz().b[27][0]++, sender?.name) ||
              /* istanbul ignore next */
              (cov_yudmz47fz().b[27][1]++, message.senderId === "user" ?
              /* istanbul ignore next */
              (cov_yudmz47fz().b[28][0]++, "You") :
              /* istanbul ignore next */
              (cov_yudmz47fz().b[28][1]++, message.senderId))
            }),
            /* istanbul ignore next */
            (cov_yudmz47fz().b[29][0]++, message.metadata?.agentType) &&
            /* istanbul ignore next */
            (cov_yudmz47fz().b[29][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_badge.Badge, {
              variant: "outline",
              className: "text-xs",
              children: message.metadata.agentType
            })),
            /* istanbul ignore next */
            (cov_yudmz47fz().b[30][0]++, message.metadata?.isGeneratedByLLM) &&
            /* istanbul ignore next */
            (cov_yudmz47fz().b[30][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_badge.Badge, {
              variant: "secondary",
              className: "text-xs",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Bot, {
                className: "w-3 h-3 mr-1"
              }), "AI"]
            })),
            /* istanbul ignore next */
            (cov_yudmz47fz().b[31][0]++, message.metadata?.type) &&
            /* istanbul ignore next */
            (cov_yudmz47fz().b[31][1]++, message.metadata.type !== "agent") &&
            /* istanbul ignore next */
            (cov_yudmz47fz().b[31][2]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_badge.Badge, {
              variant: "outline",
              className: "text-xs",
              children: message.metadata.type
            })), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "text-xs text-muted-foreground",
              children: (0, _datefns.format)(new Date(message.timestamp), "HH:mm:ss")
            }),
            /* istanbul ignore next */
            (cov_yudmz47fz().b[32][0]++, showThreads) &&
            /* istanbul ignore next */
            (cov_yudmz47fz().b[32][1]++, messageThread) &&
            /* istanbul ignore next */
            (cov_yudmz47fz().b[32][2]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_tooltip.TooltipProvider, {
              children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_tooltip.Tooltip, {
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_tooltip.TooltipTrigger, {
                  children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Hash, {
                    className: "w-3 h-3 text-muted-foreground"
                  })
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_tooltip.TooltipContent, {
                  children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
                    children: ["Thread: ",
                    /* istanbul ignore next */
                    (cov_yudmz47fz().b[33][0]++, messageThread.topic) ||
                    /* istanbul ignore next */
                    (cov_yudmz47fz().b[33][1]++, "Untitled")]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
                    className: "text-xs",
                    children: [messageThread.messageCount, " messages"]
                  })]
                })]
              })
            }))]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "text-sm mb-2",
            children: message.content
          }),
          /* istanbul ignore next */
          (cov_yudmz47fz().b[34][0]++, showMetadata) &&
          /* istanbul ignore next */
          (cov_yudmz47fz().b[34][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex flex-wrap gap-2 text-xs text-muted-foreground",
            children: [
            /* istanbul ignore next */
            (cov_yudmz47fz().b[35][0]++, message.metadata?.confidence) &&
            /* istanbul ignore next */
            (cov_yudmz47fz().b[35][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
              children: ["Confidence: ", Math.round(message.metadata.confidence * 100), "%"]
            })),
            /* istanbul ignore next */
            (cov_yudmz47fz().b[36][0]++, message.metadata?.processingTime) &&
            /* istanbul ignore next */
            (cov_yudmz47fz().b[36][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Clock, {
                className: "inline w-3 h-3 mr-1"
              }), message.metadata.processingTime, "ms"]
            })),
            /* istanbul ignore next */
            (cov_yudmz47fz().b[37][0]++, message.metadata?.deliveryStatus) &&
            /* istanbul ignore next */
            (cov_yudmz47fz().b[37][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
              className: "flex items-center gap-1",
              children: [
              /* istanbul ignore next */
              (cov_yudmz47fz().b[38][0]++, message.metadata.deliveryStatus === "delivered") &&
              /* istanbul ignore next */
              (cov_yudmz47fz().b[38][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.CheckCircle, {
                className: "w-3 h-3 text-green-500"
              })),
              /* istanbul ignore next */
              (cov_yudmz47fz().b[39][0]++, message.metadata.deliveryStatus === "failed") &&
              /* istanbul ignore next */
              (cov_yudmz47fz().b[39][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.XCircle, {
                className: "w-3 h-3 text-red-500"
              })),
              /* istanbul ignore next */
              (cov_yudmz47fz().b[40][0]++, message.metadata.deliveryStatus === "pending") &&
              /* istanbul ignore next */
              (cov_yudmz47fz().b[40][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Loader2, {
                className: "w-3 h-3 animate-spin text-yellow-500"
              })), message.metadata.deliveryStatus]
            })),
            /* istanbul ignore next */
            (cov_yudmz47fz().b[41][0]++, message.metadata?.topics) &&
            /* istanbul ignore next */
            (cov_yudmz47fz().b[41][1]++, message.metadata.topics.length > 0) &&
            /* istanbul ignore next */
            (cov_yudmz47fz().b[41][2]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex gap-1",
              children: [message.metadata.topics.slice(0, 3).map(topic => {
                /* istanbul ignore next */
                cov_yudmz47fz().f[12]++;
                cov_yudmz47fz().s[63]++;
                return /*#__PURE__*/(0, _jsxruntime.jsx)(_badge.Badge, {
                  variant: "outline",
                  className: "text-xs",
                  children: topic
                }, topic);
              }),
              /* istanbul ignore next */
              (cov_yudmz47fz().b[42][0]++, message.metadata.topics.length > 3) &&
              /* istanbul ignore next */
              (cov_yudmz47fz().b[42][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                children: ["+", message.metadata.topics.length - 3, " more"]
              }))]
            }))]
          })),
          /* istanbul ignore next */
          (cov_yudmz47fz().b[43][0]++, message.metadata?.reactions) &&
          /* istanbul ignore next */
          (cov_yudmz47fz().b[43][1]++, message.metadata.reactions.length > 0) &&
          /* istanbul ignore next */
          (cov_yudmz47fz().b[43][2]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "flex gap-1 mt-2",
            children: message.metadata.reactions.map(reaction => {
              /* istanbul ignore next */
              cov_yudmz47fz().f[13]++;
              cov_yudmz47fz().s[64]++;
              return /*#__PURE__*/(0, _jsxruntime.jsxs)(_badge.Badge, {
                variant: "outline",
                className: "text-xs cursor-pointer hover:bg-muted",
                onClick: () => {
                  /* istanbul ignore next */
                  cov_yudmz47fz().f[14]++;
                  cov_yudmz47fz().s[65]++;
                  return handleReaction(reaction.type);
                },
                children: [reaction.type, " ", reaction.agentId]
              }, `${reaction.agentId}-${reaction.type}`);
            })
          })),
          /* istanbul ignore next */
          (cov_yudmz47fz().b[44][0]++, isBeingRespondedTo) &&
          /* istanbul ignore next */
          (cov_yudmz47fz().b[44][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center gap-2 mt-2 text-xs text-muted-foreground",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Loader2, {
              className: "w-3 h-3 animate-spin"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              children: "Agents are responding..."
            })]
          })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex gap-1 mt-2 opacity-0 group-hover:opacity-100 transition-opacity",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
              variant: "ghost",
              size: "sm",
              className: "h-6 px-2 text-xs",
              onClick: handleReply,
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Reply, {
                className: "w-3 h-3 mr-1"
              }), "Reply"]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
              variant: "ghost",
              size: "sm",
              className: "h-6 px-2 text-xs",
              onClick: () => {
                /* istanbul ignore next */
                cov_yudmz47fz().f[15]++;
                cov_yudmz47fz().s[66]++;
                return handleReaction("\uD83D\uDC4D");
              },
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.ThumbsUp, {
                className: "w-3 h-3"
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
              variant: "ghost",
              size: "sm",
              className: "h-6 px-2 text-xs",
              onClick: () => {
                /* istanbul ignore next */
                cov_yudmz47fz().f[16]++;
                cov_yudmz47fz().s[67]++;
                return handleReaction("\uD83D\uDC4E");
              },
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.ThumbsDown, {
                className: "w-3 h-3"
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
              variant: "ghost",
              size: "sm",
              className: "h-6 px-2 text-xs",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.MoreHorizontal, {
                className: "w-3 h-3"
              })
            })]
          })]
        })]
      })]
    })
  });
}));
/* istanbul ignore next */
cov_yudmz47fz().s[68]++;
MessageItem.displayName = "MessageItem";
// Helper function to calculate thread depth
function calculateThreadDepth(message, messages) {
  /* istanbul ignore next */
  cov_yudmz47fz().f[17]++;
  let depth =
  /* istanbul ignore next */
  (cov_yudmz47fz().s[69]++, 0);
  let currentMessage =
  /* istanbul ignore next */
  (cov_yudmz47fz().s[70]++, message);
  /* istanbul ignore next */
  cov_yudmz47fz().s[71]++;
  while (currentMessage.metadata?.parentMessageId) {
    const parent =
    /* istanbul ignore next */
    (cov_yudmz47fz().s[72]++, messages.find(m => {
      /* istanbul ignore next */
      cov_yudmz47fz().f[18]++;
      cov_yudmz47fz().s[73]++;
      return m.id === currentMessage.metadata?.parentMessageId;
    }));
    /* istanbul ignore next */
    cov_yudmz47fz().s[74]++;
    if (!parent) {
      /* istanbul ignore next */
      cov_yudmz47fz().b[45][0]++;
      cov_yudmz47fz().s[75]++;
      break;
    } else
    /* istanbul ignore next */
    {
      cov_yudmz47fz().b[45][1]++;
    }
    cov_yudmz47fz().s[76]++;
    depth++;
    /* istanbul ignore next */
    cov_yudmz47fz().s[77]++;
    currentMessage = parent;
    /* istanbul ignore next */
    cov_yudmz47fz().s[78]++;
    if (depth > 10) {
      /* istanbul ignore next */
      cov_yudmz47fz().b[46][0]++;
      cov_yudmz47fz().s[79]++;
      break;
    } else
    /* istanbul ignore next */
    {
      cov_yudmz47fz().b[46][1]++;
    } // Prevent infinite loops
  }
  /* istanbul ignore next */
  cov_yudmz47fz().s[80]++;
  return depth;
}
const VirtualizedMessageList =
/* istanbul ignore next */
(/*#__PURE__*/cov_yudmz47fz().s[81]++, (0, _react.memo)(({
  messages,
  agents,
  threads,
  height,
  onMessageClick,
  onReply,
  onReaction,
  showMetadata =
  /* istanbul ignore next */
  (cov_yudmz47fz().b[47][0]++, true),
  showThreads =
  /* istanbul ignore next */
  (cov_yudmz47fz().b[48][0]++, true),
  showTypingIndicators =
  /* istanbul ignore next */
  (cov_yudmz47fz().b[49][0]++, true),
  typingAgents =
  /* istanbul ignore next */
  (cov_yudmz47fz().b[50][0]++, {}),
  className
}) => {
  /* istanbul ignore next */
  cov_yudmz47fz().f[19]++;
  const listRef =
  /* istanbul ignore next */
  (cov_yudmz47fz().s[82]++, (0, _react.useRef)(null));
  const [shouldAutoScroll, setShouldAutoScroll] =
  /* istanbul ignore next */
  (cov_yudmz47fz().s[83]++, (0, _react.useState)(true));
  // Auto-scroll to bottom when new messages arrive
  /* istanbul ignore next */
  cov_yudmz47fz().s[84]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_yudmz47fz().f[20]++;
    cov_yudmz47fz().s[85]++;
    if (
    /* istanbul ignore next */
    (cov_yudmz47fz().b[52][0]++, shouldAutoScroll) &&
    /* istanbul ignore next */
    (cov_yudmz47fz().b[52][1]++, listRef.current)) {
      /* istanbul ignore next */
      cov_yudmz47fz().b[51][0]++;
      cov_yudmz47fz().s[86]++;
      listRef.current.scrollToItem(messages.length - 1, "end");
    } else
    /* istanbul ignore next */
    {
      cov_yudmz47fz().b[51][1]++;
    }
  }, [messages.length, shouldAutoScroll]);
  // Handle scroll to detect if user is at bottom
  const handleScroll =
  /* istanbul ignore next */
  (cov_yudmz47fz().s[87]++, (0, _react.useCallback)(({
    scrollTop,
    clientHeight,
    scrollHeight
  }) => {
    /* istanbul ignore next */
    cov_yudmz47fz().f[21]++;
    const isNearBottom =
    /* istanbul ignore next */
    (cov_yudmz47fz().s[88]++, scrollTop + clientHeight >= scrollHeight - 50);
    /* istanbul ignore next */
    cov_yudmz47fz().s[89]++;
    setShouldAutoScroll(isNearBottom);
  }, []));
  // Create typing indicator messages
  const typingMessages =
  /* istanbul ignore next */
  (cov_yudmz47fz().s[90]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_yudmz47fz().f[22]++;
    cov_yudmz47fz().s[91]++;
    return Object.entries(typingAgents).map(([agentId, info]) => {
      /* istanbul ignore next */
      cov_yudmz47fz().f[23]++;
      cov_yudmz47fz().s[92]++;
      return {
        id: `typing-${agentId}`,
        content:
        /* istanbul ignore next */
        (cov_yudmz47fz().b[53][0]++, info.text) ||
        /* istanbul ignore next */
        (cov_yudmz47fz().b[53][1]++, "..."),
        senderId: agentId,
        timestamp: new Date(),
        metadata: {
          isTyping: true,
          type: "typing",
          respondingTo: info.messageId
        }
      };
    });
  }, [typingAgents]));
  // Combine messages with typing indicators
  const allMessages =
  /* istanbul ignore next */
  (cov_yudmz47fz().s[93]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_yudmz47fz().f[24]++;
    const combined =
    /* istanbul ignore next */
    (cov_yudmz47fz().s[94]++, [...messages]);
    /* istanbul ignore next */
    cov_yudmz47fz().s[95]++;
    if (showTypingIndicators) {
      /* istanbul ignore next */
      cov_yudmz47fz().b[54][0]++;
      cov_yudmz47fz().s[96]++;
      combined.push(...typingMessages);
    } else
    /* istanbul ignore next */
    {
      cov_yudmz47fz().b[54][1]++;
    }
    cov_yudmz47fz().s[97]++;
    return combined;
  }, [messages, typingMessages, showTypingIndicators]));
  const itemData =
  /* istanbul ignore next */
  (cov_yudmz47fz().s[98]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_yudmz47fz().f[25]++;
    cov_yudmz47fz().s[99]++;
    return {
      messages: allMessages,
      agents,
      threads,
      onMessageClick,
      onReply,
      onReaction,
      showMetadata,
      showThreads,
      typingAgents
    };
  }, [allMessages, agents, threads, onMessageClick, onReply, onReaction, showMetadata, showThreads, typingAgents]));
  // Estimate item size based on content
  const estimateItemSize =
  /* istanbul ignore next */
  (cov_yudmz47fz().s[100]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_yudmz47fz().f[26]++;
    // Base size for avatar and padding
    let baseSize =
    /* istanbul ignore next */
    (cov_yudmz47fz().s[101]++, 60);
    // Add size for metadata
    /* istanbul ignore next */
    cov_yudmz47fz().s[102]++;
    if (showMetadata) {
      /* istanbul ignore next */
      cov_yudmz47fz().b[55][0]++;
      cov_yudmz47fz().s[103]++;
      baseSize += 20;
    } else
    /* istanbul ignore next */
    {
      cov_yudmz47fz().b[55][1]++;
    }
    // Add size for thread indicators
    cov_yudmz47fz().s[104]++;
    if (showThreads) {
      /* istanbul ignore next */
      cov_yudmz47fz().b[56][0]++;
      cov_yudmz47fz().s[105]++;
      baseSize += 10;
    } else
    /* istanbul ignore next */
    {
      cov_yudmz47fz().b[56][1]++;
    }
    cov_yudmz47fz().s[106]++;
    return baseSize;
  }, [showMetadata, showThreads]));
  const itemSize =
  /* istanbul ignore next */
  (cov_yudmz47fz().s[107]++, estimateItemSize());
  /* istanbul ignore next */
  cov_yudmz47fz().s[108]++;
  if (allMessages.length === 0) {
    /* istanbul ignore next */
    cov_yudmz47fz().b[57][0]++;
    cov_yudmz47fz().s[109]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: (0, _utils.cn)("flex items-center justify-center h-full", className),
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "text-center text-muted-foreground",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.MessageSquare, {
          className: "w-12 h-12 mx-auto mb-4 opacity-50"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          children: "No messages yet"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-sm",
          children: "Start a conversation to see messages here"
        })]
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_yudmz47fz().b[57][1]++;
  }
  cov_yudmz47fz().s[110]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: (0, _utils.cn)("relative", className),
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_reactwindow.FixedSizeList, {
      ref: listRef,
      height: height,
      width: "100%",
      itemCount: allMessages.length,
      itemSize: itemSize,
      itemData: itemData,
      onScroll: handleScroll,
      overscanCount: 5,
      className: "scrollbar-thin scrollbar-thumb-muted scrollbar-track-transparent",
      children: MessageItem
    }),
    /* istanbul ignore next */
    (cov_yudmz47fz().b[58][0]++, !shouldAutoScroll) &&
    /* istanbul ignore next */
    (cov_yudmz47fz().b[58][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "absolute bottom-4 right-4",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
        variant: "outline",
        size: "sm",
        className: "shadow-lg",
        onClick: () => {
          /* istanbul ignore next */
          cov_yudmz47fz().f[27]++;
          cov_yudmz47fz().s[111]++;
          setShouldAutoScroll(true);
          /* istanbul ignore next */
          cov_yudmz47fz().s[112]++;
          listRef.current?.scrollToItem(allMessages.length - 1, "end");
        },
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.CornerDownRight, {
          className: "w-4 h-4 mr-1"
        }), "Jump to bottom"]
      })
    }))]
  });
}));
/* istanbul ignore next */
cov_yudmz47fz().s[113]++;
VirtualizedMessageList.displayName = "VirtualizedMessageList";
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
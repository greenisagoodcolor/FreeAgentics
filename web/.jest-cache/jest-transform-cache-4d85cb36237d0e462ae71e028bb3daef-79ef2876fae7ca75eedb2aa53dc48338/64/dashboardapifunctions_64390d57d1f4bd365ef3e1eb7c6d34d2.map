{"version":3,"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/lib/api/dashboard-api-functions.ts"],"sourcesContent":["/**\n * Dashboard API functions for testing\n * These are simplified versions for unit testing\n */\n\nexport interface DashboardData {\n  agents: any[];\n  metrics: any;\n  knowledge: any;\n}\n\nexport interface DashboardLayout {\n  type: string;\n  panels: any[];\n}\n\nexport interface DashboardPreferences {\n  theme: string;\n  autoRefresh: boolean;\n  refreshInterval: number;\n  notifications?: any;\n}\n\nexport async function getDashboardData(filters?: any): Promise<DashboardData> {\n  const params = new URLSearchParams();\n  if (filters) {\n    Object.entries(filters).forEach(([key, value]) => {\n      if (Array.isArray(value)) {\n        params.set(key, value.join(\",\"));\n      } else {\n        params.set(key, String(value));\n      }\n    });\n  }\n\n  const response = await fetch(\n    `/api/dashboard${params.toString() ? \"?\" + params : \"\"}`,\n    {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    },\n  );\n\n  if (!response.ok) {\n    throw new Error(\n      `Failed to fetch dashboard data: ${response.status} ${response.statusText}`,\n    );\n  }\n\n  return response.json();\n}\n\nexport async function updateDashboardLayout(\n  layout: DashboardLayout,\n): Promise<any> {\n  // Validate layout\n  if (\n    !layout.type ||\n    ![\"bloomberg\", \"resizable\", \"knowledge\", \"ceo-demo\"].includes(layout.type)\n  ) {\n    throw new Error(\"Invalid layout configuration\");\n  }\n\n  const response = await fetch(\"/api/dashboard/layout\", {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(layout),\n  });\n\n  return response.json();\n}\n\nexport async function saveDashboardPreferences(\n  preferences: DashboardPreferences,\n): Promise<any> {\n  // Validate preferences\n  if (\n    preferences.theme &&\n    ![\"light\", \"dark\", \"auto\"].includes(preferences.theme)\n  ) {\n    throw new Error(\"Invalid preferences\");\n  }\n  if (preferences.refreshInterval && preferences.refreshInterval < 0) {\n    throw new Error(\"Invalid preferences\");\n  }\n\n  const body = {\n    ...preferences,\n    encrypted: true,\n  };\n\n  const response = await fetch(\"/api/dashboard/preferences\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(body),\n  });\n\n  return response.json();\n}\n\nexport async function exportDashboardConfig(): Promise<Blob> {\n  const response = await fetch(\"/api/dashboard/export\", {\n    method: \"GET\",\n  });\n\n  return response.blob();\n}\n\nexport async function importDashboardConfig(config: any): Promise<any> {\n  // Validate version\n  if (!config.version || config.version < \"1.0\") {\n    throw new Error(\"Configuration version not supported\");\n  }\n\n  const response = await fetch(\"/api/dashboard/import\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(config),\n  });\n\n  return response.json();\n}\n\n// Cache for metrics\nconst metricsCache = new Map();\n\nexport async function getAgentMetrics(options: any = {}): Promise<any> {\n  const cacheKey = JSON.stringify(options);\n\n  if (options.useCache && metricsCache.has(cacheKey)) {\n    return metricsCache.get(cacheKey);\n  }\n\n  const params = new URLSearchParams();\n  if (options.page) params.set(\"page\", options.page);\n  if (options.pageSize) params.set(\"pageSize\", options.pageSize);\n\n  const response = await fetch(`/api/agents/metrics?${params}`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\n  const data = await response.json();\n\n  if (options.useCache) {\n    metricsCache.set(cacheKey, data);\n  }\n\n  return data;\n}\n\nexport async function getSystemHealth(): Promise<any> {\n  const response = await fetch(\"/api/system/health\", {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\n  return response.json();\n}\n\nexport async function subscribeToUpdates(\n  type: string,\n  callback: Function,\n): Promise<any> {\n  const response = await fetch(\"/api/subscriptions\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      type,\n      events: [\"agent-update\", \"metrics-update\", \"system-status\"],\n    }),\n  });\n\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.error || \"Subscription failed\");\n  }\n\n  return response.json();\n}\n\nexport async function unsubscribeFromUpdates(\n  subscriptionId: string,\n): Promise<void> {\n  await fetch(`/api/subscriptions/${subscriptionId}`, {\n    method: \"DELETE\",\n  });\n}\n"],"names":["exportDashboardConfig","getAgentMetrics","getDashboardData","getSystemHealth","importDashboardConfig","saveDashboardPreferences","subscribeToUpdates","unsubscribeFromUpdates","updateDashboardLayout","filters","params","URLSearchParams","Object","entries","forEach","key","value","Array","isArray","set","join","String","response","fetch","toString","method","headers","ok","Error","status","statusText","json","layout","type","includes","body","JSON","stringify","preferences","theme","refreshInterval","encrypted","blob","config","version","metricsCache","Map","options","cacheKey","useCache","has","get","page","pageSize","data","callback","events","error","subscriptionId"],"mappings":"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"}
{"version":3,"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/__tests__/component-coverage.test.tsx"],"sourcesContent":["/**\n * Component coverage tests\n */\n\nimport React from \"react\";\nimport { render } from \"@testing-library/react\";\n\n// Mock all dependencies\njest.mock(\"next/navigation\", () => ({\n  useRouter: () => ({ push: jest.fn() }),\n  useSearchParams: () => ({ get: jest.fn() }),\n  usePathname: () => \"/test\",\n}));\n\njest.mock(\"@/contexts/llm-context\", () => ({\n  LLMContext: React.createContext({}),\n  useLLM: () => ({\n    llmClient: {},\n    settings: {},\n    updateSettings: jest.fn(),\n  }),\n}));\n\njest.mock(\"@/hooks/useWebSocket\", () => ({\n  useWebSocket: () => ({\n    messages: [],\n    sendMessage: jest.fn(),\n    isConnected: true,\n  }),\n}));\n\ndescribe(\"Component Complete Coverage\", () => {\n  describe(\"Dashboard Components\", () => {\n    test(\"ActiveAgentsList\", () => {\n      const { ActiveAgentsList } =\n        require(\"@/components/dashboard/ActiveAgentsList\");\n      const { container } = render(<ActiveAgentsList />);\n      expect(container).toBeTruthy();\n    });\n\n    test(\"AnalyticsWidgetGrid\", () => {\n      const { AnalyticsWidgetGrid } =\n        require(\"@/components/dashboard/AnalyticsWidgetGrid\");\n      const { container } = render(<AnalyticsWidgetGrid />);\n      expect(container).toBeTruthy();\n    });\n\n    test(\"AnalyticsWidgetSystem\", () => {\n      const Component =\n        require(\"@/components/dashboard/AnalyticsWidgetSystem\").default;\n      const { container } = render(<Component />);\n      expect(container).toBeTruthy();\n    });\n\n    test(\"BeliefExtractionPanel\", () => {\n      const { BeliefExtractionPanel } =\n        require(\"@/components/dashboard/BeliefExtractionPanel\");\n      const { container } = render(<BeliefExtractionPanel />);\n      expect(container).toBeTruthy();\n    });\n\n    test(\"ConversationFeed\", () => {\n      const { ConversationFeed } =\n        require(\"@/components/dashboard/ConversationFeed\");\n      const { container } = render(<ConversationFeed />);\n      expect(container).toBeTruthy();\n    });\n\n    test(\"ConversationOrchestration\", () => {\n      const { ConversationOrchestration } =\n        require(\"@/components/dashboard/ConversationOrchestration\");\n      const { container } = render(<ConversationOrchestration />);\n      expect(container).toBeTruthy();\n    });\n\n    test(\"KnowledgeGraphVisualization\", () => {\n      const Component =\n        require(\"@/components/dashboard/KnowledgeGraphVisualization\").KnowledgeGraphVisualization;\n      const { container } = render(<Component />);\n      expect(container).toBeTruthy();\n    });\n\n    test(\"SpatialGrid\", () => {\n      const { SpatialGrid } = require(\"@/components/dashboard/SpatialGrid\");\n      const { container } = render(<SpatialGrid />);\n      expect(container).toBeTruthy();\n    });\n\n    test(\"AgentTemplateSelector\", () => {\n      const Component =\n        require(\"@/components/dashboard/AgentTemplateSelector\").default;\n      const { container } = render(<Component onSelect={() => {}} />);\n      expect(container).toBeTruthy();\n    });\n  });\n\n  describe(\"Base Components\", () => {\n    test(\"AgentList\", () => {\n      const Component = require(\"@/components/AgentList\").default;\n      const { container } = render(<Component />);\n      expect(container).toBeTruthy();\n    });\n\n    test(\"AboutButton\", () => {\n      const Component = require(\"@/components/AboutButton\").default;\n      const { container } = render(<Component />);\n      expect(container).toBeTruthy();\n    });\n\n    test(\"ErrorBoundary\", () => {\n      const { ErrorBoundary } = require(\"@/components/ErrorBoundary\");\n      const { container } = render(\n        <ErrorBoundary fallback={<div>Error</div>}>\n          <div>Content</div>\n        </ErrorBoundary>,\n      );\n      expect(container).toBeTruthy();\n    });\n\n    test(\"KnowledgeGraph\", () => {\n      const Component = require(\"@/components/KnowledgeGraph\").default;\n      const { container } = render(<Component />);\n      expect(container).toBeTruthy();\n    });\n\n    test(\"navbar\", () => {\n      const Component = require(\"@/components/navbar\").default;\n      const { container } = render(<Component />);\n      expect(container).toBeTruthy();\n    });\n\n    test(\"agentcard\", () => {\n      const Component = require(\"@/components/agentcard\").default;\n      const mockAgent = {\n        id: \"1\",\n        name: \"Test\",\n        class: \"explorer\",\n        position: { x: 0, y: 0 },\n        color: \"#000\",\n        autonomyEnabled: false,\n        inConversation: false,\n        knowledge: [],\n      };\n      const { container } = render(\n        <Component agent={mockAgent} {...({} as any)} />,\n      );\n      expect(container).toBeTruthy();\n    });\n\n    test(\"agentdashboard\", () => {\n      const Component = require(\"@/components/agentdashboard\").default;\n      const { container } = render(<Component />);\n      expect(container).toBeTruthy();\n    });\n\n    test(\"memoryviewer\", () => {\n      const Component = require(\"@/components/memoryviewer\").default;\n      const { container } = render(<Component memories={[]} />);\n      expect(container).toBeTruthy();\n    });\n\n    test(\"gridworld\", () => {\n      const Component = require(\"@/components/gridworld\").default;\n      const { container } = render(<Component />);\n      expect(container).toBeTruthy();\n    });\n\n    test(\"llmtest\", () => {\n      const Component = require(\"@/components/llmtest\").default;\n      const { container } = render(<Component />);\n      expect(container).toBeTruthy();\n    });\n\n    test(\"themeprovider\", () => {\n      const Component = require(\"@/components/themeprovider\").ThemeProvider;\n      const { container } = render(\n        <Component attribute=\"class\" defaultTheme=\"dark\">\n          <div>Content</div>\n        </Component>,\n      );\n      expect(container).toBeTruthy();\n    });\n  });\n\n  describe(\"App Pages\", () => {\n    test(\"home page\", () => {\n      const Page = require(\"@/app/page\").default;\n      const { container } = render(<Page />);\n      expect(container).toBeTruthy();\n    });\n\n    test(\"agents page\", () => {\n      const Page = require(\"@/app/agents/page\").default;\n      const { container } = render(<Page />);\n      expect(container).toBeTruthy();\n    });\n\n    test(\"experiments page\", () => {\n      const Page = require(\"@/app/experiments/page\").default;\n      const { container } = render(<Page />);\n      expect(container).toBeTruthy();\n    });\n\n    test(\"knowledge page\", () => {\n      const Page = require(\"@/app/knowledge/page\").default;\n      const { container } = render(<Page />);\n      expect(container).toBeTruthy();\n    });\n\n    test(\"world page\", () => {\n      const Page = require(\"@/app/world/page\").default;\n      const { container } = render(<Page />);\n      expect(container).toBeTruthy();\n    });\n\n    test(\"conversations page\", () => {\n      const Page = require(\"@/app/conversations/page\").default;\n      const { container } = render(<Page />);\n      expect(container).toBeTruthy();\n    });\n\n    test(\"mvp-dashboard page\", () => {\n      const Page = require(\"@/app/mvp-dashboard/page\").default;\n      const { container } = render(<Page />);\n      expect(container).toBeTruthy();\n    });\n\n    test(\"active-inference-demo page\", () => {\n      const Page = require(\"@/app/active-inference-demo/page\").default;\n      const { container } = render(<Page />);\n      expect(container).toBeTruthy();\n    });\n  });\n});\n"],"names":["jest","mock","useRouter","push","fn","useSearchParams","get","usePathname","LLMContext","React","createContext","useLLM","llmClient","settings","updateSettings","useWebSocket","messages","sendMessage","isConnected","describe","test","ActiveAgentsList","require","container","render","expect","toBeTruthy","AnalyticsWidgetGrid","Component","default","BeliefExtractionPanel","ConversationFeed","ConversationOrchestration","KnowledgeGraphVisualization","SpatialGrid","onSelect","ErrorBoundary","fallback","div","mockAgent","id","name","class","position","x","y","color","autonomyEnabled","inConversation","knowledge","agent","memories","ThemeProvider","attribute","defaultTheme","Page"],"mappings":"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"}
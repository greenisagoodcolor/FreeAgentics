{"version":3,"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/__tests__/lib-coverage.test.ts"],"sourcesContent":["/**\n * Comprehensive lib coverage tests\n */\n\n// Mock fetch globally\nglobal.fetch = jest.fn();\n\ndescribe(\"Lib Functions Complete Coverage\", () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n    (global.fetch as jest.Mock).mockReset();\n  });\n\n  describe(\"API Functions\", () => {\n    test(\"dashboard API functions\", async (): Promise<void> => {\n      (global.fetch as jest.Mock).mockResolvedValueOnce({\n        ok: true,\n        json: async () => ({ data: \"test\" }),\n      });\n\n      // Just verify the module loads\n      const dashboardApi = require(\"@/lib/api/dashboard-api\");\n      expect(dashboardApi).toBeDefined();\n    });\n\n    test(\"agents API functions\", async (): Promise<void> => {\n      (global.fetch as jest.Mock).mockResolvedValueOnce({\n        ok: true,\n        json: async () => ({ agents: [] }),\n      });\n\n      const agentsApi = require(\"@/lib/api/agents-api\");\n      expect(agentsApi).toBeDefined();\n    });\n\n    test(\"knowledge graph API\", async (): Promise<void> => {\n      const knowledgeApi = require(\"@/lib/api/knowledge-graph\");\n      expect(knowledgeApi).toBeDefined();\n    });\n  });\n\n  describe(\"Storage Functions\", () => {\n    test(\"indexeddb storage\", () => {\n      const storage = require(\"@/lib/storage/indexeddb-storage\");\n      expect(storage).toBeDefined();\n    });\n  });\n\n  describe(\"Services\", () => {\n    test(\"agent creation service\", () => {\n      const service = require(\"@/lib/services/agent-creation-service\");\n      expect(service).toBeDefined();\n    });\n\n    test(\"compression service\", () => {\n      const service = require(\"@/lib/services/compression-service\");\n      expect(service).toBeDefined();\n    });\n\n    test(\"provider monitoring service\", () => {\n      const service = require(\"@/lib/services/provider-monitoring-service\");\n      expect(service).toBeDefined();\n    });\n  });\n\n  describe(\"Utils\", () => {\n    test(\"knowledge graph export utils\", () => {\n      const utils = require(\"@/lib/utils/knowledge-graph-export\");\n      expect(utils).toBeDefined();\n    });\n\n    test(\"knowledge graph filters\", () => {\n      const filters = require(\"@/lib/utils/knowledge-graph-filters\");\n      expect(filters).toBeDefined();\n    });\n  });\n\n  describe(\"Performance\", () => {\n    test(\"memoization\", () => {\n      const memo = require(\"@/lib/performance/memoization\");\n      expect(memo).toBeDefined();\n    });\n\n    test(\"performance monitor\", () => {\n      const monitor = require(\"@/lib/performance/performance-monitor\");\n      expect(monitor).toBeDefined();\n    });\n  });\n\n  describe(\"Safety\", () => {\n    test(\"data validation\", () => {\n      const validation = require(\"@/lib/safety/data-validation\");\n      expect(validation).toBeDefined();\n    });\n  });\n\n  describe(\"Auth\", () => {\n    test(\"route protection\", () => {\n      const auth = require(\"@/lib/auth/route-protection\");\n      expect(auth).toBeDefined();\n    });\n  });\n\n  describe(\"Compliance\", () => {\n    test(\"adr validator\", () => {\n      const validator = require(\"@/lib/compliance/adr-validator\");\n      expect(validator).toBeDefined();\n    });\n\n    test(\"compliance report\", () => {\n      const report = require(\"@/lib/compliance/task-44-compliance-report\");\n      expect(report).toBeDefined();\n    });\n  });\n\n  describe(\"Hooks\", () => {\n    test(\"use dashboard data\", () => {\n      const hook = require(\"@/lib/hooks/use-dashboard-data\");\n      expect(hook).toBeDefined();\n    });\n\n    test(\"use llm providers\", () => {\n      const hook = require(\"@/lib/hooks/use-llm-providers\");\n      expect(hook).toBeDefined();\n    });\n\n    test(\"use provider monitoring\", () => {\n      const hook = require(\"@/lib/hooks/use-provider-monitoring\");\n      expect(hook).toBeDefined();\n    });\n  });\n\n  describe(\"Workers\", () => {\n    test(\"compression worker\", () => {\n      const worker = require(\"@/lib/workers/compression-worker\");\n      expect(worker).toBeDefined();\n    });\n  });\n\n  describe(\"Stores\", () => {\n    test(\"dashboard store\", () => {\n      const store = require(\"@/lib/stores/dashboard-store\");\n      expect(store).toBeDefined();\n    });\n  });\n});\n"],"names":["global","fetch","jest","fn","describe","beforeEach","clearAllMocks","mockReset","test","mockResolvedValueOnce","ok","json","data","dashboardApi","require","expect","toBeDefined","agents","agentsApi","knowledgeApi","storage","service","utils","filters","memo","monitor","validation","auth","validator","report","hook","worker","store"],"mappings":"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"}
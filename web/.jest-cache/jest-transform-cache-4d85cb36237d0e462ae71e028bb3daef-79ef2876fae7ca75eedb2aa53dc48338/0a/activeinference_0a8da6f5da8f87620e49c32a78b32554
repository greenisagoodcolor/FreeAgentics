3f2d91839d35c6a0f50657963c688169
/**
 * Active Inference Implementation
 *
 * Core implementation for active inference, free energy minimization,
 * and belief updating based on the Free Energy Principle.
 */"use strict";

/* istanbul ignore next */
function cov_ineumuc8z() {
  var path = "/Users/matthewmoroney/builds/FreeAgentics/web/lib/active-inference.ts";
  var hash = "c98340c82aa655ebcf6d39c3402d7a480456fda1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewmoroney/builds/FreeAgentics/web/lib/active-inference.ts",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 9,
          column: 3
        }
      },
      "1": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 14,
          column: 7
        }
      },
      "2": {
        start: {
          line: 11,
          column: 24
        },
        end: {
          line: 14,
          column: 7
        }
      },
      "3": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 47,
          column: 3
        }
      },
      "4": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 34
        }
      },
      "5": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 43
        }
      },
      "6": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 34
        }
      },
      "7": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 43
        }
      },
      "8": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 36
        }
      },
      "9": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 45
        }
      },
      "10": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 32
        }
      },
      "11": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 38
        }
      },
      "12": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 28
        }
      },
      "13": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 29
        }
      },
      "14": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 48,
          column: 21
        }
      },
      "15": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "16": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 94
        }
      },
      "17": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 56,
          column: 5
        }
      },
      "18": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 76
        }
      },
      "19": {
        start: {
          line: 58,
          column: 24
        },
        end: {
          line: 58,
          column: 56
        }
      },
      "20": {
        start: {
          line: 59,
          column: 27
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "21": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 65,
          column: 7
        }
      },
      "22": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 51
        }
      },
      "23": {
        start: {
          line: 66,
          column: 19
        },
        end: {
          line: 110,
          column: 5
        }
      },
      "24": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 77,
          column: 14
        }
      },
      "25": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 82,
          column: 14
        }
      },
      "26": {
        start: {
          line: 86,
          column: 27
        },
        end: {
          line: 86,
          column: 28
        }
      },
      "27": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 90,
          column: 15
        }
      },
      "28": {
        start: {
          line: 88,
          column: 35
        },
        end: {
          line: 88,
          column: 95
        }
      },
      "29": {
        start: {
          line: 89,
          column: 16
        },
        end: {
          line: 89,
          column: 66
        }
      },
      "30": {
        start: {
          line: 92,
          column: 29
        },
        end: {
          line: 92,
          column: 30
        }
      },
      "31": {
        start: {
          line: 93,
          column: 26
        },
        end: {
          line: 93,
          column: 56
        }
      },
      "32": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 98,
          column: 15
        }
      },
      "33": {
        start: {
          line: 95,
          column: 16
        },
        end: {
          line: 97,
          column: 17
        }
      },
      "34": {
        start: {
          line: 96,
          column: 20
        },
        end: {
          line: 96,
          column: 76
        }
      },
      "35": {
        start: {
          line: 101,
          column: 31
        },
        end: {
          line: 101,
          column: 71
        }
      },
      "36": {
        start: {
          line: 102,
          column: 25
        },
        end: {
          line: 102,
          column: 36
        }
      },
      "37": {
        start: {
          line: 104,
          column: 39
        },
        end: {
          line: 104,
          column: 64
        }
      },
      "38": {
        start: {
          line: 106,
          column: 31
        },
        end: {
          line: 106,
          column: 81
        }
      },
      "39": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 46
        }
      },
      "40": {
        start: {
          line: 111,
          column: 4
        },
        end: {
          line: 111,
          column: 18
        }
      },
      "41": {
        start: {
          line: 114,
          column: 27
        },
        end: {
          line: 114,
          column: 53
        }
      },
      "42": {
        start: {
          line: 115,
          column: 27
        },
        end: {
          line: 118,
          column: 5
        }
      },
      "43": {
        start: {
          line: 120,
          column: 25
        },
        end: {
          line: 120,
          column: 26
        }
      },
      "44": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 127,
          column: 7
        }
      },
      "45": {
        start: {
          line: 122,
          column: 22
        },
        end: {
          line: 122,
          column: 50
        }
      },
      "46": {
        start: {
          line: 123,
          column: 27
        },
        end: {
          line: 123,
          column: 95
        }
      },
      "47": {
        start: {
          line: 124,
          column: 26
        },
        end: {
          line: 124,
          column: 44
        }
      },
      "48": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 49
        }
      },
      "49": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 36
        }
      },
      "50": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 131,
          column: 7
        }
      },
      "51": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 130,
          column: 55
        }
      },
      "52": {
        start: {
          line: 133,
          column: 4
        },
        end: {
          line: 138,
          column: 7
        }
      },
      "53": {
        start: {
          line: 134,
          column: 22
        },
        end: {
          line: 134,
          column: 50
        }
      },
      "54": {
        start: {
          line: 135,
          column: 26
        },
        end: {
          line: 135,
          column: 54
        }
      },
      "55": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 113
        }
      },
      "56": {
        start: {
          line: 140,
          column: 20
        },
        end: {
          line: 142,
          column: 9
        }
      },
      "57": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 57
        }
      },
      "58": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 143,
          column: 84
        }
      },
      "59": {
        start: {
          line: 145,
          column: 4
        },
        end: {
          line: 145,
          column: 26
        }
      },
      "60": {
        start: {
          line: 148,
          column: 21
        },
        end: {
          line: 148,
          column: 23
        }
      },
      "61": {
        start: {
          line: 149,
          column: 24
        },
        end: {
          line: 149,
          column: 32
        }
      },
      "62": {
        start: {
          line: 150,
          column: 25
        },
        end: {
          line: 150,
          column: 27
        }
      },
      "63": {
        start: {
          line: 152,
          column: 25
        },
        end: {
          line: 152,
          column: 27
        }
      },
      "64": {
        start: {
          line: 153,
          column: 4
        },
        end: {
          line: 155,
          column: 7
        }
      },
      "65": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 63
        }
      },
      "66": {
        start: {
          line: 156,
          column: 4
        },
        end: {
          line: 187,
          column: 7
        }
      },
      "67": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 164,
          column: 9
        }
      },
      "68": {
        start: {
          line: 159,
          column: 30
        },
        end: {
          line: 159,
          column: 100
        }
      },
      "69": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 163,
          column: 13
        }
      },
      "70": {
        start: {
          line: 161,
          column: 16
        },
        end: {
          line: 161,
          column: 48
        }
      },
      "71": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 23
        }
      },
      "72": {
        start: {
          line: 166,
          column: 25
        },
        end: {
          line: 166,
          column: 26
        }
      },
      "73": {
        start: {
          line: 168,
          column: 26
        },
        end: {
          line: 168,
          column: 69
        }
      },
      "74": {
        start: {
          line: 170,
          column: 26
        },
        end: {
          line: 170,
          column: 69
        }
      },
      "75": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 62
        }
      },
      "76": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 176,
          column: 9
        }
      },
      "77": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 52
        }
      },
      "78": {
        start: {
          line: 178,
          column: 30
        },
        end: {
          line: 178,
          column: 60
        }
      },
      "79": {
        start: {
          line: 179,
          column: 32
        },
        end: {
          line: 179,
          column: 114
        }
      },
      "80": {
        start: {
          line: 179,
          column: 58
        },
        end: {
          line: 179,
          column: 70
        }
      },
      "81": {
        start: {
          line: 180,
          column: 31
        },
        end: {
          line: 180,
          column: 52
        }
      },
      "82": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 181,
          column: 37
        }
      },
      "83": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 182,
          column: 42
        }
      },
      "84": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 186,
          column: 9
        }
      },
      "85": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 39
        }
      },
      "86": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 32
        }
      },
      "87": {
        start: {
          line: 189,
          column: 19
        },
        end: {
          line: 189,
          column: 74
        }
      },
      "88": {
        start: {
          line: 189,
          column: 59
        },
        end: {
          line: 189,
          column: 73
        }
      },
      "89": {
        start: {
          line: 190,
          column: 21
        },
        end: {
          line: 190,
          column: 68
        }
      },
      "90": {
        start: {
          line: 190,
          column: 43
        },
        end: {
          line: 190,
          column: 48
        }
      },
      "91": {
        start: {
          line: 191,
          column: 23
        },
        end: {
          line: 191,
          column: 68
        }
      },
      "92": {
        start: {
          line: 192,
          column: 4
        },
        end: {
          line: 192,
          column: 42
        }
      },
      "93": {
        start: {
          line: 193,
          column: 4
        },
        end: {
          line: 196,
          column: 6
        }
      },
      "94": {
        start: {
          line: 200,
          column: 27
        },
        end: {
          line: 200,
          column: 61
        }
      },
      "95": {
        start: {
          line: 202,
          column: 4
        },
        end: {
          line: 202,
          column: 38
        }
      },
      "96": {
        start: {
          line: 204,
          column: 23
        },
        end: {
          line: 204,
          column: 84
        }
      },
      "97": {
        start: {
          line: 206,
          column: 27
        },
        end: {
          line: 206,
          column: 63
        }
      },
      "98": {
        start: {
          line: 208,
          column: 28
        },
        end: {
          line: 208,
          column: 77
        }
      },
      "99": {
        start: {
          line: 209,
          column: 30
        },
        end: {
          line: 209,
          column: 79
        }
      },
      "100": {
        start: {
          line: 210,
          column: 4
        },
        end: {
          line: 215,
          column: 6
        }
      },
      "101": {
        start: {
          line: 218,
          column: 19
        },
        end: {
          line: 218,
          column: 20
        }
      },
      "102": {
        start: {
          line: 219,
          column: 25
        },
        end: {
          line: 219,
          column: 26
        }
      },
      "103": {
        start: {
          line: 220,
          column: 25
        },
        end: {
          line: 220,
          column: 26
        }
      },
      "104": {
        start: {
          line: 222,
          column: 18
        },
        end: {
          line: 222,
          column: 44
        }
      },
      "105": {
        start: {
          line: 223,
          column: 4
        },
        end: {
          line: 233,
          column: 7
        }
      },
      "106": {
        start: {
          line: 224,
          column: 26
        },
        end: {
          line: 224,
          column: 74
        }
      },
      "107": {
        start: {
          line: 225,
          column: 26
        },
        end: {
          line: 225,
          column: 74
        }
      },
      "108": {
        start: {
          line: 227,
          column: 32
        },
        end: {
          line: 227,
          column: 74
        }
      },
      "109": {
        start: {
          line: 228,
          column: 32
        },
        end: {
          line: 228,
          column: 74
        }
      },
      "110": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 229,
          column: 73
        }
      },
      "111": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 230,
          column: 73
        }
      },
      "112": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 232,
          column: 71
        }
      },
      "113": {
        start: {
          line: 234,
          column: 4
        },
        end: {
          line: 234,
          column: 66
        }
      },
      "114": {
        start: {
          line: 236,
          column: 4
        },
        end: {
          line: 240,
          column: 6
        }
      },
      "115": {
        start: {
          line: 244,
          column: 26
        },
        end: {
          line: 244,
          column: 27
        }
      },
      "116": {
        start: {
          line: 246,
          column: 27
        },
        end: {
          line: 248,
          column: 9
        }
      },
      "117": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 247,
          column: 57
        }
      },
      "118": {
        start: {
          line: 250,
          column: 26
        },
        end: {
          line: 250,
          column: 27
        }
      },
      "119": {
        start: {
          line: 251,
          column: 29
        },
        end: {
          line: 251,
          column: 76
        }
      },
      "120": {
        start: {
          line: 252,
          column: 4
        },
        end: {
          line: 254,
          column: 10
        }
      },
      "121": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 253,
          column: 57
        }
      },
      "122": {
        start: {
          line: 255,
          column: 4
        },
        end: {
          line: 255,
          column: 55
        }
      },
      "123": {
        start: {
          line: 257,
          column: 29
        },
        end: {
          line: 257,
          column: 54
        }
      },
      "124": {
        start: {
          line: 258,
          column: 19
        },
        end: {
          line: 258,
          column: 66
        }
      },
      "125": {
        start: {
          line: 260,
          column: 4
        },
        end: {
          line: 260,
          column: 48
        }
      },
      "126": {
        start: {
          line: 264,
          column: 29
        },
        end: {
          line: 264,
          column: 30
        }
      },
      "127": {
        start: {
          line: 266,
          column: 24
        },
        end: {
          line: 266,
          column: 71
        }
      },
      "128": {
        start: {
          line: 267,
          column: 4
        },
        end: {
          line: 274,
          column: 7
        }
      },
      "129": {
        start: {
          line: 268,
          column: 27
        },
        end: {
          line: 268,
          column: 65
        }
      },
      "130": {
        start: {
          line: 269,
          column: 29
        },
        end: {
          line: 269,
          column: 46
        }
      },
      "131": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 273,
          column: 9
        }
      },
      "132": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 272,
          column: 47
        }
      },
      "133": {
        start: {
          line: 276,
          column: 4
        },
        end: {
          line: 276,
          column: 72
        }
      },
      "134": {
        start: {
          line: 279,
          column: 20
        },
        end: {
          line: 279,
          column: 49
        }
      },
      "135": {
        start: {
          line: 280,
          column: 22
        },
        end: {
          line: 280,
          column: 49
        }
      },
      "136": {
        start: {
          line: 281,
          column: 18
        },
        end: {
          line: 283,
          column: 5
        }
      },
      "137": {
        start: {
          line: 284,
          column: 17
        },
        end: {
          line: 284,
          column: 65
        }
      },
      "138": {
        start: {
          line: 285,
          column: 20
        },
        end: {
          line: 285,
          column: 25
        }
      },
      "139": {
        start: {
          line: 286,
          column: 21
        },
        end: {
          line: 286,
          column: 22
        }
      },
      "140": {
        start: {
          line: 287,
          column: 4
        },
        end: {
          line: 327,
          column: 5
        }
      },
      "141": {
        start: {
          line: 289,
          column: 25
        },
        end: {
          line: 289,
          column: 27
        }
      },
      "142": {
        start: {
          line: 290,
          column: 22
        },
        end: {
          line: 290,
          column: 27
        }
      },
      "143": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 304,
          column: 11
        }
      },
      "144": {
        start: {
          line: 293,
          column: 32
        },
        end: {
          line: 295,
          column: 13
        }
      },
      "145": {
        start: {
          line: 296,
          column: 12
        },
        end: {
          line: 296,
          column: 83
        }
      },
      "146": {
        start: {
          line: 298,
          column: 24
        },
        end: {
          line: 298,
          column: 82
        }
      },
      "147": {
        start: {
          line: 298,
          column: 73
        },
        end: {
          line: 298,
          column: 78
        }
      },
      "148": {
        start: {
          line: 299,
          column: 12
        },
        end: {
          line: 301,
          column: 15
        }
      },
      "149": {
        start: {
          line: 300,
          column: 16
        },
        end: {
          line: 300,
          column: 45
        }
      },
      "150": {
        start: {
          line: 302,
          column: 27
        },
        end: {
          line: 302,
          column: 79
        }
      },
      "151": {
        start: {
          line: 303,
          column: 12
        },
        end: {
          line: 303,
          column: 56
        }
      },
      "152": {
        start: {
          line: 306,
          column: 22
        },
        end: {
          line: 306,
          column: 27
        }
      },
      "153": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 314,
          column: 11
        }
      },
      "154": {
        start: {
          line: 308,
          column: 27
        },
        end: {
          line: 308,
          column: 65
        }
      },
      "155": {
        start: {
          line: 309,
          column: 30
        },
        end: {
          line: 309,
          column: 86
        }
      },
      "156": {
        start: {
          line: 310,
          column: 12
        },
        end: {
          line: 312,
          column: 13
        }
      },
      "157": {
        start: {
          line: 311,
          column: 16
        },
        end: {
          line: 311,
          column: 31
        }
      },
      "158": {
        start: {
          line: 313,
          column: 12
        },
        end: {
          line: 313,
          column: 46
        }
      },
      "159": {
        start: {
          line: 316,
          column: 20
        },
        end: {
          line: 316,
          column: 74
        }
      },
      "160": {
        start: {
          line: 316,
          column: 65
        },
        end: {
          line: 316,
          column: 70
        }
      },
      "161": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 319,
          column: 11
        }
      },
      "162": {
        start: {
          line: 318,
          column: 12
        },
        end: {
          line: 318,
          column: 41
        }
      },
      "163": {
        start: {
          line: 321,
          column: 26
        },
        end: {
          line: 321,
          column: 74
        }
      },
      "164": {
        start: {
          line: 322,
          column: 8
        },
        end: {
          line: 324,
          column: 9
        }
      },
      "165": {
        start: {
          line: 323,
          column: 12
        },
        end: {
          line: 323,
          column: 29
        }
      },
      "166": {
        start: {
          line: 325,
          column: 8
        },
        end: {
          line: 325,
          column: 27
        }
      },
      "167": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 326,
          column: 21
        }
      },
      "168": {
        start: {
          line: 328,
          column: 4
        },
        end: {
          line: 332,
          column: 6
        }
      },
      "169": {
        start: {
          line: 335,
          column: 24
        },
        end: {
          line: 335,
          column: 26
        }
      },
      "170": {
        start: {
          line: 337,
          column: 4
        },
        end: {
          line: 339,
          column: 7
        }
      },
      "171": {
        start: {
          line: 338,
          column: 8
        },
        end: {
          line: 338,
          column: 29
        }
      },
      "172": {
        start: {
          line: 341,
          column: 4
        },
        end: {
          line: 353,
          column: 7
        }
      },
      "173": {
        start: {
          line: 343,
          column: 28
        },
        end: {
          line: 343,
          column: 86
        }
      },
      "174": {
        start: {
          line: 345,
          column: 8
        },
        end: {
          line: 352,
          column: 11
        }
      },
      "175": {
        start: {
          line: 347,
          column: 33
        },
        end: {
          line: 347,
          column: 79
        }
      },
      "176": {
        start: {
          line: 349,
          column: 12
        },
        end: {
          line: 351,
          column: 15
        }
      },
      "177": {
        start: {
          line: 350,
          column: 16
        },
        end: {
          line: 350,
          column: 68
        }
      },
      "178": {
        start: {
          line: 354,
          column: 4
        },
        end: {
          line: 354,
          column: 23
        }
      },
      "179": {
        start: {
          line: 357,
          column: 25
        },
        end: {
          line: 357,
          column: 26
        }
      },
      "180": {
        start: {
          line: 358,
          column: 27
        },
        end: {
          line: 358,
          column: 28
        }
      },
      "181": {
        start: {
          line: 359,
          column: 22
        },
        end: {
          line: 359,
          column: 25
        }
      },
      "182": {
        start: {
          line: 360,
          column: 18
        },
        end: {
          line: 360,
          column: 44
        }
      },
      "183": {
        start: {
          line: 361,
          column: 4
        },
        end: {
          line: 377,
          column: 7
        }
      },
      "184": {
        start: {
          line: 363,
          column: 28
        },
        end: {
          line: 363,
          column: 80
        }
      },
      "185": {
        start: {
          line: 364,
          column: 32
        },
        end: {
          line: 367,
          column: 13
        }
      },
      "186": {
        start: {
          line: 365,
          column: 31
        },
        end: {
          line: 365,
          column: 69
        }
      },
      "187": {
        start: {
          line: 366,
          column: 12
        },
        end: {
          line: 366,
          column: 43
        }
      },
      "188": {
        start: {
          line: 368,
          column: 8
        },
        end: {
          line: 368,
          column: 61
        }
      },
      "189": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 370,
          column: 67
        }
      },
      "190": {
        start: {
          line: 372,
          column: 8
        },
        end: {
          line: 374,
          column: 9
        }
      },
      "191": {
        start: {
          line: 373,
          column: 12
        },
        end: {
          line: 373,
          column: 31
        }
      },
      "192": {
        start: {
          line: 376,
          column: 8
        },
        end: {
          line: 376,
          column: 71
        }
      },
      "193": {
        start: {
          line: 378,
          column: 4
        },
        end: {
          line: 382,
          column: 6
        }
      },
      "194": {
        start: {
          line: 386,
          column: 20
        },
        end: {
          line: 389,
          column: 5
        }
      },
      "195": {
        start: {
          line: 391,
          column: 4
        },
        end: {
          line: 393,
          column: 7
        }
      },
      "196": {
        start: {
          line: 392,
          column: 8
        },
        end: {
          line: 392,
          column: 34
        }
      },
      "197": {
        start: {
          line: 395,
          column: 4
        },
        end: {
          line: 400,
          column: 7
        }
      },
      "198": {
        start: {
          line: 396,
          column: 28
        },
        end: {
          line: 396,
          column: 86
        }
      },
      "199": {
        start: {
          line: 397,
          column: 8
        },
        end: {
          line: 399,
          column: 11
        }
      },
      "200": {
        start: {
          line: 398,
          column: 12
        },
        end: {
          line: 398,
          column: 58
        }
      },
      "201": {
        start: {
          line: 402,
          column: 20
        },
        end: {
          line: 404,
          column: 9
        }
      },
      "202": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 403,
          column: 57
        }
      },
      "203": {
        start: {
          line: 406,
          column: 34
        },
        end: {
          line: 406,
          column: 37
        }
      },
      "204": {
        start: {
          line: 407,
          column: 4
        },
        end: {
          line: 419,
          column: 5
        }
      },
      "205": {
        start: {
          line: 409,
          column: 12
        },
        end: {
          line: 409,
          column: 42
        }
      },
      "206": {
        start: {
          line: 410,
          column: 12
        },
        end: {
          line: 410,
          column: 18
        }
      },
      "207": {
        start: {
          line: 412,
          column: 12
        },
        end: {
          line: 412,
          column: 42
        }
      },
      "208": {
        start: {
          line: 413,
          column: 12
        },
        end: {
          line: 413,
          column: 18
        }
      },
      "209": {
        start: {
          line: 415,
          column: 12
        },
        end: {
          line: 415,
          column: 42
        }
      },
      "210": {
        start: {
          line: 416,
          column: 12
        },
        end: {
          line: 416,
          column: 18
        }
      },
      "211": {
        start: {
          line: 418,
          column: 12
        },
        end: {
          line: 418,
          column: 42
        }
      },
      "212": {
        start: {
          line: 421,
          column: 4
        },
        end: {
          line: 421,
          column: 118
        }
      },
      "213": {
        start: {
          line: 422,
          column: 4
        },
        end: {
          line: 422,
          column: 19
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 10,
            column: 9
          },
          end: {
            line: 10,
            column: 16
          }
        },
        loc: {
          start: {
            line: 10,
            column: 30
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 24
          },
          end: {
            line: 17,
            column: 25
          }
        },
        loc: {
          start: {
            line: 17,
            column: 35
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 33
          },
          end: {
            line: 20,
            column: 34
          }
        },
        loc: {
          start: {
            line: 20,
            column: 44
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 23,
            column: 24
          },
          end: {
            line: 23,
            column: 25
          }
        },
        loc: {
          start: {
            line: 23,
            column: 35
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 33
          },
          end: {
            line: 26,
            column: 34
          }
        },
        loc: {
          start: {
            line: 26,
            column: 44
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 29,
            column: 26
          },
          end: {
            line: 29,
            column: 27
          }
        },
        loc: {
          start: {
            line: 29,
            column: 37
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 29
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 32,
            column: 35
          },
          end: {
            line: 32,
            column: 36
          }
        },
        loc: {
          start: {
            line: 32,
            column: 46
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 32
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 35,
            column: 22
          },
          end: {
            line: 35,
            column: 23
          }
        },
        loc: {
          start: {
            line: 35,
            column: 33
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 35
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 38,
            column: 28
          },
          end: {
            line: 38,
            column: 29
          }
        },
        loc: {
          start: {
            line: 38,
            column: 39
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 38
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 41,
            column: 18
          },
          end: {
            line: 41,
            column: 19
          }
        },
        loc: {
          start: {
            line: 41,
            column: 29
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 41
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 44,
            column: 19
          },
          end: {
            line: 44,
            column: 20
          }
        },
        loc: {
          start: {
            line: 44,
            column: 30
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 44
      },
      "11": {
        name: "createActiveInferenceEngine",
        decl: {
          start: {
            line: 49,
            column: 9
          },
          end: {
            line: 49,
            column: 36
          }
        },
        loc: {
          start: {
            line: 49,
            column: 45
          },
          end: {
            line: 112,
            column: 1
          }
        },
        line: 49
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 63,
            column: 32
          },
          end: {
            line: 63,
            column: 33
          }
        },
        loc: {
          start: {
            line: 63,
            column: 41
          },
          end: {
            line: 65,
            column: 5
          }
        },
        line: 63
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 74,
            column: 27
          },
          end: {
            line: 74,
            column: 28
          }
        },
        loc: {
          start: {
            line: 74,
            column: 38
          },
          end: {
            line: 78,
            column: 9
          }
        },
        line: 74
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 79,
            column: 20
          },
          end: {
            line: 79,
            column: 21
          }
        },
        loc: {
          start: {
            line: 79,
            column: 38
          },
          end: {
            line: 83,
            column: 9
          }
        },
        line: 79
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 84,
            column: 29
          },
          end: {
            line: 84,
            column: 30
          }
        },
        loc: {
          start: {
            line: 84,
            column: 60
          },
          end: {
            line: 109,
            column: 9
          }
        },
        line: 84
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 87,
            column: 51
          },
          end: {
            line: 87,
            column: 52
          }
        },
        loc: {
          start: {
            line: 87,
            column: 68
          },
          end: {
            line: 90,
            column: 13
          }
        },
        line: 87
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 94,
            column: 50
          },
          end: {
            line: 94,
            column: 51
          }
        },
        loc: {
          start: {
            line: 94,
            column: 58
          },
          end: {
            line: 98,
            column: 13
          }
        },
        line: 94
      },
      "18": {
        name: "updateBeliefs",
        decl: {
          start: {
            line: 113,
            column: 9
          },
          end: {
            line: 113,
            column: 22
          }
        },
        loc: {
          start: {
            line: 113,
            column: 44
          },
          end: {
            line: 146,
            column: 1
          }
        },
        line: 113
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 121,
            column: 32
          },
          end: {
            line: 121,
            column: 33
          }
        },
        loc: {
          start: {
            line: 121,
            column: 41
          },
          end: {
            line: 127,
            column: 5
          }
        },
        line: 121
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 129,
            column: 47
          },
          end: {
            line: 129,
            column: 48
          }
        },
        loc: {
          start: {
            line: 129,
            column: 56
          },
          end: {
            line: 131,
            column: 5
          }
        },
        line: 129
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 133,
            column: 47
          },
          end: {
            line: 133,
            column: 48
          }
        },
        loc: {
          start: {
            line: 133,
            column: 56
          },
          end: {
            line: 138,
            column: 5
          }
        },
        line: 133
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 140,
            column: 64
          },
          end: {
            line: 140,
            column: 65
          }
        },
        loc: {
          start: {
            line: 140,
            column: 72
          },
          end: {
            line: 142,
            column: 5
          }
        },
        line: 140
      },
      "23": {
        name: "selectAction",
        decl: {
          start: {
            line: 147,
            column: 9
          },
          end: {
            line: 147,
            column: 21
          }
        },
        loc: {
          start: {
            line: 147,
            column: 39
          },
          end: {
            line: 197,
            column: 1
          }
        },
        line: 147
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 153,
            column: 33
          },
          end: {
            line: 153,
            column: 34
          }
        },
        loc: {
          start: {
            line: 153,
            column: 43
          },
          end: {
            line: 155,
            column: 5
          }
        },
        line: 153
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 156,
            column: 33
          },
          end: {
            line: 156,
            column: 34
          }
        },
        loc: {
          start: {
            line: 156,
            column: 43
          },
          end: {
            line: 187,
            column: 5
          }
        },
        line: 156
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 179,
            column: 53
          },
          end: {
            line: 179,
            column: 54
          }
        },
        loc: {
          start: {
            line: 179,
            column: 58
          },
          end: {
            line: 179,
            column: 70
          }
        },
        line: 179
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 189,
            column: 54
          },
          end: {
            line: 189,
            column: 55
          }
        },
        loc: {
          start: {
            line: 189,
            column: 59
          },
          end: {
            line: 189,
            column: 73
          }
        },
        line: 189
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 190,
            column: 35
          },
          end: {
            line: 190,
            column: 36
          }
        },
        loc: {
          start: {
            line: 190,
            column: 43
          },
          end: {
            line: 190,
            column: 48
          }
        },
        line: 190
      },
      "29": {
        name: "performInference",
        decl: {
          start: {
            line: 198,
            column: 15
          },
          end: {
            line: 198,
            column: 31
          }
        },
        loc: {
          start: {
            line: 198,
            column: 53
          },
          end: {
            line: 216,
            column: 1
          }
        },
        line: 198
      },
      "30": {
        name: "calculateExpectedFreeEnergy",
        decl: {
          start: {
            line: 217,
            column: 9
          },
          end: {
            line: 217,
            column: 36
          }
        },
        loc: {
          start: {
            line: 217,
            column: 53
          },
          end: {
            line: 241,
            column: 1
          }
        },
        line: 217
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 223,
            column: 19
          },
          end: {
            line: 223,
            column: 20
          }
        },
        loc: {
          start: {
            line: 223,
            column: 27
          },
          end: {
            line: 233,
            column: 5
          }
        },
        line: 223
      },
      "32": {
        name: "calculateEpistemic",
        decl: {
          start: {
            line: 242,
            column: 9
          },
          end: {
            line: 242,
            column: 27
          }
        },
        loc: {
          start: {
            line: 242,
            column: 53
          },
          end: {
            line: 261,
            column: 1
          }
        },
        line: 242
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 246,
            column: 64
          },
          end: {
            line: 246,
            column: 65
          }
        },
        loc: {
          start: {
            line: 246,
            column: 72
          },
          end: {
            line: 248,
            column: 5
          }
        },
        line: 246
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 252,
            column: 68
          },
          end: {
            line: 252,
            column: 69
          }
        },
        loc: {
          start: {
            line: 252,
            column: 76
          },
          end: {
            line: 254,
            column: 5
          }
        },
        line: 252
      },
      "35": {
        name: "calculatePragmatic",
        decl: {
          start: {
            line: 262,
            column: 9
          },
          end: {
            line: 262,
            column: 27
          }
        },
        loc: {
          start: {
            line: 262,
            column: 53
          },
          end: {
            line: 277,
            column: 1
          }
        },
        line: 262
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 267,
            column: 40
          },
          end: {
            line: 267,
            column: 41
          }
        },
        loc: {
          start: {
            line: 267,
            column: 59
          },
          end: {
            line: 274,
            column: 5
          }
        },
        line: 267
      },
      "37": {
        name: "minimizeVariationalFreeEnergy",
        decl: {
          start: {
            line: 278,
            column: 15
          },
          end: {
            line: 278,
            column: 44
          }
        },
        loc: {
          start: {
            line: 278,
            column: 91
          },
          end: {
            line: 333,
            column: 1
          }
        },
        line: 278
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 291,
            column: 36
          },
          end: {
            line: 291,
            column: 37
          }
        },
        loc: {
          start: {
            line: 291,
            column: 45
          },
          end: {
            line: 304,
            column: 9
          }
        },
        line: 291
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 298,
            column: 65
          },
          end: {
            line: 298,
            column: 66
          }
        },
        loc: {
          start: {
            line: 298,
            column: 73
          },
          end: {
            line: 298,
            column: 78
          }
        },
        line: 298
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 299,
            column: 52
          },
          end: {
            line: 299,
            column: 53
          }
        },
        loc: {
          start: {
            line: 299,
            column: 57
          },
          end: {
            line: 301,
            column: 13
          }
        },
        line: 299
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 307,
            column: 36
          },
          end: {
            line: 307,
            column: 37
          }
        },
        loc: {
          start: {
            line: 307,
            column: 45
          },
          end: {
            line: 314,
            column: 9
          }
        },
        line: 307
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 316,
            column: 57
          },
          end: {
            line: 316,
            column: 58
          }
        },
        loc: {
          start: {
            line: 316,
            column: 65
          },
          end: {
            line: 316,
            column: 70
          }
        },
        line: 316
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 317,
            column: 44
          },
          end: {
            line: 317,
            column: 45
          }
        },
        loc: {
          start: {
            line: 317,
            column: 53
          },
          end: {
            line: 319,
            column: 9
          }
        },
        line: 317
      },
      "44": {
        name: "predictSensoryOutcomes",
        decl: {
          start: {
            line: 334,
            column: 9
          },
          end: {
            line: 334,
            column: 31
          }
        },
        loc: {
          start: {
            line: 334,
            column: 57
          },
          end: {
            line: 355,
            column: 1
          }
        },
        line: 334
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 337,
            column: 38
          },
          end: {
            line: 337,
            column: 39
          }
        },
        loc: {
          start: {
            line: 337,
            column: 45
          },
          end: {
            line: 339,
            column: 5
          }
        },
        line: 337
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 341,
            column: 43
          },
          end: {
            line: 341,
            column: 44
          }
        },
        loc: {
          start: {
            line: 341,
            column: 72
          },
          end: {
            line: 353,
            column: 5
          }
        },
        line: 341
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 345,
            column: 44
          },
          end: {
            line: 345,
            column: 45
          }
        },
        loc: {
          start: {
            line: 345,
            column: 70
          },
          end: {
            line: 352,
            column: 9
          }
        },
        line: 345
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 349,
            column: 49
          },
          end: {
            line: 349,
            column: 50
          }
        },
        loc: {
          start: {
            line: 349,
            column: 67
          },
          end: {
            line: 351,
            column: 13
          }
        },
        line: 349
      },
      "49": {
        name: "evaluateActionPolicy",
        decl: {
          start: {
            line: 356,
            column: 9
          },
          end: {
            line: 356,
            column: 29
          }
        },
        loc: {
          start: {
            line: 356,
            column: 46
          },
          end: {
            line: 383,
            column: 1
          }
        },
        line: 356
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 361,
            column: 19
          },
          end: {
            line: 361,
            column: 20
          }
        },
        loc: {
          start: {
            line: 361,
            column: 30
          },
          end: {
            line: 377,
            column: 5
          }
        },
        line: 361
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 364,
            column: 67
          },
          end: {
            line: 364,
            column: 68
          }
        },
        loc: {
          start: {
            line: 364,
            column: 91
          },
          end: {
            line: 367,
            column: 9
          }
        },
        line: 364
      },
      "52": {
        name: "predictBeliefEvolution",
        decl: {
          start: {
            line: 385,
            column: 9
          },
          end: {
            line: 385,
            column: 31
          }
        },
        loc: {
          start: {
            line: 385,
            column: 57
          },
          end: {
            line: 423,
            column: 1
          }
        },
        line: 385
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 391,
            column: 32
          },
          end: {
            line: 391,
            column: 33
          }
        },
        loc: {
          start: {
            line: 391,
            column: 41
          },
          end: {
            line: 393,
            column: 5
          }
        },
        line: 391
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 395,
            column: 43
          },
          end: {
            line: 395,
            column: 44
          }
        },
        loc: {
          start: {
            line: 395,
            column: 67
          },
          end: {
            line: 400,
            column: 5
          }
        },
        line: 395
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 397,
            column: 44
          },
          end: {
            line: 397,
            column: 45
          }
        },
        loc: {
          start: {
            line: 397,
            column: 70
          },
          end: {
            line: 399,
            column: 9
          }
        },
        line: 397
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 402,
            column: 57
          },
          end: {
            line: 402,
            column: 58
          }
        },
        loc: {
          start: {
            line: 402,
            column: 65
          },
          end: {
            line: 404,
            column: 5
          }
        },
        line: 402
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "1": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 51,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 51,
            column: 35
          }
        }, {
          start: {
            line: 51,
            column: 39
          },
          end: {
            line: 51,
            column: 72
          }
        }, {
          start: {
            line: 51,
            column: 76
          },
          end: {
            line: 51,
            column: 104
          }
        }],
        line: 51
      },
      "2": {
        loc: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "3": {
        loc: {
          start: {
            line: 68,
            column: 19
          },
          end: {
            line: 68,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 19
          },
          end: {
            line: 68,
            column: 35
          }
        }, {
          start: {
            line: 68,
            column: 39
          },
          end: {
            line: 68,
            column: 42
          }
        }],
        line: 68
      },
      "4": {
        loc: {
          start: {
            line: 69,
            column: 22
          },
          end: {
            line: 69,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 22
          },
          end: {
            line: 69,
            column: 41
          }
        }, {
          start: {
            line: 69,
            column: 45
          },
          end: {
            line: 69,
            column: 48
          }
        }],
        line: 69
      },
      "5": {
        loc: {
          start: {
            line: 70,
            column: 25
          },
          end: {
            line: 70,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 25
          },
          end: {
            line: 70,
            column: 47
          }
        }, {
          start: {
            line: 70,
            column: 51
          },
          end: {
            line: 70,
            column: 52
          }
        }],
        line: 70
      },
      "6": {
        loc: {
          start: {
            line: 88,
            column: 35
          },
          end: {
            line: 88,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 35
          },
          end: {
            line: 88,
            column: 84
          }
        }, {
          start: {
            line: 88,
            column: 88
          },
          end: {
            line: 88,
            column: 95
          }
        }],
        line: 88
      },
      "7": {
        loc: {
          start: {
            line: 95,
            column: 16
          },
          end: {
            line: 97,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 16
          },
          end: {
            line: 97,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "8": {
        loc: {
          start: {
            line: 101,
            column: 31
          },
          end: {
            line: 101,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 101,
            column: 31
          },
          end: {
            line: 101,
            column: 66
          }
        }, {
          start: {
            line: 101,
            column: 70
          },
          end: {
            line: 101,
            column: 71
          }
        }],
        line: 101
      },
      "9": {
        loc: {
          start: {
            line: 123,
            column: 27
          },
          end: {
            line: 123,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 27
          },
          end: {
            line: 123,
            column: 84
          }
        }, {
          start: {
            line: 123,
            column: 88
          },
          end: {
            line: 123,
            column: 95
          }
        }],
        line: 123
      },
      "10": {
        loc: {
          start: {
            line: 141,
            column: 15
          },
          end: {
            line: 141,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 141,
            column: 23
          },
          end: {
            line: 141,
            column: 52
          }
        }, {
          start: {
            line: 141,
            column: 55
          },
          end: {
            line: 141,
            column: 56
          }
        }],
        line: 141
      },
      "11": {
        loc: {
          start: {
            line: 154,
            column: 32
          },
          end: {
            line: 154,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 154,
            column: 32
          },
          end: {
            line: 154,
            column: 52
          }
        }, {
          start: {
            line: 154,
            column: 56
          },
          end: {
            line: 154,
            column: 57
          }
        }],
        line: 154
      },
      "12": {
        loc: {
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 164,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 164,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 158
      },
      "13": {
        loc: {
          start: {
            line: 159,
            column: 31
          },
          end: {
            line: 159,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 159,
            column: 31
          },
          end: {
            line: 159,
            column: 51
          }
        }, {
          start: {
            line: 159,
            column: 55
          },
          end: {
            line: 159,
            column: 56
          }
        }],
        line: 159
      },
      "14": {
        loc: {
          start: {
            line: 160,
            column: 12
          },
          end: {
            line: 163,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 12
          },
          end: {
            line: 163,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "15": {
        loc: {
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 176,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 176,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "16": {
        loc: {
          start: {
            line: 174,
            column: 12
          },
          end: {
            line: 174,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 174,
            column: 12
          },
          end: {
            line: 174,
            column: 37
          }
        }, {
          start: {
            line: 174,
            column: 41
          },
          end: {
            line: 174,
            column: 58
          }
        }],
        line: 174
      },
      "17": {
        loc: {
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      },
      "18": {
        loc: {
          start: {
            line: 227,
            column: 32
          },
          end: {
            line: 227,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 227,
            column: 61
          },
          end: {
            line: 227,
            column: 70
          }
        }, {
          start: {
            line: 227,
            column: 73
          },
          end: {
            line: 227,
            column: 74
          }
        }],
        line: 227
      },
      "19": {
        loc: {
          start: {
            line: 228,
            column: 32
          },
          end: {
            line: 228,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 228,
            column: 61
          },
          end: {
            line: 228,
            column: 70
          }
        }, {
          start: {
            line: 228,
            column: 73
          },
          end: {
            line: 228,
            column: 74
          }
        }],
        line: 228
      },
      "20": {
        loc: {
          start: {
            line: 237,
            column: 15
          },
          end: {
            line: 237,
            column: 55
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 237,
            column: 43
          },
          end: {
            line: 237,
            column: 51
          }
        }, {
          start: {
            line: 237,
            column: 54
          },
          end: {
            line: 237,
            column: 55
          }
        }],
        line: 237
      },
      "21": {
        loc: {
          start: {
            line: 238,
            column: 19
          },
          end: {
            line: 238,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 238,
            column: 53
          },
          end: {
            line: 238,
            column: 67
          }
        }, {
          start: {
            line: 238,
            column: 70
          },
          end: {
            line: 238,
            column: 71
          }
        }],
        line: 238
      },
      "22": {
        loc: {
          start: {
            line: 239,
            column: 19
          },
          end: {
            line: 239,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 239,
            column: 53
          },
          end: {
            line: 239,
            column: 67
          }
        }, {
          start: {
            line: 239,
            column: 70
          },
          end: {
            line: 239,
            column: 71
          }
        }],
        line: 239
      },
      "23": {
        loc: {
          start: {
            line: 247,
            column: 15
          },
          end: {
            line: 247,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 247,
            column: 23
          },
          end: {
            line: 247,
            column: 52
          }
        }, {
          start: {
            line: 247,
            column: 55
          },
          end: {
            line: 247,
            column: 56
          }
        }],
        line: 247
      },
      "24": {
        loc: {
          start: {
            line: 253,
            column: 15
          },
          end: {
            line: 253,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 253,
            column: 23
          },
          end: {
            line: 253,
            column: 52
          }
        }, {
          start: {
            line: 253,
            column: 55
          },
          end: {
            line: 253,
            column: 56
          }
        }],
        line: 253
      },
      "25": {
        loc: {
          start: {
            line: 260,
            column: 11
          },
          end: {
            line: 260,
            column: 47
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 260,
            column: 37
          },
          end: {
            line: 260,
            column: 43
          }
        }, {
          start: {
            line: 260,
            column: 46
          },
          end: {
            line: 260,
            column: 47
          }
        }],
        line: 260
      },
      "26": {
        loc: {
          start: {
            line: 268,
            column: 27
          },
          end: {
            line: 268,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 268,
            column: 27
          },
          end: {
            line: 268,
            column: 60
          }
        }, {
          start: {
            line: 268,
            column: 64
          },
          end: {
            line: 268,
            column: 65
          }
        }],
        line: 268
      },
      "27": {
        loc: {
          start: {
            line: 271,
            column: 8
          },
          end: {
            line: 273,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 271,
            column: 8
          },
          end: {
            line: 273,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 271
      },
      "28": {
        loc: {
          start: {
            line: 276,
            column: 11
          },
          end: {
            line: 276,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 276,
            column: 49
          },
          end: {
            line: 276,
            column: 67
          }
        }, {
          start: {
            line: 276,
            column: 70
          },
          end: {
            line: 276,
            column: 71
          }
        }],
        line: 276
      },
      "29": {
        loc: {
          start: {
            line: 279,
            column: 20
          },
          end: {
            line: 279,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 279,
            column: 20
          },
          end: {
            line: 279,
            column: 42
          }
        }, {
          start: {
            line: 279,
            column: 46
          },
          end: {
            line: 279,
            column: 49
          }
        }],
        line: 279
      },
      "30": {
        loc: {
          start: {
            line: 280,
            column: 22
          },
          end: {
            line: 280,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 280,
            column: 22
          },
          end: {
            line: 280,
            column: 40
          }
        }, {
          start: {
            line: 280,
            column: 44
          },
          end: {
            line: 280,
            column: 49
          }
        }],
        line: 280
      },
      "31": {
        loc: {
          start: {
            line: 287,
            column: 10
          },
          end: {
            line: 287,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 287,
            column: 10
          },
          end: {
            line: 287,
            column: 30
          }
        }, {
          start: {
            line: 287,
            column: 34
          },
          end: {
            line: 287,
            column: 44
          }
        }],
        line: 287
      },
      "32": {
        loc: {
          start: {
            line: 310,
            column: 12
          },
          end: {
            line: 312,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 310,
            column: 12
          },
          end: {
            line: 312,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 310
      },
      "33": {
        loc: {
          start: {
            line: 322,
            column: 8
          },
          end: {
            line: 324,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 322,
            column: 8
          },
          end: {
            line: 324,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 322
      },
      "34": {
        loc: {
          start: {
            line: 322,
            column: 12
          },
          end: {
            line: 322,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 322,
            column: 12
          },
          end: {
            line: 322,
            column: 20
          }
        }, {
          start: {
            line: 322,
            column: 24
          },
          end: {
            line: 322,
            column: 64
          }
        }],
        line: 322
      },
      "35": {
        loc: {
          start: {
            line: 343,
            column: 28
          },
          end: {
            line: 343,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 343,
            column: 28
          },
          end: {
            line: 343,
            column: 80
          }
        }, {
          start: {
            line: 343,
            column: 84
          },
          end: {
            line: 343,
            column: 86
          }
        }],
        line: 343
      },
      "36": {
        loc: {
          start: {
            line: 347,
            column: 33
          },
          end: {
            line: 347,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 347,
            column: 33
          },
          end: {
            line: 347,
            column: 73
          }
        }, {
          start: {
            line: 347,
            column: 77
          },
          end: {
            line: 347,
            column: 79
          }
        }],
        line: 347
      },
      "37": {
        loc: {
          start: {
            line: 365,
            column: 31
          },
          end: {
            line: 365,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 365,
            column: 31
          },
          end: {
            line: 365,
            column: 64
          }
        }, {
          start: {
            line: 365,
            column: 68
          },
          end: {
            line: 365,
            column: 69
          }
        }],
        line: 365
      },
      "38": {
        loc: {
          start: {
            line: 372,
            column: 8
          },
          end: {
            line: 374,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 372,
            column: 8
          },
          end: {
            line: 374,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 372
      },
      "39": {
        loc: {
          start: {
            line: 396,
            column: 28
          },
          end: {
            line: 396,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 396,
            column: 28
          },
          end: {
            line: 396,
            column: 80
          }
        }, {
          start: {
            line: 396,
            column: 84
          },
          end: {
            line: 396,
            column: 86
          }
        }],
        line: 396
      },
      "40": {
        loc: {
          start: {
            line: 403,
            column: 15
          },
          end: {
            line: 403,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 403,
            column: 23
          },
          end: {
            line: 403,
            column: 52
          }
        }, {
          start: {
            line: 403,
            column: 55
          },
          end: {
            line: 403,
            column: 56
          }
        }],
        line: 403
      },
      "41": {
        loc: {
          start: {
            line: 407,
            column: 4
          },
          end: {
            line: 419,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 408,
            column: 8
          },
          end: {
            line: 410,
            column: 18
          }
        }, {
          start: {
            line: 411,
            column: 8
          },
          end: {
            line: 413,
            column: 18
          }
        }, {
          start: {
            line: 414,
            column: 8
          },
          end: {
            line: 416,
            column: 18
          }
        }, {
          start: {
            line: 417,
            column: 8
          },
          end: {
            line: 418,
            column: 42
          }
        }],
        line: 407
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0, 0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matthewmoroney/builds/FreeAgentics/web/lib/active-inference.ts"],
      sourcesContent: ["/**\n * Active Inference Implementation\n *\n * Core implementation for active inference, free energy minimization,\n * and belief updating based on the Free Energy Principle.\n */\n\nexport interface GenerativeModel {\n  states: string[];\n  observations: string[];\n  actions: string[];\n  transitionModel: Record<string, Record<string, Record<string, number>>>;\n  observationModel: Record<string, Record<string, number>>;\n  preferences: Record<string, number>;\n}\n\nexport interface Beliefs {\n  states: Record<string, number>;\n  uncertainty: number;\n  converged?: boolean;\n  iterations?: number;\n}\n\nexport interface SensoryInput {\n  type: string;\n  value: string;\n  confidence: number;\n}\n\nexport interface Action {\n  type: string;\n  confidence: number;\n  expectedOutcome?: string;\n}\n\nexport type Policy = Array<{\n  action: string;\n  timestep: number;\n}>;\n\nexport interface ActiveInferenceConfig {\n  model: GenerativeModel;\n  precision?: number;\n  learningRate?: number;\n  planningHorizon?: number;\n  actionConstraints?: Record<string, { maxFrequency: number }>;\n}\n\nexport interface ActiveInferenceEngine {\n  model: GenerativeModel;\n  precision: number;\n  learningRate: number;\n  planningHorizon: number;\n  actionConstraints?: Record<string, { maxFrequency: number }>;\n  beliefs: Beliefs;\n  actionHistory: string[];\n  getCurrentBeliefs: () => Beliefs;\n  setBeliefs: (beliefs: Beliefs) => void;\n  calculateFreeEnergy: (beliefs: Beliefs, observation: string) => number;\n}\n\nexport interface InferenceResult {\n  beliefs: Beliefs;\n  selectedAction: Action;\n  freeEnergy: number;\n  confidence: number;\n}\n\nexport interface ExpectedFreeEnergy {\n  total: number;\n  epistemic: number;\n  pragmatic: number;\n}\n\nexport interface PolicyEvaluation {\n  expectedReturn: number;\n  uncertainty: number;\n  feasibility: number;\n}\n\nconst EPSILON = 1e-10;\n\nexport function createActiveInferenceEngine(\n  config: ActiveInferenceConfig,\n): ActiveInferenceEngine {\n  // Validate model\n  if (\n    !config.model.states.length ||\n    !config.model.observations.length ||\n    !config.model.actions.length\n  ) {\n    throw new Error(\n      \"Invalid generative model: missing states, observations, or actions\",\n    );\n  }\n\n  if (Object.keys(config.model.transitionModel).length === 0) {\n    throw new Error(\"Invalid generative model: empty transition model\");\n  }\n\n  // Initialize uniform beliefs\n  const uniformProb = 1.0 / config.model.states.length;\n  const initialBeliefs: Beliefs = {\n    states: {},\n    uncertainty: 1.0,\n  };\n\n  config.model.states.forEach((state) => {\n    initialBeliefs.states[state] = uniformProb;\n  });\n\n  const engine: ActiveInferenceEngine = {\n    model: config.model,\n    precision: config.precision || 1.0,\n    learningRate: config.learningRate || 0.1,\n    planningHorizon: config.planningHorizon || 3,\n    actionConstraints: config.actionConstraints,\n    beliefs: initialBeliefs,\n    actionHistory: [],\n\n    getCurrentBeliefs: function () {\n      return { ...this.beliefs };\n    },\n\n    setBeliefs: function (beliefs: Beliefs) {\n      this.beliefs = { ...beliefs };\n    },\n\n    calculateFreeEnergy: function (beliefs: Beliefs, observation: string) {\n      // Accuracy term (expected log likelihood)\n      let accuracy = 0;\n      Object.entries(beliefs.states).forEach(([state, prob]) => {\n        const likelihood =\n          this.model.observationModel[state]?.[observation] || EPSILON;\n        accuracy += prob * Math.log(likelihood + EPSILON);\n      });\n\n      // Complexity term (KL divergence from prior)\n      let complexity = 0;\n      const prior = 1.0 / this.model.states.length;\n      Object.values(beliefs.states).forEach((prob) => {\n        if (prob > 0) {\n          complexity += prob * Math.log((prob + EPSILON) / prior);\n        }\n      });\n\n      // Convert preference to a positive cost term\n      // Negative preferences (rewards) become positive costs\n      const preference = this.model.preferences[observation] || 0;\n      const cost = -preference; // Convert reward to cost\n\n      // Add uncertainty term\n      const uncertaintyPenalty = beliefs.uncertainty * 2.0;\n\n      // Free energy = -log likelihood + complexity + cost + uncertainty\n      const freeEnergy = -accuracy + complexity + cost + uncertaintyPenalty;\n\n      // Ensure free energy is positive by adding a constant if needed\n      return Math.max(0.01, freeEnergy);\n    },\n  };\n\n  return engine;\n}\n\nexport function updateBeliefs(\n  engine: ActiveInferenceEngine,\n  observation: SensoryInput,\n): Beliefs {\n  const currentBeliefs = engine.getCurrentBeliefs();\n  const updatedBeliefs: Beliefs = {\n    states: {},\n    uncertainty: currentBeliefs.uncertainty,\n  };\n\n  // Standard Bayesian belief update\n  let totalPosterior = 0;\n\n  engine.model.states.forEach((state) => {\n    const prior = currentBeliefs.states[state];\n    const likelihood =\n      engine.model.observationModel[state]?.[observation.value] || EPSILON;\n\n    const posterior = prior * likelihood;\n    updatedBeliefs.states[state] = posterior;\n    totalPosterior += posterior;\n  });\n\n  // Normalize to get standard Bayesian posterior\n  Object.keys(updatedBeliefs.states).forEach((state) => {\n    updatedBeliefs.states[state] /= totalPosterior;\n  });\n\n  // Apply confidence weighting by interpolating between prior and posterior\n  Object.keys(updatedBeliefs.states).forEach((state) => {\n    const prior = currentBeliefs.states[state];\n    const posterior = updatedBeliefs.states[state];\n    \n    // High confidence = use more of posterior, low confidence = use more of prior\n    updatedBeliefs.states[state] = \n      observation.confidence * posterior + \n      (1 - observation.confidence) * prior;\n  });\n\n  // Update uncertainty based on observation confidence and belief entropy\n  const entropy = Object.values(updatedBeliefs.states).reduce((h, p) => {\n    return p > 0 ? h - p * Math.log(p + EPSILON) : h;\n  }, 0);\n\n  updatedBeliefs.uncertainty =\n    (1 - observation.confidence) * 0.3 + entropy * 0.7;\n\n  // Don't modify engine state, just return the updated beliefs\n  return updatedBeliefs;\n}\n\nexport function selectAction(\n  engine: ActiveInferenceEngine,\n  beliefs: Beliefs,\n): Action {\n  let bestAction = \"\";\n  let minExpectedFE = Infinity;\n  const actionScores: Record<string, number> = {};\n\n  // Check action constraints\n  const actionCounts: Record<string, number> = {};\n  engine.actionHistory.forEach((action) => {\n    actionCounts[action] = (actionCounts[action] || 0) + 1;\n  });\n\n  engine.model.actions.forEach((action) => {\n    // Check constraints\n    if (engine.actionConstraints?.[action]) {\n      const frequency =\n        (actionCounts[action] || 0) / Math.max(engine.actionHistory.length, 1);\n      if (frequency >= engine.actionConstraints[action].maxFrequency) {\n        actionScores[action] = Infinity;\n        return;\n      }\n    }\n\n    // Calculate expected free energy for this action\n    let expectedFE = 0;\n\n    // Epistemic value (information gain)\n    const epistemic = calculateEpistemic(engine, beliefs, action);\n\n    // Pragmatic value (goal achievement)\n    const pragmatic = calculatePragmatic(engine, beliefs, action);\n\n    // Combine with precision weighting\n    expectedFE = engine.precision * pragmatic - epistemic;\n\n    // Add exploration bonus under high uncertainty\n    if (beliefs.uncertainty > 0.5 && action !== \"wait\") {\n      expectedFE -= beliefs.uncertainty * 0.5;\n    }\n\n    // Add action variety bonus to prevent getting stuck\n    const recentActions = engine.actionHistory.slice(-5);\n    const actionFrequency = recentActions.filter(a => a === action).length / Math.max(recentActions.length, 1);\n    const varietyPenalty = actionFrequency * 2.0; // Penalize repetitive actions\n    expectedFE += varietyPenalty;\n\n    actionScores[action] = expectedFE;\n\n    if (expectedFE < minExpectedFE) {\n      minExpectedFE = expectedFE;\n      bestAction = action;\n    }\n  });\n\n  // Calculate action confidence based on score differences\n  const scores = Object.values(actionScores).filter((s) => s !== Infinity);\n  const avgScore = scores.reduce((a, b) => a + b, 0) / scores.length;\n  const confidence = Math.exp(-Math.abs(minExpectedFE - avgScore));\n\n  engine.actionHistory.push(bestAction);\n\n  return {\n    type: bestAction,\n    confidence: Math.min(Math.max(confidence, 0.1), 1.0),\n  };\n}\n\nexport async function performInference(\n  engine: ActiveInferenceEngine,\n  observation: SensoryInput,\n): Promise<InferenceResult> {\n  // Update beliefs based on observation\n  const updatedBeliefs = updateBeliefs(engine, observation);\n\n  // Update the engine's beliefs for persistence across inferences\n  engine.setBeliefs(updatedBeliefs);\n\n  // Calculate current free energy\n  const freeEnergy = engine.calculateFreeEnergy(\n    updatedBeliefs,\n    observation.value,\n  );\n\n  // Select action that minimizes expected free energy\n  const selectedAction = selectAction(engine, updatedBeliefs);\n\n  // Overall confidence based on belief certainty and action confidence\n  const beliefCertainty = Math.max(...Object.values(updatedBeliefs.states));\n  const overallConfidence = (beliefCertainty + selectedAction.confidence) / 2;\n\n  return {\n    beliefs: updatedBeliefs,\n    selectedAction,\n    freeEnergy,\n    confidence: overallConfidence,\n  };\n}\n\nexport function calculateExpectedFreeEnergy(\n  engine: ActiveInferenceEngine,\n  policy: Policy,\n): ExpectedFreeEnergy {\n  let totalEFE = 0;\n  let totalEpistemic = 0;\n  let totalPragmatic = 0;\n\n  // Start with current beliefs\n  let beliefs = engine.getCurrentBeliefs();\n\n  policy.forEach((step) => {\n    const epistemic = calculateEpistemic(engine, beliefs, step.action);\n    const pragmatic = calculatePragmatic(engine, beliefs, step.action);\n\n    // Ensure finite values\n    const finiteEpistemic = Number.isFinite(epistemic) ? epistemic : 0;\n    const finitePragmatic = Number.isFinite(pragmatic) ? pragmatic : 0;\n\n    totalEpistemic += finiteEpistemic * Math.pow(0.9, step.timestep); // Discount future\n    totalPragmatic += finitePragmatic * Math.pow(0.9, step.timestep);\n\n    // Predict belief evolution\n    beliefs = predictBeliefEvolution(engine, beliefs, step.action);\n  });\n\n  totalEFE = engine.precision * totalPragmatic - totalEpistemic;\n\n  // Ensure all values are finite\n  return {\n    total: Number.isFinite(totalEFE) ? totalEFE : 0,\n    epistemic: Number.isFinite(totalEpistemic) ? totalEpistemic : 0,\n    pragmatic: Number.isFinite(totalPragmatic) ? totalPragmatic : 0,\n  };\n}\n\nexport function calculateEpistemic(\n  engine: ActiveInferenceEngine,\n  beliefs: Beliefs,\n  action: string,\n): number {\n  // Information gain: reduction in uncertainty about states\n  let informationGain = 0;\n\n  // Current entropy\n  const currentEntropy = Object.values(beliefs.states).reduce((h, p) => {\n    return p > 0 ? h - p * Math.log(p + EPSILON) : h;\n  }, 0);\n\n  // Expected entropy after action\n  let expectedEntropy = 0;\n  const predictedBeliefs = predictBeliefEvolution(engine, beliefs, action);\n\n  expectedEntropy = Object.values(predictedBeliefs.states).reduce((h, p) => {\n    return p > 0 ? h - p * Math.log(p + EPSILON) : h;\n  }, 0);\n\n  informationGain = currentEntropy - expectedEntropy;\n\n  // Add exploration bonus for uncertain states\n  const explorationBonus = beliefs.uncertainty * 0.3;\n\n  const result = Math.max(0, informationGain + explorationBonus);\n  \n  // Ensure finite result\n  return Number.isFinite(result) ? result : 0;\n}\n\nexport function calculatePragmatic(\n  engine: ActiveInferenceEngine,\n  beliefs: Beliefs,\n  action: string,\n): number {\n  // Expected preference satisfaction\n  let expectedPreference = 0;\n\n  // Predict outcomes for this action\n  const predictions = predictSensoryOutcomes(engine, beliefs, action);\n\n  Object.entries(predictions).forEach(([outcome, prob]) => {\n    const preference = engine.model.preferences[outcome] || 0;\n    const contribution = prob * preference;\n    \n    // Only add finite contributions\n    if (Number.isFinite(contribution)) {\n      expectedPreference += contribution;\n    }\n  });\n\n  // Ensure finite result\n  return Number.isFinite(expectedPreference) ? expectedPreference : 0;\n}\n\nexport async function minimizeVariationalFreeEnergy(\n  engine: ActiveInferenceEngine,\n  initialBeliefs: Beliefs,\n  observation: string,\n  options?: { maxIterations?: number; tolerance?: number },\n): Promise<Beliefs> {\n  const maxIter = options?.maxIterations || 100;\n  const tolerance = options?.tolerance || 0.001;\n\n  let beliefs = { ...initialBeliefs };\n  let prevFE = engine.calculateFreeEnergy(beliefs, observation);\n  let converged = false;\n  let iterations = 0;\n\n  while (iterations < maxIter && !converged) {\n    // Gradient descent on beliefs\n    const gradient: Record<string, number> = {};\n    const delta = 0.001;\n\n    engine.model.states.forEach((state) => {\n      // Finite difference approximation\n      const beliefsCopy = { ...beliefs };\n      beliefsCopy.states[state] = Math.min(beliefs.states[state] + delta, 1);\n\n      // Renormalize\n      const sum = Object.values(beliefsCopy.states).reduce((s, p) => s + p, 0);\n      Object.keys(beliefsCopy.states).forEach((s) => {\n        beliefsCopy.states[s] /= sum;\n      });\n\n      const fePlus = engine.calculateFreeEnergy(beliefsCopy, observation);\n      gradient[state] = (fePlus - prevFE) / delta;\n    });\n\n    // Update beliefs\n    let changed = false;\n    engine.model.states.forEach((state) => {\n      const update = -gradient[state] * engine.learningRate;\n      const newBelief = Math.max(\n        0,\n        Math.min(1, beliefs.states[state] + update),\n      );\n\n      if (Math.abs(newBelief - beliefs.states[state]) > tolerance) {\n        changed = true;\n      }\n\n      beliefs.states[state] = newBelief;\n    });\n\n    // Renormalize\n    const sum = Object.values(beliefs.states).reduce((s, p) => s + p, 0);\n    Object.keys(beliefs.states).forEach((state) => {\n      beliefs.states[state] /= sum;\n    });\n\n    // Check convergence\n    const currentFE = engine.calculateFreeEnergy(beliefs, observation);\n    if (!changed || Math.abs(currentFE - prevFE) < tolerance) {\n      converged = true;\n    }\n\n    prevFE = currentFE;\n    iterations++;\n  }\n\n  return {\n    ...beliefs,\n    converged,\n    iterations,\n  };\n}\n\nexport function predictSensoryOutcomes(\n  engine: ActiveInferenceEngine,\n  beliefs: Beliefs,\n  action: string,\n): Record<string, number> {\n  const predictions: Record<string, number> = {};\n\n  // Initialize predictions\n  engine.model.observations.forEach((obs) => {\n    predictions[obs] = 0;\n  });\n\n  // For each current state\n  Object.entries(beliefs.states).forEach(([currentState, stateProb]) => {\n    // Get transition probabilities for this action\n    const transitions =\n      engine.model.transitionModel[currentState]?.[action] || {};\n\n    // For each possible next state\n    Object.entries(transitions).forEach(([nextState, transProb]) => {\n      // Get observation probabilities for next state\n      const observations = engine.model.observationModel[nextState] || {};\n\n      // Accumulate prediction\n      Object.entries(observations).forEach(([obs, obsProb]) => {\n        predictions[obs] += stateProb * transProb * obsProb;\n      });\n    });\n  });\n\n  return predictions;\n}\n\nexport function evaluateActionPolicy(\n  engine: ActiveInferenceEngine,\n  policy: Policy,\n): PolicyEvaluation {\n  let expectedReturn = 0;\n  let totalUncertainty = 0;\n  let feasibility = 1.0;\n\n  let beliefs = engine.getCurrentBeliefs();\n\n  policy.forEach((step, t) => {\n    // Expected immediate reward\n    const predictions = predictSensoryOutcomes(engine, beliefs, step.action);\n    const immediateReturn = Object.entries(predictions).reduce(\n      (sum, [outcome, prob]) => {\n        const preference = engine.model.preferences[outcome] || 0;\n        return sum - prob * preference; // Negative because lower is better\n      },\n      0,\n    );\n\n    expectedReturn += immediateReturn * Math.pow(0.9, t);\n\n    // Accumulate uncertainty\n    totalUncertainty += beliefs.uncertainty * Math.pow(0.9, t);\n\n    // Check action feasibility\n    if (!engine.model.actions.includes(step.action)) {\n      feasibility *= 0.1;\n    }\n\n    // Evolve beliefs\n    beliefs = predictBeliefEvolution(engine, beliefs, step.action);\n  });\n\n  return {\n    expectedReturn,\n    uncertainty: totalUncertainty / policy.length,\n    feasibility,\n  };\n}\n\n// Helper function to predict belief evolution\nfunction predictBeliefEvolution(\n  engine: ActiveInferenceEngine,\n  beliefs: Beliefs,\n  action: string,\n): Beliefs {\n  const evolved: Beliefs = {\n    states: {},\n    uncertainty: beliefs.uncertainty,\n  };\n\n  // Initialize\n  engine.model.states.forEach((state) => {\n    evolved.states[state] = 0;\n  });\n\n  // Predict state evolution\n  Object.entries(beliefs.states).forEach(([currentState, prob]) => {\n    const transitions =\n      engine.model.transitionModel[currentState]?.[action] || {};\n\n    Object.entries(transitions).forEach(([nextState, transProb]) => {\n      evolved.states[nextState] += prob * transProb;\n    });\n  });\n\n  // Calculate uncertainty based on belief entropy and action effects\n  const entropy = Object.values(evolved.states).reduce((h, p) => {\n    return p > 0 ? h - p * Math.log(p + EPSILON) : h;\n  }, 0);\n\n  // Different actions affect uncertainty differently\n  let actionUncertaintyEffect = 1.0;\n  switch (action) {\n    case \"wait\":\n      actionUncertaintyEffect = 1.2; // Waiting increases uncertainty\n      break;\n    case \"move_forward\":\n      actionUncertaintyEffect = 0.9; // Moving reduces uncertainty through exploration\n      break;\n    case \"turn\":\n      actionUncertaintyEffect = 0.8; // Turning provides more information\n      break;\n    default:\n      actionUncertaintyEffect = 1.1;\n  }\n\n  // Update uncertainty based on entropy and action effects\n  evolved.uncertainty = Math.min(1.0, Math.max(0.1, \n    beliefs.uncertainty * actionUncertaintyEffect + entropy * 0.1\n  ));\n\n  return evolved;\n}\n"],
      names: ["calculateEpistemic", "calculateExpectedFreeEnergy", "calculatePragmatic", "createActiveInferenceEngine", "evaluateActionPolicy", "minimizeVariationalFreeEnergy", "performInference", "predictSensoryOutcomes", "selectAction", "updateBeliefs", "EPSILON", "config", "model", "states", "length", "observations", "actions", "Error", "Object", "keys", "transitionModel", "uniformProb", "initialBeliefs", "uncertainty", "forEach", "state", "engine", "precision", "learningRate", "planningHorizon", "actionConstraints", "beliefs", "actionHistory", "getCurrentBeliefs", "setBeliefs", "calculateFreeEnergy", "observation", "accuracy", "entries", "prob", "likelihood", "observationModel", "Math", "log", "complexity", "prior", "values", "preference", "preferences", "cost", "uncertaintyPenalty", "freeEnergy", "max", "currentBeliefs", "updatedBeliefs", "totalPosterior", "value", "posterior", "confidence", "entropy", "reduce", "h", "p", "bestAction", "minExpectedFE", "Infinity", "actionScores", "actionCounts", "action", "frequency", "maxFrequency", "expectedFE", "epistemic", "pragmatic", "recentActions", "slice", "actionFrequency", "filter", "a", "varietyPenalty", "scores", "s", "avgScore", "b", "exp", "abs", "push", "type", "min", "selectedAction", "beliefCertainty", "overallConfidence", "policy", "totalEFE", "totalEpistemic", "totalPragmatic", "step", "finiteEpistemic", "Number", "isFinite", "finitePragmatic", "pow", "timestep", "predictBeliefEvolution", "total", "informationGain", "currentEntropy", "expectedEntropy", "predictedBeliefs", "explorationBonus", "result", "expectedPreference", "predictions", "outcome", "contribution", "options", "maxIter", "maxIterations", "tolerance", "prevFE", "converged", "iterations", "gradient", "delta", "beliefsCopy", "sum", "fePlus", "changed", "update", "newBelief", "currentFE", "obs", "currentState", "stateProb", "transitions", "nextState", "transProb", "obsProb", "expectedReturn", "totalUncertainty", "feasibility", "t", "immediateReturn", "includes", "evolved", "actionUncertaintyEffect"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c98340c82aa655ebcf6d39c3402d7a480456fda1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ineumuc8z = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ineumuc8z();
cov_ineumuc8z().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_ineumuc8z().f[0]++;
  cov_ineumuc8z().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_ineumuc8z().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_ineumuc8z().s[3]++;
_export(exports, {
  calculateEpistemic: function () {
    /* istanbul ignore next */
    cov_ineumuc8z().f[1]++;
    cov_ineumuc8z().s[4]++;
    return calculateEpistemic;
  },
  calculateExpectedFreeEnergy: function () {
    /* istanbul ignore next */
    cov_ineumuc8z().f[2]++;
    cov_ineumuc8z().s[5]++;
    return calculateExpectedFreeEnergy;
  },
  calculatePragmatic: function () {
    /* istanbul ignore next */
    cov_ineumuc8z().f[3]++;
    cov_ineumuc8z().s[6]++;
    return calculatePragmatic;
  },
  createActiveInferenceEngine: function () {
    /* istanbul ignore next */
    cov_ineumuc8z().f[4]++;
    cov_ineumuc8z().s[7]++;
    return createActiveInferenceEngine;
  },
  evaluateActionPolicy: function () {
    /* istanbul ignore next */
    cov_ineumuc8z().f[5]++;
    cov_ineumuc8z().s[8]++;
    return evaluateActionPolicy;
  },
  minimizeVariationalFreeEnergy: function () {
    /* istanbul ignore next */
    cov_ineumuc8z().f[6]++;
    cov_ineumuc8z().s[9]++;
    return minimizeVariationalFreeEnergy;
  },
  performInference: function () {
    /* istanbul ignore next */
    cov_ineumuc8z().f[7]++;
    cov_ineumuc8z().s[10]++;
    return performInference;
  },
  predictSensoryOutcomes: function () {
    /* istanbul ignore next */
    cov_ineumuc8z().f[8]++;
    cov_ineumuc8z().s[11]++;
    return predictSensoryOutcomes;
  },
  selectAction: function () {
    /* istanbul ignore next */
    cov_ineumuc8z().f[9]++;
    cov_ineumuc8z().s[12]++;
    return selectAction;
  },
  updateBeliefs: function () {
    /* istanbul ignore next */
    cov_ineumuc8z().f[10]++;
    cov_ineumuc8z().s[13]++;
    return updateBeliefs;
  }
});
const EPSILON =
/* istanbul ignore next */
(cov_ineumuc8z().s[14]++, 1e-10);
function createActiveInferenceEngine(config) {
  /* istanbul ignore next */
  cov_ineumuc8z().f[11]++;
  cov_ineumuc8z().s[15]++;
  // Validate model
  if (
  /* istanbul ignore next */
  (cov_ineumuc8z().b[1][0]++, !config.model.states.length) ||
  /* istanbul ignore next */
  (cov_ineumuc8z().b[1][1]++, !config.model.observations.length) ||
  /* istanbul ignore next */
  (cov_ineumuc8z().b[1][2]++, !config.model.actions.length)) {
    /* istanbul ignore next */
    cov_ineumuc8z().b[0][0]++;
    cov_ineumuc8z().s[16]++;
    throw new Error("Invalid generative model: missing states, observations, or actions");
  } else
  /* istanbul ignore next */
  {
    cov_ineumuc8z().b[0][1]++;
  }
  cov_ineumuc8z().s[17]++;
  if (Object.keys(config.model.transitionModel).length === 0) {
    /* istanbul ignore next */
    cov_ineumuc8z().b[2][0]++;
    cov_ineumuc8z().s[18]++;
    throw new Error("Invalid generative model: empty transition model");
  } else
  /* istanbul ignore next */
  {
    cov_ineumuc8z().b[2][1]++;
  }
  // Initialize uniform beliefs
  const uniformProb =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[19]++, 1.0 / config.model.states.length);
  const initialBeliefs =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[20]++, {
    states: {},
    uncertainty: 1.0
  });
  /* istanbul ignore next */
  cov_ineumuc8z().s[21]++;
  config.model.states.forEach(state => {
    /* istanbul ignore next */
    cov_ineumuc8z().f[12]++;
    cov_ineumuc8z().s[22]++;
    initialBeliefs.states[state] = uniformProb;
  });
  const engine =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[23]++, {
    model: config.model,
    precision:
    /* istanbul ignore next */
    (cov_ineumuc8z().b[3][0]++, config.precision) ||
    /* istanbul ignore next */
    (cov_ineumuc8z().b[3][1]++, 1.0),
    learningRate:
    /* istanbul ignore next */
    (cov_ineumuc8z().b[4][0]++, config.learningRate) ||
    /* istanbul ignore next */
    (cov_ineumuc8z().b[4][1]++, 0.1),
    planningHorizon:
    /* istanbul ignore next */
    (cov_ineumuc8z().b[5][0]++, config.planningHorizon) ||
    /* istanbul ignore next */
    (cov_ineumuc8z().b[5][1]++, 3),
    actionConstraints: config.actionConstraints,
    beliefs: initialBeliefs,
    actionHistory: [],
    getCurrentBeliefs: function () {
      /* istanbul ignore next */
      cov_ineumuc8z().f[13]++;
      cov_ineumuc8z().s[24]++;
      return {
        ...this.beliefs
      };
    },
    setBeliefs: function (beliefs) {
      /* istanbul ignore next */
      cov_ineumuc8z().f[14]++;
      cov_ineumuc8z().s[25]++;
      this.beliefs = {
        ...beliefs
      };
    },
    calculateFreeEnergy: function (beliefs, observation) {
      /* istanbul ignore next */
      cov_ineumuc8z().f[15]++;
      // Accuracy term (expected log likelihood)
      let accuracy =
      /* istanbul ignore next */
      (cov_ineumuc8z().s[26]++, 0);
      /* istanbul ignore next */
      cov_ineumuc8z().s[27]++;
      Object.entries(beliefs.states).forEach(([state, prob]) => {
        /* istanbul ignore next */
        cov_ineumuc8z().f[16]++;
        const likelihood =
        /* istanbul ignore next */
        (cov_ineumuc8z().s[28]++,
        /* istanbul ignore next */
        (cov_ineumuc8z().b[6][0]++, this.model.observationModel[state]?.[observation]) ||
        /* istanbul ignore next */
        (cov_ineumuc8z().b[6][1]++, EPSILON));
        /* istanbul ignore next */
        cov_ineumuc8z().s[29]++;
        accuracy += prob * Math.log(likelihood + EPSILON);
      });
      // Complexity term (KL divergence from prior)
      let complexity =
      /* istanbul ignore next */
      (cov_ineumuc8z().s[30]++, 0);
      const prior =
      /* istanbul ignore next */
      (cov_ineumuc8z().s[31]++, 1.0 / this.model.states.length);
      /* istanbul ignore next */
      cov_ineumuc8z().s[32]++;
      Object.values(beliefs.states).forEach(prob => {
        /* istanbul ignore next */
        cov_ineumuc8z().f[17]++;
        cov_ineumuc8z().s[33]++;
        if (prob > 0) {
          /* istanbul ignore next */
          cov_ineumuc8z().b[7][0]++;
          cov_ineumuc8z().s[34]++;
          complexity += prob * Math.log((prob + EPSILON) / prior);
        } else
        /* istanbul ignore next */
        {
          cov_ineumuc8z().b[7][1]++;
        }
      });
      // Convert preference to a positive cost term
      // Negative preferences (rewards) become positive costs
      const preference =
      /* istanbul ignore next */
      (cov_ineumuc8z().s[35]++,
      /* istanbul ignore next */
      (cov_ineumuc8z().b[8][0]++, this.model.preferences[observation]) ||
      /* istanbul ignore next */
      (cov_ineumuc8z().b[8][1]++, 0));
      const cost =
      /* istanbul ignore next */
      (cov_ineumuc8z().s[36]++, -preference); // Convert reward to cost
      // Add uncertainty term
      const uncertaintyPenalty =
      /* istanbul ignore next */
      (cov_ineumuc8z().s[37]++, beliefs.uncertainty * 2.0);
      // Free energy = -log likelihood + complexity + cost + uncertainty
      const freeEnergy =
      /* istanbul ignore next */
      (cov_ineumuc8z().s[38]++, -accuracy + complexity + cost + uncertaintyPenalty);
      // Ensure free energy is positive by adding a constant if needed
      /* istanbul ignore next */
      cov_ineumuc8z().s[39]++;
      return Math.max(0.01, freeEnergy);
    }
  });
  /* istanbul ignore next */
  cov_ineumuc8z().s[40]++;
  return engine;
}
function updateBeliefs(engine, observation) {
  /* istanbul ignore next */
  cov_ineumuc8z().f[18]++;
  const currentBeliefs =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[41]++, engine.getCurrentBeliefs());
  const updatedBeliefs =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[42]++, {
    states: {},
    uncertainty: currentBeliefs.uncertainty
  });
  // Standard Bayesian belief update
  let totalPosterior =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[43]++, 0);
  /* istanbul ignore next */
  cov_ineumuc8z().s[44]++;
  engine.model.states.forEach(state => {
    /* istanbul ignore next */
    cov_ineumuc8z().f[19]++;
    const prior =
    /* istanbul ignore next */
    (cov_ineumuc8z().s[45]++, currentBeliefs.states[state]);
    const likelihood =
    /* istanbul ignore next */
    (cov_ineumuc8z().s[46]++,
    /* istanbul ignore next */
    (cov_ineumuc8z().b[9][0]++, engine.model.observationModel[state]?.[observation.value]) ||
    /* istanbul ignore next */
    (cov_ineumuc8z().b[9][1]++, EPSILON));
    const posterior =
    /* istanbul ignore next */
    (cov_ineumuc8z().s[47]++, prior * likelihood);
    /* istanbul ignore next */
    cov_ineumuc8z().s[48]++;
    updatedBeliefs.states[state] = posterior;
    /* istanbul ignore next */
    cov_ineumuc8z().s[49]++;
    totalPosterior += posterior;
  });
  // Normalize to get standard Bayesian posterior
  /* istanbul ignore next */
  cov_ineumuc8z().s[50]++;
  Object.keys(updatedBeliefs.states).forEach(state => {
    /* istanbul ignore next */
    cov_ineumuc8z().f[20]++;
    cov_ineumuc8z().s[51]++;
    updatedBeliefs.states[state] /= totalPosterior;
  });
  // Apply confidence weighting by interpolating between prior and posterior
  /* istanbul ignore next */
  cov_ineumuc8z().s[52]++;
  Object.keys(updatedBeliefs.states).forEach(state => {
    /* istanbul ignore next */
    cov_ineumuc8z().f[21]++;
    const prior =
    /* istanbul ignore next */
    (cov_ineumuc8z().s[53]++, currentBeliefs.states[state]);
    const posterior =
    /* istanbul ignore next */
    (cov_ineumuc8z().s[54]++, updatedBeliefs.states[state]);
    // High confidence = use more of posterior, low confidence = use more of prior
    /* istanbul ignore next */
    cov_ineumuc8z().s[55]++;
    updatedBeliefs.states[state] = observation.confidence * posterior + (1 - observation.confidence) * prior;
  });
  // Update uncertainty based on observation confidence and belief entropy
  const entropy =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[56]++, Object.values(updatedBeliefs.states).reduce((h, p) => {
    /* istanbul ignore next */
    cov_ineumuc8z().f[22]++;
    cov_ineumuc8z().s[57]++;
    return p > 0 ?
    /* istanbul ignore next */
    (cov_ineumuc8z().b[10][0]++, h - p * Math.log(p + EPSILON)) :
    /* istanbul ignore next */
    (cov_ineumuc8z().b[10][1]++, h);
  }, 0));
  /* istanbul ignore next */
  cov_ineumuc8z().s[58]++;
  updatedBeliefs.uncertainty = (1 - observation.confidence) * 0.3 + entropy * 0.7;
  // Don't modify engine state, just return the updated beliefs
  /* istanbul ignore next */
  cov_ineumuc8z().s[59]++;
  return updatedBeliefs;
}
function selectAction(engine, beliefs) {
  /* istanbul ignore next */
  cov_ineumuc8z().f[23]++;
  let bestAction =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[60]++, "");
  let minExpectedFE =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[61]++, Infinity);
  const actionScores =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[62]++, {});
  // Check action constraints
  const actionCounts =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[63]++, {});
  /* istanbul ignore next */
  cov_ineumuc8z().s[64]++;
  engine.actionHistory.forEach(action => {
    /* istanbul ignore next */
    cov_ineumuc8z().f[24]++;
    cov_ineumuc8z().s[65]++;
    actionCounts[action] = (
    /* istanbul ignore next */
    (cov_ineumuc8z().b[11][0]++, actionCounts[action]) ||
    /* istanbul ignore next */
    (cov_ineumuc8z().b[11][1]++, 0)) + 1;
  });
  /* istanbul ignore next */
  cov_ineumuc8z().s[66]++;
  engine.model.actions.forEach(action => {
    /* istanbul ignore next */
    cov_ineumuc8z().f[25]++;
    cov_ineumuc8z().s[67]++;
    // Check constraints
    if (engine.actionConstraints?.[action]) {
      /* istanbul ignore next */
      cov_ineumuc8z().b[12][0]++;
      const frequency =
      /* istanbul ignore next */
      (cov_ineumuc8z().s[68]++, (
      /* istanbul ignore next */
      (cov_ineumuc8z().b[13][0]++, actionCounts[action]) ||
      /* istanbul ignore next */
      (cov_ineumuc8z().b[13][1]++, 0)) / Math.max(engine.actionHistory.length, 1));
      /* istanbul ignore next */
      cov_ineumuc8z().s[69]++;
      if (frequency >= engine.actionConstraints[action].maxFrequency) {
        /* istanbul ignore next */
        cov_ineumuc8z().b[14][0]++;
        cov_ineumuc8z().s[70]++;
        actionScores[action] = Infinity;
        /* istanbul ignore next */
        cov_ineumuc8z().s[71]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_ineumuc8z().b[14][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_ineumuc8z().b[12][1]++;
    }
    // Calculate expected free energy for this action
    let expectedFE =
    /* istanbul ignore next */
    (cov_ineumuc8z().s[72]++, 0);
    // Epistemic value (information gain)
    const epistemic =
    /* istanbul ignore next */
    (cov_ineumuc8z().s[73]++, calculateEpistemic(engine, beliefs, action));
    // Pragmatic value (goal achievement)
    const pragmatic =
    /* istanbul ignore next */
    (cov_ineumuc8z().s[74]++, calculatePragmatic(engine, beliefs, action));
    // Combine with precision weighting
    /* istanbul ignore next */
    cov_ineumuc8z().s[75]++;
    expectedFE = engine.precision * pragmatic - epistemic;
    // Add exploration bonus under high uncertainty
    /* istanbul ignore next */
    cov_ineumuc8z().s[76]++;
    if (
    /* istanbul ignore next */
    (cov_ineumuc8z().b[16][0]++, beliefs.uncertainty > 0.5) &&
    /* istanbul ignore next */
    (cov_ineumuc8z().b[16][1]++, action !== "wait")) {
      /* istanbul ignore next */
      cov_ineumuc8z().b[15][0]++;
      cov_ineumuc8z().s[77]++;
      expectedFE -= beliefs.uncertainty * 0.5;
    } else
    /* istanbul ignore next */
    {
      cov_ineumuc8z().b[15][1]++;
    }
    // Add action variety bonus to prevent getting stuck
    const recentActions =
    /* istanbul ignore next */
    (cov_ineumuc8z().s[78]++, engine.actionHistory.slice(-5));
    const actionFrequency =
    /* istanbul ignore next */
    (cov_ineumuc8z().s[79]++, recentActions.filter(a => {
      /* istanbul ignore next */
      cov_ineumuc8z().f[26]++;
      cov_ineumuc8z().s[80]++;
      return a === action;
    }).length / Math.max(recentActions.length, 1));
    const varietyPenalty =
    /* istanbul ignore next */
    (cov_ineumuc8z().s[81]++, actionFrequency * 2.0); // Penalize repetitive actions
    /* istanbul ignore next */
    cov_ineumuc8z().s[82]++;
    expectedFE += varietyPenalty;
    /* istanbul ignore next */
    cov_ineumuc8z().s[83]++;
    actionScores[action] = expectedFE;
    /* istanbul ignore next */
    cov_ineumuc8z().s[84]++;
    if (expectedFE < minExpectedFE) {
      /* istanbul ignore next */
      cov_ineumuc8z().b[17][0]++;
      cov_ineumuc8z().s[85]++;
      minExpectedFE = expectedFE;
      /* istanbul ignore next */
      cov_ineumuc8z().s[86]++;
      bestAction = action;
    } else
    /* istanbul ignore next */
    {
      cov_ineumuc8z().b[17][1]++;
    }
  });
  // Calculate action confidence based on score differences
  const scores =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[87]++, Object.values(actionScores).filter(s => {
    /* istanbul ignore next */
    cov_ineumuc8z().f[27]++;
    cov_ineumuc8z().s[88]++;
    return s !== Infinity;
  }));
  const avgScore =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[89]++, scores.reduce((a, b) => {
    /* istanbul ignore next */
    cov_ineumuc8z().f[28]++;
    cov_ineumuc8z().s[90]++;
    return a + b;
  }, 0) / scores.length);
  const confidence =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[91]++, Math.exp(-Math.abs(minExpectedFE - avgScore)));
  /* istanbul ignore next */
  cov_ineumuc8z().s[92]++;
  engine.actionHistory.push(bestAction);
  /* istanbul ignore next */
  cov_ineumuc8z().s[93]++;
  return {
    type: bestAction,
    confidence: Math.min(Math.max(confidence, 0.1), 1.0)
  };
}
async function performInference(engine, observation) {
  /* istanbul ignore next */
  cov_ineumuc8z().f[29]++;
  // Update beliefs based on observation
  const updatedBeliefs =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[94]++, updateBeliefs(engine, observation));
  // Update the engine's beliefs for persistence across inferences
  /* istanbul ignore next */
  cov_ineumuc8z().s[95]++;
  engine.setBeliefs(updatedBeliefs);
  // Calculate current free energy
  const freeEnergy =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[96]++, engine.calculateFreeEnergy(updatedBeliefs, observation.value));
  // Select action that minimizes expected free energy
  const selectedAction =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[97]++, selectAction(engine, updatedBeliefs));
  // Overall confidence based on belief certainty and action confidence
  const beliefCertainty =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[98]++, Math.max(...Object.values(updatedBeliefs.states)));
  const overallConfidence =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[99]++, (beliefCertainty + selectedAction.confidence) / 2);
  /* istanbul ignore next */
  cov_ineumuc8z().s[100]++;
  return {
    beliefs: updatedBeliefs,
    selectedAction,
    freeEnergy,
    confidence: overallConfidence
  };
}
function calculateExpectedFreeEnergy(engine, policy) {
  /* istanbul ignore next */
  cov_ineumuc8z().f[30]++;
  let totalEFE =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[101]++, 0);
  let totalEpistemic =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[102]++, 0);
  let totalPragmatic =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[103]++, 0);
  // Start with current beliefs
  let beliefs =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[104]++, engine.getCurrentBeliefs());
  /* istanbul ignore next */
  cov_ineumuc8z().s[105]++;
  policy.forEach(step => {
    /* istanbul ignore next */
    cov_ineumuc8z().f[31]++;
    const epistemic =
    /* istanbul ignore next */
    (cov_ineumuc8z().s[106]++, calculateEpistemic(engine, beliefs, step.action));
    const pragmatic =
    /* istanbul ignore next */
    (cov_ineumuc8z().s[107]++, calculatePragmatic(engine, beliefs, step.action));
    // Ensure finite values
    const finiteEpistemic =
    /* istanbul ignore next */
    (cov_ineumuc8z().s[108]++, Number.isFinite(epistemic) ?
    /* istanbul ignore next */
    (cov_ineumuc8z().b[18][0]++, epistemic) :
    /* istanbul ignore next */
    (cov_ineumuc8z().b[18][1]++, 0));
    const finitePragmatic =
    /* istanbul ignore next */
    (cov_ineumuc8z().s[109]++, Number.isFinite(pragmatic) ?
    /* istanbul ignore next */
    (cov_ineumuc8z().b[19][0]++, pragmatic) :
    /* istanbul ignore next */
    (cov_ineumuc8z().b[19][1]++, 0));
    /* istanbul ignore next */
    cov_ineumuc8z().s[110]++;
    totalEpistemic += finiteEpistemic * Math.pow(0.9, step.timestep); // Discount future
    /* istanbul ignore next */
    cov_ineumuc8z().s[111]++;
    totalPragmatic += finitePragmatic * Math.pow(0.9, step.timestep);
    // Predict belief evolution
    /* istanbul ignore next */
    cov_ineumuc8z().s[112]++;
    beliefs = predictBeliefEvolution(engine, beliefs, step.action);
  });
  /* istanbul ignore next */
  cov_ineumuc8z().s[113]++;
  totalEFE = engine.precision * totalPragmatic - totalEpistemic;
  // Ensure all values are finite
  /* istanbul ignore next */
  cov_ineumuc8z().s[114]++;
  return {
    total: Number.isFinite(totalEFE) ?
    /* istanbul ignore next */
    (cov_ineumuc8z().b[20][0]++, totalEFE) :
    /* istanbul ignore next */
    (cov_ineumuc8z().b[20][1]++, 0),
    epistemic: Number.isFinite(totalEpistemic) ?
    /* istanbul ignore next */
    (cov_ineumuc8z().b[21][0]++, totalEpistemic) :
    /* istanbul ignore next */
    (cov_ineumuc8z().b[21][1]++, 0),
    pragmatic: Number.isFinite(totalPragmatic) ?
    /* istanbul ignore next */
    (cov_ineumuc8z().b[22][0]++, totalPragmatic) :
    /* istanbul ignore next */
    (cov_ineumuc8z().b[22][1]++, 0)
  };
}
function calculateEpistemic(engine, beliefs, action) {
  /* istanbul ignore next */
  cov_ineumuc8z().f[32]++;
  // Information gain: reduction in uncertainty about states
  let informationGain =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[115]++, 0);
  // Current entropy
  const currentEntropy =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[116]++, Object.values(beliefs.states).reduce((h, p) => {
    /* istanbul ignore next */
    cov_ineumuc8z().f[33]++;
    cov_ineumuc8z().s[117]++;
    return p > 0 ?
    /* istanbul ignore next */
    (cov_ineumuc8z().b[23][0]++, h - p * Math.log(p + EPSILON)) :
    /* istanbul ignore next */
    (cov_ineumuc8z().b[23][1]++, h);
  }, 0));
  // Expected entropy after action
  let expectedEntropy =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[118]++, 0);
  const predictedBeliefs =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[119]++, predictBeliefEvolution(engine, beliefs, action));
  /* istanbul ignore next */
  cov_ineumuc8z().s[120]++;
  expectedEntropy = Object.values(predictedBeliefs.states).reduce((h, p) => {
    /* istanbul ignore next */
    cov_ineumuc8z().f[34]++;
    cov_ineumuc8z().s[121]++;
    return p > 0 ?
    /* istanbul ignore next */
    (cov_ineumuc8z().b[24][0]++, h - p * Math.log(p + EPSILON)) :
    /* istanbul ignore next */
    (cov_ineumuc8z().b[24][1]++, h);
  }, 0);
  /* istanbul ignore next */
  cov_ineumuc8z().s[122]++;
  informationGain = currentEntropy - expectedEntropy;
  // Add exploration bonus for uncertain states
  const explorationBonus =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[123]++, beliefs.uncertainty * 0.3);
  const result =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[124]++, Math.max(0, informationGain + explorationBonus));
  // Ensure finite result
  /* istanbul ignore next */
  cov_ineumuc8z().s[125]++;
  return Number.isFinite(result) ?
  /* istanbul ignore next */
  (cov_ineumuc8z().b[25][0]++, result) :
  /* istanbul ignore next */
  (cov_ineumuc8z().b[25][1]++, 0);
}
function calculatePragmatic(engine, beliefs, action) {
  /* istanbul ignore next */
  cov_ineumuc8z().f[35]++;
  // Expected preference satisfaction
  let expectedPreference =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[126]++, 0);
  // Predict outcomes for this action
  const predictions =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[127]++, predictSensoryOutcomes(engine, beliefs, action));
  /* istanbul ignore next */
  cov_ineumuc8z().s[128]++;
  Object.entries(predictions).forEach(([outcome, prob]) => {
    /* istanbul ignore next */
    cov_ineumuc8z().f[36]++;
    const preference =
    /* istanbul ignore next */
    (cov_ineumuc8z().s[129]++,
    /* istanbul ignore next */
    (cov_ineumuc8z().b[26][0]++, engine.model.preferences[outcome]) ||
    /* istanbul ignore next */
    (cov_ineumuc8z().b[26][1]++, 0));
    const contribution =
    /* istanbul ignore next */
    (cov_ineumuc8z().s[130]++, prob * preference);
    // Only add finite contributions
    /* istanbul ignore next */
    cov_ineumuc8z().s[131]++;
    if (Number.isFinite(contribution)) {
      /* istanbul ignore next */
      cov_ineumuc8z().b[27][0]++;
      cov_ineumuc8z().s[132]++;
      expectedPreference += contribution;
    } else
    /* istanbul ignore next */
    {
      cov_ineumuc8z().b[27][1]++;
    }
  });
  // Ensure finite result
  /* istanbul ignore next */
  cov_ineumuc8z().s[133]++;
  return Number.isFinite(expectedPreference) ?
  /* istanbul ignore next */
  (cov_ineumuc8z().b[28][0]++, expectedPreference) :
  /* istanbul ignore next */
  (cov_ineumuc8z().b[28][1]++, 0);
}
async function minimizeVariationalFreeEnergy(engine, initialBeliefs, observation, options) {
  /* istanbul ignore next */
  cov_ineumuc8z().f[37]++;
  const maxIter =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[134]++,
  /* istanbul ignore next */
  (cov_ineumuc8z().b[29][0]++, options?.maxIterations) ||
  /* istanbul ignore next */
  (cov_ineumuc8z().b[29][1]++, 100));
  const tolerance =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[135]++,
  /* istanbul ignore next */
  (cov_ineumuc8z().b[30][0]++, options?.tolerance) ||
  /* istanbul ignore next */
  (cov_ineumuc8z().b[30][1]++, 0.001));
  let beliefs =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[136]++, {
    ...initialBeliefs
  });
  let prevFE =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[137]++, engine.calculateFreeEnergy(beliefs, observation));
  let converged =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[138]++, false);
  let iterations =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[139]++, 0);
  /* istanbul ignore next */
  cov_ineumuc8z().s[140]++;
  while (
  /* istanbul ignore next */
  (cov_ineumuc8z().b[31][0]++, iterations < maxIter) &&
  /* istanbul ignore next */
  (cov_ineumuc8z().b[31][1]++, !converged)) {
    // Gradient descent on beliefs
    const gradient =
    /* istanbul ignore next */
    (cov_ineumuc8z().s[141]++, {});
    const delta =
    /* istanbul ignore next */
    (cov_ineumuc8z().s[142]++, 0.001);
    /* istanbul ignore next */
    cov_ineumuc8z().s[143]++;
    engine.model.states.forEach(state => {
      /* istanbul ignore next */
      cov_ineumuc8z().f[38]++;
      // Finite difference approximation
      const beliefsCopy =
      /* istanbul ignore next */
      (cov_ineumuc8z().s[144]++, {
        ...beliefs
      });
      /* istanbul ignore next */
      cov_ineumuc8z().s[145]++;
      beliefsCopy.states[state] = Math.min(beliefs.states[state] + delta, 1);
      // Renormalize
      const sum =
      /* istanbul ignore next */
      (cov_ineumuc8z().s[146]++, Object.values(beliefsCopy.states).reduce((s, p) => {
        /* istanbul ignore next */
        cov_ineumuc8z().f[39]++;
        cov_ineumuc8z().s[147]++;
        return s + p;
      }, 0));
      /* istanbul ignore next */
      cov_ineumuc8z().s[148]++;
      Object.keys(beliefsCopy.states).forEach(s => {
        /* istanbul ignore next */
        cov_ineumuc8z().f[40]++;
        cov_ineumuc8z().s[149]++;
        beliefsCopy.states[s] /= sum;
      });
      const fePlus =
      /* istanbul ignore next */
      (cov_ineumuc8z().s[150]++, engine.calculateFreeEnergy(beliefsCopy, observation));
      /* istanbul ignore next */
      cov_ineumuc8z().s[151]++;
      gradient[state] = (fePlus - prevFE) / delta;
    });
    // Update beliefs
    let changed =
    /* istanbul ignore next */
    (cov_ineumuc8z().s[152]++, false);
    /* istanbul ignore next */
    cov_ineumuc8z().s[153]++;
    engine.model.states.forEach(state => {
      /* istanbul ignore next */
      cov_ineumuc8z().f[41]++;
      const update =
      /* istanbul ignore next */
      (cov_ineumuc8z().s[154]++, -gradient[state] * engine.learningRate);
      const newBelief =
      /* istanbul ignore next */
      (cov_ineumuc8z().s[155]++, Math.max(0, Math.min(1, beliefs.states[state] + update)));
      /* istanbul ignore next */
      cov_ineumuc8z().s[156]++;
      if (Math.abs(newBelief - beliefs.states[state]) > tolerance) {
        /* istanbul ignore next */
        cov_ineumuc8z().b[32][0]++;
        cov_ineumuc8z().s[157]++;
        changed = true;
      } else
      /* istanbul ignore next */
      {
        cov_ineumuc8z().b[32][1]++;
      }
      cov_ineumuc8z().s[158]++;
      beliefs.states[state] = newBelief;
    });
    // Renormalize
    const sum =
    /* istanbul ignore next */
    (cov_ineumuc8z().s[159]++, Object.values(beliefs.states).reduce((s, p) => {
      /* istanbul ignore next */
      cov_ineumuc8z().f[42]++;
      cov_ineumuc8z().s[160]++;
      return s + p;
    }, 0));
    /* istanbul ignore next */
    cov_ineumuc8z().s[161]++;
    Object.keys(beliefs.states).forEach(state => {
      /* istanbul ignore next */
      cov_ineumuc8z().f[43]++;
      cov_ineumuc8z().s[162]++;
      beliefs.states[state] /= sum;
    });
    // Check convergence
    const currentFE =
    /* istanbul ignore next */
    (cov_ineumuc8z().s[163]++, engine.calculateFreeEnergy(beliefs, observation));
    /* istanbul ignore next */
    cov_ineumuc8z().s[164]++;
    if (
    /* istanbul ignore next */
    (cov_ineumuc8z().b[34][0]++, !changed) ||
    /* istanbul ignore next */
    (cov_ineumuc8z().b[34][1]++, Math.abs(currentFE - prevFE) < tolerance)) {
      /* istanbul ignore next */
      cov_ineumuc8z().b[33][0]++;
      cov_ineumuc8z().s[165]++;
      converged = true;
    } else
    /* istanbul ignore next */
    {
      cov_ineumuc8z().b[33][1]++;
    }
    cov_ineumuc8z().s[166]++;
    prevFE = currentFE;
    /* istanbul ignore next */
    cov_ineumuc8z().s[167]++;
    iterations++;
  }
  /* istanbul ignore next */
  cov_ineumuc8z().s[168]++;
  return {
    ...beliefs,
    converged,
    iterations
  };
}
function predictSensoryOutcomes(engine, beliefs, action) {
  /* istanbul ignore next */
  cov_ineumuc8z().f[44]++;
  const predictions =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[169]++, {});
  // Initialize predictions
  /* istanbul ignore next */
  cov_ineumuc8z().s[170]++;
  engine.model.observations.forEach(obs => {
    /* istanbul ignore next */
    cov_ineumuc8z().f[45]++;
    cov_ineumuc8z().s[171]++;
    predictions[obs] = 0;
  });
  // For each current state
  /* istanbul ignore next */
  cov_ineumuc8z().s[172]++;
  Object.entries(beliefs.states).forEach(([currentState, stateProb]) => {
    /* istanbul ignore next */
    cov_ineumuc8z().f[46]++;
    // Get transition probabilities for this action
    const transitions =
    /* istanbul ignore next */
    (cov_ineumuc8z().s[173]++,
    /* istanbul ignore next */
    (cov_ineumuc8z().b[35][0]++, engine.model.transitionModel[currentState]?.[action]) ||
    /* istanbul ignore next */
    (cov_ineumuc8z().b[35][1]++, {}));
    // For each possible next state
    /* istanbul ignore next */
    cov_ineumuc8z().s[174]++;
    Object.entries(transitions).forEach(([nextState, transProb]) => {
      /* istanbul ignore next */
      cov_ineumuc8z().f[47]++;
      // Get observation probabilities for next state
      const observations =
      /* istanbul ignore next */
      (cov_ineumuc8z().s[175]++,
      /* istanbul ignore next */
      (cov_ineumuc8z().b[36][0]++, engine.model.observationModel[nextState]) ||
      /* istanbul ignore next */
      (cov_ineumuc8z().b[36][1]++, {}));
      // Accumulate prediction
      /* istanbul ignore next */
      cov_ineumuc8z().s[176]++;
      Object.entries(observations).forEach(([obs, obsProb]) => {
        /* istanbul ignore next */
        cov_ineumuc8z().f[48]++;
        cov_ineumuc8z().s[177]++;
        predictions[obs] += stateProb * transProb * obsProb;
      });
    });
  });
  /* istanbul ignore next */
  cov_ineumuc8z().s[178]++;
  return predictions;
}
function evaluateActionPolicy(engine, policy) {
  /* istanbul ignore next */
  cov_ineumuc8z().f[49]++;
  let expectedReturn =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[179]++, 0);
  let totalUncertainty =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[180]++, 0);
  let feasibility =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[181]++, 1.0);
  let beliefs =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[182]++, engine.getCurrentBeliefs());
  /* istanbul ignore next */
  cov_ineumuc8z().s[183]++;
  policy.forEach((step, t) => {
    /* istanbul ignore next */
    cov_ineumuc8z().f[50]++;
    // Expected immediate reward
    const predictions =
    /* istanbul ignore next */
    (cov_ineumuc8z().s[184]++, predictSensoryOutcomes(engine, beliefs, step.action));
    const immediateReturn =
    /* istanbul ignore next */
    (cov_ineumuc8z().s[185]++, Object.entries(predictions).reduce((sum, [outcome, prob]) => {
      /* istanbul ignore next */
      cov_ineumuc8z().f[51]++;
      const preference =
      /* istanbul ignore next */
      (cov_ineumuc8z().s[186]++,
      /* istanbul ignore next */
      (cov_ineumuc8z().b[37][0]++, engine.model.preferences[outcome]) ||
      /* istanbul ignore next */
      (cov_ineumuc8z().b[37][1]++, 0));
      /* istanbul ignore next */
      cov_ineumuc8z().s[187]++;
      return sum - prob * preference; // Negative because lower is better
    }, 0));
    /* istanbul ignore next */
    cov_ineumuc8z().s[188]++;
    expectedReturn += immediateReturn * Math.pow(0.9, t);
    // Accumulate uncertainty
    /* istanbul ignore next */
    cov_ineumuc8z().s[189]++;
    totalUncertainty += beliefs.uncertainty * Math.pow(0.9, t);
    // Check action feasibility
    /* istanbul ignore next */
    cov_ineumuc8z().s[190]++;
    if (!engine.model.actions.includes(step.action)) {
      /* istanbul ignore next */
      cov_ineumuc8z().b[38][0]++;
      cov_ineumuc8z().s[191]++;
      feasibility *= 0.1;
    } else
    /* istanbul ignore next */
    {
      cov_ineumuc8z().b[38][1]++;
    }
    // Evolve beliefs
    cov_ineumuc8z().s[192]++;
    beliefs = predictBeliefEvolution(engine, beliefs, step.action);
  });
  /* istanbul ignore next */
  cov_ineumuc8z().s[193]++;
  return {
    expectedReturn,
    uncertainty: totalUncertainty / policy.length,
    feasibility
  };
}
// Helper function to predict belief evolution
function predictBeliefEvolution(engine, beliefs, action) {
  /* istanbul ignore next */
  cov_ineumuc8z().f[52]++;
  const evolved =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[194]++, {
    states: {},
    uncertainty: beliefs.uncertainty
  });
  // Initialize
  /* istanbul ignore next */
  cov_ineumuc8z().s[195]++;
  engine.model.states.forEach(state => {
    /* istanbul ignore next */
    cov_ineumuc8z().f[53]++;
    cov_ineumuc8z().s[196]++;
    evolved.states[state] = 0;
  });
  // Predict state evolution
  /* istanbul ignore next */
  cov_ineumuc8z().s[197]++;
  Object.entries(beliefs.states).forEach(([currentState, prob]) => {
    /* istanbul ignore next */
    cov_ineumuc8z().f[54]++;
    const transitions =
    /* istanbul ignore next */
    (cov_ineumuc8z().s[198]++,
    /* istanbul ignore next */
    (cov_ineumuc8z().b[39][0]++, engine.model.transitionModel[currentState]?.[action]) ||
    /* istanbul ignore next */
    (cov_ineumuc8z().b[39][1]++, {}));
    /* istanbul ignore next */
    cov_ineumuc8z().s[199]++;
    Object.entries(transitions).forEach(([nextState, transProb]) => {
      /* istanbul ignore next */
      cov_ineumuc8z().f[55]++;
      cov_ineumuc8z().s[200]++;
      evolved.states[nextState] += prob * transProb;
    });
  });
  // Calculate uncertainty based on belief entropy and action effects
  const entropy =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[201]++, Object.values(evolved.states).reduce((h, p) => {
    /* istanbul ignore next */
    cov_ineumuc8z().f[56]++;
    cov_ineumuc8z().s[202]++;
    return p > 0 ?
    /* istanbul ignore next */
    (cov_ineumuc8z().b[40][0]++, h - p * Math.log(p + EPSILON)) :
    /* istanbul ignore next */
    (cov_ineumuc8z().b[40][1]++, h);
  }, 0));
  // Different actions affect uncertainty differently
  let actionUncertaintyEffect =
  /* istanbul ignore next */
  (cov_ineumuc8z().s[203]++, 1.0);
  /* istanbul ignore next */
  cov_ineumuc8z().s[204]++;
  switch (action) {
    case "wait":
      /* istanbul ignore next */
      cov_ineumuc8z().b[41][0]++;
      cov_ineumuc8z().s[205]++;
      actionUncertaintyEffect = 1.2; // Waiting increases uncertainty
      /* istanbul ignore next */
      cov_ineumuc8z().s[206]++;
      break;
    case "move_forward":
      /* istanbul ignore next */
      cov_ineumuc8z().b[41][1]++;
      cov_ineumuc8z().s[207]++;
      actionUncertaintyEffect = 0.9; // Moving reduces uncertainty through exploration
      /* istanbul ignore next */
      cov_ineumuc8z().s[208]++;
      break;
    case "turn":
      /* istanbul ignore next */
      cov_ineumuc8z().b[41][2]++;
      cov_ineumuc8z().s[209]++;
      actionUncertaintyEffect = 0.8; // Turning provides more information
      /* istanbul ignore next */
      cov_ineumuc8z().s[210]++;
      break;
    default:
      /* istanbul ignore next */
      cov_ineumuc8z().b[41][3]++;
      cov_ineumuc8z().s[211]++;
      actionUncertaintyEffect = 1.1;
  }
  // Update uncertainty based on entropy and action effects
  /* istanbul ignore next */
  cov_ineumuc8z().s[212]++;
  evolved.uncertainty = Math.min(1.0, Math.max(0.1, beliefs.uncertainty * actionUncertaintyEffect + entropy * 0.1));
  /* istanbul ignore next */
  cov_ineumuc8z().s[213]++;
  return evolved;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
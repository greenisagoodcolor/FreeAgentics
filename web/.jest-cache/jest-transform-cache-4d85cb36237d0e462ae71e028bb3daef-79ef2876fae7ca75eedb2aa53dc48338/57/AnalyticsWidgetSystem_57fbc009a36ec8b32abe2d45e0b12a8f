85fca6f99cc199bfc204c3639b9e8da6
"use strict";

/* istanbul ignore next */
function cov_2oc8s9jktm() {
  var path = "/Users/matthewmoroney/builds/FreeAgentics/web/components/dashboard/AnalyticsWidgetSystem.tsx";
  var hash = "9981252048fd75d9cee803ba2e0865d6ffe2f2f3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewmoroney/builds/FreeAgentics/web/components/dashboard/AnalyticsWidgetSystem.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "3": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 48
        }
      },
      "4": {
        start: {
          line: 12,
          column: 29
        },
        end: {
          line: 12,
          column: 72
        }
      },
      "5": {
        start: {
          line: 13,
          column: 22
        },
        end: {
          line: 13,
          column: 46
        }
      },
      "6": {
        start: {
          line: 14,
          column: 18
        },
        end: {
          line: 14,
          column: 37
        }
      },
      "7": {
        start: {
          line: 15,
          column: 15
        },
        end: {
          line: 15,
          column: 43
        }
      },
      "8": {
        start: {
          line: 16,
          column: 21
        },
        end: {
          line: 16,
          column: 44
        }
      },
      "9": {
        start: {
          line: 17,
          column: 16
        },
        end: {
          line: 17,
          column: 39
        }
      },
      "10": {
        start: {
          line: 18,
          column: 14
        },
        end: {
          line: 18,
          column: 35
        }
      },
      "11": {
        start: {
          line: 19,
          column: 15
        },
        end: {
          line: 19,
          column: 37
        }
      },
      "12": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 51
        }
      },
      "13": {
        start: {
          line: 21,
          column: 39
        },
        end: {
          line: 21,
          column: 51
        }
      },
      "14": {
        start: {
          line: 22,
          column: 28
        },
        end: {
          line: 22,
          column: 41
        }
      },
      "15": {
        start: {
          line: 23,
          column: 27
        },
        end: {
          line: 23,
          column: 40
        }
      },
      "16": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 26,
          column: 20
        }
      },
      "17": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 66
        }
      },
      "18": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 31,
          column: 5
        }
      },
      "19": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 19
        }
      },
      "20": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "21": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 35,
          column: 10
        }
      },
      "22": {
        start: {
          line: 37,
          column: 16
        },
        end: {
          line: 37,
          column: 53
        }
      },
      "23": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "24": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 30
        }
      },
      "25": {
        start: {
          line: 41,
          column: 17
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "26": {
        start: {
          line: 44,
          column: 32
        },
        end: {
          line: 44,
          column: 88
        }
      },
      "27": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "28": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "29": {
        start: {
          line: 47,
          column: 23
        },
        end: {
          line: 47,
          column: 95
        }
      },
      "30": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 52,
          column: 13
        }
      },
      "31": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 49,
          column: 57
        }
      },
      "32": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 51,
          column: 39
        }
      },
      "33": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 25
        }
      },
      "34": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "35": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 31
        }
      },
      "36": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 18
        }
      },
      "37": {
        start: {
          line: 61,
          column: 30
        },
        end: {
          line: 610,
          column: 1
        }
      },
      "38": {
        start: {
          line: 62,
          column: 34
        },
        end: {
          line: 123,
          column: 6
        }
      },
      "39": {
        start: {
          line: 124,
          column: 48
        },
        end: {
          line: 124,
          column: 74
        }
      },
      "40": {
        start: {
          line: 125,
          column: 52
        },
        end: {
          line: 125,
          column: 84
        }
      },
      "41": {
        start: {
          line: 127,
          column: 19
        },
        end: {
          line: 127,
          column: 75
        }
      },
      "42": {
        start: {
          line: 127,
          column: 55
        },
        end: {
          line: 127,
          column: 74
        }
      },
      "43": {
        start: {
          line: 128,
          column: 26
        },
        end: {
          line: 128,
          column: 96
        }
      },
      "44": {
        start: {
          line: 128,
          column: 62
        },
        end: {
          line: 128,
          column: 95
        }
      },
      "45": {
        start: {
          line: 129,
          column: 27
        },
        end: {
          line: 129,
          column: 85
        }
      },
      "46": {
        start: {
          line: 129,
          column: 63
        },
        end: {
          line: 129,
          column: 84
        }
      },
      "47": {
        start: {
          line: 130,
          column: 22
        },
        end: {
          line: 130,
          column: 74
        }
      },
      "48": {
        start: {
          line: 130,
          column: 58
        },
        end: {
          line: 130,
          column: 73
        }
      },
      "49": {
        start: {
          line: 132,
          column: 4
        },
        end: {
          line: 137,
          column: 11
        }
      },
      "50": {
        start: {
          line: 133,
          column: 25
        },
        end: {
          line: 135,
          column: 16
        }
      },
      "51": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 134,
          column: 44
        }
      },
      "52": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 136,
          column: 43
        }
      },
      "53": {
        start: {
          line: 136,
          column: 19
        },
        end: {
          line: 136,
          column: 42
        }
      },
      "54": {
        start: {
          line: 139,
          column: 29
        },
        end: {
          line: 203,
          column: 5
        }
      },
      "55": {
        start: {
          line: 140,
          column: 28
        },
        end: {
          line: 140,
          column: 54
        }
      },
      "56": {
        start: {
          line: 141,
          column: 29
        },
        end: {
          line: 141,
          column: 92
        }
      },
      "57": {
        start: {
          line: 141,
          column: 63
        },
        end: {
          line: 141,
          column: 84
        }
      },
      "58": {
        start: {
          line: 142,
          column: 30
        },
        end: {
          line: 142,
          column: 109
        }
      },
      "59": {
        start: {
          line: 142,
          column: 79
        },
        end: {
          line: 142,
          column: 105
        }
      },
      "60": {
        start: {
          line: 143,
          column: 31
        },
        end: {
          line: 143,
          column: 71
        }
      },
      "61": {
        start: {
          line: 145,
          column: 20
        },
        end: {
          line: 145,
          column: 30
        }
      },
      "62": {
        start: {
          line: 146,
          column: 29
        },
        end: {
          line: 146,
          column: 40
        }
      },
      "63": {
        start: {
          line: 147,
          column: 31
        },
        end: {
          line: 147,
          column: 134
        }
      },
      "64": {
        start: {
          line: 147,
          column: 76
        },
        end: {
          line: 147,
          column: 89
        }
      },
      "65": {
        start: {
          line: 147,
          column: 105
        },
        end: {
          line: 147,
          column: 133
        }
      },
      "66": {
        start: {
          line: 149,
          column: 28
        },
        end: {
          line: 149,
          column: 92
        }
      },
      "67": {
        start: {
          line: 149,
          column: 76
        },
        end: {
          line: 149,
          column: 91
        }
      },
      "68": {
        start: {
          line: 150,
          column: 30
        },
        end: {
          line: 150,
          column: 116
        }
      },
      "69": {
        start: {
          line: 150,
          column: 82
        },
        end: {
          line: 150,
          column: 87
        }
      },
      "70": {
        start: {
          line: 152,
          column: 26
        },
        end: {
          line: 155,
          column: 14
        }
      },
      "71": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 55
        }
      },
      "72": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 23
        }
      },
      "73": {
        start: {
          line: 156,
          column: 22
        },
        end: {
          line: 156,
          column: 71
        }
      },
      "74": {
        start: {
          line: 156,
          column: 62
        },
        end: {
          line: 156,
          column: 67
        }
      },
      "75": {
        start: {
          line: 157,
          column: 24
        },
        end: {
          line: 157,
          column: 156
        }
      },
      "76": {
        start: {
          line: 157,
          column: 75
        },
        end: {
          line: 157,
          column: 88
        }
      },
      "77": {
        start: {
          line: 157,
          column: 102
        },
        end: {
          line: 157,
          column: 107
        }
      },
      "78": {
        start: {
          line: 157,
          column: 126
        },
        end: {
          line: 157,
          column: 148
        }
      },
      "79": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 202,
          column: 10
        }
      },
      "80": {
        start: {
          line: 204,
          column: 20
        },
        end: {
          line: 204,
          column: 38
        }
      },
      "81": {
        start: {
          line: 206,
          column: 30
        },
        end: {
          line: 250,
          column: 5
        }
      },
      "82": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 249,
          column: 9
        }
      },
      "83": {
        start: {
          line: 209,
          column: 16
        },
        end: {
          line: 212,
          column: 23
        }
      },
      "84": {
        start: {
          line: 210,
          column: 20
        },
        end: {
          line: 210,
          column: 69
        }
      },
      "85": {
        start: {
          line: 211,
          column: 20
        },
        end: {
          line: 211,
          column: 31
        }
      },
      "86": {
        start: {
          line: 214,
          column: 16
        },
        end: {
          line: 217,
          column: 23
        }
      },
      "87": {
        start: {
          line: 215,
          column: 20
        },
        end: {
          line: 215,
          column: 63
        }
      },
      "88": {
        start: {
          line: 216,
          column: 20
        },
        end: {
          line: 216,
          column: 31
        }
      },
      "89": {
        start: {
          line: 219,
          column: 42
        },
        end: {
          line: 223,
          column: 17
        }
      },
      "90": {
        start: {
          line: 224,
          column: 16
        },
        end: {
          line: 228,
          column: 19
        }
      },
      "91": {
        start: {
          line: 225,
          column: 20
        },
        end: {
          line: 227,
          column: 63
        }
      },
      "92": {
        start: {
          line: 225,
          column: 48
        },
        end: {
          line: 225,
          column: 83
        }
      },
      "93": {
        start: {
          line: 226,
          column: 25
        },
        end: {
          line: 227,
          column: 63
        }
      },
      "94": {
        start: {
          line: 226,
          column: 53
        },
        end: {
          line: 226,
          column: 93
        }
      },
      "95": {
        start: {
          line: 227,
          column: 25
        },
        end: {
          line: 227,
          column: 63
        }
      },
      "96": {
        start: {
          line: 229,
          column: 16
        },
        end: {
          line: 229,
          column: 41
        }
      },
      "97": {
        start: {
          line: 232,
          column: 16
        },
        end: {
          line: 238,
          column: 24
        }
      },
      "98": {
        start: {
          line: 234,
          column: 28
        },
        end: {
          line: 238,
          column: 21
        }
      },
      "99": {
        start: {
          line: 241,
          column: 35
        },
        end: {
          line: 241,
          column: 85
        }
      },
      "100": {
        start: {
          line: 241,
          column: 78
        },
        end: {
          line: 241,
          column: 84
        }
      },
      "101": {
        start: {
          line: 242,
          column: 16
        },
        end: {
          line: 246,
          column: 24
        }
      },
      "102": {
        start: {
          line: 242,
          column: 50
        },
        end: {
          line: 246,
          column: 21
        }
      },
      "103": {
        start: {
          line: 248,
          column: 16
        },
        end: {
          line: 248,
          column: 26
        }
      },
      "104": {
        start: {
          line: 252,
          column: 25
        },
        end: {
          line: 299,
          column: 10
        }
      },
      "105": {
        start: {
          line: 252,
          column: 61
        },
        end: {
          line: 299,
          column: 10
        }
      },
      "106": {
        start: {
          line: 300,
          column: 24
        },
        end: {
          line: 478,
          column: 5
        }
      },
      "107": {
        start: {
          line: 301,
          column: 21
        },
        end: {
          line: 301,
          column: 49
        }
      },
      "108": {
        start: {
          line: 302,
          column: 28
        },
        end: {
          line: 438,
          column: 9
        }
      },
      "109": {
        start: {
          line: 303,
          column: 12
        },
        end: {
          line: 437,
          column: 13
        }
      },
      "110": {
        start: {
          line: 307,
          column: 36
        },
        end: {
          line: 317,
          column: 27
        }
      },
      "111": {
        start: {
          line: 307,
          column: 85
        },
        end: {
          line: 317,
          column: 25
        }
      },
      "112": {
        start: {
          line: 318,
          column: 20
        },
        end: {
          line: 341,
          column: 23
        }
      },
      "113": {
        start: {
          line: 330,
          column: 64
        },
        end: {
          line: 330,
          column: 105
        }
      },
      "114": {
        start: {
          line: 334,
          column: 88
        },
        end: {
          line: 336,
          column: 59
        }
      },
      "115": {
        start: {
          line: 343,
          column: 20
        },
        end: {
          line: 386,
          column: 23
        }
      },
      "116": {
        start: {
          line: 388,
          column: 20
        },
        end: {
          line: 431,
          column: 23
        }
      },
      "117": {
        start: {
          line: 433,
          column: 20
        },
        end: {
          line: 436,
          column: 23
        }
      },
      "118": {
        start: {
          line: 439,
          column: 8
        },
        end: {
          line: 477,
          column: 11
        }
      },
      "119": {
        start: {
          line: 455,
          column: 53
        },
        end: {
          line: 455,
          column: 119
        }
      },
      "120": {
        start: {
          line: 479,
          column: 31
        },
        end: {
          line: 490,
          column: 5
        }
      },
      "121": {
        start: {
          line: 480,
          column: 8
        },
        end: {
          line: 489,
          column: 9
        }
      },
      "122": {
        start: {
          line: 482,
          column: 16
        },
        end: {
          line: 482,
          column: 47
        }
      },
      "123": {
        start: {
          line: 484,
          column: 16
        },
        end: {
          line: 484,
          column: 47
        }
      },
      "124": {
        start: {
          line: 486,
          column: 16
        },
        end: {
          line: 486,
          column: 47
        }
      },
      "125": {
        start: {
          line: 488,
          column: 16
        },
        end: {
          line: 488,
          column: 47
        }
      },
      "126": {
        start: {
          line: 491,
          column: 4
        },
        end: {
          line: 609,
          column: 7
        }
      },
      "127": {
        start: {
          line: 525,
          column: 45
        },
        end: {
          line: 525,
          column: 76
        }
      },
      "128": {
        start: {
          line: 537,
          column: 62
        },
        end: {
          line: 557,
          column: 33
        }
      },
      "129": {
        start: {
          line: 570,
          column: 29
        },
        end: {
          line: 570,
          column: 52
        }
      },
      "130": {
        start: {
          line: 582,
          column: 34
        },
        end: {
          line: 582,
          column: 53
        }
      },
      "131": {
        start: {
          line: 589,
          column: 64
        },
        end: {
          line: 589,
          column: 87
        }
      },
      "132": {
        start: {
          line: 593,
          column: 49
        },
        end: {
          line: 593,
          column: 72
        }
      },
      "133": {
        start: {
          line: 602,
          column: 58
        },
        end: {
          line: 602,
          column: 81
        }
      },
      "134": {
        start: {
          line: 611,
          column: 17
        },
        end: {
          line: 611,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 20,
            column: 9
          },
          end: {
            line: 20,
            column: 33
          }
        },
        loc: {
          start: {
            line: 20,
            column: 47
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 24,
            column: 39
          },
          end: {
            line: 24,
            column: 40
          }
        },
        loc: {
          start: {
            line: 24,
            column: 61
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 28,
            column: 9
          },
          end: {
            line: 28,
            column: 34
          }
        },
        loc: {
          start: {
            line: 28,
            column: 53
          },
          end: {
            line: 60,
            column: 1
          }
        },
        line: 28
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 61,
            column: 30
          },
          end: {
            line: 61,
            column: 31
          }
        },
        loc: {
          start: {
            line: 61,
            column: 34
          },
          end: {
            line: 610,
            column: 1
          }
        },
        line: 61
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 127,
            column: 46
          },
          end: {
            line: 127,
            column: 47
          }
        },
        loc: {
          start: {
            line: 127,
            column: 55
          },
          end: {
            line: 127,
            column: 74
          }
        },
        line: 127
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 128,
            column: 53
          },
          end: {
            line: 128,
            column: 54
          }
        },
        loc: {
          start: {
            line: 128,
            column: 62
          },
          end: {
            line: 128,
            column: 95
          }
        },
        line: 128
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 129,
            column: 54
          },
          end: {
            line: 129,
            column: 55
          }
        },
        loc: {
          start: {
            line: 129,
            column: 63
          },
          end: {
            line: 129,
            column: 84
          }
        },
        line: 129
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 130,
            column: 49
          },
          end: {
            line: 130,
            column: 50
          }
        },
        loc: {
          start: {
            line: 130,
            column: 58
          },
          end: {
            line: 130,
            column: 73
          }
        },
        line: 130
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 132,
            column: 26
          },
          end: {
            line: 132,
            column: 27
          }
        },
        loc: {
          start: {
            line: 132,
            column: 30
          },
          end: {
            line: 137,
            column: 5
          }
        },
        line: 132
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 133,
            column: 37
          },
          end: {
            line: 133,
            column: 38
          }
        },
        loc: {
          start: {
            line: 133,
            column: 41
          },
          end: {
            line: 135,
            column: 9
          }
        },
        line: 133
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 136,
            column: 15
          },
          end: {
            line: 136,
            column: 16
          }
        },
        loc: {
          start: {
            line: 136,
            column: 19
          },
          end: {
            line: 136,
            column: 42
          }
        },
        line: 136
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 139,
            column: 29
          },
          end: {
            line: 139,
            column: 30
          }
        },
        loc: {
          start: {
            line: 139,
            column: 33
          },
          end: {
            line: 203,
            column: 5
          }
        },
        line: 139
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 141,
            column: 58
          },
          end: {
            line: 141,
            column: 59
          }
        },
        loc: {
          start: {
            line: 141,
            column: 63
          },
          end: {
            line: 141,
            column: 84
          }
        },
        line: 141
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 142,
            column: 66
          },
          end: {
            line: 142,
            column: 67
          }
        },
        loc: {
          start: {
            line: 142,
            column: 79
          },
          end: {
            line: 142,
            column: 105
          }
        },
        line: 142
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 147,
            column: 68
          },
          end: {
            line: 147,
            column: 69
          }
        },
        loc: {
          start: {
            line: 147,
            column: 76
          },
          end: {
            line: 147,
            column: 89
          }
        },
        line: 147
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 147,
            column: 98
          },
          end: {
            line: 147,
            column: 99
          }
        },
        loc: {
          start: {
            line: 147,
            column: 105
          },
          end: {
            line: 147,
            column: 133
          }
        },
        line: 147
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 149,
            column: 68
          },
          end: {
            line: 149,
            column: 69
          }
        },
        loc: {
          start: {
            line: 149,
            column: 76
          },
          end: {
            line: 149,
            column: 91
          }
        },
        line: 149
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 150,
            column: 74
          },
          end: {
            line: 150,
            column: 75
          }
        },
        loc: {
          start: {
            line: 150,
            column: 82
          },
          end: {
            line: 150,
            column: 87
          }
        },
        line: 150
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 152,
            column: 69
          },
          end: {
            line: 152,
            column: 70
          }
        },
        loc: {
          start: {
            line: 152,
            column: 82
          },
          end: {
            line: 155,
            column: 9
          }
        },
        line: 152
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 156,
            column: 54
          },
          end: {
            line: 156,
            column: 55
          }
        },
        loc: {
          start: {
            line: 156,
            column: 62
          },
          end: {
            line: 156,
            column: 67
          }
        },
        line: 156
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 157,
            column: 66
          },
          end: {
            line: 157,
            column: 67
          }
        },
        loc: {
          start: {
            line: 157,
            column: 75
          },
          end: {
            line: 157,
            column: 88
          }
        },
        line: 157
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 157,
            column: 97
          },
          end: {
            line: 157,
            column: 98
          }
        },
        loc: {
          start: {
            line: 157,
            column: 102
          },
          end: {
            line: 157,
            column: 107
          }
        },
        line: 157
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 157,
            column: 116
          },
          end: {
            line: 157,
            column: 117
          }
        },
        loc: {
          start: {
            line: 157,
            column: 126
          },
          end: {
            line: 157,
            column: 148
          }
        },
        line: 157
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 206,
            column: 30
          },
          end: {
            line: 206,
            column: 31
          }
        },
        loc: {
          start: {
            line: 206,
            column: 42
          },
          end: {
            line: 250,
            column: 5
          }
        },
        line: 206
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 209,
            column: 52
          },
          end: {
            line: 209,
            column: 53
          }
        },
        loc: {
          start: {
            line: 209,
            column: 66
          },
          end: {
            line: 212,
            column: 17
          }
        },
        line: 209
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 214,
            column: 66
          },
          end: {
            line: 214,
            column: 67
          }
        },
        loc: {
          start: {
            line: 214,
            column: 79
          },
          end: {
            line: 217,
            column: 17
          }
        },
        line: 214
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 224,
            column: 60
          },
          end: {
            line: 224,
            column: 61
          }
        },
        loc: {
          start: {
            line: 224,
            column: 68
          },
          end: {
            line: 228,
            column: 17
          }
        },
        line: 224
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 234,
            column: 19
          },
          end: {
            line: 234,
            column: 20
          }
        },
        loc: {
          start: {
            line: 234,
            column: 28
          },
          end: {
            line: 238,
            column: 21
          }
        },
        line: 234
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 241,
            column: 73
          },
          end: {
            line: 241,
            column: 74
          }
        },
        loc: {
          start: {
            line: 241,
            column: 78
          },
          end: {
            line: 241,
            column: 84
          }
        },
        line: 241
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 242,
            column: 38
          },
          end: {
            line: 242,
            column: 39
          }
        },
        loc: {
          start: {
            line: 242,
            column: 50
          },
          end: {
            line: 246,
            column: 21
          }
        },
        line: 242
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 252,
            column: 25
          },
          end: {
            line: 252,
            column: 26
          }
        },
        loc: {
          start: {
            line: 252,
            column: 61
          },
          end: {
            line: 299,
            column: 10
          }
        },
        line: 252
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 300,
            column: 24
          },
          end: {
            line: 300,
            column: 25
          }
        },
        loc: {
          start: {
            line: 300,
            column: 38
          },
          end: {
            line: 478,
            column: 5
          }
        },
        line: 300
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 302,
            column: 28
          },
          end: {
            line: 302,
            column: 29
          }
        },
        loc: {
          start: {
            line: 302,
            column: 32
          },
          end: {
            line: 438,
            column: 9
          }
        },
        line: 302
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 307,
            column: 61
          },
          end: {
            line: 307,
            column: 62
          }
        },
        loc: {
          start: {
            line: 307,
            column: 85
          },
          end: {
            line: 317,
            column: 25
          }
        },
        line: 307
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 330,
            column: 43
          },
          end: {
            line: 330,
            column: 44
          }
        },
        loc: {
          start: {
            line: 330,
            column: 64
          },
          end: {
            line: 330,
            column: 105
          }
        },
        line: 330
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 334,
            column: 58
          },
          end: {
            line: 334,
            column: 59
          }
        },
        loc: {
          start: {
            line: 334,
            column: 88
          },
          end: {
            line: 336,
            column: 59
          }
        },
        line: 334
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 455,
            column: 49
          },
          end: {
            line: 455,
            column: 50
          }
        },
        loc: {
          start: {
            line: 455,
            column: 53
          },
          end: {
            line: 455,
            column: 119
          }
        },
        line: 455
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 479,
            column: 31
          },
          end: {
            line: 479,
            column: 32
          }
        },
        loc: {
          start: {
            line: 479,
            column: 39
          },
          end: {
            line: 490,
            column: 5
          }
        },
        line: 479
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 525,
            column: 41
          },
          end: {
            line: 525,
            column: 42
          }
        },
        loc: {
          start: {
            line: 525,
            column: 45
          },
          end: {
            line: 525,
            column: 76
          }
        },
        line: 525
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 537,
            column: 38
          },
          end: {
            line: 537,
            column: 39
          }
        },
        loc: {
          start: {
            line: 537,
            column: 62
          },
          end: {
            line: 557,
            column: 33
          }
        },
        line: 537
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 570,
            column: 25
          },
          end: {
            line: 570,
            column: 26
          }
        },
        loc: {
          start: {
            line: 570,
            column: 29
          },
          end: {
            line: 570,
            column: 52
          }
        },
        line: 570
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 582,
            column: 29
          },
          end: {
            line: 582,
            column: 30
          }
        },
        loc: {
          start: {
            line: 582,
            column: 34
          },
          end: {
            line: 582,
            column: 53
          }
        },
        line: 582
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 589,
            column: 59
          },
          end: {
            line: 589,
            column: 60
          }
        },
        loc: {
          start: {
            line: 589,
            column: 64
          },
          end: {
            line: 589,
            column: 87
          }
        },
        line: 589
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 593,
            column: 45
          },
          end: {
            line: 593,
            column: 46
          }
        },
        loc: {
          start: {
            line: 593,
            column: 49
          },
          end: {
            line: 593,
            column: 72
          }
        },
        line: 593
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 602,
            column: 53
          },
          end: {
            line: 602,
            column: 54
          }
        },
        loc: {
          start: {
            line: 602,
            column: 58
          },
          end: {
            line: 602,
            column: 81
          }
        },
        line: 602
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 25,
            column: 15
          },
          end: {
            line: 25,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 25,
            column: 29
          },
          end: {
            line: 25,
            column: 45
          }
        }, {
          start: {
            line: 25,
            column: 48
          },
          end: {
            line: 25,
            column: 65
          }
        }],
        line: 25
      },
      "2": {
        loc: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "3": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 20
          }
        }, {
          start: {
            line: 29,
            column: 24
          },
          end: {
            line: 29,
            column: 27
          }
        }, {
          start: {
            line: 29,
            column: 31
          },
          end: {
            line: 29,
            column: 45
          }
        }],
        line: 29
      },
      "4": {
        loc: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "5": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 20
          }
        }, {
          start: {
            line: 32,
            column: 24
          },
          end: {
            line: 32,
            column: 47
          }
        }, {
          start: {
            line: 32,
            column: 51
          },
          end: {
            line: 32,
            column: 76
          }
        }],
        line: 32
      },
      "6": {
        loc: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "7": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 13
          }
        }, {
          start: {
            line: 38,
            column: 17
          },
          end: {
            line: 38,
            column: 31
          }
        }],
        line: 38
      },
      "8": {
        loc: {
          start: {
            line: 44,
            column: 32
          },
          end: {
            line: 44,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 32
          },
          end: {
            line: 44,
            column: 53
          }
        }, {
          start: {
            line: 44,
            column: 57
          },
          end: {
            line: 44,
            column: 88
          }
        }],
        line: 44
      },
      "9": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "10": {
        loc: {
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 46,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 46,
            column: 29
          }
        }, {
          start: {
            line: 46,
            column: 33
          },
          end: {
            line: 46,
            column: 79
          }
        }],
        line: 46
      },
      "11": {
        loc: {
          start: {
            line: 47,
            column: 23
          },
          end: {
            line: 47,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 47,
            column: 47
          },
          end: {
            line: 47,
            column: 88
          }
        }, {
          start: {
            line: 47,
            column: 91
          },
          end: {
            line: 47,
            column: 95
          }
        }],
        line: 47
      },
      "12": {
        loc: {
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 52,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 52,
            column: 13
          }
        }, {
          start: {
            line: 50,
            column: 19
          },
          end: {
            line: 52,
            column: 13
          }
        }],
        line: 48
      },
      "13": {
        loc: {
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 48,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 48,
            column: 20
          }
        }, {
          start: {
            line: 48,
            column: 25
          },
          end: {
            line: 48,
            column: 33
          }
        }, {
          start: {
            line: 48,
            column: 37
          },
          end: {
            line: 48,
            column: 45
          }
        }],
        line: 48
      },
      "14": {
        loc: {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "15": {
        loc: {
          start: {
            line: 150,
            column: 30
          },
          end: {
            line: 150,
            column: 116
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 150,
            column: 55
          },
          end: {
            line: 150,
            column: 112
          }
        }, {
          start: {
            line: 150,
            column: 115
          },
          end: {
            line: 150,
            column: 116
          }
        }],
        line: 150
      },
      "16": {
        loc: {
          start: {
            line: 153,
            column: 30
          },
          end: {
            line: 153,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 153,
            column: 30
          },
          end: {
            line: 153,
            column: 44
          }
        }, {
          start: {
            line: 153,
            column: 48
          },
          end: {
            line: 153,
            column: 49
          }
        }],
        line: 153
      },
      "17": {
        loc: {
          start: {
            line: 157,
            column: 24
          },
          end: {
            line: 157,
            column: 156
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 157,
            column: 36
          },
          end: {
            line: 157,
            column: 152
          }
        }, {
          start: {
            line: 157,
            column: 155
          },
          end: {
            line: 157,
            column: 156
          }
        }],
        line: 157
      },
      "18": {
        loc: {
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 249,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 208,
            column: 12
          },
          end: {
            line: 212,
            column: 23
          }
        }, {
          start: {
            line: 213,
            column: 12
          },
          end: {
            line: 217,
            column: 23
          }
        }, {
          start: {
            line: 218,
            column: 12
          },
          end: {
            line: 229,
            column: 41
          }
        }, {
          start: {
            line: 230,
            column: 12
          },
          end: {
            line: 238,
            column: 24
          }
        }, {
          start: {
            line: 239,
            column: 12
          },
          end: {
            line: 246,
            column: 24
          }
        }, {
          start: {
            line: 247,
            column: 12
          },
          end: {
            line: 248,
            column: 26
          }
        }],
        line: 207
      },
      "19": {
        loc: {
          start: {
            line: 210,
            column: 41
          },
          end: {
            line: 210,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 210,
            column: 41
          },
          end: {
            line: 210,
            column: 58
          }
        }, {
          start: {
            line: 210,
            column: 62
          },
          end: {
            line: 210,
            column: 63
          }
        }],
        line: 210
      },
      "20": {
        loc: {
          start: {
            line: 215,
            column: 38
          },
          end: {
            line: 215,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 215,
            column: 38
          },
          end: {
            line: 215,
            column: 52
          }
        }, {
          start: {
            line: 215,
            column: 56
          },
          end: {
            line: 215,
            column: 57
          }
        }],
        line: 215
      },
      "21": {
        loc: {
          start: {
            line: 225,
            column: 20
          },
          end: {
            line: 227,
            column: 63
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 225,
            column: 20
          },
          end: {
            line: 227,
            column: 63
          }
        }, {
          start: {
            line: 226,
            column: 25
          },
          end: {
            line: 227,
            column: 63
          }
        }],
        line: 225
      },
      "22": {
        loc: {
          start: {
            line: 226,
            column: 25
          },
          end: {
            line: 227,
            column: 63
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 25
          },
          end: {
            line: 227,
            column: 63
          }
        }, {
          start: {
            line: 227,
            column: 25
          },
          end: {
            line: 227,
            column: 63
          }
        }],
        line: 226
      },
      "23": {
        loc: {
          start: {
            line: 281,
            column: 63
          },
          end: {
            line: 281,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 281,
            column: 85
          },
          end: {
            line: 281,
            column: 86
          }
        }, {
          start: {
            line: 281,
            column: 89
          },
          end: {
            line: 281,
            column: 90
          }
        }],
        line: 281
      },
      "24": {
        loc: {
          start: {
            line: 287,
            column: 28
          },
          end: {
            line: 294,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 287,
            column: 28
          },
          end: {
            line: 287,
            column: 40
          }
        }, {
          start: {
            line: 287,
            column: 58
          },
          end: {
            line: 294,
            column: 30
          }
        }],
        line: 287
      },
      "25": {
        loc: {
          start: {
            line: 288,
            column: 59
          },
          end: {
            line: 288,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 288,
            column: 78
          },
          end: {
            line: 288,
            column: 101
          }
        }, {
          start: {
            line: 288,
            column: 104
          },
          end: {
            line: 288,
            column: 125
          }
        }],
        line: 288
      },
      "26": {
        loc: {
          start: {
            line: 290,
            column: 36
          },
          end: {
            line: 290,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 290,
            column: 55
          },
          end: {
            line: 290,
            column: 58
          }
        }, {
          start: {
            line: 290,
            column: 61
          },
          end: {
            line: 290,
            column: 63
          }
        }],
        line: 290
      },
      "27": {
        loc: {
          start: {
            line: 303,
            column: 12
          },
          end: {
            line: 437,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 304,
            column: 16
          },
          end: {
            line: 304,
            column: 37
          }
        }, {
          start: {
            line: 305,
            column: 16
          },
          end: {
            line: 305,
            column: 43
          }
        }, {
          start: {
            line: 306,
            column: 16
          },
          end: {
            line: 341,
            column: 23
          }
        }, {
          start: {
            line: 342,
            column: 16
          },
          end: {
            line: 386,
            column: 23
          }
        }, {
          start: {
            line: 387,
            column: 16
          },
          end: {
            line: 431,
            column: 23
          }
        }, {
          start: {
            line: 432,
            column: 16
          },
          end: {
            line: 436,
            column: 23
          }
        }],
        line: 303
      },
      "28": {
        loc: {
          start: {
            line: 327,
            column: 49
          },
          end: {
            line: 327,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 327,
            column: 75
          },
          end: {
            line: 327,
            column: 77
          }
        }, {
          start: {
            line: 327,
            column: 80
          },
          end: {
            line: 327,
            column: 82
          }
        }],
        line: 327
      },
      "29": {
        loc: {
          start: {
            line: 328,
            column: 49
          },
          end: {
            line: 328,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 328,
            column: 75
          },
          end: {
            line: 328,
            column: 77
          }
        }, {
          start: {
            line: 328,
            column: 80
          },
          end: {
            line: 328,
            column: 82
          }
        }],
        line: 328
      },
      "30": {
        loc: {
          start: {
            line: 455,
            column: 71
          },
          end: {
            line: 455,
            column: 118
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 455,
            column: 102
          },
          end: {
            line: 455,
            column: 106
          }
        }, {
          start: {
            line: 455,
            column: 109
          },
          end: {
            line: 455,
            column: 118
          }
        }],
        line: 455
      },
      "31": {
        loc: {
          start: {
            line: 480,
            column: 8
          },
          end: {
            line: 489,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 481,
            column: 12
          },
          end: {
            line: 482,
            column: 47
          }
        }, {
          start: {
            line: 483,
            column: 12
          },
          end: {
            line: 484,
            column: 47
          }
        }, {
          start: {
            line: 485,
            column: 12
          },
          end: {
            line: 486,
            column: 47
          }
        }, {
          start: {
            line: 487,
            column: 12
          },
          end: {
            line: 488,
            column: 47
          }
        }],
        line: 480
      },
      "32": {
        loc: {
          start: {
            line: 551,
            column: 34
          },
          end: {
            line: 556,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 551,
            column: 75
          },
          end: {
            line: 554,
            column: 26
          }
        }, {
          start: {
            line: 554,
            column: 43
          },
          end: {
            line: 556,
            column: 26
          }
        }],
        line: 551
      },
      "33": {
        loc: {
          start: {
            line: 553,
            column: 36
          },
          end: {
            line: 553,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 553,
            column: 36
          },
          end: {
            line: 553,
            column: 71
          }
        }, {
          start: {
            line: 553,
            column: 75
          },
          end: {
            line: 553,
            column: 99
          }
        }],
        line: 553
      },
      "34": {
        loc: {
          start: {
            line: 559,
            column: 12
          },
          end: {
            line: 607,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 559,
            column: 12
          },
          end: {
            line: 559,
            column: 26
          }
        }, {
          start: {
            line: 559,
            column: 44
          },
          end: {
            line: 607,
            column: 14
          }
        }],
        line: 559
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0, 0, 0, 0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0, 0, 0, 0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0, 0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matthewmoroney/builds/FreeAgentics/web/components/dashboard/AnalyticsWidgetSystem.tsx"],
      sourcesContent: ["import React, { useState, useEffect, useRef } from \"react\";\nimport { motion, Reorder } from \"framer-motion\";\nimport {\n  BarChart,\n  Bar,\n  LineChart,\n  Line,\n  PieChart,\n  Pie,\n  Cell,\n  ResponsiveContainer,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from \"recharts\";\nimport { useAppSelector } from \"@/store/hooks\";\nimport {\n  Activity,\n  Users,\n  Brain,\n  Clock,\n  TrendingUp,\n  Zap,\n  MoreVertical,\n  Maximize2,\n  RotateCcw,\n  Download,\n  Settings,\n} from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\n\ninterface WidgetConfig {\n  id: string;\n  type: \"metric\" | \"chart\" | \"heatmap\" | \"timeline\";\n  title: string;\n  size: \"small\" | \"medium\" | \"large\";\n  position: { x: number; y: number };\n  refreshInterval?: number;\n}\n\ninterface MetricData {\n  id: string;\n  name: string;\n  value: number;\n  lastUpdated: number;\n  trend?: number;\n  unit?: string;\n}\n\nconst AnalyticsWidgetSystem: React.FC = () => {\n  const [widgets, setWidgets] = useState<WidgetConfig[]>([\n    {\n      id: \"conversation-rate\",\n      type: \"metric\",\n      title: \"Conversation Rate\",\n      size: \"small\",\n      position: { x: 0, y: 0 },\n    },\n    {\n      id: \"active-agents\",\n      type: \"chart\",\n      title: \"Active Agents\",\n      size: \"medium\",\n      position: { x: 1, y: 0 },\n    },\n    {\n      id: \"knowledge-diversity\",\n      type: \"chart\",\n      title: \"Knowledge Diversity\",\n      size: \"medium\",\n      position: { x: 2, y: 0 },\n    },\n    {\n      id: \"belief-confidence\",\n      type: \"chart\",\n      title: \"Belief Confidence\",\n      size: \"large\",\n      position: { x: 0, y: 1 },\n    },\n    {\n      id: \"response-time\",\n      type: \"chart\",\n      title: \"Response Time\",\n      size: \"medium\",\n      position: { x: 2, y: 1 },\n    },\n    {\n      id: \"turn-taking\",\n      type: \"chart\",\n      title: \"Turn Taking\",\n      size: \"large\",\n      position: { x: 0, y: 2 },\n    },\n  ]);\n\n  const [expandedWidget, setExpandedWidget] = useState<string | null>(null);\n  const [refreshTimestamp, setRefreshTimestamp] = useState(Date.now());\n\n  // Redux state\n  const agents = useAppSelector((state) => state.agents.agents);\n  const conversations = useAppSelector(\n    (state) => state.conversations.conversations,\n  );\n  const knowledgeGraph = useAppSelector((state) => state.knowledge.graph);\n  const analytics = useAppSelector((state) => state.analytics);\n\n  // Auto-refresh effect\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setRefreshTimestamp(Date.now());\n    }, 5000); // Refresh every 5 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Calculate real-time metrics\n  const calculateMetrics = (): Record<string, MetricData> => {\n    const totalAgents = Object.keys(agents).length;\n    const activeAgents = Object.values(agents).filter(\n      (a) => a.status === \"active\",\n    ).length;\n    const totalMessages = Object.values(conversations).reduce(\n      (sum, conv) => sum + conv.messages.length,\n      0,\n    );\n    const totalKnowledge = Object.keys(knowledgeGraph.nodes).length;\n\n    // Calculate message rate (messages per minute)\n    const now = Date.now();\n    const oneMinuteAgo = now - 60000;\n    const recentMessages = Object.values(conversations)\n      .flatMap((conv) => conv.messages)\n      .filter((msg) => msg.timestamp > oneMinuteAgo);\n\n    // Calculate average confidence\n    const confidences = Object.values(knowledgeGraph.nodes).map(\n      (node) => node.confidence,\n    );\n    const avgConfidence =\n      confidences.length > 0\n        ? confidences.reduce((a, b) => a + b, 0) / confidences.length\n        : 0;\n\n    // Calculate Shannon entropy for knowledge diversity\n    const typeCount = Object.values(knowledgeGraph.nodes).reduce(\n      (acc, node) => {\n        acc[node.type] = (acc[node.type] || 0) + 1;\n        return acc;\n      },\n      {} as Record<string, number>,\n    );\n\n    const total = Object.values(typeCount).reduce((a, b) => a + b, 0);\n    const entropy =\n      total > 0\n        ? -Object.values(typeCount)\n            .map((count) => count / total)\n            .filter((p) => p > 0)\n            .reduce((acc, p) => acc + p * Math.log2(p), 0)\n        : 0;\n\n    return {\n      conversationRate: {\n        id: \"conversation-rate\",\n        name: \"Messages/Min\",\n        value: recentMessages.length,\n        lastUpdated: now,\n        unit: \"msg/min\",\n        trend: Math.random() * 20 - 10, // Mock trend\n      },\n      activeAgents: {\n        id: \"active-agents\",\n        name: \"Active Agents\",\n        value: activeAgents,\n        lastUpdated: now,\n        unit: \"agents\",\n      },\n      totalMessages: {\n        id: \"total-messages\",\n        name: \"Total Messages\",\n        value: totalMessages,\n        lastUpdated: now,\n        unit: \"messages\",\n      },\n      knowledgeDiversity: {\n        id: \"knowledge-diversity\",\n        name: \"Knowledge Entropy\",\n        value: entropy,\n        lastUpdated: now,\n        unit: \"bits\",\n      },\n      avgConfidence: {\n        id: \"avg-confidence\",\n        name: \"Avg Confidence\",\n        value: avgConfidence,\n        lastUpdated: now,\n        unit: \"%\",\n      },\n      totalKnowledge: {\n        id: \"total-knowledge\",\n        name: \"Knowledge Nodes\",\n        value: totalKnowledge,\n        lastUpdated: now,\n        unit: \"nodes\",\n      },\n    };\n  };\n\n  const metrics = calculateMetrics();\n\n  // Generate chart data\n  const generateChartData = (widgetId: string) => {\n    switch (widgetId) {\n      case \"active-agents\":\n        return Object.values(agents).reduce(\n          (acc, agent) => {\n            acc[agent.status] = (acc[agent.status] || 0) + 1;\n            return acc;\n          },\n          {} as Record<string, number>,\n        );\n\n      case \"knowledge-diversity\":\n        return Object.values(knowledgeGraph.nodes).reduce(\n          (acc, node) => {\n            acc[node.type] = (acc[node.type] || 0) + 1;\n            return acc;\n          },\n          {} as Record<string, number>,\n        );\n\n      case \"belief-confidence\":\n        const confidenceBuckets = {\n          \"Low (0-0.3)\": 0,\n          \"Medium (0.3-0.7)\": 0,\n          \"High (0.7-1.0)\": 0,\n        };\n        Object.values(knowledgeGraph.nodes).forEach((node) => {\n          if (node.confidence <= 0.3) confidenceBuckets[\"Low (0-0.3)\"]++;\n          else if (node.confidence <= 0.7)\n            confidenceBuckets[\"Medium (0.3-0.7)\"]++;\n          else confidenceBuckets[\"High (0.7-1.0)\"]++;\n        });\n        return confidenceBuckets;\n\n      case \"response-time\":\n        // Generate mock response time data\n        return Array.from({ length: 10 }, (_, i) => ({\n          time: `${i * 6}:00`,\n          avgResponse: Math.random() * 2000 + 500,\n          p95Response: Math.random() * 5000 + 1000,\n        }));\n\n      case \"turn-taking\":\n        // Generate mock turn-taking flow data\n        const agentNames = Object.values(agents)\n          .slice(0, 5)\n          .map((a) => a.name);\n        return agentNames.map((name, i) => ({\n          agent: name,\n          initiates: Math.floor(Math.random() * 50) + 10,\n          responds: Math.floor(Math.random() * 80) + 20,\n        }));\n\n      default:\n        return {};\n    }\n  };\n\n  // Widget components\n  const MetricWidget: React.FC<{\n    config: WidgetConfig;\n    metric: MetricData;\n  }> = ({ config, metric }) => (\n    <Card className=\"widget-container h-full\">\n      <CardHeader className=\"pb-2\">\n        <CardTitle className=\"widget-title flex items-center justify-between\">\n          {config.title}\n          <div className=\"flex items-center gap-1\">\n            <Button variant=\"ghost\" size=\"sm\" className=\"h-6 w-6 p-0\">\n              <MoreVertical className=\"h-3 w-3\" />\n            </Button>\n          </div>\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"text-center\">\n          <div className=\"text-3xl font-bold font-mono text-[var(--text-primary)]\">\n            {metric.value.toFixed(metric.unit === \"%\" ? 1 : 0)}\n          </div>\n          <div className=\"text-sm text-[var(--text-secondary)]\">\n            {metric.unit}\n          </div>\n          {metric.trend && (\n            <div\n              className={`text-xs mt-1 ${metric.trend > 0 ? \"text-[var(--success)]\" : \"text-[var(--error)]\"}`}\n            >\n              {metric.trend > 0 ? \"+\" : \"\"}\n              {metric.trend.toFixed(1)}%\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n\n  const ChartWidget: React.FC<{ config: WidgetConfig }> = ({ config }) => {\n    const data = generateChartData(config.id);\n\n    const renderChart = () => {\n      switch (config.id) {\n        case \"active-agents\":\n        case \"knowledge-diversity\":\n        case \"belief-confidence\":\n          const pieData = Object.entries(data).map(([key, value], index) => ({\n            name: key,\n            value: value as number,\n            fill: [\"#4F46E5\", \"#10B981\", \"#F59E0B\", \"#EF4444\", \"#8B5CF6\"][\n              index % 5\n            ],\n          }));\n\n          return (\n            <ResponsiveContainer width=\"100%\" height={200}>\n              <PieChart>\n                <Pie\n                  data={pieData}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  innerRadius={config.size === \"small\" ? 30 : 40}\n                  outerRadius={config.size === \"small\" ? 60 : 80}\n                  dataKey=\"value\"\n                  label={({ name, percent }) =>\n                    `${name}: ${(percent * 100).toFixed(0)}%`\n                  }\n                  labelLine={false}\n                  fontSize={12}\n                  fill=\"#8884d8\"\n                >\n                  {pieData.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={entry.fill} />\n                  ))}\n                </Pie>\n                <Tooltip />\n              </PieChart>\n            </ResponsiveContainer>\n          );\n\n        case \"response-time\":\n          return (\n            <ResponsiveContainer width=\"100%\" height={200}>\n              <LineChart data={data as any[]}>\n                <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#333\" />\n                <XAxis dataKey=\"time\" stroke=\"#666\" fontSize={12} />\n                <YAxis stroke=\"#666\" fontSize={12} />\n                <Tooltip\n                  contentStyle={{\n                    backgroundColor: \"var(--bg-secondary)\",\n                    border: \"1px solid var(--bg-tertiary)\",\n                    borderRadius: \"8px\",\n                  }}\n                />\n                <Legend />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"avgResponse\"\n                  stroke=\"#4F46E5\"\n                  strokeWidth={2}\n                  name=\"Avg Response\"\n                />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"p95Response\"\n                  stroke=\"#F59E0B\"\n                  strokeWidth={2}\n                  name=\"95th Percentile\"\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          );\n\n        case \"turn-taking\":\n          return (\n            <ResponsiveContainer width=\"100%\" height={200}>\n              <BarChart data={data as any[]} layout=\"horizontal\">\n                <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#333\" />\n                <XAxis type=\"number\" stroke=\"#666\" fontSize={12} />\n                <YAxis\n                  dataKey=\"agent\"\n                  type=\"category\"\n                  stroke=\"#666\"\n                  fontSize={12}\n                  width={80}\n                />\n                <Tooltip\n                  contentStyle={{\n                    backgroundColor: \"var(--bg-secondary)\",\n                    border: \"1px solid var(--bg-tertiary)\",\n                    borderRadius: \"8px\",\n                  }}\n                />\n                <Legend />\n                <Bar dataKey=\"initiates\" fill=\"#4F46E5\" name=\"Initiates\" />\n                <Bar dataKey=\"responds\" fill=\"#10B981\" name=\"Responds\" />\n              </BarChart>\n            </ResponsiveContainer>\n          );\n\n        default:\n          return (\n            <div className=\"text-center text-[var(--text-secondary)]\">\n              No data available\n            </div>\n          );\n      }\n    };\n\n    return (\n      <Card className=\"widget-container h-full\">\n        <CardHeader className=\"pb-2\">\n          <CardTitle className=\"widget-title flex items-center justify-between\">\n            {config.title}\n            <div className=\"flex items-center gap-1\">\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                className=\"h-6 w-6 p-0\"\n                onClick={() =>\n                  setExpandedWidget(\n                    expandedWidget === config.id ? null : config.id,\n                  )\n                }\n              >\n                <Maximize2 className=\"h-3 w-3\" />\n              </Button>\n              <Button variant=\"ghost\" size=\"sm\" className=\"h-6 w-6 p-0\">\n                <MoreVertical className=\"h-3 w-3\" />\n              </Button>\n            </div>\n          </CardTitle>\n        </CardHeader>\n        <CardContent>{renderChart()}</CardContent>\n      </Card>\n    );\n  };\n\n  const getWidgetSizeClass = (size: string) => {\n    switch (size) {\n      case \"small\":\n        return \"col-span-1 row-span-1\";\n      case \"medium\":\n        return \"col-span-2 row-span-1\";\n      case \"large\":\n        return \"col-span-3 row-span-2\";\n      default:\n        return \"col-span-1 row-span-1\";\n    }\n  };\n\n  return (\n    <div className=\"p-6 h-full bg-[var(--bg-primary)]\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between mb-6\">\n        <div>\n          <h2 className=\"font-ui text-xl font-semibold text-[var(--text-primary)]\">\n            Analytics Dashboard\n          </h2>\n          <p className=\"font-ui text-sm text-[var(--text-secondary)] mt-1\">\n            Real-time system metrics and insights\n          </p>\n        </div>\n\n        <div className=\"flex items-center gap-2\">\n          <Badge\n            variant=\"outline\"\n            className=\"bg-[var(--bg-secondary)] border-[var(--bg-tertiary)]\"\n          >\n            <Activity className=\"w-3 h-3 mr-1\" />\n            Live\n          </Badge>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => setRefreshTimestamp(Date.now())}\n            className=\"bg-[var(--bg-secondary)] border-[var(--bg-tertiary)]\"\n          >\n            <RotateCcw className=\"w-4 h-4\" />\n          </Button>\n        </div>\n      </div>\n\n      {/* Widget Grid */}\n      <div className=\"grid grid-cols-4 gap-4 h-[calc(100%-120px)] auto-rows-fr\">\n        {widgets.map((widget) => (\n          <motion.div\n            key={widget.id}\n            className={getWidgetSizeClass(widget.size)}\n            layout\n            initial={{ opacity: 0, scale: 0.9 }}\n            animate={{ opacity: 1, scale: 1 }}\n            transition={{ duration: 0.3 }}\n          >\n            {widget.type === \"metric\" ? (\n              <MetricWidget\n                config={widget}\n                metric={\n                  metrics[widget.id.replace(\"-\", \"\")] ||\n                  metrics.conversationRate\n                }\n              />\n            ) : (\n              <ChartWidget config={widget} />\n            )}\n          </motion.div>\n        ))}\n      </div>\n\n      {/* Expanded Widget Modal */}\n      {expandedWidget && (\n        <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          exit={{ opacity: 0 }}\n          className=\"fixed inset-0 bg-black/50 z-50 flex items-center justify-center p-8\"\n          onClick={() => setExpandedWidget(null)}\n        >\n          <motion.div\n            initial={{ scale: 0.9 }}\n            animate={{ scale: 1 }}\n            exit={{ scale: 0.9 }}\n            className=\"bg-[var(--bg-secondary)] border border-[var(--bg-tertiary)] rounded-lg p-6 max-w-4xl w-full h-[80vh]\"\n            onClick={(e) => e.stopPropagation()}\n          >\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-xl font-semibold text-[var(--text-primary)]\">\n                {widgets.find((w) => w.id === expandedWidget)?.title}\n              </h3>\n              <Button\n                variant=\"ghost\"\n                onClick={() => setExpandedWidget(null)}\n                className=\"text-[var(--text-secondary)] hover:text-[var(--text-primary)]\"\n              >\n                \u2715\n              </Button>\n            </div>\n            <div className=\"h-[calc(100%-60px)]\">\n              <ChartWidget\n                config={widgets.find((w) => w.id === expandedWidget)!}\n              />\n            </div>\n          </motion.div>\n        </motion.div>\n      )}\n    </div>\n  );\n};\n\nexport default AnalyticsWidgetSystem;\n"],
      names: ["AnalyticsWidgetSystem", "widgets", "setWidgets", "useState", "id", "type", "title", "size", "position", "x", "y", "expandedWidget", "setExpandedWidget", "refreshTimestamp", "setRefreshTimestamp", "Date", "now", "agents", "useAppSelector", "state", "conversations", "knowledgeGraph", "knowledge", "graph", "analytics", "useEffect", "interval", "setInterval", "clearInterval", "calculateMetrics", "totalAgents", "Object", "keys", "length", "activeAgents", "values", "filter", "a", "status", "totalMessages", "reduce", "sum", "conv", "messages", "totalKnowledge", "nodes", "oneMinuteAgo", "recentMessages", "flatMap", "msg", "timestamp", "confidences", "map", "node", "confidence", "avgConfidence", "b", "typeCount", "acc", "total", "entropy", "count", "p", "Math", "log2", "conversationRate", "name", "value", "lastUpdated", "unit", "trend", "random", "knowledgeDiversity", "metrics", "generateChartData", "widgetId", "agent", "confidenceBuckets", "forEach", "Array", "from", "_", "i", "time", "avgResponse", "p95Response", "agentNames", "slice", "initiates", "floor", "responds", "MetricWidget", "config", "metric", "Card", "className", "CardHeader", "CardTitle", "div", "Button", "variant", "MoreVertical", "CardContent", "toFixed", "ChartWidget", "data", "renderChart", "pieData", "entries", "key", "index", "fill", "ResponsiveContainer", "width", "height", "PieChart", "Pie", "cx", "cy", "innerRadius", "outerRadius", "dataKey", "label", "percent", "labelLine", "fontSize", "entry", "Cell", "Tooltip", "LineChart", "CartesianGrid", "strokeDasharray", "stroke", "XAxis", "YAxis", "contentStyle", "backgroundColor", "border", "borderRadius", "Legend", "Line", "strokeWidth", "BarChart", "layout", "Bar", "onClick", "Maximize2", "getWidgetSizeClass", "h2", "Badge", "Activity", "RotateCcw", "widget", "motion", "initial", "opacity", "scale", "animate", "transition", "duration", "replace", "exit", "e", "stopPropagation", "h3", "find", "w"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9981252048fd75d9cee803ba2e0865d6ffe2f2f3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2oc8s9jktm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2oc8s9jktm();
cov_2oc8s9jktm().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2oc8s9jktm().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2oc8s9jktm().f[0]++;
    cov_2oc8s9jktm().s[2]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2oc8s9jktm().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_2oc8s9jktm().s[4]++, _interop_require_wildcard(require("react")));
const _framermotion =
/* istanbul ignore next */
(cov_2oc8s9jktm().s[5]++, require("framer-motion"));
const _recharts =
/* istanbul ignore next */
(cov_2oc8s9jktm().s[6]++, require("recharts"));
const _hooks =
/* istanbul ignore next */
(cov_2oc8s9jktm().s[7]++, require("../../store/hooks"));
const _lucidereact =
/* istanbul ignore next */
(cov_2oc8s9jktm().s[8]++, require("lucide-react"));
const _button =
/* istanbul ignore next */
(cov_2oc8s9jktm().s[9]++, require("../ui/button"));
const _card =
/* istanbul ignore next */
(cov_2oc8s9jktm().s[10]++, require("../ui/card"));
const _badge =
/* istanbul ignore next */
(cov_2oc8s9jktm().s[11]++, require("../ui/badge"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_2oc8s9jktm().f[1]++;
  cov_2oc8s9jktm().s[12]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_2oc8s9jktm().b[0][0]++;
    cov_2oc8s9jktm().s[13]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_2oc8s9jktm().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_2oc8s9jktm().s[14]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_2oc8s9jktm().s[15]++, new WeakMap());
  /* istanbul ignore next */
  cov_2oc8s9jktm().s[16]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_2oc8s9jktm().f[2]++;
    cov_2oc8s9jktm().s[17]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_2oc8s9jktm().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_2oc8s9jktm().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_2oc8s9jktm().f[3]++;
  cov_2oc8s9jktm().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_2oc8s9jktm().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_2oc8s9jktm().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_2oc8s9jktm().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_2oc8s9jktm().b[2][0]++;
    cov_2oc8s9jktm().s[19]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_2oc8s9jktm().b[2][1]++;
  }
  cov_2oc8s9jktm().s[20]++;
  if (
  /* istanbul ignore next */
  (cov_2oc8s9jktm().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_2oc8s9jktm().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_2oc8s9jktm().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_2oc8s9jktm().b[4][0]++;
    cov_2oc8s9jktm().s[21]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_2oc8s9jktm().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_2oc8s9jktm().s[22]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_2oc8s9jktm().s[23]++;
  if (
  /* istanbul ignore next */
  (cov_2oc8s9jktm().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_2oc8s9jktm().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_2oc8s9jktm().b[6][0]++;
    cov_2oc8s9jktm().s[24]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_2oc8s9jktm().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_2oc8s9jktm().s[25]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_2oc8s9jktm().s[26]++,
  /* istanbul ignore next */
  (cov_2oc8s9jktm().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_2oc8s9jktm().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_2oc8s9jktm().s[27]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_2oc8s9jktm().s[28]++;
    if (
    /* istanbul ignore next */
    (cov_2oc8s9jktm().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_2oc8s9jktm().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_2oc8s9jktm().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_2oc8s9jktm().s[29]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_2oc8s9jktm().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_2oc8s9jktm().b[11][1]++, null));
      /* istanbul ignore next */
      cov_2oc8s9jktm().s[30]++;
      if (
      /* istanbul ignore next */
      (cov_2oc8s9jktm().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_2oc8s9jktm().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_2oc8s9jktm().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_2oc8s9jktm().b[12][0]++;
        cov_2oc8s9jktm().s[31]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_2oc8s9jktm().b[12][1]++;
        cov_2oc8s9jktm().s[32]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_2oc8s9jktm().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_2oc8s9jktm().s[33]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_2oc8s9jktm().s[34]++;
  if (cache) {
    /* istanbul ignore next */
    cov_2oc8s9jktm().b[14][0]++;
    cov_2oc8s9jktm().s[35]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_2oc8s9jktm().b[14][1]++;
  }
  cov_2oc8s9jktm().s[36]++;
  return newObj;
}
/* istanbul ignore next */
cov_2oc8s9jktm().s[37]++;
const AnalyticsWidgetSystem = () => {
  /* istanbul ignore next */
  cov_2oc8s9jktm().f[4]++;
  const [widgets, setWidgets] =
  /* istanbul ignore next */
  (cov_2oc8s9jktm().s[38]++, (0, _react.useState)([{
    id: "conversation-rate",
    type: "metric",
    title: "Conversation Rate",
    size: "small",
    position: {
      x: 0,
      y: 0
    }
  }, {
    id: "active-agents",
    type: "chart",
    title: "Active Agents",
    size: "medium",
    position: {
      x: 1,
      y: 0
    }
  }, {
    id: "knowledge-diversity",
    type: "chart",
    title: "Knowledge Diversity",
    size: "medium",
    position: {
      x: 2,
      y: 0
    }
  }, {
    id: "belief-confidence",
    type: "chart",
    title: "Belief Confidence",
    size: "large",
    position: {
      x: 0,
      y: 1
    }
  }, {
    id: "response-time",
    type: "chart",
    title: "Response Time",
    size: "medium",
    position: {
      x: 2,
      y: 1
    }
  }, {
    id: "turn-taking",
    type: "chart",
    title: "Turn Taking",
    size: "large",
    position: {
      x: 0,
      y: 2
    }
  }]));
  const [expandedWidget, setExpandedWidget] =
  /* istanbul ignore next */
  (cov_2oc8s9jktm().s[39]++, (0, _react.useState)(null));
  const [refreshTimestamp, setRefreshTimestamp] =
  /* istanbul ignore next */
  (cov_2oc8s9jktm().s[40]++, (0, _react.useState)(Date.now()));
  // Redux state
  const agents =
  /* istanbul ignore next */
  (cov_2oc8s9jktm().s[41]++, (0, _hooks.useAppSelector)(state => {
    /* istanbul ignore next */
    cov_2oc8s9jktm().f[5]++;
    cov_2oc8s9jktm().s[42]++;
    return state.agents.agents;
  }));
  const conversations =
  /* istanbul ignore next */
  (cov_2oc8s9jktm().s[43]++, (0, _hooks.useAppSelector)(state => {
    /* istanbul ignore next */
    cov_2oc8s9jktm().f[6]++;
    cov_2oc8s9jktm().s[44]++;
    return state.conversations.conversations;
  }));
  const knowledgeGraph =
  /* istanbul ignore next */
  (cov_2oc8s9jktm().s[45]++, (0, _hooks.useAppSelector)(state => {
    /* istanbul ignore next */
    cov_2oc8s9jktm().f[7]++;
    cov_2oc8s9jktm().s[46]++;
    return state.knowledge.graph;
  }));
  const analytics =
  /* istanbul ignore next */
  (cov_2oc8s9jktm().s[47]++, (0, _hooks.useAppSelector)(state => {
    /* istanbul ignore next */
    cov_2oc8s9jktm().f[8]++;
    cov_2oc8s9jktm().s[48]++;
    return state.analytics;
  }));
  // Auto-refresh effect
  /* istanbul ignore next */
  cov_2oc8s9jktm().s[49]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2oc8s9jktm().f[9]++;
    const interval =
    /* istanbul ignore next */
    (cov_2oc8s9jktm().s[50]++, setInterval(() => {
      /* istanbul ignore next */
      cov_2oc8s9jktm().f[10]++;
      cov_2oc8s9jktm().s[51]++;
      setRefreshTimestamp(Date.now());
    }, 5000)); // Refresh every 5 seconds
    /* istanbul ignore next */
    cov_2oc8s9jktm().s[52]++;
    return () => {
      /* istanbul ignore next */
      cov_2oc8s9jktm().f[11]++;
      cov_2oc8s9jktm().s[53]++;
      return clearInterval(interval);
    };
  }, []);
  // Calculate real-time metrics
  /* istanbul ignore next */
  cov_2oc8s9jktm().s[54]++;
  const calculateMetrics = () => {
    /* istanbul ignore next */
    cov_2oc8s9jktm().f[12]++;
    const totalAgents =
    /* istanbul ignore next */
    (cov_2oc8s9jktm().s[55]++, Object.keys(agents).length);
    const activeAgents =
    /* istanbul ignore next */
    (cov_2oc8s9jktm().s[56]++, Object.values(agents).filter(a => {
      /* istanbul ignore next */
      cov_2oc8s9jktm().f[13]++;
      cov_2oc8s9jktm().s[57]++;
      return a.status === "active";
    }).length);
    const totalMessages =
    /* istanbul ignore next */
    (cov_2oc8s9jktm().s[58]++, Object.values(conversations).reduce((sum, conv) => {
      /* istanbul ignore next */
      cov_2oc8s9jktm().f[14]++;
      cov_2oc8s9jktm().s[59]++;
      return sum + conv.messages.length;
    }, 0));
    const totalKnowledge =
    /* istanbul ignore next */
    (cov_2oc8s9jktm().s[60]++, Object.keys(knowledgeGraph.nodes).length);
    // Calculate message rate (messages per minute)
    const now =
    /* istanbul ignore next */
    (cov_2oc8s9jktm().s[61]++, Date.now());
    const oneMinuteAgo =
    /* istanbul ignore next */
    (cov_2oc8s9jktm().s[62]++, now - 60000);
    const recentMessages =
    /* istanbul ignore next */
    (cov_2oc8s9jktm().s[63]++, Object.values(conversations).flatMap(conv => {
      /* istanbul ignore next */
      cov_2oc8s9jktm().f[15]++;
      cov_2oc8s9jktm().s[64]++;
      return conv.messages;
    }).filter(msg => {
      /* istanbul ignore next */
      cov_2oc8s9jktm().f[16]++;
      cov_2oc8s9jktm().s[65]++;
      return msg.timestamp > oneMinuteAgo;
    }));
    // Calculate average confidence
    const confidences =
    /* istanbul ignore next */
    (cov_2oc8s9jktm().s[66]++, Object.values(knowledgeGraph.nodes).map(node => {
      /* istanbul ignore next */
      cov_2oc8s9jktm().f[17]++;
      cov_2oc8s9jktm().s[67]++;
      return node.confidence;
    }));
    const avgConfidence =
    /* istanbul ignore next */
    (cov_2oc8s9jktm().s[68]++, confidences.length > 0 ?
    /* istanbul ignore next */
    (cov_2oc8s9jktm().b[15][0]++, confidences.reduce((a, b) => {
      /* istanbul ignore next */
      cov_2oc8s9jktm().f[18]++;
      cov_2oc8s9jktm().s[69]++;
      return a + b;
    }, 0) / confidences.length) :
    /* istanbul ignore next */
    (cov_2oc8s9jktm().b[15][1]++, 0));
    // Calculate Shannon entropy for knowledge diversity
    const typeCount =
    /* istanbul ignore next */
    (cov_2oc8s9jktm().s[70]++, Object.values(knowledgeGraph.nodes).reduce((acc, node) => {
      /* istanbul ignore next */
      cov_2oc8s9jktm().f[19]++;
      cov_2oc8s9jktm().s[71]++;
      acc[node.type] = (
      /* istanbul ignore next */
      (cov_2oc8s9jktm().b[16][0]++, acc[node.type]) ||
      /* istanbul ignore next */
      (cov_2oc8s9jktm().b[16][1]++, 0)) + 1;
      /* istanbul ignore next */
      cov_2oc8s9jktm().s[72]++;
      return acc;
    }, {}));
    const total =
    /* istanbul ignore next */
    (cov_2oc8s9jktm().s[73]++, Object.values(typeCount).reduce((a, b) => {
      /* istanbul ignore next */
      cov_2oc8s9jktm().f[20]++;
      cov_2oc8s9jktm().s[74]++;
      return a + b;
    }, 0));
    const entropy =
    /* istanbul ignore next */
    (cov_2oc8s9jktm().s[75]++, total > 0 ?
    /* istanbul ignore next */
    (cov_2oc8s9jktm().b[17][0]++, -Object.values(typeCount).map(count => {
      /* istanbul ignore next */
      cov_2oc8s9jktm().f[21]++;
      cov_2oc8s9jktm().s[76]++;
      return count / total;
    }).filter(p => {
      /* istanbul ignore next */
      cov_2oc8s9jktm().f[22]++;
      cov_2oc8s9jktm().s[77]++;
      return p > 0;
    }).reduce((acc, p) => {
      /* istanbul ignore next */
      cov_2oc8s9jktm().f[23]++;
      cov_2oc8s9jktm().s[78]++;
      return acc + p * Math.log2(p);
    }, 0)) :
    /* istanbul ignore next */
    (cov_2oc8s9jktm().b[17][1]++, 0));
    /* istanbul ignore next */
    cov_2oc8s9jktm().s[79]++;
    return {
      conversationRate: {
        id: "conversation-rate",
        name: "Messages/Min",
        value: recentMessages.length,
        lastUpdated: now,
        unit: "msg/min",
        trend: Math.random() * 20 - 10
      },
      activeAgents: {
        id: "active-agents",
        name: "Active Agents",
        value: activeAgents,
        lastUpdated: now,
        unit: "agents"
      },
      totalMessages: {
        id: "total-messages",
        name: "Total Messages",
        value: totalMessages,
        lastUpdated: now,
        unit: "messages"
      },
      knowledgeDiversity: {
        id: "knowledge-diversity",
        name: "Knowledge Entropy",
        value: entropy,
        lastUpdated: now,
        unit: "bits"
      },
      avgConfidence: {
        id: "avg-confidence",
        name: "Avg Confidence",
        value: avgConfidence,
        lastUpdated: now,
        unit: "%"
      },
      totalKnowledge: {
        id: "total-knowledge",
        name: "Knowledge Nodes",
        value: totalKnowledge,
        lastUpdated: now,
        unit: "nodes"
      }
    };
  };
  const metrics =
  /* istanbul ignore next */
  (cov_2oc8s9jktm().s[80]++, calculateMetrics());
  // Generate chart data
  /* istanbul ignore next */
  cov_2oc8s9jktm().s[81]++;
  const generateChartData = widgetId => {
    /* istanbul ignore next */
    cov_2oc8s9jktm().f[24]++;
    cov_2oc8s9jktm().s[82]++;
    switch (widgetId) {
      case "active-agents":
        /* istanbul ignore next */
        cov_2oc8s9jktm().b[18][0]++;
        cov_2oc8s9jktm().s[83]++;
        return Object.values(agents).reduce((acc, agent) => {
          /* istanbul ignore next */
          cov_2oc8s9jktm().f[25]++;
          cov_2oc8s9jktm().s[84]++;
          acc[agent.status] = (
          /* istanbul ignore next */
          (cov_2oc8s9jktm().b[19][0]++, acc[agent.status]) ||
          /* istanbul ignore next */
          (cov_2oc8s9jktm().b[19][1]++, 0)) + 1;
          /* istanbul ignore next */
          cov_2oc8s9jktm().s[85]++;
          return acc;
        }, {});
      case "knowledge-diversity":
        /* istanbul ignore next */
        cov_2oc8s9jktm().b[18][1]++;
        cov_2oc8s9jktm().s[86]++;
        return Object.values(knowledgeGraph.nodes).reduce((acc, node) => {
          /* istanbul ignore next */
          cov_2oc8s9jktm().f[26]++;
          cov_2oc8s9jktm().s[87]++;
          acc[node.type] = (
          /* istanbul ignore next */
          (cov_2oc8s9jktm().b[20][0]++, acc[node.type]) ||
          /* istanbul ignore next */
          (cov_2oc8s9jktm().b[20][1]++, 0)) + 1;
          /* istanbul ignore next */
          cov_2oc8s9jktm().s[88]++;
          return acc;
        }, {});
      case "belief-confidence":
        /* istanbul ignore next */
        cov_2oc8s9jktm().b[18][2]++;
        const confidenceBuckets =
        /* istanbul ignore next */
        (cov_2oc8s9jktm().s[89]++, {
          "Low (0-0.3)": 0,
          "Medium (0.3-0.7)": 0,
          "High (0.7-1.0)": 0
        });
        /* istanbul ignore next */
        cov_2oc8s9jktm().s[90]++;
        Object.values(knowledgeGraph.nodes).forEach(node => {
          /* istanbul ignore next */
          cov_2oc8s9jktm().f[27]++;
          cov_2oc8s9jktm().s[91]++;
          if (node.confidence <= 0.3) {
            /* istanbul ignore next */
            cov_2oc8s9jktm().b[21][0]++;
            cov_2oc8s9jktm().s[92]++;
            confidenceBuckets["Low (0-0.3)"]++;
          } else {
            /* istanbul ignore next */
            cov_2oc8s9jktm().b[21][1]++;
            cov_2oc8s9jktm().s[93]++;
            if (node.confidence <= 0.7) {
              /* istanbul ignore next */
              cov_2oc8s9jktm().b[22][0]++;
              cov_2oc8s9jktm().s[94]++;
              confidenceBuckets["Medium (0.3-0.7)"]++;
            } else {
              /* istanbul ignore next */
              cov_2oc8s9jktm().b[22][1]++;
              cov_2oc8s9jktm().s[95]++;
              confidenceBuckets["High (0.7-1.0)"]++;
            }
          }
        });
        /* istanbul ignore next */
        cov_2oc8s9jktm().s[96]++;
        return confidenceBuckets;
      case "response-time":
        /* istanbul ignore next */
        cov_2oc8s9jktm().b[18][3]++;
        cov_2oc8s9jktm().s[97]++;
        // Generate mock response time data
        return Array.from({
          length: 10
        }, (_, i) => {
          /* istanbul ignore next */
          cov_2oc8s9jktm().f[28]++;
          cov_2oc8s9jktm().s[98]++;
          return {
            time: `${i * 6}:00`,
            avgResponse: Math.random() * 2000 + 500,
            p95Response: Math.random() * 5000 + 1000
          };
        });
      case "turn-taking":
        /* istanbul ignore next */
        cov_2oc8s9jktm().b[18][4]++;
        // Generate mock turn-taking flow data
        const agentNames =
        /* istanbul ignore next */
        (cov_2oc8s9jktm().s[99]++, Object.values(agents).slice(0, 5).map(a => {
          /* istanbul ignore next */
          cov_2oc8s9jktm().f[29]++;
          cov_2oc8s9jktm().s[100]++;
          return a.name;
        }));
        /* istanbul ignore next */
        cov_2oc8s9jktm().s[101]++;
        return agentNames.map((name, i) => {
          /* istanbul ignore next */
          cov_2oc8s9jktm().f[30]++;
          cov_2oc8s9jktm().s[102]++;
          return {
            agent: name,
            initiates: Math.floor(Math.random() * 50) + 10,
            responds: Math.floor(Math.random() * 80) + 20
          };
        });
      default:
        /* istanbul ignore next */
        cov_2oc8s9jktm().b[18][5]++;
        cov_2oc8s9jktm().s[103]++;
        return {};
    }
  };
  // Widget components
  /* istanbul ignore next */
  cov_2oc8s9jktm().s[104]++;
  const MetricWidget = ({
    config,
    metric
  }) => {
    /* istanbul ignore next */
    cov_2oc8s9jktm().f[31]++;
    cov_2oc8s9jktm().s[105]++;
    return /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
      className: "widget-container h-full",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
        className: "pb-2",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardTitle, {
          className: "widget-title flex items-center justify-between",
          children: [config.title, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "flex items-center gap-1",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
              variant: "ghost",
              size: "sm",
              className: "h-6 w-6 p-0",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.MoreVertical, {
                className: "h-3 w-3"
              })
            })
          })]
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "text-center",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "text-3xl font-bold font-mono text-[var(--text-primary)]",
            children: metric.value.toFixed(metric.unit === "%" ?
            /* istanbul ignore next */
            (cov_2oc8s9jktm().b[23][0]++, 1) :
            /* istanbul ignore next */
            (cov_2oc8s9jktm().b[23][1]++, 0))
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "text-sm text-[var(--text-secondary)]",
            children: metric.unit
          }),
          /* istanbul ignore next */
          (cov_2oc8s9jktm().b[24][0]++, metric.trend) &&
          /* istanbul ignore next */
          (cov_2oc8s9jktm().b[24][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: `text-xs mt-1 ${metric.trend > 0 ?
            /* istanbul ignore next */
            (cov_2oc8s9jktm().b[25][0]++, "text-[var(--success)]") :
            /* istanbul ignore next */
            (cov_2oc8s9jktm().b[25][1]++, "text-[var(--error)]")}`,
            children: [metric.trend > 0 ?
            /* istanbul ignore next */
            (cov_2oc8s9jktm().b[26][0]++, "+") :
            /* istanbul ignore next */
            (cov_2oc8s9jktm().b[26][1]++, ""), metric.trend.toFixed(1), "%"]
          }))]
        })
      })]
    });
  };
  /* istanbul ignore next */
  cov_2oc8s9jktm().s[106]++;
  const ChartWidget = ({
    config
  }) => {
    /* istanbul ignore next */
    cov_2oc8s9jktm().f[32]++;
    const data =
    /* istanbul ignore next */
    (cov_2oc8s9jktm().s[107]++, generateChartData(config.id));
    /* istanbul ignore next */
    cov_2oc8s9jktm().s[108]++;
    const renderChart = () => {
      /* istanbul ignore next */
      cov_2oc8s9jktm().f[33]++;
      cov_2oc8s9jktm().s[109]++;
      switch (config.id) {
        case "active-agents":
          /* istanbul ignore next */
          cov_2oc8s9jktm().b[27][0]++;
        case "knowledge-diversity":
          /* istanbul ignore next */
          cov_2oc8s9jktm().b[27][1]++;
        case "belief-confidence":
          /* istanbul ignore next */
          cov_2oc8s9jktm().b[27][2]++;
          const pieData =
          /* istanbul ignore next */
          (cov_2oc8s9jktm().s[110]++, Object.entries(data).map(([key, value], index) => {
            /* istanbul ignore next */
            cov_2oc8s9jktm().f[34]++;
            cov_2oc8s9jktm().s[111]++;
            return {
              name: key,
              value: value,
              fill: ["#4F46E5", "#10B981", "#F59E0B", "#EF4444", "#8B5CF6"][index % 5]
            };
          }));
          /* istanbul ignore next */
          cov_2oc8s9jktm().s[112]++;
          return /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.ResponsiveContainer, {
            width: "100%",
            height: 200,
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_recharts.PieChart, {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Pie, {
                data: pieData,
                cx: "50%",
                cy: "50%",
                innerRadius: config.size === "small" ?
                /* istanbul ignore next */
                (cov_2oc8s9jktm().b[28][0]++, 30) :
                /* istanbul ignore next */
                (cov_2oc8s9jktm().b[28][1]++, 40),
                outerRadius: config.size === "small" ?
                /* istanbul ignore next */
                (cov_2oc8s9jktm().b[29][0]++, 60) :
                /* istanbul ignore next */
                (cov_2oc8s9jktm().b[29][1]++, 80),
                dataKey: "value",
                label: ({
                  name,
                  percent
                }) => {
                  /* istanbul ignore next */
                  cov_2oc8s9jktm().f[35]++;
                  cov_2oc8s9jktm().s[113]++;
                  return `${name}: ${(percent * 100).toFixed(0)}%`;
                },
                labelLine: false,
                fontSize: 12,
                fill: "#8884d8",
                children: pieData.map((entry, index) => {
                  /* istanbul ignore next */
                  cov_2oc8s9jktm().f[36]++;
                  cov_2oc8s9jktm().s[114]++;
                  return /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Cell, {
                    fill: entry.fill
                  }, `cell-${index}`);
                })
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Tooltip, {})]
            })
          });
        case "response-time":
          /* istanbul ignore next */
          cov_2oc8s9jktm().b[27][3]++;
          cov_2oc8s9jktm().s[115]++;
          return /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.ResponsiveContainer, {
            width: "100%",
            height: 200,
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_recharts.LineChart, {
              data: data,
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.CartesianGrid, {
                strokeDasharray: "3 3",
                stroke: "#333"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.XAxis, {
                dataKey: "time",
                stroke: "#666",
                fontSize: 12
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.YAxis, {
                stroke: "#666",
                fontSize: 12
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Tooltip, {
                contentStyle: {
                  backgroundColor: "var(--bg-secondary)",
                  border: "1px solid var(--bg-tertiary)",
                  borderRadius: "8px"
                }
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Legend, {}), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Line, {
                type: "monotone",
                dataKey: "avgResponse",
                stroke: "#4F46E5",
                strokeWidth: 2,
                name: "Avg Response"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Line, {
                type: "monotone",
                dataKey: "p95Response",
                stroke: "#F59E0B",
                strokeWidth: 2,
                name: "95th Percentile"
              })]
            })
          });
        case "turn-taking":
          /* istanbul ignore next */
          cov_2oc8s9jktm().b[27][4]++;
          cov_2oc8s9jktm().s[116]++;
          return /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.ResponsiveContainer, {
            width: "100%",
            height: 200,
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_recharts.BarChart, {
              data: data,
              layout: "horizontal",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.CartesianGrid, {
                strokeDasharray: "3 3",
                stroke: "#333"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.XAxis, {
                type: "number",
                stroke: "#666",
                fontSize: 12
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.YAxis, {
                dataKey: "agent",
                type: "category",
                stroke: "#666",
                fontSize: 12,
                width: 80
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Tooltip, {
                contentStyle: {
                  backgroundColor: "var(--bg-secondary)",
                  border: "1px solid var(--bg-tertiary)",
                  borderRadius: "8px"
                }
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Legend, {}), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Bar, {
                dataKey: "initiates",
                fill: "#4F46E5",
                name: "Initiates"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Bar, {
                dataKey: "responds",
                fill: "#10B981",
                name: "Responds"
              })]
            })
          });
        default:
          /* istanbul ignore next */
          cov_2oc8s9jktm().b[27][5]++;
          cov_2oc8s9jktm().s[117]++;
          return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "text-center text-[var(--text-secondary)]",
            children: "No data available"
          });
      }
    };
    /* istanbul ignore next */
    cov_2oc8s9jktm().s[118]++;
    return /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
      className: "widget-container h-full",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
        className: "pb-2",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardTitle, {
          className: "widget-title flex items-center justify-between",
          children: [config.title, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center gap-1",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
              variant: "ghost",
              size: "sm",
              className: "h-6 w-6 p-0",
              onClick: () => {
                /* istanbul ignore next */
                cov_2oc8s9jktm().f[37]++;
                cov_2oc8s9jktm().s[119]++;
                return setExpandedWidget(expandedWidget === config.id ?
                /* istanbul ignore next */
                (cov_2oc8s9jktm().b[30][0]++, null) :
                /* istanbul ignore next */
                (cov_2oc8s9jktm().b[30][1]++, config.id));
              },
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Maximize2, {
                className: "h-3 w-3"
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
              variant: "ghost",
              size: "sm",
              className: "h-6 w-6 p-0",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.MoreVertical, {
                className: "h-3 w-3"
              })
            })]
          })]
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
        children: renderChart()
      })]
    });
  };
  /* istanbul ignore next */
  cov_2oc8s9jktm().s[120]++;
  const getWidgetSizeClass = size => {
    /* istanbul ignore next */
    cov_2oc8s9jktm().f[38]++;
    cov_2oc8s9jktm().s[121]++;
    switch (size) {
      case "small":
        /* istanbul ignore next */
        cov_2oc8s9jktm().b[31][0]++;
        cov_2oc8s9jktm().s[122]++;
        return "col-span-1 row-span-1";
      case "medium":
        /* istanbul ignore next */
        cov_2oc8s9jktm().b[31][1]++;
        cov_2oc8s9jktm().s[123]++;
        return "col-span-2 row-span-1";
      case "large":
        /* istanbul ignore next */
        cov_2oc8s9jktm().b[31][2]++;
        cov_2oc8s9jktm().s[124]++;
        return "col-span-3 row-span-2";
      default:
        /* istanbul ignore next */
        cov_2oc8s9jktm().b[31][3]++;
        cov_2oc8s9jktm().s[125]++;
        return "col-span-1 row-span-1";
    }
  };
  /* istanbul ignore next */
  cov_2oc8s9jktm().s[126]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "p-6 h-full bg-[var(--bg-primary)]",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex items-center justify-between mb-6",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
          className: "font-ui text-xl font-semibold text-[var(--text-primary)]",
          children: "Analytics Dashboard"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "font-ui text-sm text-[var(--text-secondary)] mt-1",
          children: "Real-time system metrics and insights"
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center gap-2",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_badge.Badge, {
          variant: "outline",
          className: "bg-[var(--bg-secondary)] border-[var(--bg-tertiary)]",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Activity, {
            className: "w-3 h-3 mr-1"
          }), "Live"]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
          variant: "outline",
          size: "sm",
          onClick: () => {
            /* istanbul ignore next */
            cov_2oc8s9jktm().f[39]++;
            cov_2oc8s9jktm().s[127]++;
            return setRefreshTimestamp(Date.now());
          },
          className: "bg-[var(--bg-secondary)] border-[var(--bg-tertiary)]",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.RotateCcw, {
            className: "w-4 h-4"
          })
        })]
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "grid grid-cols-4 gap-4 h-[calc(100%-120px)] auto-rows-fr",
      children: widgets.map(widget => {
        /* istanbul ignore next */
        cov_2oc8s9jktm().f[40]++;
        cov_2oc8s9jktm().s[128]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_framermotion.motion.div, {
          className: getWidgetSizeClass(widget.size),
          layout: true,
          initial: {
            opacity: 0,
            scale: 0.9
          },
          animate: {
            opacity: 1,
            scale: 1
          },
          transition: {
            duration: 0.3
          },
          children: widget.type === "metric" ?
          /* istanbul ignore next */
          (/*#__PURE__*/cov_2oc8s9jktm().b[32][0]++, (0, _jsxruntime.jsx)(MetricWidget, {
            config: widget,
            metric:
            /* istanbul ignore next */
            (cov_2oc8s9jktm().b[33][0]++, metrics[widget.id.replace("-", "")]) ||
            /* istanbul ignore next */
            (cov_2oc8s9jktm().b[33][1]++, metrics.conversationRate)
          })) :
          /* istanbul ignore next */
          (/*#__PURE__*/cov_2oc8s9jktm().b[32][1]++, (0, _jsxruntime.jsx)(ChartWidget, {
            config: widget
          }))
        }, widget.id);
      })
    }),
    /* istanbul ignore next */
    (cov_2oc8s9jktm().b[34][0]++, expandedWidget) &&
    /* istanbul ignore next */
    (cov_2oc8s9jktm().b[34][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_framermotion.motion.div, {
      initial: {
        opacity: 0
      },
      animate: {
        opacity: 1
      },
      exit: {
        opacity: 0
      },
      className: "fixed inset-0 bg-black/50 z-50 flex items-center justify-center p-8",
      onClick: () => {
        /* istanbul ignore next */
        cov_2oc8s9jktm().f[41]++;
        cov_2oc8s9jktm().s[129]++;
        return setExpandedWidget(null);
      },
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_framermotion.motion.div, {
        initial: {
          scale: 0.9
        },
        animate: {
          scale: 1
        },
        exit: {
          scale: 0.9
        },
        className: "bg-[var(--bg-secondary)] border border-[var(--bg-tertiary)] rounded-lg p-6 max-w-4xl w-full h-[80vh]",
        onClick: e => {
          /* istanbul ignore next */
          cov_2oc8s9jktm().f[42]++;
          cov_2oc8s9jktm().s[130]++;
          return e.stopPropagation();
        },
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex items-center justify-between mb-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
            className: "text-xl font-semibold text-[var(--text-primary)]",
            children: widgets.find(w => {
              /* istanbul ignore next */
              cov_2oc8s9jktm().f[43]++;
              cov_2oc8s9jktm().s[131]++;
              return w.id === expandedWidget;
            })?.title
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
            variant: "ghost",
            onClick: () => {
              /* istanbul ignore next */
              cov_2oc8s9jktm().f[44]++;
              cov_2oc8s9jktm().s[132]++;
              return setExpandedWidget(null);
            },
            className: "text-[var(--text-secondary)] hover:text-[var(--text-primary)]",
            children: "✕"
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "h-[calc(100%-60px)]",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(ChartWidget, {
            config: widgets.find(w => {
              /* istanbul ignore next */
              cov_2oc8s9jktm().f[45]++;
              cov_2oc8s9jktm().s[133]++;
              return w.id === expandedWidget;
            })
          })
        })]
      })
    }))]
  });
};
const _default =
/* istanbul ignore next */
(cov_2oc8s9jktm().s[134]++, AnalyticsWidgetSystem);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
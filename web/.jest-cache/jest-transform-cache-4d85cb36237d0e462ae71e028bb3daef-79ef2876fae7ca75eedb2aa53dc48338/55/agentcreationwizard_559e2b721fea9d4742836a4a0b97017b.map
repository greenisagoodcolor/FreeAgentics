{"version":3,"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/components/ui/agent-creation-wizard.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useCallback } from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport {\n  CheckCircle2,\n  ArrowLeft,\n  ArrowRight,\n  Rocket,\n  Info,\n  AlertTriangle,\n  Brain,\n} from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\nimport {\n  AgentTemplateSelector,\n  AgentTemplate,\n  AGENT_TEMPLATES,\n} from \"./agent-template-selector\";\nimport {\n  AgentConfigurationForm,\n  AgentConfigurationData,\n} from \"./agent-configuration-form\";\n\n// Wizard step definitions\nconst WIZARD_STEPS = [\n  {\n    id: \"template\",\n    title: \"Select Template\",\n    description: \"Choose an Active Inference agent template\",\n    icon: Brain,\n  },\n  {\n    id: \"configure\",\n    title: \"Configure Parameters\",\n    description: \"Set mathematical and behavioral parameters\",\n    icon: CheckCircle2,\n  },\n  {\n    id: \"review\",\n    title: \"Review & Deploy\",\n    description: \"Review configuration and create agent\",\n    icon: Rocket,\n  },\n] as const;\n\ntype WizardStep = (typeof WIZARD_STEPS)[number][\"id\"];\n\ninterface AgentCreationWizardProps {\n  onAgentCreate: (\n    template: AgentTemplate,\n    configuration: AgentConfigurationData,\n  ) => Promise<void>;\n  onCancel: () => void;\n  className?: string;\n  initialTemplate?: AgentTemplate;\n}\n\nexport function AgentCreationWizard({\n  onAgentCreate,\n  onCancel,\n  className,\n  initialTemplate,\n}: AgentCreationWizardProps) {\n  const [currentStep, setCurrentStep] = useState<WizardStep>(\"template\");\n  const [selectedTemplate, setSelectedTemplate] =\n    useState<AgentTemplate | null>(initialTemplate || null);\n  const [configurationData, setConfigurationData] =\n    useState<AgentConfigurationData | null>(null);\n  const [isCreating, setIsCreating] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // Calculate progress percentage\n  const stepIndex = WIZARD_STEPS.findIndex((step) => step.id === currentStep);\n  const progress = ((stepIndex + 1) / WIZARD_STEPS.length) * 100;\n\n  // Navigation helpers\n  const canGoNext = () => {\n    switch (currentStep) {\n      case \"template\":\n        return selectedTemplate !== null;\n      case \"configure\":\n        return configurationData !== null;\n      case \"review\":\n        return true;\n      default:\n        return false;\n    }\n  };\n\n  const canGoPrevious = () => {\n    return stepIndex > 0;\n  };\n\n  const goNext = useCallback(() => {\n    const nextIndex = stepIndex + 1;\n    if (nextIndex < WIZARD_STEPS.length) {\n      setCurrentStep(WIZARD_STEPS[nextIndex].id);\n      setError(null);\n    }\n  }, [stepIndex]);\n\n  const goPrevious = () => {\n    const prevIndex = stepIndex - 1;\n    if (prevIndex >= 0) {\n      setCurrentStep(WIZARD_STEPS[prevIndex].id);\n      setError(null);\n    }\n  };\n\n  // Event handlers\n  const handleTemplateSelect = useCallback((template: AgentTemplate) => {\n    setSelectedTemplate(template);\n    setConfigurationData(null); // Reset configuration when template changes\n    setError(null);\n  }, []);\n\n  const handleConfiguration = useCallback(\n    (data: AgentConfigurationData) => {\n      setConfigurationData(data);\n      setError(null);\n      goNext(); // Auto-advance to review step\n    },\n    [goNext],\n  );\n\n  const handleCreateAgent = async () => {\n    if (!selectedTemplate || !configurationData) {\n      setError(\"Missing template or configuration data\");\n      return;\n    }\n\n    setIsCreating(true);\n    setError(null);\n\n    try {\n      await onAgentCreate(selectedTemplate, configurationData);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : \"Failed to create agent\");\n    } finally {\n      setIsCreating(false);\n    }\n  };\n\n  const getCurrentStepInfo = () => {\n    return WIZARD_STEPS.find((step) => step.id === currentStep);\n  };\n\n  const stepInfo = getCurrentStepInfo();\n\n  return (\n    <div className={cn(\"max-w-6xl mx-auto space-y-6\", className)}>\n      {/* Header */}\n      <div className=\"space-y-4\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-3xl font-bold\">\n              Create Active Inference Agent\n            </h1>\n            <p className=\"text-muted-foreground\">\n              Design and deploy a mathematically rigorous AI agent\n            </p>\n          </div>\n          <Button variant=\"outline\" onClick={onCancel}>\n            Cancel\n          </Button>\n        </div>\n\n        {/* Progress and Steps */}\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"text-sm text-muted-foreground\">\n              Step {stepIndex + 1} of {WIZARD_STEPS.length}\n            </div>\n            <div className=\"text-sm text-muted-foreground\">\n              {Math.round(progress)}% Complete\n            </div>\n          </div>\n          <Progress value={progress} className=\"w-full\" />\n\n          {/* Step Navigation */}\n          <div className=\"flex items-center justify-center space-x-4\">\n            {WIZARD_STEPS.map((step, index) => {\n              const isActive = step.id === currentStep;\n              const isCompleted = index < stepIndex;\n              const Icon = step.icon;\n\n              return (\n                <div\n                  key={step.id}\n                  className={cn(\n                    \"flex items-center space-x-2\",\n                    isActive && \"text-primary\",\n                    isCompleted && \"text-green-600\",\n                    !isActive && !isCompleted && \"text-muted-foreground\",\n                  )}\n                >\n                  <div\n                    className={cn(\n                      \"flex items-center justify-center w-8 h-8 rounded-full border-2\",\n                      isActive &&\n                        \"border-primary bg-primary text-primary-foreground\",\n                      isCompleted && \"border-green-600 bg-green-600 text-white\",\n                      !isActive && !isCompleted && \"border-muted\",\n                    )}\n                  >\n                    {isCompleted ? (\n                      <CheckCircle2 className=\"h-4 w-4\" />\n                    ) : (\n                      <Icon className=\"h-4 w-4\" />\n                    )}\n                  </div>\n                  <span className=\"text-sm font-medium\">{step.title}</span>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n\n      {/* Error Display */}\n      {error && (\n        <Alert variant=\"destructive\">\n          <AlertTriangle className=\"h-4 w-4\" />\n          <AlertDescription>{error}</AlertDescription>\n        </Alert>\n      )}\n\n      {/* Current Step Content */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            {stepInfo && <stepInfo.icon className=\"h-5 w-5\" />}\n            {stepInfo?.title}\n          </CardTitle>\n          <CardDescription>{stepInfo?.description}</CardDescription>\n        </CardHeader>\n        <CardContent>\n          {/* Template Selection Step */}\n          {currentStep === \"template\" && (\n            <AgentTemplateSelector\n              selectedTemplate={selectedTemplate}\n              onTemplateSelect={handleTemplateSelect}\n              showMathematicalDetails={true}\n            />\n          )}\n\n          {/* Configuration Step */}\n          {currentStep === \"configure\" && selectedTemplate && (\n            <AgentConfigurationForm\n              template={selectedTemplate}\n              onSubmit={handleConfiguration}\n              onCancel={goPrevious}\n              isLoading={false}\n            />\n          )}\n\n          {/* Review Step */}\n          {currentStep === \"review\" &&\n            selectedTemplate &&\n            configurationData && (\n              <div className=\"space-y-6\">\n                {/* Template Summary */}\n                <div className=\"space-y-4\">\n                  <h3 className=\"text-lg font-semibold\">\n                    Agent Configuration Summary\n                  </h3>\n\n                  <div className=\"grid gap-4 md:grid-cols-2\">\n                    {/* Template Info */}\n                    <Card>\n                      <CardHeader>\n                        <CardTitle className=\"text-base flex items-center gap-2\">\n                          {selectedTemplate.icon}\n                          Selected Template\n                        </CardTitle>\n                      </CardHeader>\n                      <CardContent className=\"space-y-2\">\n                        <div className=\"flex items-center justify-between\">\n                          <span className=\"font-medium\">\n                            {selectedTemplate.name}\n                          </span>\n                          <Badge variant=\"outline\">\n                            {selectedTemplate.complexity}\n                          </Badge>\n                        </div>\n                        <p className=\"text-sm text-muted-foreground\">\n                          {selectedTemplate.description}\n                        </p>\n                        <div className=\"grid grid-cols-2 gap-2 text-xs\">\n                          <div>\n                            <span className=\"font-medium\">States:</span>{\" \"}\n                            {\n                              selectedTemplate.mathematicalFoundation\n                                .beliefsStates\n                            }\n                          </div>\n                          <div>\n                            <span className=\"font-medium\">Actions:</span>{\" \"}\n                            {\n                              selectedTemplate.mathematicalFoundation\n                                .actionSpaces\n                            }\n                          </div>\n                        </div>\n                      </CardContent>\n                    </Card>\n\n                    {/* Configuration Info */}\n                    <Card>\n                      <CardHeader>\n                        <CardTitle className=\"text-base\">\n                          Agent Configuration\n                        </CardTitle>\n                      </CardHeader>\n                      <CardContent className=\"space-y-2\">\n                        <div>\n                          <span className=\"font-medium\">Name:</span>{\" \"}\n                          {configurationData.name}\n                        </div>\n                        {configurationData.description && (\n                          <div>\n                            <span className=\"font-medium\">Description:</span>{\" \"}\n                            <span className=\"text-sm\">\n                              {configurationData.description}\n                            </span>\n                          </div>\n                        )}\n                        <div className=\"grid grid-cols-2 gap-2 text-xs\">\n                          <div>\n                            <span className=\"font-medium\">\n                              Sensory Precision:\n                            </span>{\" \"}\n                            {\n                              configurationData.mathematics.precision\n                                .sensoryPrecision\n                            }\n                          </div>\n                          <div>\n                            <span className=\"font-medium\">\n                              Policy Precision:\n                            </span>{\" \"}\n                            {\n                              configurationData.mathematics.precision\n                                .policyPrecision\n                            }\n                          </div>\n                          <div>\n                            <span className=\"font-medium\">\n                              Planning Horizon:\n                            </span>{\" \"}\n                            {configurationData.mathematics.planningHorizon}\n                          </div>\n                          <div>\n                            <span className=\"font-medium\">Learning:</span>{\" \"}\n                            {configurationData.mathematics.enableLearning\n                              ? \"Enabled\"\n                              : \"Disabled\"}\n                          </div>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  </div>\n\n                  {/* Mathematical Parameters */}\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"text-base\">\n                        Mathematical Foundation\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n                        <div className=\"space-y-1\">\n                          <div className=\"font-medium text-muted-foreground\">\n                            A Matrix\n                          </div>\n                          <div>\n                            {\n                              configurationData.mathematics.matrices.aMatrix\n                                .rows\n                            }{\" \"}\n                            ×{\" \"}\n                            {\n                              configurationData.mathematics.matrices.aMatrix\n                                .cols\n                            }\n                          </div>\n                        </div>\n                        <div className=\"space-y-1\">\n                          <div className=\"font-medium text-muted-foreground\">\n                            B Matrix\n                          </div>\n                          <div>\n                            {\n                              configurationData.mathematics.matrices.bMatrix\n                                .observations\n                            }{\" \"}\n                            ×{\" \"}\n                            {\n                              configurationData.mathematics.matrices.bMatrix\n                                .states\n                            }\n                          </div>\n                        </div>\n                        <div className=\"space-y-1\">\n                          <div className=\"font-medium text-muted-foreground\">\n                            Memory\n                          </div>\n                          <div>\n                            {configurationData.mathematics.memoryCapacity.toLocaleString()}\n                          </div>\n                        </div>\n                        <div className=\"space-y-1\">\n                          <div className=\"font-medium text-muted-foreground\">\n                            Hierarchical\n                          </div>\n                          <div>\n                            {configurationData.mathematics.useHierarchical\n                              ? \"Yes\"\n                              : \"No\"}\n                          </div>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n\n                  {/* Expert Review Box */}\n                  <Alert>\n                    <Info className=\"h-4 w-4\" />\n                    <AlertDescription>\n                      <div className=\"space-y-2\">\n                        <p className=\"font-semibold\">Ready for Expert Review</p>\n                        <p className=\"text-sm\">\n                          This configuration follows Active Inference\n                          mathematical principles and is ready for deployment.\n                          The agent will use Bayesian belief updating with\n                          precision parameters optimized for{\" \"}\n                          {selectedTemplate.category} behavior.\n                        </p>\n                      </div>\n                    </AlertDescription>\n                  </Alert>\n                </div>\n              </div>\n            )}\n        </CardContent>\n      </Card>\n\n      {/* Navigation Footer */}\n      <div className=\"flex justify-between items-center\">\n        <div className=\"flex items-center space-x-2\">\n          {canGoPrevious() && (\n            <Button variant=\"outline\" onClick={goPrevious}>\n              <ArrowLeft className=\"h-4 w-4 mr-2\" />\n              Previous\n            </Button>\n          )}\n        </div>\n\n        <div className=\"flex items-center space-x-2\">\n          {currentStep !== \"review\" && (\n            <Button\n              onClick={goNext}\n              disabled={!canGoNext()}\n              className=\"min-w-[100px]\"\n            >\n              Next\n              <ArrowRight className=\"h-4 w-4 ml-2\" />\n            </Button>\n          )}\n\n          {currentStep === \"review\" && (\n            <Button\n              onClick={handleCreateAgent}\n              disabled={isCreating || !selectedTemplate || !configurationData}\n              className=\"min-w-[140px]\"\n            >\n              {isCreating ? (\n                <>Creating...</>\n              ) : (\n                <>\n                  <Rocket className=\"h-4 w-4 mr-2\" />\n                  Create Agent\n                </>\n              )}\n            </Button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport type { WizardStep };\nexport { WIZARD_STEPS };\n"],"names":["AgentCreationWizard","WIZARD_STEPS","id","title","description","icon","Brain","CheckCircle2","Rocket","onAgentCreate","onCancel","className","initialTemplate","currentStep","setCurrentStep","useState","selectedTemplate","setSelectedTemplate","configurationData","setConfigurationData","isCreating","setIsCreating","error","setError","stepIndex","findIndex","step","progress","length","canGoNext","canGoPrevious","goNext","useCallback","nextIndex","goPrevious","prevIndex","handleTemplateSelect","template","handleConfiguration","data","handleCreateAgent","err","Error","message","getCurrentStepInfo","find","stepInfo","div","cn","h1","p","Button","variant","onClick","Math","round","Progress","value","map","index","isActive","isCompleted","Icon","span","Alert","AlertTriangle","AlertDescription","Card","CardHeader","CardTitle","CardDescription","CardContent","AgentTemplateSelector","onTemplateSelect","showMathematicalDetails","AgentConfigurationForm","onSubmit","isLoading","h3","name","Badge","complexity","mathematicalFoundation","beliefsStates","actionSpaces","mathematics","precision","sensoryPrecision","policyPrecision","planningHorizon","enableLearning","matrices","aMatrix","rows","cols","bMatrix","observations","states","memoryCapacity","toLocaleString","useHierarchical","Info","category","ArrowLeft","disabled","ArrowRight"],"mappings":"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"}
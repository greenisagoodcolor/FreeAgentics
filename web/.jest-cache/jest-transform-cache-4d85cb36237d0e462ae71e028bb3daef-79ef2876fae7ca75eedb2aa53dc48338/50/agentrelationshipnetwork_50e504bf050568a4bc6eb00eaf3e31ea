2e560a743cf43d8653077a0adc645747
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return AgentRelationshipNetwork;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _card = require("./ui/card");
const _lucidereact = require("lucide-react");
const _react = require("react");
function AgentRelationshipNetwork({ agents }) {
    const canvasRef = (0, _react.useRef)(null);
    // Generate mock relationship data
    const generateRelationships = (0, _react.useCallback)(()=>{
        const links = [];
        // Create some random relationships between agents
        agents.forEach((agent, i)=>{
            // Each agent has 1-3 relationships
            const numRelationships = Math.floor(Math.random() * 3) + 1;
            for(let j = 0; j < numRelationships; j++){
                const targetIndex = Math.floor(Math.random() * agents.length);
                if (targetIndex !== i) {
                    const existingLink = links.find((l)=>l.source === agent.id && l.target === agents[targetIndex].id || l.target === agent.id && l.source === agents[targetIndex].id);
                    if (!existingLink) {
                        links.push({
                            source: agent.id,
                            target: agents[targetIndex].id,
                            strength: Math.random()
                        });
                    }
                }
            }
        });
        return links;
    }, [
        agents
    ]);
    (0, _react.useEffect)(()=>{
        const canvas = canvasRef.current;
        if (!canvas) return;
        const ctx = canvas.getContext("2d");
        if (!ctx) return;
        // Set canvas size
        const rect = canvas.getBoundingClientRect();
        canvas.width = rect.width;
        canvas.height = rect.height;
        const centerX = canvas.width / 2;
        const centerY = canvas.height / 2;
        const radius = Math.min(centerX, centerY) - 50;
        // Position nodes in a circle
        const nodes = agents.map((agent, index)=>{
            const angle = index / agents.length * 2 * Math.PI;
            return {
                id: agent.id,
                name: agent.name,
                x: centerX + radius * Math.cos(angle),
                y: centerY + radius * Math.sin(angle),
                color: agent.color
            };
        });
        const links = generateRelationships();
        // Clear canvas
        ctx.clearRect(0, 0, canvas.width, canvas.height);
        // Draw links
        links.forEach((link)=>{
            const sourceNode = nodes.find((n)=>n.id === link.source);
            const targetNode = nodes.find((n)=>n.id === link.target);
            if (sourceNode && targetNode) {
                ctx.beginPath();
                ctx.moveTo(sourceNode.x, sourceNode.y);
                ctx.lineTo(targetNode.x, targetNode.y);
                ctx.strokeStyle = `rgba(147, 51, 234, ${link.strength * 0.5})`; // Purple with varying opacity
                ctx.lineWidth = link.strength * 3;
                ctx.stroke();
            }
        });
        // Draw nodes
        nodes.forEach((node)=>{
            // Node circle
            ctx.beginPath();
            ctx.arc(node.x, node.y, 20, 0, 2 * Math.PI);
            ctx.fillStyle = node.color;
            ctx.fill();
            ctx.strokeStyle = "#ffffff";
            ctx.lineWidth = 2;
            ctx.stroke();
            // Node label
            ctx.fillStyle = "#ffffff";
            ctx.font = "12px Arial";
            ctx.textAlign = "center";
            ctx.fillText(node.name, node.x, node.y + 35);
        });
        // Draw legend
        ctx.fillStyle = "#ffffff";
        ctx.font = "14px Arial";
        ctx.textAlign = "left";
        ctx.fillText("Relationship Strength", 20, 30);
        // Legend gradient
        const gradient = ctx.createLinearGradient(20, 40, 120, 40);
        gradient.addColorStop(0, "rgba(147, 51, 234, 0.1)");
        gradient.addColorStop(1, "rgba(147, 51, 234, 0.5)");
        ctx.fillStyle = gradient;
        ctx.fillRect(20, 40, 100, 10);
        ctx.fillStyle = "#ffffff";
        ctx.font = "10px Arial";
        ctx.fillText("Weak", 20, 65);
        ctx.fillText("Strong", 85, 65);
    }, [
        agents,
        generateRelationships
    ]);
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: "h-full flex flex-col",
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardHeader, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center gap-2",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Users, {
                            className: "w-5 h-5"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardTitle, {
                            children: "Agent Relationships"
                        })
                    ]
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardContent, {
                className: "flex-1 relative",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("canvas", {
                        ref: canvasRef,
                        className: "absolute inset-0 w-full h-full"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "absolute bottom-4 left-4 right-4 bg-black/50 backdrop-blur-sm rounded-lg p-4",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "grid grid-cols-2 gap-4 text-sm",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                            className: "text-muted-foreground",
                                            children: "Total Agents"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                            className: "font-medium",
                                            children: agents.length
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                            className: "text-muted-foreground",
                                            children: "Active Relationships"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                            className: "font-medium",
                                            children: generateRelationships().length
                                        })
                                    ]
                                })
                            ]
                        })
                    })
                ]
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,
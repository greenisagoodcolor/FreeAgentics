c1eccdf820d8e25eb7eedc85e1a63dbd
"use client";
"use strict";

/* istanbul ignore next */
function cov_225r6pydyk() {
  var path = "/Users/matthewmoroney/builds/FreeAgentics/web/components/GlobalKnowledgeGraph.tsx";
  var hash = "4cb8ed2d5ab4da3b357f832c4586aff4e1428763";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewmoroney/builds/FreeAgentics/web/components/GlobalKnowledgeGraph.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 36
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "5": {
        start: {
          line: 14,
          column: 14
        },
        end: {
          line: 14,
          column: 34
        }
      },
      "6": {
        start: {
          line: 15,
          column: 16
        },
        end: {
          line: 15,
          column: 38
        }
      },
      "7": {
        start: {
          line: 16,
          column: 21
        },
        end: {
          line: 16,
          column: 44
        }
      },
      "8": {
        start: {
          line: 17,
          column: 35
        },
        end: {
          line: 17,
          column: 85
        }
      },
      "9": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 21,
          column: 6
        }
      },
      "10": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 33
        }
      },
      "11": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 33
        }
      },
      "12": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 25
        }
      },
      "13": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 29
        }
      },
      "14": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 30
        }
      },
      "15": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 30
        }
      },
      "16": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 30
        }
      },
      "17": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 30
        }
      },
      "18": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 39,
          column: 9
        }
      },
      "19": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 25
        }
      },
      "20": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 44,
          column: 9
        }
      },
      "21": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 36
        }
      },
      "22": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 24
        }
      },
      "23": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 48,
          column: 9
        }
      },
      "24": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 29
        }
      },
      "25": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 54
        }
      },
      "26": {
        start: {
          line: 49,
          column: 42
        },
        end: {
          line: 49,
          column: 54
        }
      },
      "27": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 54
        }
      },
      "28": {
        start: {
          line: 50,
          column: 42
        },
        end: {
          line: 50,
          column: 54
        }
      },
      "29": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 54
        }
      },
      "30": {
        start: {
          line: 51,
          column: 42
        },
        end: {
          line: 51,
          column: 54
        }
      },
      "31": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 55
        }
      },
      "32": {
        start: {
          line: 52,
          column: 42
        },
        end: {
          line: 52,
          column: 55
        }
      },
      "33": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 21
        }
      },
      "34": {
        start: {
          line: 56,
          column: 18
        },
        end: {
          line: 56,
          column: 33
        }
      },
      "35": {
        start: {
          line: 57,
          column: 18
        },
        end: {
          line: 57,
          column: 33
        }
      },
      "36": {
        start: {
          line: 58,
          column: 18
        },
        end: {
          line: 58,
          column: 41
        }
      },
      "37": {
        start: {
          line: 59,
          column: 18
        },
        end: {
          line: 59,
          column: 42
        }
      },
      "38": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 65,
          column: 26
        }
      },
      "39": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 71,
          column: 26
        }
      },
      "40": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 77,
          column: 26
        }
      },
      "41": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 83,
          column: 26
        }
      },
      "42": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 28
        }
      },
      "43": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 222
        }
      },
      "44": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 93,
          column: 9
        }
      },
      "45": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 25
        }
      },
      "46": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "47": {
        start: {
          line: 96,
          column: 23
        },
        end: {
          line: 96,
          column: 40
        }
      },
      "48": {
        start: {
          line: 97,
          column: 23
        },
        end: {
          line: 97,
          column: 40
        }
      },
      "49": {
        start: {
          line: 98,
          column: 31
        },
        end: {
          line: 98,
          column: 48
        }
      },
      "50": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 101,
          column: 13
        }
      },
      "51": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 100,
          column: 39
        }
      },
      "52": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "53": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 47
        }
      },
      "54": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 47
        }
      },
      "55": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 47
        }
      },
      "56": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 47
        }
      },
      "57": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 21
        }
      },
      "58": {
        start: {
          line: 113,
          column: 19
        },
        end: {
          line: 113,
          column: 54
        }
      },
      "59": {
        start: {
          line: 114,
          column: 19
        },
        end: {
          line: 114,
          column: 54
        }
      },
      "60": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 66
        }
      },
      "61": {
        start: {
          line: 115,
          column: 53
        },
        end: {
          line: 115,
          column: 66
        }
      },
      "62": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 67
        }
      },
      "63": {
        start: {
          line: 116,
          column: 54
        },
        end: {
          line: 116,
          column: 67
        }
      },
      "64": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 51
        }
      },
      "65": {
        start: {
          line: 117,
          column: 39
        },
        end: {
          line: 117,
          column: 51
        }
      },
      "66": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 52
        }
      },
      "67": {
        start: {
          line: 118,
          column: 40
        },
        end: {
          line: 118,
          column: 52
        }
      },
      "68": {
        start: {
          line: 119,
          column: 33
        },
        end: {
          line: 119,
          column: 148
        }
      },
      "69": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 63
        }
      },
      "70": {
        start: {
          line: 124,
          column: 22
        },
        end: {
          line: 124,
          column: 46
        }
      },
      "71": {
        start: {
          line: 125,
          column: 25
        },
        end: {
          line: 125,
          column: 49
        }
      },
      "72": {
        start: {
          line: 126,
          column: 30
        },
        end: {
          line: 126,
          column: 54
        }
      },
      "73": {
        start: {
          line: 127,
          column: 30
        },
        end: {
          line: 127,
          column: 54
        }
      },
      "74": {
        start: {
          line: 128,
          column: 42
        },
        end: {
          line: 128,
          column: 68
        }
      },
      "75": {
        start: {
          line: 129,
          column: 38
        },
        end: {
          line: 129,
          column: 61
        }
      },
      "76": {
        start: {
          line: 130,
          column: 40
        },
        end: {
          line: 130,
          column: 67
        }
      },
      "77": {
        start: {
          line: 131,
          column: 38
        },
        end: {
          line: 134,
          column: 6
        }
      },
      "78": {
        start: {
          line: 135,
          column: 32
        },
        end: {
          line: 138,
          column: 6
        }
      },
      "79": {
        start: {
          line: 139,
          column: 44
        },
        end: {
          line: 139,
          column: 70
        }
      },
      "80": {
        start: {
          line: 140,
          column: 52
        },
        end: {
          line: 140,
          column: 78
        }
      },
      "81": {
        start: {
          line: 142,
          column: 26
        },
        end: {
          line: 142,
          column: 50
        }
      },
      "82": {
        start: {
          line: 143,
          column: 58
        },
        end: {
          line: 143,
          column: 85
        }
      },
      "83": {
        start: {
          line: 144,
          column: 50
        },
        end: {
          line: 151,
          column: 6
        }
      },
      "84": {
        start: {
          line: 152,
          column: 46
        },
        end: {
          line: 152,
          column: 69
        }
      },
      "85": {
        start: {
          line: 153,
          column: 50
        },
        end: {
          line: 153,
          column: 76
        }
      },
      "86": {
        start: {
          line: 154,
          column: 42
        },
        end: {
          line: 154,
          column: 68
        }
      },
      "87": {
        start: {
          line: 155,
          column: 44
        },
        end: {
          line: 155,
          column: 71
        }
      },
      "88": {
        start: {
          line: 157,
          column: 23
        },
        end: {
          line: 157,
          column: 46
        }
      },
      "89": {
        start: {
          line: 158,
          column: 27
        },
        end: {
          line: 158,
          column: 50
        }
      },
      "90": {
        start: {
          line: 159,
          column: 33
        },
        end: {
          line: 159,
          column: 54
        }
      },
      "91": {
        start: {
          line: 160,
          column: 30
        },
        end: {
          line: 160,
          column: 59
        }
      },
      "92": {
        start: {
          line: 161,
          column: 28
        },
        end: {
          line: 161,
          column: 50
        }
      },
      "93": {
        start: {
          line: 162,
          column: 28
        },
        end: {
          line: 162,
          column: 50
        }
      },
      "94": {
        start: {
          line: 163,
          column: 27
        },
        end: {
          line: 163,
          column: 52
        }
      },
      "95": {
        start: {
          line: 164,
          column: 30
        },
        end: {
          line: 164,
          column: 59
        }
      },
      "96": {
        start: {
          line: 165,
          column: 30
        },
        end: {
          line: 165,
          column: 55
        }
      },
      "97": {
        start: {
          line: 167,
          column: 4
        },
        end: {
          line: 328,
          column: 7
        }
      },
      "98": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 168,
          column: 35
        }
      },
      "99": {
        start: {
          line: 168,
          column: 28
        },
        end: {
          line: 168,
          column: 35
        }
      },
      "100": {
        start: {
          line: 170,
          column: 26
        },
        end: {
          line: 170,
          column: 46
        }
      },
      "101": {
        start: {
          line: 171,
          column: 22
        },
        end: {
          line: 171,
          column: 51
        }
      },
      "102": {
        start: {
          line: 172,
          column: 23
        },
        end: {
          line: 172,
          column: 53
        }
      },
      "103": {
        start: {
          line: 173,
          column: 24
        },
        end: {
          line: 173,
          column: 33
        }
      },
      "104": {
        start: {
          line: 174,
          column: 24
        },
        end: {
          line: 174,
          column: 34
        }
      },
      "105": {
        start: {
          line: 176,
          column: 27
        },
        end: {
          line: 176,
          column: 29
        }
      },
      "106": {
        start: {
          line: 177,
          column: 24
        },
        end: {
          line: 177,
          column: 33
        }
      },
      "107": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 187,
          column: 11
        }
      },
      "108": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 186,
          column: 15
        }
      },
      "109": {
        start: {
          line: 180,
          column: 16
        },
        end: {
          line: 184,
          column: 19
        }
      },
      "110": {
        start: {
          line: 185,
          column: 16
        },
        end: {
          line: 185,
          column: 61
        }
      },
      "111": {
        start: {
          line: 185,
          column: 43
        },
        end: {
          line: 185,
          column: 59
        }
      },
      "112": {
        start: {
          line: 189,
          column: 34
        },
        end: {
          line: 189,
          column: 43
        }
      },
      "113": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 208,
          column: 11
        }
      },
      "114": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 207,
          column: 13
        }
      },
      "115": {
        start: {
          line: 192,
          column: 16
        },
        end: {
          line: 200,
          column: 19
        }
      },
      "116": {
        start: {
          line: 202,
          column: 32
        },
        end: {
          line: 202,
          column: 66
        }
      },
      "117": {
        start: {
          line: 203,
          column: 16
        },
        end: {
          line: 203,
          column: 48
        }
      },
      "118": {
        start: {
          line: 204,
          column: 16
        },
        end: {
          line: 206,
          column: 17
        }
      },
      "119": {
        start: {
          line: 205,
          column: 20
        },
        end: {
          line: 205,
          column: 51
        }
      },
      "120": {
        start: {
          line: 210,
          column: 25
        },
        end: {
          line: 259,
          column: 9
        }
      },
      "121": {
        start: {
          line: 213,
          column: 30
        },
        end: {
          line: 213,
          column: 65
        }
      },
      "122": {
        start: {
          line: 214,
          column: 31
        },
        end: {
          line: 214,
          column: 61
        }
      },
      "123": {
        start: {
          line: 215,
          column: 16
        },
        end: {
          line: 224,
          column: 18
        }
      },
      "124": {
        start: {
          line: 230,
          column: 30
        },
        end: {
          line: 230,
          column: 74
        }
      },
      "125": {
        start: {
          line: 231,
          column: 31
        },
        end: {
          line: 231,
          column: 60
        }
      },
      "126": {
        start: {
          line: 232,
          column: 16
        },
        end: {
          line: 241,
          column: 18
        }
      },
      "127": {
        start: {
          line: 247,
          column: 30
        },
        end: {
          line: 247,
          column: 64
        }
      },
      "128": {
        start: {
          line: 248,
          column: 31
        },
        end: {
          line: 248,
          column: 61
        }
      },
      "129": {
        start: {
          line: 249,
          column: 16
        },
        end: {
          line: 257,
          column: 18
        }
      },
      "130": {
        start: {
          line: 261,
          column: 25
        },
        end: {
          line: 261,
          column: 27
        }
      },
      "131": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 287,
          column: 11
        }
      },
      "132": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 286,
          column: 15
        }
      },
      "133": {
        start: {
          line: 265,
          column: 36
        },
        end: {
          line: 265,
          column: 93
        }
      },
      "134": {
        start: {
          line: 267,
          column: 16
        },
        end: {
          line: 272,
          column: 19
        }
      },
      "135": {
        start: {
          line: 274,
          column: 16
        },
        end: {
          line: 285,
          column: 19
        }
      },
      "136": {
        start: {
          line: 276,
          column: 39
        },
        end: {
          line: 276,
          column: 184
        }
      },
      "137": {
        start: {
          line: 276,
          column: 61
        },
        end: {
          line: 276,
          column: 183
        }
      },
      "138": {
        start: {
          line: 277,
          column: 20
        },
        end: {
          line: 284,
          column: 21
        }
      },
      "139": {
        start: {
          line: 278,
          column: 24
        },
        end: {
          line: 283,
          column: 27
        }
      },
      "140": {
        start: {
          line: 289,
          column: 27
        },
        end: {
          line: 289,
          column: 73
        }
      },
      "141": {
        start: {
          line: 289,
          column: 51
        },
        end: {
          line: 289,
          column: 72
        }
      },
      "142": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 318,
          column: 9
        }
      },
      "143": {
        start: {
          line: 290,
          column: 20
        },
        end: {
          line: 290,
          column: 21
        }
      },
      "144": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 317,
          column: 13
        }
      },
      "145": {
        start: {
          line: 291,
          column: 24
        },
        end: {
          line: 291,
          column: 29
        }
      },
      "146": {
        start: {
          line: 292,
          column: 31
        },
        end: {
          line: 292,
          column: 44
        }
      },
      "147": {
        start: {
          line: 293,
          column: 31
        },
        end: {
          line: 293,
          column: 44
        }
      },
      "148": {
        start: {
          line: 295,
          column: 35
        },
        end: {
          line: 295,
          column: 44
        }
      },
      "149": {
        start: {
          line: 296,
          column: 35
        },
        end: {
          line: 296,
          column: 44
        }
      },
      "150": {
        start: {
          line: 297,
          column: 16
        },
        end: {
          line: 304,
          column: 19
        }
      },
      "151": {
        start: {
          line: 298,
          column: 20
        },
        end: {
          line: 300,
          column: 21
        }
      },
      "152": {
        start: {
          line: 299,
          column: 24
        },
        end: {
          line: 299,
          column: 72
        }
      },
      "153": {
        start: {
          line: 299,
          column: 51
        },
        end: {
          line: 299,
          column: 70
        }
      },
      "154": {
        start: {
          line: 301,
          column: 20
        },
        end: {
          line: 303,
          column: 21
        }
      },
      "155": {
        start: {
          line: 302,
          column: 24
        },
        end: {
          line: 302,
          column: 72
        }
      },
      "156": {
        start: {
          line: 302,
          column: 51
        },
        end: {
          line: 302,
          column: 70
        }
      },
      "157": {
        start: {
          line: 306,
          column: 35
        },
        end: {
          line: 308,
          column: 52
        }
      },
      "158": {
        start: {
          line: 308,
          column: 32
        },
        end: {
          line: 308,
          column: 51
        }
      },
      "159": {
        start: {
          line: 309,
          column: 16
        },
        end: {
          line: 316,
          column: 17
        }
      },
      "160": {
        start: {
          line: 310,
          column: 20
        },
        end: {
          line: 315,
          column: 23
        }
      },
      "161": {
        start: {
          line: 321,
          column: 8
        },
        end: {
          line: 321,
          column: 71
        }
      },
      "162": {
        start: {
          line: 322,
          column: 8
        },
        end: {
          line: 322,
          column: 71
        }
      },
      "163": {
        start: {
          line: 323,
          column: 8
        },
        end: {
          line: 323,
          column: 41
        }
      },
      "164": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 324,
          column: 27
        }
      },
      "165": {
        start: {
          line: 325,
          column: 8
        },
        end: {
          line: 325,
          column: 27
        }
      },
      "166": {
        start: {
          line: 330,
          column: 4
        },
        end: {
          line: 363,
          column: 7
        }
      },
      "167": {
        start: {
          line: 331,
          column: 8
        },
        end: {
          line: 331,
          column: 51
        }
      },
      "168": {
        start: {
          line: 331,
          column: 44
        },
        end: {
          line: 331,
          column: 51
        }
      },
      "169": {
        start: {
          line: 333,
          column: 29
        },
        end: {
          line: 340,
          column: 15
        }
      },
      "170": {
        start: {
          line: 333,
          column: 48
        },
        end: {
          line: 340,
          column: 13
        }
      },
      "171": {
        start: {
          line: 342,
          column: 29
        },
        end: {
          line: 354,
          column: 26
        }
      },
      "172": {
        start: {
          line: 343,
          column: 27
        },
        end: {
          line: 343,
          column: 71
        }
      },
      "173": {
        start: {
          line: 343,
          column: 50
        },
        end: {
          line: 343,
          column: 70
        }
      },
      "174": {
        start: {
          line: 344,
          column: 27
        },
        end: {
          line: 344,
          column: 71
        }
      },
      "175": {
        start: {
          line: 344,
          column: 50
        },
        end: {
          line: 344,
          column: 70
        }
      },
      "176": {
        start: {
          line: 345,
          column: 12
        },
        end: {
          line: 348,
          column: 13
        }
      },
      "177": {
        start: {
          line: 346,
          column: 16
        },
        end: {
          line: 346,
          column: 97
        }
      },
      "178": {
        start: {
          line: 347,
          column: 16
        },
        end: {
          line: 347,
          column: 28
        }
      },
      "179": {
        start: {
          line: 349,
          column: 12
        },
        end: {
          line: 353,
          column: 14
        }
      },
      "180": {
        start: {
          line: 356,
          column: 8
        },
        end: {
          line: 359,
          column: 10
        }
      },
      "181": {
        start: {
          line: 365,
          column: 33
        },
        end: {
          line: 418,
          column: 6
        }
      },
      "182": {
        start: {
          line: 366,
          column: 27
        },
        end: {
          line: 366,
          column: 48
        }
      },
      "183": {
        start: {
          line: 367,
          column: 8
        },
        end: {
          line: 367,
          column: 32
        }
      },
      "184": {
        start: {
          line: 367,
          column: 25
        },
        end: {
          line: 367,
          column: 32
        }
      },
      "185": {
        start: {
          line: 368,
          column: 22
        },
        end: {
          line: 368,
          column: 38
        }
      },
      "186": {
        start: {
          line: 369,
          column: 26
        },
        end: {
          line: 369,
          column: 46
        }
      },
      "187": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 370,
          column: 31
        }
      },
      "188": {
        start: {
          line: 370,
          column: 24
        },
        end: {
          line: 370,
          column: 31
        }
      },
      "189": {
        start: {
          line: 372,
          column: 25
        },
        end: {
          line: 377,
          column: 9
        }
      },
      "190": {
        start: {
          line: 378,
          column: 25
        },
        end: {
          line: 378,
          column: 50
        }
      },
      "191": {
        start: {
          line: 380,
          column: 8
        },
        end: {
          line: 386,
          column: 11
        }
      },
      "192": {
        start: {
          line: 381,
          column: 12
        },
        end: {
          line: 385,
          column: 15
        }
      },
      "193": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 415,
          column: 11
        }
      },
      "194": {
        start: {
          line: 390,
          column: 27
        },
        end: {
          line: 390,
          column: 59
        }
      },
      "195": {
        start: {
          line: 391,
          column: 32
        },
        end: {
          line: 395,
          column: 14
        }
      },
      "196": {
        start: {
          line: 396,
          column: 12
        },
        end: {
          line: 414,
          column: 15
        }
      },
      "197": {
        start: {
          line: 397,
          column: 16
        },
        end: {
          line: 397,
          column: 44
        }
      },
      "198": {
        start: {
          line: 397,
          column: 37
        },
        end: {
          line: 397,
          column: 44
        }
      },
      "199": {
        start: {
          line: 399,
          column: 27
        },
        end: {
          line: 399,
          column: 44
        }
      },
      "200": {
        start: {
          line: 400,
          column: 27
        },
        end: {
          line: 400,
          column: 44
        }
      },
      "201": {
        start: {
          line: 401,
          column: 35
        },
        end: {
          line: 401,
          column: 52
        }
      },
      "202": {
        start: {
          line: 402,
          column: 33
        },
        end: {
          line: 402,
          column: 54
        }
      },
      "203": {
        start: {
          line: 403,
          column: 16
        },
        end: {
          line: 403,
          column: 43
        }
      },
      "204": {
        start: {
          line: 403,
          column: 36
        },
        end: {
          line: 403,
          column: 43
        }
      },
      "205": {
        start: {
          line: 405,
          column: 36
        },
        end: {
          line: 405,
          column: 63
        }
      },
      "206": {
        start: {
          line: 406,
          column: 42
        },
        end: {
          line: 406,
          column: 73
        }
      },
      "207": {
        start: {
          line: 408,
          column: 30
        },
        end: {
          line: 408,
          column: 100
        }
      },
      "208": {
        start: {
          line: 410,
          column: 31
        },
        end: {
          line: 410,
          column: 58
        }
      },
      "209": {
        start: {
          line: 411,
          column: 31
        },
        end: {
          line: 411,
          column: 58
        }
      },
      "210": {
        start: {
          line: 412,
          column: 16
        },
        end: {
          line: 412,
          column: 35
        }
      },
      "211": {
        start: {
          line: 413,
          column: 16
        },
        end: {
          line: 413,
          column: 35
        }
      },
      "212": {
        start: {
          line: 420,
          column: 34
        },
        end: {
          line: 443,
          column: 6
        }
      },
      "213": {
        start: {
          line: 421,
          column: 27
        },
        end: {
          line: 421,
          column: 48
        }
      },
      "214": {
        start: {
          line: 422,
          column: 8
        },
        end: {
          line: 422,
          column: 32
        }
      },
      "215": {
        start: {
          line: 422,
          column: 25
        },
        end: {
          line: 422,
          column: 32
        }
      },
      "216": {
        start: {
          line: 423,
          column: 8
        },
        end: {
          line: 440,
          column: 11
        }
      },
      "217": {
        start: {
          line: 424,
          column: 27
        },
        end: {
          line: 424,
          column: 38
        }
      },
      "218": {
        start: {
          line: 425,
          column: 27
        },
        end: {
          line: 425,
          column: 38
        }
      },
      "219": {
        start: {
          line: 427,
          column: 23
        },
        end: {
          line: 427,
          column: 42
        }
      },
      "220": {
        start: {
          line: 428,
          column: 23
        },
        end: {
          line: 428,
          column: 42
        }
      },
      "221": {
        start: {
          line: 429,
          column: 29
        },
        end: {
          line: 429,
          column: 57
        }
      },
      "222": {
        start: {
          line: 430,
          column: 12
        },
        end: {
          line: 430,
          column: 39
        }
      },
      "223": {
        start: {
          line: 430,
          column: 32
        },
        end: {
          line: 430,
          column: 39
        }
      },
      "224": {
        start: {
          line: 432,
          column: 26
        },
        end: {
          line: 432,
          column: 106
        }
      },
      "225": {
        start: {
          line: 434,
          column: 27
        },
        end: {
          line: 434,
          column: 48
        }
      },
      "226": {
        start: {
          line: 435,
          column: 27
        },
        end: {
          line: 435,
          column: 48
        }
      },
      "227": {
        start: {
          line: 436,
          column: 12
        },
        end: {
          line: 436,
          column: 32
        }
      },
      "228": {
        start: {
          line: 437,
          column: 12
        },
        end: {
          line: 437,
          column: 32
        }
      },
      "229": {
        start: {
          line: 438,
          column: 12
        },
        end: {
          line: 438,
          column: 32
        }
      },
      "230": {
        start: {
          line: 439,
          column: 12
        },
        end: {
          line: 439,
          column: 32
        }
      },
      "231": {
        start: {
          line: 445,
          column: 32
        },
        end: {
          line: 468,
          column: 6
        }
      },
      "232": {
        start: {
          line: 446,
          column: 27
        },
        end: {
          line: 446,
          column: 48
        }
      },
      "233": {
        start: {
          line: 447,
          column: 8
        },
        end: {
          line: 447,
          column: 32
        }
      },
      "234": {
        start: {
          line: 447,
          column: 25
        },
        end: {
          line: 447,
          column: 32
        }
      },
      "235": {
        start: {
          line: 448,
          column: 26
        },
        end: {
          line: 448,
          column: 46
        }
      },
      "236": {
        start: {
          line: 449,
          column: 8
        },
        end: {
          line: 449,
          column: 31
        }
      },
      "237": {
        start: {
          line: 449,
          column: 24
        },
        end: {
          line: 449,
          column: 31
        }
      },
      "238": {
        start: {
          line: 450,
          column: 24
        },
        end: {
          line: 450,
          column: 49
        }
      },
      "239": {
        start: {
          line: 451,
          column: 24
        },
        end: {
          line: 451,
          column: 50
        }
      },
      "240": {
        start: {
          line: 452,
          column: 8
        },
        end: {
          line: 465,
          column: 11
        }
      },
      "241": {
        start: {
          line: 454,
          column: 23
        },
        end: {
          line: 454,
          column: 39
        }
      },
      "242": {
        start: {
          line: 455,
          column: 23
        },
        end: {
          line: 455,
          column: 39
        }
      },
      "243": {
        start: {
          line: 456,
          column: 29
        },
        end: {
          line: 456,
          column: 57
        }
      },
      "244": {
        start: {
          line: 457,
          column: 12
        },
        end: {
          line: 457,
          column: 39
        }
      },
      "245": {
        start: {
          line: 457,
          column: 32
        },
        end: {
          line: 457,
          column: 39
        }
      },
      "246": {
        start: {
          line: 459,
          column: 26
        },
        end: {
          line: 459,
          column: 89
        }
      },
      "247": {
        start: {
          line: 461,
          column: 27
        },
        end: {
          line: 461,
          column: 48
        }
      },
      "248": {
        start: {
          line: 462,
          column: 27
        },
        end: {
          line: 462,
          column: 48
        }
      },
      "249": {
        start: {
          line: 463,
          column: 12
        },
        end: {
          line: 463,
          column: 30
        }
      },
      "250": {
        start: {
          line: 464,
          column: 12
        },
        end: {
          line: 464,
          column: 30
        }
      },
      "251": {
        start: {
          line: 470,
          column: 36
        },
        end: {
          line: 530,
          column: 6
        }
      },
      "252": {
        start: {
          line: 471,
          column: 27
        },
        end: {
          line: 471,
          column: 48
        }
      },
      "253": {
        start: {
          line: 472,
          column: 8
        },
        end: {
          line: 472,
          column: 32
        }
      },
      "254": {
        start: {
          line: 472,
          column: 25
        },
        end: {
          line: 472,
          column: 32
        }
      },
      "255": {
        start: {
          line: 473,
          column: 22
        },
        end: {
          line: 473,
          column: 38
        }
      },
      "256": {
        start: {
          line: 475,
          column: 26
        },
        end: {
          line: 475,
          column: 46
        }
      },
      "257": {
        start: {
          line: 476,
          column: 8
        },
        end: {
          line: 476,
          column: 31
        }
      },
      "258": {
        start: {
          line: 476,
          column: 24
        },
        end: {
          line: 476,
          column: 31
        }
      },
      "259": {
        start: {
          line: 477,
          column: 25
        },
        end: {
          line: 482,
          column: 9
        }
      },
      "260": {
        start: {
          line: 483,
          column: 25
        },
        end: {
          line: 483,
          column: 50
        }
      },
      "261": {
        start: {
          line: 485,
          column: 8
        },
        end: {
          line: 491,
          column: 11
        }
      },
      "262": {
        start: {
          line: 486,
          column: 12
        },
        end: {
          line: 490,
          column: 15
        }
      },
      "263": {
        start: {
          line: 493,
          column: 8
        },
        end: {
          line: 527,
          column: 11
        }
      },
      "264": {
        start: {
          line: 495,
          column: 39
        },
        end: {
          line: 495,
          column: 89
        }
      },
      "265": {
        start: {
          line: 496,
          column: 33
        },
        end: {
          line: 500,
          column: 14
        }
      },
      "266": {
        start: {
          line: 501,
          column: 12
        },
        end: {
          line: 526,
          column: 15
        }
      },
      "267": {
        start: {
          line: 502,
          column: 30
        },
        end: {
          line: 502,
          column: 44
        }
      },
      "268": {
        start: {
          line: 503,
          column: 16
        },
        end: {
          line: 503,
          column: 69
        }
      },
      "269": {
        start: {
          line: 503,
          column: 62
        },
        end: {
          line: 503,
          column: 69
        }
      },
      "270": {
        start: {
          line: 505,
          column: 27
        },
        end: {
          line: 505,
          column: 44
        }
      },
      "271": {
        start: {
          line: 506,
          column: 27
        },
        end: {
          line: 506,
          column: 44
        }
      },
      "272": {
        start: {
          line: 507,
          column: 33
        },
        end: {
          line: 507,
          column: 61
        }
      },
      "273": {
        start: {
          line: 509,
          column: 36
        },
        end: {
          line: 509,
          column: 99
        }
      },
      "274": {
        start: {
          line: 510,
          column: 16
        },
        end: {
          line: 525,
          column: 17
        }
      },
      "275": {
        start: {
          line: 512,
          column: 36
        },
        end: {
          line: 512,
          column: 71
        }
      },
      "276": {
        start: {
          line: 514,
          column: 34
        },
        end: {
          line: 514,
          column: 52
        }
      },
      "277": {
        start: {
          line: 515,
          column: 34
        },
        end: {
          line: 515,
          column: 52
        }
      },
      "278": {
        start: {
          line: 517,
          column: 20
        },
        end: {
          line: 520,
          column: 21
        }
      },
      "279": {
        start: {
          line: 518,
          column: 24
        },
        end: {
          line: 518,
          column: 41
        }
      },
      "280": {
        start: {
          line: 519,
          column: 24
        },
        end: {
          line: 519,
          column: 41
        }
      },
      "281": {
        start: {
          line: 521,
          column: 20
        },
        end: {
          line: 524,
          column: 21
        }
      },
      "282": {
        start: {
          line: 522,
          column: 24
        },
        end: {
          line: 522,
          column: 41
        }
      },
      "283": {
        start: {
          line: 523,
          column: 24
        },
        end: {
          line: 523,
          column: 41
        }
      },
      "284": {
        start: {
          line: 531,
          column: 26
        },
        end: {
          line: 610,
          column: 6
        }
      },
      "285": {
        start: {
          line: 532,
          column: 27
        },
        end: {
          line: 532,
          column: 48
        }
      },
      "286": {
        start: {
          line: 533,
          column: 8
        },
        end: {
          line: 538,
          column: 9
        }
      },
      "287": {
        start: {
          line: 534,
          column: 12
        },
        end: {
          line: 536,
          column: 13
        }
      },
      "288": {
        start: {
          line: 535,
          column: 16
        },
        end: {
          line: 535,
          column: 64
        }
      },
      "289": {
        start: {
          line: 537,
          column: 12
        },
        end: {
          line: 537,
          column: 19
        }
      },
      "290": {
        start: {
          line: 540,
          column: 26
        },
        end: {
          line: 540,
          column: 49
        }
      },
      "291": {
        start: {
          line: 541,
          column: 31
        },
        end: {
          line: 541,
          column: 46
        }
      },
      "292": {
        start: {
          line: 542,
          column: 33
        },
        end: {
          line: 542,
          column: 48
        }
      },
      "293": {
        start: {
          line: 544,
          column: 8
        },
        end: {
          line: 551,
          column: 9
        }
      },
      "294": {
        start: {
          line: 545,
          column: 31
        },
        end: {
          line: 545,
          column: 55
        }
      },
      "295": {
        start: {
          line: 546,
          column: 33
        },
        end: {
          line: 546,
          column: 78
        }
      },
      "296": {
        start: {
          line: 547,
          column: 12
        },
        end: {
          line: 550,
          column: 13
        }
      },
      "297": {
        start: {
          line: 548,
          column: 16
        },
        end: {
          line: 548,
          column: 81
        }
      },
      "298": {
        start: {
          line: 549,
          column: 16
        },
        end: {
          line: 549,
          column: 23
        }
      },
      "299": {
        start: {
          line: 553,
          column: 8
        },
        end: {
          line: 553,
          column: 31
        }
      },
      "300": {
        start: {
          line: 554,
          column: 8
        },
        end: {
          line: 554,
          column: 32
        }
      },
      "301": {
        start: {
          line: 555,
          column: 8
        },
        end: {
          line: 555,
          column: 30
        }
      },
      "302": {
        start: {
          line: 557,
          column: 28
        },
        end: {
          line: 557,
          column: 29
        }
      },
      "303": {
        start: {
          line: 558,
          column: 8
        },
        end: {
          line: 580,
          column: 11
        }
      },
      "304": {
        start: {
          line: 560,
          column: 12
        },
        end: {
          line: 564,
          column: 13
        }
      },
      "305": {
        start: {
          line: 561,
          column: 16
        },
        end: {
          line: 561,
          column: 28
        }
      },
      "306": {
        start: {
          line: 562,
          column: 16
        },
        end: {
          line: 562,
          column: 28
        }
      },
      "307": {
        start: {
          line: 563,
          column: 16
        },
        end: {
          line: 563,
          column: 23
        }
      },
      "308": {
        start: {
          line: 566,
          column: 12
        },
        end: {
          line: 566,
          column: 69
        }
      },
      "309": {
        start: {
          line: 567,
          column: 12
        },
        end: {
          line: 567,
          column: 69
        }
      },
      "310": {
        start: {
          line: 569,
          column: 42
        },
        end: {
          line: 569,
          column: 102
        }
      },
      "311": {
        start: {
          line: 570,
          column: 26
        },
        end: {
          line: 570,
          column: 74
        }
      },
      "312": {
        start: {
          line: 571,
          column: 12
        },
        end: {
          line: 574,
          column: 13
        }
      },
      "313": {
        start: {
          line: 572,
          column: 16
        },
        end: {
          line: 572,
          column: 66
        }
      },
      "314": {
        start: {
          line: 573,
          column: 16
        },
        end: {
          line: 573,
          column: 66
        }
      },
      "315": {
        start: {
          line: 576,
          column: 12
        },
        end: {
          line: 576,
          column: 30
        }
      },
      "316": {
        start: {
          line: 577,
          column: 12
        },
        end: {
          line: 577,
          column: 30
        }
      },
      "317": {
        start: {
          line: 579,
          column: 12
        },
        end: {
          line: 579,
          column: 67
        }
      },
      "318": {
        start: {
          line: 582,
          column: 8
        },
        end: {
          line: 582,
          column: 34
        }
      },
      "319": {
        start: {
          line: 584,
          column: 8
        },
        end: {
          line: 584,
          column: 38
        }
      },
      "320": {
        start: {
          line: 586,
          column: 34
        },
        end: {
          line: 586,
          column: 61
        }
      },
      "321": {
        start: {
          line: 587,
          column: 40
        },
        end: {
          line: 587,
          column: 64
        }
      },
      "322": {
        start: {
          line: 589,
          column: 8
        },
        end: {
          line: 599,
          column: 9
        }
      },
      "323": {
        start: {
          line: 591,
          column: 12
        },
        end: {
          line: 591,
          column: 43
        }
      },
      "324": {
        start: {
          line: 592,
          column: 12
        },
        end: {
          line: 596,
          column: 13
        }
      },
      "325": {
        start: {
          line: 593,
          column: 16
        },
        end: {
          line: 593,
          column: 46
        }
      },
      "326": {
        start: {
          line: 594,
          column: 16
        },
        end: {
          line: 594,
          column: 49
        }
      },
      "327": {
        start: {
          line: 595,
          column: 16
        },
        end: {
          line: 595,
          column: 23
        }
      },
      "328": {
        start: {
          line: 598,
          column: 12
        },
        end: {
          line: 598,
          column: 45
        }
      },
      "329": {
        start: {
          line: 601,
          column: 8
        },
        end: {
          line: 601,
          column: 73
        }
      },
      "330": {
        start: {
          line: 612,
          column: 4
        },
        end: {
          line: 686,
          column: 7
        }
      },
      "331": {
        start: {
          line: 613,
          column: 8
        },
        end: {
          line: 682,
          column: 9
        }
      },
      "332": {
        start: {
          line: 615,
          column: 12
        },
        end: {
          line: 615,
          column: 28
        }
      },
      "333": {
        start: {
          line: 617,
          column: 30
        },
        end: {
          line: 617,
          column: 70
        }
      },
      "334": {
        start: {
          line: 618,
          column: 35
        },
        end: {
          line: 618,
          column: 50
        }
      },
      "335": {
        start: {
          line: 619,
          column: 37
        },
        end: {
          line: 619,
          column: 52
        }
      },
      "336": {
        start: {
          line: 621,
          column: 35
        },
        end: {
          line: 621,
          column: 84
        }
      },
      "337": {
        start: {
          line: 623,
          column: 12
        },
        end: {
          line: 653,
          column: 31
        }
      },
      "338": {
        start: {
          line: 624,
          column: 16
        },
        end: {
          line: 652,
          column: 17
        }
      },
      "339": {
        start: {
          line: 626,
          column: 41
        },
        end: {
          line: 647,
          column: 22
        }
      },
      "340": {
        start: {
          line: 627,
          column: 24
        },
        end: {
          line: 646,
          column: 25
        }
      },
      "341": {
        start: {
          line: 629,
          column: 28
        },
        end: {
          line: 640,
          column: 30
        }
      },
      "342": {
        start: {
          line: 643,
          column: 28
        },
        end: {
          line: 645,
          column: 30
        }
      },
      "343": {
        start: {
          line: 649,
          column: 20
        },
        end: {
          line: 649,
          column: 43
        }
      },
      "344": {
        start: {
          line: 651,
          column: 20
        },
        end: {
          line: 651,
          column: 51
        }
      },
      "345": {
        start: {
          line: 655,
          column: 12
        },
        end: {
          line: 655,
          column: 37
        }
      },
      "346": {
        start: {
          line: 656,
          column: 36
        },
        end: {
          line: 658,
          column: 19
        }
      },
      "347": {
        start: {
          line: 657,
          column: 16
        },
        end: {
          line: 657,
          column: 78
        }
      },
      "348": {
        start: {
          line: 660,
          column: 12
        },
        end: {
          line: 660,
          column: 41
        }
      },
      "349": {
        start: {
          line: 661,
          column: 35
        },
        end: {
          line: 663,
          column: 19
        }
      },
      "350": {
        start: {
          line: 662,
          column: 16
        },
        end: {
          line: 662,
          column: 85
        }
      },
      "351": {
        start: {
          line: 664,
          column: 12
        },
        end: {
          line: 673,
          column: 14
        }
      },
      "352": {
        start: {
          line: 665,
          column: 16
        },
        end: {
          line: 667,
          column: 17
        }
      },
      "353": {
        start: {
          line: 666,
          column: 20
        },
        end: {
          line: 666,
          column: 68
        }
      },
      "354": {
        start: {
          line: 668,
          column: 16
        },
        end: {
          line: 670,
          column: 17
        }
      },
      "355": {
        start: {
          line: 669,
          column: 20
        },
        end: {
          line: 669,
          column: 61
        }
      },
      "356": {
        start: {
          line: 671,
          column: 16
        },
        end: {
          line: 671,
          column: 47
        }
      },
      "357": {
        start: {
          line: 672,
          column: 16
        },
        end: {
          line: 672,
          column: 46
        }
      },
      "358": {
        start: {
          line: 676,
          column: 12
        },
        end: {
          line: 678,
          column: 13
        }
      },
      "359": {
        start: {
          line: 677,
          column: 16
        },
        end: {
          line: 677,
          column: 64
        }
      },
      "360": {
        start: {
          line: 679,
          column: 12
        },
        end: {
          line: 681,
          column: 13
        }
      },
      "361": {
        start: {
          line: 680,
          column: 16
        },
        end: {
          line: 680,
          column: 57
        }
      },
      "362": {
        start: {
          line: 687,
          column: 31
        },
        end: {
          line: 749,
          column: 10
        }
      },
      "363": {
        start: {
          line: 688,
          column: 8
        },
        end: {
          line: 691,
          column: 9
        }
      },
      "364": {
        start: {
          line: 689,
          column: 12
        },
        end: {
          line: 689,
          column: 67
        }
      },
      "365": {
        start: {
          line: 690,
          column: 12
        },
        end: {
          line: 690,
          column: 19
        }
      },
      "366": {
        start: {
          line: 693,
          column: 8
        },
        end: {
          line: 693,
          column: 38
        }
      },
      "367": {
        start: {
          line: 694,
          column: 8
        },
        end: {
          line: 696,
          column: 9
        }
      },
      "368": {
        start: {
          line: 695,
          column: 12
        },
        end: {
          line: 695,
          column: 60
        }
      },
      "369": {
        start: {
          line: 697,
          column: 8
        },
        end: {
          line: 699,
          column: 9
        }
      },
      "370": {
        start: {
          line: 698,
          column: 12
        },
        end: {
          line: 698,
          column: 53
        }
      },
      "371": {
        start: {
          line: 701,
          column: 8
        },
        end: {
          line: 701,
          column: 24
        }
      },
      "372": {
        start: {
          line: 702,
          column: 8
        },
        end: {
          line: 705,
          column: 11
        }
      },
      "373": {
        start: {
          line: 707,
          column: 8
        },
        end: {
          line: 707,
          column: 30
        }
      },
      "374": {
        start: {
          line: 708,
          column: 8
        },
        end: {
          line: 708,
          column: 29
        }
      },
      "375": {
        start: {
          line: 710,
          column: 27
        },
        end: {
          line: 710,
          column: 78
        }
      },
      "376": {
        start: {
          line: 711,
          column: 27
        },
        end: {
          line: 711,
          column: 78
        }
      },
      "377": {
        start: {
          line: 713,
          column: 8
        },
        end: {
          line: 713,
          column: 29
        }
      },
      "378": {
        start: {
          line: 714,
          column: 8
        },
        end: {
          line: 714,
          column: 29
        }
      },
      "379": {
        start: {
          line: 716,
          column: 29
        },
        end: {
          line: 723,
          column: 15
        }
      },
      "380": {
        start: {
          line: 716,
          column: 53
        },
        end: {
          line: 723,
          column: 13
        }
      },
      "381": {
        start: {
          line: 725,
          column: 29
        },
        end: {
          line: 737,
          column: 26
        }
      },
      "382": {
        start: {
          line: 726,
          column: 27
        },
        end: {
          line: 726,
          column: 71
        }
      },
      "383": {
        start: {
          line: 726,
          column: 50
        },
        end: {
          line: 726,
          column: 70
        }
      },
      "384": {
        start: {
          line: 727,
          column: 27
        },
        end: {
          line: 727,
          column: 71
        }
      },
      "385": {
        start: {
          line: 727,
          column: 50
        },
        end: {
          line: 727,
          column: 70
        }
      },
      "386": {
        start: {
          line: 728,
          column: 12
        },
        end: {
          line: 731,
          column: 13
        }
      },
      "387": {
        start: {
          line: 729,
          column: 16
        },
        end: {
          line: 729,
          column: 97
        }
      },
      "388": {
        start: {
          line: 730,
          column: 16
        },
        end: {
          line: 730,
          column: 28
        }
      },
      "389": {
        start: {
          line: 732,
          column: 12
        },
        end: {
          line: 736,
          column: 14
        }
      },
      "390": {
        start: {
          line: 739,
          column: 8
        },
        end: {
          line: 742,
          column: 10
        }
      },
      "391": {
        start: {
          line: 744,
          column: 8
        },
        end: {
          line: 744,
          column: 33
        }
      },
      "392": {
        start: {
          line: 745,
          column: 8
        },
        end: {
          line: 745,
          column: 37
        }
      },
      "393": {
        start: {
          line: 746,
          column: 8
        },
        end: {
          line: 746,
          column: 41
        }
      },
      "394": {
        start: {
          line: 748,
          column: 8
        },
        end: {
          line: 748,
          column: 38
        }
      },
      "395": {
        start: {
          line: 750,
          column: 28
        },
        end: {
          line: 814,
          column: 6
        }
      },
      "396": {
        start: {
          line: 751,
          column: 8
        },
        end: {
          line: 751,
          column: 26
        }
      },
      "397": {
        start: {
          line: 751,
          column: 19
        },
        end: {
          line: 751,
          column: 26
        }
      },
      "398": {
        start: {
          line: 752,
          column: 8
        },
        end: {
          line: 810,
          column: 9
        }
      },
      "399": {
        start: {
          line: 753,
          column: 28
        },
        end: {
          line: 753,
          column: 38
        }
      },
      "400": {
        start: {
          line: 755,
          column: 35
        },
        end: {
          line: 755,
          column: 37
        }
      },
      "401": {
        start: {
          line: 756,
          column: 12
        },
        end: {
          line: 765,
          column: 15
        }
      },
      "402": {
        start: {
          line: 757,
          column: 16
        },
        end: {
          line: 764,
          column: 19
        }
      },
      "403": {
        start: {
          line: 758,
          column: 20
        },
        end: {
          line: 763,
          column: 21
        }
      },
      "404": {
        start: {
          line: 759,
          column: 24
        },
        end: {
          line: 762,
          column: 27
        }
      },
      "405": {
        start: {
          line: 766,
          column: 12
        },
        end: {
          line: 782,
          column: 13
        }
      },
      "406": {
        start: {
          line: 768,
          column: 41
        },
        end: {
          line: 768,
          column: 128
        }
      },
      "407": {
        start: {
          line: 768,
          column: 80
        },
        end: {
          line: 768,
          column: 116
        }
      },
      "408": {
        start: {
          line: 769,
          column: 16
        },
        end: {
          line: 774,
          column: 19
        }
      },
      "409": {
        start: {
          line: 776,
          column: 16
        },
        end: {
          line: 781,
          column: 19
        }
      },
      "410": {
        start: {
          line: 783,
          column: 12
        },
        end: {
          line: 783,
          column: 50
        }
      },
      "411": {
        start: {
          line: 784,
          column: 15
        },
        end: {
          line: 810,
          column: 9
        }
      },
      "412": {
        start: {
          line: 786,
          column: 31
        },
        end: {
          line: 786,
          column: 41
        }
      },
      "413": {
        start: {
          line: 787,
          column: 37
        },
        end: {
          line: 787,
          column: 39
        }
      },
      "414": {
        start: {
          line: 788,
          column: 12
        },
        end: {
          line: 797,
          column: 15
        }
      },
      "415": {
        start: {
          line: 789,
          column: 16
        },
        end: {
          line: 796,
          column: 19
        }
      },
      "416": {
        start: {
          line: 790,
          column: 20
        },
        end: {
          line: 795,
          column: 21
        }
      },
      "417": {
        start: {
          line: 791,
          column: 24
        },
        end: {
          line: 794,
          column: 27
        }
      },
      "418": {
        start: {
          line: 798,
          column: 12
        },
        end: {
          line: 809,
          column: 13
        }
      },
      "419": {
        start: {
          line: 800,
          column: 41
        },
        end: {
          line: 800,
          column: 60
        }
      },
      "420": {
        start: {
          line: 801,
          column: 16
        },
        end: {
          line: 806,
          column: 19
        }
      },
      "421": {
        start: {
          line: 808,
          column: 16
        },
        end: {
          line: 808,
          column: 63
        }
      },
      "422": {
        start: {
          line: 815,
          column: 28
        },
        end: {
          line: 866,
          column: 6
        }
      },
      "423": {
        start: {
          line: 816,
          column: 23
        },
        end: {
          line: 816,
          column: 40
        }
      },
      "424": {
        start: {
          line: 817,
          column: 8
        },
        end: {
          line: 817,
          column: 28
        }
      },
      "425": {
        start: {
          line: 817,
          column: 21
        },
        end: {
          line: 817,
          column: 28
        }
      },
      "426": {
        start: {
          line: 818,
          column: 21
        },
        end: {
          line: 818,
          column: 51
        }
      },
      "427": {
        start: {
          line: 819,
          column: 18
        },
        end: {
          line: 819,
          column: 64
        }
      },
      "428": {
        start: {
          line: 820,
          column: 18
        },
        end: {
          line: 820,
          column: 63
        }
      },
      "429": {
        start: {
          line: 822,
          column: 24
        },
        end: {
          line: 826,
          column: 10
        }
      },
      "430": {
        start: {
          line: 823,
          column: 23
        },
        end: {
          line: 823,
          column: 33
        }
      },
      "431": {
        start: {
          line: 824,
          column: 23
        },
        end: {
          line: 824,
          column: 33
        }
      },
      "432": {
        start: {
          line: 825,
          column: 12
        },
        end: {
          line: 825,
          column: 63
        }
      },
      "433": {
        start: {
          line: 827,
          column: 8
        },
        end: {
          line: 858,
          column: 9
        }
      },
      "434": {
        start: {
          line: 828,
          column: 12
        },
        end: {
          line: 828,
          column: 37
        }
      },
      "435": {
        start: {
          line: 829,
          column: 12
        },
        end: {
          line: 829,
          column: 37
        }
      },
      "436": {
        start: {
          line: 831,
          column: 24
        },
        end: {
          line: 831,
          column: 34
        }
      },
      "437": {
        start: {
          line: 832,
          column: 12
        },
        end: {
          line: 848,
          column: 13
        }
      },
      "438": {
        start: {
          line: 834,
          column: 32
        },
        end: {
          line: 834,
          column: 90
        }
      },
      "439": {
        start: {
          line: 834,
          column: 70
        },
        end: {
          line: 834,
          column: 89
        }
      },
      "440": {
        start: {
          line: 835,
          column: 16
        },
        end: {
          line: 841,
          column: 17
        }
      },
      "441": {
        start: {
          line: 836,
          column: 20
        },
        end: {
          line: 836,
          column: 57
        }
      },
      "442": {
        start: {
          line: 837,
          column: 20
        },
        end: {
          line: 837,
          column: 69
        }
      },
      "443": {
        start: {
          line: 838,
          column: 20
        },
        end: {
          line: 838,
          column: 69
        }
      },
      "444": {
        start: {
          line: 840,
          column: 20
        },
        end: {
          line: 840,
          column: 50
        }
      },
      "445": {
        start: {
          line: 844,
          column: 32
        },
        end: {
          line: 844,
          column: 90
        }
      },
      "446": {
        start: {
          line: 844,
          column: 70
        },
        end: {
          line: 844,
          column: 89
        }
      },
      "447": {
        start: {
          line: 845,
          column: 16
        },
        end: {
          line: 847,
          column: 17
        }
      },
      "448": {
        start: {
          line: 846,
          column: 20
        },
        end: {
          line: 846,
          column: 44
        }
      },
      "449": {
        start: {
          line: 849,
          column: 12
        },
        end: {
          line: 849,
          column: 34
        }
      },
      "450": {
        start: {
          line: 850,
          column: 12
        },
        end: {
          line: 850,
          column: 43
        }
      },
      "451": {
        start: {
          line: 853,
          column: 12
        },
        end: {
          line: 853,
          column: 32
        }
      },
      "452": {
        start: {
          line: 854,
          column: 12
        },
        end: {
          line: 857,
          column: 15
        }
      },
      "453": {
        start: {
          line: 867,
          column: 34
        },
        end: {
          line: 906,
          column: 6
        }
      },
      "454": {
        start: {
          line: 868,
          column: 23
        },
        end: {
          line: 868,
          column: 40
        }
      },
      "455": {
        start: {
          line: 869,
          column: 8
        },
        end: {
          line: 869,
          column: 28
        }
      },
      "456": {
        start: {
          line: 869,
          column: 21
        },
        end: {
          line: 869,
          column: 28
        }
      },
      "457": {
        start: {
          line: 870,
          column: 21
        },
        end: {
          line: 870,
          column: 51
        }
      },
      "458": {
        start: {
          line: 871,
          column: 18
        },
        end: {
          line: 871,
          column: 64
        }
      },
      "459": {
        start: {
          line: 872,
          column: 18
        },
        end: {
          line: 872,
          column: 63
        }
      },
      "460": {
        start: {
          line: 874,
          column: 24
        },
        end: {
          line: 878,
          column: 10
        }
      },
      "461": {
        start: {
          line: 875,
          column: 23
        },
        end: {
          line: 875,
          column: 33
        }
      },
      "462": {
        start: {
          line: 876,
          column: 23
        },
        end: {
          line: 876,
          column: 33
        }
      },
      "463": {
        start: {
          line: 877,
          column: 12
        },
        end: {
          line: 877,
          column: 63
        }
      },
      "464": {
        start: {
          line: 879,
          column: 8
        },
        end: {
          line: 879,
          column: 40
        }
      },
      "465": {
        start: {
          line: 881,
          column: 8
        },
        end: {
          line: 898,
          column: 9
        }
      },
      "466": {
        start: {
          line: 882,
          column: 30
        },
        end: {
          line: 882,
          column: 97
        }
      },
      "467": {
        start: {
          line: 882,
          column: 73
        },
        end: {
          line: 882,
          column: 96
        }
      },
      "468": {
        start: {
          line: 883,
          column: 12
        },
        end: {
          line: 891,
          column: 13
        }
      },
      "469": {
        start: {
          line: 884,
          column: 29
        },
        end: {
          line: 884,
          column: 67
        }
      },
      "470": {
        start: {
          line: 885,
          column: 16
        },
        end: {
          line: 885,
          column: 27
        }
      },
      "471": {
        start: {
          line: 886,
          column: 16
        },
        end: {
          line: 886,
          column: 27
        }
      },
      "472": {
        start: {
          line: 887,
          column: 16
        },
        end: {
          line: 887,
          column: 28
        }
      },
      "473": {
        start: {
          line: 888,
          column: 16
        },
        end: {
          line: 888,
          column: 28
        }
      },
      "474": {
        start: {
          line: 890,
          column: 16
        },
        end: {
          line: 890,
          column: 46
        }
      },
      "475": {
        start: {
          line: 892,
          column: 15
        },
        end: {
          line: 898,
          column: 9
        }
      },
      "476": {
        start: {
          line: 894,
          column: 12
        },
        end: {
          line: 897,
          column: 15
        }
      },
      "477": {
        start: {
          line: 907,
          column: 32
        },
        end: {
          line: 910,
          column: 10
        }
      },
      "478": {
        start: {
          line: 908,
          column: 8
        },
        end: {
          line: 908,
          column: 29
        }
      },
      "479": {
        start: {
          line: 909,
          column: 8
        },
        end: {
          line: 909,
          column: 29
        }
      },
      "480": {
        start: {
          line: 911,
          column: 25
        },
        end: {
          line: 913,
          column: 10
        }
      },
      "481": {
        start: {
          line: 912,
          column: 8
        },
        end: {
          line: 912,
          column: 54
        }
      },
      "482": {
        start: {
          line: 912,
          column: 29
        },
        end: {
          line: 912,
          column: 52
        }
      },
      "483": {
        start: {
          line: 914,
          column: 26
        },
        end: {
          line: 916,
          column: 10
        }
      },
      "484": {
        start: {
          line: 915,
          column: 8
        },
        end: {
          line: 915,
          column: 56
        }
      },
      "485": {
        start: {
          line: 915,
          column: 29
        },
        end: {
          line: 915,
          column: 54
        }
      },
      "486": {
        start: {
          line: 917,
          column: 24
        },
        end: {
          line: 923,
          column: 10
        }
      },
      "487": {
        start: {
          line: 918,
          column: 8
        },
        end: {
          line: 918,
          column: 24
        }
      },
      "488": {
        start: {
          line: 919,
          column: 8
        },
        end: {
          line: 922,
          column: 11
        }
      },
      "489": {
        start: {
          line: 925,
          column: 4
        },
        end: {
          line: 1033,
          column: 7
        }
      },
      "490": {
        start: {
          line: 926,
          column: 8
        },
        end: {
          line: 926,
          column: 34
        }
      },
      "491": {
        start: {
          line: 926,
          column: 27
        },
        end: {
          line: 926,
          column: 34
        }
      },
      "492": {
        start: {
          line: 927,
          column: 23
        },
        end: {
          line: 927,
          column: 40
        }
      },
      "493": {
        start: {
          line: 928,
          column: 8
        },
        end: {
          line: 928,
          column: 28
        }
      },
      "494": {
        start: {
          line: 928,
          column: 21
        },
        end: {
          line: 928,
          column: 28
        }
      },
      "495": {
        start: {
          line: 929,
          column: 20
        },
        end: {
          line: 929,
          column: 43
        }
      },
      "496": {
        start: {
          line: 930,
          column: 8
        },
        end: {
          line: 930,
          column: 25
        }
      },
      "497": {
        start: {
          line: 930,
          column: 18
        },
        end: {
          line: 930,
          column: 25
        }
      },
      "498": {
        start: {
          line: 932,
          column: 26
        },
        end: {
          line: 932,
          column: 46
        }
      },
      "499": {
        start: {
          line: 933,
          column: 8
        },
        end: {
          line: 937,
          column: 9
        }
      },
      "500": {
        start: {
          line: 934,
          column: 38
        },
        end: {
          line: 934,
          column: 71
        }
      },
      "501": {
        start: {
          line: 935,
          column: 12
        },
        end: {
          line: 935,
          column: 33
        }
      },
      "502": {
        start: {
          line: 936,
          column: 12
        },
        end: {
          line: 936,
          column: 35
        }
      },
      "503": {
        start: {
          line: 939,
          column: 8
        },
        end: {
          line: 939,
          column: 57
        }
      },
      "504": {
        start: {
          line: 941,
          column: 8
        },
        end: {
          line: 941,
          column: 19
        }
      },
      "505": {
        start: {
          line: 942,
          column: 8
        },
        end: {
          line: 942,
          column: 42
        }
      },
      "506": {
        start: {
          line: 943,
          column: 8
        },
        end: {
          line: 943,
          column: 40
        }
      },
      "507": {
        start: {
          line: 945,
          column: 8
        },
        end: {
          line: 962,
          column: 9
        }
      },
      "508": {
        start: {
          line: 946,
          column: 27
        },
        end: {
          line: 946,
          column: 64
        }
      },
      "509": {
        start: {
          line: 946,
          column: 43
        },
        end: {
          line: 946,
          column: 63
        }
      },
      "510": {
        start: {
          line: 947,
          column: 27
        },
        end: {
          line: 947,
          column: 64
        }
      },
      "511": {
        start: {
          line: 947,
          column: 43
        },
        end: {
          line: 947,
          column: 63
        }
      },
      "512": {
        start: {
          line: 948,
          column: 12
        },
        end: {
          line: 961,
          column: 13
        }
      },
      "513": {
        start: {
          line: 949,
          column: 16
        },
        end: {
          line: 949,
          column: 32
        }
      },
      "514": {
        start: {
          line: 950,
          column: 16
        },
        end: {
          line: 950,
          column: 47
        }
      },
      "515": {
        start: {
          line: 951,
          column: 16
        },
        end: {
          line: 951,
          column: 47
        }
      },
      "516": {
        start: {
          line: 953,
          column: 16
        },
        end: {
          line: 959,
          column: 17
        }
      },
      "517": {
        start: {
          line: 954,
          column: 20
        },
        end: {
          line: 954,
          column: 56
        }
      },
      "518": {
        start: {
          line: 955,
          column: 20
        },
        end: {
          line: 955,
          column: 50
        }
      },
      "519": {
        start: {
          line: 957,
          column: 20
        },
        end: {
          line: 957,
          column: 56
        }
      },
      "520": {
        start: {
          line: 958,
          column: 20
        },
        end: {
          line: 958,
          column: 50
        }
      },
      "521": {
        start: {
          line: 960,
          column: 16
        },
        end: {
          line: 960,
          column: 29
        }
      },
      "522": {
        start: {
          line: 964,
          column: 8
        },
        end: {
          line: 1024,
          column: 9
        }
      },
      "523": {
        start: {
          line: 966,
          column: 27
        },
        end: {
          line: 966,
          column: 51
        }
      },
      "524": {
        start: {
          line: 967,
          column: 12
        },
        end: {
          line: 967,
          column: 28
        }
      },
      "525": {
        start: {
          line: 968,
          column: 12
        },
        end: {
          line: 968,
          column: 60
        }
      },
      "526": {
        start: {
          line: 970,
          column: 12
        },
        end: {
          line: 982,
          column: 13
        }
      },
      "527": {
        start: {
          line: 971,
          column: 16
        },
        end: {
          line: 971,
          column: 42
        }
      },
      "528": {
        start: {
          line: 972,
          column: 16
        },
        end: {
          line: 972,
          column: 44
        }
      },
      "529": {
        start: {
          line: 973,
          column: 16
        },
        end: {
          line: 973,
          column: 46
        }
      },
      "530": {
        start: {
          line: 974,
          column: 16
        },
        end: {
          line: 974,
          column: 29
        }
      },
      "531": {
        start: {
          line: 975,
          column: 19
        },
        end: {
          line: 982,
          column: 13
        }
      },
      "532": {
        start: {
          line: 976,
          column: 16
        },
        end: {
          line: 976,
          column: 43
        }
      },
      "533": {
        start: {
          line: 977,
          column: 16
        },
        end: {
          line: 977,
          column: 44
        }
      },
      "534": {
        start: {
          line: 978,
          column: 16
        },
        end: {
          line: 978,
          column: 46
        }
      },
      "535": {
        start: {
          line: 979,
          column: 16
        },
        end: {
          line: 979,
          column: 29
        }
      },
      "536": {
        start: {
          line: 981,
          column: 16
        },
        end: {
          line: 981,
          column: 43
        }
      },
      "537": {
        start: {
          line: 984,
          column: 12
        },
        end: {
          line: 988,
          column: 13
        }
      },
      "538": {
        start: {
          line: 985,
          column: 16
        },
        end: {
          line: 985,
          column: 44
        }
      },
      "539": {
        start: {
          line: 986,
          column: 16
        },
        end: {
          line: 986,
          column: 46
        }
      },
      "540": {
        start: {
          line: 987,
          column: 16
        },
        end: {
          line: 987,
          column: 29
        }
      },
      "541": {
        start: {
          line: 990,
          column: 29
        },
        end: {
          line: 990,
          column: 95
        }
      },
      "542": {
        start: {
          line: 990,
          column: 68
        },
        end: {
          line: 990,
          column: 84
        }
      },
      "543": {
        start: {
          line: 991,
          column: 12
        },
        end: {
          line: 1000,
          column: 13
        }
      },
      "544": {
        start: {
          line: 992,
          column: 16
        },
        end: {
          line: 992,
          column: 44
        }
      },
      "545": {
        start: {
          line: 993,
          column: 16
        },
        end: {
          line: 993,
          column: 46
        }
      },
      "546": {
        start: {
          line: 994,
          column: 16
        },
        end: {
          line: 997,
          column: 19
        }
      },
      "547": {
        start: {
          line: 998,
          column: 16
        },
        end: {
          line: 998,
          column: 29
        }
      },
      "548": {
        start: {
          line: 999,
          column: 16
        },
        end: {
          line: 999,
          column: 36
        }
      },
      "549": {
        start: {
          line: 1001,
          column: 12
        },
        end: {
          line: 1001,
          column: 23
        }
      },
      "550": {
        start: {
          line: 1003,
          column: 12
        },
        end: {
          line: 1009,
          column: 13
        }
      },
      "551": {
        start: {
          line: 1004,
          column: 16
        },
        end: {
          line: 1004,
          column: 42
        }
      },
      "552": {
        start: {
          line: 1005,
          column: 16
        },
        end: {
          line: 1005,
          column: 73
        }
      },
      "553": {
        start: {
          line: 1006,
          column: 16
        },
        end: {
          line: 1006,
          column: 41
        }
      },
      "554": {
        start: {
          line: 1007,
          column: 16
        },
        end: {
          line: 1007,
          column: 44
        }
      },
      "555": {
        start: {
          line: 1008,
          column: 16
        },
        end: {
          line: 1008,
          column: 67
        }
      },
      "556": {
        start: {
          line: 1011,
          column: 12
        },
        end: {
          line: 1023,
          column: 13
        }
      },
      "557": {
        start: {
          line: 1012,
          column: 16
        },
        end: {
          line: 1012,
          column: 42
        }
      },
      "558": {
        start: {
          line: 1013,
          column: 16
        },
        end: {
          line: 1013,
          column: 105
        }
      },
      "559": {
        start: {
          line: 1014,
          column: 16
        },
        end: {
          line: 1014,
          column: 41
        }
      },
      "560": {
        start: {
          line: 1015,
          column: 16
        },
        end: {
          line: 1015,
          column: 44
        }
      },
      "561": {
        start: {
          line: 1017,
          column: 34
        },
        end: {
          line: 1017,
          column: 67
        }
      },
      "562": {
        start: {
          line: 1018,
          column: 16
        },
        end: {
          line: 1018,
          column: 53
        }
      },
      "563": {
        start: {
          line: 1019,
          column: 16
        },
        end: {
          line: 1019,
          column: 109
        }
      },
      "564": {
        start: {
          line: 1020,
          column: 16
        },
        end: {
          line: 1020,
          column: 42
        }
      },
      "565": {
        start: {
          line: 1021,
          column: 16
        },
        end: {
          line: 1021,
          column: 105
        }
      },
      "566": {
        start: {
          line: 1022,
          column: 16
        },
        end: {
          line: 1022,
          column: 83
        }
      },
      "567": {
        start: {
          line: 1025,
          column: 8
        },
        end: {
          line: 1025,
          column: 22
        }
      },
      "568": {
        start: {
          line: 1035,
          column: 4
        },
        end: {
          line: 1052,
          column: 11
        }
      },
      "569": {
        start: {
          line: 1036,
          column: 29
        },
        end: {
          line: 1047,
          column: 9
        }
      },
      "570": {
        start: {
          line: 1037,
          column: 27
        },
        end: {
          line: 1037,
          column: 44
        }
      },
      "571": {
        start: {
          line: 1038,
          column: 30
        },
        end: {
          line: 1038,
          column: 50
        }
      },
      "572": {
        start: {
          line: 1039,
          column: 12
        },
        end: {
          line: 1039,
          column: 46
        }
      },
      "573": {
        start: {
          line: 1039,
          column: 39
        },
        end: {
          line: 1039,
          column: 46
        }
      },
      "574": {
        start: {
          line: 1040,
          column: 12
        },
        end: {
          line: 1040,
          column: 49
        }
      },
      "575": {
        start: {
          line: 1041,
          column: 12
        },
        end: {
          line: 1041,
          column: 51
        }
      },
      "576": {
        start: {
          line: 1043,
          column: 24
        },
        end: {
          line: 1043,
          column: 47
        }
      },
      "577": {
        start: {
          line: 1044,
          column: 12
        },
        end: {
          line: 1046,
          column: 13
        }
      },
      "578": {
        start: {
          line: 1045,
          column: 16
        },
        end: {
          line: 1045,
          column: 65
        }
      },
      "579": {
        start: {
          line: 1048,
          column: 8
        },
        end: {
          line: 1048,
          column: 56
        }
      },
      "580": {
        start: {
          line: 1049,
          column: 8
        },
        end: {
          line: 1051,
          column: 10
        }
      },
      "581": {
        start: {
          line: 1050,
          column: 12
        },
        end: {
          line: 1050,
          column: 63
        }
      },
      "582": {
        start: {
          line: 1054,
          column: 25
        },
        end: {
          line: 1054,
          column: 93
        }
      },
      "583": {
        start: {
          line: 1054,
          column: 53
        },
        end: {
          line: 1054,
          column: 89
        }
      },
      "584": {
        start: {
          line: 1056,
          column: 25
        },
        end: {
          line: 1056,
          column: 34
        }
      },
      "585": {
        start: {
          line: 1057,
          column: 4
        },
        end: {
          line: 1061,
          column: 7
        }
      },
      "586": {
        start: {
          line: 1058,
          column: 8
        },
        end: {
          line: 1060,
          column: 11
        }
      },
      "587": {
        start: {
          line: 1059,
          column: 12
        },
        end: {
          line: 1059,
          column: 42
        }
      },
      "588": {
        start: {
          line: 1063,
          column: 23
        },
        end: {
          line: 1063,
          column: 32
        }
      },
      "589": {
        start: {
          line: 1064,
          column: 4
        },
        end: {
          line: 1068,
          column: 7
        }
      },
      "590": {
        start: {
          line: 1065,
          column: 8
        },
        end: {
          line: 1067,
          column: 11
        }
      },
      "591": {
        start: {
          line: 1066,
          column: 12
        },
        end: {
          line: 1066,
          column: 60
        }
      },
      "592": {
        start: {
          line: 1066,
          column: 39
        },
        end: {
          line: 1066,
          column: 58
        }
      },
      "593": {
        start: {
          line: 1069,
          column: 4
        },
        end: {
          line: 1451,
          column: 7
        }
      },
      "594": {
        start: {
          line: 1088,
          column: 53
        },
        end: {
          line: 1088,
          column: 97
        }
      },
      "595": {
        start: {
          line: 1158,
          column: 100
        },
        end: {
          line: 1158,
          column: 110
        }
      },
      "596": {
        start: {
          line: 1158,
          column: 172
        },
        end: {
          line: 1158,
          column: 182
        }
      },
      "597": {
        start: {
          line: 1194,
          column: 56
        },
        end: {
          line: 1194,
          column: 159
        }
      },
      "598": {
        start: {
          line: 1194,
          column: 111
        },
        end: {
          line: 1194,
          column: 150
        }
      },
      "599": {
        start: {
          line: 1217,
          column: 56
        },
        end: {
          line: 1217,
          column: 153
        }
      },
      "600": {
        start: {
          line: 1217,
          column: 111
        },
        end: {
          line: 1217,
          column: 144
        }
      },
      "601": {
        start: {
          line: 1222,
          column: 75
        },
        end: {
          line: 1222,
          column: 147
        }
      },
      "602": {
        start: {
          line: 1222,
          column: 113
        },
        end: {
          line: 1222,
          column: 146
        }
      },
      "603": {
        start: {
          line: 1243,
          column: 53
        },
        end: {
          line: 1243,
          column: 83
        }
      },
      "604": {
        start: {
          line: 1271,
          column: 63
        },
        end: {
          line: 1274,
          column: 54
        }
      },
      "605": {
        start: {
          line: 1305,
          column: 63
        },
        end: {
          line: 1308,
          column: 54
        }
      },
      "606": {
        start: {
          line: 1339,
          column: 63
        },
        end: {
          line: 1342,
          column: 54
        }
      },
      "607": {
        start: {
          line: 1373,
          column: 63
        },
        end: {
          line: 1376,
          column: 54
        }
      },
      "608": {
        start: {
          line: 1407,
          column: 63
        },
        end: {
          line: 1410,
          column: 54
        }
      },
      "609": {
        start: {
          line: 1432,
          column: 44
        },
        end: {
          line: 1439,
          column: 47
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 18,
            column: 9
          },
          end: {
            line: 18,
            column: 33
          }
        },
        loc: {
          start: {
            line: 18,
            column: 39
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 35
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 25
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        loc: {
          start: {
            line: 35,
            column: 18
          },
          end: {
            line: 54,
            column: 5
          }
        },
        line: 35
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        },
        loc: {
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 85,
            column: 5
          }
        },
        line: 55
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 86,
            column: 5
          }
        },
        loc: {
          start: {
            line: 86,
            column: 20
          },
          end: {
            line: 88,
            column: 5
          }
        },
        line: 86
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        },
        loc: {
          start: {
            line: 89,
            column: 29
          },
          end: {
            line: 111,
            column: 5
          }
        },
        line: 89
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 112,
            column: 4
          },
          end: {
            line: 112,
            column: 5
          }
        },
        loc: {
          start: {
            line: 112,
            column: 22
          },
          end: {
            line: 121,
            column: 5
          }
        },
        line: 112
      },
      "8": {
        name: "GlobalKnowledgeGraph",
        decl: {
          start: {
            line: 123,
            column: 9
          },
          end: {
            line: 123,
            column: 29
          }
        },
        loc: {
          start: {
            line: 123,
            column: 69
          },
          end: {
            line: 1452,
            column: 1
          }
        },
        line: 123
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 167,
            column: 26
          },
          end: {
            line: 167,
            column: 27
          }
        },
        loc: {
          start: {
            line: 167,
            column: 30
          },
          end: {
            line: 326,
            column: 5
          }
        },
        line: 167
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 178,
            column: 23
          },
          end: {
            line: 178,
            column: 24
          }
        },
        loc: {
          start: {
            line: 178,
            column: 32
          },
          end: {
            line: 187,
            column: 9
          }
        },
        line: 178
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 179,
            column: 37
          },
          end: {
            line: 179,
            column: 38
          }
        },
        loc: {
          start: {
            line: 179,
            column: 46
          },
          end: {
            line: 186,
            column: 13
          }
        },
        line: 179
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 185,
            column: 36
          },
          end: {
            line: 185,
            column: 37
          }
        },
        loc: {
          start: {
            line: 185,
            column: 43
          },
          end: {
            line: 185,
            column: 59
          }
        },
        line: 185
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 190,
            column: 27
          },
          end: {
            line: 190,
            column: 28
          }
        },
        loc: {
          start: {
            line: 190,
            column: 61
          },
          end: {
            line: 208,
            column: 9
          }
        },
        line: 190
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 212,
            column: 26
          },
          end: {
            line: 212,
            column: 27
          }
        },
        loc: {
          start: {
            line: 212,
            column: 42
          },
          end: {
            line: 225,
            column: 13
          }
        },
        line: 212
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 229,
            column: 18
          },
          end: {
            line: 229,
            column: 19
          }
        },
        loc: {
          start: {
            line: 229,
            column: 42
          },
          end: {
            line: 242,
            column: 13
          }
        },
        line: 229
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 246,
            column: 18
          },
          end: {
            line: 246,
            column: 19
          }
        },
        loc: {
          start: {
            line: 246,
            column: 32
          },
          end: {
            line: 258,
            column: 13
          }
        },
        line: 246
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 263,
            column: 23
          },
          end: {
            line: 263,
            column: 24
          }
        },
        loc: {
          start: {
            line: 263,
            column: 32
          },
          end: {
            line: 287,
            column: 9
          }
        },
        line: 263
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 264,
            column: 37
          },
          end: {
            line: 264,
            column: 38
          }
        },
        loc: {
          start: {
            line: 264,
            column: 46
          },
          end: {
            line: 286,
            column: 13
          }
        },
        line: 264
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 274,
            column: 36
          },
          end: {
            line: 274,
            column: 37
          }
        },
        loc: {
          start: {
            line: 274,
            column: 43
          },
          end: {
            line: 285,
            column: 17
          }
        },
        line: 274
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 276,
            column: 53
          },
          end: {
            line: 276,
            column: 54
          }
        },
        loc: {
          start: {
            line: 276,
            column: 61
          },
          end: {
            line: 276,
            column: 183
          }
        },
        line: 276
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 289,
            column: 43
          },
          end: {
            line: 289,
            column: 44
          }
        },
        loc: {
          start: {
            line: 289,
            column: 51
          },
          end: {
            line: 289,
            column: 72
          }
        },
        line: 289
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 297,
            column: 35
          },
          end: {
            line: 297,
            column: 36
          }
        },
        loc: {
          start: {
            line: 297,
            column: 48
          },
          end: {
            line: 304,
            column: 17
          }
        },
        line: 297
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 299,
            column: 44
          },
          end: {
            line: 299,
            column: 45
          }
        },
        loc: {
          start: {
            line: 299,
            column: 51
          },
          end: {
            line: 299,
            column: 70
          }
        },
        line: 299
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 302,
            column: 44
          },
          end: {
            line: 302,
            column: 45
          }
        },
        loc: {
          start: {
            line: 302,
            column: 51
          },
          end: {
            line: 302,
            column: 70
          }
        },
        line: 302
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 308,
            column: 25
          },
          end: {
            line: 308,
            column: 26
          }
        },
        loc: {
          start: {
            line: 308,
            column: 32
          },
          end: {
            line: 308,
            column: 51
          }
        },
        line: 308
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 330,
            column: 26
          },
          end: {
            line: 330,
            column: 27
          }
        },
        loc: {
          start: {
            line: 330,
            column: 30
          },
          end: {
            line: 360,
            column: 5
          }
        },
        line: 330
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 333,
            column: 39
          },
          end: {
            line: 333,
            column: 40
          }
        },
        loc: {
          start: {
            line: 333,
            column: 48
          },
          end: {
            line: 340,
            column: 13
          }
        },
        line: 333
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 342,
            column: 39
          },
          end: {
            line: 342,
            column: 40
          }
        },
        loc: {
          start: {
            line: 342,
            column: 47
          },
          end: {
            line: 354,
            column: 9
          }
        },
        line: 342
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 343,
            column: 45
          },
          end: {
            line: 343,
            column: 46
          }
        },
        loc: {
          start: {
            line: 343,
            column: 50
          },
          end: {
            line: 343,
            column: 70
          }
        },
        line: 343
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 344,
            column: 45
          },
          end: {
            line: 344,
            column: 46
          }
        },
        loc: {
          start: {
            line: 344,
            column: 50
          },
          end: {
            line: 344,
            column: 70
          }
        },
        line: 344
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 365,
            column: 57
          },
          end: {
            line: 365,
            column: 58
          }
        },
        loc: {
          start: {
            line: 365,
            column: 61
          },
          end: {
            line: 416,
            column: 5
          }
        },
        line: 365
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 380,
            column: 22
          },
          end: {
            line: 380,
            column: 23
          }
        },
        loc: {
          start: {
            line: 380,
            column: 30
          },
          end: {
            line: 386,
            column: 9
          }
        },
        line: 380
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 388,
            column: 22
          },
          end: {
            line: 388,
            column: 23
          }
        },
        loc: {
          start: {
            line: 388,
            column: 31
          },
          end: {
            line: 415,
            column: 9
          }
        },
        line: 388
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 396,
            column: 32
          },
          end: {
            line: 396,
            column: 33
          }
        },
        loc: {
          start: {
            line: 396,
            column: 41
          },
          end: {
            line: 414,
            column: 13
          }
        },
        line: 396
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 420,
            column: 58
          },
          end: {
            line: 420,
            column: 59
          }
        },
        loc: {
          start: {
            line: 420,
            column: 62
          },
          end: {
            line: 441,
            column: 5
          }
        },
        line: 420
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 423,
            column: 33
          },
          end: {
            line: 423,
            column: 34
          }
        },
        loc: {
          start: {
            line: 423,
            column: 41
          },
          end: {
            line: 440,
            column: 9
          }
        },
        line: 423
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 445,
            column: 56
          },
          end: {
            line: 445,
            column: 57
          }
        },
        loc: {
          start: {
            line: 445,
            column: 60
          },
          end: {
            line: 466,
            column: 5
          }
        },
        line: 445
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 452,
            column: 33
          },
          end: {
            line: 452,
            column: 34
          }
        },
        loc: {
          start: {
            line: 452,
            column: 41
          },
          end: {
            line: 465,
            column: 9
          }
        },
        line: 452
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 470,
            column: 60
          },
          end: {
            line: 470,
            column: 61
          }
        },
        loc: {
          start: {
            line: 470,
            column: 64
          },
          end: {
            line: 528,
            column: 5
          }
        },
        line: 470
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 485,
            column: 22
          },
          end: {
            line: 485,
            column: 23
          }
        },
        loc: {
          start: {
            line: 485,
            column: 30
          },
          end: {
            line: 491,
            column: 9
          }
        },
        line: 485
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 493,
            column: 22
          },
          end: {
            line: 493,
            column: 23
          }
        },
        loc: {
          start: {
            line: 493,
            column: 31
          },
          end: {
            line: 527,
            column: 9
          }
        },
        line: 493
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 501,
            column: 33
          },
          end: {
            line: 501,
            column: 34
          }
        },
        loc: {
          start: {
            line: 501,
            column: 46
          },
          end: {
            line: 526,
            column: 13
          }
        },
        line: 501
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 531,
            column: 50
          },
          end: {
            line: 531,
            column: 51
          }
        },
        loc: {
          start: {
            line: 531,
            column: 54
          },
          end: {
            line: 602,
            column: 5
          }
        },
        line: 531
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 558,
            column: 33
          },
          end: {
            line: 558,
            column: 34
          }
        },
        loc: {
          start: {
            line: 558,
            column: 41
          },
          end: {
            line: 580,
            column: 9
          }
        },
        line: 558
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 612,
            column: 26
          },
          end: {
            line: 612,
            column: 27
          }
        },
        loc: {
          start: {
            line: 612,
            column: 30
          },
          end: {
            line: 683,
            column: 5
          }
        },
        line: 612
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 623,
            column: 52
          },
          end: {
            line: 623,
            column: 53
          }
        },
        loc: {
          start: {
            line: 623,
            column: 56
          },
          end: {
            line: 653,
            column: 13
          }
        },
        line: 623
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 626,
            column: 73
          },
          end: {
            line: 626,
            column: 74
          }
        },
        loc: {
          start: {
            line: 626,
            column: 81
          },
          end: {
            line: 647,
            column: 21
          }
        },
        line: 626
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 656,
            column: 48
          },
          end: {
            line: 656,
            column: 49
          }
        },
        loc: {
          start: {
            line: 656,
            column: 52
          },
          end: {
            line: 658,
            column: 13
          }
        },
        line: 656
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 661,
            column: 47
          },
          end: {
            line: 661,
            column: 48
          }
        },
        loc: {
          start: {
            line: 661,
            column: 51
          },
          end: {
            line: 663,
            column: 13
          }
        },
        line: 661
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 664,
            column: 19
          },
          end: {
            line: 664,
            column: 20
          }
        },
        loc: {
          start: {
            line: 664,
            column: 23
          },
          end: {
            line: 673,
            column: 13
          }
        },
        line: 664
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 687,
            column: 55
          },
          end: {
            line: 687,
            column: 56
          }
        },
        loc: {
          start: {
            line: 687,
            column: 59
          },
          end: {
            line: 749,
            column: 5
          }
        },
        line: 687
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 716,
            column: 44
          },
          end: {
            line: 716,
            column: 45
          }
        },
        loc: {
          start: {
            line: 716,
            column: 53
          },
          end: {
            line: 723,
            column: 13
          }
        },
        line: 716
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 725,
            column: 44
          },
          end: {
            line: 725,
            column: 45
          }
        },
        loc: {
          start: {
            line: 725,
            column: 52
          },
          end: {
            line: 737,
            column: 9
          }
        },
        line: 725
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 726,
            column: 45
          },
          end: {
            line: 726,
            column: 46
          }
        },
        loc: {
          start: {
            line: 726,
            column: 50
          },
          end: {
            line: 726,
            column: 70
          }
        },
        line: 726
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 727,
            column: 45
          },
          end: {
            line: 727,
            column: 46
          }
        },
        loc: {
          start: {
            line: 727,
            column: 50
          },
          end: {
            line: 727,
            column: 70
          }
        },
        line: 727
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 750,
            column: 52
          },
          end: {
            line: 750,
            column: 53
          }
        },
        loc: {
          start: {
            line: 750,
            column: 60
          },
          end: {
            line: 811,
            column: 5
          }
        },
        line: 750
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 756,
            column: 27
          },
          end: {
            line: 756,
            column: 28
          }
        },
        loc: {
          start: {
            line: 756,
            column: 36
          },
          end: {
            line: 765,
            column: 13
          }
        },
        line: 756
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 757,
            column: 41
          },
          end: {
            line: 757,
            column: 42
          }
        },
        loc: {
          start: {
            line: 757,
            column: 50
          },
          end: {
            line: 764,
            column: 17
          }
        },
        line: 757
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 768,
            column: 60
          },
          end: {
            line: 768,
            column: 61
          }
        },
        loc: {
          start: {
            line: 768,
            column: 80
          },
          end: {
            line: 768,
            column: 116
          }
        },
        line: 768
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 788,
            column: 27
          },
          end: {
            line: 788,
            column: 28
          }
        },
        loc: {
          start: {
            line: 788,
            column: 36
          },
          end: {
            line: 797,
            column: 13
          }
        },
        line: 788
      },
      "61": {
        name: "(anonymous_61)",
        decl: {
          start: {
            line: 789,
            column: 41
          },
          end: {
            line: 789,
            column: 42
          }
        },
        loc: {
          start: {
            line: 789,
            column: 50
          },
          end: {
            line: 796,
            column: 17
          }
        },
        line: 789
      },
      "62": {
        name: "(anonymous_62)",
        decl: {
          start: {
            line: 815,
            column: 52
          },
          end: {
            line: 815,
            column: 53
          }
        },
        loc: {
          start: {
            line: 815,
            column: 57
          },
          end: {
            line: 859,
            column: 5
          }
        },
        line: 815
      },
      "63": {
        name: "(anonymous_63)",
        decl: {
          start: {
            line: 822,
            column: 35
          },
          end: {
            line: 822,
            column: 36
          }
        },
        loc: {
          start: {
            line: 822,
            column: 43
          },
          end: {
            line: 826,
            column: 9
          }
        },
        line: 822
      },
      "64": {
        name: "(anonymous_64)",
        decl: {
          start: {
            line: 834,
            column: 65
          },
          end: {
            line: 834,
            column: 66
          }
        },
        loc: {
          start: {
            line: 834,
            column: 70
          },
          end: {
            line: 834,
            column: 89
          }
        },
        line: 834
      },
      "65": {
        name: "(anonymous_65)",
        decl: {
          start: {
            line: 844,
            column: 65
          },
          end: {
            line: 844,
            column: 66
          }
        },
        loc: {
          start: {
            line: 844,
            column: 70
          },
          end: {
            line: 844,
            column: 89
          }
        },
        line: 844
      },
      "66": {
        name: "(anonymous_66)",
        decl: {
          start: {
            line: 867,
            column: 58
          },
          end: {
            line: 867,
            column: 59
          }
        },
        loc: {
          start: {
            line: 867,
            column: 63
          },
          end: {
            line: 899,
            column: 5
          }
        },
        line: 867
      },
      "67": {
        name: "(anonymous_67)",
        decl: {
          start: {
            line: 874,
            column: 35
          },
          end: {
            line: 874,
            column: 36
          }
        },
        loc: {
          start: {
            line: 874,
            column: 43
          },
          end: {
            line: 878,
            column: 9
          }
        },
        line: 874
      },
      "68": {
        name: "(anonymous_68)",
        decl: {
          start: {
            line: 882,
            column: 68
          },
          end: {
            line: 882,
            column: 69
          }
        },
        loc: {
          start: {
            line: 882,
            column: 73
          },
          end: {
            line: 882,
            column: 96
          }
        },
        line: 882
      },
      "69": {
        name: "(anonymous_69)",
        decl: {
          start: {
            line: 907,
            column: 56
          },
          end: {
            line: 907,
            column: 57
          }
        },
        loc: {
          start: {
            line: 907,
            column: 60
          },
          end: {
            line: 910,
            column: 5
          }
        },
        line: 907
      },
      "70": {
        name: "(anonymous_70)",
        decl: {
          start: {
            line: 911,
            column: 49
          },
          end: {
            line: 911,
            column: 50
          }
        },
        loc: {
          start: {
            line: 911,
            column: 53
          },
          end: {
            line: 913,
            column: 5
          }
        },
        line: 911
      },
      "71": {
        name: "(anonymous_71)",
        decl: {
          start: {
            line: 912,
            column: 21
          },
          end: {
            line: 912,
            column: 22
          }
        },
        loc: {
          start: {
            line: 912,
            column: 29
          },
          end: {
            line: 912,
            column: 52
          }
        },
        line: 912
      },
      "72": {
        name: "(anonymous_72)",
        decl: {
          start: {
            line: 914,
            column: 50
          },
          end: {
            line: 914,
            column: 51
          }
        },
        loc: {
          start: {
            line: 914,
            column: 54
          },
          end: {
            line: 916,
            column: 5
          }
        },
        line: 914
      },
      "73": {
        name: "(anonymous_73)",
        decl: {
          start: {
            line: 915,
            column: 21
          },
          end: {
            line: 915,
            column: 22
          }
        },
        loc: {
          start: {
            line: 915,
            column: 29
          },
          end: {
            line: 915,
            column: 54
          }
        },
        line: 915
      },
      "74": {
        name: "(anonymous_74)",
        decl: {
          start: {
            line: 917,
            column: 48
          },
          end: {
            line: 917,
            column: 49
          }
        },
        loc: {
          start: {
            line: 917,
            column: 52
          },
          end: {
            line: 923,
            column: 5
          }
        },
        line: 917
      },
      "75": {
        name: "(anonymous_75)",
        decl: {
          start: {
            line: 925,
            column: 26
          },
          end: {
            line: 925,
            column: 27
          }
        },
        loc: {
          start: {
            line: 925,
            column: 30
          },
          end: {
            line: 1026,
            column: 5
          }
        },
        line: 925
      },
      "76": {
        name: "(anonymous_76)",
        decl: {
          start: {
            line: 946,
            column: 38
          },
          end: {
            line: 946,
            column: 39
          }
        },
        loc: {
          start: {
            line: 946,
            column: 43
          },
          end: {
            line: 946,
            column: 63
          }
        },
        line: 946
      },
      "77": {
        name: "(anonymous_77)",
        decl: {
          start: {
            line: 947,
            column: 38
          },
          end: {
            line: 947,
            column: 39
          }
        },
        loc: {
          start: {
            line: 947,
            column: 43
          },
          end: {
            line: 947,
            column: 63
          }
        },
        line: 947
      },
      "78": {
        name: "(anonymous_78)",
        decl: {
          start: {
            line: 990,
            column: 63
          },
          end: {
            line: 990,
            column: 64
          }
        },
        loc: {
          start: {
            line: 990,
            column: 68
          },
          end: {
            line: 990,
            column: 84
          }
        },
        line: 990
      },
      "79": {
        name: "(anonymous_79)",
        decl: {
          start: {
            line: 1035,
            column: 26
          },
          end: {
            line: 1035,
            column: 27
          }
        },
        loc: {
          start: {
            line: 1035,
            column: 30
          },
          end: {
            line: 1052,
            column: 5
          }
        },
        line: 1035
      },
      "80": {
        name: "(anonymous_80)",
        decl: {
          start: {
            line: 1036,
            column: 29
          },
          end: {
            line: 1036,
            column: 30
          }
        },
        loc: {
          start: {
            line: 1036,
            column: 33
          },
          end: {
            line: 1047,
            column: 9
          }
        },
        line: 1036
      },
      "81": {
        name: "(anonymous_81)",
        decl: {
          start: {
            line: 1049,
            column: 15
          },
          end: {
            line: 1049,
            column: 16
          }
        },
        loc: {
          start: {
            line: 1049,
            column: 19
          },
          end: {
            line: 1051,
            column: 9
          }
        },
        line: 1049
      },
      "82": {
        name: "(anonymous_82)",
        decl: {
          start: {
            line: 1054,
            column: 39
          },
          end: {
            line: 1054,
            column: 40
          }
        },
        loc: {
          start: {
            line: 1054,
            column: 53
          },
          end: {
            line: 1054,
            column: 89
          }
        },
        line: 1054
      },
      "83": {
        name: "(anonymous_83)",
        decl: {
          start: {
            line: 1057,
            column: 19
          },
          end: {
            line: 1057,
            column: 20
          }
        },
        loc: {
          start: {
            line: 1057,
            column: 28
          },
          end: {
            line: 1061,
            column: 5
          }
        },
        line: 1057
      },
      "84": {
        name: "(anonymous_84)",
        decl: {
          start: {
            line: 1058,
            column: 33
          },
          end: {
            line: 1058,
            column: 34
          }
        },
        loc: {
          start: {
            line: 1058,
            column: 42
          },
          end: {
            line: 1060,
            column: 9
          }
        },
        line: 1058
      },
      "85": {
        name: "(anonymous_85)",
        decl: {
          start: {
            line: 1064,
            column: 19
          },
          end: {
            line: 1064,
            column: 20
          }
        },
        loc: {
          start: {
            line: 1064,
            column: 28
          },
          end: {
            line: 1068,
            column: 5
          }
        },
        line: 1064
      },
      "86": {
        name: "(anonymous_86)",
        decl: {
          start: {
            line: 1065,
            column: 33
          },
          end: {
            line: 1065,
            column: 34
          }
        },
        loc: {
          start: {
            line: 1065,
            column: 42
          },
          end: {
            line: 1067,
            column: 9
          }
        },
        line: 1065
      },
      "87": {
        name: "(anonymous_87)",
        decl: {
          start: {
            line: 1066,
            column: 32
          },
          end: {
            line: 1066,
            column: 33
          }
        },
        loc: {
          start: {
            line: 1066,
            column: 39
          },
          end: {
            line: 1066,
            column: 58
          }
        },
        line: 1066
      },
      "88": {
        name: "(anonymous_88)",
        decl: {
          start: {
            line: 1088,
            column: 49
          },
          end: {
            line: 1088,
            column: 50
          }
        },
        loc: {
          start: {
            line: 1088,
            column: 53
          },
          end: {
            line: 1088,
            column: 97
          }
        },
        line: 1088
      },
      "89": {
        name: "(anonymous_89)",
        decl: {
          start: {
            line: 1158,
            column: 95
          },
          end: {
            line: 1158,
            column: 96
          }
        },
        loc: {
          start: {
            line: 1158,
            column: 100
          },
          end: {
            line: 1158,
            column: 110
          }
        },
        line: 1158
      },
      "90": {
        name: "(anonymous_90)",
        decl: {
          start: {
            line: 1158,
            column: 167
          },
          end: {
            line: 1158,
            column: 168
          }
        },
        loc: {
          start: {
            line: 1158,
            column: 172
          },
          end: {
            line: 1158,
            column: 182
          }
        },
        line: 1158
      },
      "91": {
        name: "(anonymous_91)",
        decl: {
          start: {
            line: 1193,
            column: 66
          },
          end: {
            line: 1193,
            column: 67
          }
        },
        loc: {
          start: {
            line: 1193,
            column: 82
          },
          end: {
            line: 1195,
            column: 53
          }
        },
        line: 1193
      },
      "92": {
        name: "(anonymous_92)",
        decl: {
          start: {
            line: 1194,
            column: 102
          },
          end: {
            line: 1194,
            column: 103
          }
        },
        loc: {
          start: {
            line: 1194,
            column: 111
          },
          end: {
            line: 1194,
            column: 150
          }
        },
        line: 1194
      },
      "93": {
        name: "(anonymous_93)",
        decl: {
          start: {
            line: 1216,
            column: 66
          },
          end: {
            line: 1216,
            column: 67
          }
        },
        loc: {
          start: {
            line: 1216,
            column: 82
          },
          end: {
            line: 1218,
            column: 53
          }
        },
        line: 1216
      },
      "94": {
        name: "(anonymous_94)",
        decl: {
          start: {
            line: 1217,
            column: 102
          },
          end: {
            line: 1217,
            column: 103
          }
        },
        loc: {
          start: {
            line: 1217,
            column: 111
          },
          end: {
            line: 1217,
            column: 144
          }
        },
        line: 1217
      },
      "95": {
        name: "(anonymous_95)",
        decl: {
          start: {
            line: 1222,
            column: 66
          },
          end: {
            line: 1222,
            column: 67
          }
        },
        loc: {
          start: {
            line: 1222,
            column: 75
          },
          end: {
            line: 1222,
            column: 147
          }
        },
        line: 1222
      },
      "96": {
        name: "(anonymous_96)",
        decl: {
          start: {
            line: 1222,
            column: 104
          },
          end: {
            line: 1222,
            column: 105
          }
        },
        loc: {
          start: {
            line: 1222,
            column: 113
          },
          end: {
            line: 1222,
            column: 146
          }
        },
        line: 1222
      },
      "97": {
        name: "(anonymous_97)",
        decl: {
          start: {
            line: 1243,
            column: 49
          },
          end: {
            line: 1243,
            column: 50
          }
        },
        loc: {
          start: {
            line: 1243,
            column: 53
          },
          end: {
            line: 1243,
            column: 83
          }
        },
        line: 1243
      },
      "98": {
        name: "(anonymous_98)",
        decl: {
          start: {
            line: 1271,
            column: 58
          },
          end: {
            line: 1271,
            column: 59
          }
        },
        loc: {
          start: {
            line: 1271,
            column: 63
          },
          end: {
            line: 1274,
            column: 54
          }
        },
        line: 1271
      },
      "99": {
        name: "(anonymous_99)",
        decl: {
          start: {
            line: 1305,
            column: 58
          },
          end: {
            line: 1305,
            column: 59
          }
        },
        loc: {
          start: {
            line: 1305,
            column: 63
          },
          end: {
            line: 1308,
            column: 54
          }
        },
        line: 1305
      },
      "100": {
        name: "(anonymous_100)",
        decl: {
          start: {
            line: 1339,
            column: 58
          },
          end: {
            line: 1339,
            column: 59
          }
        },
        loc: {
          start: {
            line: 1339,
            column: 63
          },
          end: {
            line: 1342,
            column: 54
          }
        },
        line: 1339
      },
      "101": {
        name: "(anonymous_101)",
        decl: {
          start: {
            line: 1373,
            column: 58
          },
          end: {
            line: 1373,
            column: 59
          }
        },
        loc: {
          start: {
            line: 1373,
            column: 63
          },
          end: {
            line: 1376,
            column: 54
          }
        },
        line: 1373
      },
      "102": {
        name: "(anonymous_102)",
        decl: {
          start: {
            line: 1407,
            column: 58
          },
          end: {
            line: 1407,
            column: 59
          }
        },
        loc: {
          start: {
            line: 1407,
            column: 63
          },
          end: {
            line: 1410,
            column: 54
          }
        },
        line: 1407
      },
      "103": {
        name: "(anonymous_103)",
        decl: {
          start: {
            line: 1430,
            column: 49
          },
          end: {
            line: 1430,
            column: 50
          }
        },
        loc: {
          start: {
            line: 1430,
            column: 53
          },
          end: {
            line: 1440,
            column: 41
          }
        },
        line: 1430
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 11
          },
          end: {
            line: 21,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 19,
            column: 35
          },
          end: {
            line: 19,
            column: 38
          }
        }, {
          start: {
            line: 19,
            column: 41
          },
          end: {
            line: 21,
            column: 5
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 19,
            column: 11
          },
          end: {
            line: 19,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 11
          },
          end: {
            line: 19,
            column: 14
          }
        }, {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 32
          }
        }],
        line: 19
      },
      "2": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 39,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 39,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "3": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "4": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "5": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 49,
            column: 54
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 49,
            column: 54
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "6": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 50,
            column: 54
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 50,
            column: 54
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "7": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 51,
            column: 54
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 51,
            column: 54
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "8": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 52,
            column: 55
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 52,
            column: 55
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "9": {
        loc: {
          start: {
            line: 87,
            column: 15
          },
          end: {
            line: 87,
            column: 221
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 87,
            column: 15
          },
          end: {
            line: 87,
            column: 63
          }
        }, {
          start: {
            line: 87,
            column: 67
          },
          end: {
            line: 87,
            column: 115
          }
        }, {
          start: {
            line: 87,
            column: 119
          },
          end: {
            line: 87,
            column: 168
          }
        }, {
          start: {
            line: 87,
            column: 172
          },
          end: {
            line: 87,
            column: 221
          }
        }],
        line: 87
      },
      "10": {
        loc: {
          start: {
            line: 89,
            column: 17
          },
          end: {
            line: 89,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 89,
            column: 25
          },
          end: {
            line: 89,
            column: 27
          }
        }],
        line: 89
      },
      "11": {
        loc: {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "12": {
        loc: {
          start: {
            line: 99,
            column: 12
          },
          end: {
            line: 101,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 12
          },
          end: {
            line: 101,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "13": {
        loc: {
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "14": {
        loc: {
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 115,
            column: 66
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 115,
            column: 66
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "15": {
        loc: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 116,
            column: 67
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 116,
            column: 67
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "16": {
        loc: {
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 117,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 117,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "17": {
        loc: {
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 118,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 118,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "18": {
        loc: {
          start: {
            line: 168,
            column: 8
          },
          end: {
            line: 168,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 8
          },
          end: {
            line: 168,
            column: 35
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "19": {
        loc: {
          start: {
            line: 171,
            column: 22
          },
          end: {
            line: 171,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 171,
            column: 22
          },
          end: {
            line: 171,
            column: 44
          }
        }, {
          start: {
            line: 171,
            column: 48
          },
          end: {
            line: 171,
            column: 51
          }
        }],
        line: 171
      },
      "20": {
        loc: {
          start: {
            line: 172,
            column: 23
          },
          end: {
            line: 172,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 23
          },
          end: {
            line: 172,
            column: 46
          }
        }, {
          start: {
            line: 172,
            column: 50
          },
          end: {
            line: 172,
            column: 53
          }
        }],
        line: 172
      },
      "21": {
        loc: {
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 207,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 207,
            column: 13
          }
        }, {
          start: {
            line: 201,
            column: 19
          },
          end: {
            line: 207,
            column: 13
          }
        }],
        line: 191
      },
      "22": {
        loc: {
          start: {
            line: 204,
            column: 16
          },
          end: {
            line: 206,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 16
          },
          end: {
            line: 206,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "23": {
        loc: {
          start: {
            line: 276,
            column: 61
          },
          end: {
            line: 276,
            column: 183
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 276,
            column: 61
          },
          end: {
            line: 276,
            column: 88
          }
        }, {
          start: {
            line: 276,
            column: 92
          },
          end: {
            line: 276,
            column: 120
          }
        }, {
          start: {
            line: 276,
            column: 124
          },
          end: {
            line: 276,
            column: 152
          }
        }, {
          start: {
            line: 276,
            column: 156
          },
          end: {
            line: 276,
            column: 183
          }
        }],
        line: 276
      },
      "24": {
        loc: {
          start: {
            line: 277,
            column: 20
          },
          end: {
            line: 284,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 277,
            column: 20
          },
          end: {
            line: 284,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 277
      },
      "25": {
        loc: {
          start: {
            line: 298,
            column: 20
          },
          end: {
            line: 300,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 298,
            column: 20
          },
          end: {
            line: 300,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 298
      },
      "26": {
        loc: {
          start: {
            line: 301,
            column: 20
          },
          end: {
            line: 303,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 301,
            column: 20
          },
          end: {
            line: 303,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 301
      },
      "27": {
        loc: {
          start: {
            line: 309,
            column: 16
          },
          end: {
            line: 316,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 309,
            column: 16
          },
          end: {
            line: 316,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 309
      },
      "28": {
        loc: {
          start: {
            line: 331,
            column: 8
          },
          end: {
            line: 331,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 331,
            column: 8
          },
          end: {
            line: 331,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 331
      },
      "29": {
        loc: {
          start: {
            line: 331,
            column: 12
          },
          end: {
            line: 331,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 331,
            column: 12
          },
          end: {
            line: 331,
            column: 25
          }
        }, {
          start: {
            line: 331,
            column: 29
          },
          end: {
            line: 331,
            column: 42
          }
        }],
        line: 331
      },
      "30": {
        loc: {
          start: {
            line: 345,
            column: 12
          },
          end: {
            line: 348,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 345,
            column: 12
          },
          end: {
            line: 348,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 345
      },
      "31": {
        loc: {
          start: {
            line: 345,
            column: 16
          },
          end: {
            line: 345,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 345,
            column: 16
          },
          end: {
            line: 345,
            column: 23
          }
        }, {
          start: {
            line: 345,
            column: 27
          },
          end: {
            line: 345,
            column: 34
          }
        }],
        line: 345
      },
      "32": {
        loc: {
          start: {
            line: 367,
            column: 8
          },
          end: {
            line: 367,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 367,
            column: 8
          },
          end: {
            line: 367,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 367
      },
      "33": {
        loc: {
          start: {
            line: 370,
            column: 8
          },
          end: {
            line: 370,
            column: 31
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 370,
            column: 8
          },
          end: {
            line: 370,
            column: 31
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 370
      },
      "34": {
        loc: {
          start: {
            line: 397,
            column: 16
          },
          end: {
            line: 397,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 397,
            column: 16
          },
          end: {
            line: 397,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 397
      },
      "35": {
        loc: {
          start: {
            line: 403,
            column: 16
          },
          end: {
            line: 403,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 403,
            column: 16
          },
          end: {
            line: 403,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 403
      },
      "36": {
        loc: {
          start: {
            line: 422,
            column: 8
          },
          end: {
            line: 422,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 422,
            column: 8
          },
          end: {
            line: 422,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 422
      },
      "37": {
        loc: {
          start: {
            line: 430,
            column: 12
          },
          end: {
            line: 430,
            column: 39
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 430,
            column: 12
          },
          end: {
            line: 430,
            column: 39
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 430
      },
      "38": {
        loc: {
          start: {
            line: 447,
            column: 8
          },
          end: {
            line: 447,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 447,
            column: 8
          },
          end: {
            line: 447,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 447
      },
      "39": {
        loc: {
          start: {
            line: 449,
            column: 8
          },
          end: {
            line: 449,
            column: 31
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 449,
            column: 8
          },
          end: {
            line: 449,
            column: 31
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 449
      },
      "40": {
        loc: {
          start: {
            line: 457,
            column: 12
          },
          end: {
            line: 457,
            column: 39
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 457,
            column: 12
          },
          end: {
            line: 457,
            column: 39
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 457
      },
      "41": {
        loc: {
          start: {
            line: 472,
            column: 8
          },
          end: {
            line: 472,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 472,
            column: 8
          },
          end: {
            line: 472,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 472
      },
      "42": {
        loc: {
          start: {
            line: 476,
            column: 8
          },
          end: {
            line: 476,
            column: 31
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 476,
            column: 8
          },
          end: {
            line: 476,
            column: 31
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 476
      },
      "43": {
        loc: {
          start: {
            line: 503,
            column: 16
          },
          end: {
            line: 503,
            column: 69
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 503,
            column: 16
          },
          end: {
            line: 503,
            column: 69
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 503
      },
      "44": {
        loc: {
          start: {
            line: 503,
            column: 20
          },
          end: {
            line: 503,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 503,
            column: 20
          },
          end: {
            line: 503,
            column: 35
          }
        }, {
          start: {
            line: 503,
            column: 39
          },
          end: {
            line: 503,
            column: 60
          }
        }],
        line: 503
      },
      "45": {
        loc: {
          start: {
            line: 510,
            column: 16
          },
          end: {
            line: 525,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 510,
            column: 16
          },
          end: {
            line: 525,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 510
      },
      "46": {
        loc: {
          start: {
            line: 510,
            column: 20
          },
          end: {
            line: 510,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 510,
            column: 20
          },
          end: {
            line: 510,
            column: 42
          }
        }, {
          start: {
            line: 510,
            column: 46
          },
          end: {
            line: 510,
            column: 58
          }
        }],
        line: 510
      },
      "47": {
        loc: {
          start: {
            line: 517,
            column: 20
          },
          end: {
            line: 520,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 517,
            column: 20
          },
          end: {
            line: 520,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 517
      },
      "48": {
        loc: {
          start: {
            line: 521,
            column: 20
          },
          end: {
            line: 524,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 521,
            column: 20
          },
          end: {
            line: 524,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 521
      },
      "49": {
        loc: {
          start: {
            line: 533,
            column: 8
          },
          end: {
            line: 538,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 533,
            column: 8
          },
          end: {
            line: 538,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 533
      },
      "50": {
        loc: {
          start: {
            line: 533,
            column: 12
          },
          end: {
            line: 533,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 533,
            column: 12
          },
          end: {
            line: 533,
            column: 23
          }
        }, {
          start: {
            line: 533,
            column: 27
          },
          end: {
            line: 533,
            column: 47
          }
        }],
        line: 533
      },
      "51": {
        loc: {
          start: {
            line: 534,
            column: 12
          },
          end: {
            line: 536,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 534,
            column: 12
          },
          end: {
            line: 536,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 534
      },
      "52": {
        loc: {
          start: {
            line: 544,
            column: 8
          },
          end: {
            line: 551,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 544,
            column: 8
          },
          end: {
            line: 551,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 544
      },
      "53": {
        loc: {
          start: {
            line: 545,
            column: 31
          },
          end: {
            line: 545,
            column: 55
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 545,
            column: 50
          },
          end: {
            line: 545,
            column: 51
          }
        }, {
          start: {
            line: 545,
            column: 54
          },
          end: {
            line: 545,
            column: 55
          }
        }],
        line: 545
      },
      "54": {
        loc: {
          start: {
            line: 546,
            column: 34
          },
          end: {
            line: 546,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 546,
            column: 34
          },
          end: {
            line: 546,
            column: 59
          }
        }, {
          start: {
            line: 546,
            column: 63
          },
          end: {
            line: 546,
            column: 64
          }
        }],
        line: 546
      },
      "55": {
        loc: {
          start: {
            line: 547,
            column: 12
          },
          end: {
            line: 550,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 547,
            column: 12
          },
          end: {
            line: 550,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 547
      },
      "56": {
        loc: {
          start: {
            line: 560,
            column: 12
          },
          end: {
            line: 564,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 560,
            column: 12
          },
          end: {
            line: 564,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 560
      },
      "57": {
        loc: {
          start: {
            line: 560,
            column: 16
          },
          end: {
            line: 560,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 560,
            column: 16
          },
          end: {
            line: 560,
            column: 29
          }
        }, {
          start: {
            line: 560,
            column: 33
          },
          end: {
            line: 560,
            column: 49
          }
        }, {
          start: {
            line: 560,
            column: 53
          },
          end: {
            line: 560,
            column: 69
          }
        }],
        line: 560
      },
      "58": {
        loc: {
          start: {
            line: 569,
            column: 75
          },
          end: {
            line: 569,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 569,
            column: 92
          },
          end: {
            line: 569,
            column: 95
          }
        }, {
          start: {
            line: 569,
            column: 98
          },
          end: {
            line: 569,
            column: 101
          }
        }],
        line: 569
      },
      "59": {
        loc: {
          start: {
            line: 571,
            column: 12
          },
          end: {
            line: 574,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 571,
            column: 12
          },
          end: {
            line: 574,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 571
      },
      "60": {
        loc: {
          start: {
            line: 586,
            column: 34
          },
          end: {
            line: 586,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 586,
            column: 51
          },
          end: {
            line: 586,
            column: 54
          }
        }, {
          start: {
            line: 586,
            column: 57
          },
          end: {
            line: 586,
            column: 61
          }
        }],
        line: 586
      },
      "61": {
        loc: {
          start: {
            line: 587,
            column: 40
          },
          end: {
            line: 587,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 587,
            column: 57
          },
          end: {
            line: 587,
            column: 59
          }
        }, {
          start: {
            line: 587,
            column: 62
          },
          end: {
            line: 587,
            column: 64
          }
        }],
        line: 587
      },
      "62": {
        loc: {
          start: {
            line: 589,
            column: 8
          },
          end: {
            line: 599,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 589,
            column: 8
          },
          end: {
            line: 599,
            column: 9
          }
        }, {
          start: {
            line: 597,
            column: 15
          },
          end: {
            line: 599,
            column: 9
          }
        }],
        line: 589
      },
      "63": {
        loc: {
          start: {
            line: 592,
            column: 12
          },
          end: {
            line: 596,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 592,
            column: 12
          },
          end: {
            line: 596,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 592
      },
      "64": {
        loc: {
          start: {
            line: 613,
            column: 8
          },
          end: {
            line: 682,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 613,
            column: 8
          },
          end: {
            line: 682,
            column: 9
          }
        }, {
          start: {
            line: 674,
            column: 15
          },
          end: {
            line: 682,
            column: 9
          }
        }],
        line: 613
      },
      "65": {
        loc: {
          start: {
            line: 617,
            column: 30
          },
          end: {
            line: 617,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 617,
            column: 30
          },
          end: {
            line: 617,
            column: 65
          }
        }, {
          start: {
            line: 617,
            column: 69
          },
          end: {
            line: 617,
            column: 70
          }
        }],
        line: 617
      },
      "66": {
        loc: {
          start: {
            line: 621,
            column: 35
          },
          end: {
            line: 621,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 621,
            column: 54
          },
          end: {
            line: 621,
            column: 57
          }
        }, {
          start: {
            line: 621,
            column: 60
          },
          end: {
            line: 621,
            column: 84
          }
        }],
        line: 621
      },
      "67": {
        loc: {
          start: {
            line: 621,
            column: 60
          },
          end: {
            line: 621,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 621,
            column: 77
          },
          end: {
            line: 621,
            column: 79
          }
        }, {
          start: {
            line: 621,
            column: 82
          },
          end: {
            line: 621,
            column: 84
          }
        }],
        line: 621
      },
      "68": {
        loc: {
          start: {
            line: 624,
            column: 16
          },
          end: {
            line: 652,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 624,
            column: 16
          },
          end: {
            line: 652,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 624
      },
      "69": {
        loc: {
          start: {
            line: 624,
            column: 20
          },
          end: {
            line: 624,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 624,
            column: 20
          },
          end: {
            line: 624,
            column: 42
          }
        }, {
          start: {
            line: 624,
            column: 46
          },
          end: {
            line: 624,
            column: 67
          }
        }],
        line: 624
      },
      "70": {
        loc: {
          start: {
            line: 627,
            column: 24
          },
          end: {
            line: 646,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 627,
            column: 24
          },
          end: {
            line: 646,
            column: 25
          }
        }, {
          start: {
            line: 641,
            column: 31
          },
          end: {
            line: 646,
            column: 25
          }
        }],
        line: 627
      },
      "71": {
        loc: {
          start: {
            line: 665,
            column: 16
          },
          end: {
            line: 667,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 665,
            column: 16
          },
          end: {
            line: 667,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 665
      },
      "72": {
        loc: {
          start: {
            line: 668,
            column: 16
          },
          end: {
            line: 670,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 668,
            column: 16
          },
          end: {
            line: 670,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 668
      },
      "73": {
        loc: {
          start: {
            line: 676,
            column: 12
          },
          end: {
            line: 678,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 676,
            column: 12
          },
          end: {
            line: 678,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 676
      },
      "74": {
        loc: {
          start: {
            line: 679,
            column: 12
          },
          end: {
            line: 681,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 679,
            column: 12
          },
          end: {
            line: 681,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 679
      },
      "75": {
        loc: {
          start: {
            line: 688,
            column: 8
          },
          end: {
            line: 691,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 688,
            column: 8
          },
          end: {
            line: 691,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 688
      },
      "76": {
        loc: {
          start: {
            line: 688,
            column: 12
          },
          end: {
            line: 688,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 688,
            column: 12
          },
          end: {
            line: 688,
            column: 38
          }
        }, {
          start: {
            line: 688,
            column: 42
          },
          end: {
            line: 688,
            column: 78
          }
        }],
        line: 688
      },
      "77": {
        loc: {
          start: {
            line: 694,
            column: 8
          },
          end: {
            line: 696,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 694,
            column: 8
          },
          end: {
            line: 696,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 694
      },
      "78": {
        loc: {
          start: {
            line: 697,
            column: 8
          },
          end: {
            line: 699,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 697,
            column: 8
          },
          end: {
            line: 699,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 697
      },
      "79": {
        loc: {
          start: {
            line: 728,
            column: 12
          },
          end: {
            line: 731,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 728,
            column: 12
          },
          end: {
            line: 731,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 728
      },
      "80": {
        loc: {
          start: {
            line: 728,
            column: 16
          },
          end: {
            line: 728,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 728,
            column: 16
          },
          end: {
            line: 728,
            column: 23
          }
        }, {
          start: {
            line: 728,
            column: 27
          },
          end: {
            line: 728,
            column: 34
          }
        }],
        line: 728
      },
      "81": {
        loc: {
          start: {
            line: 751,
            column: 8
          },
          end: {
            line: 751,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 751,
            column: 8
          },
          end: {
            line: 751,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 751
      },
      "82": {
        loc: {
          start: {
            line: 752,
            column: 8
          },
          end: {
            line: 810,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 752,
            column: 8
          },
          end: {
            line: 810,
            column: 9
          }
        }, {
          start: {
            line: 784,
            column: 15
          },
          end: {
            line: 810,
            column: 9
          }
        }],
        line: 752
      },
      "83": {
        loc: {
          start: {
            line: 758,
            column: 20
          },
          end: {
            line: 763,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 758,
            column: 20
          },
          end: {
            line: 763,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 758
      },
      "84": {
        loc: {
          start: {
            line: 766,
            column: 12
          },
          end: {
            line: 782,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 766,
            column: 12
          },
          end: {
            line: 782,
            column: 13
          }
        }, {
          start: {
            line: 775,
            column: 19
          },
          end: {
            line: 782,
            column: 13
          }
        }],
        line: 766
      },
      "85": {
        loc: {
          start: {
            line: 771,
            column: 67
          },
          end: {
            line: 771,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 771,
            column: 97
          },
          end: {
            line: 771,
            column: 108
          }
        }, {
          start: {
            line: 771,
            column: 111
          },
          end: {
            line: 771,
            column: 125
          }
        }],
        line: 771
      },
      "86": {
        loc: {
          start: {
            line: 784,
            column: 15
          },
          end: {
            line: 810,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 784,
            column: 15
          },
          end: {
            line: 810,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 784
      },
      "87": {
        loc: {
          start: {
            line: 790,
            column: 20
          },
          end: {
            line: 795,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 790,
            column: 20
          },
          end: {
            line: 795,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 790
      },
      "88": {
        loc: {
          start: {
            line: 798,
            column: 12
          },
          end: {
            line: 809,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 798,
            column: 12
          },
          end: {
            line: 809,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 798
      },
      "89": {
        loc: {
          start: {
            line: 817,
            column: 8
          },
          end: {
            line: 817,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 817,
            column: 8
          },
          end: {
            line: 817,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 817
      },
      "90": {
        loc: {
          start: {
            line: 827,
            column: 8
          },
          end: {
            line: 858,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 827,
            column: 8
          },
          end: {
            line: 858,
            column: 9
          }
        }, {
          start: {
            line: 851,
            column: 15
          },
          end: {
            line: 858,
            column: 9
          }
        }],
        line: 827
      },
      "91": {
        loc: {
          start: {
            line: 827,
            column: 12
          },
          end: {
            line: 827,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 827,
            column: 12
          },
          end: {
            line: 827,
            column: 19
          }
        }, {
          start: {
            line: 827,
            column: 23
          },
          end: {
            line: 827,
            column: 44
          }
        }],
        line: 827
      },
      "92": {
        loc: {
          start: {
            line: 832,
            column: 12
          },
          end: {
            line: 848,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 832,
            column: 12
          },
          end: {
            line: 848,
            column: 13
          }
        }, {
          start: {
            line: 842,
            column: 19
          },
          end: {
            line: 848,
            column: 13
          }
        }],
        line: 832
      },
      "93": {
        loc: {
          start: {
            line: 832,
            column: 16
          },
          end: {
            line: 832,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 832,
            column: 16
          },
          end: {
            line: 832,
            column: 41
          }
        }, {
          start: {
            line: 832,
            column: 45
          },
          end: {
            line: 832,
            column: 75
          }
        }],
        line: 832
      },
      "94": {
        loc: {
          start: {
            line: 835,
            column: 16
          },
          end: {
            line: 841,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 835,
            column: 16
          },
          end: {
            line: 841,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 835
      },
      "95": {
        loc: {
          start: {
            line: 837,
            column: 33
          },
          end: {
            line: 837,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 837,
            column: 52
          },
          end: {
            line: 837,
            column: 61
          }
        }, {
          start: {
            line: 837,
            column: 64
          },
          end: {
            line: 837,
            column: 68
          }
        }],
        line: 837
      },
      "96": {
        loc: {
          start: {
            line: 838,
            column: 33
          },
          end: {
            line: 838,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 838,
            column: 52
          },
          end: {
            line: 838,
            column: 61
          }
        }, {
          start: {
            line: 838,
            column: 64
          },
          end: {
            line: 838,
            column: 68
          }
        }],
        line: 838
      },
      "97": {
        loc: {
          start: {
            line: 845,
            column: 16
          },
          end: {
            line: 847,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 845,
            column: 16
          },
          end: {
            line: 847,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 845
      },
      "98": {
        loc: {
          start: {
            line: 869,
            column: 8
          },
          end: {
            line: 869,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 869,
            column: 8
          },
          end: {
            line: 869,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 869
      },
      "99": {
        loc: {
          start: {
            line: 879,
            column: 23
          },
          end: {
            line: 879,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 879,
            column: 23
          },
          end: {
            line: 879,
            column: 30
          }
        }, {
          start: {
            line: 879,
            column: 34
          },
          end: {
            line: 879,
            column: 38
          }
        }],
        line: 879
      },
      "100": {
        loc: {
          start: {
            line: 881,
            column: 8
          },
          end: {
            line: 898,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 881,
            column: 8
          },
          end: {
            line: 898,
            column: 9
          }
        }, {
          start: {
            line: 892,
            column: 15
          },
          end: {
            line: 898,
            column: 9
          }
        }],
        line: 881
      },
      "101": {
        loc: {
          start: {
            line: 881,
            column: 12
          },
          end: {
            line: 881,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 881,
            column: 12
          },
          end: {
            line: 881,
            column: 23
          }
        }, {
          start: {
            line: 881,
            column: 27
          },
          end: {
            line: 881,
            column: 48
          }
        }],
        line: 881
      },
      "102": {
        loc: {
          start: {
            line: 883,
            column: 12
          },
          end: {
            line: 891,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 883,
            column: 12
          },
          end: {
            line: 891,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 883
      },
      "103": {
        loc: {
          start: {
            line: 892,
            column: 15
          },
          end: {
            line: 898,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 892,
            column: 15
          },
          end: {
            line: 898,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 892
      },
      "104": {
        loc: {
          start: {
            line: 926,
            column: 8
          },
          end: {
            line: 926,
            column: 34
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 926,
            column: 8
          },
          end: {
            line: 926,
            column: 34
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 926
      },
      "105": {
        loc: {
          start: {
            line: 928,
            column: 8
          },
          end: {
            line: 928,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 928,
            column: 8
          },
          end: {
            line: 928,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 928
      },
      "106": {
        loc: {
          start: {
            line: 930,
            column: 8
          },
          end: {
            line: 930,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 930,
            column: 8
          },
          end: {
            line: 930,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 930
      },
      "107": {
        loc: {
          start: {
            line: 933,
            column: 8
          },
          end: {
            line: 937,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 933,
            column: 8
          },
          end: {
            line: 937,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 933
      },
      "108": {
        loc: {
          start: {
            line: 948,
            column: 12
          },
          end: {
            line: 961,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 948,
            column: 12
          },
          end: {
            line: 961,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 948
      },
      "109": {
        loc: {
          start: {
            line: 948,
            column: 16
          },
          end: {
            line: 948,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 948,
            column: 16
          },
          end: {
            line: 948,
            column: 22
          }
        }, {
          start: {
            line: 948,
            column: 26
          },
          end: {
            line: 948,
            column: 32
          }
        }],
        line: 948
      },
      "110": {
        loc: {
          start: {
            line: 953,
            column: 16
          },
          end: {
            line: 959,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 953,
            column: 16
          },
          end: {
            line: 959,
            column: 17
          }
        }, {
          start: {
            line: 956,
            column: 23
          },
          end: {
            line: 959,
            column: 17
          }
        }],
        line: 953
      },
      "111": {
        loc: {
          start: {
            line: 953,
            column: 20
          },
          end: {
            line: 953,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 953,
            column: 20
          },
          end: {
            line: 953,
            column: 32
          }
        }, {
          start: {
            line: 953,
            column: 37
          },
          end: {
            line: 953,
            column: 66
          }
        }, {
          start: {
            line: 953,
            column: 70
          },
          end: {
            line: 953,
            column: 99
          }
        }],
        line: 953
      },
      "112": {
        loc: {
          start: {
            line: 970,
            column: 12
          },
          end: {
            line: 982,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 970,
            column: 12
          },
          end: {
            line: 982,
            column: 13
          }
        }, {
          start: {
            line: 975,
            column: 19
          },
          end: {
            line: 982,
            column: 13
          }
        }],
        line: 970
      },
      "113": {
        loc: {
          start: {
            line: 975,
            column: 19
          },
          end: {
            line: 982,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 975,
            column: 19
          },
          end: {
            line: 982,
            column: 13
          }
        }, {
          start: {
            line: 980,
            column: 19
          },
          end: {
            line: 982,
            column: 13
          }
        }],
        line: 975
      },
      "114": {
        loc: {
          start: {
            line: 984,
            column: 12
          },
          end: {
            line: 988,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 984,
            column: 12
          },
          end: {
            line: 988,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 984
      },
      "115": {
        loc: {
          start: {
            line: 991,
            column: 12
          },
          end: {
            line: 1000,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 991,
            column: 12
          },
          end: {
            line: 1000,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 991
      },
      "116": {
        loc: {
          start: {
            line: 1003,
            column: 12
          },
          end: {
            line: 1009,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1003,
            column: 12
          },
          end: {
            line: 1009,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1003
      },
      "117": {
        loc: {
          start: {
            line: 1011,
            column: 12
          },
          end: {
            line: 1023,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1011,
            column: 12
          },
          end: {
            line: 1023,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1011
      },
      "118": {
        loc: {
          start: {
            line: 1011,
            column: 16
          },
          end: {
            line: 1011,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1011,
            column: 16
          },
          end: {
            line: 1011,
            column: 36
          }
        }, {
          start: {
            line: 1011,
            column: 40
          },
          end: {
            line: 1011,
            column: 61
          }
        }, {
          start: {
            line: 1011,
            column: 65
          },
          end: {
            line: 1011,
            column: 80
          }
        }],
        line: 1011
      },
      "119": {
        loc: {
          start: {
            line: 1013,
            column: 30
          },
          end: {
            line: 1013,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1013,
            column: 52
          },
          end: {
            line: 1013,
            column: 59
          }
        }, {
          start: {
            line: 1013,
            column: 62
          },
          end: {
            line: 1013,
            column: 64
          }
        }],
        line: 1013
      },
      "120": {
        loc: {
          start: {
            line: 1021,
            column: 30
          },
          end: {
            line: 1021,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1021,
            column: 52
          },
          end: {
            line: 1021,
            column: 59
          }
        }, {
          start: {
            line: 1021,
            column: 62
          },
          end: {
            line: 1021,
            column: 64
          }
        }],
        line: 1021
      },
      "121": {
        loc: {
          start: {
            line: 1039,
            column: 12
          },
          end: {
            line: 1039,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1039,
            column: 12
          },
          end: {
            line: 1039,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1039
      },
      "122": {
        loc: {
          start: {
            line: 1039,
            column: 16
          },
          end: {
            line: 1039,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1039,
            column: 16
          },
          end: {
            line: 1039,
            column: 23
          }
        }, {
          start: {
            line: 1039,
            column: 27
          },
          end: {
            line: 1039,
            column: 37
          }
        }],
        line: 1039
      },
      "123": {
        loc: {
          start: {
            line: 1044,
            column: 12
          },
          end: {
            line: 1046,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1044,
            column: 12
          },
          end: {
            line: 1046,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1044
      },
      "124": {
        loc: {
          start: {
            line: 1054,
            column: 60
          },
          end: {
            line: 1054,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1054,
            column: 60
          },
          end: {
            line: 1054,
            column: 83
          }
        }, {
          start: {
            line: 1054,
            column: 87
          },
          end: {
            line: 1054,
            column: 88
          }
        }],
        line: 1054
      },
      "125": {
        loc: {
          start: {
            line: 1090,
            column: 47
          },
          end: {
            line: 1090,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1090,
            column: 69
          },
          end: {
            line: 1090,
            column: 87
          }
        }, {
          start: {
            line: 1090,
            column: 90
          },
          end: {
            line: 1090,
            column: 108
          }
        }],
        line: 1090
      },
      "126": {
        loc: {
          start: {
            line: 1091,
            column: 50
          },
          end: {
            line: 1095,
            column: 42
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1091,
            column: 86
          },
          end: {
            line: 1093,
            column: 42
          }
        }, {
          start: {
            line: 1093,
            column: 59
          },
          end: {
            line: 1095,
            column: 42
          }
        }],
        line: 1091
      },
      "127": {
        loc: {
          start: {
            line: 1157,
            column: 28
          },
          end: {
            line: 1157,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1157,
            column: 28
          },
          end: {
            line: 1157,
            column: 47
          }
        }, {
          start: {
            line: 1157,
            column: 51
          },
          end: {
            line: 1157,
            column: 74
          }
        }],
        line: 1157
      },
      "128": {
        loc: {
          start: {
            line: 1158,
            column: 28
          },
          end: {
            line: 1158,
            column: 205
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1158,
            column: 28
          },
          end: {
            line: 1158,
            column: 56
          }
        }, {
          start: {
            line: 1158,
            column: 60
          },
          end: {
            line: 1158,
            column: 122
          }
        }, {
          start: {
            line: 1158,
            column: 126
          },
          end: {
            line: 1158,
            column: 205
          }
        }],
        line: 1158
      },
      "129": {
        loc: {
          start: {
            line: 1178,
            column: 28
          },
          end: {
            line: 1230,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1178,
            column: 28
          },
          end: {
            line: 1178,
            column: 39
          }
        }, {
          start: {
            line: 1178,
            column: 57
          },
          end: {
            line: 1230,
            column: 30
          }
        }],
        line: 1178
      },
      "130": {
        loc: {
          start: {
            line: 1181,
            column: 36
          },
          end: {
            line: 1203,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1181,
            column: 36
          },
          end: {
            line: 1181,
            column: 62
          }
        }, {
          start: {
            line: 1181,
            column: 80
          },
          end: {
            line: 1203,
            column: 38
          }
        }],
        line: 1181
      },
      "131": {
        loc: {
          start: {
            line: 1194,
            column: 72
          },
          end: {
            line: 1194,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1194,
            column: 72
          },
          end: {
            line: 1194,
            column: 87
          }
        }, {
          start: {
            line: 1194,
            column: 91
          },
          end: {
            line: 1194,
            column: 93
          }
        }],
        line: 1194
      },
      "132": {
        loc: {
          start: {
            line: 1204,
            column: 36
          },
          end: {
            line: 1228,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1204,
            column: 36
          },
          end: {
            line: 1204,
            column: 64
          }
        }, {
          start: {
            line: 1204,
            column: 82
          },
          end: {
            line: 1228,
            column: 38
          }
        }],
        line: 1204
      },
      "133": {
        loc: {
          start: {
            line: 1217,
            column: 72
          },
          end: {
            line: 1217,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1217,
            column: 72
          },
          end: {
            line: 1217,
            column: 87
          }
        }, {
          start: {
            line: 1217,
            column: 91
          },
          end: {
            line: 1217,
            column: 93
          }
        }],
        line: 1217
      },
      "134": {
        loc: {
          start: {
            line: 1222,
            column: 76
          },
          end: {
            line: 1222,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1222,
            column: 76
          },
          end: {
            line: 1222,
            column: 91
          }
        }, {
          start: {
            line: 1222,
            column: 95
          },
          end: {
            line: 1222,
            column: 97
          }
        }],
        line: 1222
      },
      "135": {
        loc: {
          start: {
            line: 1247,
            column: 44
          },
          end: {
            line: 1251,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1247,
            column: 73
          },
          end: {
            line: 1249,
            column: 46
          }
        }, {
          start: {
            line: 1249,
            column: 63
          },
          end: {
            line: 1251,
            column: 46
          }
        }],
        line: 1247
      },
      "136": {
        loc: {
          start: {
            line: 1256,
            column: 28
          },
          end: {
            line: 1445,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1256,
            column: 28
          },
          end: {
            line: 1256,
            column: 40
          }
        }, {
          start: {
            line: 1256,
            column: 58
          },
          end: {
            line: 1445,
            column: 30
          }
        }],
        line: 1256
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0,
      "305": 0,
      "306": 0,
      "307": 0,
      "308": 0,
      "309": 0,
      "310": 0,
      "311": 0,
      "312": 0,
      "313": 0,
      "314": 0,
      "315": 0,
      "316": 0,
      "317": 0,
      "318": 0,
      "319": 0,
      "320": 0,
      "321": 0,
      "322": 0,
      "323": 0,
      "324": 0,
      "325": 0,
      "326": 0,
      "327": 0,
      "328": 0,
      "329": 0,
      "330": 0,
      "331": 0,
      "332": 0,
      "333": 0,
      "334": 0,
      "335": 0,
      "336": 0,
      "337": 0,
      "338": 0,
      "339": 0,
      "340": 0,
      "341": 0,
      "342": 0,
      "343": 0,
      "344": 0,
      "345": 0,
      "346": 0,
      "347": 0,
      "348": 0,
      "349": 0,
      "350": 0,
      "351": 0,
      "352": 0,
      "353": 0,
      "354": 0,
      "355": 0,
      "356": 0,
      "357": 0,
      "358": 0,
      "359": 0,
      "360": 0,
      "361": 0,
      "362": 0,
      "363": 0,
      "364": 0,
      "365": 0,
      "366": 0,
      "367": 0,
      "368": 0,
      "369": 0,
      "370": 0,
      "371": 0,
      "372": 0,
      "373": 0,
      "374": 0,
      "375": 0,
      "376": 0,
      "377": 0,
      "378": 0,
      "379": 0,
      "380": 0,
      "381": 0,
      "382": 0,
      "383": 0,
      "384": 0,
      "385": 0,
      "386": 0,
      "387": 0,
      "388": 0,
      "389": 0,
      "390": 0,
      "391": 0,
      "392": 0,
      "393": 0,
      "394": 0,
      "395": 0,
      "396": 0,
      "397": 0,
      "398": 0,
      "399": 0,
      "400": 0,
      "401": 0,
      "402": 0,
      "403": 0,
      "404": 0,
      "405": 0,
      "406": 0,
      "407": 0,
      "408": 0,
      "409": 0,
      "410": 0,
      "411": 0,
      "412": 0,
      "413": 0,
      "414": 0,
      "415": 0,
      "416": 0,
      "417": 0,
      "418": 0,
      "419": 0,
      "420": 0,
      "421": 0,
      "422": 0,
      "423": 0,
      "424": 0,
      "425": 0,
      "426": 0,
      "427": 0,
      "428": 0,
      "429": 0,
      "430": 0,
      "431": 0,
      "432": 0,
      "433": 0,
      "434": 0,
      "435": 0,
      "436": 0,
      "437": 0,
      "438": 0,
      "439": 0,
      "440": 0,
      "441": 0,
      "442": 0,
      "443": 0,
      "444": 0,
      "445": 0,
      "446": 0,
      "447": 0,
      "448": 0,
      "449": 0,
      "450": 0,
      "451": 0,
      "452": 0,
      "453": 0,
      "454": 0,
      "455": 0,
      "456": 0,
      "457": 0,
      "458": 0,
      "459": 0,
      "460": 0,
      "461": 0,
      "462": 0,
      "463": 0,
      "464": 0,
      "465": 0,
      "466": 0,
      "467": 0,
      "468": 0,
      "469": 0,
      "470": 0,
      "471": 0,
      "472": 0,
      "473": 0,
      "474": 0,
      "475": 0,
      "476": 0,
      "477": 0,
      "478": 0,
      "479": 0,
      "480": 0,
      "481": 0,
      "482": 0,
      "483": 0,
      "484": 0,
      "485": 0,
      "486": 0,
      "487": 0,
      "488": 0,
      "489": 0,
      "490": 0,
      "491": 0,
      "492": 0,
      "493": 0,
      "494": 0,
      "495": 0,
      "496": 0,
      "497": 0,
      "498": 0,
      "499": 0,
      "500": 0,
      "501": 0,
      "502": 0,
      "503": 0,
      "504": 0,
      "505": 0,
      "506": 0,
      "507": 0,
      "508": 0,
      "509": 0,
      "510": 0,
      "511": 0,
      "512": 0,
      "513": 0,
      "514": 0,
      "515": 0,
      "516": 0,
      "517": 0,
      "518": 0,
      "519": 0,
      "520": 0,
      "521": 0,
      "522": 0,
      "523": 0,
      "524": 0,
      "525": 0,
      "526": 0,
      "527": 0,
      "528": 0,
      "529": 0,
      "530": 0,
      "531": 0,
      "532": 0,
      "533": 0,
      "534": 0,
      "535": 0,
      "536": 0,
      "537": 0,
      "538": 0,
      "539": 0,
      "540": 0,
      "541": 0,
      "542": 0,
      "543": 0,
      "544": 0,
      "545": 0,
      "546": 0,
      "547": 0,
      "548": 0,
      "549": 0,
      "550": 0,
      "551": 0,
      "552": 0,
      "553": 0,
      "554": 0,
      "555": 0,
      "556": 0,
      "557": 0,
      "558": 0,
      "559": 0,
      "560": 0,
      "561": 0,
      "562": 0,
      "563": 0,
      "564": 0,
      "565": 0,
      "566": 0,
      "567": 0,
      "568": 0,
      "569": 0,
      "570": 0,
      "571": 0,
      "572": 0,
      "573": 0,
      "574": 0,
      "575": 0,
      "576": 0,
      "577": 0,
      "578": 0,
      "579": 0,
      "580": 0,
      "581": 0,
      "582": 0,
      "583": 0,
      "584": 0,
      "585": 0,
      "586": 0,
      "587": 0,
      "588": 0,
      "589": 0,
      "590": 0,
      "591": 0,
      "592": 0,
      "593": 0,
      "594": 0,
      "595": 0,
      "596": 0,
      "597": 0,
      "598": 0,
      "599": 0,
      "600": 0,
      "601": 0,
      "602": 0,
      "603": 0,
      "604": 0,
      "605": 0,
      "606": 0,
      "607": 0,
      "608": 0,
      "609": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0, 0],
      "10": [0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0, 0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0],
      "87": [0, 0],
      "88": [0, 0],
      "89": [0, 0],
      "90": [0, 0],
      "91": [0, 0],
      "92": [0, 0],
      "93": [0, 0],
      "94": [0, 0],
      "95": [0, 0],
      "96": [0, 0],
      "97": [0, 0],
      "98": [0, 0],
      "99": [0, 0],
      "100": [0, 0],
      "101": [0, 0],
      "102": [0, 0],
      "103": [0, 0],
      "104": [0, 0],
      "105": [0, 0],
      "106": [0, 0],
      "107": [0, 0],
      "108": [0, 0],
      "109": [0, 0],
      "110": [0, 0],
      "111": [0, 0, 0],
      "112": [0, 0],
      "113": [0, 0],
      "114": [0, 0],
      "115": [0, 0],
      "116": [0, 0],
      "117": [0, 0],
      "118": [0, 0, 0],
      "119": [0, 0],
      "120": [0, 0],
      "121": [0, 0],
      "122": [0, 0],
      "123": [0, 0],
      "124": [0, 0],
      "125": [0, 0],
      "126": [0, 0],
      "127": [0, 0],
      "128": [0, 0, 0],
      "129": [0, 0],
      "130": [0, 0],
      "131": [0, 0],
      "132": [0, 0],
      "133": [0, 0],
      "134": [0, 0],
      "135": [0, 0],
      "136": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matthewmoroney/builds/FreeAgentics/web/components/GlobalKnowledgeGraph.tsx"],
      sourcesContent: ["\"use client\";\n\nimport type React from \"react\";\n\nimport { useRef, useEffect, useState, useCallback } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  ZoomIn,\n  ZoomOut,\n  RefreshCw,\n  Play,\n  Pause,\n  ChevronDown,\n  ChevronRight,\n} from \"lucide-react\";\nimport type { Agent, KnowledgeEntry } from \"@/lib/types\";\nimport AboutButton from \"./AboutButton\";\n\n// Simple quadtree implementation for spatial partitioning\nclass QuadTree {\n  boundary: { x: number; y: number; width: number; height: number };\n  capacity: number;\n  points: Array<{ x: number; y: number; node: any }>;\n  divided: boolean;\n  northeast: QuadTree | null;\n  northwest: QuadTree | null;\n  southeast: QuadTree | null;\n  southwest: QuadTree | null;\n\n  constructor(\n    boundary: { x: number; y: number; width: number; height: number },\n    capacity: number,\n  ) {\n    this.boundary = boundary;\n    this.capacity = capacity;\n    this.points = [];\n    this.divided = false;\n    this.northeast = null;\n    this.northwest = null;\n    this.southeast = null;\n    this.southwest = null;\n  }\n\n  insert(point: { x: number; y: number; node: any }): boolean {\n    // Check if point is in boundary\n    if (!this.contains(point)) {\n      return false;\n    }\n\n    // If space available, add point\n    if (this.points.length < this.capacity) {\n      this.points.push(point);\n      return true;\n    }\n\n    // Otherwise, subdivide and add point to appropriate quadrant\n    if (!this.divided) {\n      this.subdivide();\n    }\n\n    if (this.northeast!.insert(point)) return true;\n    if (this.northwest!.insert(point)) return true;\n    if (this.southeast!.insert(point)) return true;\n    if (this.southwest!.insert(point)) return false;\n\n    return false;\n  }\n\n  subdivide() {\n    const x = this.boundary.x;\n    const y = this.boundary.y;\n    const w = this.boundary.width / 2;\n    const h = this.boundary.height / 2;\n\n    this.northeast = new QuadTree(\n      { x: x + w, y: y - h, width: w, height: h },\n      this.capacity,\n    );\n    this.northwest = new QuadTree(\n      { x: x - w, y: y - h, width: w, height: h },\n      this.capacity,\n    );\n    this.southeast = new QuadTree(\n      { x: x + w, y: y + h, width: w, height: h },\n      this.capacity,\n    );\n    this.southwest = new QuadTree(\n      { x: x - w, y: y + h, width: w, height: h },\n      this.capacity,\n    );\n\n    this.divided = true;\n  }\n\n  contains(point: { x: number; y: number }): boolean {\n    return (\n      point.x >= this.boundary.x - this.boundary.width &&\n      point.x <= this.boundary.x + this.boundary.width &&\n      point.y >= this.boundary.y - this.boundary.height &&\n      point.y <= this.boundary.y + this.boundary.height\n    );\n  }\n\n  query(\n    range: { x: number; y: number; radius: number },\n    found: Array<any> = [],\n  ): Array<any> {\n    // Check if range intersects boundary\n    if (!this.intersects(range)) {\n      return found;\n    }\n\n    // Check points in this quad\n    for (const point of this.points) {\n      const dx = point.x - range.x;\n      const dy = point.y - range.y;\n      const distanceSq = dx * dx + dy * dy;\n\n      if (distanceSq <= range.radius * range.radius) {\n        found.push(point.node);\n      }\n    }\n\n    // If divided, check children\n    if (this.divided) {\n      this.northeast!.query(range, found);\n      this.northwest!.query(range, found);\n      this.southeast!.query(range, found);\n      this.southwest!.query(range, found);\n    }\n\n    return found;\n  }\n\n  intersects(range: { x: number; y: number; radius: number }): boolean {\n    const dx = Math.abs(range.x - this.boundary.x);\n    const dy = Math.abs(range.y - this.boundary.y);\n\n    if (dx > this.boundary.width + range.radius) return false;\n    if (dy > this.boundary.height + range.radius) return false;\n\n    if (dx <= this.boundary.width) return true;\n    if (dy <= this.boundary.height) return true;\n\n    const cornerDistanceSq =\n      (dx - this.boundary.width) * (dx - this.boundary.width) +\n      (dy - this.boundary.height) * (dy - this.boundary.height);\n\n    return cornerDistanceSq <= range.radius * range.radius;\n  }\n}\n\ninterface GlobalKnowledgeGraphProps {\n  agents: Agent[];\n  onSelectNode: (\n    nodeType: \"entry\" | \"tag\",\n    nodeId: string,\n    nodeTitle: string,\n  ) => void;\n  onShowAbout: () => void;\n}\n\ninterface INode {\n  id: string;\n  title: string;\n  x: number;\n  y: number;\n  radius: number;\n  color: string;\n  type: \"entry\" | \"tag\" | \"agent\";\n  agentId?: string;\n  originalId?: string; // For entries, store the original entry ID without the agent prefix\n  entryIds?: string[]; // For consolidated entries, store all original entry IDs\n}\n\ninterface Link {\n  source: string;\n  target: string;\n  strength: number;\n  color: string;\n}\n\ninterface IPhysicsNode extends INode {\n  vx: number;\n  vy: number;\n  fx: number | null;\n  fy: number | null;\n  isPinned?: boolean;\n}\n\ninterface IPhysicsLink {\n  source: IPhysicsNode;\n  target: IPhysicsNode;\n  strength: number;\n  color: string;\n}\n\nexport default function GlobalKnowledgeGraph({\n  agents,\n  onSelectNode,\n  onShowAbout,\n}: GlobalKnowledgeGraphProps) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [nodes, setNodes] = useState<INode[]>([]);\n  const [links, setLinks] = useState<Link[]>([]);\n  const [hoveredNode, setHoveredNode] = useState<INode | null>(null);\n  const [zoomLevel, setZoomLevel] = useState(1);\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 });\n  const [offset, setOffset] = useState({ x: 0, y: 0 });\n  const [selectedNode, setSelectedNode] = useState<INode | null>(null);\n  const [selectedNodeInfo, setSelectedNodeInfo] = useState<{\n    title: string;\n    content: string;\n    type: string;\n    id: string;\n  } | null>(null);\n\n  // Store simulation state in refs to avoid re-renders\n  const simulationRef = useRef<{\n    nodes: IPhysicsNode[];\n    links: IPhysicsLink[];\n  } | null>(null);\n\n  const [isSimulationRunning, setIsSimulationRunning] = useState(false);\n  const [physicsSettings, setPhysicsSettings] = useState({\n    repulsion: 80,\n    linkStrength: 0.08,\n    friction: 0.92,\n    centerForce: 0.05,\n    collisionRadius: 1.2,\n    velocityLimit: 0.2,\n  });\n  const [lastClickTime, setLastClickTime] = useState(0);\n  const [lastClickedNode, setLastClickedNode] = useState<string | null>(null);\n  const [draggedNode, setDraggedNode] = useState<IPhysicsNode | null>(null);\n  const [showSettings, setShowSettings] = useState(false);\n\n  // Store these values in refs to avoid re-renders\n  const coolingRef = useRef(1.0);\n  const warmupPhaseRef = useRef(0.3);\n  const lowMovementFramesRef = useRef(0);\n  const animationFrameRef = useRef<number | undefined>(undefined);\n  const initialNodesRef = useRef<INode[]>([]);\n  const initialLinksRef = useRef<Link[]>([]);\n  const needsRenderRef = useRef(false);\n  const renderIntervalRef = useRef<NodeJS.Timeout | undefined>(undefined);\n  const hasInitializedRef = useRef(false);\n\n  // Initialize the graph data\n  useEffect(() => {\n    if (!agents.length) return;\n\n    // Get container dimensions for better initial positioning\n    const container = containerRef.current;\n    const width = container?.clientWidth || 800;\n    const height = container?.clientHeight || 600;\n    const centerX = width / 2;\n    const centerY = height / 2;\n\n    // Extract all knowledge entries and tags\n    const allEntries: Array<{\n      entry: KnowledgeEntry;\n      agentId: string;\n      agentColor: string;\n    }> = [];\n    const allTags = new Set<string>();\n\n    agents.forEach((agent) => {\n      agent.knowledge?.forEach((entry) => {\n        allEntries.push({\n          entry,\n          agentId: agent.id,\n          agentColor: agent.color,\n        });\n        entry.tags?.forEach((tag) => allTags.add(tag));\n      });\n    });\n\n    // Consolidate knowledge entries by title\n    const uniqueEntryTitles = new Map<\n      string,\n      {\n        entryIds: string[];\n        agentIds: string[];\n        color: string;\n      }\n    >();\n\n    allEntries.forEach(({ entry, agentId, agentColor }) => {\n      if (!uniqueEntryTitles.has(entry.title)) {\n        uniqueEntryTitles.set(entry.title, {\n          entryIds: [entry.id],\n          agentIds: [agentId],\n          color: \"#a855f7\", // Purple for consolidated entries\n        });\n      } else {\n        const current = uniqueEntryTitles.get(entry.title)!;\n        current.entryIds.push(entry.id);\n        if (!current.agentIds.includes(agentId)) {\n          current.agentIds.push(agentId);\n        }\n      }\n    });\n\n    // Create nodes for agents, consolidated entries and tags\n    const newNodes: INode[] = [\n      // Agent nodes in the center\n      ...agents.map((agent, index) => {\n        const angle = (index / agents.length) * Math.PI * 2;\n        const radius = Math.min(width, height) * 0.15; // 15% of the smaller dimension\n        return {\n          id: `agent-${agent.id}`,\n          title: agent.name,\n          x: centerX + Math.cos(angle) * radius,\n          y: centerY + Math.sin(angle) * radius,\n          radius: 18,\n          color: agent.color,\n          type: \"agent\" as const,\n          agentId: agent.id,\n        };\n      }),\n\n      // Consolidated entry nodes in a middle circle\n      ...[...uniqueEntryTitles.entries()].map(([title, data], index) => {\n        const angle = (index / uniqueEntryTitles.size) * Math.PI * 2;\n        const radius = Math.min(width, height) * 0.3; // 30% of the smaller dimension\n        return {\n          id: `entry-${title.replace(/\\s+/g, \"-\").toLowerCase()}`,\n          title: title,\n          x: centerX + Math.cos(angle) * radius,\n          y: centerY + Math.sin(angle) * radius,\n          radius: 12,\n          color: data.color,\n          type: \"entry\" as const,\n          entryIds: data.entryIds,\n        };\n      }),\n\n      // Tag nodes in an outer circle\n      ...[...allTags].map((tag, index) => {\n        const angle = (index / allTags.size) * Math.PI * 2;\n        const radius = Math.min(width, height) * 0.45; // 45% of the smaller dimension\n        return {\n          id: `tag-${tag}`,\n          title: tag,\n          x: centerX + Math.cos(angle) * radius,\n          y: centerY + Math.sin(angle) * radius,\n          radius: 10, // Increased from 8 to make tags more visible\n          color: \"#6366f1\", // Indigo for tags\n          type: \"tag\" as const,\n        };\n      }),\n    ];\n\n    // Create links\n    const newLinks: Link[] = [];\n\n    // Links between agents and their entries (now consolidated)\n    agents.forEach((agent) => {\n      agent.knowledge?.forEach((entry) => {\n        const entryNodeId = `entry-${entry.title.replace(/\\s+/g, \"-\").toLowerCase()}`;\n\n        // Link agent to entry\n        newLinks.push({\n          source: `agent-${agent.id}`,\n          target: entryNodeId,\n          strength: 0.7,\n          color: agent.color,\n        });\n\n        // Links between entries and their tags\n        entry.tags?.forEach((tag) => {\n          // Check if this link already exists to avoid duplicates\n          const linkExists = newLinks.some(\n            (link) =>\n              (link.source === entryNodeId && link.target === `tag-${tag}`) ||\n              (link.source === `tag-${tag}` && link.target === entryNodeId),\n          );\n\n          if (!linkExists) {\n            newLinks.push({\n              source: entryNodeId,\n              target: `tag-${tag}`,\n              strength: 0.5,\n              color: \"#a855f7\", // Purple for all tag connections\n            });\n          }\n        });\n      });\n    });\n\n    // Links between entries that share tags\n    const entryNodes = newNodes.filter((node) => node.type === \"entry\");\n    for (let i = 0; i < entryNodes.length; i++) {\n      for (let j = i + 1; j < entryNodes.length; j++) {\n        const entry1 = entryNodes[i];\n        const entry2 = entryNodes[j];\n\n        // Find all entries with these titles to get their tags\n        const entry1Tags = new Set<string>();\n        const entry2Tags = new Set<string>();\n\n        allEntries.forEach(({ entry }) => {\n          if (entry.title === entry1.title) {\n            entry.tags?.forEach((tag) => entry1Tags.add(tag));\n          }\n          if (entry.title === entry2.title) {\n            entry.tags?.forEach((tag) => entry2Tags.add(tag));\n          }\n        });\n\n        // Find shared tags\n        const sharedTags = [...entry1Tags].filter((tag) => entry2Tags.has(tag));\n\n        if (sharedTags.length > 0) {\n          newLinks.push({\n            source: entry1.id,\n            target: entry2.id,\n            strength: 0.3 * sharedTags.length,\n            color: \"#a855f7\", // Purple for shared knowledge\n          });\n        }\n      }\n    }\n\n    // Store the initial nodes and links for reset functionality\n    // Deep clone to ensure we have completely separate objects\n    initialNodesRef.current = JSON.parse(JSON.stringify(newNodes));\n    initialLinksRef.current = JSON.parse(JSON.stringify(newLinks));\n    hasInitializedRef.current = true;\n\n    setNodes(newNodes);\n    setLinks(newLinks);\n  }, [agents]);\n\n  // Initialize physics simulation\n  useEffect(() => {\n    if (!nodes.length || !links.length) return;\n\n    // Create physics nodes with velocity properties\n    const physicsNodes = nodes.map((node) => ({\n      ...node,\n      vx: 0, // Velocity X\n      vy: 0, // Velocity Y\n      fx: null, // Fixed X (for pinned nodes)\n      fy: null, // Fixed Y (for pinned nodes)\n      isPinned: false, // Whether the node is pinned in place\n    }));\n\n    // Create physics links with actual node references instead of just IDs\n    const physicsLinks = links\n      .map((link) => {\n        const source = physicsNodes.find((n) => n.id === link.source);\n        const target = physicsNodes.find((n) => n.id === link.target);\n\n        if (!source || !target) {\n          console.error(\n            `Could not find nodes for link: ${link.source} -> ${link.target}`,\n          );\n          return null;\n        }\n\n        return {\n          ...link,\n          source,\n          target,\n        };\n      })\n      .filter(Boolean) as IPhysicsLink[];\n\n    // Store in ref instead of state to avoid re-renders\n    simulationRef.current = {\n      nodes: physicsNodes,\n      links: physicsLinks,\n    };\n  }, [nodes, links]);\n\n  // Apply repulsion forces between all nodes\n  const applyRepulsionForces = useCallback(() => {\n    const simulation = simulationRef.current;\n    if (!simulation) return;\n\n    const nodes = simulation.nodes;\n    const container = containerRef.current;\n    if (!container) return;\n\n    // Create quadtree\n    const boundary = {\n      x: container.clientWidth / 2,\n      y: container.clientHeight / 2,\n      width: container.clientWidth,\n      height: container.clientHeight,\n    };\n\n    const quadtree = new QuadTree(boundary, 4);\n\n    // Insert all nodes into quadtree\n    nodes.forEach((node) => {\n      quadtree.insert({ x: node.x, y: node.y, node });\n    });\n\n    // Calculate repulsion using quadtree for optimization\n    nodes.forEach((nodeA) => {\n      // Find nodes within a certain radius\n      const radius = Math.max(100, nodeA.radius * 10); // Adjust radius as needed\n      const nearbyNodes = quadtree.query({ x: nodeA.x, y: nodeA.y, radius });\n\n      nearbyNodes.forEach((nodeB) => {\n        if (nodeA === nodeB) return;\n\n        // Calculate distance\n        const dx = nodeB.x - nodeA.x;\n        const dy = nodeB.y - nodeA.y;\n        const distanceSq = dx * dx + dy * dy;\n        const distance = Math.sqrt(distanceSq);\n\n        if (distance === 0) return;\n\n        // Calculate repulsion force with a minimum distance to prevent extreme forces\n        const minDistance = nodeA.radius + nodeB.radius;\n        const effectiveDistance = Math.max(distance, minDistance);\n\n        // Use a softer inverse law (1/d instead of 1/d\xB2) for more stability\n        const force =\n          (physicsSettings.repulsion * warmupPhaseRef.current) /\n          effectiveDistance;\n\n        // Apply force to velocity with dampening for stability\n        const forceX = (dx / distance) * force * 0.5;\n        const forceY = (dy / distance) * force * 0.5;\n\n        nodeA.vx -= forceX;\n        nodeA.vy -= forceY;\n      });\n    });\n  }, [physicsSettings.repulsion]);\n\n  // Apply attraction forces between linked nodes\n  const applyAttractionForces = useCallback(() => {\n    const simulation = simulationRef.current;\n    if (!simulation) return;\n\n    simulation.links.forEach((link) => {\n      const source = link.source;\n      const target = link.target;\n\n      // Calculate distance\n      const dx = target.x - source.x;\n      const dy = target.y - source.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n\n      if (distance === 0) return;\n\n      // Calculate attraction force\n      const force =\n        distance *\n        physicsSettings.linkStrength *\n        link.strength *\n        warmupPhaseRef.current;\n\n      // Apply force to velocity\n      const forceX = (dx / distance) * force;\n      const forceY = (dy / distance) * force;\n\n      source.vx += forceX;\n      source.vy += forceY;\n      target.vx -= forceX;\n      target.vy -= forceY;\n    });\n  }, [physicsSettings.linkStrength]);\n\n  // Apply a force to keep nodes near the center\n  const applyCenteringForce = useCallback(() => {\n    const simulation = simulationRef.current;\n    if (!simulation) return;\n\n    const container = containerRef.current;\n    if (!container) return;\n\n    const centerX = container.clientWidth / 2;\n    const centerY = container.clientHeight / 2;\n\n    simulation.nodes.forEach((node) => {\n      // Calculate distance from center\n      const dx = centerX - node.x;\n      const dy = centerY - node.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n\n      if (distance === 0) return;\n\n      // Apply centering force (stronger for nodes far from center)\n      const force =\n        distance * physicsSettings.centerForce * warmupPhaseRef.current;\n\n      // Apply force to velocity\n      const forceX = (dx / distance) * force;\n      const forceY = (dy / distance) * force;\n\n      node.vx += forceX;\n      node.vy += forceY;\n    });\n  }, [physicsSettings.centerForce]);\n\n  // Prevent nodes from overlapping\n  const applyCollisionAvoidance = useCallback(() => {\n    const simulation = simulationRef.current;\n    if (!simulation) return;\n\n    const nodes = simulation.nodes;\n\n    // PERFORMANCE OPTIMIZATION: Use QuadTree for collision detection instead of O(n\xB2) algorithm\n    const container = containerRef.current;\n    if (!container) return;\n\n    const boundary = {\n      x: 0,\n      y: 0,\n      width: container.clientWidth,\n      height: container.clientHeight,\n    };\n\n    const quadtree = new QuadTree(boundary, 4);\n\n    // Insert all nodes into quadtree\n    nodes.forEach((node) => {\n      quadtree.insert({ x: node.x, y: node.y, node });\n    });\n\n    // Check collisions using quadtree - much more efficient for large datasets\n    nodes.forEach((nodeA) => {\n      // Only check nodes within a reasonable collision detection radius\n      const maxCollisionRadius =\n        nodeA.radius * physicsSettings.collisionRadius * 3;\n      const nearbyPoints = quadtree.query({\n        x: nodeA.x,\n        y: nodeA.y,\n        radius: maxCollisionRadius,\n      });\n\n      nearbyPoints.forEach((pointData) => {\n        const nodeB = pointData.node;\n        if (nodeA === nodeB || nodeA.id === nodeB.id) return;\n\n        // Calculate distance\n        const dx = nodeB.x - nodeA.x;\n        const dy = nodeB.y - nodeA.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n\n        // Calculate minimum distance to avoid collision\n        const minDistance =\n          (nodeA.radius + nodeB.radius) * physicsSettings.collisionRadius;\n\n        if (distance < minDistance && distance > 0) {\n          // Calculate overlap\n          const overlap = (minDistance - distance) / distance;\n\n          // Apply force to separate nodes\n          const moveX = dx * overlap * 0.5;\n          const moveY = dy * overlap * 0.5;\n\n          // Only move nodes that aren't pinned\n          if (!nodeA.isPinned) {\n            nodeA.x -= moveX;\n            nodeA.y -= moveY;\n          }\n\n          if (!nodeB.isPinned) {\n            nodeB.x += moveX;\n            nodeB.y += moveY;\n          }\n        }\n      });\n    });\n  }, [physicsSettings.collisionRadius]);\n\n  const runSimulation = useCallback(() => {\n    const simulation = simulationRef.current;\n    if (!simulation || !isSimulationRunning) {\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      return;\n    }\n\n    // PERFORMANCE OPTIMIZATION: Adaptive settings based on node count\n    const nodeCount = simulation.nodes.length;\n    const isLargeDataset = nodeCount > 100;\n    const isMassiveDataset = nodeCount > 200;\n\n    // Skip frames for performance with large datasets\n    if (isLargeDataset) {\n      const skipModulo = isMassiveDataset ? 3 : 2; // Skip more frames for massive datasets\n      const currentFrame = (animationFrameRef.current || 0) % skipModulo;\n      if (currentFrame !== 0) {\n        animationFrameRef.current = requestAnimationFrame(runSimulation);\n        return;\n      }\n    }\n\n    // Apply forces\n    applyRepulsionForces();\n    applyAttractionForces();\n    applyCenteringForce();\n\n    // Update positions\n    let totalMovement = 0;\n\n    simulation.nodes.forEach((node) => {\n      // Skip pinned nodes\n      if (node.isPinned || node.fx !== null || node.fy !== null) {\n        node.vx = 0;\n        node.vy = 0;\n        return;\n      }\n\n      // Apply velocity with friction and cooling\n      node.vx *= physicsSettings.friction * coolingRef.current;\n      node.vy *= physicsSettings.friction * coolingRef.current;\n\n      // PERFORMANCE OPTIMIZATION: Adaptive velocity limiting based on dataset size\n      const adaptiveVelocityLimit =\n        physicsSettings.velocityLimit * (isLargeDataset ? 0.7 : 1.0);\n      const speed = Math.sqrt(node.vx * node.vx + node.vy * node.vy);\n      if (speed > adaptiveVelocityLimit) {\n        node.vx = (node.vx / speed) * adaptiveVelocityLimit;\n        node.vy = (node.vy / speed) * adaptiveVelocityLimit;\n      }\n\n      // Update position\n      node.x += node.vx;\n      node.y += node.vy;\n\n      // Track total movement for cooling\n      totalMovement += Math.abs(node.vx) + Math.abs(node.vy);\n    });\n\n    // Apply collision avoidance after position updates\n    applyCollisionAvoidance();\n\n    // Mark that we need to render\n    needsRenderRef.current = true;\n\n    // PERFORMANCE OPTIMIZATION: Adaptive stopping criteria based on dataset size\n    const movementThreshold = isLargeDataset ? 0.1 : 0.05; // Higher threshold for large datasets\n    const stabilityFramesRequired = isLargeDataset ? 15 : 30; // Fewer frames needed for large datasets\n\n    // Auto-stop simulation if movement is very small for a sustained period\n    if (totalMovement < movementThreshold) {\n      // Count low movement frames instead of stopping immediately\n      lowMovementFramesRef.current++;\n      if (lowMovementFramesRef.current > stabilityFramesRequired) {\n        setIsSimulationRunning(false);\n        lowMovementFramesRef.current = 0;\n        return;\n      }\n    } else {\n      lowMovementFramesRef.current = 0;\n    }\n\n    // Continue animation loop\n    animationFrameRef.current = requestAnimationFrame(runSimulation);\n  }, [\n    isSimulationRunning,\n    applyRepulsionForces,\n    applyAttractionForces,\n    applyCenteringForce,\n    applyCollisionAvoidance,\n    physicsSettings.friction,\n    physicsSettings.velocityLimit,\n  ]);\n\n  // Set up a separate interval for updating the React state\n  useEffect(() => {\n    if (isSimulationRunning) {\n      // Start the simulation\n      runSimulation();\n\n      // PERFORMANCE OPTIMIZATION: Adaptive render frequency based on node count\n      const nodeCount = simulationRef.current?.nodes.length || 0;\n      const isLargeDataset = nodeCount > 100;\n      const isMassiveDataset = nodeCount > 200;\n\n      // Reduce render frequency for large datasets to improve performance\n      const renderInterval = isMassiveDataset ? 100 : isLargeDataset ? 75 : 50; // ms\n\n      // Set up an interval to update the React state less frequently\n      renderIntervalRef.current = setInterval(() => {\n        if (needsRenderRef.current && simulationRef.current) {\n          // PERFORMANCE OPTIMIZATION: Only copy essential properties for large datasets\n          const updatedNodes = simulationRef.current.nodes.map((node) => {\n            if (isLargeDataset) {\n              // For large datasets, only copy essential properties to reduce memory pressure\n              return {\n                id: node.id,\n                title: node.title,\n                x: Math.round(node.x), // Round coordinates to reduce precision for better performance\n                y: Math.round(node.y),\n                radius: node.radius,\n                color: node.color,\n                type: node.type,\n                agentId: node.agentId,\n                originalId: node.originalId,\n                entryIds: node.entryIds,\n              };\n            } else {\n              // For smaller datasets, keep full precision\n              return { ...node };\n            }\n          });\n\n          // Update the React state\n          setNodes(updatedNodes);\n\n          // Reset the flag\n          needsRenderRef.current = false;\n        }\n      }, renderInterval); // Adaptive update frequency\n\n      // Cooling effect\n      coolingRef.current = 1.0;\n      const coolingInterval = setInterval(() => {\n        coolingRef.current = Math.max(coolingRef.current * 0.98, 0.6);\n      }, 500);\n\n      // Warmup effect\n      warmupPhaseRef.current = 0.3;\n      const warmupInterval = setInterval(() => {\n        warmupPhaseRef.current = Math.min(warmupPhaseRef.current + 0.1, 1.0);\n      }, 100);\n\n      return () => {\n        if (animationFrameRef.current) {\n          cancelAnimationFrame(animationFrameRef.current);\n        }\n        if (renderIntervalRef.current) {\n          clearInterval(renderIntervalRef.current);\n        }\n        clearInterval(coolingInterval);\n        clearInterval(warmupInterval);\n      };\n    } else {\n      // Clean up when simulation is stopped\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      if (renderIntervalRef.current) {\n        clearInterval(renderIntervalRef.current);\n      }\n    }\n  }, [isSimulationRunning, runSimulation]);\n\n  const resetNodePositions = useCallback(() => {\n    if (!hasInitializedRef.current || initialNodesRef.current.length === 0) {\n      console.warn(\"Cannot reset: initial nodes not stored\");\n      return;\n    }\n\n    // Stop simulation\n    setIsSimulationRunning(false);\n    if (animationFrameRef.current) {\n      cancelAnimationFrame(animationFrameRef.current);\n    }\n    if (renderIntervalRef.current) {\n      clearInterval(renderIntervalRef.current);\n    }\n\n    // Reset zoom and offset\n    setZoomLevel(1);\n    setOffset({ x: 0, y: 0 });\n\n    // Clear any selected or hovered nodes\n    setSelectedNode(null);\n    setHoveredNode(null);\n\n    // Deep clone the initial nodes and links to ensure we're working with fresh copies\n    const resetNodes = JSON.parse(JSON.stringify(initialNodesRef.current));\n    const resetLinks = JSON.parse(JSON.stringify(initialLinksRef.current));\n\n    // Update the state with the initial nodes and links\n    setNodes(resetNodes);\n    setLinks(resetLinks);\n\n    // Reset the simulation with fresh physics nodes\n    const physicsNodes: IPhysicsNode[] = resetNodes.map((node: INode) => ({\n      ...node,\n      vx: 0,\n      vy: 0,\n      fx: null,\n      fy: null,\n      isPinned: false,\n    }));\n\n    // Create physics links with actual node references\n    const physicsLinks = resetLinks\n      .map((link: Link) => {\n        const source = physicsNodes.find(\n          (n: IPhysicsNode) => n.id === link.source,\n        );\n        const target = physicsNodes.find(\n          (n: IPhysicsNode) => n.id === link.target,\n        );\n\n        if (!source || !target) {\n          console.error(\n            `Could not find nodes for link: ${link.source} -> ${link.target}`,\n          );\n          return null;\n        }\n\n        return {\n          ...link,\n          source,\n          target,\n        };\n      })\n      .filter(Boolean) as IPhysicsLink[];\n\n    // Update the simulation reference\n    simulationRef.current = {\n      nodes: physicsNodes,\n      links: physicsLinks,\n    };\n\n    // Reset other simulation parameters\n    coolingRef.current = 1.0;\n    warmupPhaseRef.current = 0.3;\n    lowMovementFramesRef.current = 0;\n\n    // Force a render\n    needsRenderRef.current = true;\n  }, []);\n\n  const handleNodeClick = useCallback(\n    (node: INode) => {\n      if (!node) return;\n\n      if (node.type === \"tag\") {\n        const tagName = node.title;\n\n        // Find all knowledge entries that have this tag\n        const entriesWithTag: { entry: KnowledgeEntry; agent: Agent }[] = [];\n\n        agents.forEach((agent) => {\n          agent.knowledge?.forEach((entry) => {\n            if (entry.tags?.includes(tagName)) {\n              entriesWithTag.push({ entry, agent });\n            }\n          });\n        });\n\n        if (entriesWithTag.length > 0) {\n          // Create a formatted list of entries with this tag\n          const formattedEntries = entriesWithTag\n            .map(({ entry, agent }) => `- \"${entry.title}\" (${agent.name})`)\n            .join(\"\\n\");\n\n          setSelectedNodeInfo({\n            title: `Tag: ${tagName}`,\n            content: `${entriesWithTag.length} knowledge ${\n              entriesWithTag.length === 1 ? \"entry has\" : \"entries have\"\n            } this tag:\\n\\n${formattedEntries}`,\n            type: \"tag\",\n            id: tagName,\n          });\n        } else {\n          setSelectedNodeInfo({\n            title: `Tag: ${tagName}`,\n            content: \"No knowledge entries have this tag.\",\n            type: \"tag\",\n            id: tagName,\n          });\n        }\n\n        onSelectNode(\"tag\", tagName, tagName);\n      } else if (node.type === \"entry\") {\n        // For entries, we need to find the actual entry data\n        const entryTitle = node.title;\n        const entriesWithTitle: { entry: KnowledgeEntry; agent: Agent }[] = [];\n\n        agents.forEach((agent) => {\n          agent.knowledge?.forEach((entry) => {\n            if (entry.title === entryTitle) {\n              entriesWithTitle.push({ entry, agent });\n            }\n          });\n        });\n\n        if (entriesWithTitle.length > 0) {\n          // Just use the first one for now for the info panel\n          const { entry, agent } = entriesWithTitle[0];\n\n          setSelectedNodeInfo({\n            title: entry.title,\n            content: entry.content,\n            type: \"entry\",\n            id: entry.id,\n          });\n\n          // Pass the entry title as the ID to ensure we can find all instances across agents\n          onSelectNode(\"entry\", entryTitle, entry.title);\n        }\n      }\n    },\n    [agents, onSelectNode],\n  );\n\n  const handleMouseDown = useCallback(\n    (e: React.MouseEvent<HTMLCanvasElement>) => {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n\n      const rect = canvas.getBoundingClientRect();\n      const x = (e.clientX - rect.left - offset.x) / zoomLevel;\n      const y = (e.clientY - rect.top - offset.y) / zoomLevel;\n\n      // Check if clicking on a node\n      const clicked = nodes.find((node) => {\n        const dx = node.x - x;\n        const dy = node.y - y;\n        return Math.sqrt(dx * dx + dy * dy) <= node.radius;\n      });\n\n      if (clicked && simulationRef.current) {\n        setSelectedNode(clicked);\n        handleNodeClick(clicked);\n\n        // Check for double-click to pin/unpin node\n        const now = Date.now();\n        if (now - lastClickTime < 300 && lastClickedNode === clicked.id) {\n          // Toggle pin state\n          const simNode = simulationRef.current.nodes.find(\n            (n) => n.id === clicked.id,\n          );\n          if (simNode) {\n            simNode.isPinned = !simNode.isPinned;\n            simNode.fx = simNode.isPinned ? simNode.x : null;\n            simNode.fy = simNode.isPinned ? simNode.y : null;\n\n            // Update the React state\n            needsRenderRef.current = true;\n          }\n        } else {\n          // Start dragging the node\n          const simNode = simulationRef.current.nodes.find(\n            (n) => n.id === clicked.id,\n          );\n          if (simNode) {\n            setDraggedNode(simNode);\n          }\n        }\n\n        setLastClickTime(now);\n        setLastClickedNode(clicked.id);\n      } else {\n        // Start dragging the canvas\n        setIsDragging(true);\n        setDragStart({\n          x: e.clientX - offset.x,\n          y: e.clientY - offset.y,\n        });\n      }\n    },\n    [nodes, zoomLevel, offset, lastClickTime, lastClickedNode, handleNodeClick],\n  );\n\n  const handleCanvasMouseMove = useCallback(\n    (e: React.MouseEvent<HTMLCanvasElement>) => {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n\n      const rect = canvas.getBoundingClientRect();\n      const x = (e.clientX - rect.left - offset.x) / zoomLevel;\n      const y = (e.clientY - rect.top - offset.y) / zoomLevel;\n\n      // Check if hovering over a node\n      const hovered = nodes.find((node) => {\n        const dx = node.x - x;\n        const dy = node.y - y;\n        return Math.sqrt(dx * dx + dy * dy) <= node.radius;\n      });\n\n      setHoveredNode(hovered || null);\n\n      // Handle dragging a node\n      if (draggedNode && simulationRef.current) {\n        const nodeIndex = simulationRef.current.nodes.findIndex(\n          (n) => n.id === draggedNode.id,\n        );\n        if (nodeIndex >= 0) {\n          const node = simulationRef.current.nodes[nodeIndex];\n          node.x = x;\n          node.y = y;\n          node.vx = 0;\n          node.vy = 0;\n\n          // Mark that we need to render\n          needsRenderRef.current = true;\n        }\n      } else if (isDragging) {\n        // Handle dragging the canvas\n        setOffset({\n          x: e.clientX - dragStart.x,\n          y: e.clientY - dragStart.y,\n        });\n      }\n    },\n    [nodes, zoomLevel, offset, dragStart, draggedNode, isDragging],\n  );\n\n  const handleCanvasMouseUp = useCallback(() => {\n    setIsDragging(false);\n    setDraggedNode(null);\n  }, []);\n\n  const handleZoomIn = useCallback(() => {\n    setZoomLevel((prev) => Math.min(prev + 0.2, 3));\n  }, []);\n\n  const handleZoomOut = useCallback(() => {\n    setZoomLevel((prev) => Math.max(prev - 0.2, 0.5));\n  }, []);\n\n  const handleReset = useCallback(() => {\n    setZoomLevel(1);\n    setOffset({ x: 0, y: 0 });\n  }, []);\n\n  // Draw the graph\n  useEffect(() => {\n    if (!nodes.length) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext(\"2d\");\n    if (!ctx) return;\n\n    // Set canvas dimensions\n    const container = containerRef.current;\n    if (container) {\n      const { width, height } = container.getBoundingClientRect();\n      canvas.width = width;\n      canvas.height = height;\n    }\n\n    // Clear canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Apply zoom and pan\n    ctx.save();\n    ctx.translate(offset.x, offset.y);\n    ctx.scale(zoomLevel, zoomLevel);\n\n    // Draw links\n    for (const link of links) {\n      const source = nodes.find((n) => n.id === link.source);\n      const target = nodes.find((n) => n.id === link.target);\n\n      if (source && target) {\n        ctx.beginPath();\n        ctx.moveTo(source.x, source.y);\n        ctx.lineTo(target.x, target.y);\n\n        // Use different style for links connected to selected node\n        if (\n          selectedNode &&\n          (source.id === selectedNode.id || target.id === selectedNode.id)\n        ) {\n          ctx.strokeStyle = `${link.color}90`; // 90% opacity\n          ctx.lineWidth = 3 / zoomLevel;\n        } else {\n          ctx.strokeStyle = `${link.color}50`; // 50% opacity\n          ctx.lineWidth = 2 / zoomLevel;\n        }\n\n        ctx.stroke();\n      }\n    }\n\n    // Draw nodes\n    for (const node of nodes) {\n      // Ensure radius is positive\n      const radius = Math.max(node.radius, 1); // Minimum radius of 1\n\n      ctx.beginPath();\n      ctx.arc(node.x, node.y, radius, 0, Math.PI * 2);\n\n      // Highlight selected or hovered node\n      if (node === selectedNode) {\n        ctx.fillStyle = \"#f472b6\"; // Pink for selected\n        ctx.strokeStyle = \"#ffffff\";\n        ctx.lineWidth = 2 / zoomLevel;\n        ctx.stroke();\n      } else if (node === hoveredNode) {\n        ctx.fillStyle = node.color;\n        ctx.strokeStyle = \"#ffffff\";\n        ctx.lineWidth = 2 / zoomLevel;\n        ctx.stroke();\n      } else {\n        ctx.fillStyle = node.color;\n      }\n\n      // Add a stroke to tag nodes to make them more distinguishable\n      if (node.type === \"tag\") {\n        ctx.strokeStyle = \"#4338ca\";\n        ctx.lineWidth = 2 / zoomLevel;\n        ctx.stroke();\n      }\n\n      // Add a pin indicator for pinned nodes\n      const isPinned = simulationRef.current?.nodes.find(\n        (n) => n.id === node.id,\n      )?.isPinned;\n      if (isPinned) {\n        ctx.strokeStyle = \"#f59e0b\"; // Amber color for pins\n        ctx.lineWidth = 2 / zoomLevel;\n        ctx.setLineDash([3, 3]); // Dashed line\n        ctx.stroke();\n        ctx.setLineDash([]); // Reset to solid line\n      }\n\n      ctx.fill();\n\n      // Draw agent initials for agent nodes\n      if (node.type === \"agent\") {\n        ctx.fillStyle = \"#ffffff\";\n        ctx.font = `bold ${Math.max(14 / zoomLevel, 8)}px Arial`; // Ensure minimum font size\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillText(node.title.charAt(0), node.x, node.y);\n      }\n\n      // Draw node labels\n      if (node === hoveredNode || node === selectedNode || zoomLevel > 1.5) {\n        ctx.fillStyle = \"#ffffff\";\n        ctx.font = `${node.type === \"tag\" ? \"bold \" : \"\"}${Math.max(12 / zoomLevel, 8)}px Arial`;\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n\n        // Draw text with background for better readability\n        const textWidth = ctx.measureText(node.title).width;\n        ctx.fillStyle = \"rgba(0, 0, 0, 0.7)\";\n        ctx.fillRect(\n          node.x - textWidth / 2 - 4,\n          node.y + radius + 4,\n          textWidth + 8,\n          16 / zoomLevel,\n        );\n\n        ctx.fillStyle = \"#ffffff\";\n        ctx.font = `${node.type === \"tag\" ? \"bold \" : \"\"}${Math.max(12 / zoomLevel, 8)}px Arial`;\n        ctx.fillText(node.title, node.x, node.y + radius + 12 / zoomLevel);\n      }\n    }\n\n    ctx.restore();\n  }, [nodes, links, hoveredNode, selectedNode, zoomLevel, offset]);\n\n  // Handle window resize\n  useEffect(() => {\n    const handleResize = () => {\n      const canvas = canvasRef.current;\n      const container = containerRef.current;\n      if (!canvas || !container) return;\n\n      canvas.width = container.clientWidth;\n      canvas.height = container.clientHeight;\n\n      // Redraw\n      const ctx = canvas.getContext(\"2d\");\n      if (ctx) {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n      }\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  // Count total knowledge entries\n  const totalEntries = agents.reduce(\n    (sum, agent) => sum + (agent.knowledge?.length || 0),\n    0,\n  );\n\n  // Count unique knowledge titles\n  const uniqueTitles = new Set<string>();\n  agents.forEach((agent) => {\n    agent.knowledge?.forEach((entry) => {\n      uniqueTitles.add(entry.title);\n    });\n  });\n\n  // Count unique tags\n  const uniqueTags = new Set<string>();\n  agents.forEach((agent) => {\n    agent.knowledge?.forEach((entry) => {\n      entry.tags?.forEach((tag) => uniqueTags.add(tag));\n    });\n  });\n\n  return (\n    <Card className=\"h-full\">\n      <CardHeader className=\"py-2 px-4 border-b border-purple-800 bg-gradient-to-r from-purple-900/50 to-indigo-900/50\">\n        <div className=\"flex justify-between items-center\">\n          <CardTitle className=\"text-sm font-medium text-white\">\n            Global Knowledge Graph\n          </CardTitle>\n          <div className=\"flex gap-2\">\n            {/* Physics simulation controls */}\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => setIsSimulationRunning(!isSimulationRunning)}\n              className=\"h-6 w-6 p-0 bg-purple-900/50 border-purple-500 text-white hover:bg-purple-800 hover:text-white\"\n              title={\n                isSimulationRunning ? \"Pause simulation\" : \"Start simulation\"\n              }\n            >\n              {isSimulationRunning ? <Pause size={12} /> : <Play size={12} />}\n            </Button>\n\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={resetNodePositions}\n              className=\"h-6 w-6 p-0 bg-purple-900/50 border-purple-500 text-white hover:bg-purple-800 hover:text-white\"\n              title=\"Reset positions\"\n            >\n              <RefreshCw size={12} />\n            </Button>\n\n            {/* Existing zoom controls */}\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={handleZoomOut}\n              className=\"h-6 w-6 p-0 bg-purple-900/50 border-purple-500 text-white hover:bg-purple-800 hover:text-white\"\n            >\n              <ZoomOut size={12} />\n            </Button>\n            <span className=\"flex items-center text-xs text-white px-1\">\n              {Math.round(zoomLevel * 100)}%\n            </span>\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={handleZoomIn}\n              className=\"h-6 w-6 p-0 bg-purple-900/50 border-purple-500 text-white hover:bg-purple-800 hover:text-white\"\n            >\n              <ZoomIn size={12} />\n            </Button>\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={handleReset}\n              className=\"h-6 w-6 p-0 bg-purple-900/50 border-purple-500 text-white hover:bg-purple-800 hover:text-white\"\n            >\n              <RefreshCw size={12} />\n            </Button>\n          </div>\n        </div>\n        <div className=\"text-xs text-purple-300 mt-1\">\n          {agents.length} agents, {totalEntries} entries ({uniqueTitles.size}{\" \"}\n          unique), {uniqueTags.size} tags\n          {isSimulationRunning && \" \u2022 Simulation running\"}\n          {simulationRef.current?.nodes &&\n            simulationRef.current.nodes.filter((n: IPhysicsNode) => n.isPinned)\n              .length > 0 &&\n            ` \u2022 ${simulationRef.current.nodes.filter((n: IPhysicsNode) => n.isPinned).length} pinned nodes`}\n        </div>\n      </CardHeader>\n\n      <CardContent className=\"p-0 h-[calc(100%-52px)]\">\n        <div ref={containerRef} className=\"h-full relative bg-black\">\n          <canvas\n            ref={canvasRef}\n            className=\"absolute inset-0 cursor-grab\"\n            onMouseMove={handleCanvasMouseMove}\n            onMouseDown={handleMouseDown}\n            onMouseUp={handleCanvasMouseUp}\n            onMouseLeave={handleCanvasMouseUp}\n          />\n\n          {hoveredNode && (\n            <div className=\"absolute bottom-4 left-4 bg-purple-950/80 backdrop-blur-sm p-3 rounded-lg border border-purple-700 shadow-md max-w-xs\">\n              {hoveredNode.type === \"tag\" && (\n                <>\n                  <h3 className=\"font-medium text-white mb-1\">\n                    Tag: {hoveredNode.title}\n                  </h3>\n                  <div className=\"text-xs text-purple-300\">\n                    {agents.reduce((count, agent) => {\n                      return (\n                        count +\n                        (agent.knowledge || []).filter((entry) =>\n                          entry.tags?.includes(hoveredNode.title),\n                        ).length\n                      );\n                    }, 0)}{\" \"}\n                    entries across {agents.length} agents\n                  </div>\n                </>\n              )}\n\n              {hoveredNode.type === \"entry\" && (\n                <>\n                  <h3 className=\"font-medium text-white mb-1\">\n                    Knowledge: {hoveredNode.title}\n                  </h3>\n                  <div className=\"text-xs text-purple-300\">\n                    {agents.reduce((count, agent) => {\n                      return (\n                        count +\n                        (agent.knowledge || []).filter(\n                          (entry) => entry.title === hoveredNode.title,\n                        ).length\n                      );\n                    }, 0)}{\" \"}\n                    instances across{\" \"}\n                    {\n                      agents.filter((agent) =>\n                        (agent.knowledge || []).some(\n                          (entry) => entry.title === hoveredNode.title,\n                        ),\n                      ).length\n                    }{\" \"}\n                    agents\n                  </div>\n                </>\n              )}\n            </div>\n          )}\n        </div>\n        <div className=\"absolute bottom-4 right-4 bg-purple-950/80 backdrop-blur-sm rounded-lg border border-purple-700 shadow-md overflow-hidden z-50\">\n          <div className=\"flex items-center\">\n            <AboutButton onClick={onShowAbout} />\n            <button\n              onClick={() => setShowSettings(!showSettings)}\n              className=\"flex items-center justify-between p-2 text-white text-sm font-medium hover:bg-purple-800/50\"\n            >\n              Physics Settings\n              {showSettings ? (\n                <ChevronDown size={16} />\n              ) : (\n                <ChevronRight size={16} />\n              )}\n            </button>\n          </div>\n\n          {showSettings && (\n            <div className=\"p-3 space-y-3\">\n              <div>\n                <label className=\"text-xs text-purple-300 block mb-1\">\n                  Repulsion Force\n                </label>\n                <input\n                  type=\"range\"\n                  min=\"10\"\n                  max=\"500\"\n                  step=\"10\"\n                  value={physicsSettings.repulsion}\n                  onChange={(e) =>\n                    setPhysicsSettings({\n                      ...physicsSettings,\n                      repulsion: Number(e.target.value),\n                    })\n                  }\n                  className=\"w-full\"\n                />\n                <div className=\"flex justify-between text-xs text-purple-400\">\n                  <span>Weak</span>\n                  <span>{physicsSettings.repulsion}</span>\n                  <span>Strong</span>\n                </div>\n              </div>\n\n              <div>\n                <label className=\"text-xs text-purple-300 block mb-1\">\n                  Link Strength\n                </label>\n                <input\n                  type=\"range\"\n                  min=\"0.01\"\n                  max=\"0.5\"\n                  step=\"0.01\"\n                  value={physicsSettings.linkStrength}\n                  onChange={(e) =>\n                    setPhysicsSettings({\n                      ...physicsSettings,\n                      linkStrength: Number(e.target.value),\n                    })\n                  }\n                  className=\"w-full\"\n                />\n                <div className=\"flex justify-between text-xs text-purple-400\">\n                  <span>Loose</span>\n                  <span>{physicsSettings.linkStrength.toFixed(2)}</span>\n                  <span>Tight</span>\n                </div>\n              </div>\n\n              <div>\n                <label className=\"text-xs text-purple-300 block mb-1\">\n                  Friction\n                </label>\n                <input\n                  type=\"range\"\n                  min=\"0.7\"\n                  max=\"0.99\"\n                  step=\"0.01\"\n                  value={physicsSettings.friction}\n                  onChange={(e) =>\n                    setPhysicsSettings({\n                      ...physicsSettings,\n                      friction: Number(e.target.value),\n                    })\n                  }\n                  className=\"w-full\"\n                />\n                <div className=\"flex justify-between text-xs text-purple-400\">\n                  <span>More Damping</span>\n                  <span>{physicsSettings.friction.toFixed(2)}</span>\n                  <span>Less Damping</span>\n                </div>\n              </div>\n\n              <div>\n                <label className=\"text-xs text-purple-300 block mb-1\">\n                  Center Force\n                </label>\n                <input\n                  type=\"range\"\n                  min=\"0\"\n                  max=\"0.3\"\n                  step=\"0.01\"\n                  value={physicsSettings.centerForce}\n                  onChange={(e) =>\n                    setPhysicsSettings({\n                      ...physicsSettings,\n                      centerForce: Number(e.target.value),\n                    })\n                  }\n                  className=\"w-full\"\n                />\n                <div className=\"flex justify-between text-xs text-purple-400\">\n                  <span>None</span>\n                  <span>{physicsSettings.centerForce.toFixed(2)}</span>\n                  <span>Strong</span>\n                </div>\n              </div>\n\n              <div>\n                <label className=\"text-xs text-purple-300 block mb-1\">\n                  Velocity Limit\n                </label>\n                <input\n                  type=\"range\"\n                  min=\"0.0\"\n                  max=\"2.5\"\n                  step=\"0.1\"\n                  value={physicsSettings.velocityLimit}\n                  onChange={(e) =>\n                    setPhysicsSettings({\n                      ...physicsSettings,\n                      velocityLimit: Number(e.target.value),\n                    })\n                  }\n                  className=\"w-full\"\n                />\n                <div className=\"flex justify-between text-xs text-purple-400\">\n                  <span>Slow</span>\n                  <span>{physicsSettings.velocityLimit.toFixed(1)}</span>\n                  <span>Fast</span>\n                </div>\n              </div>\n\n              <button\n                onClick={() => {\n                  // Reset to default settings\n                  setPhysicsSettings({\n                    repulsion: 80,\n                    linkStrength: 0.08,\n                    friction: 0.92,\n                    centerForce: 0.05,\n                    collisionRadius: 1.2,\n                    velocityLimit: 0.2,\n                  });\n                }}\n                className=\"w-full py-1 px-2 bg-purple-700 hover:bg-purple-600 text-white text-xs rounded\"\n              >\n                Reset to Defaults\n              </button>\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],
      names: ["GlobalKnowledgeGraph", "QuadTree", "constructor", "boundary", "capacity", "points", "divided", "northeast", "northwest", "southeast", "southwest", "insert", "point", "contains", "length", "push", "subdivide", "x", "y", "w", "width", "h", "height", "query", "range", "found", "intersects", "dx", "dy", "distanceSq", "radius", "node", "Math", "abs", "cornerDistanceSq", "agents", "onSelectNode", "onShowAbout", "canvasRef", "useRef", "containerRef", "nodes", "setNodes", "useState", "links", "setLinks", "hoveredNode", "setHoveredNode", "zoomLevel", "setZoomLevel", "isDragging", "setIsDragging", "dragStart", "setDragStart", "offset", "setOffset", "selectedNode", "setSelectedNode", "selectedNodeInfo", "setSelectedNodeInfo", "simulationRef", "isSimulationRunning", "setIsSimulationRunning", "physicsSettings", "setPhysicsSettings", "repulsion", "linkStrength", "friction", "centerForce", "collisionRadius", "velocityLimit", "lastClickTime", "setLastClickTime", "lastClickedNode", "setLastClickedNode", "draggedNode", "setDraggedNode", "showSettings", "setShowSettings", "coolingRef", "warmupPhaseRef", "lowMovementFramesRef", "animationFrameRef", "undefined", "initialNodesRef", "initialLinksRef", "needsRenderRef", "renderIntervalRef", "hasInitializedRef", "useEffect", "container", "current", "clientWidth", "clientHeight", "centerX", "centerY", "allEntries", "allTags", "Set", "forEach", "agent", "knowledge", "entry", "agentId", "id", "agentColor", "color", "tags", "tag", "add", "uniqueEntryTitles", "Map", "has", "title", "set", "entryIds", "agentIds", "get", "includes", "newNodes", "map", "index", "angle", "PI", "min", "name", "cos", "sin", "type", "entries", "data", "size", "replace", "toLowerCase", "newLinks", "entryNodeId", "source", "target", "strength", "linkExists", "some", "link", "entryNodes", "filter", "i", "j", "entry1", "entry2", "entry1Tags", "entry2Tags", "sharedTags", "JSON", "parse", "stringify", "physicsNodes", "vx", "vy", "fx", "fy", "isPinned", "physicsLinks", "find", "n", "console", "error", "Boolean", "applyRepulsionForces", "useCallback", "simulation", "quadtree", "nodeA", "max", "nearbyNodes", "nodeB", "distance", "sqrt", "minDistance", "effectiveDistance", "force", "forceX", "forceY", "applyAttractionForces", "applyCenteringForce", "applyCollisionAvoidance", "maxCollisionRadius", "nearbyPoints", "pointData", "overlap", "moveX", "moveY", "runSimulation", "cancelAnimationFrame", "nodeCount", "isLargeDataset", "isMassiveDataset", "skipModulo", "currentFrame", "requestAnimationFrame", "totalMovement", "adaptiveVelocityLimit", "speed", "movementThreshold", "stabilityFramesRequired", "renderInterval", "setInterval", "updatedNodes", "round", "originalId", "coolingInterval", "warmupInterval", "clearInterval", "resetNodePositions", "warn", "resetNodes", "resetLinks", "handleNodeClick", "tagName", "entriesWithTag", "formattedEntries", "join", "content", "entryTitle", "entriesWithTitle", "handleMouseDown", "e", "canvas", "rect", "getBoundingClientRect", "clientX", "left", "clientY", "top", "clicked", "now", "Date", "simNode", "handleCanvasMouseMove", "hovered", "nodeIndex", "findIndex", "handleCanvasMouseUp", "handleZoomIn", "prev", "handleZoomOut", "handleReset", "ctx", "getContext", "clearRect", "save", "translate", "scale", "beginPath", "moveTo", "lineTo", "strokeStyle", "lineWidth", "stroke", "arc", "fillStyle", "setLineDash", "fill", "font", "textAlign", "textBaseline", "fillText", "charAt", "textWidth", "measureText", "fillRect", "restore", "handleResize", "window", "addEventListener", "removeEventListener", "totalEntries", "reduce", "sum", "uniqueTitles", "uniqueTags", "Card", "className", "CardHeader", "div", "CardTitle", "Button", "variant", "onClick", "Pause", "Play", "RefreshCw", "ZoomOut", "span", "ZoomIn", "CardContent", "ref", "onMouseMove", "onMouseDown", "onMouseUp", "onMouseLeave", "h3", "count", "AboutButton", "button", "ChevronDown", "ChevronRight", "label", "input", "step", "value", "onChange", "Number", "toFixed"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4cb8ed2d5ab4da3b357f832c4586aff4e1428763"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_225r6pydyk = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_225r6pydyk();
cov_225r6pydyk().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_225r6pydyk().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_225r6pydyk().f[0]++;
    cov_225r6pydyk().s[2]++;
    return GlobalKnowledgeGraph;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_225r6pydyk().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_225r6pydyk().s[4]++, require("react"));
const _card =
/* istanbul ignore next */
(cov_225r6pydyk().s[5]++, require("./ui/card"));
const _button =
/* istanbul ignore next */
(cov_225r6pydyk().s[6]++, require("./ui/button"));
const _lucidereact =
/* istanbul ignore next */
(cov_225r6pydyk().s[7]++, require("lucide-react"));
const _AboutButton =
/* istanbul ignore next */
(/*#__PURE__*/cov_225r6pydyk().s[8]++, _interop_require_default(require("./AboutButton")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_225r6pydyk().f[1]++;
  cov_225r6pydyk().s[9]++;
  return /* istanbul ignore next */(cov_225r6pydyk().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_225r6pydyk().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_225r6pydyk().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_225r6pydyk().b[0][1]++, {
    default: obj
  });
}
// Simple quadtree implementation for spatial partitioning
class QuadTree {
  constructor(boundary, capacity) {
    /* istanbul ignore next */
    cov_225r6pydyk().f[2]++;
    cov_225r6pydyk().s[10]++;
    this.boundary = boundary;
    /* istanbul ignore next */
    cov_225r6pydyk().s[11]++;
    this.capacity = capacity;
    /* istanbul ignore next */
    cov_225r6pydyk().s[12]++;
    this.points = [];
    /* istanbul ignore next */
    cov_225r6pydyk().s[13]++;
    this.divided = false;
    /* istanbul ignore next */
    cov_225r6pydyk().s[14]++;
    this.northeast = null;
    /* istanbul ignore next */
    cov_225r6pydyk().s[15]++;
    this.northwest = null;
    /* istanbul ignore next */
    cov_225r6pydyk().s[16]++;
    this.southeast = null;
    /* istanbul ignore next */
    cov_225r6pydyk().s[17]++;
    this.southwest = null;
  }
  insert(point) {
    /* istanbul ignore next */
    cov_225r6pydyk().f[3]++;
    cov_225r6pydyk().s[18]++;
    // Check if point is in boundary
    if (!this.contains(point)) {
      /* istanbul ignore next */
      cov_225r6pydyk().b[2][0]++;
      cov_225r6pydyk().s[19]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_225r6pydyk().b[2][1]++;
    }
    // If space available, add point
    cov_225r6pydyk().s[20]++;
    if (this.points.length < this.capacity) {
      /* istanbul ignore next */
      cov_225r6pydyk().b[3][0]++;
      cov_225r6pydyk().s[21]++;
      this.points.push(point);
      /* istanbul ignore next */
      cov_225r6pydyk().s[22]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_225r6pydyk().b[3][1]++;
    }
    // Otherwise, subdivide and add point to appropriate quadrant
    cov_225r6pydyk().s[23]++;
    if (!this.divided) {
      /* istanbul ignore next */
      cov_225r6pydyk().b[4][0]++;
      cov_225r6pydyk().s[24]++;
      this.subdivide();
    } else
    /* istanbul ignore next */
    {
      cov_225r6pydyk().b[4][1]++;
    }
    cov_225r6pydyk().s[25]++;
    if (this.northeast.insert(point)) {
      /* istanbul ignore next */
      cov_225r6pydyk().b[5][0]++;
      cov_225r6pydyk().s[26]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_225r6pydyk().b[5][1]++;
    }
    cov_225r6pydyk().s[27]++;
    if (this.northwest.insert(point)) {
      /* istanbul ignore next */
      cov_225r6pydyk().b[6][0]++;
      cov_225r6pydyk().s[28]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_225r6pydyk().b[6][1]++;
    }
    cov_225r6pydyk().s[29]++;
    if (this.southeast.insert(point)) {
      /* istanbul ignore next */
      cov_225r6pydyk().b[7][0]++;
      cov_225r6pydyk().s[30]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_225r6pydyk().b[7][1]++;
    }
    cov_225r6pydyk().s[31]++;
    if (this.southwest.insert(point)) {
      /* istanbul ignore next */
      cov_225r6pydyk().b[8][0]++;
      cov_225r6pydyk().s[32]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_225r6pydyk().b[8][1]++;
    }
    cov_225r6pydyk().s[33]++;
    return false;
  }
  subdivide() {
    /* istanbul ignore next */
    cov_225r6pydyk().f[4]++;
    const x =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[34]++, this.boundary.x);
    const y =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[35]++, this.boundary.y);
    const w =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[36]++, this.boundary.width / 2);
    const h =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[37]++, this.boundary.height / 2);
    /* istanbul ignore next */
    cov_225r6pydyk().s[38]++;
    this.northeast = new QuadTree({
      x: x + w,
      y: y - h,
      width: w,
      height: h
    }, this.capacity);
    /* istanbul ignore next */
    cov_225r6pydyk().s[39]++;
    this.northwest = new QuadTree({
      x: x - w,
      y: y - h,
      width: w,
      height: h
    }, this.capacity);
    /* istanbul ignore next */
    cov_225r6pydyk().s[40]++;
    this.southeast = new QuadTree({
      x: x + w,
      y: y + h,
      width: w,
      height: h
    }, this.capacity);
    /* istanbul ignore next */
    cov_225r6pydyk().s[41]++;
    this.southwest = new QuadTree({
      x: x - w,
      y: y + h,
      width: w,
      height: h
    }, this.capacity);
    /* istanbul ignore next */
    cov_225r6pydyk().s[42]++;
    this.divided = true;
  }
  contains(point) {
    /* istanbul ignore next */
    cov_225r6pydyk().f[5]++;
    cov_225r6pydyk().s[43]++;
    return /* istanbul ignore next */(cov_225r6pydyk().b[9][0]++, point.x >= this.boundary.x - this.boundary.width) &&
    /* istanbul ignore next */
    (cov_225r6pydyk().b[9][1]++, point.x <= this.boundary.x + this.boundary.width) &&
    /* istanbul ignore next */
    (cov_225r6pydyk().b[9][2]++, point.y >= this.boundary.y - this.boundary.height) &&
    /* istanbul ignore next */
    (cov_225r6pydyk().b[9][3]++, point.y <= this.boundary.y + this.boundary.height);
  }
  query(range, found =
  /* istanbul ignore next */
  (cov_225r6pydyk().b[10][0]++, [])) {
    /* istanbul ignore next */
    cov_225r6pydyk().f[6]++;
    cov_225r6pydyk().s[44]++;
    // Check if range intersects boundary
    if (!this.intersects(range)) {
      /* istanbul ignore next */
      cov_225r6pydyk().b[11][0]++;
      cov_225r6pydyk().s[45]++;
      return found;
    } else
    /* istanbul ignore next */
    {
      cov_225r6pydyk().b[11][1]++;
    }
    // Check points in this quad
    cov_225r6pydyk().s[46]++;
    for (const point of this.points) {
      const dx =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[47]++, point.x - range.x);
      const dy =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[48]++, point.y - range.y);
      const distanceSq =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[49]++, dx * dx + dy * dy);
      /* istanbul ignore next */
      cov_225r6pydyk().s[50]++;
      if (distanceSq <= range.radius * range.radius) {
        /* istanbul ignore next */
        cov_225r6pydyk().b[12][0]++;
        cov_225r6pydyk().s[51]++;
        found.push(point.node);
      } else
      /* istanbul ignore next */
      {
        cov_225r6pydyk().b[12][1]++;
      }
    }
    // If divided, check children
    /* istanbul ignore next */
    cov_225r6pydyk().s[52]++;
    if (this.divided) {
      /* istanbul ignore next */
      cov_225r6pydyk().b[13][0]++;
      cov_225r6pydyk().s[53]++;
      this.northeast.query(range, found);
      /* istanbul ignore next */
      cov_225r6pydyk().s[54]++;
      this.northwest.query(range, found);
      /* istanbul ignore next */
      cov_225r6pydyk().s[55]++;
      this.southeast.query(range, found);
      /* istanbul ignore next */
      cov_225r6pydyk().s[56]++;
      this.southwest.query(range, found);
    } else
    /* istanbul ignore next */
    {
      cov_225r6pydyk().b[13][1]++;
    }
    cov_225r6pydyk().s[57]++;
    return found;
  }
  intersects(range) {
    /* istanbul ignore next */
    cov_225r6pydyk().f[7]++;
    const dx =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[58]++, Math.abs(range.x - this.boundary.x));
    const dy =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[59]++, Math.abs(range.y - this.boundary.y));
    /* istanbul ignore next */
    cov_225r6pydyk().s[60]++;
    if (dx > this.boundary.width + range.radius) {
      /* istanbul ignore next */
      cov_225r6pydyk().b[14][0]++;
      cov_225r6pydyk().s[61]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_225r6pydyk().b[14][1]++;
    }
    cov_225r6pydyk().s[62]++;
    if (dy > this.boundary.height + range.radius) {
      /* istanbul ignore next */
      cov_225r6pydyk().b[15][0]++;
      cov_225r6pydyk().s[63]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_225r6pydyk().b[15][1]++;
    }
    cov_225r6pydyk().s[64]++;
    if (dx <= this.boundary.width) {
      /* istanbul ignore next */
      cov_225r6pydyk().b[16][0]++;
      cov_225r6pydyk().s[65]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_225r6pydyk().b[16][1]++;
    }
    cov_225r6pydyk().s[66]++;
    if (dy <= this.boundary.height) {
      /* istanbul ignore next */
      cov_225r6pydyk().b[17][0]++;
      cov_225r6pydyk().s[67]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_225r6pydyk().b[17][1]++;
    }
    const cornerDistanceSq =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[68]++, (dx - this.boundary.width) * (dx - this.boundary.width) + (dy - this.boundary.height) * (dy - this.boundary.height));
    /* istanbul ignore next */
    cov_225r6pydyk().s[69]++;
    return cornerDistanceSq <= range.radius * range.radius;
  }
}
function GlobalKnowledgeGraph({
  agents,
  onSelectNode,
  onShowAbout
}) {
  /* istanbul ignore next */
  cov_225r6pydyk().f[8]++;
  const canvasRef =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[70]++, (0, _react.useRef)(null));
  const containerRef =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[71]++, (0, _react.useRef)(null));
  const [nodes, setNodes] =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[72]++, (0, _react.useState)([]));
  const [links, setLinks] =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[73]++, (0, _react.useState)([]));
  const [hoveredNode, setHoveredNode] =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[74]++, (0, _react.useState)(null));
  const [zoomLevel, setZoomLevel] =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[75]++, (0, _react.useState)(1));
  const [isDragging, setIsDragging] =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[76]++, (0, _react.useState)(false));
  const [dragStart, setDragStart] =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[77]++, (0, _react.useState)({
    x: 0,
    y: 0
  }));
  const [offset, setOffset] =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[78]++, (0, _react.useState)({
    x: 0,
    y: 0
  }));
  const [selectedNode, setSelectedNode] =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[79]++, (0, _react.useState)(null));
  const [selectedNodeInfo, setSelectedNodeInfo] =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[80]++, (0, _react.useState)(null));
  // Store simulation state in refs to avoid re-renders
  const simulationRef =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[81]++, (0, _react.useRef)(null));
  const [isSimulationRunning, setIsSimulationRunning] =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[82]++, (0, _react.useState)(false));
  const [physicsSettings, setPhysicsSettings] =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[83]++, (0, _react.useState)({
    repulsion: 80,
    linkStrength: 0.08,
    friction: 0.92,
    centerForce: 0.05,
    collisionRadius: 1.2,
    velocityLimit: 0.2
  }));
  const [lastClickTime, setLastClickTime] =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[84]++, (0, _react.useState)(0));
  const [lastClickedNode, setLastClickedNode] =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[85]++, (0, _react.useState)(null));
  const [draggedNode, setDraggedNode] =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[86]++, (0, _react.useState)(null));
  const [showSettings, setShowSettings] =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[87]++, (0, _react.useState)(false));
  // Store these values in refs to avoid re-renders
  const coolingRef =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[88]++, (0, _react.useRef)(1.0));
  const warmupPhaseRef =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[89]++, (0, _react.useRef)(0.3));
  const lowMovementFramesRef =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[90]++, (0, _react.useRef)(0));
  const animationFrameRef =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[91]++, (0, _react.useRef)(undefined));
  const initialNodesRef =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[92]++, (0, _react.useRef)([]));
  const initialLinksRef =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[93]++, (0, _react.useRef)([]));
  const needsRenderRef =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[94]++, (0, _react.useRef)(false));
  const renderIntervalRef =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[95]++, (0, _react.useRef)(undefined));
  const hasInitializedRef =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[96]++, (0, _react.useRef)(false));
  // Initialize the graph data
  /* istanbul ignore next */
  cov_225r6pydyk().s[97]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_225r6pydyk().f[9]++;
    cov_225r6pydyk().s[98]++;
    if (!agents.length) {
      /* istanbul ignore next */
      cov_225r6pydyk().b[18][0]++;
      cov_225r6pydyk().s[99]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_225r6pydyk().b[18][1]++;
    }
    // Get container dimensions for better initial positioning
    const container =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[100]++, containerRef.current);
    const width =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[101]++,
    /* istanbul ignore next */
    (cov_225r6pydyk().b[19][0]++, container?.clientWidth) ||
    /* istanbul ignore next */
    (cov_225r6pydyk().b[19][1]++, 800));
    const height =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[102]++,
    /* istanbul ignore next */
    (cov_225r6pydyk().b[20][0]++, container?.clientHeight) ||
    /* istanbul ignore next */
    (cov_225r6pydyk().b[20][1]++, 600));
    const centerX =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[103]++, width / 2);
    const centerY =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[104]++, height / 2);
    // Extract all knowledge entries and tags
    const allEntries =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[105]++, []);
    const allTags =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[106]++, new Set());
    /* istanbul ignore next */
    cov_225r6pydyk().s[107]++;
    agents.forEach(agent => {
      /* istanbul ignore next */
      cov_225r6pydyk().f[10]++;
      cov_225r6pydyk().s[108]++;
      agent.knowledge?.forEach(entry => {
        /* istanbul ignore next */
        cov_225r6pydyk().f[11]++;
        cov_225r6pydyk().s[109]++;
        allEntries.push({
          entry,
          agentId: agent.id,
          agentColor: agent.color
        });
        /* istanbul ignore next */
        cov_225r6pydyk().s[110]++;
        entry.tags?.forEach(tag => {
          /* istanbul ignore next */
          cov_225r6pydyk().f[12]++;
          cov_225r6pydyk().s[111]++;
          return allTags.add(tag);
        });
      });
    });
    // Consolidate knowledge entries by title
    const uniqueEntryTitles =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[112]++, new Map());
    /* istanbul ignore next */
    cov_225r6pydyk().s[113]++;
    allEntries.forEach(({
      entry,
      agentId,
      agentColor
    }) => {
      /* istanbul ignore next */
      cov_225r6pydyk().f[13]++;
      cov_225r6pydyk().s[114]++;
      if (!uniqueEntryTitles.has(entry.title)) {
        /* istanbul ignore next */
        cov_225r6pydyk().b[21][0]++;
        cov_225r6pydyk().s[115]++;
        uniqueEntryTitles.set(entry.title, {
          entryIds: [entry.id],
          agentIds: [agentId],
          color: "#a855f7"
        });
      } else {
        /* istanbul ignore next */
        cov_225r6pydyk().b[21][1]++;
        const current =
        /* istanbul ignore next */
        (cov_225r6pydyk().s[116]++, uniqueEntryTitles.get(entry.title));
        /* istanbul ignore next */
        cov_225r6pydyk().s[117]++;
        current.entryIds.push(entry.id);
        /* istanbul ignore next */
        cov_225r6pydyk().s[118]++;
        if (!current.agentIds.includes(agentId)) {
          /* istanbul ignore next */
          cov_225r6pydyk().b[22][0]++;
          cov_225r6pydyk().s[119]++;
          current.agentIds.push(agentId);
        } else
        /* istanbul ignore next */
        {
          cov_225r6pydyk().b[22][1]++;
        }
      }
    });
    // Create nodes for agents, consolidated entries and tags
    const newNodes =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[120]++, [
    // Agent nodes in the center
    ...agents.map((agent, index) => {
      /* istanbul ignore next */
      cov_225r6pydyk().f[14]++;
      const angle =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[121]++, index / agents.length * Math.PI * 2);
      const radius =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[122]++, Math.min(width, height) * 0.15); // 15% of the smaller dimension
      /* istanbul ignore next */
      cov_225r6pydyk().s[123]++;
      return {
        id: `agent-${agent.id}`,
        title: agent.name,
        x: centerX + Math.cos(angle) * radius,
        y: centerY + Math.sin(angle) * radius,
        radius: 18,
        color: agent.color,
        type: "agent",
        agentId: agent.id
      };
    }),
    // Consolidated entry nodes in a middle circle
    ...[...uniqueEntryTitles.entries()].map(([title, data], index) => {
      /* istanbul ignore next */
      cov_225r6pydyk().f[15]++;
      const angle =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[124]++, index / uniqueEntryTitles.size * Math.PI * 2);
      const radius =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[125]++, Math.min(width, height) * 0.3); // 30% of the smaller dimension
      /* istanbul ignore next */
      cov_225r6pydyk().s[126]++;
      return {
        id: `entry-${title.replace(/\s+/g, "-").toLowerCase()}`,
        title: title,
        x: centerX + Math.cos(angle) * radius,
        y: centerY + Math.sin(angle) * radius,
        radius: 12,
        color: data.color,
        type: "entry",
        entryIds: data.entryIds
      };
    }),
    // Tag nodes in an outer circle
    ...[...allTags].map((tag, index) => {
      /* istanbul ignore next */
      cov_225r6pydyk().f[16]++;
      const angle =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[127]++, index / allTags.size * Math.PI * 2);
      const radius =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[128]++, Math.min(width, height) * 0.45); // 45% of the smaller dimension
      /* istanbul ignore next */
      cov_225r6pydyk().s[129]++;
      return {
        id: `tag-${tag}`,
        title: tag,
        x: centerX + Math.cos(angle) * radius,
        y: centerY + Math.sin(angle) * radius,
        radius: 10,
        color: "#6366f1",
        type: "tag"
      };
    })]);
    // Create links
    const newLinks =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[130]++, []);
    // Links between agents and their entries (now consolidated)
    /* istanbul ignore next */
    cov_225r6pydyk().s[131]++;
    agents.forEach(agent => {
      /* istanbul ignore next */
      cov_225r6pydyk().f[17]++;
      cov_225r6pydyk().s[132]++;
      agent.knowledge?.forEach(entry => {
        /* istanbul ignore next */
        cov_225r6pydyk().f[18]++;
        const entryNodeId =
        /* istanbul ignore next */
        (cov_225r6pydyk().s[133]++, `entry-${entry.title.replace(/\s+/g, "-").toLowerCase()}`);
        // Link agent to entry
        /* istanbul ignore next */
        cov_225r6pydyk().s[134]++;
        newLinks.push({
          source: `agent-${agent.id}`,
          target: entryNodeId,
          strength: 0.7,
          color: agent.color
        });
        // Links between entries and their tags
        /* istanbul ignore next */
        cov_225r6pydyk().s[135]++;
        entry.tags?.forEach(tag => {
          /* istanbul ignore next */
          cov_225r6pydyk().f[19]++;
          // Check if this link already exists to avoid duplicates
          const linkExists =
          /* istanbul ignore next */
          (cov_225r6pydyk().s[136]++, newLinks.some(link => {
            /* istanbul ignore next */
            cov_225r6pydyk().f[20]++;
            cov_225r6pydyk().s[137]++;
            return /* istanbul ignore next */(cov_225r6pydyk().b[23][0]++, link.source === entryNodeId) &&
            /* istanbul ignore next */
            (cov_225r6pydyk().b[23][1]++, link.target === `tag-${tag}`) ||
            /* istanbul ignore next */
            (cov_225r6pydyk().b[23][2]++, link.source === `tag-${tag}`) &&
            /* istanbul ignore next */
            (cov_225r6pydyk().b[23][3]++, link.target === entryNodeId);
          }));
          /* istanbul ignore next */
          cov_225r6pydyk().s[138]++;
          if (!linkExists) {
            /* istanbul ignore next */
            cov_225r6pydyk().b[24][0]++;
            cov_225r6pydyk().s[139]++;
            newLinks.push({
              source: entryNodeId,
              target: `tag-${tag}`,
              strength: 0.5,
              color: "#a855f7"
            });
          } else
          /* istanbul ignore next */
          {
            cov_225r6pydyk().b[24][1]++;
          }
        });
      });
    });
    // Links between entries that share tags
    const entryNodes =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[140]++, newNodes.filter(node => {
      /* istanbul ignore next */
      cov_225r6pydyk().f[21]++;
      cov_225r6pydyk().s[141]++;
      return node.type === "entry";
    }));
    /* istanbul ignore next */
    cov_225r6pydyk().s[142]++;
    for (let i =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[143]++, 0); i < entryNodes.length; i++) {
      /* istanbul ignore next */
      cov_225r6pydyk().s[144]++;
      for (let j =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[145]++, i + 1); j < entryNodes.length; j++) {
        const entry1 =
        /* istanbul ignore next */
        (cov_225r6pydyk().s[146]++, entryNodes[i]);
        const entry2 =
        /* istanbul ignore next */
        (cov_225r6pydyk().s[147]++, entryNodes[j]);
        // Find all entries with these titles to get their tags
        const entry1Tags =
        /* istanbul ignore next */
        (cov_225r6pydyk().s[148]++, new Set());
        const entry2Tags =
        /* istanbul ignore next */
        (cov_225r6pydyk().s[149]++, new Set());
        /* istanbul ignore next */
        cov_225r6pydyk().s[150]++;
        allEntries.forEach(({
          entry
        }) => {
          /* istanbul ignore next */
          cov_225r6pydyk().f[22]++;
          cov_225r6pydyk().s[151]++;
          if (entry.title === entry1.title) {
            /* istanbul ignore next */
            cov_225r6pydyk().b[25][0]++;
            cov_225r6pydyk().s[152]++;
            entry.tags?.forEach(tag => {
              /* istanbul ignore next */
              cov_225r6pydyk().f[23]++;
              cov_225r6pydyk().s[153]++;
              return entry1Tags.add(tag);
            });
          } else
          /* istanbul ignore next */
          {
            cov_225r6pydyk().b[25][1]++;
          }
          cov_225r6pydyk().s[154]++;
          if (entry.title === entry2.title) {
            /* istanbul ignore next */
            cov_225r6pydyk().b[26][0]++;
            cov_225r6pydyk().s[155]++;
            entry.tags?.forEach(tag => {
              /* istanbul ignore next */
              cov_225r6pydyk().f[24]++;
              cov_225r6pydyk().s[156]++;
              return entry2Tags.add(tag);
            });
          } else
          /* istanbul ignore next */
          {
            cov_225r6pydyk().b[26][1]++;
          }
        });
        // Find shared tags
        const sharedTags =
        /* istanbul ignore next */
        (cov_225r6pydyk().s[157]++, [...entry1Tags].filter(tag => {
          /* istanbul ignore next */
          cov_225r6pydyk().f[25]++;
          cov_225r6pydyk().s[158]++;
          return entry2Tags.has(tag);
        }));
        /* istanbul ignore next */
        cov_225r6pydyk().s[159]++;
        if (sharedTags.length > 0) {
          /* istanbul ignore next */
          cov_225r6pydyk().b[27][0]++;
          cov_225r6pydyk().s[160]++;
          newLinks.push({
            source: entry1.id,
            target: entry2.id,
            strength: 0.3 * sharedTags.length,
            color: "#a855f7"
          });
        } else
        /* istanbul ignore next */
        {
          cov_225r6pydyk().b[27][1]++;
        }
      }
    }
    // Store the initial nodes and links for reset functionality
    // Deep clone to ensure we have completely separate objects
    /* istanbul ignore next */
    cov_225r6pydyk().s[161]++;
    initialNodesRef.current = JSON.parse(JSON.stringify(newNodes));
    /* istanbul ignore next */
    cov_225r6pydyk().s[162]++;
    initialLinksRef.current = JSON.parse(JSON.stringify(newLinks));
    /* istanbul ignore next */
    cov_225r6pydyk().s[163]++;
    hasInitializedRef.current = true;
    /* istanbul ignore next */
    cov_225r6pydyk().s[164]++;
    setNodes(newNodes);
    /* istanbul ignore next */
    cov_225r6pydyk().s[165]++;
    setLinks(newLinks);
  }, [agents]);
  // Initialize physics simulation
  /* istanbul ignore next */
  cov_225r6pydyk().s[166]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_225r6pydyk().f[26]++;
    cov_225r6pydyk().s[167]++;
    if (
    /* istanbul ignore next */
    (cov_225r6pydyk().b[29][0]++, !nodes.length) ||
    /* istanbul ignore next */
    (cov_225r6pydyk().b[29][1]++, !links.length)) {
      /* istanbul ignore next */
      cov_225r6pydyk().b[28][0]++;
      cov_225r6pydyk().s[168]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_225r6pydyk().b[28][1]++;
    }
    // Create physics nodes with velocity properties
    const physicsNodes =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[169]++, nodes.map(node => {
      /* istanbul ignore next */
      cov_225r6pydyk().f[27]++;
      cov_225r6pydyk().s[170]++;
      return {
        ...node,
        vx: 0,
        vy: 0,
        fx: null,
        fy: null,
        isPinned: false
      };
    }));
    // Create physics links with actual node references instead of just IDs
    const physicsLinks =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[171]++, links.map(link => {
      /* istanbul ignore next */
      cov_225r6pydyk().f[28]++;
      const source =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[172]++, physicsNodes.find(n => {
        /* istanbul ignore next */
        cov_225r6pydyk().f[29]++;
        cov_225r6pydyk().s[173]++;
        return n.id === link.source;
      }));
      const target =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[174]++, physicsNodes.find(n => {
        /* istanbul ignore next */
        cov_225r6pydyk().f[30]++;
        cov_225r6pydyk().s[175]++;
        return n.id === link.target;
      }));
      /* istanbul ignore next */
      cov_225r6pydyk().s[176]++;
      if (
      /* istanbul ignore next */
      (cov_225r6pydyk().b[31][0]++, !source) ||
      /* istanbul ignore next */
      (cov_225r6pydyk().b[31][1]++, !target)) {
        /* istanbul ignore next */
        cov_225r6pydyk().b[30][0]++;
        cov_225r6pydyk().s[177]++;
        console.error(`Could not find nodes for link: ${link.source} -> ${link.target}`);
        /* istanbul ignore next */
        cov_225r6pydyk().s[178]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_225r6pydyk().b[30][1]++;
      }
      cov_225r6pydyk().s[179]++;
      return {
        ...link,
        source,
        target
      };
    }).filter(Boolean));
    // Store in ref instead of state to avoid re-renders
    /* istanbul ignore next */
    cov_225r6pydyk().s[180]++;
    simulationRef.current = {
      nodes: physicsNodes,
      links: physicsLinks
    };
  }, [nodes, links]);
  // Apply repulsion forces between all nodes
  const applyRepulsionForces =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[181]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_225r6pydyk().f[31]++;
    const simulation =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[182]++, simulationRef.current);
    /* istanbul ignore next */
    cov_225r6pydyk().s[183]++;
    if (!simulation) {
      /* istanbul ignore next */
      cov_225r6pydyk().b[32][0]++;
      cov_225r6pydyk().s[184]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_225r6pydyk().b[32][1]++;
    }
    const nodes =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[185]++, simulation.nodes);
    const container =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[186]++, containerRef.current);
    /* istanbul ignore next */
    cov_225r6pydyk().s[187]++;
    if (!container) {
      /* istanbul ignore next */
      cov_225r6pydyk().b[33][0]++;
      cov_225r6pydyk().s[188]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_225r6pydyk().b[33][1]++;
    }
    // Create quadtree
    const boundary =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[189]++, {
      x: container.clientWidth / 2,
      y: container.clientHeight / 2,
      width: container.clientWidth,
      height: container.clientHeight
    });
    const quadtree =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[190]++, new QuadTree(boundary, 4));
    // Insert all nodes into quadtree
    /* istanbul ignore next */
    cov_225r6pydyk().s[191]++;
    nodes.forEach(node => {
      /* istanbul ignore next */
      cov_225r6pydyk().f[32]++;
      cov_225r6pydyk().s[192]++;
      quadtree.insert({
        x: node.x,
        y: node.y,
        node
      });
    });
    // Calculate repulsion using quadtree for optimization
    /* istanbul ignore next */
    cov_225r6pydyk().s[193]++;
    nodes.forEach(nodeA => {
      /* istanbul ignore next */
      cov_225r6pydyk().f[33]++;
      // Find nodes within a certain radius
      const radius =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[194]++, Math.max(100, nodeA.radius * 10)); // Adjust radius as needed
      const nearbyNodes =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[195]++, quadtree.query({
        x: nodeA.x,
        y: nodeA.y,
        radius
      }));
      /* istanbul ignore next */
      cov_225r6pydyk().s[196]++;
      nearbyNodes.forEach(nodeB => {
        /* istanbul ignore next */
        cov_225r6pydyk().f[34]++;
        cov_225r6pydyk().s[197]++;
        if (nodeA === nodeB) {
          /* istanbul ignore next */
          cov_225r6pydyk().b[34][0]++;
          cov_225r6pydyk().s[198]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_225r6pydyk().b[34][1]++;
        }
        // Calculate distance
        const dx =
        /* istanbul ignore next */
        (cov_225r6pydyk().s[199]++, nodeB.x - nodeA.x);
        const dy =
        /* istanbul ignore next */
        (cov_225r6pydyk().s[200]++, nodeB.y - nodeA.y);
        const distanceSq =
        /* istanbul ignore next */
        (cov_225r6pydyk().s[201]++, dx * dx + dy * dy);
        const distance =
        /* istanbul ignore next */
        (cov_225r6pydyk().s[202]++, Math.sqrt(distanceSq));
        /* istanbul ignore next */
        cov_225r6pydyk().s[203]++;
        if (distance === 0) {
          /* istanbul ignore next */
          cov_225r6pydyk().b[35][0]++;
          cov_225r6pydyk().s[204]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_225r6pydyk().b[35][1]++;
        }
        // Calculate repulsion force with a minimum distance to prevent extreme forces
        const minDistance =
        /* istanbul ignore next */
        (cov_225r6pydyk().s[205]++, nodeA.radius + nodeB.radius);
        const effectiveDistance =
        /* istanbul ignore next */
        (cov_225r6pydyk().s[206]++, Math.max(distance, minDistance));
        // Use a softer inverse law (1/d instead of 1/d²) for more stability
        const force =
        /* istanbul ignore next */
        (cov_225r6pydyk().s[207]++, physicsSettings.repulsion * warmupPhaseRef.current / effectiveDistance);
        // Apply force to velocity with dampening for stability
        const forceX =
        /* istanbul ignore next */
        (cov_225r6pydyk().s[208]++, dx / distance * force * 0.5);
        const forceY =
        /* istanbul ignore next */
        (cov_225r6pydyk().s[209]++, dy / distance * force * 0.5);
        /* istanbul ignore next */
        cov_225r6pydyk().s[210]++;
        nodeA.vx -= forceX;
        /* istanbul ignore next */
        cov_225r6pydyk().s[211]++;
        nodeA.vy -= forceY;
      });
    });
  }, [physicsSettings.repulsion]));
  // Apply attraction forces between linked nodes
  const applyAttractionForces =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[212]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_225r6pydyk().f[35]++;
    const simulation =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[213]++, simulationRef.current);
    /* istanbul ignore next */
    cov_225r6pydyk().s[214]++;
    if (!simulation) {
      /* istanbul ignore next */
      cov_225r6pydyk().b[36][0]++;
      cov_225r6pydyk().s[215]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_225r6pydyk().b[36][1]++;
    }
    cov_225r6pydyk().s[216]++;
    simulation.links.forEach(link => {
      /* istanbul ignore next */
      cov_225r6pydyk().f[36]++;
      const source =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[217]++, link.source);
      const target =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[218]++, link.target);
      // Calculate distance
      const dx =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[219]++, target.x - source.x);
      const dy =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[220]++, target.y - source.y);
      const distance =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[221]++, Math.sqrt(dx * dx + dy * dy));
      /* istanbul ignore next */
      cov_225r6pydyk().s[222]++;
      if (distance === 0) {
        /* istanbul ignore next */
        cov_225r6pydyk().b[37][0]++;
        cov_225r6pydyk().s[223]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_225r6pydyk().b[37][1]++;
      }
      // Calculate attraction force
      const force =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[224]++, distance * physicsSettings.linkStrength * link.strength * warmupPhaseRef.current);
      // Apply force to velocity
      const forceX =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[225]++, dx / distance * force);
      const forceY =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[226]++, dy / distance * force);
      /* istanbul ignore next */
      cov_225r6pydyk().s[227]++;
      source.vx += forceX;
      /* istanbul ignore next */
      cov_225r6pydyk().s[228]++;
      source.vy += forceY;
      /* istanbul ignore next */
      cov_225r6pydyk().s[229]++;
      target.vx -= forceX;
      /* istanbul ignore next */
      cov_225r6pydyk().s[230]++;
      target.vy -= forceY;
    });
  }, [physicsSettings.linkStrength]));
  // Apply a force to keep nodes near the center
  const applyCenteringForce =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[231]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_225r6pydyk().f[37]++;
    const simulation =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[232]++, simulationRef.current);
    /* istanbul ignore next */
    cov_225r6pydyk().s[233]++;
    if (!simulation) {
      /* istanbul ignore next */
      cov_225r6pydyk().b[38][0]++;
      cov_225r6pydyk().s[234]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_225r6pydyk().b[38][1]++;
    }
    const container =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[235]++, containerRef.current);
    /* istanbul ignore next */
    cov_225r6pydyk().s[236]++;
    if (!container) {
      /* istanbul ignore next */
      cov_225r6pydyk().b[39][0]++;
      cov_225r6pydyk().s[237]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_225r6pydyk().b[39][1]++;
    }
    const centerX =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[238]++, container.clientWidth / 2);
    const centerY =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[239]++, container.clientHeight / 2);
    /* istanbul ignore next */
    cov_225r6pydyk().s[240]++;
    simulation.nodes.forEach(node => {
      /* istanbul ignore next */
      cov_225r6pydyk().f[38]++;
      // Calculate distance from center
      const dx =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[241]++, centerX - node.x);
      const dy =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[242]++, centerY - node.y);
      const distance =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[243]++, Math.sqrt(dx * dx + dy * dy));
      /* istanbul ignore next */
      cov_225r6pydyk().s[244]++;
      if (distance === 0) {
        /* istanbul ignore next */
        cov_225r6pydyk().b[40][0]++;
        cov_225r6pydyk().s[245]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_225r6pydyk().b[40][1]++;
      }
      // Apply centering force (stronger for nodes far from center)
      const force =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[246]++, distance * physicsSettings.centerForce * warmupPhaseRef.current);
      // Apply force to velocity
      const forceX =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[247]++, dx / distance * force);
      const forceY =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[248]++, dy / distance * force);
      /* istanbul ignore next */
      cov_225r6pydyk().s[249]++;
      node.vx += forceX;
      /* istanbul ignore next */
      cov_225r6pydyk().s[250]++;
      node.vy += forceY;
    });
  }, [physicsSettings.centerForce]));
  // Prevent nodes from overlapping
  const applyCollisionAvoidance =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[251]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_225r6pydyk().f[39]++;
    const simulation =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[252]++, simulationRef.current);
    /* istanbul ignore next */
    cov_225r6pydyk().s[253]++;
    if (!simulation) {
      /* istanbul ignore next */
      cov_225r6pydyk().b[41][0]++;
      cov_225r6pydyk().s[254]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_225r6pydyk().b[41][1]++;
    }
    const nodes =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[255]++, simulation.nodes);
    // PERFORMANCE OPTIMIZATION: Use QuadTree for collision detection instead of O(n²) algorithm
    const container =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[256]++, containerRef.current);
    /* istanbul ignore next */
    cov_225r6pydyk().s[257]++;
    if (!container) {
      /* istanbul ignore next */
      cov_225r6pydyk().b[42][0]++;
      cov_225r6pydyk().s[258]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_225r6pydyk().b[42][1]++;
    }
    const boundary =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[259]++, {
      x: 0,
      y: 0,
      width: container.clientWidth,
      height: container.clientHeight
    });
    const quadtree =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[260]++, new QuadTree(boundary, 4));
    // Insert all nodes into quadtree
    /* istanbul ignore next */
    cov_225r6pydyk().s[261]++;
    nodes.forEach(node => {
      /* istanbul ignore next */
      cov_225r6pydyk().f[40]++;
      cov_225r6pydyk().s[262]++;
      quadtree.insert({
        x: node.x,
        y: node.y,
        node
      });
    });
    // Check collisions using quadtree - much more efficient for large datasets
    /* istanbul ignore next */
    cov_225r6pydyk().s[263]++;
    nodes.forEach(nodeA => {
      /* istanbul ignore next */
      cov_225r6pydyk().f[41]++;
      // Only check nodes within a reasonable collision detection radius
      const maxCollisionRadius =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[264]++, nodeA.radius * physicsSettings.collisionRadius * 3);
      const nearbyPoints =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[265]++, quadtree.query({
        x: nodeA.x,
        y: nodeA.y,
        radius: maxCollisionRadius
      }));
      /* istanbul ignore next */
      cov_225r6pydyk().s[266]++;
      nearbyPoints.forEach(pointData => {
        /* istanbul ignore next */
        cov_225r6pydyk().f[42]++;
        const nodeB =
        /* istanbul ignore next */
        (cov_225r6pydyk().s[267]++, pointData.node);
        /* istanbul ignore next */
        cov_225r6pydyk().s[268]++;
        if (
        /* istanbul ignore next */
        (cov_225r6pydyk().b[44][0]++, nodeA === nodeB) ||
        /* istanbul ignore next */
        (cov_225r6pydyk().b[44][1]++, nodeA.id === nodeB.id)) {
          /* istanbul ignore next */
          cov_225r6pydyk().b[43][0]++;
          cov_225r6pydyk().s[269]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_225r6pydyk().b[43][1]++;
        }
        // Calculate distance
        const dx =
        /* istanbul ignore next */
        (cov_225r6pydyk().s[270]++, nodeB.x - nodeA.x);
        const dy =
        /* istanbul ignore next */
        (cov_225r6pydyk().s[271]++, nodeB.y - nodeA.y);
        const distance =
        /* istanbul ignore next */
        (cov_225r6pydyk().s[272]++, Math.sqrt(dx * dx + dy * dy));
        // Calculate minimum distance to avoid collision
        const minDistance =
        /* istanbul ignore next */
        (cov_225r6pydyk().s[273]++, (nodeA.radius + nodeB.radius) * physicsSettings.collisionRadius);
        /* istanbul ignore next */
        cov_225r6pydyk().s[274]++;
        if (
        /* istanbul ignore next */
        (cov_225r6pydyk().b[46][0]++, distance < minDistance) &&
        /* istanbul ignore next */
        (cov_225r6pydyk().b[46][1]++, distance > 0)) {
          /* istanbul ignore next */
          cov_225r6pydyk().b[45][0]++;
          // Calculate overlap
          const overlap =
          /* istanbul ignore next */
          (cov_225r6pydyk().s[275]++, (minDistance - distance) / distance);
          // Apply force to separate nodes
          const moveX =
          /* istanbul ignore next */
          (cov_225r6pydyk().s[276]++, dx * overlap * 0.5);
          const moveY =
          /* istanbul ignore next */
          (cov_225r6pydyk().s[277]++, dy * overlap * 0.5);
          // Only move nodes that aren't pinned
          /* istanbul ignore next */
          cov_225r6pydyk().s[278]++;
          if (!nodeA.isPinned) {
            /* istanbul ignore next */
            cov_225r6pydyk().b[47][0]++;
            cov_225r6pydyk().s[279]++;
            nodeA.x -= moveX;
            /* istanbul ignore next */
            cov_225r6pydyk().s[280]++;
            nodeA.y -= moveY;
          } else
          /* istanbul ignore next */
          {
            cov_225r6pydyk().b[47][1]++;
          }
          cov_225r6pydyk().s[281]++;
          if (!nodeB.isPinned) {
            /* istanbul ignore next */
            cov_225r6pydyk().b[48][0]++;
            cov_225r6pydyk().s[282]++;
            nodeB.x += moveX;
            /* istanbul ignore next */
            cov_225r6pydyk().s[283]++;
            nodeB.y += moveY;
          } else
          /* istanbul ignore next */
          {
            cov_225r6pydyk().b[48][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_225r6pydyk().b[45][1]++;
        }
      });
    });
  }, [physicsSettings.collisionRadius]));
  const runSimulation =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[284]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_225r6pydyk().f[43]++;
    const simulation =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[285]++, simulationRef.current);
    /* istanbul ignore next */
    cov_225r6pydyk().s[286]++;
    if (
    /* istanbul ignore next */
    (cov_225r6pydyk().b[50][0]++, !simulation) ||
    /* istanbul ignore next */
    (cov_225r6pydyk().b[50][1]++, !isSimulationRunning)) {
      /* istanbul ignore next */
      cov_225r6pydyk().b[49][0]++;
      cov_225r6pydyk().s[287]++;
      if (animationFrameRef.current) {
        /* istanbul ignore next */
        cov_225r6pydyk().b[51][0]++;
        cov_225r6pydyk().s[288]++;
        cancelAnimationFrame(animationFrameRef.current);
      } else
      /* istanbul ignore next */
      {
        cov_225r6pydyk().b[51][1]++;
      }
      cov_225r6pydyk().s[289]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_225r6pydyk().b[49][1]++;
    }
    // PERFORMANCE OPTIMIZATION: Adaptive settings based on node count
    const nodeCount =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[290]++, simulation.nodes.length);
    const isLargeDataset =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[291]++, nodeCount > 100);
    const isMassiveDataset =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[292]++, nodeCount > 200);
    // Skip frames for performance with large datasets
    /* istanbul ignore next */
    cov_225r6pydyk().s[293]++;
    if (isLargeDataset) {
      /* istanbul ignore next */
      cov_225r6pydyk().b[52][0]++;
      const skipModulo =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[294]++, isMassiveDataset ?
      /* istanbul ignore next */
      (cov_225r6pydyk().b[53][0]++, 3) :
      /* istanbul ignore next */
      (cov_225r6pydyk().b[53][1]++, 2)); // Skip more frames for massive datasets
      const currentFrame =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[295]++, (
      /* istanbul ignore next */
      (cov_225r6pydyk().b[54][0]++, animationFrameRef.current) ||
      /* istanbul ignore next */
      (cov_225r6pydyk().b[54][1]++, 0)) % skipModulo);
      /* istanbul ignore next */
      cov_225r6pydyk().s[296]++;
      if (currentFrame !== 0) {
        /* istanbul ignore next */
        cov_225r6pydyk().b[55][0]++;
        cov_225r6pydyk().s[297]++;
        animationFrameRef.current = requestAnimationFrame(runSimulation);
        /* istanbul ignore next */
        cov_225r6pydyk().s[298]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_225r6pydyk().b[55][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_225r6pydyk().b[52][1]++;
    }
    // Apply forces
    cov_225r6pydyk().s[299]++;
    applyRepulsionForces();
    /* istanbul ignore next */
    cov_225r6pydyk().s[300]++;
    applyAttractionForces();
    /* istanbul ignore next */
    cov_225r6pydyk().s[301]++;
    applyCenteringForce();
    // Update positions
    let totalMovement =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[302]++, 0);
    /* istanbul ignore next */
    cov_225r6pydyk().s[303]++;
    simulation.nodes.forEach(node => {
      /* istanbul ignore next */
      cov_225r6pydyk().f[44]++;
      cov_225r6pydyk().s[304]++;
      // Skip pinned nodes
      if (
      /* istanbul ignore next */
      (cov_225r6pydyk().b[57][0]++, node.isPinned) ||
      /* istanbul ignore next */
      (cov_225r6pydyk().b[57][1]++, node.fx !== null) ||
      /* istanbul ignore next */
      (cov_225r6pydyk().b[57][2]++, node.fy !== null)) {
        /* istanbul ignore next */
        cov_225r6pydyk().b[56][0]++;
        cov_225r6pydyk().s[305]++;
        node.vx = 0;
        /* istanbul ignore next */
        cov_225r6pydyk().s[306]++;
        node.vy = 0;
        /* istanbul ignore next */
        cov_225r6pydyk().s[307]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_225r6pydyk().b[56][1]++;
      }
      // Apply velocity with friction and cooling
      cov_225r6pydyk().s[308]++;
      node.vx *= physicsSettings.friction * coolingRef.current;
      /* istanbul ignore next */
      cov_225r6pydyk().s[309]++;
      node.vy *= physicsSettings.friction * coolingRef.current;
      // PERFORMANCE OPTIMIZATION: Adaptive velocity limiting based on dataset size
      const adaptiveVelocityLimit =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[310]++, physicsSettings.velocityLimit * (isLargeDataset ?
      /* istanbul ignore next */
      (cov_225r6pydyk().b[58][0]++, 0.7) :
      /* istanbul ignore next */
      (cov_225r6pydyk().b[58][1]++, 1.0)));
      const speed =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[311]++, Math.sqrt(node.vx * node.vx + node.vy * node.vy));
      /* istanbul ignore next */
      cov_225r6pydyk().s[312]++;
      if (speed > adaptiveVelocityLimit) {
        /* istanbul ignore next */
        cov_225r6pydyk().b[59][0]++;
        cov_225r6pydyk().s[313]++;
        node.vx = node.vx / speed * adaptiveVelocityLimit;
        /* istanbul ignore next */
        cov_225r6pydyk().s[314]++;
        node.vy = node.vy / speed * adaptiveVelocityLimit;
      } else
      /* istanbul ignore next */
      {
        cov_225r6pydyk().b[59][1]++;
      }
      // Update position
      cov_225r6pydyk().s[315]++;
      node.x += node.vx;
      /* istanbul ignore next */
      cov_225r6pydyk().s[316]++;
      node.y += node.vy;
      // Track total movement for cooling
      /* istanbul ignore next */
      cov_225r6pydyk().s[317]++;
      totalMovement += Math.abs(node.vx) + Math.abs(node.vy);
    });
    // Apply collision avoidance after position updates
    /* istanbul ignore next */
    cov_225r6pydyk().s[318]++;
    applyCollisionAvoidance();
    // Mark that we need to render
    /* istanbul ignore next */
    cov_225r6pydyk().s[319]++;
    needsRenderRef.current = true;
    // PERFORMANCE OPTIMIZATION: Adaptive stopping criteria based on dataset size
    const movementThreshold =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[320]++, isLargeDataset ?
    /* istanbul ignore next */
    (cov_225r6pydyk().b[60][0]++, 0.1) :
    /* istanbul ignore next */
    (cov_225r6pydyk().b[60][1]++, 0.05)); // Higher threshold for large datasets
    const stabilityFramesRequired =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[321]++, isLargeDataset ?
    /* istanbul ignore next */
    (cov_225r6pydyk().b[61][0]++, 15) :
    /* istanbul ignore next */
    (cov_225r6pydyk().b[61][1]++, 30)); // Fewer frames needed for large datasets
    // Auto-stop simulation if movement is very small for a sustained period
    /* istanbul ignore next */
    cov_225r6pydyk().s[322]++;
    if (totalMovement < movementThreshold) {
      /* istanbul ignore next */
      cov_225r6pydyk().b[62][0]++;
      cov_225r6pydyk().s[323]++;
      // Count low movement frames instead of stopping immediately
      lowMovementFramesRef.current++;
      /* istanbul ignore next */
      cov_225r6pydyk().s[324]++;
      if (lowMovementFramesRef.current > stabilityFramesRequired) {
        /* istanbul ignore next */
        cov_225r6pydyk().b[63][0]++;
        cov_225r6pydyk().s[325]++;
        setIsSimulationRunning(false);
        /* istanbul ignore next */
        cov_225r6pydyk().s[326]++;
        lowMovementFramesRef.current = 0;
        /* istanbul ignore next */
        cov_225r6pydyk().s[327]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_225r6pydyk().b[63][1]++;
      }
    } else {
      /* istanbul ignore next */
      cov_225r6pydyk().b[62][1]++;
      cov_225r6pydyk().s[328]++;
      lowMovementFramesRef.current = 0;
    }
    // Continue animation loop
    /* istanbul ignore next */
    cov_225r6pydyk().s[329]++;
    animationFrameRef.current = requestAnimationFrame(runSimulation);
  }, [isSimulationRunning, applyRepulsionForces, applyAttractionForces, applyCenteringForce, applyCollisionAvoidance, physicsSettings.friction, physicsSettings.velocityLimit]));
  // Set up a separate interval for updating the React state
  /* istanbul ignore next */
  cov_225r6pydyk().s[330]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_225r6pydyk().f[45]++;
    cov_225r6pydyk().s[331]++;
    if (isSimulationRunning) {
      /* istanbul ignore next */
      cov_225r6pydyk().b[64][0]++;
      cov_225r6pydyk().s[332]++;
      // Start the simulation
      runSimulation();
      // PERFORMANCE OPTIMIZATION: Adaptive render frequency based on node count
      const nodeCount =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[333]++,
      /* istanbul ignore next */
      (cov_225r6pydyk().b[65][0]++, simulationRef.current?.nodes.length) ||
      /* istanbul ignore next */
      (cov_225r6pydyk().b[65][1]++, 0));
      const isLargeDataset =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[334]++, nodeCount > 100);
      const isMassiveDataset =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[335]++, nodeCount > 200);
      // Reduce render frequency for large datasets to improve performance
      const renderInterval =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[336]++, isMassiveDataset ?
      /* istanbul ignore next */
      (cov_225r6pydyk().b[66][0]++, 100) :
      /* istanbul ignore next */
      (cov_225r6pydyk().b[66][1]++, isLargeDataset ?
      /* istanbul ignore next */
      (cov_225r6pydyk().b[67][0]++, 75) :
      /* istanbul ignore next */
      (cov_225r6pydyk().b[67][1]++, 50))); // ms
      // Set up an interval to update the React state less frequently
      /* istanbul ignore next */
      cov_225r6pydyk().s[337]++;
      renderIntervalRef.current = setInterval(() => {
        /* istanbul ignore next */
        cov_225r6pydyk().f[46]++;
        cov_225r6pydyk().s[338]++;
        if (
        /* istanbul ignore next */
        (cov_225r6pydyk().b[69][0]++, needsRenderRef.current) &&
        /* istanbul ignore next */
        (cov_225r6pydyk().b[69][1]++, simulationRef.current)) {
          /* istanbul ignore next */
          cov_225r6pydyk().b[68][0]++;
          // PERFORMANCE OPTIMIZATION: Only copy essential properties for large datasets
          const updatedNodes =
          /* istanbul ignore next */
          (cov_225r6pydyk().s[339]++, simulationRef.current.nodes.map(node => {
            /* istanbul ignore next */
            cov_225r6pydyk().f[47]++;
            cov_225r6pydyk().s[340]++;
            if (isLargeDataset) {
              /* istanbul ignore next */
              cov_225r6pydyk().b[70][0]++;
              cov_225r6pydyk().s[341]++;
              // For large datasets, only copy essential properties to reduce memory pressure
              return {
                id: node.id,
                title: node.title,
                x: Math.round(node.x),
                y: Math.round(node.y),
                radius: node.radius,
                color: node.color,
                type: node.type,
                agentId: node.agentId,
                originalId: node.originalId,
                entryIds: node.entryIds
              };
            } else {
              /* istanbul ignore next */
              cov_225r6pydyk().b[70][1]++;
              cov_225r6pydyk().s[342]++;
              // For smaller datasets, keep full precision
              return {
                ...node
              };
            }
          }));
          // Update the React state
          /* istanbul ignore next */
          cov_225r6pydyk().s[343]++;
          setNodes(updatedNodes);
          // Reset the flag
          /* istanbul ignore next */
          cov_225r6pydyk().s[344]++;
          needsRenderRef.current = false;
        } else
        /* istanbul ignore next */
        {
          cov_225r6pydyk().b[68][1]++;
        }
      }, renderInterval); // Adaptive update frequency
      // Cooling effect
      /* istanbul ignore next */
      cov_225r6pydyk().s[345]++;
      coolingRef.current = 1.0;
      const coolingInterval =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[346]++, setInterval(() => {
        /* istanbul ignore next */
        cov_225r6pydyk().f[48]++;
        cov_225r6pydyk().s[347]++;
        coolingRef.current = Math.max(coolingRef.current * 0.98, 0.6);
      }, 500));
      // Warmup effect
      /* istanbul ignore next */
      cov_225r6pydyk().s[348]++;
      warmupPhaseRef.current = 0.3;
      const warmupInterval =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[349]++, setInterval(() => {
        /* istanbul ignore next */
        cov_225r6pydyk().f[49]++;
        cov_225r6pydyk().s[350]++;
        warmupPhaseRef.current = Math.min(warmupPhaseRef.current + 0.1, 1.0);
      }, 100));
      /* istanbul ignore next */
      cov_225r6pydyk().s[351]++;
      return () => {
        /* istanbul ignore next */
        cov_225r6pydyk().f[50]++;
        cov_225r6pydyk().s[352]++;
        if (animationFrameRef.current) {
          /* istanbul ignore next */
          cov_225r6pydyk().b[71][0]++;
          cov_225r6pydyk().s[353]++;
          cancelAnimationFrame(animationFrameRef.current);
        } else
        /* istanbul ignore next */
        {
          cov_225r6pydyk().b[71][1]++;
        }
        cov_225r6pydyk().s[354]++;
        if (renderIntervalRef.current) {
          /* istanbul ignore next */
          cov_225r6pydyk().b[72][0]++;
          cov_225r6pydyk().s[355]++;
          clearInterval(renderIntervalRef.current);
        } else
        /* istanbul ignore next */
        {
          cov_225r6pydyk().b[72][1]++;
        }
        cov_225r6pydyk().s[356]++;
        clearInterval(coolingInterval);
        /* istanbul ignore next */
        cov_225r6pydyk().s[357]++;
        clearInterval(warmupInterval);
      };
    } else {
      /* istanbul ignore next */
      cov_225r6pydyk().b[64][1]++;
      cov_225r6pydyk().s[358]++;
      // Clean up when simulation is stopped
      if (animationFrameRef.current) {
        /* istanbul ignore next */
        cov_225r6pydyk().b[73][0]++;
        cov_225r6pydyk().s[359]++;
        cancelAnimationFrame(animationFrameRef.current);
      } else
      /* istanbul ignore next */
      {
        cov_225r6pydyk().b[73][1]++;
      }
      cov_225r6pydyk().s[360]++;
      if (renderIntervalRef.current) {
        /* istanbul ignore next */
        cov_225r6pydyk().b[74][0]++;
        cov_225r6pydyk().s[361]++;
        clearInterval(renderIntervalRef.current);
      } else
      /* istanbul ignore next */
      {
        cov_225r6pydyk().b[74][1]++;
      }
    }
  }, [isSimulationRunning, runSimulation]);
  const resetNodePositions =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[362]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_225r6pydyk().f[51]++;
    cov_225r6pydyk().s[363]++;
    if (
    /* istanbul ignore next */
    (cov_225r6pydyk().b[76][0]++, !hasInitializedRef.current) ||
    /* istanbul ignore next */
    (cov_225r6pydyk().b[76][1]++, initialNodesRef.current.length === 0)) {
      /* istanbul ignore next */
      cov_225r6pydyk().b[75][0]++;
      cov_225r6pydyk().s[364]++;
      console.warn("Cannot reset: initial nodes not stored");
      /* istanbul ignore next */
      cov_225r6pydyk().s[365]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_225r6pydyk().b[75][1]++;
    }
    // Stop simulation
    cov_225r6pydyk().s[366]++;
    setIsSimulationRunning(false);
    /* istanbul ignore next */
    cov_225r6pydyk().s[367]++;
    if (animationFrameRef.current) {
      /* istanbul ignore next */
      cov_225r6pydyk().b[77][0]++;
      cov_225r6pydyk().s[368]++;
      cancelAnimationFrame(animationFrameRef.current);
    } else
    /* istanbul ignore next */
    {
      cov_225r6pydyk().b[77][1]++;
    }
    cov_225r6pydyk().s[369]++;
    if (renderIntervalRef.current) {
      /* istanbul ignore next */
      cov_225r6pydyk().b[78][0]++;
      cov_225r6pydyk().s[370]++;
      clearInterval(renderIntervalRef.current);
    } else
    /* istanbul ignore next */
    {
      cov_225r6pydyk().b[78][1]++;
    }
    // Reset zoom and offset
    cov_225r6pydyk().s[371]++;
    setZoomLevel(1);
    /* istanbul ignore next */
    cov_225r6pydyk().s[372]++;
    setOffset({
      x: 0,
      y: 0
    });
    // Clear any selected or hovered nodes
    /* istanbul ignore next */
    cov_225r6pydyk().s[373]++;
    setSelectedNode(null);
    /* istanbul ignore next */
    cov_225r6pydyk().s[374]++;
    setHoveredNode(null);
    // Deep clone the initial nodes and links to ensure we're working with fresh copies
    const resetNodes =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[375]++, JSON.parse(JSON.stringify(initialNodesRef.current)));
    const resetLinks =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[376]++, JSON.parse(JSON.stringify(initialLinksRef.current)));
    // Update the state with the initial nodes and links
    /* istanbul ignore next */
    cov_225r6pydyk().s[377]++;
    setNodes(resetNodes);
    /* istanbul ignore next */
    cov_225r6pydyk().s[378]++;
    setLinks(resetLinks);
    // Reset the simulation with fresh physics nodes
    const physicsNodes =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[379]++, resetNodes.map(node => {
      /* istanbul ignore next */
      cov_225r6pydyk().f[52]++;
      cov_225r6pydyk().s[380]++;
      return {
        ...node,
        vx: 0,
        vy: 0,
        fx: null,
        fy: null,
        isPinned: false
      };
    }));
    // Create physics links with actual node references
    const physicsLinks =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[381]++, resetLinks.map(link => {
      /* istanbul ignore next */
      cov_225r6pydyk().f[53]++;
      const source =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[382]++, physicsNodes.find(n => {
        /* istanbul ignore next */
        cov_225r6pydyk().f[54]++;
        cov_225r6pydyk().s[383]++;
        return n.id === link.source;
      }));
      const target =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[384]++, physicsNodes.find(n => {
        /* istanbul ignore next */
        cov_225r6pydyk().f[55]++;
        cov_225r6pydyk().s[385]++;
        return n.id === link.target;
      }));
      /* istanbul ignore next */
      cov_225r6pydyk().s[386]++;
      if (
      /* istanbul ignore next */
      (cov_225r6pydyk().b[80][0]++, !source) ||
      /* istanbul ignore next */
      (cov_225r6pydyk().b[80][1]++, !target)) {
        /* istanbul ignore next */
        cov_225r6pydyk().b[79][0]++;
        cov_225r6pydyk().s[387]++;
        console.error(`Could not find nodes for link: ${link.source} -> ${link.target}`);
        /* istanbul ignore next */
        cov_225r6pydyk().s[388]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_225r6pydyk().b[79][1]++;
      }
      cov_225r6pydyk().s[389]++;
      return {
        ...link,
        source,
        target
      };
    }).filter(Boolean));
    // Update the simulation reference
    /* istanbul ignore next */
    cov_225r6pydyk().s[390]++;
    simulationRef.current = {
      nodes: physicsNodes,
      links: physicsLinks
    };
    // Reset other simulation parameters
    /* istanbul ignore next */
    cov_225r6pydyk().s[391]++;
    coolingRef.current = 1.0;
    /* istanbul ignore next */
    cov_225r6pydyk().s[392]++;
    warmupPhaseRef.current = 0.3;
    /* istanbul ignore next */
    cov_225r6pydyk().s[393]++;
    lowMovementFramesRef.current = 0;
    // Force a render
    /* istanbul ignore next */
    cov_225r6pydyk().s[394]++;
    needsRenderRef.current = true;
  }, []));
  const handleNodeClick =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[395]++, (0, _react.useCallback)(node => {
    /* istanbul ignore next */
    cov_225r6pydyk().f[56]++;
    cov_225r6pydyk().s[396]++;
    if (!node) {
      /* istanbul ignore next */
      cov_225r6pydyk().b[81][0]++;
      cov_225r6pydyk().s[397]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_225r6pydyk().b[81][1]++;
    }
    cov_225r6pydyk().s[398]++;
    if (node.type === "tag") {
      /* istanbul ignore next */
      cov_225r6pydyk().b[82][0]++;
      const tagName =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[399]++, node.title);
      // Find all knowledge entries that have this tag
      const entriesWithTag =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[400]++, []);
      /* istanbul ignore next */
      cov_225r6pydyk().s[401]++;
      agents.forEach(agent => {
        /* istanbul ignore next */
        cov_225r6pydyk().f[57]++;
        cov_225r6pydyk().s[402]++;
        agent.knowledge?.forEach(entry => {
          /* istanbul ignore next */
          cov_225r6pydyk().f[58]++;
          cov_225r6pydyk().s[403]++;
          if (entry.tags?.includes(tagName)) {
            /* istanbul ignore next */
            cov_225r6pydyk().b[83][0]++;
            cov_225r6pydyk().s[404]++;
            entriesWithTag.push({
              entry,
              agent
            });
          } else
          /* istanbul ignore next */
          {
            cov_225r6pydyk().b[83][1]++;
          }
        });
      });
      /* istanbul ignore next */
      cov_225r6pydyk().s[405]++;
      if (entriesWithTag.length > 0) {
        /* istanbul ignore next */
        cov_225r6pydyk().b[84][0]++;
        // Create a formatted list of entries with this tag
        const formattedEntries =
        /* istanbul ignore next */
        (cov_225r6pydyk().s[406]++, entriesWithTag.map(({
          entry,
          agent
        }) => {
          /* istanbul ignore next */
          cov_225r6pydyk().f[59]++;
          cov_225r6pydyk().s[407]++;
          return `- "${entry.title}" (${agent.name})`;
        }).join("\n"));
        /* istanbul ignore next */
        cov_225r6pydyk().s[408]++;
        setSelectedNodeInfo({
          title: `Tag: ${tagName}`,
          content: `${entriesWithTag.length} knowledge ${entriesWithTag.length === 1 ?
          /* istanbul ignore next */
          (cov_225r6pydyk().b[85][0]++, "entry has") :
          /* istanbul ignore next */
          (cov_225r6pydyk().b[85][1]++, "entries have")} this tag:\n\n${formattedEntries}`,
          type: "tag",
          id: tagName
        });
      } else {
        /* istanbul ignore next */
        cov_225r6pydyk().b[84][1]++;
        cov_225r6pydyk().s[409]++;
        setSelectedNodeInfo({
          title: `Tag: ${tagName}`,
          content: "No knowledge entries have this tag.",
          type: "tag",
          id: tagName
        });
      }
      /* istanbul ignore next */
      cov_225r6pydyk().s[410]++;
      onSelectNode("tag", tagName, tagName);
    } else {
      /* istanbul ignore next */
      cov_225r6pydyk().b[82][1]++;
      cov_225r6pydyk().s[411]++;
      if (node.type === "entry") {
        /* istanbul ignore next */
        cov_225r6pydyk().b[86][0]++;
        // For entries, we need to find the actual entry data
        const entryTitle =
        /* istanbul ignore next */
        (cov_225r6pydyk().s[412]++, node.title);
        const entriesWithTitle =
        /* istanbul ignore next */
        (cov_225r6pydyk().s[413]++, []);
        /* istanbul ignore next */
        cov_225r6pydyk().s[414]++;
        agents.forEach(agent => {
          /* istanbul ignore next */
          cov_225r6pydyk().f[60]++;
          cov_225r6pydyk().s[415]++;
          agent.knowledge?.forEach(entry => {
            /* istanbul ignore next */
            cov_225r6pydyk().f[61]++;
            cov_225r6pydyk().s[416]++;
            if (entry.title === entryTitle) {
              /* istanbul ignore next */
              cov_225r6pydyk().b[87][0]++;
              cov_225r6pydyk().s[417]++;
              entriesWithTitle.push({
                entry,
                agent
              });
            } else
            /* istanbul ignore next */
            {
              cov_225r6pydyk().b[87][1]++;
            }
          });
        });
        /* istanbul ignore next */
        cov_225r6pydyk().s[418]++;
        if (entriesWithTitle.length > 0) {
          /* istanbul ignore next */
          cov_225r6pydyk().b[88][0]++;
          // Just use the first one for now for the info panel
          const {
            entry,
            agent
          } =
          /* istanbul ignore next */
          (cov_225r6pydyk().s[419]++, entriesWithTitle[0]);
          /* istanbul ignore next */
          cov_225r6pydyk().s[420]++;
          setSelectedNodeInfo({
            title: entry.title,
            content: entry.content,
            type: "entry",
            id: entry.id
          });
          // Pass the entry title as the ID to ensure we can find all instances across agents
          /* istanbul ignore next */
          cov_225r6pydyk().s[421]++;
          onSelectNode("entry", entryTitle, entry.title);
        } else
        /* istanbul ignore next */
        {
          cov_225r6pydyk().b[88][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_225r6pydyk().b[86][1]++;
      }
    }
  }, [agents, onSelectNode]));
  const handleMouseDown =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[422]++, (0, _react.useCallback)(e => {
    /* istanbul ignore next */
    cov_225r6pydyk().f[62]++;
    const canvas =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[423]++, canvasRef.current);
    /* istanbul ignore next */
    cov_225r6pydyk().s[424]++;
    if (!canvas) {
      /* istanbul ignore next */
      cov_225r6pydyk().b[89][0]++;
      cov_225r6pydyk().s[425]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_225r6pydyk().b[89][1]++;
    }
    const rect =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[426]++, canvas.getBoundingClientRect());
    const x =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[427]++, (e.clientX - rect.left - offset.x) / zoomLevel);
    const y =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[428]++, (e.clientY - rect.top - offset.y) / zoomLevel);
    // Check if clicking on a node
    const clicked =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[429]++, nodes.find(node => {
      /* istanbul ignore next */
      cov_225r6pydyk().f[63]++;
      const dx =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[430]++, node.x - x);
      const dy =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[431]++, node.y - y);
      /* istanbul ignore next */
      cov_225r6pydyk().s[432]++;
      return Math.sqrt(dx * dx + dy * dy) <= node.radius;
    }));
    /* istanbul ignore next */
    cov_225r6pydyk().s[433]++;
    if (
    /* istanbul ignore next */
    (cov_225r6pydyk().b[91][0]++, clicked) &&
    /* istanbul ignore next */
    (cov_225r6pydyk().b[91][1]++, simulationRef.current)) {
      /* istanbul ignore next */
      cov_225r6pydyk().b[90][0]++;
      cov_225r6pydyk().s[434]++;
      setSelectedNode(clicked);
      /* istanbul ignore next */
      cov_225r6pydyk().s[435]++;
      handleNodeClick(clicked);
      // Check for double-click to pin/unpin node
      const now =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[436]++, Date.now());
      /* istanbul ignore next */
      cov_225r6pydyk().s[437]++;
      if (
      /* istanbul ignore next */
      (cov_225r6pydyk().b[93][0]++, now - lastClickTime < 300) &&
      /* istanbul ignore next */
      (cov_225r6pydyk().b[93][1]++, lastClickedNode === clicked.id)) {
        /* istanbul ignore next */
        cov_225r6pydyk().b[92][0]++;
        // Toggle pin state
        const simNode =
        /* istanbul ignore next */
        (cov_225r6pydyk().s[438]++, simulationRef.current.nodes.find(n => {
          /* istanbul ignore next */
          cov_225r6pydyk().f[64]++;
          cov_225r6pydyk().s[439]++;
          return n.id === clicked.id;
        }));
        /* istanbul ignore next */
        cov_225r6pydyk().s[440]++;
        if (simNode) {
          /* istanbul ignore next */
          cov_225r6pydyk().b[94][0]++;
          cov_225r6pydyk().s[441]++;
          simNode.isPinned = !simNode.isPinned;
          /* istanbul ignore next */
          cov_225r6pydyk().s[442]++;
          simNode.fx = simNode.isPinned ?
          /* istanbul ignore next */
          (cov_225r6pydyk().b[95][0]++, simNode.x) :
          /* istanbul ignore next */
          (cov_225r6pydyk().b[95][1]++, null);
          /* istanbul ignore next */
          cov_225r6pydyk().s[443]++;
          simNode.fy = simNode.isPinned ?
          /* istanbul ignore next */
          (cov_225r6pydyk().b[96][0]++, simNode.y) :
          /* istanbul ignore next */
          (cov_225r6pydyk().b[96][1]++, null);
          // Update the React state
          /* istanbul ignore next */
          cov_225r6pydyk().s[444]++;
          needsRenderRef.current = true;
        } else
        /* istanbul ignore next */
        {
          cov_225r6pydyk().b[94][1]++;
        }
      } else {
        /* istanbul ignore next */
        cov_225r6pydyk().b[92][1]++;
        // Start dragging the node
        const simNode =
        /* istanbul ignore next */
        (cov_225r6pydyk().s[445]++, simulationRef.current.nodes.find(n => {
          /* istanbul ignore next */
          cov_225r6pydyk().f[65]++;
          cov_225r6pydyk().s[446]++;
          return n.id === clicked.id;
        }));
        /* istanbul ignore next */
        cov_225r6pydyk().s[447]++;
        if (simNode) {
          /* istanbul ignore next */
          cov_225r6pydyk().b[97][0]++;
          cov_225r6pydyk().s[448]++;
          setDraggedNode(simNode);
        } else
        /* istanbul ignore next */
        {
          cov_225r6pydyk().b[97][1]++;
        }
      }
      /* istanbul ignore next */
      cov_225r6pydyk().s[449]++;
      setLastClickTime(now);
      /* istanbul ignore next */
      cov_225r6pydyk().s[450]++;
      setLastClickedNode(clicked.id);
    } else {
      /* istanbul ignore next */
      cov_225r6pydyk().b[90][1]++;
      cov_225r6pydyk().s[451]++;
      // Start dragging the canvas
      setIsDragging(true);
      /* istanbul ignore next */
      cov_225r6pydyk().s[452]++;
      setDragStart({
        x: e.clientX - offset.x,
        y: e.clientY - offset.y
      });
    }
  }, [nodes, zoomLevel, offset, lastClickTime, lastClickedNode, handleNodeClick]));
  const handleCanvasMouseMove =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[453]++, (0, _react.useCallback)(e => {
    /* istanbul ignore next */
    cov_225r6pydyk().f[66]++;
    const canvas =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[454]++, canvasRef.current);
    /* istanbul ignore next */
    cov_225r6pydyk().s[455]++;
    if (!canvas) {
      /* istanbul ignore next */
      cov_225r6pydyk().b[98][0]++;
      cov_225r6pydyk().s[456]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_225r6pydyk().b[98][1]++;
    }
    const rect =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[457]++, canvas.getBoundingClientRect());
    const x =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[458]++, (e.clientX - rect.left - offset.x) / zoomLevel);
    const y =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[459]++, (e.clientY - rect.top - offset.y) / zoomLevel);
    // Check if hovering over a node
    const hovered =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[460]++, nodes.find(node => {
      /* istanbul ignore next */
      cov_225r6pydyk().f[67]++;
      const dx =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[461]++, node.x - x);
      const dy =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[462]++, node.y - y);
      /* istanbul ignore next */
      cov_225r6pydyk().s[463]++;
      return Math.sqrt(dx * dx + dy * dy) <= node.radius;
    }));
    /* istanbul ignore next */
    cov_225r6pydyk().s[464]++;
    setHoveredNode(
    /* istanbul ignore next */
    (cov_225r6pydyk().b[99][0]++, hovered) ||
    /* istanbul ignore next */
    (cov_225r6pydyk().b[99][1]++, null));
    // Handle dragging a node
    /* istanbul ignore next */
    cov_225r6pydyk().s[465]++;
    if (
    /* istanbul ignore next */
    (cov_225r6pydyk().b[101][0]++, draggedNode) &&
    /* istanbul ignore next */
    (cov_225r6pydyk().b[101][1]++, simulationRef.current)) {
      /* istanbul ignore next */
      cov_225r6pydyk().b[100][0]++;
      const nodeIndex =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[466]++, simulationRef.current.nodes.findIndex(n => {
        /* istanbul ignore next */
        cov_225r6pydyk().f[68]++;
        cov_225r6pydyk().s[467]++;
        return n.id === draggedNode.id;
      }));
      /* istanbul ignore next */
      cov_225r6pydyk().s[468]++;
      if (nodeIndex >= 0) {
        /* istanbul ignore next */
        cov_225r6pydyk().b[102][0]++;
        const node =
        /* istanbul ignore next */
        (cov_225r6pydyk().s[469]++, simulationRef.current.nodes[nodeIndex]);
        /* istanbul ignore next */
        cov_225r6pydyk().s[470]++;
        node.x = x;
        /* istanbul ignore next */
        cov_225r6pydyk().s[471]++;
        node.y = y;
        /* istanbul ignore next */
        cov_225r6pydyk().s[472]++;
        node.vx = 0;
        /* istanbul ignore next */
        cov_225r6pydyk().s[473]++;
        node.vy = 0;
        // Mark that we need to render
        /* istanbul ignore next */
        cov_225r6pydyk().s[474]++;
        needsRenderRef.current = true;
      } else
      /* istanbul ignore next */
      {
        cov_225r6pydyk().b[102][1]++;
      }
    } else {
      /* istanbul ignore next */
      cov_225r6pydyk().b[100][1]++;
      cov_225r6pydyk().s[475]++;
      if (isDragging) {
        /* istanbul ignore next */
        cov_225r6pydyk().b[103][0]++;
        cov_225r6pydyk().s[476]++;
        // Handle dragging the canvas
        setOffset({
          x: e.clientX - dragStart.x,
          y: e.clientY - dragStart.y
        });
      } else
      /* istanbul ignore next */
      {
        cov_225r6pydyk().b[103][1]++;
      }
    }
  }, [nodes, zoomLevel, offset, dragStart, draggedNode, isDragging]));
  const handleCanvasMouseUp =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[477]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_225r6pydyk().f[69]++;
    cov_225r6pydyk().s[478]++;
    setIsDragging(false);
    /* istanbul ignore next */
    cov_225r6pydyk().s[479]++;
    setDraggedNode(null);
  }, []));
  const handleZoomIn =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[480]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_225r6pydyk().f[70]++;
    cov_225r6pydyk().s[481]++;
    setZoomLevel(prev => {
      /* istanbul ignore next */
      cov_225r6pydyk().f[71]++;
      cov_225r6pydyk().s[482]++;
      return Math.min(prev + 0.2, 3);
    });
  }, []));
  const handleZoomOut =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[483]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_225r6pydyk().f[72]++;
    cov_225r6pydyk().s[484]++;
    setZoomLevel(prev => {
      /* istanbul ignore next */
      cov_225r6pydyk().f[73]++;
      cov_225r6pydyk().s[485]++;
      return Math.max(prev - 0.2, 0.5);
    });
  }, []));
  const handleReset =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[486]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_225r6pydyk().f[74]++;
    cov_225r6pydyk().s[487]++;
    setZoomLevel(1);
    /* istanbul ignore next */
    cov_225r6pydyk().s[488]++;
    setOffset({
      x: 0,
      y: 0
    });
  }, []));
  // Draw the graph
  /* istanbul ignore next */
  cov_225r6pydyk().s[489]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_225r6pydyk().f[75]++;
    cov_225r6pydyk().s[490]++;
    if (!nodes.length) {
      /* istanbul ignore next */
      cov_225r6pydyk().b[104][0]++;
      cov_225r6pydyk().s[491]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_225r6pydyk().b[104][1]++;
    }
    const canvas =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[492]++, canvasRef.current);
    /* istanbul ignore next */
    cov_225r6pydyk().s[493]++;
    if (!canvas) {
      /* istanbul ignore next */
      cov_225r6pydyk().b[105][0]++;
      cov_225r6pydyk().s[494]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_225r6pydyk().b[105][1]++;
    }
    const ctx =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[495]++, canvas.getContext("2d"));
    /* istanbul ignore next */
    cov_225r6pydyk().s[496]++;
    if (!ctx) {
      /* istanbul ignore next */
      cov_225r6pydyk().b[106][0]++;
      cov_225r6pydyk().s[497]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_225r6pydyk().b[106][1]++;
    }
    // Set canvas dimensions
    const container =
    /* istanbul ignore next */
    (cov_225r6pydyk().s[498]++, containerRef.current);
    /* istanbul ignore next */
    cov_225r6pydyk().s[499]++;
    if (container) {
      /* istanbul ignore next */
      cov_225r6pydyk().b[107][0]++;
      const {
        width,
        height
      } =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[500]++, container.getBoundingClientRect());
      /* istanbul ignore next */
      cov_225r6pydyk().s[501]++;
      canvas.width = width;
      /* istanbul ignore next */
      cov_225r6pydyk().s[502]++;
      canvas.height = height;
    } else
    /* istanbul ignore next */
    {
      cov_225r6pydyk().b[107][1]++;
    }
    // Clear canvas
    cov_225r6pydyk().s[503]++;
    ctx.clearRect(0, 0, canvas.width, canvas.height);
    // Apply zoom and pan
    /* istanbul ignore next */
    cov_225r6pydyk().s[504]++;
    ctx.save();
    /* istanbul ignore next */
    cov_225r6pydyk().s[505]++;
    ctx.translate(offset.x, offset.y);
    /* istanbul ignore next */
    cov_225r6pydyk().s[506]++;
    ctx.scale(zoomLevel, zoomLevel);
    // Draw links
    /* istanbul ignore next */
    cov_225r6pydyk().s[507]++;
    for (const link of links) {
      const source =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[508]++, nodes.find(n => {
        /* istanbul ignore next */
        cov_225r6pydyk().f[76]++;
        cov_225r6pydyk().s[509]++;
        return n.id === link.source;
      }));
      const target =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[510]++, nodes.find(n => {
        /* istanbul ignore next */
        cov_225r6pydyk().f[77]++;
        cov_225r6pydyk().s[511]++;
        return n.id === link.target;
      }));
      /* istanbul ignore next */
      cov_225r6pydyk().s[512]++;
      if (
      /* istanbul ignore next */
      (cov_225r6pydyk().b[109][0]++, source) &&
      /* istanbul ignore next */
      (cov_225r6pydyk().b[109][1]++, target)) {
        /* istanbul ignore next */
        cov_225r6pydyk().b[108][0]++;
        cov_225r6pydyk().s[513]++;
        ctx.beginPath();
        /* istanbul ignore next */
        cov_225r6pydyk().s[514]++;
        ctx.moveTo(source.x, source.y);
        /* istanbul ignore next */
        cov_225r6pydyk().s[515]++;
        ctx.lineTo(target.x, target.y);
        // Use different style for links connected to selected node
        /* istanbul ignore next */
        cov_225r6pydyk().s[516]++;
        if (
        /* istanbul ignore next */
        (cov_225r6pydyk().b[111][0]++, selectedNode) && (
        /* istanbul ignore next */
        (cov_225r6pydyk().b[111][1]++, source.id === selectedNode.id) ||
        /* istanbul ignore next */
        (cov_225r6pydyk().b[111][2]++, target.id === selectedNode.id))) {
          /* istanbul ignore next */
          cov_225r6pydyk().b[110][0]++;
          cov_225r6pydyk().s[517]++;
          ctx.strokeStyle = `${link.color}90`; // 90% opacity
          /* istanbul ignore next */
          cov_225r6pydyk().s[518]++;
          ctx.lineWidth = 3 / zoomLevel;
        } else {
          /* istanbul ignore next */
          cov_225r6pydyk().b[110][1]++;
          cov_225r6pydyk().s[519]++;
          ctx.strokeStyle = `${link.color}50`; // 50% opacity
          /* istanbul ignore next */
          cov_225r6pydyk().s[520]++;
          ctx.lineWidth = 2 / zoomLevel;
        }
        /* istanbul ignore next */
        cov_225r6pydyk().s[521]++;
        ctx.stroke();
      } else
      /* istanbul ignore next */
      {
        cov_225r6pydyk().b[108][1]++;
      }
    }
    // Draw nodes
    /* istanbul ignore next */
    cov_225r6pydyk().s[522]++;
    for (const node of nodes) {
      // Ensure radius is positive
      const radius =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[523]++, Math.max(node.radius, 1)); // Minimum radius of 1
      /* istanbul ignore next */
      cov_225r6pydyk().s[524]++;
      ctx.beginPath();
      /* istanbul ignore next */
      cov_225r6pydyk().s[525]++;
      ctx.arc(node.x, node.y, radius, 0, Math.PI * 2);
      // Highlight selected or hovered node
      /* istanbul ignore next */
      cov_225r6pydyk().s[526]++;
      if (node === selectedNode) {
        /* istanbul ignore next */
        cov_225r6pydyk().b[112][0]++;
        cov_225r6pydyk().s[527]++;
        ctx.fillStyle = "#f472b6"; // Pink for selected
        /* istanbul ignore next */
        cov_225r6pydyk().s[528]++;
        ctx.strokeStyle = "#ffffff";
        /* istanbul ignore next */
        cov_225r6pydyk().s[529]++;
        ctx.lineWidth = 2 / zoomLevel;
        /* istanbul ignore next */
        cov_225r6pydyk().s[530]++;
        ctx.stroke();
      } else {
        /* istanbul ignore next */
        cov_225r6pydyk().b[112][1]++;
        cov_225r6pydyk().s[531]++;
        if (node === hoveredNode) {
          /* istanbul ignore next */
          cov_225r6pydyk().b[113][0]++;
          cov_225r6pydyk().s[532]++;
          ctx.fillStyle = node.color;
          /* istanbul ignore next */
          cov_225r6pydyk().s[533]++;
          ctx.strokeStyle = "#ffffff";
          /* istanbul ignore next */
          cov_225r6pydyk().s[534]++;
          ctx.lineWidth = 2 / zoomLevel;
          /* istanbul ignore next */
          cov_225r6pydyk().s[535]++;
          ctx.stroke();
        } else {
          /* istanbul ignore next */
          cov_225r6pydyk().b[113][1]++;
          cov_225r6pydyk().s[536]++;
          ctx.fillStyle = node.color;
        }
      }
      // Add a stroke to tag nodes to make them more distinguishable
      /* istanbul ignore next */
      cov_225r6pydyk().s[537]++;
      if (node.type === "tag") {
        /* istanbul ignore next */
        cov_225r6pydyk().b[114][0]++;
        cov_225r6pydyk().s[538]++;
        ctx.strokeStyle = "#4338ca";
        /* istanbul ignore next */
        cov_225r6pydyk().s[539]++;
        ctx.lineWidth = 2 / zoomLevel;
        /* istanbul ignore next */
        cov_225r6pydyk().s[540]++;
        ctx.stroke();
      } else
      /* istanbul ignore next */
      {
        cov_225r6pydyk().b[114][1]++;
      }
      // Add a pin indicator for pinned nodes
      const isPinned =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[541]++, simulationRef.current?.nodes.find(n => {
        /* istanbul ignore next */
        cov_225r6pydyk().f[78]++;
        cov_225r6pydyk().s[542]++;
        return n.id === node.id;
      })?.isPinned);
      /* istanbul ignore next */
      cov_225r6pydyk().s[543]++;
      if (isPinned) {
        /* istanbul ignore next */
        cov_225r6pydyk().b[115][0]++;
        cov_225r6pydyk().s[544]++;
        ctx.strokeStyle = "#f59e0b"; // Amber color for pins
        /* istanbul ignore next */
        cov_225r6pydyk().s[545]++;
        ctx.lineWidth = 2 / zoomLevel;
        /* istanbul ignore next */
        cov_225r6pydyk().s[546]++;
        ctx.setLineDash([3, 3]); // Dashed line
        /* istanbul ignore next */
        cov_225r6pydyk().s[547]++;
        ctx.stroke();
        /* istanbul ignore next */
        cov_225r6pydyk().s[548]++;
        ctx.setLineDash([]); // Reset to solid line
      } else
      /* istanbul ignore next */
      {
        cov_225r6pydyk().b[115][1]++;
      }
      cov_225r6pydyk().s[549]++;
      ctx.fill();
      // Draw agent initials for agent nodes
      /* istanbul ignore next */
      cov_225r6pydyk().s[550]++;
      if (node.type === "agent") {
        /* istanbul ignore next */
        cov_225r6pydyk().b[116][0]++;
        cov_225r6pydyk().s[551]++;
        ctx.fillStyle = "#ffffff";
        /* istanbul ignore next */
        cov_225r6pydyk().s[552]++;
        ctx.font = `bold ${Math.max(14 / zoomLevel, 8)}px Arial`; // Ensure minimum font size
        /* istanbul ignore next */
        cov_225r6pydyk().s[553]++;
        ctx.textAlign = "center";
        /* istanbul ignore next */
        cov_225r6pydyk().s[554]++;
        ctx.textBaseline = "middle";
        /* istanbul ignore next */
        cov_225r6pydyk().s[555]++;
        ctx.fillText(node.title.charAt(0), node.x, node.y);
      } else
      /* istanbul ignore next */
      {
        cov_225r6pydyk().b[116][1]++;
      }
      // Draw node labels
      cov_225r6pydyk().s[556]++;
      if (
      /* istanbul ignore next */
      (cov_225r6pydyk().b[118][0]++, node === hoveredNode) ||
      /* istanbul ignore next */
      (cov_225r6pydyk().b[118][1]++, node === selectedNode) ||
      /* istanbul ignore next */
      (cov_225r6pydyk().b[118][2]++, zoomLevel > 1.5)) {
        /* istanbul ignore next */
        cov_225r6pydyk().b[117][0]++;
        cov_225r6pydyk().s[557]++;
        ctx.fillStyle = "#ffffff";
        /* istanbul ignore next */
        cov_225r6pydyk().s[558]++;
        ctx.font = `${node.type === "tag" ?
        /* istanbul ignore next */
        (cov_225r6pydyk().b[119][0]++, "bold ") :
        /* istanbul ignore next */
        (cov_225r6pydyk().b[119][1]++, "")}${Math.max(12 / zoomLevel, 8)}px Arial`;
        /* istanbul ignore next */
        cov_225r6pydyk().s[559]++;
        ctx.textAlign = "center";
        /* istanbul ignore next */
        cov_225r6pydyk().s[560]++;
        ctx.textBaseline = "middle";
        // Draw text with background for better readability
        const textWidth =
        /* istanbul ignore next */
        (cov_225r6pydyk().s[561]++, ctx.measureText(node.title).width);
        /* istanbul ignore next */
        cov_225r6pydyk().s[562]++;
        ctx.fillStyle = "rgba(0, 0, 0, 0.7)";
        /* istanbul ignore next */
        cov_225r6pydyk().s[563]++;
        ctx.fillRect(node.x - textWidth / 2 - 4, node.y + radius + 4, textWidth + 8, 16 / zoomLevel);
        /* istanbul ignore next */
        cov_225r6pydyk().s[564]++;
        ctx.fillStyle = "#ffffff";
        /* istanbul ignore next */
        cov_225r6pydyk().s[565]++;
        ctx.font = `${node.type === "tag" ?
        /* istanbul ignore next */
        (cov_225r6pydyk().b[120][0]++, "bold ") :
        /* istanbul ignore next */
        (cov_225r6pydyk().b[120][1]++, "")}${Math.max(12 / zoomLevel, 8)}px Arial`;
        /* istanbul ignore next */
        cov_225r6pydyk().s[566]++;
        ctx.fillText(node.title, node.x, node.y + radius + 12 / zoomLevel);
      } else
      /* istanbul ignore next */
      {
        cov_225r6pydyk().b[117][1]++;
      }
    }
    /* istanbul ignore next */
    cov_225r6pydyk().s[567]++;
    ctx.restore();
  }, [nodes, links, hoveredNode, selectedNode, zoomLevel, offset]);
  // Handle window resize
  /* istanbul ignore next */
  cov_225r6pydyk().s[568]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_225r6pydyk().f[79]++;
    cov_225r6pydyk().s[569]++;
    const handleResize = () => {
      /* istanbul ignore next */
      cov_225r6pydyk().f[80]++;
      const canvas =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[570]++, canvasRef.current);
      const container =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[571]++, containerRef.current);
      /* istanbul ignore next */
      cov_225r6pydyk().s[572]++;
      if (
      /* istanbul ignore next */
      (cov_225r6pydyk().b[122][0]++, !canvas) ||
      /* istanbul ignore next */
      (cov_225r6pydyk().b[122][1]++, !container)) {
        /* istanbul ignore next */
        cov_225r6pydyk().b[121][0]++;
        cov_225r6pydyk().s[573]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_225r6pydyk().b[121][1]++;
      }
      cov_225r6pydyk().s[574]++;
      canvas.width = container.clientWidth;
      /* istanbul ignore next */
      cov_225r6pydyk().s[575]++;
      canvas.height = container.clientHeight;
      // Redraw
      const ctx =
      /* istanbul ignore next */
      (cov_225r6pydyk().s[576]++, canvas.getContext("2d"));
      /* istanbul ignore next */
      cov_225r6pydyk().s[577]++;
      if (ctx) {
        /* istanbul ignore next */
        cov_225r6pydyk().b[123][0]++;
        cov_225r6pydyk().s[578]++;
        ctx.clearRect(0, 0, canvas.width, canvas.height);
      } else
      /* istanbul ignore next */
      {
        cov_225r6pydyk().b[123][1]++;
      }
    };
    /* istanbul ignore next */
    cov_225r6pydyk().s[579]++;
    window.addEventListener("resize", handleResize);
    /* istanbul ignore next */
    cov_225r6pydyk().s[580]++;
    return () => {
      /* istanbul ignore next */
      cov_225r6pydyk().f[81]++;
      cov_225r6pydyk().s[581]++;
      window.removeEventListener("resize", handleResize);
    };
  }, []);
  // Count total knowledge entries
  const totalEntries =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[582]++, agents.reduce((sum, agent) => {
    /* istanbul ignore next */
    cov_225r6pydyk().f[82]++;
    cov_225r6pydyk().s[583]++;
    return sum + (
    /* istanbul ignore next */
    (cov_225r6pydyk().b[124][0]++, agent.knowledge?.length) ||
    /* istanbul ignore next */
    (cov_225r6pydyk().b[124][1]++, 0));
  }, 0));
  // Count unique knowledge titles
  const uniqueTitles =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[584]++, new Set());
  /* istanbul ignore next */
  cov_225r6pydyk().s[585]++;
  agents.forEach(agent => {
    /* istanbul ignore next */
    cov_225r6pydyk().f[83]++;
    cov_225r6pydyk().s[586]++;
    agent.knowledge?.forEach(entry => {
      /* istanbul ignore next */
      cov_225r6pydyk().f[84]++;
      cov_225r6pydyk().s[587]++;
      uniqueTitles.add(entry.title);
    });
  });
  // Count unique tags
  const uniqueTags =
  /* istanbul ignore next */
  (cov_225r6pydyk().s[588]++, new Set());
  /* istanbul ignore next */
  cov_225r6pydyk().s[589]++;
  agents.forEach(agent => {
    /* istanbul ignore next */
    cov_225r6pydyk().f[85]++;
    cov_225r6pydyk().s[590]++;
    agent.knowledge?.forEach(entry => {
      /* istanbul ignore next */
      cov_225r6pydyk().f[86]++;
      cov_225r6pydyk().s[591]++;
      entry.tags?.forEach(tag => {
        /* istanbul ignore next */
        cov_225r6pydyk().f[87]++;
        cov_225r6pydyk().s[592]++;
        return uniqueTags.add(tag);
      });
    });
  });
  /* istanbul ignore next */
  cov_225r6pydyk().s[593]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
    className: "h-full",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardHeader, {
      className: "py-2 px-4 border-b border-purple-800 bg-gradient-to-r from-purple-900/50 to-indigo-900/50",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex justify-between items-center",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
          className: "text-sm font-medium text-white",
          children: "Global Knowledge Graph"
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex gap-2",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
            variant: "outline",
            size: "sm",
            onClick: () => {
              /* istanbul ignore next */
              cov_225r6pydyk().f[88]++;
              cov_225r6pydyk().s[594]++;
              return setIsSimulationRunning(!isSimulationRunning);
            },
            className: "h-6 w-6 p-0 bg-purple-900/50 border-purple-500 text-white hover:bg-purple-800 hover:text-white",
            title: isSimulationRunning ?
            /* istanbul ignore next */
            (cov_225r6pydyk().b[125][0]++, "Pause simulation") :
            /* istanbul ignore next */
            (cov_225r6pydyk().b[125][1]++, "Start simulation"),
            children: isSimulationRunning ?
            /* istanbul ignore next */
            (/*#__PURE__*/cov_225r6pydyk().b[126][0]++, (0, _jsxruntime.jsx)(_lucidereact.Pause, {
              size: 12
            })) :
            /* istanbul ignore next */
            (/*#__PURE__*/cov_225r6pydyk().b[126][1]++, (0, _jsxruntime.jsx)(_lucidereact.Play, {
              size: 12
            }))
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
            variant: "outline",
            size: "sm",
            onClick: resetNodePositions,
            className: "h-6 w-6 p-0 bg-purple-900/50 border-purple-500 text-white hover:bg-purple-800 hover:text-white",
            title: "Reset positions",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.RefreshCw, {
              size: 12
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
            variant: "outline",
            size: "sm",
            onClick: handleZoomOut,
            className: "h-6 w-6 p-0 bg-purple-900/50 border-purple-500 text-white hover:bg-purple-800 hover:text-white",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.ZoomOut, {
              size: 12
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
            className: "flex items-center text-xs text-white px-1",
            children: [Math.round(zoomLevel * 100), "%"]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
            variant: "outline",
            size: "sm",
            onClick: handleZoomIn,
            className: "h-6 w-6 p-0 bg-purple-900/50 border-purple-500 text-white hover:bg-purple-800 hover:text-white",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.ZoomIn, {
              size: 12
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
            variant: "outline",
            size: "sm",
            onClick: handleReset,
            className: "h-6 w-6 p-0 bg-purple-900/50 border-purple-500 text-white hover:bg-purple-800 hover:text-white",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.RefreshCw, {
              size: 12
            })
          })]
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "text-xs text-purple-300 mt-1",
        children: [agents.length, " agents, ", totalEntries, " entries (", uniqueTitles.size, " ", "unique), ", uniqueTags.size, " tags",
        /* istanbul ignore next */
        (cov_225r6pydyk().b[127][0]++, isSimulationRunning) &&
        /* istanbul ignore next */
        (cov_225r6pydyk().b[127][1]++, " • Simulation running"),
        /* istanbul ignore next */
        (cov_225r6pydyk().b[128][0]++, simulationRef.current?.nodes) &&
        /* istanbul ignore next */
        (cov_225r6pydyk().b[128][1]++, simulationRef.current.nodes.filter(n => {
          /* istanbul ignore next */
          cov_225r6pydyk().f[89]++;
          cov_225r6pydyk().s[595]++;
          return n.isPinned;
        }).length > 0) &&
        /* istanbul ignore next */
        (cov_225r6pydyk().b[128][2]++, ` • ${simulationRef.current.nodes.filter(n => {
          /* istanbul ignore next */
          cov_225r6pydyk().f[90]++;
          cov_225r6pydyk().s[596]++;
          return n.isPinned;
        }).length} pinned nodes`)]
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
      className: "p-0 h-[calc(100%-52px)]",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        ref: containerRef,
        className: "h-full relative bg-black",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("canvas", {
          ref: canvasRef,
          className: "absolute inset-0 cursor-grab",
          onMouseMove: handleCanvasMouseMove,
          onMouseDown: handleMouseDown,
          onMouseUp: handleCanvasMouseUp,
          onMouseLeave: handleCanvasMouseUp
        }),
        /* istanbul ignore next */
        (cov_225r6pydyk().b[129][0]++, hoveredNode) &&
        /* istanbul ignore next */
        (cov_225r6pydyk().b[129][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "absolute bottom-4 left-4 bg-purple-950/80 backdrop-blur-sm p-3 rounded-lg border border-purple-700 shadow-md max-w-xs",
          children: [
          /* istanbul ignore next */
          (cov_225r6pydyk().b[130][0]++, hoveredNode.type === "tag") &&
          /* istanbul ignore next */
          (cov_225r6pydyk().b[130][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("h3", {
              className: "font-medium text-white mb-1",
              children: ["Tag: ", hoveredNode.title]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "text-xs text-purple-300",
              children: [agents.reduce((count, agent) => {
                /* istanbul ignore next */
                cov_225r6pydyk().f[91]++;
                cov_225r6pydyk().s[597]++;
                return count + (
                /* istanbul ignore next */
                (cov_225r6pydyk().b[131][0]++, agent.knowledge) ||
                /* istanbul ignore next */
                (cov_225r6pydyk().b[131][1]++, [])).filter(entry => {
                  /* istanbul ignore next */
                  cov_225r6pydyk().f[92]++;
                  cov_225r6pydyk().s[598]++;
                  return entry.tags?.includes(hoveredNode.title);
                }).length;
              }, 0), " ", "entries across ", agents.length, " agents"]
            })]
          })),
          /* istanbul ignore next */
          (cov_225r6pydyk().b[132][0]++, hoveredNode.type === "entry") &&
          /* istanbul ignore next */
          (cov_225r6pydyk().b[132][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("h3", {
              className: "font-medium text-white mb-1",
              children: ["Knowledge: ", hoveredNode.title]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "text-xs text-purple-300",
              children: [agents.reduce((count, agent) => {
                /* istanbul ignore next */
                cov_225r6pydyk().f[93]++;
                cov_225r6pydyk().s[599]++;
                return count + (
                /* istanbul ignore next */
                (cov_225r6pydyk().b[133][0]++, agent.knowledge) ||
                /* istanbul ignore next */
                (cov_225r6pydyk().b[133][1]++, [])).filter(entry => {
                  /* istanbul ignore next */
                  cov_225r6pydyk().f[94]++;
                  cov_225r6pydyk().s[600]++;
                  return entry.title === hoveredNode.title;
                }).length;
              }, 0), " ", "instances across", " ", agents.filter(agent => {
                /* istanbul ignore next */
                cov_225r6pydyk().f[95]++;
                cov_225r6pydyk().s[601]++;
                return (
                /* istanbul ignore next */
                (cov_225r6pydyk().b[134][0]++, agent.knowledge) ||
                /* istanbul ignore next */
                (cov_225r6pydyk().b[134][1]++, [])).some(entry => {
                  /* istanbul ignore next */
                  cov_225r6pydyk().f[96]++;
                  cov_225r6pydyk().s[602]++;
                  return entry.title === hoveredNode.title;
                });
              }).length, " ", "agents"]
            })]
          }))]
        }))]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "absolute bottom-4 right-4 bg-purple-950/80 backdrop-blur-sm rounded-lg border border-purple-700 shadow-md overflow-hidden z-50",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex items-center",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_AboutButton.default, {
            onClick: onShowAbout
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("button", {
            onClick: () => {
              /* istanbul ignore next */
              cov_225r6pydyk().f[97]++;
              cov_225r6pydyk().s[603]++;
              return setShowSettings(!showSettings);
            },
            className: "flex items-center justify-between p-2 text-white text-sm font-medium hover:bg-purple-800/50",
            children: ["Physics Settings", showSettings ?
            /* istanbul ignore next */
            (/*#__PURE__*/cov_225r6pydyk().b[135][0]++, (0, _jsxruntime.jsx)(_lucidereact.ChevronDown, {
              size: 16
            })) :
            /* istanbul ignore next */
            (/*#__PURE__*/cov_225r6pydyk().b[135][1]++, (0, _jsxruntime.jsx)(_lucidereact.ChevronRight, {
              size: 16
            }))]
          })]
        }),
        /* istanbul ignore next */
        (cov_225r6pydyk().b[136][0]++, showSettings) &&
        /* istanbul ignore next */
        (cov_225r6pydyk().b[136][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "p-3 space-y-3",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: "text-xs text-purple-300 block mb-1",
              children: "Repulsion Force"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
              type: "range",
              min: "10",
              max: "500",
              step: "10",
              value: physicsSettings.repulsion,
              onChange: e => {
                /* istanbul ignore next */
                cov_225r6pydyk().f[98]++;
                cov_225r6pydyk().s[604]++;
                return setPhysicsSettings({
                  ...physicsSettings,
                  repulsion: Number(e.target.value)
                });
              },
              className: "w-full"
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex justify-between text-xs text-purple-400",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                children: "Weak"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                children: physicsSettings.repulsion
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                children: "Strong"
              })]
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: "text-xs text-purple-300 block mb-1",
              children: "Link Strength"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
              type: "range",
              min: "0.01",
              max: "0.5",
              step: "0.01",
              value: physicsSettings.linkStrength,
              onChange: e => {
                /* istanbul ignore next */
                cov_225r6pydyk().f[99]++;
                cov_225r6pydyk().s[605]++;
                return setPhysicsSettings({
                  ...physicsSettings,
                  linkStrength: Number(e.target.value)
                });
              },
              className: "w-full"
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex justify-between text-xs text-purple-400",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                children: "Loose"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                children: physicsSettings.linkStrength.toFixed(2)
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                children: "Tight"
              })]
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: "text-xs text-purple-300 block mb-1",
              children: "Friction"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
              type: "range",
              min: "0.7",
              max: "0.99",
              step: "0.01",
              value: physicsSettings.friction,
              onChange: e => {
                /* istanbul ignore next */
                cov_225r6pydyk().f[100]++;
                cov_225r6pydyk().s[606]++;
                return setPhysicsSettings({
                  ...physicsSettings,
                  friction: Number(e.target.value)
                });
              },
              className: "w-full"
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex justify-between text-xs text-purple-400",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                children: "More Damping"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                children: physicsSettings.friction.toFixed(2)
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                children: "Less Damping"
              })]
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: "text-xs text-purple-300 block mb-1",
              children: "Center Force"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
              type: "range",
              min: "0",
              max: "0.3",
              step: "0.01",
              value: physicsSettings.centerForce,
              onChange: e => {
                /* istanbul ignore next */
                cov_225r6pydyk().f[101]++;
                cov_225r6pydyk().s[607]++;
                return setPhysicsSettings({
                  ...physicsSettings,
                  centerForce: Number(e.target.value)
                });
              },
              className: "w-full"
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex justify-between text-xs text-purple-400",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                children: "None"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                children: physicsSettings.centerForce.toFixed(2)
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                children: "Strong"
              })]
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: "text-xs text-purple-300 block mb-1",
              children: "Velocity Limit"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
              type: "range",
              min: "0.0",
              max: "2.5",
              step: "0.1",
              value: physicsSettings.velocityLimit,
              onChange: e => {
                /* istanbul ignore next */
                cov_225r6pydyk().f[102]++;
                cov_225r6pydyk().s[608]++;
                return setPhysicsSettings({
                  ...physicsSettings,
                  velocityLimit: Number(e.target.value)
                });
              },
              className: "w-full"
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex justify-between text-xs text-purple-400",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                children: "Slow"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                children: physicsSettings.velocityLimit.toFixed(1)
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                children: "Fast"
              })]
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
            onClick: () => {
              /* istanbul ignore next */
              cov_225r6pydyk().f[103]++;
              cov_225r6pydyk().s[609]++;
              // Reset to default settings
              setPhysicsSettings({
                repulsion: 80,
                linkStrength: 0.08,
                friction: 0.92,
                centerForce: 0.05,
                collisionRadius: 1.2,
                velocityLimit: 0.2
              });
            },
            className: "w-full py-1 px-2 bg-purple-700 hover:bg-purple-600 text-white text-xs rounded",
            children: "Reset to Defaults"
          })]
        }))]
      })]
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
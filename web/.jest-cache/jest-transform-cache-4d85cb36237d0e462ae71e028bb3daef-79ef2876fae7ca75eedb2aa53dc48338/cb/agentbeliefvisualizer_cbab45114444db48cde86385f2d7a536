3fd978c6e92d9d4228b2bab429bde3db
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return AgentBeliefVisualizer;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _accordion = require("./ui/accordion");
const _badge = require("./ui/badge");
const _card = require("./ui/card");
const _progress = require("./ui/progress");
const _lucidereact = require("lucide-react");
// Mock belief data generator
function generateMockBeliefs() {
    return [
        {
            id: "belief-1",
            content: "There are resources in the northern sector",
            confidence: 0.85
        },
        {
            id: "belief-2",
            content: "Agent Alpha is cooperative and trustworthy",
            confidence: 0.92
        },
        {
            id: "belief-3",
            content: "The optimal path to the goal is through the center",
            confidence: 0.67
        },
        {
            id: "belief-4",
            content: "Energy conservation is critical for long-term survival",
            confidence: 0.95
        }
    ];
}
const beliefTypeIcons = {
    environmental: _lucidereact.Eye,
    social: _lucidereact.Target,
    strategic: _lucidereact.Lightbulb,
    policy: _lucidereact.Brain
};
const beliefTypeColors = {
    environmental: "bg-green-500",
    social: "bg-blue-500",
    strategic: "bg-yellow-500",
    policy: "bg-purple-500"
};
function AgentBeliefVisualizer({ agent, beliefs = generateMockBeliefs(), memory }) {
    // Group beliefs by confidence level
    const beliefsByConfidence = beliefs.reduce((acc, belief)=>{
        const level = belief.confidence >= 0.8 ? "high" : belief.confidence >= 0.5 ? "medium" : "low";
        if (!acc[level]) acc[level] = [];
        acc[level].push(belief);
        return acc;
    }, {});
    // Calculate average confidence by level
    const avgConfidenceByLevel = Object.entries(beliefsByConfidence).reduce((acc, [level, beliefs])=>{
        const avg = beliefs.reduce((sum, b)=>sum + b.confidence, 0) / beliefs.length;
        acc[level] = avg;
        return acc;
    }, {});
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
        className: "h-full flex flex-col",
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardHeader, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center justify-between",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "flex items-center gap-2",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Brain, {
                                    className: "w-5 h-5"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardTitle, {
                                    children: [
                                        "Belief State: ",
                                        agent.name
                                    ]
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_badge.Badge, {
                            variant: "secondary",
                            children: [
                                beliefs.length,
                                " beliefs"
                            ]
                        })
                    ]
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardContent, {
                className: "flex-1 overflow-auto",
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "space-y-6",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                                    className: "text-sm font-medium mb-3",
                                    children: "Confidence Levels"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                    className: "space-y-2",
                                    children: Object.entries(avgConfidenceByLevel).map(([level, confidence])=>{
                                        const Icon = level === "high" ? _lucidereact.Lightbulb : level === "medium" ? _lucidereact.Eye : _lucidereact.AlertCircle;
                                        return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "flex items-center gap-3",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(Icon, {
                                                    className: "w-4 h-4 text-muted-foreground"
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                    className: "text-sm capitalize w-24",
                                                    children: level
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_progress.Progress, {
                                                    value: confidence * 100,
                                                    className: "flex-1"
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                                    className: "text-sm text-muted-foreground w-12 text-right",
                                                    children: [
                                                        (confidence * 100).toFixed(0),
                                                        "%"
                                                    ]
                                                })
                                            ]
                                        }, level);
                                    })
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                                    className: "text-sm font-medium mb-3",
                                    children: "Belief Details"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_accordion.Accordion, {
                                    type: "single",
                                    collapsible: true,
                                    className: "w-full",
                                    children: Object.entries(beliefsByConfidence).map(([level, levelBeliefs])=>/*#__PURE__*/ (0, _jsxruntime.jsxs)(_accordion.AccordionItem, {
                                            value: level,
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_accordion.AccordionTrigger, {
                                                    className: "hover:no-underline",
                                                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                        className: "flex items-center gap-2",
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_badge.Badge, {
                                                                variant: "secondary",
                                                                className: level === "high" ? "bg-green-500" : level === "medium" ? "bg-yellow-500" : "bg-red-500",
                                                                children: levelBeliefs.length
                                                            }),
                                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                                                className: "capitalize",
                                                                children: [
                                                                    level,
                                                                    " Confidence Beliefs"
                                                                ]
                                                            })
                                                        ]
                                                    })
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_accordion.AccordionContent, {
                                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                        className: "space-y-3 pt-2",
                                                        children: levelBeliefs.map((belief)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                className: "border rounded-lg p-3",
                                                                children: [
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                                        className: "text-sm mb-2",
                                                                        children: belief.content
                                                                    }),
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                        className: "flex items-center justify-between",
                                                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                            className: "flex items-center gap-2",
                                                                            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                                                                className: "text-xs text-muted-foreground",
                                                                                children: [
                                                                                    "Confidence:",
                                                                                    " ",
                                                                                    (belief.confidence * 100).toFixed(0),
                                                                                    "%"
                                                                                ]
                                                                            })
                                                                        })
                                                                    })
                                                                ]
                                                            }, belief.id))
                                                    })
                                                })
                                            ]
                                        }, level))
                                })
                            ]
                        }),
                        memory && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                                    className: "text-sm font-medium mb-3",
                                    children: "Memory Overview"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
                                    className: "p-3",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                            className: "text-xs text-muted-foreground",
                                            children: "Memory ID"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                            className: "text-sm font-medium",
                                            children: memory.id
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                            className: "text-xs text-muted-foreground mt-2",
                                            children: "Type"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                            className: "text-sm",
                                            children: memory.type
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                            className: "text-xs text-muted-foreground mt-2",
                                            children: "Content"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                            className: "text-sm",
                                            children: memory.content
                                        })
                                    ]
                                })
                            ]
                        })
                    ]
                })
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,
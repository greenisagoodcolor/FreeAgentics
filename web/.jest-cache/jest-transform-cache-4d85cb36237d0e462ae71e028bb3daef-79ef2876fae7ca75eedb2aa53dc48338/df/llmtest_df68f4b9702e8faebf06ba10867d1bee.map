{"version":3,"names":["LLMTest","cov_1lfybxcuzo","f","client","isProcessing","setIsProcessing","settings","s","_llmcontext","useLLM","prompt","setPrompt","_react","useState","response","setResponse","debugInfo","setDebugInfo","sessionDebug","setSessionDebug","settingsDebug","setSettingsDebug","useEffect","checkSessionId","b","localSessionId","localStorage","getItem","provider","apiKeySessionId","Object","keys","join","error","console","Error","message","debugSession","useCallback","model","debugSettings","settingsInfo","temperature","maxTokens","apiKey","length","handleTest","trim","log","hasApiKeySessionId","settingsKeys","localStorageSessionId","sessionId","updateSettings","topP","frequencyPenalty","presencePenalty","systemFingerprint","currentSettings","getSettings","result","generateResponse","_jsxruntime","jsxs","_card","Card","className","jsx","CardHeader","CardTitle","CardContent","htmlFor","_textarea","Textarea","id","value","onChange","e","target","placeholder","_button","Button","onClick","disabled","Fragment","_spinner","Spinner","size"],"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/components/llmtest.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect, useCallback } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Spinner } from \"@/components/ui/spinner\";\nimport { useLLM } from \"@/contexts/llm-context\";\n\nexport default function LLMTest() {\n  const { client, isProcessing, setIsProcessing, settings } = useLLM();\n  const [prompt, setPrompt] = useState<string>(\n    \"Explain quantum computing in simple terms.\",\n  );\n  const [response, setResponse] = useState<string>(\"\");\n  const [debugInfo, setDebugInfo] = useState<string>(\"\");\n  const [sessionDebug, setSessionDebug] = useState<string>(\"\");\n  const [settingsDebug, setSettingsDebug] = useState<string>(\"\");\n\n  // Add debug info on mount and when settings change\n  useEffect(() => {\n    const checkSessionId = async () => {\n      if (!settings) {\n        setSessionDebug(\"Settings not available\");\n        return;\n      }\n\n      try {\n        // Get session ID from localStorage\n        const localSessionId = localStorage.getItem(\n          `api_session_${settings.provider}`,\n        );\n\n        // Debug session info\n        setSessionDebug(`\nProvider: ${settings.provider}\nSettings has apiKeySessionId: ${!!settings.apiKeySessionId}\nSettings apiKeySessionId: ${settings.apiKeySessionId || \"undefined\"}\nLocal storage sessionId: ${localSessionId || \"undefined\"}\nSettings keys: ${Object.keys(settings).join(\", \")}\n`);\n      } catch (error) {\n        console.error(\"Error checking session ID:\", error);\n        setSessionDebug(\n          `Error checking session ID: ${error instanceof Error ? error.message : \"Unknown error\"}`,\n        );\n      }\n    };\n\n    checkSessionId();\n  }, [settings]);\n\n  const debugSession = useCallback(() => {\n    if (!settings) {\n      setSessionDebug(\"Settings not available\");\n      return;\n    }\n\n    try {\n      // Get session ID from localStorage\n      const localSessionId = localStorage.getItem(\n        `api_session_${settings.provider}`,\n      );\n\n      // Debug session info\n      setSessionDebug(`\nProvider: ${settings.provider}\nModel: ${settings.model}\nSettings Keys: ${Object.keys(settings).join(\", \")}\nHas API Key Session ID: ${!!settings.apiKeySessionId}\nAPI Key Session ID: ${settings.apiKeySessionId || \"Not set\"}\nLocal Storage Session ID: ${localSessionId || \"Not found\"}\nSession ID Match: ${settings.apiKeySessionId === localSessionId ? \"Yes\" : \"No\"}\n      `);\n    } catch (error) {\n      setSessionDebug(`Error debugging session: ${error}`);\n    }\n  }, [settings]);\n\n  const debugSettings = useCallback(() => {\n    if (!settings) {\n      setSettingsDebug(\"Settings not available\");\n      return;\n    }\n\n    try {\n      const settingsInfo = `\nCurrent Settings:\nProvider: ${settings.provider}\nModel: ${settings.model}\nTemperature: ${settings.temperature}\nMax Tokens: ${settings.maxTokens}\nSettings Object Keys: ${Object.keys(settings).join(\", \")}\nHas API Key: ${!!settings.apiKey}\nAPI Key Length: ${settings.apiKey ? settings.apiKey.length : 0}\n      `;\n    } catch (error) {\n      setSettingsDebug(`Error debugging settings: ${error}`);\n    }\n  }, [settings]);\n\n  const handleTest = async () => {\n    if (!prompt.trim() || isProcessing) return;\n\n    if (!settings) {\n      setResponse(\"Error: Settings not available\");\n      return;\n    }\n\n    if (!client) {\n      setResponse(\"Error: LLM client not available\");\n      return;\n    }\n\n    try {\n      setIsProcessing(true);\n      setResponse(\"\");\n      setDebugInfo(\"\");\n\n      // Log detailed debug info about settings and session\n      console.log(\"Test settings debug:\", {\n        provider: settings.provider,\n        hasApiKeySessionId: !!settings.apiKeySessionId,\n        apiKeySessionId: settings.apiKeySessionId,\n        settingsKeys: Object.keys(settings),\n        localStorageSessionId: localStorage.getItem(\n          `api_session_${settings.provider}`,\n        ),\n      });\n\n      // Check if API key session ID is available\n      const sessionId =\n        settings.apiKeySessionId ||\n        localStorage.getItem(`api_session_${settings.provider}`);\n\n      if (!sessionId) {\n        throw new Error(\n          `API key is required for ${settings.provider} provider. Please add your API key in the Settings tab.`,\n        );\n      }\n\n      // If we have a session ID in localStorage but not in settings, update the settings\n      if (!settings.apiKeySessionId && sessionId) {\n        console.log(\n          \"Found session ID in localStorage but not in settings, updating settings\",\n        );\n        client.updateSettings({\n          ...settings,\n          apiKeySessionId: sessionId,\n        });\n      }\n\n      // Add debug info\n      setDebugInfo(`Provider: ${settings.provider}\nModel: ${settings.model}\nAPI key: [Securely Stored]\nAPI key session ID: ${sessionId}\nTemperature: ${settings.temperature}\nMax tokens: ${settings.maxTokens}\nTop P: ${settings.topP}\nFrequency penalty: ${settings.frequencyPenalty}\nPresence penalty: ${settings.presencePenalty}\nSystem fingerprint: ${settings.systemFingerprint}`);\n\n      // Force update the client settings before making the call\n      client.updateSettings({\n        ...settings,\n        apiKeySessionId: sessionId,\n      });\n\n      // Get the current settings directly from the client to ensure we're using the latest\n      const currentSettings = client.getSettings();\n      console.log(\"Current settings before test:\", {\n        provider: currentSettings.provider,\n        model: currentSettings.model,\n        hasApiKeySessionId: !!currentSettings.apiKeySessionId,\n        apiKeySessionId: currentSettings.apiKeySessionId,\n      });\n\n      try {\n        const result = await client.generateResponse(\n          \"You are a helpful AI assistant that explains complex topics in simple terms.\",\n          prompt,\n        );\n        setResponse(result);\n      } catch (error) {\n        console.error(\"Error in client.generateResponse:\", error);\n        setResponse(\n          `Error: ${error instanceof Error ? error.message : \"Unknown error\"}`,\n        );\n      }\n    } catch (error) {\n      console.error(\"Error testing LLM:\", error);\n      setResponse(\n        `Error: ${error instanceof Error ? error.message : \"Unknown error\"}`,\n      );\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  return (\n    <Card className=\"w-full\">\n      <CardHeader>\n        <CardTitle>LLM Integration Test</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4\">\n          {sessionDebug && (\n            <div className=\"space-y-2\">\n              <h3 className=\"text-sm font-medium\">Session Debug:</h3>\n              <div className=\"p-4 bg-gray-800 rounded-md whitespace-pre-wrap text-xs font-mono text-white\">\n                {sessionDebug}\n              </div>\n            </div>\n          )}\n\n          <div className=\"space-y-2\">\n            <label htmlFor=\"prompt\" className=\"text-sm font-medium\">\n              Prompt\n            </label>\n            <Textarea\n              id=\"prompt\"\n              value={prompt}\n              onChange={(e) => setPrompt(e.target.value)}\n              placeholder=\"Enter a prompt to test the LLM integration...\"\n              className=\"min-h-[100px]\"\n            />\n          </div>\n\n          <Button\n            onClick={handleTest}\n            disabled={isProcessing || !prompt.trim()}\n            className=\"w-full\"\n          >\n            {isProcessing ? (\n              <>\n                <Spinner size={16} className=\"mr-2\" />\n                Processing...\n              </>\n            ) : (\n              \"Test LLM Integration\"\n            )}\n          </Button>\n\n          {debugInfo && (\n            <div className=\"space-y-2 mt-4\">\n              <h3 className=\"text-sm font-medium\">Debug Info:</h3>\n              <div className=\"p-4 bg-gray-800 rounded-md whitespace-pre-wrap text-xs font-mono text-white\">\n                {debugInfo}\n              </div>\n            </div>\n          )}\n\n          {response && (\n            <div className=\"space-y-2 mt-4\">\n              <h3 className=\"text-sm font-medium\">Response:</h3>\n              <div className=\"p-4 bg-muted rounded-md whitespace-pre-wrap\">\n                {response}\n              </div>\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"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","ignoreList":[]}
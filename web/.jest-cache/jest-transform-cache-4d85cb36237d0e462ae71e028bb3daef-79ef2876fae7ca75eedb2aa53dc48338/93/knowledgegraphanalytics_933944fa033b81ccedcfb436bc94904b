a966a376cdfdec8a0388409be611de9c
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return KnowledgeGraphAnalytics;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _card = require("./ui/card");
const _badge = require("./ui/badge");
const _progress = require("./ui/progress");
const _tabs = require("./ui/tabs");
const _recharts = require("recharts");
const _lucidereact = require("lucide-react");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const COLORS = [
    "#3b82f6",
    "#ef4444",
    "#10b981",
    "#f59e0b",
    "#8b5cf6",
    "#ec4899",
    "#06b6d4",
    "#84cc16",
    "#f97316",
    "#6366f1"
];
function KnowledgeGraphAnalytics({ knowledgeGraph, className = "" }) {
    // Calculate comprehensive analytics metrics
    const metrics = (0, _react.useMemo)(()=>{
        const allNodes = [];
        const allEdges = [];
        // Collect all nodes and edges from all layers
        knowledgeGraph.layers.forEach((layer)=>{
            allNodes.push(...layer.nodes);
            allEdges.push(...layer.edges);
        });
        // Basic counts
        const totalNodes = allNodes.length;
        const totalEdges = allEdges.length;
        // Node type distribution
        const nodesByType = allNodes.reduce((acc, node)=>{
            acc[node.type] = (acc[node.type] || 0) + 1;
            return acc;
        }, {});
        // Edge type distribution
        const edgesByType = allEdges.reduce((acc, edge)=>{
            acc[edge.type] = (acc[edge.type] || 0) + 1;
            return acc;
        }, {});
        // Confidence and importance averages
        const averageConfidence = totalNodes > 0 ? allNodes.reduce((sum, node)=>sum + node.confidence, 0) / totalNodes : 0;
        const averageImportance = totalNodes > 0 ? allNodes.reduce((sum, node)=>sum + node.importance, 0) / totalNodes : 0;
        // Connectivity analysis
        const nodeConnections = new Map();
        allEdges.forEach((edge)=>{
            nodeConnections.set(edge.source, (nodeConnections.get(edge.source) || 0) + 1);
            nodeConnections.set(edge.target, (nodeConnections.get(edge.target) || 0) + 1);
        });
        const connectivityDistribution = Array.from(nodeConnections.values());
        const isolatedNodes = totalNodes - nodeConnections.size;
        // Layer-specific metrics
        const layerMetrics = knowledgeGraph.layers.reduce((acc, layer)=>{
            const layerAvgConfidence = layer.nodes.length > 0 ? layer.nodes.reduce((sum, node)=>sum + node.confidence, 0) / layer.nodes.length : 0;
            const layerAvgImportance = layer.nodes.length > 0 ? layer.nodes.reduce((sum, node)=>sum + node.importance, 0) / layer.nodes.length : 0;
            acc[layer.id] = {
                nodeCount: layer.nodes.length,
                edgeCount: layer.edges.length,
                avgConfidence: layerAvgConfidence,
                avgImportance: layerAvgImportance
            };
            return acc;
        }, {});
        // Temporal data simulation (would come from real data in production)
        const temporalData = Array.from({
            length: 7
        }, (_, i)=>{
            const date = new Date();
            date.setDate(date.getDate() - (6 - i));
            return {
                date: date.toISOString().split("T")[0],
                nodes: Math.floor(totalNodes * (0.7 + Math.random() * 0.3)),
                edges: Math.floor(totalEdges * (0.7 + Math.random() * 0.3)),
                confidence: averageConfidence * (0.8 + Math.random() * 0.4)
            };
        });
        // Centrality scores calculation (simplified)
        const centralityScores = allNodes.slice(0, 10).map((node)=>{
            const degree = nodeConnections.get(node.id) || 0;
            return {
                nodeId: node.id,
                title: node.title,
                degree,
                betweenness: degree * Math.random(),
                closeness: degree > 0 ? 1 / degree : 0
            };
        }).sort((a, b)=>b.degree - a.degree);
        // Graph density and clustering coefficient
        const maxPossibleEdges = totalNodes * (totalNodes - 1) / 2;
        const density = maxPossibleEdges > 0 ? totalEdges / maxPossibleEdges : 0;
        const clusteringCoefficient = Math.random() * 0.5; // Simplified calculation
        return {
            totalNodes,
            totalEdges,
            nodesByType,
            edgesByType,
            averageConfidence,
            averageImportance,
            connectivityDistribution,
            layerMetrics,
            temporalData,
            centralityScores,
            clusteringCoefficient,
            density,
            isolatedNodes
        };
    }, [
        knowledgeGraph
    ]);
    // Prepare chart data
    const nodeTypeChartData = Object.entries(metrics.nodesByType).map(([type, count])=>({
            type,
            count,
            percentage: (count / metrics.totalNodes * 100).toFixed(1)
        }));
    const edgeTypeChartData = Object.entries(metrics.edgesByType).map(([type, count])=>({
            type,
            count,
            percentage: (count / metrics.totalEdges * 100).toFixed(1)
        }));
    const layerComparisonData = Object.entries(metrics.layerMetrics).map(([layerId, data])=>{
        const layer = knowledgeGraph.layers.find((l)=>l.id === layerId);
        return {
            layer: layer?.name || layerId,
            nodes: data.nodeCount,
            edges: data.edgeCount,
            confidence: data.avgConfidence,
            importance: data.avgImportance
        };
    });
    const connectivityHistogram = metrics.connectivityDistribution.reduce((acc, connections)=>{
        const bucket = Math.floor(connections / 5) * 5; // Group by 5s
        const key = `${bucket}-${bucket + 4}`;
        acc[key] = (acc[key] || 0) + 1;
        return acc;
    }, {});
    const connectivityChartData = Object.entries(connectivityHistogram).map(([range, count])=>({
            range,
            count
        }));
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: `knowledge-graph-analytics space-y-6 ${className}`,
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardHeader, {
                                className: "flex flex-row items-center justify-between space-y-0 pb-2",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardTitle, {
                                        className: "text-sm font-medium",
                                        children: "Total Nodes"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Brain, {
                                        className: "h-4 w-4 text-muted-foreground"
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardContent, {
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "text-2xl font-bold",
                                        children: metrics.totalNodes
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                                        className: "text-xs text-muted-foreground",
                                        children: [
                                            metrics.isolatedNodes,
                                            " isolated"
                                        ]
                                    })
                                ]
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardHeader, {
                                className: "flex flex-row items-center justify-between space-y-0 pb-2",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardTitle, {
                                        className: "text-sm font-medium",
                                        children: "Total Edges"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Network, {
                                        className: "h-4 w-4 text-muted-foreground"
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardContent, {
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "text-2xl font-bold",
                                        children: metrics.totalEdges
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                                        className: "text-xs text-muted-foreground",
                                        children: [
                                            (metrics.density * 100).toFixed(1),
                                            "% density"
                                        ]
                                    })
                                ]
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardHeader, {
                                className: "flex flex-row items-center justify-between space-y-0 pb-2",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardTitle, {
                                        className: "text-sm font-medium",
                                        children: "Avg Confidence"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Target, {
                                        className: "h-4 w-4 text-muted-foreground"
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardContent, {
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        className: "text-2xl font-bold",
                                        children: [
                                            (metrics.averageConfidence * 100).toFixed(1),
                                            "%"
                                        ]
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_progress.Progress, {
                                        value: metrics.averageConfidence * 100,
                                        className: "mt-2"
                                    })
                                ]
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardHeader, {
                                className: "flex flex-row items-center justify-between space-y-0 pb-2",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardTitle, {
                                        className: "text-sm font-medium",
                                        children: "Clustering"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Activity, {
                                        className: "h-4 w-4 text-muted-foreground"
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardContent, {
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        className: "text-2xl font-bold",
                                        children: [
                                            (metrics.clusteringCoefficient * 100).toFixed(1),
                                            "%"
                                        ]
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                        className: "text-xs text-muted-foreground",
                                        children: "Coefficient"
                                    })
                                ]
                            })
                        ]
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_tabs.Tabs, {
                defaultValue: "distribution",
                className: "space-y-4",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_tabs.TabsList, {
                        className: "grid w-full grid-cols-4",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_tabs.TabsTrigger, {
                                value: "distribution",
                                children: "Distribution"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_tabs.TabsTrigger, {
                                value: "layers",
                                children: "Layers"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_tabs.TabsTrigger, {
                                value: "temporal",
                                children: "Temporal"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_tabs.TabsTrigger, {
                                value: "centrality",
                                children: "Centrality"
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_tabs.TabsContent, {
                        value: "distribution",
                        className: "space-y-4",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "grid grid-cols-1 lg:grid-cols-2 gap-6",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardHeader, {
                                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardTitle, {
                                                    className: "text-lg",
                                                    children: "Node Type Distribution"
                                                })
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardContent, {
                                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.ResponsiveContainer, {
                                                    width: "100%",
                                                    height: 300,
                                                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_recharts.PieChart, {
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.Pie, {
                                                                data: nodeTypeChartData,
                                                                cx: "50%",
                                                                cy: "50%",
                                                                labelLine: false,
                                                                label: ({ type, percentage })=>`${type} (${percentage}%)`,
                                                                outerRadius: 80,
                                                                fill: "#8884d8",
                                                                dataKey: "count",
                                                                children: nodeTypeChartData.map((entry, index)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.Cell, {
                                                                        fill: COLORS[index % COLORS.length]
                                                                    }, `cell-${index}`))
                                                            }),
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.Tooltip, {})
                                                        ]
                                                    })
                                                })
                                            })
                                        ]
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardHeader, {
                                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardTitle, {
                                                    className: "text-lg",
                                                    children: "Edge Type Distribution"
                                                })
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardContent, {
                                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.ResponsiveContainer, {
                                                    width: "100%",
                                                    height: 300,
                                                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_recharts.BarChart, {
                                                        data: edgeTypeChartData,
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.CartesianGrid, {
                                                                strokeDasharray: "3 3"
                                                            }),
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.XAxis, {
                                                                dataKey: "type"
                                                            }),
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.YAxis, {}),
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.Tooltip, {}),
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.Bar, {
                                                                dataKey: "count",
                                                                fill: "#3b82f6"
                                                            })
                                                        ]
                                                    })
                                                })
                                            })
                                        ]
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardHeader, {
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardTitle, {
                                            className: "text-lg",
                                            children: "Connectivity Distribution"
                                        })
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardContent, {
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.ResponsiveContainer, {
                                            width: "100%",
                                            height: 300,
                                            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_recharts.BarChart, {
                                                data: connectivityChartData,
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.CartesianGrid, {
                                                        strokeDasharray: "3 3"
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.XAxis, {
                                                        dataKey: "range"
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.YAxis, {}),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.Tooltip, {}),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.Bar, {
                                                        dataKey: "count",
                                                        fill: "#10b981"
                                                    })
                                                ]
                                            })
                                        })
                                    })
                                ]
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_tabs.TabsContent, {
                        value: "layers",
                        className: "space-y-4",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardHeader, {
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardTitle, {
                                            className: "text-lg",
                                            children: "Layer Comparison"
                                        })
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardContent, {
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.ResponsiveContainer, {
                                            width: "100%",
                                            height: 400,
                                            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_recharts.BarChart, {
                                                data: layerComparisonData,
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.CartesianGrid, {
                                                        strokeDasharray: "3 3"
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.XAxis, {
                                                        dataKey: "layer"
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.YAxis, {}),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.Tooltip, {}),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.Bar, {
                                                        dataKey: "nodes",
                                                        fill: "#3b82f6",
                                                        name: "Nodes"
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.Bar, {
                                                        dataKey: "edges",
                                                        fill: "#ef4444",
                                                        name: "Edges"
                                                    })
                                                ]
                                            })
                                        })
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "grid grid-cols-1 md:grid-cols-2 gap-4",
                                children: knowledgeGraph.layers.map((layer)=>{
                                    const layerData = metrics.layerMetrics[layer.id];
                                    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardHeader, {
                                                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardTitle, {
                                                    className: "text-base flex items-center gap-2",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                            className: "w-3 h-3 rounded-full",
                                                            style: {
                                                                backgroundColor: layer.color
                                                            }
                                                        }),
                                                        layer.name,
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_badge.Badge, {
                                                            variant: "outline",
                                                            children: layer.type
                                                        })
                                                    ]
                                                })
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardContent, {
                                                className: "space-y-3",
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                        className: "flex justify-between",
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                className: "text-sm text-muted-foreground",
                                                                children: "Nodes:"
                                                            }),
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                className: "font-medium",
                                                                children: layerData.nodeCount
                                                            })
                                                        ]
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                        className: "flex justify-between",
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                className: "text-sm text-muted-foreground",
                                                                children: "Edges:"
                                                            }),
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                className: "font-medium",
                                                                children: layerData.edgeCount
                                                            })
                                                        ]
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                        className: "space-y-1",
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                className: "flex justify-between",
                                                                children: [
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                        className: "text-sm text-muted-foreground",
                                                                        children: "Confidence:"
                                                                    }),
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                                                        className: "font-medium",
                                                                        children: [
                                                                            (layerData.avgConfidence * 100).toFixed(1),
                                                                            "%"
                                                                        ]
                                                                    })
                                                                ]
                                                            }),
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_progress.Progress, {
                                                                value: layerData.avgConfidence * 100
                                                            })
                                                        ]
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                        className: "space-y-1",
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                className: "flex justify-between",
                                                                children: [
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                        className: "text-sm text-muted-foreground",
                                                                        children: "Importance:"
                                                                    }),
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                                                        className: "font-medium",
                                                                        children: [
                                                                            (layerData.avgImportance * 100).toFixed(1),
                                                                            "%"
                                                                        ]
                                                                    })
                                                                ]
                                                            }),
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_progress.Progress, {
                                                                value: layerData.avgImportance * 100
                                                            })
                                                        ]
                                                    })
                                                ]
                                            })
                                        ]
                                    }, layer.id);
                                })
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_tabs.TabsContent, {
                        value: "temporal",
                        className: "space-y-4",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardHeader, {
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardTitle, {
                                            className: "text-lg flex items-center gap-2",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Clock, {
                                                    className: "h-5 w-5"
                                                }),
                                                "Temporal Trends"
                                            ]
                                        })
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardContent, {
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.ResponsiveContainer, {
                                            width: "100%",
                                            height: 400,
                                            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_recharts.LineChart, {
                                                data: metrics.temporalData,
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.CartesianGrid, {
                                                        strokeDasharray: "3 3"
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.XAxis, {
                                                        dataKey: "date"
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.YAxis, {}),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.Tooltip, {}),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.Line, {
                                                        type: "monotone",
                                                        dataKey: "nodes",
                                                        stroke: "#3b82f6",
                                                        name: "Nodes"
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.Line, {
                                                        type: "monotone",
                                                        dataKey: "edges",
                                                        stroke: "#ef4444",
                                                        name: "Edges"
                                                    })
                                                ]
                                            })
                                        })
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardHeader, {
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardTitle, {
                                            className: "text-lg",
                                            children: "Confidence Trend"
                                        })
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardContent, {
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.ResponsiveContainer, {
                                            width: "100%",
                                            height: 300,
                                            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_recharts.AreaChart, {
                                                data: metrics.temporalData,
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.CartesianGrid, {
                                                        strokeDasharray: "3 3"
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.XAxis, {
                                                        dataKey: "date"
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.YAxis, {}),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.Tooltip, {}),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_recharts.Area, {
                                                        type: "monotone",
                                                        dataKey: "confidence",
                                                        stroke: "#10b981",
                                                        fill: "#10b981",
                                                        fillOpacity: 0.3
                                                    })
                                                ]
                                            })
                                        })
                                    })
                                ]
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_tabs.TabsContent, {
                        value: "centrality",
                        className: "space-y-4",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardHeader, {
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardTitle, {
                                        className: "text-lg flex items-center gap-2",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Zap, {
                                                className: "h-5 w-5"
                                            }),
                                            "Node Centrality Analysis"
                                        ]
                                    })
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardContent, {
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "space-y-4",
                                        children: metrics.centralityScores.map((node, index)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                className: "flex items-center justify-between p-3 border rounded-lg",
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                        className: "flex items-center gap-3",
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_badge.Badge, {
                                                                variant: "outline",
                                                                children: [
                                                                    "#",
                                                                    index + 1
                                                                ]
                                                            }),
                                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                children: [
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                        className: "font-medium",
                                                                        children: node.title
                                                                    }),
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                        className: "text-sm text-muted-foreground",
                                                                        children: [
                                                                            "Degree: ",
                                                                            node.degree,
                                                                            " | Betweenness:",
                                                                            " ",
                                                                            node.betweenness.toFixed(2)
                                                                        ]
                                                                    })
                                                                ]
                                                            })
                                                        ]
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                        className: "text-right",
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                className: "text-sm font-medium",
                                                                children: "Centrality Score"
                                                            }),
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_progress.Progress, {
                                                                value: node.degree / Math.max(...metrics.centralityScores.map((n)=>n.degree)) * 100,
                                                                className: "w-24"
                                                            })
                                                        ]
                                                    })
                                                ]
                                            }, node.nodeId))
                                    })
                                })
                            ]
                        })
                    })
                ]
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,
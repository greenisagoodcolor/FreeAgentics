581ad52c52cfa79db05d4d59d40c6ffb
"use client";
"use strict";

/* istanbul ignore next */
function cov_1zwn88zeir() {
  var path = "/Users/matthewmoroney/builds/FreeAgentics/web/components/AgentList.tsx";
  var hash = "493ddff1c4d8c8094751d786a384f13dd57adbda";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewmoroney/builds/FreeAgentics/web/components/AgentList.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 25
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 16
        },
        end: {
          line: 13,
          column: 38
        }
      },
      "5": {
        start: {
          line: 14,
          column: 20
        },
        end: {
          line: 14,
          column: 47
        }
      },
      "6": {
        start: {
          line: 15,
          column: 21
        },
        end: {
          line: 15,
          column: 44
        }
      },
      "7": {
        start: {
          line: 16,
          column: 17
        },
        end: {
          line: 16,
          column: 40
        }
      },
      "8": {
        start: {
          line: 17,
          column: 16
        },
        end: {
          line: 17,
          column: 38
        }
      },
      "9": {
        start: {
          line: 18,
          column: 15
        },
        end: {
          line: 18,
          column: 36
        }
      },
      "10": {
        start: {
          line: 19,
          column: 15
        },
        end: {
          line: 19,
          column: 31
        }
      },
      "11": {
        start: {
          line: 20,
          column: 18
        },
        end: {
          line: 20,
          column: 42
        }
      },
      "12": {
        start: {
          line: 21,
          column: 15
        },
        end: {
          line: 21,
          column: 36
        }
      },
      "13": {
        start: {
          line: 22,
          column: 20
        },
        end: {
          line: 22,
          column: 47
        }
      },
      "14": {
        start: {
          line: 23,
          column: 17
        },
        end: {
          line: 23,
          column: 40
        }
      },
      "15": {
        start: {
          line: 24,
          column: 29
        },
        end: {
          line: 24,
          column: 71
        }
      },
      "16": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 28,
          column: 6
        }
      },
      "17": {
        start: {
          line: 31,
          column: 21
        },
        end: {
          line: 44,
          column: 1
        }
      },
      "18": {
        start: {
          line: 46,
          column: 44
        },
        end: {
          line: 46,
          column: 71
        }
      },
      "19": {
        start: {
          line: 47,
          column: 44
        },
        end: {
          line: 47,
          column: 68
        }
      },
      "20": {
        start: {
          line: 48,
          column: 25
        },
        end: {
          line: 48,
          column: 49
        }
      },
      "21": {
        start: {
          line: 50,
          column: 56
        },
        end: {
          line: 50,
          column: 83
        }
      },
      "22": {
        start: {
          line: 51,
          column: 66
        },
        end: {
          line: 51,
          column: 90
        }
      },
      "23": {
        start: {
          line: 52,
          column: 50
        },
        end: {
          line: 52,
          column: 76
        }
      },
      "24": {
        start: {
          line: 53,
          column: 50
        },
        end: {
          line: 53,
          column: 77
        }
      },
      "25": {
        start: {
          line: 54,
          column: 48
        },
        end: {
          line: 54,
          column: 75
        }
      },
      "26": {
        start: {
          line: 55,
          column: 60
        },
        end: {
          line: 55,
          column: 87
        }
      },
      "27": {
        start: {
          line: 57,
          column: 56
        },
        end: {
          line: 57,
          column: 83
        }
      },
      "28": {
        start: {
          line: 58,
          column: 40
        },
        end: {
          line: 58,
          column: 66
        }
      },
      "29": {
        start: {
          line: 59,
          column: 40
        },
        end: {
          line: 59,
          column: 67
        }
      },
      "30": {
        start: {
          line: 60,
          column: 48
        },
        end: {
          line: 60,
          column: 74
        }
      },
      "31": {
        start: {
          line: 61,
          column: 46
        },
        end: {
          line: 61,
          column: 73
        }
      },
      "32": {
        start: {
          line: 62,
          column: 58
        },
        end: {
          line: 62,
          column: 85
        }
      },
      "33": {
        start: {
          line: 63,
          column: 42
        },
        end: {
          line: 63,
          column: 69
        }
      },
      "34": {
        start: {
          line: 64,
          column: 42
        },
        end: {
          line: 64,
          column: 68
        }
      },
      "35": {
        start: {
          line: 65,
          column: 58
        },
        end: {
          line: 65,
          column: 85
        }
      },
      "36": {
        start: {
          line: 66,
          column: 56
        },
        end: {
          line: 66,
          column: 83
        }
      },
      "37": {
        start: {
          line: 67,
          column: 68
        },
        end: {
          line: 67,
          column: 95
        }
      },
      "38": {
        start: {
          line: 69,
          column: 30
        },
        end: {
          line: 81,
          column: 5
        }
      },
      "39": {
        start: {
          line: 71,
          column: 33
        },
        end: {
          line: 74,
          column: 14
        }
      },
      "40": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 33
        }
      },
      "41": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 23
        }
      },
      "42": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 53
        }
      },
      "43": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 33
        }
      },
      "44": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 34
        }
      },
      "45": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 33
        }
      },
      "46": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 39
        }
      },
      "47": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 36
        }
      },
      "48": {
        start: {
          line: 83,
          column: 32
        },
        end: {
          line: 98,
          column: 5
        }
      },
      "49": {
        start: {
          line: 84,
          column: 31
        },
        end: {
          line: 84,
          column: 33
        }
      },
      "50": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "51": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 61
        }
      },
      "52": {
        start: {
          line: 87,
          column: 51
        },
        end: {
          line: 87,
          column: 59
        }
      },
      "53": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 135
        }
      },
      "54": {
        start: {
          line: 90,
          column: 97
        },
        end: {
          line: 90,
          column: 107
        }
      },
      "55": {
        start: {
          line: 90,
          column: 126
        },
        end: {
          line: 90,
          column: 133
        }
      },
      "56": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 96,
          column: 11
        }
      },
      "57": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 97,
          column: 37
        }
      },
      "58": {
        start: {
          line: 100,
          column: 33
        },
        end: {
          line: 105,
          column: 5
        }
      },
      "59": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 104,
          column: 16
        }
      },
      "60": {
        start: {
          line: 101,
          column: 44
        },
        end: {
          line: 104,
          column: 13
        }
      },
      "61": {
        start: {
          line: 107,
          column: 30
        },
        end: {
          line: 111,
          column: 5
        }
      },
      "62": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "63": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 41
        }
      },
      "64": {
        start: {
          line: 113,
          column: 29
        },
        end: {
          line: 153,
          column: 5
        }
      },
      "65": {
        start: {
          line: 114,
          column: 21
        },
        end: {
          line: 114,
          column: 40
        }
      },
      "66": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 148,
          column: 9
        }
      },
      "67": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 32
        }
      },
      "68": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 33
        }
      },
      "69": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 142,
          column: 13
        }
      },
      "70": {
        start: {
          line: 120,
          column: 28
        },
        end: {
          line: 120,
          column: 48
        }
      },
      "71": {
        start: {
          line: 121,
          column: 35
        },
        end: {
          line: 121,
          column: 60
        }
      },
      "72": {
        start: {
          line: 123,
          column: 36
        },
        end: {
          line: 123,
          column: 71
        }
      },
      "73": {
        start: {
          line: 124,
          column: 16
        },
        end: {
          line: 124,
          column: 52
        }
      },
      "74": {
        start: {
          line: 126,
          column: 41
        },
        end: {
          line: 126,
          column: 147
        }
      },
      "75": {
        start: {
          line: 126,
          column: 84
        },
        end: {
          line: 126,
          column: 146
        }
      },
      "76": {
        start: {
          line: 127,
          column: 16
        },
        end: {
          line: 127,
          column: 62
        }
      },
      "77": {
        start: {
          line: 128,
          column: 16
        },
        end: {
          line: 128,
          column: 88
        }
      },
      "78": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 136,
          column: 17
        }
      },
      "79": {
        start: {
          line: 131,
          column: 41
        },
        end: {
          line: 131,
          column: 96
        }
      },
      "80": {
        start: {
          line: 132,
          column: 37
        },
        end: {
          line: 132,
          column: 61
        }
      },
      "81": {
        start: {
          line: 133,
          column: 20
        },
        end: {
          line: 133,
          column: 133
        }
      },
      "82": {
        start: {
          line: 135,
          column: 20
        },
        end: {
          line: 135,
          column: 49
        }
      },
      "83": {
        start: {
          line: 138,
          column: 16
        },
        end: {
          line: 138,
          column: 69
        }
      },
      "84": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 139,
          column: 46
        }
      },
      "85": {
        start: {
          line: 140,
          column: 16
        },
        end: {
          line: 140,
          column: 45
        }
      },
      "86": {
        start: {
          line: 141,
          column: 16
        },
        end: {
          line: 141,
          column: 51
        }
      },
      "87": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 36
        }
      },
      "88": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 36
        }
      },
      "89": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 42
        }
      },
      "90": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 33
        }
      },
      "91": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 40
        }
      },
      "92": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "93": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 32
        }
      },
      "94": {
        start: {
          line: 155,
          column: 32
        },
        end: {
          line: 177,
          column: 5
        }
      },
      "95": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 32
        }
      },
      "96": {
        start: {
          line: 156,
          column: 25
        },
        end: {
          line: 156,
          column: 32
        }
      },
      "97": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 157,
          column: 29
        }
      },
      "98": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 158,
          column: 29
        }
      },
      "99": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 176,
          column: 9
        }
      },
      "100": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 166,
          column: 15
        }
      },
      "101": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 171,
          column: 20
        }
      },
      "102": {
        start: {
          line: 169,
          column: 16
        },
        end: {
          line: 169,
          column: 45
        }
      },
      "103": {
        start: {
          line: 170,
          column: 16
        },
        end: {
          line: 170,
          column: 36
        }
      },
      "104": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 173,
          column: 108
        }
      },
      "105": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 34
        }
      },
      "106": {
        start: {
          line: 178,
          column: 4
        },
        end: {
          line: 851,
          column: 7
        }
      },
      "107": {
        start: {
          line: 235,
          column: 64
        },
        end: {
          line: 399,
          column: 36
        }
      },
      "108": {
        start: {
          line: 237,
          column: 41
        },
        end: {
          line: 237,
          column: 61
        }
      },
      "109": {
        start: {
          line: 254,
          column: 78
        },
        end: {
          line: 254,
          column: 97
        }
      },
      "110": {
        start: {
          line: 262,
          column: 74
        },
        end: {
          line: 262,
          column: 93
        }
      },
      "111": {
        start: {
          line: 272,
          column: 122
        },
        end: {
          line: 278,
          column: 85
        }
      },
      "112": {
        start: {
          line: 277,
          column: 93
        },
        end: {
          line: 277,
          column: 128
        }
      },
      "113": {
        start: {
          line: 292,
          column: 95
        },
        end: {
          line: 292,
          column: 139
        }
      },
      "114": {
        start: {
          line: 331,
          column: 48
        },
        end: {
          line: 331,
          column: 68
        }
      },
      "115": {
        start: {
          line: 332,
          column: 48
        },
        end: {
          line: 332,
          column: 72
        }
      },
      "116": {
        start: {
          line: 342,
          column: 48
        },
        end: {
          line: 342,
          column: 68
        }
      },
      "117": {
        start: {
          line: 343,
          column: 48
        },
        end: {
          line: 343,
          column: 99
        }
      },
      "118": {
        start: {
          line: 368,
          column: 48
        },
        end: {
          line: 368,
          column: 68
        }
      },
      "119": {
        start: {
          line: 369,
          column: 48
        },
        end: {
          line: 369,
          column: 83
        }
      },
      "120": {
        start: {
          line: 382,
          column: 94
        },
        end: {
          line: 382,
          column: 110
        }
      },
      "121": {
        start: {
          line: 384,
          column: 48
        },
        end: {
          line: 384,
          column: 68
        }
      },
      "122": {
        start: {
          line: 385,
          column: 48
        },
        end: {
          line: 385,
          column: 78
        }
      },
      "123": {
        start: {
          line: 409,
          column: 41
        },
        end: {
          line: 409,
          column: 62
        }
      },
      "124": {
        start: {
          line: 437,
          column: 59
        },
        end: {
          line: 437,
          column: 90
        }
      },
      "125": {
        start: {
          line: 454,
          column: 48
        },
        end: {
          line: 458,
          column: 49
        }
      },
      "126": {
        start: {
          line: 455,
          column: 52
        },
        end: {
          line: 455,
          column: 95
        }
      },
      "127": {
        start: {
          line: 456,
          column: 52
        },
        end: {
          line: 456,
          column: 72
        }
      },
      "128": {
        start: {
          line: 457,
          column: 52
        },
        end: {
          line: 457,
          column: 75
        }
      },
      "129": {
        start: {
          line: 491,
          column: 52
        },
        end: {
          line: 491,
          column: 89
        }
      },
      "130": {
        start: {
          line: 508,
          column: 74
        },
        end: {
          line: 530,
          column: 56
        }
      },
      "131": {
        start: {
          line: 514,
          column: 77
        },
        end: {
          line: 514,
          column: 107
        }
      },
      "132": {
        start: {
          line: 543,
          column: 56
        },
        end: {
          line: 543,
          column: 93
        }
      },
      "133": {
        start: {
          line: 544,
          column: 56
        },
        end: {
          line: 546,
          column: 57
        }
      },
      "134": {
        start: {
          line: 545,
          column: 60
        },
        end: {
          line: 545,
          column: 85
        }
      },
      "135": {
        start: {
          line: 564,
          column: 88
        },
        end: {
          line: 564,
          column: 123
        }
      },
      "136": {
        start: {
          line: 591,
          column: 80
        },
        end: {
          line: 591,
          column: 121
        }
      },
      "137": {
        start: {
          line: 631,
          column: 20
        },
        end: {
          line: 634,
          column: 21
        }
      },
      "138": {
        start: {
          line: 632,
          column: 24
        },
        end: {
          line: 632,
          column: 44
        }
      },
      "139": {
        start: {
          line: 633,
          column: 24
        },
        end: {
          line: 633,
          column: 45
        }
      },
      "140": {
        start: {
          line: 635,
          column: 20
        },
        end: {
          line: 635,
          column: 48
        }
      },
      "141": {
        start: {
          line: 675,
          column: 56
        },
        end: {
          line: 675,
          column: 92
        }
      },
      "142": {
        start: {
          line: 676,
          column: 56
        },
        end: {
          line: 678,
          column: 57
        }
      },
      "143": {
        start: {
          line: 677,
          column: 60
        },
        end: {
          line: 677,
          column: 84
        }
      },
      "144": {
        start: {
          line: 695,
          column: 84
        },
        end: {
          line: 695,
          column: 118
        }
      },
      "145": {
        start: {
          line: 714,
          column: 76
        },
        end: {
          line: 714,
          column: 116
        }
      },
      "146": {
        start: {
          line: 741,
          column: 72
        },
        end: {
          line: 741,
          column: 92
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 25,
            column: 9
          },
          end: {
            line: 25,
            column: 33
          }
        },
        loc: {
          start: {
            line: 25,
            column: 39
          },
          end: {
            line: 29,
            column: 1
          }
        },
        line: 25
      },
      "2": {
        name: "AgentList",
        decl: {
          start: {
            line: 45,
            column: 9
          },
          end: {
            line: 45,
            column: 18
          }
        },
        loc: {
          start: {
            line: 45,
            column: 264
          },
          end: {
            line: 852,
            column: 1
          }
        },
        line: 45
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 69,
            column: 30
          },
          end: {
            line: 69,
            column: 31
          }
        },
        loc: {
          start: {
            line: 69,
            column: 34
          },
          end: {
            line: 81,
            column: 5
          }
        },
        line: 69
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 71,
            column: 47
          },
          end: {
            line: 71,
            column: 48
          }
        },
        loc: {
          start: {
            line: 71,
            column: 61
          },
          end: {
            line: 74,
            column: 9
          }
        },
        line: 71
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 83,
            column: 32
          },
          end: {
            line: 83,
            column: 33
          }
        },
        loc: {
          start: {
            line: 83,
            column: 36
          },
          end: {
            line: 98,
            column: 5
          }
        },
        line: 83
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 87,
            column: 42
          },
          end: {
            line: 87,
            column: 43
          }
        },
        loc: {
          start: {
            line: 87,
            column: 51
          },
          end: {
            line: 87,
            column: 59
          }
        },
        line: 87
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 90,
            column: 78
          },
          end: {
            line: 90,
            column: 79
          }
        },
        loc: {
          start: {
            line: 90,
            column: 97
          },
          end: {
            line: 90,
            column: 107
          }
        },
        line: 90
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 90,
            column: 113
          },
          end: {
            line: 90,
            column: 114
          }
        },
        loc: {
          start: {
            line: 90,
            column: 126
          },
          end: {
            line: 90,
            column: 133
          }
        },
        line: 90
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 100,
            column: 33
          },
          end: {
            line: 100,
            column: 34
          }
        },
        loc: {
          start: {
            line: 100,
            column: 44
          },
          end: {
            line: 105,
            column: 5
          }
        },
        line: 100
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 101,
            column: 35
          },
          end: {
            line: 101,
            column: 36
          }
        },
        loc: {
          start: {
            line: 101,
            column: 44
          },
          end: {
            line: 104,
            column: 13
          }
        },
        line: 101
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 107,
            column: 30
          },
          end: {
            line: 107,
            column: 31
          }
        },
        loc: {
          start: {
            line: 107,
            column: 34
          },
          end: {
            line: 111,
            column: 5
          }
        },
        line: 107
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 113,
            column: 29
          },
          end: {
            line: 113,
            column: 30
          }
        },
        loc: {
          start: {
            line: 113,
            column: 40
          },
          end: {
            line: 153,
            column: 5
          }
        },
        line: 113
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 126,
            column: 76
          },
          end: {
            line: 126,
            column: 77
          }
        },
        loc: {
          start: {
            line: 126,
            column: 84
          },
          end: {
            line: 126,
            column: 146
          }
        },
        line: 126
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 155,
            column: 32
          },
          end: {
            line: 155,
            column: 33
          }
        },
        loc: {
          start: {
            line: 155,
            column: 36
          },
          end: {
            line: 177,
            column: 5
          }
        },
        line: 155
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 168,
            column: 23
          },
          end: {
            line: 168,
            column: 24
          }
        },
        loc: {
          start: {
            line: 168,
            column: 27
          },
          end: {
            line: 171,
            column: 13
          }
        },
        line: 168
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 235,
            column: 41
          },
          end: {
            line: 235,
            column: 42
          }
        },
        loc: {
          start: {
            line: 235,
            column: 64
          },
          end: {
            line: 399,
            column: 36
          }
        },
        line: 235
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 237,
            column: 37
          },
          end: {
            line: 237,
            column: 38
          }
        },
        loc: {
          start: {
            line: 237,
            column: 41
          },
          end: {
            line: 237,
            column: 61
          }
        },
        line: 237
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 254,
            column: 73
          },
          end: {
            line: 254,
            column: 74
          }
        },
        loc: {
          start: {
            line: 254,
            column: 78
          },
          end: {
            line: 254,
            column: 97
          }
        },
        line: 254
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 262,
            column: 69
          },
          end: {
            line: 262,
            column: 70
          }
        },
        loc: {
          start: {
            line: 262,
            column: 74
          },
          end: {
            line: 262,
            column: 93
          }
        },
        line: 262
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 272,
            column: 99
          },
          end: {
            line: 272,
            column: 100
          }
        },
        loc: {
          start: {
            line: 272,
            column: 122
          },
          end: {
            line: 278,
            column: 85
          }
        },
        line: 272
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 277,
            column: 89
          },
          end: {
            line: 277,
            column: 90
          }
        },
        loc: {
          start: {
            line: 277,
            column: 93
          },
          end: {
            line: 277,
            column: 128
          }
        },
        line: 277
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 292,
            column: 90
          },
          end: {
            line: 292,
            column: 91
          }
        },
        loc: {
          start: {
            line: 292,
            column: 95
          },
          end: {
            line: 292,
            column: 139
          }
        },
        line: 292
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 330,
            column: 53
          },
          end: {
            line: 330,
            column: 54
          }
        },
        loc: {
          start: {
            line: 330,
            column: 58
          },
          end: {
            line: 333,
            column: 45
          }
        },
        line: 330
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 341,
            column: 53
          },
          end: {
            line: 341,
            column: 54
          }
        },
        loc: {
          start: {
            line: 341,
            column: 58
          },
          end: {
            line: 344,
            column: 45
          }
        },
        line: 341
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 367,
            column: 53
          },
          end: {
            line: 367,
            column: 54
          }
        },
        loc: {
          start: {
            line: 367,
            column: 58
          },
          end: {
            line: 370,
            column: 45
          }
        },
        line: 367
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 382,
            column: 89
          },
          end: {
            line: 382,
            column: 90
          }
        },
        loc: {
          start: {
            line: 382,
            column: 94
          },
          end: {
            line: 382,
            column: 110
          }
        },
        line: 382
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 383,
            column: 53
          },
          end: {
            line: 383,
            column: 54
          }
        },
        loc: {
          start: {
            line: 383,
            column: 58
          },
          end: {
            line: 386,
            column: 45
          }
        },
        line: 383
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 409,
            column: 37
          },
          end: {
            line: 409,
            column: 38
          }
        },
        loc: {
          start: {
            line: 409,
            column: 41
          },
          end: {
            line: 409,
            column: 62
          }
        },
        line: 409
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 437,
            column: 54
          },
          end: {
            line: 437,
            column: 55
          }
        },
        loc: {
          start: {
            line: 437,
            column: 59
          },
          end: {
            line: 437,
            column: 90
          }
        },
        line: 437
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 453,
            column: 53
          },
          end: {
            line: 453,
            column: 54
          }
        },
        loc: {
          start: {
            line: 453,
            column: 57
          },
          end: {
            line: 459,
            column: 45
          }
        },
        line: 453
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 490,
            column: 65
          },
          end: {
            line: 490,
            column: 66
          }
        },
        loc: {
          start: {
            line: 490,
            column: 76
          },
          end: {
            line: 492,
            column: 49
          }
        },
        line: 490
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 508,
            column: 51
          },
          end: {
            line: 508,
            column: 52
          }
        },
        loc: {
          start: {
            line: 508,
            column: 74
          },
          end: {
            line: 530,
            column: 56
          }
        },
        line: 508
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 514,
            column: 73
          },
          end: {
            line: 514,
            column: 74
          }
        },
        loc: {
          start: {
            line: 514,
            column: 77
          },
          end: {
            line: 514,
            column: 107
          }
        },
        line: 514
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 542,
            column: 69
          },
          end: {
            line: 542,
            column: 70
          }
        },
        loc: {
          start: {
            line: 542,
            column: 80
          },
          end: {
            line: 547,
            column: 53
          }
        },
        line: 542
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 564,
            column: 77
          },
          end: {
            line: 564,
            column: 78
          }
        },
        loc: {
          start: {
            line: 564,
            column: 88
          },
          end: {
            line: 564,
            column: 123
          }
        },
        line: 564
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 591,
            column: 69
          },
          end: {
            line: 591,
            column: 70
          }
        },
        loc: {
          start: {
            line: 591,
            column: 80
          },
          end: {
            line: 591,
            column: 121
          }
        },
        line: 591
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 630,
            column: 30
          },
          end: {
            line: 630,
            column: 31
          }
        },
        loc: {
          start: {
            line: 630,
            column: 38
          },
          end: {
            line: 636,
            column: 17
          }
        },
        line: 630
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 674,
            column: 69
          },
          end: {
            line: 674,
            column: 70
          }
        },
        loc: {
          start: {
            line: 674,
            column: 80
          },
          end: {
            line: 679,
            column: 53
          }
        },
        line: 674
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 695,
            column: 73
          },
          end: {
            line: 695,
            column: 74
          }
        },
        loc: {
          start: {
            line: 695,
            column: 84
          },
          end: {
            line: 695,
            column: 118
          }
        },
        line: 695
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 714,
            column: 65
          },
          end: {
            line: 714,
            column: 66
          }
        },
        loc: {
          start: {
            line: 714,
            column: 76
          },
          end: {
            line: 714,
            column: 116
          }
        },
        line: 714
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 741,
            column: 63
          },
          end: {
            line: 741,
            column: 64
          }
        },
        loc: {
          start: {
            line: 741,
            column: 72
          },
          end: {
            line: 741,
            column: 92
          }
        },
        line: 741
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 11
          },
          end: {
            line: 28,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 26,
            column: 35
          },
          end: {
            line: 26,
            column: 38
          }
        }, {
          start: {
            line: 26,
            column: 41
          },
          end: {
            line: 28,
            column: 5
          }
        }],
        line: 26
      },
      "1": {
        loc: {
          start: {
            line: 26,
            column: 11
          },
          end: {
            line: 26,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 11
          },
          end: {
            line: 26,
            column: 14
          }
        }, {
          start: {
            line: 26,
            column: 18
          },
          end: {
            line: 26,
            column: 32
          }
        }],
        line: 26
      },
      "2": {
        loc: {
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        }, {
          start: {
            line: 88,
            column: 15
          },
          end: {
            line: 91,
            column: 9
          }
        }],
        line: 85
      },
      "3": {
        loc: {
          start: {
            line: 94,
            column: 28
          },
          end: {
            line: 94,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 28
          },
          end: {
            line: 94,
            column: 43
          }
        }, {
          start: {
            line: 94,
            column: 47
          },
          end: {
            line: 94,
            column: 61
          }
        }],
        line: 94
      },
      "4": {
        loc: {
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "5": {
        loc: {
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 148,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 148,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "6": {
        loc: {
          start: {
            line: 126,
            column: 84
          },
          end: {
            line: 126,
            column: 146
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 126,
            column: 84
          },
          end: {
            line: 126,
            column: 117
          }
        }, {
          start: {
            line: 126,
            column: 121
          },
          end: {
            line: 126,
            column: 146
          }
        }],
        line: 126
      },
      "7": {
        loc: {
          start: {
            line: 130,
            column: 16
          },
          end: {
            line: 136,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 16
          },
          end: {
            line: 136,
            column: 17
          }
        }, {
          start: {
            line: 134,
            column: 23
          },
          end: {
            line: 136,
            column: 17
          }
        }],
        line: 130
      },
      "8": {
        loc: {
          start: {
            line: 133,
            column: 42
          },
          end: {
            line: 133,
            column: 131
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 133,
            column: 42
          },
          end: {
            line: 133,
            column: 59
          }
        }, {
          start: {
            line: 133,
            column: 63
          },
          end: {
            line: 133,
            column: 98
          }
        }, {
          start: {
            line: 133,
            column: 102
          },
          end: {
            line: 133,
            column: 131
          }
        }],
        line: 133
      },
      "9": {
        loc: {
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "10": {
        loc: {
          start: {
            line: 156,
            column: 8
          },
          end: {
            line: 156,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 8
          },
          end: {
            line: 156,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 156
      },
      "11": {
        loc: {
          start: {
            line: 163,
            column: 32
          },
          end: {
            line: 163,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 163,
            column: 32
          },
          end: {
            line: 163,
            column: 46
          }
        }, {
          start: {
            line: 163,
            column: 50
          },
          end: {
            line: 163,
            column: 69
          }
        }],
        line: 163
      },
      "12": {
        loc: {
          start: {
            line: 164,
            column: 31
          },
          end: {
            line: 164,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 164,
            column: 31
          },
          end: {
            line: 164,
            column: 45
          }
        }, {
          start: {
            line: 164,
            column: 49
          },
          end: {
            line: 164,
            column: 62
          }
        }, {
          start: {
            line: 164,
            column: 66
          },
          end: {
            line: 164,
            column: 84
          }
        }],
        line: 164
      },
      "13": {
        loc: {
          start: {
            line: 165,
            column: 37
          },
          end: {
            line: 165,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 37
          },
          end: {
            line: 165,
            column: 56
          }
        }, {
          start: {
            line: 165,
            column: 60
          },
          end: {
            line: 165,
            column: 84
          }
        }],
        line: 165
      },
      "14": {
        loc: {
          start: {
            line: 173,
            column: 27
          },
          end: {
            line: 173,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 173,
            column: 52
          },
          end: {
            line: 173,
            column: 65
          }
        }, {
          start: {
            line: 173,
            column: 68
          },
          end: {
            line: 173,
            column: 106
          }
        }],
        line: 173
      },
      "15": {
        loc: {
          start: {
            line: 236,
            column: 97
          },
          end: {
            line: 236,
            column: 193
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 236,
            column: 130
          },
          end: {
            line: 236,
            column: 160
          }
        }, {
          start: {
            line: 236,
            column: 163
          },
          end: {
            line: 236,
            column: 193
          }
        }],
        line: 236
      },
      "16": {
        loc: {
          start: {
            line: 273,
            column: 167
          },
          end: {
            line: 273,
            column: 231
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 273,
            column: 191
          },
          end: {
            line: 273,
            column: 226
          }
        }, {
          start: {
            line: 273,
            column: 229
          },
          end: {
            line: 273,
            column: 231
          }
        }],
        line: 273
      },
      "17": {
        loc: {
          start: {
            line: 313,
            column: 87
          },
          end: {
            line: 313,
            column: 141
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 313,
            column: 111
          },
          end: {
            line: 313,
            column: 125
          }
        }, {
          start: {
            line: 313,
            column: 128
          },
          end: {
            line: 313,
            column: 141
          }
        }],
        line: 313
      },
      "18": {
        loc: {
          start: {
            line: 314,
            column: 59
          },
          end: {
            line: 314,
            column: 123
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 314,
            column: 83
          },
          end: {
            line: 314,
            column: 101
          }
        }, {
          start: {
            line: 314,
            column: 104
          },
          end: {
            line: 314,
            column: 123
          }
        }],
        line: 314
      },
      "19": {
        loc: {
          start: {
            line: 317,
            column: 87
          },
          end: {
            line: 317,
            column: 140
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 317,
            column: 110
          },
          end: {
            line: 317,
            column: 124
          }
        }, {
          start: {
            line: 317,
            column: 127
          },
          end: {
            line: 317,
            column: 140
          }
        }],
        line: 317
      },
      "20": {
        loc: {
          start: {
            line: 318,
            column: 59
          },
          end: {
            line: 318,
            column: 123
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 318,
            column: 82
          },
          end: {
            line: 318,
            column: 99
          }
        }, {
          start: {
            line: 318,
            column: 102
          },
          end: {
            line: 318,
            column: 123
          }
        }],
        line: 318
      },
      "21": {
        loc: {
          start: {
            line: 345,
            column: 58
          },
          end: {
            line: 345,
            column: 244
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 345,
            column: 82
          },
          end: {
            line: 345,
            column: 163
          }
        }, {
          start: {
            line: 345,
            column: 166
          },
          end: {
            line: 345,
            column: 244
          }
        }],
        line: 345
      },
      "22": {
        loc: {
          start: {
            line: 346,
            column: 54
          },
          end: {
            line: 362,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 346,
            column: 92
          },
          end: {
            line: 354,
            column: 46
          }
        }, {
          start: {
            line: 354,
            column: 63
          },
          end: {
            line: 362,
            column: 46
          }
        }],
        line: 346
      },
      "23": {
        loc: {
          start: {
            line: 364,
            column: 40
          },
          end: {
            line: 395,
            column: 42
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 364,
            column: 77
          },
          end: {
            line: 379,
            column: 42
          }
        }, {
          start: {
            line: 379,
            column: 59
          },
          end: {
            line: 395,
            column: 42
          }
        }],
        line: 364
      },
      "24": {
        loc: {
          start: {
            line: 382,
            column: 54
          },
          end: {
            line: 382,
            column: 111
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 382,
            column: 54
          },
          end: {
            line: 382,
            column: 73
          }
        }, {
          start: {
            line: 382,
            column: 77
          },
          end: {
            line: 382,
            column: 111
          }
        }],
        line: 382
      },
      "25": {
        loc: {
          start: {
            line: 454,
            column: 48
          },
          end: {
            line: 458,
            column: 49
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 454,
            column: 48
          },
          end: {
            line: 458,
            column: 49
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 454
      },
      "26": {
        loc: {
          start: {
            line: 501,
            column: 32
          },
          end: {
            line: 532,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 501,
            column: 32
          },
          end: {
            line: 501,
            column: 48
          }
        }, {
          start: {
            line: 501,
            column: 66
          },
          end: {
            line: 532,
            column: 34
          }
        }],
        line: 501
      },
      "27": {
        loc: {
          start: {
            line: 513,
            column: 65
          },
          end: {
            line: 513,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 513,
            column: 65
          },
          end: {
            line: 513,
            column: 98
          }
        }, {
          start: {
            line: 513,
            column: 102
          },
          end: {
            line: 513,
            column: 107
          }
        }],
        line: 513
      },
      "28": {
        loc: {
          start: {
            line: 544,
            column: 56
          },
          end: {
            line: 546,
            column: 57
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 544,
            column: 56
          },
          end: {
            line: 546,
            column: 57
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 544
      },
      "29": {
        loc: {
          start: {
            line: 555,
            column: 40
          },
          end: {
            line: 584,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 555,
            column: 40
          },
          end: {
            line: 555,
            column: 55
          }
        }, {
          start: {
            line: 555,
            column: 73
          },
          end: {
            line: 584,
            column: 42
          }
        }],
        line: 555
      },
      "30": {
        loc: {
          start: {
            line: 579,
            column: 48
          },
          end: {
            line: 582,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 579,
            column: 48
          },
          end: {
            line: 579,
            column: 62
          }
        }, {
          start: {
            line: 579,
            column: 80
          },
          end: {
            line: 582,
            column: 50
          }
        }],
        line: 579
      },
      "31": {
        loc: {
          start: {
            line: 614,
            column: 46
          },
          end: {
            line: 614,
            column: 133
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 614,
            column: 46
          },
          end: {
            line: 614,
            column: 62
          }
        }, {
          start: {
            line: 614,
            column: 66
          },
          end: {
            line: 614,
            column: 133
          }
        }],
        line: 614
      },
      "32": {
        loc: {
          start: {
            line: 631,
            column: 20
          },
          end: {
            line: 634,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 631,
            column: 20
          },
          end: {
            line: 634,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 631
      },
      "33": {
        loc: {
          start: {
            line: 647,
            column: 32
          },
          end: {
            line: 664,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 647,
            column: 32
          },
          end: {
            line: 647,
            column: 42
          }
        }, {
          start: {
            line: 647,
            column: 60
          },
          end: {
            line: 664,
            column: 34
          }
        }],
        line: 647
      },
      "34": {
        loc: {
          start: {
            line: 665,
            column: 32
          },
          end: {
            line: 705,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 665,
            column: 32
          },
          end: {
            line: 665,
            column: 51
          }
        }, {
          start: {
            line: 665,
            column: 69
          },
          end: {
            line: 705,
            column: 34
          }
        }],
        line: 665
      },
      "35": {
        loc: {
          start: {
            line: 676,
            column: 56
          },
          end: {
            line: 678,
            column: 57
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 676,
            column: 56
          },
          end: {
            line: 678,
            column: 57
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 676
      },
      "36": {
        loc: {
          start: {
            line: 687,
            column: 40
          },
          end: {
            line: 703,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 687,
            column: 40
          },
          end: {
            line: 687,
            column: 54
          }
        }, {
          start: {
            line: 687,
            column: 72
          },
          end: {
            line: 703,
            column: 42
          }
        }],
        line: 687
      },
      "37": {
        loc: {
          start: {
            line: 719,
            column: 59
          },
          end: {
            line: 719,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 719,
            column: 87
          },
          end: {
            line: 719,
            column: 110
          }
        }, {
          start: {
            line: 719,
            column: 113
          },
          end: {
            line: 719,
            column: 115
          }
        }],
        line: 719
      },
      "38": {
        loc: {
          start: {
            line: 722,
            column: 52
          },
          end: {
            line: 725,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 722,
            column: 52
          },
          end: {
            line: 722,
            column: 77
          }
        }, {
          start: {
            line: 722,
            column: 95
          },
          end: {
            line: 725,
            column: 54
          }
        }],
        line: 722
      },
      "39": {
        loc: {
          start: {
            line: 743,
            column: 52
          },
          end: {
            line: 755,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 743,
            column: 52
          },
          end: {
            line: 743,
            column: 71
          }
        }, {
          start: {
            line: 743,
            column: 89
          },
          end: {
            line: 755,
            column: 54
          }
        }],
        line: 743
      },
      "40": {
        loc: {
          start: {
            line: 800,
            column: 32
          },
          end: {
            line: 812,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 800,
            column: 32
          },
          end: {
            line: 800,
            column: 43
          }
        }, {
          start: {
            line: 800,
            column: 61
          },
          end: {
            line: 812,
            column: 34
          }
        }],
        line: 800
      },
      "41": {
        loc: {
          start: {
            line: 826,
            column: 46
          },
          end: {
            line: 826,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 826,
            column: 46
          },
          end: {
            line: 826,
            column: 57
          }
        }, {
          start: {
            line: 826,
            column: 61
          },
          end: {
            line: 826,
            column: 72
          }
        }],
        line: 826
      },
      "42": {
        loc: {
          start: {
            line: 827,
            column: 46
          },
          end: {
            line: 843,
            column: 38
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 827,
            column: 74
          },
          end: {
            line: 835,
            column: 38
          }
        }, {
          start: {
            line: 835,
            column: 55
          },
          end: {
            line: 843,
            column: 38
          }
        }],
        line: 827
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matthewmoroney/builds/FreeAgentics/web/components/AgentList.tsx"],
      sourcesContent: ["\"use client\";\nimport { Button } from \"@/components/ui/button\";\nimport type React from \"react\";\n\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport type { Agent } from \"@/lib/types\";\nimport type { LLMSettings } from \"@/lib/llm-settings\";\nimport {\n  Plus,\n  Trash,\n  UserPlus,\n  UserMinus,\n  Power,\n  PowerOff,\n  Download,\n  Upload,\n  AlertCircle,\n} from \"lucide-react\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogFooter,\n  DialogClose,\n} from \"@/components/ui/dialog\";\nimport { Input } from \"@/components/ui/input\";\nimport { useState, useRef } from \"react\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Label } from \"@/components/ui/label\";\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\nimport { Spinner } from \"@/components/ui/spinner\";\nimport JSZip from \"jszip\";\n\ninterface AgentListProps {\n  agents: Agent[];\n  selectedAgent: Agent | null;\n  onSelectAgent: (agent: Agent) => void;\n  onCreateAgent: () => void;\n  onCreateAgentWithName: (name: string) => void;\n  onDeleteAgent: (agentId: string) => void;\n  onAddToConversation: (agentId: string) => void;\n  onRemoveFromConversation: (agentId: string) => void;\n  onUpdateAgentColor: (agentId: string, color: string) => void;\n  onToggleAutonomy: (agentId: string, enabled: boolean) => void;\n  onExportAgents: (\n    agentIds: string[],\n    options: {\n      includeSettings: boolean;\n      includeApiKeys: boolean;\n      includeConversations: boolean; // New option\n    },\n  ) => void;\n  onImportAgents: (\n    file: File,\n    options: {\n      mode: \"replace\" | \"new\" | \"merge\" | \"settings-only\";\n      importSettings: boolean;\n      importApiKeys: boolean;\n      importConversations: boolean; // New option\n    },\n  ) => void;\n  activeConversation: boolean;\n  llmSettings?: LLMSettings;\n}\n\n// Predefined color palette\nconst colorPalette = [\n  \"#4f46e5\", // indigo\n  \"#10b981\", // emerald\n  \"#ef4444\", // red\n  \"#f59e0b\", // amber\n  \"#6366f1\", // violet\n  \"#ec4899\", // pink\n  \"#8b5cf6\", // purple\n  \"#06b6d4\", // cyan\n  \"#84cc16\", // lime\n  \"#f97316\", // orange\n  \"#14b8a6\", // teal\n  \"#8b5cf6\", // purple\n];\n\nexport default function AgentList({\n  agents,\n  selectedAgent,\n  onSelectAgent,\n  onCreateAgent,\n  onCreateAgentWithName,\n  onDeleteAgent,\n  onAddToConversation,\n  onRemoveFromConversation,\n  onUpdateAgentColor,\n  onToggleAutonomy,\n  onExportAgents,\n  onImportAgents,\n  activeConversation,\n  llmSettings,\n}: AgentListProps) {\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [newAgentName, setNewAgentName] = useState(\"\");\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  // State for export dialog\n  const [isExportDialogOpen, setIsExportDialogOpen] = useState(false);\n  const [selectedAgentsForExport, setSelectedAgentsForExport] = useState<\n    Record<string, boolean>\n  >({});\n  const [exportAllAgents, setExportAllAgents] = useState(true);\n  const [includeSettings, setIncludeSettings] = useState(false);\n  const [includeApiKeys, setIncludeApiKeys] = useState(false);\n  const [includeConversations, setIncludeConversations] = useState(false); // New state for conversations\n\n  // State for import dialog\n  const [isImportDialogOpen, setIsImportDialogOpen] = useState(false);\n  const [importFile, setImportFile] = useState<File | null>(null);\n  const [importMode, setImportMode] = useState<\n    \"replace\" | \"new\" | \"merge\" | \"settings-only\"\n  >(\"new\");\n  const [importSettings, setImportSettings] = useState(true);\n  const [importApiKeys, setImportApiKeys] = useState(false);\n  const [importConversations, setImportConversations] = useState(false); // New state for conversations\n  const [isImporting, setIsImporting] = useState(false);\n  const [importError, setImportError] = useState<string | null>(null);\n  const [hasSettingsInImport, setHasSettingsInImport] = useState(false);\n  const [hasApiKeysInImport, setHasApiKeysInImport] = useState(false);\n  const [hasConversationsInImport, setHasConversationsInImport] =\n    useState(false); // New state for conversations\n\n  // Handle export dialog open\n  const handleExportClick = () => {\n    // Initialize with all agents selected\n    const initialSelection = agents.reduce(\n      (acc, agent) => {\n        acc[agent.id] = true;\n        return acc;\n      },\n      {} as Record<string, boolean>,\n    );\n    setSelectedAgentsForExport(initialSelection);\n    setExportAllAgents(true);\n    setIncludeSettings(false);\n    setIncludeApiKeys(false);\n    setIncludeConversations(false); // Initialize conversation export option\n    setIsExportDialogOpen(true);\n  };\n\n  // Handle export confirmation\n  const handleExportConfirm = () => {\n    let agentIdsToExport: string[] = [];\n\n    if (exportAllAgents) {\n      // Export all agents\n      agentIdsToExport = agents.map((agent) => agent.id);\n    } else {\n      // Export only selected agents\n      agentIdsToExport = Object.entries(selectedAgentsForExport)\n        .filter(([_, isSelected]) => isSelected)\n        .map(([agentId]) => agentId);\n    }\n\n    onExportAgents(agentIdsToExport, {\n      includeSettings,\n      includeApiKeys: includeSettings && includeApiKeys,\n      includeConversations, // Pass the new option\n    });\n    setIsExportDialogOpen(false);\n  };\n\n  // Toggle selection of an agent for export\n  const toggleAgentSelection = (agentId: string) => {\n    setSelectedAgentsForExport((prev) => ({\n      ...prev,\n      [agentId]: !prev[agentId],\n    }));\n  };\n\n  // Handle import button click\n  const handleImportClick = () => {\n    if (fileInputRef.current) {\n      fileInputRef.current.click();\n    }\n  };\n\n  // Handle file selection\n  const handleFileChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      setImportFile(file);\n      setImportError(null);\n\n      // Check if the file contains settings and conversations\n      try {\n        const zip = new JSZip();\n        const zipContent = await zip.loadAsync(file);\n\n        // Check if settings.json exists in the zip\n        const hasSettings = !!zipContent.files[\"settings.json\"];\n        setHasSettingsInImport(hasSettings);\n\n        // Check if conversations folder exists in the zip\n        const hasConversations = Object.keys(zipContent.files).some(\n          (path) =>\n            path.startsWith(\"conversations/\") && path !== \"conversations/\",\n        );\n        setHasConversationsInImport(hasConversations);\n        console.log(\"Import file check - Has conversations:\", hasConversations);\n\n        // If settings exist, check if they contain API keys\n        if (hasSettings) {\n          const settingsJSON =\n            await zipContent.files[\"settings.json\"].async(\"string\");\n          const settings = JSON.parse(settingsJSON);\n          setHasApiKeysInImport(\n            !!settings.apiKey &&\n              typeof settings.apiKey === \"string\" &&\n              settings.apiKey.trim() !== \"\",\n          );\n        } else {\n          setHasApiKeysInImport(false);\n        }\n      } catch (error) {\n        console.error(\"Error checking zip contents:\", error);\n        setHasSettingsInImport(false);\n        setHasApiKeysInImport(false);\n        setHasConversationsInImport(false);\n      }\n\n      setImportSettings(true);\n      setImportApiKeys(false);\n      setImportConversations(false); // Initialize conversation import option\n      setImportMode(\"new\");\n      setIsImportDialogOpen(true);\n    }\n\n    // Reset the input so the same file can be selected again\n    if (e.target) {\n      e.target.value = \"\";\n    }\n  };\n\n  // Handle import confirmation\n  const handleImportConfirm = () => {\n    if (!importFile) return;\n\n    setIsImporting(true);\n    setImportError(null);\n\n    try {\n      // Pass the file and import options to the parent component\n      onImportAgents(importFile, {\n        mode: importMode,\n        importSettings: importSettings && hasSettingsInImport,\n        importApiKeys: importSettings && importApiKeys && hasApiKeysInImport,\n        importConversations: importConversations && hasConversationsInImport, // Pass the new option\n      });\n\n      // Close the dialog after a short delay to allow the toast to show\n      setTimeout(() => {\n        setIsImportDialogOpen(false);\n        setImportFile(null);\n      }, 500);\n    } catch (error) {\n      setImportError(\n        error instanceof Error\n          ? error.message\n          : \"Unknown error occurred during import\",\n      );\n    } finally {\n      setIsImporting(false);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      <div className=\"p-4 border-b border-border\">\n        <div className=\"flex justify-between items-center\">\n          <h2 className=\"text-xl font-bold text-white\">Agents</h2>\n          <div className=\"flex gap-2\">\n            <Button\n              onClick={handleImportClick}\n              size=\"sm\"\n              variant=\"outline\"\n              className=\"bg-purple-900/50 border-purple-500 text-white hover:bg-purple-800 hover:text-white\"\n            >\n              <Upload size={16} className=\"mr-1\" />\n              Import\n            </Button>\n            <Button\n              onClick={handleExportClick}\n              size=\"sm\"\n              variant=\"outline\"\n              className=\"bg-purple-900/50 border-purple-500 text-white hover:bg-purple-800 hover:text-white\"\n            >\n              <Download size={16} className=\"mr-1\" />\n              Export\n            </Button>\n\n            {/* Hidden file input */}\n            <input\n              type=\"file\"\n              ref={fileInputRef}\n              onChange={handleFileChange}\n              accept=\".zip\"\n              className=\"hidden\"\n            />\n          </div>\n        </div>\n      </div>\n\n      <ScrollArea className=\"flex-1 p-4\">\n        <div className=\"space-y-2\">\n          {agents.map((agent) => (\n            <div\n              key={agent.id}\n              className={`p-3 rounded-md border cursor-pointer transition-colors ${\n                selectedAgent?.id === agent.id\n                  ? \"border-primary bg-primary/10\"\n                  : \"border-border hover:bg-muted\"\n              }`}\n              onClick={() => onSelectAgent(agent)}\n            >\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <Popover>\n                    <PopoverTrigger asChild>\n                      <div\n                        className=\"w-4 h-4 rounded-full cursor-pointer hover:ring-2 hover:ring-offset-2 hover:ring-primary transition-all\"\n                        style={{ backgroundColor: agent.color }}\n                        onClick={(e) => e.stopPropagation()}\n                        title=\"Change agent color\"\n                      />\n                    </PopoverTrigger>\n                    <PopoverContent\n                      className=\"w-64\"\n                      align=\"start\"\n                      side=\"right\"\n                      onClick={(e) => e.stopPropagation()}\n                    >\n                      <div className=\"space-y-2\">\n                        <h4 className=\"font-medium text-sm\">\n                          Select agent color\n                        </h4>\n                        <div className=\"grid grid-cols-6 gap-2\">\n                          {colorPalette.map((color) => (\n                            <div\n                              key={color}\n                              className={`w-6 h-6 rounded-full cursor-pointer hover:scale-110 transition-transform ${\n                                agent.color === color\n                                  ? \"ring-2 ring-primary ring-offset-2\"\n                                  : \"\"\n                              }`}\n                              style={{ backgroundColor: color }}\n                              onClick={() =>\n                                onUpdateAgentColor(agent.id, color)\n                              }\n                            />\n                          ))}\n                        </div>\n                        <div className=\"pt-2\">\n                          <label\n                            htmlFor={`custom-color-${agent.id}`}\n                            className=\"text-xs text-muted-foreground\"\n                          >\n                            Custom color:\n                          </label>\n                          <input\n                            id={`custom-color-${agent.id}`}\n                            type=\"color\"\n                            value={agent.color}\n                            onChange={(e) =>\n                              onUpdateAgentColor(agent.id, e.target.value)\n                            }\n                            className=\"w-full h-8 mt-1 cursor-pointer\"\n                          />\n                        </div>\n                      </div>\n                    </PopoverContent>\n                  </Popover>\n                  <span\n                    className=\"font-medium text-white\"\n                    title=\"Select agent to edit name and details\"\n                  >\n                    {agent.name}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  {/* Autonomy status indicator */}\n                  <div\n                    className={`w-3 h-3 rounded-full ${agent.autonomyEnabled ? \"bg-green-500\" : \"bg-gray-300\"}`}\n                    title={\n                      agent.autonomyEnabled\n                        ? \"Autonomy enabled\"\n                        : \"Autonomy disabled\"\n                    }\n                  />\n                  {/* Conversation status indicator */}\n                  <div\n                    className={`w-3 h-3 rounded-full ${agent.inConversation ? \"bg-green-500\" : \"bg-gray-300\"}`}\n                    title={\n                      agent.inConversation\n                        ? \"In conversation\"\n                        : \"Not in conversation\"\n                    }\n                  />\n                </div>\n              </div>\n              <div className=\"mt-2 flex justify-between\">\n                <Button\n                  variant=\"destructive\"\n                  size=\"sm\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    onDeleteAgent(agent.id);\n                  }}\n                >\n                  <Trash size={14} />\n                </Button>\n\n                {/* Autonomy toggle button */}\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    onToggleAutonomy(agent.id, !agent.autonomyEnabled);\n                  }}\n                  className={`${\n                    agent.autonomyEnabled\n                      ? \"bg-green-900/50 border-green-500 text-white hover:bg-green-800 hover:text-white\"\n                      : \"bg-gray-900/50 border-gray-500 text-white hover:bg-gray-800 hover:text-white\"\n                  }`}\n                >\n                  {agent.autonomyEnabled ? (\n                    <>\n                      <Power size={14} className=\"mr-1\" />\n                      Auto On\n                    </>\n                  ) : (\n                    <>\n                      <PowerOff size={14} className=\"mr-1\" />\n                      Auto Off\n                    </>\n                  )}\n                </Button>\n\n                {agent.inConversation ? (\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      onRemoveFromConversation(agent.id);\n                    }}\n                    className=\"bg-purple-900/50 border-purple-500 text-white hover:bg-purple-800 hover:text-white\"\n                  >\n                    <UserMinus size={14} className=\"mr-1\" />\n                    Remove\n                  </Button>\n                ) : (\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    disabled={\n                      !activeConversation &&\n                      agents.some((a) => a.inConversation)\n                    }\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      onAddToConversation(agent.id);\n                    }}\n                    className=\"bg-purple-900/50 border-purple-500 text-white hover:bg-purple-800 hover:text-white\"\n                  >\n                    <UserPlus size={14} className=\"mr-1\" />\n                    Add\n                  </Button>\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n      </ScrollArea>\n\n      <div className=\"p-4 border-t border-border\">\n        <Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}>\n          <Button onClick={() => setIsDialogOpen(true)} className=\"w-full\">\n            <Plus size={16} className=\"mr-2\" />\n            Create Agent\n          </Button>\n          <DialogContent>\n            <DialogHeader>\n              <DialogTitle>Create New Agent</DialogTitle>\n            </DialogHeader>\n            <div className=\"py-4\">\n              <label\n                htmlFor=\"new-agent-name\"\n                className=\"text-sm font-medium block mb-2\"\n              >\n                Agent Name\n              </label>\n              <Input\n                id=\"new-agent-name\"\n                value={newAgentName}\n                onChange={(e) => setNewAgentName(e.target.value)}\n                placeholder=\"Enter agent name...\"\n                autoFocus\n              />\n            </div>\n            <DialogFooter>\n              <DialogClose asChild>\n                <Button variant=\"outline\">Cancel</Button>\n              </DialogClose>\n              <Button\n                onClick={() => {\n                  if (newAgentName.trim()) {\n                    onCreateAgentWithName(newAgentName.trim());\n                    setNewAgentName(\"\");\n                    setIsDialogOpen(false);\n                  }\n                }}\n              >\n                Create\n              </Button>\n            </DialogFooter>\n          </DialogContent>\n        </Dialog>\n      </div>\n\n      {/* Export Dialog */}\n      <Dialog open={isExportDialogOpen} onOpenChange={setIsExportDialogOpen}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Export Agents</DialogTitle>\n          </DialogHeader>\n          <div className=\"py-4\">\n            <div className=\"mb-4\">\n              <div className=\"flex items-center space-x-2\">\n                <Checkbox\n                  id=\"export-all\"\n                  checked={exportAllAgents}\n                  onCheckedChange={(checked) => {\n                    setExportAllAgents(checked === true);\n                  }}\n                />\n                <Label htmlFor=\"export-all\">Export all agents</Label>\n              </div>\n            </div>\n\n            {!exportAllAgents && (\n              <div className=\"space-y-2\">\n                <p className=\"text-sm font-medium mb-2\">\n                  Select agents to export:\n                </p>\n                {agents.map((agent) => (\n                  <div key={agent.id} className=\"flex items-center space-x-2\">\n                    <Checkbox\n                      id={`export-agent-${agent.id}`}\n                      checked={selectedAgentsForExport[agent.id] || false}\n                      onCheckedChange={() => toggleAgentSelection(agent.id)}\n                    />\n                    <Label\n                      htmlFor={`export-agent-${agent.id}`}\n                      className=\"flex items-center\"\n                    >\n                      <div\n                        className=\"w-3 h-3 rounded-full mr-2\"\n                        style={{ backgroundColor: agent.color }}\n                      />\n                      {agent.name}\n                    </Label>\n                  </div>\n                ))}\n              </div>\n            )}\n\n            {/* Export options */}\n            <div className=\"mt-6 pt-4 border-t\">\n              {/* Settings export option */}\n              <div className=\"flex items-center space-x-2 mb-3\">\n                <Checkbox\n                  id=\"include-settings\"\n                  checked={includeSettings}\n                  onCheckedChange={(checked) => {\n                    setIncludeSettings(checked === true);\n                    if (checked === false) {\n                      setIncludeApiKeys(false);\n                    }\n                  }}\n                />\n                <Label htmlFor=\"include-settings\">Include settings</Label>\n              </div>\n\n              {includeSettings && (\n                <div className=\"ml-6 mb-3\">\n                  <div className=\"flex items-center space-x-2\">\n                    <Checkbox\n                      id=\"include-api-keys\"\n                      checked={includeApiKeys}\n                      onCheckedChange={(checked) =>\n                        setIncludeApiKeys(checked === true)\n                      }\n                    />\n                    <Label\n                      htmlFor=\"include-api-keys\"\n                      className=\"flex items-center\"\n                    >\n                      Include API keys\n                      <span className=\"text-red-500 ml-1\">*</span>\n                    </Label>\n                  </div>\n                  {includeApiKeys && (\n                    <p className=\"text-xs text-red-500 mt-1\">\n                      Warning: API keys are sensitive information. Only export\n                      them if you&apos;re sure about security.\n                    </p>\n                  )}\n                </div>\n              )}\n\n              {/* Conversations export option */}\n              <div className=\"flex items-center space-x-2\">\n                <Checkbox\n                  id=\"include-conversations\"\n                  checked={includeConversations}\n                  onCheckedChange={(checked) =>\n                    setIncludeConversations(checked === true)\n                  }\n                />\n                <Label htmlFor=\"include-conversations\">\n                  Include conversation histories\n                </Label>\n              </div>\n            </div>\n          </div>\n          <DialogFooter>\n            <DialogClose asChild>\n              <Button variant=\"outline\">Cancel</Button>\n            </DialogClose>\n            <Button\n              onClick={handleExportConfirm}\n              disabled={\n                !exportAllAgents &&\n                Object.values(selectedAgentsForExport).filter(Boolean)\n                  .length === 0\n              }\n            >\n              <Download size={16} className=\"mr-2\" />\n              Export\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      {/* Import Dialog */}\n      <Dialog\n        open={isImportDialogOpen}\n        onOpenChange={(open) => {\n          if (!open) {\n            setImportFile(null);\n            setImportError(null);\n          }\n          setIsImportDialogOpen(open);\n        }}\n      >\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Import Agents</DialogTitle>\n          </DialogHeader>\n          <div className=\"py-4\">\n            {importFile && (\n              <div className=\"mb-4\">\n                <p className=\"text-sm font-medium\">Selected file:</p>\n                <p className=\"text-sm\">\n                  {importFile.name} ({(importFile.size / 1024).toFixed(1)} KB)\n                </p>\n              </div>\n            )}\n\n            {/* Settings import options */}\n            {hasSettingsInImport && (\n              <div className=\"mb-4 pb-4 border-b\">\n                <div className=\"flex items-center space-x-2\">\n                  <Checkbox\n                    id=\"import-settings\"\n                    checked={importSettings}\n                    onCheckedChange={(checked) => {\n                      setImportSettings(checked === true);\n                      if (checked === false) {\n                        setImportApiKeys(false);\n                      }\n                    }}\n                  />\n                  <Label htmlFor=\"import-settings\">Import settings</Label>\n                </div>\n\n                {importSettings && (\n                  <div className=\"ml-6 mt-2\">\n                    <div className=\"flex items-center space-x-2\">\n                      <Checkbox\n                        id=\"import-api-keys\"\n                        checked={importApiKeys}\n                        onCheckedChange={(checked) =>\n                          setImportApiKeys(checked === true)\n                        }\n                      />\n                      <Label htmlFor=\"import-api-keys\">Import API keys</Label>\n                    </div>\n                  </div>\n                )}\n              </div>\n            )}\n\n            {/* Conversations import option */}\n            <div className=\"mb-4 pb-4 border-b\">\n              <div className=\"flex items-center space-x-2\">\n                <Checkbox\n                  id=\"import-conversations\"\n                  checked={importConversations}\n                  onCheckedChange={(checked) =>\n                    setImportConversations(checked === true)\n                  }\n                  disabled={!hasConversationsInImport}\n                />\n                <Label\n                  htmlFor=\"import-conversations\"\n                  className={\n                    !hasConversationsInImport ? \"text-muted-foreground\" : \"\"\n                  }\n                >\n                  Import conversation histories\n                  {!hasConversationsInImport && (\n                    <span className=\"ml-2 text-xs text-muted-foreground\">\n                      (No conversations found in import file)\n                    </span>\n                  )}\n                </Label>\n              </div>\n            </div>\n\n            <div className=\"space-y-4\">\n              <div>\n                <p className=\"text-sm font-medium mb-2\">Import mode:</p>\n                <RadioGroup\n                  value={importMode}\n                  onValueChange={(value) =>\n                    setImportMode(\n                      value as \"replace\" | \"new\" | \"merge\" | \"settings-only\",\n                    )\n                  }\n                >\n                  {hasSettingsInImport && (\n                    <div className=\"flex items-center space-x-2 mb-2\">\n                      <RadioGroupItem\n                        value=\"settings-only\"\n                        id=\"import-settings-only\"\n                      />\n                      <Label htmlFor=\"import-settings-only\">\n                        Import settings only (no agents)\n                      </Label>\n                    </div>\n                  )}\n                  <div className=\"flex items-center space-x-2 mb-2\">\n                    <RadioGroupItem value=\"new\" id=\"import-new\" />\n                    <Label htmlFor=\"import-new\">Import as new agents</Label>\n                  </div>\n                  <div className=\"flex items-center space-x-2 mb-2\">\n                    <RadioGroupItem value=\"replace\" id=\"import-replace\" />\n                    <Label htmlFor=\"import-replace\">\n                      Replace existing agents with same ID\n                    </Label>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <RadioGroupItem value=\"merge\" id=\"import-merge\" />\n                    <Label htmlFor=\"import-merge\">\n                      Merge knowledge with existing agents\n                    </Label>\n                  </div>\n                </RadioGroup>\n              </div>\n            </div>\n\n            {importError && (\n              <div className=\"mt-4 p-3 bg-red-500/20 border border-red-500 rounded-md flex items-start\">\n                <AlertCircle\n                  className=\"text-red-500 mr-2 mt-0.5 flex-shrink-0\"\n                  size={16}\n                />\n                <p className=\"text-sm text-red-500\">{importError}</p>\n              </div>\n            )}\n          </div>\n          <DialogFooter>\n            <DialogClose asChild>\n              <Button variant=\"outline\">Cancel</Button>\n            </DialogClose>\n            <Button\n              onClick={handleImportConfirm}\n              disabled={!importFile || isImporting}\n            >\n              {isImporting ? (\n                <>\n                  <Spinner size={16} className=\"mr-2\" />\n                  Importing...\n                </>\n              ) : (\n                <>\n                  <Upload size={16} className=\"mr-2\" />\n                  Import\n                </>\n              )}\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n"],
      names: ["AgentList", "colorPalette", "agents", "selectedAgent", "onSelectAgent", "onCreateAgent", "onCreateAgentWithName", "onDeleteAgent", "onAddToConversation", "onRemoveFromConversation", "onUpdateAgentColor", "onToggleAutonomy", "onExportAgents", "onImportAgents", "activeConversation", "llmSettings", "isDialogOpen", "setIsDialogOpen", "useState", "newAgentName", "setNewAgentName", "fileInputRef", "useRef", "isExportDialogOpen", "setIsExportDialogOpen", "selectedAgentsForExport", "setSelectedAgentsForExport", "exportAllAgents", "setExportAllAgents", "includeSettings", "setIncludeSettings", "includeApiKeys", "setIncludeApiKeys", "includeConversations", "setIncludeConversations", "isImportDialogOpen", "setIsImportDialogOpen", "importFile", "setImportFile", "importMode", "setImportMode", "importSettings", "setImportSettings", "importApiKeys", "setImportApiKeys", "importConversations", "setImportConversations", "isImporting", "setIsImporting", "importError", "setImportError", "hasSettingsInImport", "setHasSettingsInImport", "hasApiKeysInImport", "setHasApiKeysInImport", "hasConversationsInImport", "setHasConversationsInImport", "handleExportClick", "initialSelection", "reduce", "acc", "agent", "id", "handleExportConfirm", "agentIdsToExport", "map", "Object", "entries", "filter", "_", "isSelected", "agentId", "toggleAgentSelection", "prev", "handleImportClick", "current", "click", "handleFileChange", "e", "file", "target", "files", "zip", "JSZip", "zipContent", "loadAsync", "hasSettings", "hasConversations", "keys", "some", "path", "startsWith", "console", "log", "settingsJSON", "async", "settings", "JSON", "parse", "apiKey", "trim", "error", "value", "handleImportConfirm", "mode", "setTimeout", "Error", "message", "div", "className", "h2", "Button", "onClick", "size", "variant", "Upload", "Download", "input", "type", "ref", "onChange", "accept", "ScrollArea", "Popover", "PopoverTrigger", "asChild", "style", "backgroundColor", "color", "stopPropagation", "title", "PopoverContent", "align", "side", "h4", "label", "htmlFor", "span", "name", "autonomyEnabled", "inConversation", "Trash", "Power", "PowerOff", "UserMinus", "disabled", "a", "UserPlus", "Dialog", "open", "onOpenChange", "Plus", "DialogContent", "DialogHeader", "DialogTitle", "Input", "placeholder", "autoFocus", "DialogFooter", "DialogClose", "Checkbox", "checked", "onCheckedChange", "Label", "p", "values", "Boolean", "length", "toFixed", "RadioGroup", "onValueChange", "RadioGroupItem", "AlertCircle", "Spinner"],
      mappings: "AAAA;;;;;+BAuFA;;;eAAwBA;;;;wBAtFD;4BAGI;6BAapB;yBAKA;wBAQA;uBACe;uBACW;0BACR;uBACH;4BACqB;yBACnB;8DACN;;;;;;AAkClB,2BAA2B;AAC3B,MAAMC,eAAe;IACnB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAEc,SAASD,UAAU,EAChCE,MAAM,EACNC,aAAa,EACbC,aAAa,EACbC,aAAa,EACbC,qBAAqB,EACrBC,aAAa,EACbC,mBAAmB,EACnBC,wBAAwB,EACxBC,kBAAkB,EAClBC,gBAAgB,EAChBC,cAAc,EACdC,cAAc,EACdC,kBAAkB,EAClBC,WAAW,EACI;IACf,MAAM,CAACC,cAAcC,gBAAgB,GAAGC,IAAAA,eAAQ,EAAC;IACjD,MAAM,CAACC,cAAcC,gBAAgB,GAAGF,IAAAA,eAAQ,EAAC;IACjD,MAAMG,eAAeC,IAAAA,aAAM,EAAmB;IAE9C,0BAA0B;IAC1B,MAAM,CAACC,oBAAoBC,sBAAsB,GAAGN,IAAAA,eAAQ,EAAC;IAC7D,MAAM,CAACO,yBAAyBC,2BAA2B,GAAGR,IAAAA,eAAQ,EAEpE,CAAC;IACH,MAAM,CAACS,iBAAiBC,mBAAmB,GAAGV,IAAAA,eAAQ,EAAC;IACvD,MAAM,CAACW,iBAAiBC,mBAAmB,GAAGZ,IAAAA,eAAQ,EAAC;IACvD,MAAM,CAACa,gBAAgBC,kBAAkB,GAAGd,IAAAA,eAAQ,EAAC;IACrD,MAAM,CAACe,sBAAsBC,wBAAwB,GAAGhB,IAAAA,eAAQ,EAAC,QAAQ,8BAA8B;IAEvG,0BAA0B;IAC1B,MAAM,CAACiB,oBAAoBC,sBAAsB,GAAGlB,IAAAA,eAAQ,EAAC;IAC7D,MAAM,CAACmB,YAAYC,cAAc,GAAGpB,IAAAA,eAAQ,EAAc;IAC1D,MAAM,CAACqB,YAAYC,cAAc,GAAGtB,IAAAA,eAAQ,EAE1C;IACF,MAAM,CAACuB,gBAAgBC,kBAAkB,GAAGxB,IAAAA,eAAQ,EAAC;IACrD,MAAM,CAACyB,eAAeC,iBAAiB,GAAG1B,IAAAA,eAAQ,EAAC;IACnD,MAAM,CAAC2B,qBAAqBC,uBAAuB,GAAG5B,IAAAA,eAAQ,EAAC,QAAQ,8BAA8B;IACrG,MAAM,CAAC6B,aAAaC,eAAe,GAAG9B,IAAAA,eAAQ,EAAC;IAC/C,MAAM,CAAC+B,aAAaC,eAAe,GAAGhC,IAAAA,eAAQ,EAAgB;IAC9D,MAAM,CAACiC,qBAAqBC,uBAAuB,GAAGlC,IAAAA,eAAQ,EAAC;IAC/D,MAAM,CAACmC,oBAAoBC,sBAAsB,GAAGpC,IAAAA,eAAQ,EAAC;IAC7D,MAAM,CAACqC,0BAA0BC,4BAA4B,GAC3DtC,IAAAA,eAAQ,EAAC,QAAQ,8BAA8B;IAEjD,4BAA4B;IAC5B,MAAMuC,oBAAoB;QACxB,sCAAsC;QACtC,MAAMC,mBAAmBxD,OAAOyD,MAAM,CACpC,CAACC,KAAKC;YACJD,GAAG,CAACC,MAAMC,EAAE,CAAC,GAAG;YAChB,OAAOF;QACT,GACA,CAAC;QAEHlC,2BAA2BgC;QAC3B9B,mBAAmB;QACnBE,mBAAmB;QACnBE,kBAAkB;QAClBE,wBAAwB,QAAQ,wCAAwC;QACxEV,sBAAsB;IACxB;IAEA,6BAA6B;IAC7B,MAAMuC,sBAAsB;QAC1B,IAAIC,mBAA6B,EAAE;QAEnC,IAAIrC,iBAAiB;YACnB,oBAAoB;YACpBqC,mBAAmB9D,OAAO+D,GAAG,CAAC,CAACJ,QAAUA,MAAMC,EAAE;QACnD,OAAO;YACL,8BAA8B;YAC9BE,mBAAmBE,OAAOC,OAAO,CAAC1C,yBAC/B2C,MAAM,CAAC,CAAC,CAACC,GAAGC,WAAW,GAAKA,YAC5BL,GAAG,CAAC,CAAC,CAACM,QAAQ,GAAKA;QACxB;QAEA3D,eAAeoD,kBAAkB;YAC/BnC;YACAE,gBAAgBF,mBAAmBE;YACnCE;QACF;QACAT,sBAAsB;IACxB;IAEA,0CAA0C;IAC1C,MAAMgD,uBAAuB,CAACD;QAC5B7C,2BAA2B,CAAC+C,OAAU,CAAA;gBACpC,GAAGA,IAAI;gBACP,CAACF,QAAQ,EAAE,CAACE,IAAI,CAACF,QAAQ;YAC3B,CAAA;IACF;IAEA,6BAA6B;IAC7B,MAAMG,oBAAoB;QACxB,IAAIrD,aAAasD,OAAO,EAAE;YACxBtD,aAAasD,OAAO,CAACC,KAAK;QAC5B;IACF;IAEA,wBAAwB;IACxB,MAAMC,mBAAmB,OAAOC;QAC9B,MAAMC,OAAOD,EAAEE,MAAM,CAACC,KAAK,EAAE,CAAC,EAAE;QAChC,IAAIF,MAAM;YACRzC,cAAcyC;YACd7B,eAAe;YAEf,wDAAwD;YACxD,IAAI;gBACF,MAAMgC,MAAM,IAAIC,cAAK;gBACrB,MAAMC,aAAa,MAAMF,IAAIG,SAAS,CAACN;gBAEvC,2CAA2C;gBAC3C,MAAMO,cAAc,CAAC,CAACF,WAAWH,KAAK,CAAC,gBAAgB;gBACvD7B,uBAAuBkC;gBAEvB,kDAAkD;gBAClD,MAAMC,mBAAmBrB,OAAOsB,IAAI,CAACJ,WAAWH,KAAK,EAAEQ,IAAI,CACzD,CAACC,OACCA,KAAKC,UAAU,CAAC,qBAAqBD,SAAS;gBAElDlC,4BAA4B+B;gBAC5BK,QAAQC,GAAG,CAAC,0CAA0CN;gBAEtD,oDAAoD;gBACpD,IAAID,aAAa;oBACf,MAAMQ,eACJ,MAAMV,WAAWH,KAAK,CAAC,gBAAgB,CAACc,KAAK,CAAC;oBAChD,MAAMC,WAAWC,KAAKC,KAAK,CAACJ;oBAC5BxC,sBACE,CAAC,CAAC0C,SAASG,MAAM,IACf,OAAOH,SAASG,MAAM,KAAK,YAC3BH,SAASG,MAAM,CAACC,IAAI,OAAO;gBAEjC,OAAO;oBACL9C,sBAAsB;gBACxB;YACF,EAAE,OAAO+C,OAAO;gBACdT,QAAQS,KAAK,CAAC,gCAAgCA;gBAC9CjD,uBAAuB;gBACvBE,sBAAsB;gBACtBE,4BAA4B;YAC9B;YAEAd,kBAAkB;YAClBE,iBAAiB;YACjBE,uBAAuB,QAAQ,wCAAwC;YACvEN,cAAc;YACdJ,sBAAsB;QACxB;QAEA,yDAAyD;QACzD,IAAI0C,EAAEE,MAAM,EAAE;YACZF,EAAEE,MAAM,CAACsB,KAAK,GAAG;QACnB;IACF;IAEA,6BAA6B;IAC7B,MAAMC,sBAAsB;QAC1B,IAAI,CAAClE,YAAY;QAEjBW,eAAe;QACfE,eAAe;QAEf,IAAI;YACF,2DAA2D;YAC3DrC,eAAewB,YAAY;gBACzBmE,MAAMjE;gBACNE,gBAAgBA,kBAAkBU;gBAClCR,eAAeF,kBAAkBE,iBAAiBU;gBAClDR,qBAAqBA,uBAAuBU;YAC9C;YAEA,kEAAkE;YAClEkD,WAAW;gBACTrE,sBAAsB;gBACtBE,cAAc;YAChB,GAAG;QACL,EAAE,OAAO+D,OAAO;YACdnD,eACEmD,iBAAiBK,QACbL,MAAMM,OAAO,GACb;QAER,SAAU;YACR3D,eAAe;QACjB;IACF;IAEA,qBACE,sBAAC4D;QAAIC,WAAU;;0BACb,qBAACD;gBAAIC,WAAU;0BACb,cAAA,sBAACD;oBAAIC,WAAU;;sCACb,qBAACC;4BAAGD,WAAU;sCAA+B;;sCAC7C,sBAACD;4BAAIC,WAAU;;8CACb,sBAACE,cAAM;oCACLC,SAAStC;oCACTuC,MAAK;oCACLC,SAAQ;oCACRL,WAAU;;sDAEV,qBAACM,mBAAM;4CAACF,MAAM;4CAAIJ,WAAU;;wCAAS;;;8CAGvC,sBAACE,cAAM;oCACLC,SAASvD;oCACTwD,MAAK;oCACLC,SAAQ;oCACRL,WAAU;;sDAEV,qBAACO,qBAAQ;4CAACH,MAAM;4CAAIJ,WAAU;;wCAAS;;;8CAKzC,qBAACQ;oCACCC,MAAK;oCACLC,KAAKlG;oCACLmG,UAAU3C;oCACV4C,QAAO;oCACPZ,WAAU;;;;;;;0BAMlB,qBAACa,sBAAU;gBAACb,WAAU;0BACpB,cAAA,qBAACD;oBAAIC,WAAU;8BACZ3G,OAAO+D,GAAG,CAAC,CAACJ,sBACX,sBAAC+C;4BAECC,WAAW,CAAC,uDAAuD,EACjE1G,eAAe2D,OAAOD,MAAMC,EAAE,GAC1B,iCACA,+BACL,CAAC;4BACFkD,SAAS,IAAM5G,cAAcyD;;8CAE7B,sBAAC+C;oCAAIC,WAAU;;sDACb,sBAACD;4CAAIC,WAAU;;8DACb,sBAACc,gBAAO;;sEACN,qBAACC,uBAAc;4DAACC,OAAO;sEACrB,cAAA,qBAACjB;gEACCC,WAAU;gEACViB,OAAO;oEAAEC,iBAAiBlE,MAAMmE,KAAK;gEAAC;gEACtChB,SAAS,CAAClC,IAAMA,EAAEmD,eAAe;gEACjCC,OAAM;;;sEAGV,qBAACC,uBAAc;4DACbtB,WAAU;4DACVuB,OAAM;4DACNC,MAAK;4DACLrB,SAAS,CAAClC,IAAMA,EAAEmD,eAAe;sEAEjC,cAAA,sBAACrB;gEAAIC,WAAU;;kFACb,qBAACyB;wEAAGzB,WAAU;kFAAsB;;kFAGpC,qBAACD;wEAAIC,WAAU;kFACZ5G,aAAagE,GAAG,CAAC,CAAC+D,sBACjB,qBAACpB;gFAECC,WAAW,CAAC,yEAAyE,EACnFhD,MAAMmE,KAAK,KAAKA,QACZ,sCACA,GACL,CAAC;gFACFF,OAAO;oFAAEC,iBAAiBC;gFAAM;gFAChChB,SAAS,IACPtG,mBAAmBmD,MAAMC,EAAE,EAAEkE;+EAR1BA;;kFAaX,sBAACpB;wEAAIC,WAAU;;0FACb,qBAAC0B;gFACCC,SAAS,CAAC,aAAa,EAAE3E,MAAMC,EAAE,CAAC,CAAC;gFACnC+C,WAAU;0FACX;;0FAGD,qBAACQ;gFACCvD,IAAI,CAAC,aAAa,EAAED,MAAMC,EAAE,CAAC,CAAC;gFAC9BwD,MAAK;gFACLhB,OAAOzC,MAAMmE,KAAK;gFAClBR,UAAU,CAAC1C,IACTpE,mBAAmBmD,MAAMC,EAAE,EAAEgB,EAAEE,MAAM,CAACsB,KAAK;gFAE7CO,WAAU;;;;;;;;;8DAMpB,qBAAC4B;oDACC5B,WAAU;oDACVqB,OAAM;8DAELrE,MAAM6E,IAAI;;;;sDAGf,sBAAC9B;4CAAIC,WAAU;;8DAEb,qBAACD;oDACCC,WAAW,CAAC,qBAAqB,EAAEhD,MAAM8E,eAAe,GAAG,iBAAiB,cAAc,CAAC;oDAC3FT,OACErE,MAAM8E,eAAe,GACjB,qBACA;;8DAIR,qBAAC/B;oDACCC,WAAW,CAAC,qBAAqB,EAAEhD,MAAM+E,cAAc,GAAG,iBAAiB,cAAc,CAAC;oDAC1FV,OACErE,MAAM+E,cAAc,GAChB,oBACA;;;;;;8CAKZ,sBAAChC;oCAAIC,WAAU;;sDACb,qBAACE,cAAM;4CACLG,SAAQ;4CACRD,MAAK;4CACLD,SAAS,CAAClC;gDACRA,EAAEmD,eAAe;gDACjB1H,cAAcsD,MAAMC,EAAE;4CACxB;sDAEA,cAAA,qBAAC+E,kBAAK;gDAAC5B,MAAM;;;sDAIf,qBAACF,cAAM;4CACLG,SAAQ;4CACRD,MAAK;4CACLD,SAAS,CAAClC;gDACRA,EAAEmD,eAAe;gDACjBtH,iBAAiBkD,MAAMC,EAAE,EAAE,CAACD,MAAM8E,eAAe;4CACnD;4CACA9B,WAAW,CAAC,EACVhD,MAAM8E,eAAe,GACjB,oFACA,+EACL,CAAC;sDAED9E,MAAM8E,eAAe,iBACpB;;kEACE,qBAACG,kBAAK;wDAAC7B,MAAM;wDAAIJ,WAAU;;oDAAS;;+DAItC;;kEACE,qBAACkC,qBAAQ;wDAAC9B,MAAM;wDAAIJ,WAAU;;oDAAS;;;;wCAM5ChD,MAAM+E,cAAc,iBACnB,sBAAC7B,cAAM;4CACLG,SAAQ;4CACRD,MAAK;4CACLD,SAAS,CAAClC;gDACRA,EAAEmD,eAAe;gDACjBxH,yBAAyBoD,MAAMC,EAAE;4CACnC;4CACA+C,WAAU;;8DAEV,qBAACmC,sBAAS;oDAAC/B,MAAM;oDAAIJ,WAAU;;gDAAS;;2DAI1C,sBAACE,cAAM;4CACLG,SAAQ;4CACRD,MAAK;4CACLgC,UACE,CAACnI,sBACDZ,OAAOuF,IAAI,CAAC,CAACyD,IAAMA,EAAEN,cAAc;4CAErC5B,SAAS,CAAClC;gDACRA,EAAEmD,eAAe;gDACjBzH,oBAAoBqD,MAAMC,EAAE;4CAC9B;4CACA+C,WAAU;;8DAEV,qBAACsC,qBAAQ;oDAAClC,MAAM;oDAAIJ,WAAU;;gDAAS;;;;;;2BA/JxChD,MAAMC,EAAE;;;0BAyKrB,qBAAC8C;gBAAIC,WAAU;0BACb,cAAA,sBAACuC,cAAM;oBAACC,MAAMrI;oBAAcsI,cAAcrI;;sCACxC,sBAAC8F,cAAM;4BAACC,SAAS,IAAM/F,gBAAgB;4BAAO4F,WAAU;;8CACtD,qBAAC0C,iBAAI;oCAACtC,MAAM;oCAAIJ,WAAU;;gCAAS;;;sCAGrC,sBAAC2C,qBAAa;;8CACZ,qBAACC,oBAAY;8CACX,cAAA,qBAACC,mBAAW;kDAAC;;;8CAEf,sBAAC9C;oCAAIC,WAAU;;sDACb,qBAAC0B;4CACCC,SAAQ;4CACR3B,WAAU;sDACX;;sDAGD,qBAAC8C,YAAK;4CACJ7F,IAAG;4CACHwC,OAAOnF;4CACPqG,UAAU,CAAC1C,IAAM1D,gBAAgB0D,EAAEE,MAAM,CAACsB,KAAK;4CAC/CsD,aAAY;4CACZC,SAAS;;;;8CAGb,sBAACC,oBAAY;;sDACX,qBAACC,mBAAW;4CAAClC,OAAO;sDAClB,cAAA,qBAACd,cAAM;gDAACG,SAAQ;0DAAU;;;sDAE5B,qBAACH,cAAM;4CACLC,SAAS;gDACP,IAAI7F,aAAaiF,IAAI,IAAI;oDACvB9F,sBAAsBa,aAAaiF,IAAI;oDACvChF,gBAAgB;oDAChBH,gBAAgB;gDAClB;4CACF;sDACD;;;;;;;;;0BAST,qBAACmI,cAAM;gBAACC,MAAM9H;gBAAoB+H,cAAc9H;0BAC9C,cAAA,sBAACgI,qBAAa;;sCACZ,qBAACC,oBAAY;sCACX,cAAA,qBAACC,mBAAW;0CAAC;;;sCAEf,sBAAC9C;4BAAIC,WAAU;;8CACb,qBAACD;oCAAIC,WAAU;8CACb,cAAA,sBAACD;wCAAIC,WAAU;;0DACb,qBAACmD,kBAAQ;gDACPlG,IAAG;gDACHmG,SAAStI;gDACTuI,iBAAiB,CAACD;oDAChBrI,mBAAmBqI,YAAY;gDACjC;;0DAEF,qBAACE,YAAK;gDAAC3B,SAAQ;0DAAa;;;;;gCAI/B,CAAC7G,iCACA,sBAACiF;oCAAIC,WAAU;;sDACb,qBAACuD;4CAAEvD,WAAU;sDAA2B;;wCAGvC3G,OAAO+D,GAAG,CAAC,CAACJ,sBACX,sBAAC+C;gDAAmBC,WAAU;;kEAC5B,qBAACmD,kBAAQ;wDACPlG,IAAI,CAAC,aAAa,EAAED,MAAMC,EAAE,CAAC,CAAC;wDAC9BmG,SAASxI,uBAAuB,CAACoC,MAAMC,EAAE,CAAC,IAAI;wDAC9CoG,iBAAiB,IAAM1F,qBAAqBX,MAAMC,EAAE;;kEAEtD,sBAACqG,YAAK;wDACJ3B,SAAS,CAAC,aAAa,EAAE3E,MAAMC,EAAE,CAAC,CAAC;wDACnC+C,WAAU;;0EAEV,qBAACD;gEACCC,WAAU;gEACViB,OAAO;oEAAEC,iBAAiBlE,MAAMmE,KAAK;gEAAC;;4DAEvCnE,MAAM6E,IAAI;;;;+CAdL7E,MAAMC,EAAE;;;8CAsBxB,sBAAC8C;oCAAIC,WAAU;;sDAEb,sBAACD;4CAAIC,WAAU;;8DACb,qBAACmD,kBAAQ;oDACPlG,IAAG;oDACHmG,SAASpI;oDACTqI,iBAAiB,CAACD;wDAChBnI,mBAAmBmI,YAAY;wDAC/B,IAAIA,YAAY,OAAO;4DACrBjI,kBAAkB;wDACpB;oDACF;;8DAEF,qBAACmI,YAAK;oDAAC3B,SAAQ;8DAAmB;;;;wCAGnC3G,iCACC,sBAAC+E;4CAAIC,WAAU;;8DACb,sBAACD;oDAAIC,WAAU;;sEACb,qBAACmD,kBAAQ;4DACPlG,IAAG;4DACHmG,SAASlI;4DACTmI,iBAAiB,CAACD,UAChBjI,kBAAkBiI,YAAY;;sEAGlC,sBAACE,YAAK;4DACJ3B,SAAQ;4DACR3B,WAAU;;gEACX;8EAEC,qBAAC4B;oEAAK5B,WAAU;8EAAoB;;;;;;gDAGvC9E,gCACC,qBAACqI;oDAAEvD,WAAU;8DAA4B;;;;sDAS/C,sBAACD;4CAAIC,WAAU;;8DACb,qBAACmD,kBAAQ;oDACPlG,IAAG;oDACHmG,SAAShI;oDACTiI,iBAAiB,CAACD,UAChB/H,wBAAwB+H,YAAY;;8DAGxC,qBAACE,YAAK;oDAAC3B,SAAQ;8DAAwB;;;;;;;;sCAM7C,sBAACsB,oBAAY;;8CACX,qBAACC,mBAAW;oCAAClC,OAAO;8CAClB,cAAA,qBAACd,cAAM;wCAACG,SAAQ;kDAAU;;;8CAE5B,sBAACH,cAAM;oCACLC,SAASjD;oCACTkF,UACE,CAACtH,mBACDuC,OAAOmG,MAAM,CAAC5I,yBAAyB2C,MAAM,CAACkG,SAC3CC,MAAM,KAAK;;sDAGhB,qBAACnD,qBAAQ;4CAACH,MAAM;4CAAIJ,WAAU;;wCAAS;;;;;;;;0BAQ/C,qBAACuC,cAAM;gBACLC,MAAMlH;gBACNmH,cAAc,CAACD;oBACb,IAAI,CAACA,MAAM;wBACT/G,cAAc;wBACdY,eAAe;oBACjB;oBACAd,sBAAsBiH;gBACxB;0BAEA,cAAA,sBAACG,qBAAa;;sCACZ,qBAACC,oBAAY;sCACX,cAAA,qBAACC,mBAAW;0CAAC;;;sCAEf,sBAAC9C;4BAAIC,WAAU;;gCACZxE,4BACC,sBAACuE;oCAAIC,WAAU;;sDACb,qBAACuD;4CAAEvD,WAAU;sDAAsB;;sDACnC,sBAACuD;4CAAEvD,WAAU;;gDACVxE,WAAWqG,IAAI;gDAAC;gDAAIrG,CAAAA,WAAW4E,IAAI,GAAG,IAAG,EAAGuD,OAAO,CAAC;gDAAG;;;;;gCAM7DrH,qCACC,sBAACyD;oCAAIC,WAAU;;sDACb,sBAACD;4CAAIC,WAAU;;8DACb,qBAACmD,kBAAQ;oDACPlG,IAAG;oDACHmG,SAASxH;oDACTyH,iBAAiB,CAACD;wDAChBvH,kBAAkBuH,YAAY;wDAC9B,IAAIA,YAAY,OAAO;4DACrBrH,iBAAiB;wDACnB;oDACF;;8DAEF,qBAACuH,YAAK;oDAAC3B,SAAQ;8DAAkB;;;;wCAGlC/F,gCACC,qBAACmE;4CAAIC,WAAU;sDACb,cAAA,sBAACD;gDAAIC,WAAU;;kEACb,qBAACmD,kBAAQ;wDACPlG,IAAG;wDACHmG,SAAStH;wDACTuH,iBAAiB,CAACD,UAChBrH,iBAAiBqH,YAAY;;kEAGjC,qBAACE,YAAK;wDAAC3B,SAAQ;kEAAkB;;;;;;;8CAQ3C,qBAAC5B;oCAAIC,WAAU;8CACb,cAAA,sBAACD;wCAAIC,WAAU;;0DACb,qBAACmD,kBAAQ;gDACPlG,IAAG;gDACHmG,SAASpH;gDACTqH,iBAAiB,CAACD,UAChBnH,uBAAuBmH,YAAY;gDAErChB,UAAU,CAAC1F;;0DAEb,sBAAC4G,YAAK;gDACJ3B,SAAQ;gDACR3B,WACE,CAACtD,2BAA2B,0BAA0B;;oDAEzD;oDAEE,CAACA,0CACA,qBAACkF;wDAAK5B,WAAU;kEAAqC;;;;;;;8CAQ7D,qBAACD;oCAAIC,WAAU;8CACb,cAAA,sBAACD;;0DACC,qBAACwD;gDAAEvD,WAAU;0DAA2B;;0DACxC,sBAAC4D,sBAAU;gDACTnE,OAAO/D;gDACPmI,eAAe,CAACpE,QACd9D,cACE8D;;oDAIHnD,qCACC,sBAACyD;wDAAIC,WAAU;;0EACb,qBAAC8D,0BAAc;gEACbrE,OAAM;gEACNxC,IAAG;;0EAEL,qBAACqG,YAAK;gEAAC3B,SAAQ;0EAAuB;;;;kEAK1C,sBAAC5B;wDAAIC,WAAU;;0EACb,qBAAC8D,0BAAc;gEAACrE,OAAM;gEAAMxC,IAAG;;0EAC/B,qBAACqG,YAAK;gEAAC3B,SAAQ;0EAAa;;;;kEAE9B,sBAAC5B;wDAAIC,WAAU;;0EACb,qBAAC8D,0BAAc;gEAACrE,OAAM;gEAAUxC,IAAG;;0EACnC,qBAACqG,YAAK;gEAAC3B,SAAQ;0EAAiB;;;;kEAIlC,sBAAC5B;wDAAIC,WAAU;;0EACb,qBAAC8D,0BAAc;gEAACrE,OAAM;gEAAQxC,IAAG;;0EACjC,qBAACqG,YAAK;gEAAC3B,SAAQ;0EAAe;;;;;;;;;gCAQrCvF,6BACC,sBAAC2D;oCAAIC,WAAU;;sDACb,qBAAC+D,wBAAW;4CACV/D,WAAU;4CACVI,MAAM;;sDAER,qBAACmD;4CAAEvD,WAAU;sDAAwB5D;;;;;;sCAI3C,sBAAC6G,oBAAY;;8CACX,qBAACC,mBAAW;oCAAClC,OAAO;8CAClB,cAAA,qBAACd,cAAM;wCAACG,SAAQ;kDAAU;;;8CAE5B,qBAACH,cAAM;oCACLC,SAAST;oCACT0C,UAAU,CAAC5G,cAAcU;8CAExBA,4BACC;;0DACE,qBAAC8H,gBAAO;gDAAC5D,MAAM;gDAAIJ,WAAU;;4CAAS;;uDAIxC;;0DACE,qBAACM,mBAAM;gDAACF,MAAM;gDAAIJ,WAAU;;4CAAS;;;;;;;;;;;AAUvD"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "493ddff1c4d8c8094751d786a384f13dd57adbda"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1zwn88zeir = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1zwn88zeir();
cov_1zwn88zeir().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1zwn88zeir().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1zwn88zeir().f[0]++;
    cov_1zwn88zeir().s[2]++;
    return AgentList;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1zwn88zeir().s[3]++, require("react/jsx-runtime"));
const _button =
/* istanbul ignore next */
(cov_1zwn88zeir().s[4]++, require("./ui/button"));
const _scrollarea =
/* istanbul ignore next */
(cov_1zwn88zeir().s[5]++, require("./ui/scroll-area"));
const _lucidereact =
/* istanbul ignore next */
(cov_1zwn88zeir().s[6]++, require("lucide-react"));
const _popover =
/* istanbul ignore next */
(cov_1zwn88zeir().s[7]++, require("./ui/popover"));
const _dialog =
/* istanbul ignore next */
(cov_1zwn88zeir().s[8]++, require("./ui/dialog"));
const _input =
/* istanbul ignore next */
(cov_1zwn88zeir().s[9]++, require("./ui/input"));
const _react =
/* istanbul ignore next */
(cov_1zwn88zeir().s[10]++, require("react"));
const _checkbox =
/* istanbul ignore next */
(cov_1zwn88zeir().s[11]++, require("./ui/checkbox"));
const _label =
/* istanbul ignore next */
(cov_1zwn88zeir().s[12]++, require("./ui/label"));
const _radiogroup =
/* istanbul ignore next */
(cov_1zwn88zeir().s[13]++, require("./ui/radio-group"));
const _spinner =
/* istanbul ignore next */
(cov_1zwn88zeir().s[14]++, require("./ui/spinner"));
const _jszip =
/* istanbul ignore next */
(/*#__PURE__*/cov_1zwn88zeir().s[15]++, _interop_require_default(require("jszip")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1zwn88zeir().f[1]++;
  cov_1zwn88zeir().s[16]++;
  return /* istanbul ignore next */(cov_1zwn88zeir().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1zwn88zeir().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1zwn88zeir().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1zwn88zeir().b[0][1]++, {
    default: obj
  });
}
// Predefined color palette
const colorPalette =
/* istanbul ignore next */
(cov_1zwn88zeir().s[17]++, ["#4f46e5", "#10b981", "#ef4444", "#f59e0b", "#6366f1", "#ec4899", "#8b5cf6", "#06b6d4", "#84cc16", "#f97316", "#14b8a6", "#8b5cf6"]);
function AgentList({
  agents,
  selectedAgent,
  onSelectAgent,
  onCreateAgent,
  onCreateAgentWithName,
  onDeleteAgent,
  onAddToConversation,
  onRemoveFromConversation,
  onUpdateAgentColor,
  onToggleAutonomy,
  onExportAgents,
  onImportAgents,
  activeConversation,
  llmSettings
}) {
  /* istanbul ignore next */
  cov_1zwn88zeir().f[2]++;
  const [isDialogOpen, setIsDialogOpen] =
  /* istanbul ignore next */
  (cov_1zwn88zeir().s[18]++, (0, _react.useState)(false));
  const [newAgentName, setNewAgentName] =
  /* istanbul ignore next */
  (cov_1zwn88zeir().s[19]++, (0, _react.useState)(""));
  const fileInputRef =
  /* istanbul ignore next */
  (cov_1zwn88zeir().s[20]++, (0, _react.useRef)(null));
  // State for export dialog
  const [isExportDialogOpen, setIsExportDialogOpen] =
  /* istanbul ignore next */
  (cov_1zwn88zeir().s[21]++, (0, _react.useState)(false));
  const [selectedAgentsForExport, setSelectedAgentsForExport] =
  /* istanbul ignore next */
  (cov_1zwn88zeir().s[22]++, (0, _react.useState)({}));
  const [exportAllAgents, setExportAllAgents] =
  /* istanbul ignore next */
  (cov_1zwn88zeir().s[23]++, (0, _react.useState)(true));
  const [includeSettings, setIncludeSettings] =
  /* istanbul ignore next */
  (cov_1zwn88zeir().s[24]++, (0, _react.useState)(false));
  const [includeApiKeys, setIncludeApiKeys] =
  /* istanbul ignore next */
  (cov_1zwn88zeir().s[25]++, (0, _react.useState)(false));
  const [includeConversations, setIncludeConversations] =
  /* istanbul ignore next */
  (cov_1zwn88zeir().s[26]++, (0, _react.useState)(false)); // New state for conversations
  // State for import dialog
  const [isImportDialogOpen, setIsImportDialogOpen] =
  /* istanbul ignore next */
  (cov_1zwn88zeir().s[27]++, (0, _react.useState)(false));
  const [importFile, setImportFile] =
  /* istanbul ignore next */
  (cov_1zwn88zeir().s[28]++, (0, _react.useState)(null));
  const [importMode, setImportMode] =
  /* istanbul ignore next */
  (cov_1zwn88zeir().s[29]++, (0, _react.useState)("new"));
  const [importSettings, setImportSettings] =
  /* istanbul ignore next */
  (cov_1zwn88zeir().s[30]++, (0, _react.useState)(true));
  const [importApiKeys, setImportApiKeys] =
  /* istanbul ignore next */
  (cov_1zwn88zeir().s[31]++, (0, _react.useState)(false));
  const [importConversations, setImportConversations] =
  /* istanbul ignore next */
  (cov_1zwn88zeir().s[32]++, (0, _react.useState)(false)); // New state for conversations
  const [isImporting, setIsImporting] =
  /* istanbul ignore next */
  (cov_1zwn88zeir().s[33]++, (0, _react.useState)(false));
  const [importError, setImportError] =
  /* istanbul ignore next */
  (cov_1zwn88zeir().s[34]++, (0, _react.useState)(null));
  const [hasSettingsInImport, setHasSettingsInImport] =
  /* istanbul ignore next */
  (cov_1zwn88zeir().s[35]++, (0, _react.useState)(false));
  const [hasApiKeysInImport, setHasApiKeysInImport] =
  /* istanbul ignore next */
  (cov_1zwn88zeir().s[36]++, (0, _react.useState)(false));
  const [hasConversationsInImport, setHasConversationsInImport] =
  /* istanbul ignore next */
  (cov_1zwn88zeir().s[37]++, (0, _react.useState)(false)); // New state for conversations
  // Handle export dialog open
  /* istanbul ignore next */
  cov_1zwn88zeir().s[38]++;
  const handleExportClick = () => {
    /* istanbul ignore next */
    cov_1zwn88zeir().f[3]++;
    // Initialize with all agents selected
    const initialSelection =
    /* istanbul ignore next */
    (cov_1zwn88zeir().s[39]++, agents.reduce((acc, agent) => {
      /* istanbul ignore next */
      cov_1zwn88zeir().f[4]++;
      cov_1zwn88zeir().s[40]++;
      acc[agent.id] = true;
      /* istanbul ignore next */
      cov_1zwn88zeir().s[41]++;
      return acc;
    }, {}));
    /* istanbul ignore next */
    cov_1zwn88zeir().s[42]++;
    setSelectedAgentsForExport(initialSelection);
    /* istanbul ignore next */
    cov_1zwn88zeir().s[43]++;
    setExportAllAgents(true);
    /* istanbul ignore next */
    cov_1zwn88zeir().s[44]++;
    setIncludeSettings(false);
    /* istanbul ignore next */
    cov_1zwn88zeir().s[45]++;
    setIncludeApiKeys(false);
    /* istanbul ignore next */
    cov_1zwn88zeir().s[46]++;
    setIncludeConversations(false); // Initialize conversation export option
    /* istanbul ignore next */
    cov_1zwn88zeir().s[47]++;
    setIsExportDialogOpen(true);
  };
  // Handle export confirmation
  /* istanbul ignore next */
  cov_1zwn88zeir().s[48]++;
  const handleExportConfirm = () => {
    /* istanbul ignore next */
    cov_1zwn88zeir().f[5]++;
    let agentIdsToExport =
    /* istanbul ignore next */
    (cov_1zwn88zeir().s[49]++, []);
    /* istanbul ignore next */
    cov_1zwn88zeir().s[50]++;
    if (exportAllAgents) {
      /* istanbul ignore next */
      cov_1zwn88zeir().b[2][0]++;
      cov_1zwn88zeir().s[51]++;
      // Export all agents
      agentIdsToExport = agents.map(agent => {
        /* istanbul ignore next */
        cov_1zwn88zeir().f[6]++;
        cov_1zwn88zeir().s[52]++;
        return agent.id;
      });
    } else {
      /* istanbul ignore next */
      cov_1zwn88zeir().b[2][1]++;
      cov_1zwn88zeir().s[53]++;
      // Export only selected agents
      agentIdsToExport = Object.entries(selectedAgentsForExport).filter(([_, isSelected]) => {
        /* istanbul ignore next */
        cov_1zwn88zeir().f[7]++;
        cov_1zwn88zeir().s[54]++;
        return isSelected;
      }).map(([agentId]) => {
        /* istanbul ignore next */
        cov_1zwn88zeir().f[8]++;
        cov_1zwn88zeir().s[55]++;
        return agentId;
      });
    }
    /* istanbul ignore next */
    cov_1zwn88zeir().s[56]++;
    onExportAgents(agentIdsToExport, {
      includeSettings,
      includeApiKeys:
      /* istanbul ignore next */
      (cov_1zwn88zeir().b[3][0]++, includeSettings) &&
      /* istanbul ignore next */
      (cov_1zwn88zeir().b[3][1]++, includeApiKeys),
      includeConversations
    });
    /* istanbul ignore next */
    cov_1zwn88zeir().s[57]++;
    setIsExportDialogOpen(false);
  };
  // Toggle selection of an agent for export
  /* istanbul ignore next */
  cov_1zwn88zeir().s[58]++;
  const toggleAgentSelection = agentId => {
    /* istanbul ignore next */
    cov_1zwn88zeir().f[9]++;
    cov_1zwn88zeir().s[59]++;
    setSelectedAgentsForExport(prev => {
      /* istanbul ignore next */
      cov_1zwn88zeir().f[10]++;
      cov_1zwn88zeir().s[60]++;
      return {
        ...prev,
        [agentId]: !prev[agentId]
      };
    });
  };
  // Handle import button click
  /* istanbul ignore next */
  cov_1zwn88zeir().s[61]++;
  const handleImportClick = () => {
    /* istanbul ignore next */
    cov_1zwn88zeir().f[11]++;
    cov_1zwn88zeir().s[62]++;
    if (fileInputRef.current) {
      /* istanbul ignore next */
      cov_1zwn88zeir().b[4][0]++;
      cov_1zwn88zeir().s[63]++;
      fileInputRef.current.click();
    } else
    /* istanbul ignore next */
    {
      cov_1zwn88zeir().b[4][1]++;
    }
  };
  // Handle file selection
  /* istanbul ignore next */
  cov_1zwn88zeir().s[64]++;
  const handleFileChange = async e => {
    /* istanbul ignore next */
    cov_1zwn88zeir().f[12]++;
    const file =
    /* istanbul ignore next */
    (cov_1zwn88zeir().s[65]++, e.target.files?.[0]);
    /* istanbul ignore next */
    cov_1zwn88zeir().s[66]++;
    if (file) {
      /* istanbul ignore next */
      cov_1zwn88zeir().b[5][0]++;
      cov_1zwn88zeir().s[67]++;
      setImportFile(file);
      /* istanbul ignore next */
      cov_1zwn88zeir().s[68]++;
      setImportError(null);
      // Check if the file contains settings and conversations
      /* istanbul ignore next */
      cov_1zwn88zeir().s[69]++;
      try {
        const zip =
        /* istanbul ignore next */
        (cov_1zwn88zeir().s[70]++, new _jszip.default());
        const zipContent =
        /* istanbul ignore next */
        (cov_1zwn88zeir().s[71]++, await zip.loadAsync(file));
        // Check if settings.json exists in the zip
        const hasSettings =
        /* istanbul ignore next */
        (cov_1zwn88zeir().s[72]++, !!zipContent.files["settings.json"]);
        /* istanbul ignore next */
        cov_1zwn88zeir().s[73]++;
        setHasSettingsInImport(hasSettings);
        // Check if conversations folder exists in the zip
        const hasConversations =
        /* istanbul ignore next */
        (cov_1zwn88zeir().s[74]++, Object.keys(zipContent.files).some(path => {
          /* istanbul ignore next */
          cov_1zwn88zeir().f[13]++;
          cov_1zwn88zeir().s[75]++;
          return /* istanbul ignore next */(cov_1zwn88zeir().b[6][0]++, path.startsWith("conversations/")) &&
          /* istanbul ignore next */
          (cov_1zwn88zeir().b[6][1]++, path !== "conversations/");
        }));
        /* istanbul ignore next */
        cov_1zwn88zeir().s[76]++;
        setHasConversationsInImport(hasConversations);
        /* istanbul ignore next */
        cov_1zwn88zeir().s[77]++;
        console.log("Import file check - Has conversations:", hasConversations);
        // If settings exist, check if they contain API keys
        /* istanbul ignore next */
        cov_1zwn88zeir().s[78]++;
        if (hasSettings) {
          /* istanbul ignore next */
          cov_1zwn88zeir().b[7][0]++;
          const settingsJSON =
          /* istanbul ignore next */
          (cov_1zwn88zeir().s[79]++, await zipContent.files["settings.json"].async("string"));
          const settings =
          /* istanbul ignore next */
          (cov_1zwn88zeir().s[80]++, JSON.parse(settingsJSON));
          /* istanbul ignore next */
          cov_1zwn88zeir().s[81]++;
          setHasApiKeysInImport(
          /* istanbul ignore next */
          (cov_1zwn88zeir().b[8][0]++, !!settings.apiKey) &&
          /* istanbul ignore next */
          (cov_1zwn88zeir().b[8][1]++, typeof settings.apiKey === "string") &&
          /* istanbul ignore next */
          (cov_1zwn88zeir().b[8][2]++, settings.apiKey.trim() !== ""));
        } else {
          /* istanbul ignore next */
          cov_1zwn88zeir().b[7][1]++;
          cov_1zwn88zeir().s[82]++;
          setHasApiKeysInImport(false);
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_1zwn88zeir().s[83]++;
        console.error("Error checking zip contents:", error);
        /* istanbul ignore next */
        cov_1zwn88zeir().s[84]++;
        setHasSettingsInImport(false);
        /* istanbul ignore next */
        cov_1zwn88zeir().s[85]++;
        setHasApiKeysInImport(false);
        /* istanbul ignore next */
        cov_1zwn88zeir().s[86]++;
        setHasConversationsInImport(false);
      }
      /* istanbul ignore next */
      cov_1zwn88zeir().s[87]++;
      setImportSettings(true);
      /* istanbul ignore next */
      cov_1zwn88zeir().s[88]++;
      setImportApiKeys(false);
      /* istanbul ignore next */
      cov_1zwn88zeir().s[89]++;
      setImportConversations(false); // Initialize conversation import option
      /* istanbul ignore next */
      cov_1zwn88zeir().s[90]++;
      setImportMode("new");
      /* istanbul ignore next */
      cov_1zwn88zeir().s[91]++;
      setIsImportDialogOpen(true);
    } else
    /* istanbul ignore next */
    {
      cov_1zwn88zeir().b[5][1]++;
    }
    // Reset the input so the same file can be selected again
    cov_1zwn88zeir().s[92]++;
    if (e.target) {
      /* istanbul ignore next */
      cov_1zwn88zeir().b[9][0]++;
      cov_1zwn88zeir().s[93]++;
      e.target.value = "";
    } else
    /* istanbul ignore next */
    {
      cov_1zwn88zeir().b[9][1]++;
    }
  };
  // Handle import confirmation
  /* istanbul ignore next */
  cov_1zwn88zeir().s[94]++;
  const handleImportConfirm = () => {
    /* istanbul ignore next */
    cov_1zwn88zeir().f[14]++;
    cov_1zwn88zeir().s[95]++;
    if (!importFile) {
      /* istanbul ignore next */
      cov_1zwn88zeir().b[10][0]++;
      cov_1zwn88zeir().s[96]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1zwn88zeir().b[10][1]++;
    }
    cov_1zwn88zeir().s[97]++;
    setIsImporting(true);
    /* istanbul ignore next */
    cov_1zwn88zeir().s[98]++;
    setImportError(null);
    /* istanbul ignore next */
    cov_1zwn88zeir().s[99]++;
    try {
      /* istanbul ignore next */
      cov_1zwn88zeir().s[100]++;
      // Pass the file and import options to the parent component
      onImportAgents(importFile, {
        mode: importMode,
        importSettings:
        /* istanbul ignore next */
        (cov_1zwn88zeir().b[11][0]++, importSettings) &&
        /* istanbul ignore next */
        (cov_1zwn88zeir().b[11][1]++, hasSettingsInImport),
        importApiKeys:
        /* istanbul ignore next */
        (cov_1zwn88zeir().b[12][0]++, importSettings) &&
        /* istanbul ignore next */
        (cov_1zwn88zeir().b[12][1]++, importApiKeys) &&
        /* istanbul ignore next */
        (cov_1zwn88zeir().b[12][2]++, hasApiKeysInImport),
        importConversations:
        /* istanbul ignore next */
        (cov_1zwn88zeir().b[13][0]++, importConversations) &&
        /* istanbul ignore next */
        (cov_1zwn88zeir().b[13][1]++, hasConversationsInImport)
      });
      // Close the dialog after a short delay to allow the toast to show
      /* istanbul ignore next */
      cov_1zwn88zeir().s[101]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_1zwn88zeir().f[15]++;
        cov_1zwn88zeir().s[102]++;
        setIsImportDialogOpen(false);
        /* istanbul ignore next */
        cov_1zwn88zeir().s[103]++;
        setImportFile(null);
      }, 500);
    } catch (error) {
      /* istanbul ignore next */
      cov_1zwn88zeir().s[104]++;
      setImportError(error instanceof Error ?
      /* istanbul ignore next */
      (cov_1zwn88zeir().b[14][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1zwn88zeir().b[14][1]++, "Unknown error occurred during import"));
    } finally {
      /* istanbul ignore next */
      cov_1zwn88zeir().s[105]++;
      setIsImporting(false);
    }
  };
  /* istanbul ignore next */
  cov_1zwn88zeir().s[106]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "flex flex-col h-full",
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "p-4 border-b border-border",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex justify-between items-center",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
          className: "text-xl font-bold text-white",
          children: "Agents"
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex gap-2",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
            onClick: handleImportClick,
            size: "sm",
            variant: "outline",
            className: "bg-purple-900/50 border-purple-500 text-white hover:bg-purple-800 hover:text-white",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Upload, {
              size: 16,
              className: "mr-1"
            }), "Import"]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
            onClick: handleExportClick,
            size: "sm",
            variant: "outline",
            className: "bg-purple-900/50 border-purple-500 text-white hover:bg-purple-800 hover:text-white",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Download, {
              size: 16,
              className: "mr-1"
            }), "Export"]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
            type: "file",
            ref: fileInputRef,
            onChange: handleFileChange,
            accept: ".zip",
            className: "hidden"
          })]
        })]
      })
    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_scrollarea.ScrollArea, {
      className: "flex-1 p-4",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "space-y-2",
        children: agents.map(agent => {
          /* istanbul ignore next */
          cov_1zwn88zeir().f[16]++;
          cov_1zwn88zeir().s[107]++;
          return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: `p-3 rounded-md border cursor-pointer transition-colors ${selectedAgent?.id === agent.id ?
            /* istanbul ignore next */
            (cov_1zwn88zeir().b[15][0]++, "border-primary bg-primary/10") :
            /* istanbul ignore next */
            (cov_1zwn88zeir().b[15][1]++, "border-border hover:bg-muted")}`,
            onClick: () => {
              /* istanbul ignore next */
              cov_1zwn88zeir().f[17]++;
              cov_1zwn88zeir().s[108]++;
              return onSelectAgent(agent);
            },
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center justify-between",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-center gap-2",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_popover.Popover, {
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_popover.PopoverTrigger, {
                    asChild: true,
                    children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: "w-4 h-4 rounded-full cursor-pointer hover:ring-2 hover:ring-offset-2 hover:ring-primary transition-all",
                      style: {
                        backgroundColor: agent.color
                      },
                      onClick: e => {
                        /* istanbul ignore next */
                        cov_1zwn88zeir().f[18]++;
                        cov_1zwn88zeir().s[109]++;
                        return e.stopPropagation();
                      },
                      title: "Change agent color"
                    })
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)(_popover.PopoverContent, {
                    className: "w-64",
                    align: "start",
                    side: "right",
                    onClick: e => {
                      /* istanbul ignore next */
                      cov_1zwn88zeir().f[19]++;
                      cov_1zwn88zeir().s[110]++;
                      return e.stopPropagation();
                    },
                    children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "space-y-2",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
                        className: "font-medium text-sm",
                        children: "Select agent color"
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                        className: "grid grid-cols-6 gap-2",
                        children: colorPalette.map(color => {
                          /* istanbul ignore next */
                          cov_1zwn88zeir().f[20]++;
                          cov_1zwn88zeir().s[111]++;
                          return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                            className: `w-6 h-6 rounded-full cursor-pointer hover:scale-110 transition-transform ${agent.color === color ?
                            /* istanbul ignore next */
                            (cov_1zwn88zeir().b[16][0]++, "ring-2 ring-primary ring-offset-2") :
                            /* istanbul ignore next */
                            (cov_1zwn88zeir().b[16][1]++, "")}`,
                            style: {
                              backgroundColor: color
                            },
                            onClick: () => {
                              /* istanbul ignore next */
                              cov_1zwn88zeir().f[21]++;
                              cov_1zwn88zeir().s[112]++;
                              return onUpdateAgentColor(agent.id, color);
                            }
                          }, color);
                        })
                      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                        className: "pt-2",
                        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                          htmlFor: `custom-color-${agent.id}`,
                          className: "text-xs text-muted-foreground",
                          children: "Custom color:"
                        }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                          id: `custom-color-${agent.id}`,
                          type: "color",
                          value: agent.color,
                          onChange: e => {
                            /* istanbul ignore next */
                            cov_1zwn88zeir().f[22]++;
                            cov_1zwn88zeir().s[113]++;
                            return onUpdateAgentColor(agent.id, e.target.value);
                          },
                          className: "w-full h-8 mt-1 cursor-pointer"
                        })]
                      })]
                    })
                  })]
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                  className: "font-medium text-white",
                  title: "Select agent to edit name and details",
                  children: agent.name
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-center gap-2",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: `w-3 h-3 rounded-full ${agent.autonomyEnabled ?
                  /* istanbul ignore next */
                  (cov_1zwn88zeir().b[17][0]++, "bg-green-500") :
                  /* istanbul ignore next */
                  (cov_1zwn88zeir().b[17][1]++, "bg-gray-300")}`,
                  title: agent.autonomyEnabled ?
                  /* istanbul ignore next */
                  (cov_1zwn88zeir().b[18][0]++, "Autonomy enabled") :
                  /* istanbul ignore next */
                  (cov_1zwn88zeir().b[18][1]++, "Autonomy disabled")
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: `w-3 h-3 rounded-full ${agent.inConversation ?
                  /* istanbul ignore next */
                  (cov_1zwn88zeir().b[19][0]++, "bg-green-500") :
                  /* istanbul ignore next */
                  (cov_1zwn88zeir().b[19][1]++, "bg-gray-300")}`,
                  title: agent.inConversation ?
                  /* istanbul ignore next */
                  (cov_1zwn88zeir().b[20][0]++, "In conversation") :
                  /* istanbul ignore next */
                  (cov_1zwn88zeir().b[20][1]++, "Not in conversation")
                })]
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "mt-2 flex justify-between",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
                variant: "destructive",
                size: "sm",
                onClick: e => {
                  /* istanbul ignore next */
                  cov_1zwn88zeir().f[23]++;
                  cov_1zwn88zeir().s[114]++;
                  e.stopPropagation();
                  /* istanbul ignore next */
                  cov_1zwn88zeir().s[115]++;
                  onDeleteAgent(agent.id);
                },
                children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Trash, {
                  size: 14
                })
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
                variant: "outline",
                size: "sm",
                onClick: e => {
                  /* istanbul ignore next */
                  cov_1zwn88zeir().f[24]++;
                  cov_1zwn88zeir().s[116]++;
                  e.stopPropagation();
                  /* istanbul ignore next */
                  cov_1zwn88zeir().s[117]++;
                  onToggleAutonomy(agent.id, !agent.autonomyEnabled);
                },
                className: `${agent.autonomyEnabled ?
                /* istanbul ignore next */
                (cov_1zwn88zeir().b[21][0]++, "bg-green-900/50 border-green-500 text-white hover:bg-green-800 hover:text-white") :
                /* istanbul ignore next */
                (cov_1zwn88zeir().b[21][1]++, "bg-gray-900/50 border-gray-500 text-white hover:bg-gray-800 hover:text-white")}`,
                children: agent.autonomyEnabled ?
                /* istanbul ignore next */
                (/*#__PURE__*/cov_1zwn88zeir().b[22][0]++, (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Power, {
                    size: 14,
                    className: "mr-1"
                  }), "Auto On"]
                })) :
                /* istanbul ignore next */
                (/*#__PURE__*/cov_1zwn88zeir().b[22][1]++, (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.PowerOff, {
                    size: 14,
                    className: "mr-1"
                  }), "Auto Off"]
                }))
              }), agent.inConversation ?
              /* istanbul ignore next */
              (/*#__PURE__*/cov_1zwn88zeir().b[23][0]++, (0, _jsxruntime.jsxs)(_button.Button, {
                variant: "outline",
                size: "sm",
                onClick: e => {
                  /* istanbul ignore next */
                  cov_1zwn88zeir().f[25]++;
                  cov_1zwn88zeir().s[118]++;
                  e.stopPropagation();
                  /* istanbul ignore next */
                  cov_1zwn88zeir().s[119]++;
                  onRemoveFromConversation(agent.id);
                },
                className: "bg-purple-900/50 border-purple-500 text-white hover:bg-purple-800 hover:text-white",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.UserMinus, {
                  size: 14,
                  className: "mr-1"
                }), "Remove"]
              })) :
              /* istanbul ignore next */
              (/*#__PURE__*/cov_1zwn88zeir().b[23][1]++, (0, _jsxruntime.jsxs)(_button.Button, {
                variant: "outline",
                size: "sm",
                disabled:
                /* istanbul ignore next */
                (cov_1zwn88zeir().b[24][0]++, !activeConversation) &&
                /* istanbul ignore next */
                (cov_1zwn88zeir().b[24][1]++, agents.some(a => {
                  /* istanbul ignore next */
                  cov_1zwn88zeir().f[26]++;
                  cov_1zwn88zeir().s[120]++;
                  return a.inConversation;
                })),
                onClick: e => {
                  /* istanbul ignore next */
                  cov_1zwn88zeir().f[27]++;
                  cov_1zwn88zeir().s[121]++;
                  e.stopPropagation();
                  /* istanbul ignore next */
                  cov_1zwn88zeir().s[122]++;
                  onAddToConversation(agent.id);
                },
                className: "bg-purple-900/50 border-purple-500 text-white hover:bg-purple-800 hover:text-white",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.UserPlus, {
                  size: 14,
                  className: "mr-1"
                }), "Add"]
              }))]
            })]
          }, agent.id);
        })
      })
    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "p-4 border-t border-border",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_dialog.Dialog, {
        open: isDialogOpen,
        onOpenChange: setIsDialogOpen,
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
          onClick: () => {
            /* istanbul ignore next */
            cov_1zwn88zeir().f[28]++;
            cov_1zwn88zeir().s[123]++;
            return setIsDialogOpen(true);
          },
          className: "w-full",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Plus, {
            size: 16,
            className: "mr-2"
          }), "Create Agent"]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_dialog.DialogContent, {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_dialog.DialogHeader, {
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_dialog.DialogTitle, {
              children: "Create New Agent"
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "py-4",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              htmlFor: "new-agent-name",
              className: "text-sm font-medium block mb-2",
              children: "Agent Name"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
              id: "new-agent-name",
              value: newAgentName,
              onChange: e => {
                /* istanbul ignore next */
                cov_1zwn88zeir().f[29]++;
                cov_1zwn88zeir().s[124]++;
                return setNewAgentName(e.target.value);
              },
              placeholder: "Enter agent name...",
              autoFocus: true
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_dialog.DialogFooter, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_dialog.DialogClose, {
              asChild: true,
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
                variant: "outline",
                children: "Cancel"
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
              onClick: () => {
                /* istanbul ignore next */
                cov_1zwn88zeir().f[30]++;
                cov_1zwn88zeir().s[125]++;
                if (newAgentName.trim()) {
                  /* istanbul ignore next */
                  cov_1zwn88zeir().b[25][0]++;
                  cov_1zwn88zeir().s[126]++;
                  onCreateAgentWithName(newAgentName.trim());
                  /* istanbul ignore next */
                  cov_1zwn88zeir().s[127]++;
                  setNewAgentName("");
                  /* istanbul ignore next */
                  cov_1zwn88zeir().s[128]++;
                  setIsDialogOpen(false);
                } else
                /* istanbul ignore next */
                {
                  cov_1zwn88zeir().b[25][1]++;
                }
              },
              children: "Create"
            })]
          })]
        })]
      })
    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_dialog.Dialog, {
      open: isExportDialogOpen,
      onOpenChange: setIsExportDialogOpen,
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_dialog.DialogContent, {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_dialog.DialogHeader, {
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_dialog.DialogTitle, {
            children: "Export Agents"
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "py-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "mb-4",
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center space-x-2",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_checkbox.Checkbox, {
                id: "export-all",
                checked: exportAllAgents,
                onCheckedChange: checked => {
                  /* istanbul ignore next */
                  cov_1zwn88zeir().f[31]++;
                  cov_1zwn88zeir().s[129]++;
                  setExportAllAgents(checked === true);
                }
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
                htmlFor: "export-all",
                children: "Export all agents"
              })]
            })
          }),
          /* istanbul ignore next */
          (cov_1zwn88zeir().b[26][0]++, !exportAllAgents) &&
          /* istanbul ignore next */
          (cov_1zwn88zeir().b[26][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "space-y-2",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-sm font-medium mb-2",
              children: "Select agents to export:"
            }), agents.map(agent => {
              /* istanbul ignore next */
              cov_1zwn88zeir().f[32]++;
              cov_1zwn88zeir().s[130]++;
              return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-center space-x-2",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_checkbox.Checkbox, {
                  id: `export-agent-${agent.id}`,
                  checked:
                  /* istanbul ignore next */
                  (cov_1zwn88zeir().b[27][0]++, selectedAgentsForExport[agent.id]) ||
                  /* istanbul ignore next */
                  (cov_1zwn88zeir().b[27][1]++, false),
                  onCheckedChange: () => {
                    /* istanbul ignore next */
                    cov_1zwn88zeir().f[33]++;
                    cov_1zwn88zeir().s[131]++;
                    return toggleAgentSelection(agent.id);
                  }
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_label.Label, {
                  htmlFor: `export-agent-${agent.id}`,
                  className: "flex items-center",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    className: "w-3 h-3 rounded-full mr-2",
                    style: {
                      backgroundColor: agent.color
                    }
                  }), agent.name]
                })]
              }, agent.id);
            })]
          })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "mt-6 pt-4 border-t",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center space-x-2 mb-3",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_checkbox.Checkbox, {
                id: "include-settings",
                checked: includeSettings,
                onCheckedChange: checked => {
                  /* istanbul ignore next */
                  cov_1zwn88zeir().f[34]++;
                  cov_1zwn88zeir().s[132]++;
                  setIncludeSettings(checked === true);
                  /* istanbul ignore next */
                  cov_1zwn88zeir().s[133]++;
                  if (checked === false) {
                    /* istanbul ignore next */
                    cov_1zwn88zeir().b[28][0]++;
                    cov_1zwn88zeir().s[134]++;
                    setIncludeApiKeys(false);
                  } else
                  /* istanbul ignore next */
                  {
                    cov_1zwn88zeir().b[28][1]++;
                  }
                }
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
                htmlFor: "include-settings",
                children: "Include settings"
              })]
            }),
            /* istanbul ignore next */
            (cov_1zwn88zeir().b[29][0]++, includeSettings) &&
            /* istanbul ignore next */
            (cov_1zwn88zeir().b[29][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "ml-6 mb-3",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-center space-x-2",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_checkbox.Checkbox, {
                  id: "include-api-keys",
                  checked: includeApiKeys,
                  onCheckedChange: checked => {
                    /* istanbul ignore next */
                    cov_1zwn88zeir().f[35]++;
                    cov_1zwn88zeir().s[135]++;
                    return setIncludeApiKeys(checked === true);
                  }
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_label.Label, {
                  htmlFor: "include-api-keys",
                  className: "flex items-center",
                  children: ["Include API keys", /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                    className: "text-red-500 ml-1",
                    children: "*"
                  })]
                })]
              }),
              /* istanbul ignore next */
              (cov_1zwn88zeir().b[30][0]++, includeApiKeys) &&
              /* istanbul ignore next */
              (cov_1zwn88zeir().b[30][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                className: "text-xs text-red-500 mt-1",
                children: "Warning: API keys are sensitive information. Only export them if you're sure about security."
              }))]
            })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center space-x-2",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_checkbox.Checkbox, {
                id: "include-conversations",
                checked: includeConversations,
                onCheckedChange: checked => {
                  /* istanbul ignore next */
                  cov_1zwn88zeir().f[36]++;
                  cov_1zwn88zeir().s[136]++;
                  return setIncludeConversations(checked === true);
                }
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
                htmlFor: "include-conversations",
                children: "Include conversation histories"
              })]
            })]
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_dialog.DialogFooter, {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_dialog.DialogClose, {
            asChild: true,
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
              variant: "outline",
              children: "Cancel"
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
            onClick: handleExportConfirm,
            disabled:
            /* istanbul ignore next */
            (cov_1zwn88zeir().b[31][0]++, !exportAllAgents) &&
            /* istanbul ignore next */
            (cov_1zwn88zeir().b[31][1]++, Object.values(selectedAgentsForExport).filter(Boolean).length === 0),
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Download, {
              size: 16,
              className: "mr-2"
            }), "Export"]
          })]
        })]
      })
    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_dialog.Dialog, {
      open: isImportDialogOpen,
      onOpenChange: open => {
        /* istanbul ignore next */
        cov_1zwn88zeir().f[37]++;
        cov_1zwn88zeir().s[137]++;
        if (!open) {
          /* istanbul ignore next */
          cov_1zwn88zeir().b[32][0]++;
          cov_1zwn88zeir().s[138]++;
          setImportFile(null);
          /* istanbul ignore next */
          cov_1zwn88zeir().s[139]++;
          setImportError(null);
        } else
        /* istanbul ignore next */
        {
          cov_1zwn88zeir().b[32][1]++;
        }
        cov_1zwn88zeir().s[140]++;
        setIsImportDialogOpen(open);
      },
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_dialog.DialogContent, {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_dialog.DialogHeader, {
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_dialog.DialogTitle, {
            children: "Import Agents"
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "py-4",
          children: [
          /* istanbul ignore next */
          (cov_1zwn88zeir().b[33][0]++, importFile) &&
          /* istanbul ignore next */
          (cov_1zwn88zeir().b[33][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "mb-4",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-sm font-medium",
              children: "Selected file:"
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
              className: "text-sm",
              children: [importFile.name, " (", (importFile.size / 1024).toFixed(1), " KB)"]
            })]
          })),
          /* istanbul ignore next */
          (cov_1zwn88zeir().b[34][0]++, hasSettingsInImport) &&
          /* istanbul ignore next */
          (cov_1zwn88zeir().b[34][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "mb-4 pb-4 border-b",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center space-x-2",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_checkbox.Checkbox, {
                id: "import-settings",
                checked: importSettings,
                onCheckedChange: checked => {
                  /* istanbul ignore next */
                  cov_1zwn88zeir().f[38]++;
                  cov_1zwn88zeir().s[141]++;
                  setImportSettings(checked === true);
                  /* istanbul ignore next */
                  cov_1zwn88zeir().s[142]++;
                  if (checked === false) {
                    /* istanbul ignore next */
                    cov_1zwn88zeir().b[35][0]++;
                    cov_1zwn88zeir().s[143]++;
                    setImportApiKeys(false);
                  } else
                  /* istanbul ignore next */
                  {
                    cov_1zwn88zeir().b[35][1]++;
                  }
                }
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
                htmlFor: "import-settings",
                children: "Import settings"
              })]
            }),
            /* istanbul ignore next */
            (cov_1zwn88zeir().b[36][0]++, importSettings) &&
            /* istanbul ignore next */
            (cov_1zwn88zeir().b[36][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "ml-6 mt-2",
              children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-center space-x-2",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_checkbox.Checkbox, {
                  id: "import-api-keys",
                  checked: importApiKeys,
                  onCheckedChange: checked => {
                    /* istanbul ignore next */
                    cov_1zwn88zeir().f[39]++;
                    cov_1zwn88zeir().s[144]++;
                    return setImportApiKeys(checked === true);
                  }
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
                  htmlFor: "import-api-keys",
                  children: "Import API keys"
                })]
              })
            }))]
          })), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "mb-4 pb-4 border-b",
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center space-x-2",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_checkbox.Checkbox, {
                id: "import-conversations",
                checked: importConversations,
                onCheckedChange: checked => {
                  /* istanbul ignore next */
                  cov_1zwn88zeir().f[40]++;
                  cov_1zwn88zeir().s[145]++;
                  return setImportConversations(checked === true);
                },
                disabled: !hasConversationsInImport
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_label.Label, {
                htmlFor: "import-conversations",
                className: !hasConversationsInImport ?
                /* istanbul ignore next */
                (cov_1zwn88zeir().b[37][0]++, "text-muted-foreground") :
                /* istanbul ignore next */
                (cov_1zwn88zeir().b[37][1]++, ""),
                children: ["Import conversation histories",
                /* istanbul ignore next */
                (cov_1zwn88zeir().b[38][0]++, !hasConversationsInImport) &&
                /* istanbul ignore next */
                (cov_1zwn88zeir().b[38][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                  className: "ml-2 text-xs text-muted-foreground",
                  children: "(No conversations found in import file)"
                }))]
              })]
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "space-y-4",
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                className: "text-sm font-medium mb-2",
                children: "Import mode:"
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_radiogroup.RadioGroup, {
                value: importMode,
                onValueChange: value => {
                  /* istanbul ignore next */
                  cov_1zwn88zeir().f[41]++;
                  cov_1zwn88zeir().s[146]++;
                  return setImportMode(value);
                },
                children: [
                /* istanbul ignore next */
                (cov_1zwn88zeir().b[39][0]++, hasSettingsInImport) &&
                /* istanbul ignore next */
                (cov_1zwn88zeir().b[39][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex items-center space-x-2 mb-2",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_radiogroup.RadioGroupItem, {
                    value: "settings-only",
                    id: "import-settings-only"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
                    htmlFor: "import-settings-only",
                    children: "Import settings only (no agents)"
                  })]
                })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex items-center space-x-2 mb-2",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_radiogroup.RadioGroupItem, {
                    value: "new",
                    id: "import-new"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
                    htmlFor: "import-new",
                    children: "Import as new agents"
                  })]
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex items-center space-x-2 mb-2",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_radiogroup.RadioGroupItem, {
                    value: "replace",
                    id: "import-replace"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
                    htmlFor: "import-replace",
                    children: "Replace existing agents with same ID"
                  })]
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex items-center space-x-2",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_radiogroup.RadioGroupItem, {
                    value: "merge",
                    id: "import-merge"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
                    htmlFor: "import-merge",
                    children: "Merge knowledge with existing agents"
                  })]
                })]
              })]
            })
          }),
          /* istanbul ignore next */
          (cov_1zwn88zeir().b[40][0]++, importError) &&
          /* istanbul ignore next */
          (cov_1zwn88zeir().b[40][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "mt-4 p-3 bg-red-500/20 border border-red-500 rounded-md flex items-start",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.AlertCircle, {
              className: "text-red-500 mr-2 mt-0.5 flex-shrink-0",
              size: 16
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-sm text-red-500",
              children: importError
            })]
          }))]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_dialog.DialogFooter, {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_dialog.DialogClose, {
            asChild: true,
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
              variant: "outline",
              children: "Cancel"
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
            onClick: handleImportConfirm,
            disabled:
            /* istanbul ignore next */
            (cov_1zwn88zeir().b[41][0]++, !importFile) ||
            /* istanbul ignore next */
            (cov_1zwn88zeir().b[41][1]++, isImporting),
            children: isImporting ?
            /* istanbul ignore next */
            (/*#__PURE__*/cov_1zwn88zeir().b[42][0]++, (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_spinner.Spinner, {
                size: 16,
                className: "mr-2"
              }), "Importing..."]
            })) :
            /* istanbul ignore next */
            (/*#__PURE__*/cov_1zwn88zeir().b[42][1]++, (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Upload, {
                size: 16,
                className: "mr-2"
              }), "Import"]
            }))
          })]
        })]
      })
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
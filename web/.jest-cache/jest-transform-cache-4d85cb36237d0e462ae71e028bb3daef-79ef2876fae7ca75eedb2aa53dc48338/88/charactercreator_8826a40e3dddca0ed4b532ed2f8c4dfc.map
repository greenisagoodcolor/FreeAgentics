{"version":3,"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/components/character-creator.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { Loader2, CheckCircle, AlertTriangle } from \"lucide-react\";\nimport { AgentCreationWizard } from \"@/components/ui/agent-creation-wizard\";\nimport { AgentTemplate } from \"@/components/ui/agent-template-selector\";\nimport { AgentConfigurationData } from \"@/components/ui/agent-configuration-form\";\nimport { agentsApi, Agent, CreateAgentRequest } from \"@/lib/api/agents-api\";\n\ninterface CharacterCreatorProps {\n  onClose: () => void;\n  onSuccess: (agent: Agent) => void;\n}\n\nexport function CharacterCreator({\n  onClose,\n  onSuccess,\n}: CharacterCreatorProps) {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<Agent | null>(null);\n\n  const handleAgentCreate = async (\n    template: AgentTemplate,\n    configuration: AgentConfigurationData,\n  ) => {\n    setIsSubmitting(true);\n    setError(null);\n\n    try {\n      // Convert template and configuration to API request format\n      const createRequest: CreateAgentRequest = {\n        name: configuration.name,\n\n        // Convert Active Inference configuration\n        activeInference: {\n          template: template.category, // Use template category as Active Inference template\n          stateLabels: [\"State1\", \"State2\", \"State3\"],\n          numStates:\n            configuration.mathematics?.matrices?.aMatrix?.rows ||\n            template.mathematicalFoundation.beliefsStates,\n          numObservations:\n            configuration.mathematics?.matrices?.bMatrix?.observations ||\n            template.mathematicalFoundation.observationModalities,\n          numActions: template.mathematicalFoundation.actionSpaces,\n          generativeModel: {\n            A: [],\n            B: [],\n            C: [],\n            D: [],\n          },\n          precisionParameters: {\n            sensory:\n              configuration.mathematics?.precision?.sensoryPrecision ||\n              template.mathematicalFoundation.defaultPrecision.sensory,\n            policy:\n              configuration.mathematics?.precision?.policyPrecision ||\n              template.mathematicalFoundation.defaultPrecision.policy,\n            state:\n              configuration.mathematics?.precision?.statePrecision ||\n              template.mathematicalFoundation.defaultPrecision.state,\n          },\n          mathematicalConstraints: {\n            normalizedBeliefs: true,\n            stochasticMatrices: true,\n            precisionBounds: true,\n          },\n        },\n\n        // Add legacy personality mapping for backward compatibility\n        personality: undefined,\n\n        capabilities: template.capabilities || [\n          \"movement\",\n          \"perception\",\n          \"communication\",\n        ],\n\n        tags: [\n          template.category,\n          template.complexity,\n          ...(configuration.environment?.tags || []),\n        ],\n\n        metadata: {\n          templateId: template.id,\n          templateName: template.name,\n          complexity: template.complexity,\n          description: configuration.description,\n          mathematicalFoundation: template.mathematicalFoundation,\n          createdViaWizard: true,\n          configurationVersion: \"1.0\",\n          ...(configuration.advanced?.customParameters || {}),\n        },\n      };\n\n      // Create agent via API\n      const result = await agentsApi.createAgent(createRequest);\n\n      setSuccess(result.agent);\n\n      // Show success briefly, then call success callback\n      setTimeout(() => {\n        onSuccess(result.agent);\n      }, 1500);\n    } catch (err) {\n      const errorMessage =\n        err instanceof Error ? err.message : \"Unknown error occurred\";\n      setError(errorMessage);\n      console.error(\"Agent creation failed:\", err);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Handle creating from template directly (backward compatibility)\n  const handleTemplateCreate = async (template: AgentTemplate) => {\n    setIsSubmitting(true);\n    setError(null);\n\n    try {\n      // Create agent using template method\n      const result = await agentsApi.createAgentFromTemplate({\n        template: template.category,\n        name: `${template.name} ${Date.now()}`,\n        stateLabels: [\"Explore\", \"Rest\", \"Communicate\", \"Plan\"],\n        precisionParameters: {\n          sensory:\n            template.mathematicalFoundation.defaultPrecision.sensory || 16,\n          policy: template.mathematicalFoundation.defaultPrecision.policy || 12,\n          state: template.mathematicalFoundation.defaultPrecision.state || 2,\n        },\n        tags: [template.category, template.complexity],\n        metadata: {\n          templateId: template.id,\n          templateName: template.name,\n          complexity: template.complexity,\n          createdDirectly: true,\n        },\n      });\n\n      setSuccess(result.agent);\n\n      setTimeout(() => {\n        onSuccess(result.agent);\n      }, 1500);\n    } catch (err) {\n      const errorMessage =\n        err instanceof Error ? err.message : \"Unknown error occurred\";\n      setError(errorMessage);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  if (success) {\n    return (\n      <Card className=\"p-6\">\n        <div className=\"text-center space-y-4\">\n          <CheckCircle className=\"h-16 w-16 text-green-600 mx-auto\" />\n          <div>\n            <h3 className=\"text-lg font-semibold text-green-900\">\n              Agent Created Successfully!\n            </h3>\n            <p className=\"text-sm text-green-700 mt-2\">\n              <strong>{success.name}</strong> has been created with Active\n              Inference capabilities.\n            </p>\n            {success.activeInference && (\n              <div className=\"mt-4 p-3 bg-green-50 border border-green-200 rounded-lg\">\n                <div className=\"text-xs text-green-800 space-y-1\">\n                  <p>• Template: {success.activeInference.template}</p>\n                  <p>• States: {success.activeInference.numStates}</p>\n                  <p>\n                    • Precision γ:{\" \"}\n                    {success.activeInference.precisionParameters.sensory.toFixed(\n                      1,\n                    )}\n                  </p>\n                  <p>• Mathematical validation: ✓ Passed</p>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </Card>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h2 className=\"text-2xl font-bold\">Create Active Inference Agent</h2>\n          <p className=\"text-muted-foreground mt-1\">\n            Build a mathematically rigorous agent with real-time visualization\n          </p>\n        </div>\n        <Button variant=\"outline\" onClick={onClose} disabled={isSubmitting}>\n          Cancel\n        </Button>\n      </div>\n\n      {/* Error Display */}\n      {error && (\n        <Alert variant=\"destructive\">\n          <AlertTriangle className=\"h-4 w-4\" />\n          <AlertDescription>\n            <strong>Creation Failed:</strong> {error}\n          </AlertDescription>\n        </Alert>\n      )}\n\n      {/* Loading Overlay */}\n      {isSubmitting && (\n        <div className=\"relative\">\n          <div className=\"absolute inset-0 bg-background/80 backdrop-blur-sm z-10 flex items-center justify-center rounded-lg\">\n            <div className=\"flex items-center gap-3\">\n              <Loader2 className=\"h-6 w-6 animate-spin\" />\n              <div className=\"text-center\">\n                <p className=\"font-medium\">Creating Agent...</p>\n                <p className=\"text-sm text-muted-foreground\">\n                  Validating mathematical parameters and initializing Active\n                  Inference systems\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Agent Creation Wizard */}\n      <AgentCreationWizard\n        onAgentCreate={handleAgentCreate}\n        onCancel={onClose}\n      />\n\n      {/* Mathematical Information */}\n      <Card className=\"p-4 bg-blue-50 border-blue-200\">\n        <h4 className=\"font-semibold text-blue-900 mb-2\">\n          Active Inference Integration\n        </h4>\n        <div className=\"text-sm text-blue-800 space-y-1\">\n          <p>\n            • <strong>API Validation:</strong> Mathematical constraints verified\n            server-side\n          </p>\n          <p>\n            • <strong>Belief States:</strong> Real-time q(s) distribution with\n            entropy calculation\n          </p>\n          <p>\n            • <strong>Free Energy:</strong> F = Accuracy + Complexity\n            minimization\n          </p>\n          <p>\n            • <strong>pymdp Compatible:</strong> Ready for expert review and\n            production deployment\n          </p>\n        </div>\n      </Card>\n    </div>\n  );\n}\n"],"names":["CharacterCreator","onClose","onSuccess","isSubmitting","setIsSubmitting","useState","error","setError","success","setSuccess","handleAgentCreate","template","configuration","createRequest","name","activeInference","category","stateLabels","numStates","mathematics","matrices","aMatrix","rows","mathematicalFoundation","beliefsStates","numObservations","bMatrix","observations","observationModalities","numActions","actionSpaces","generativeModel","A","B","C","D","precisionParameters","sensory","precision","sensoryPrecision","defaultPrecision","policy","policyPrecision","state","statePrecision","mathematicalConstraints","normalizedBeliefs","stochasticMatrices","precisionBounds","personality","undefined","capabilities","tags","complexity","environment","metadata","templateId","id","templateName","description","createdViaWizard","configurationVersion","advanced","customParameters","result","agentsApi","createAgent","agent","setTimeout","err","errorMessage","Error","message","console","handleTemplateCreate","createAgentFromTemplate","Date","now","createdDirectly","Card","className","div","CheckCircle","h3","p","strong","toFixed","h2","Button","variant","onClick","disabled","Alert","AlertTriangle","AlertDescription","Loader2","AgentCreationWizard","onAgentCreate","onCancel","h4"],"mappings":"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"}
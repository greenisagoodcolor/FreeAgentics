cbe56fe857c96bc7fd75b7d2cb6fae79
/**
 * Knowledge Graph Management Module
 * ADR-007 Compliant - Knowledge Management
 */"use strict";

/* istanbul ignore next */
function cov_25agh713ge() {
  var path = "/Users/matthewmoroney/builds/FreeAgentics/web/lib/knowledge-graph-management.ts";
  var hash = "bc795084bfc804da26b48a52a7d42a05cab1816e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewmoroney/builds/FreeAgentics/web/lib/knowledge-graph-management.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 51,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 23
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 23
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 28
        }
      },
      "7": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 36
        }
      },
      "8": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 27
        }
      },
      "9": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 24
        }
      },
      "10": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 27
        }
      },
      "11": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 27
        }
      },
      "12": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 29
        }
      },
      "13": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 26
        }
      },
      "14": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 26
        }
      },
      "15": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 29
        }
      },
      "16": {
        start: {
          line: 52,
          column: 19
        },
        end: {
          line: 52,
          column: 20
        }
      },
      "17": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 63,
          column: 6
        }
      },
      "18": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 68,
          column: 5
        }
      },
      "19": {
        start: {
          line: 66,
          column: 30
        },
        end: {
          line: 66,
          column: 46
        }
      },
      "20": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 66
        }
      },
      "21": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 79,
          column: 6
        }
      },
      "22": {
        start: {
          line: 83,
          column: 25
        },
        end: {
          line: 83,
          column: 68
        }
      },
      "23": {
        start: {
          line: 83,
          column: 47
        },
        end: {
          line: 83,
          column: 67
        }
      },
      "24": {
        start: {
          line: 84,
          column: 25
        },
        end: {
          line: 84,
          column: 68
        }
      },
      "25": {
        start: {
          line: 84,
          column: 47
        },
        end: {
          line: 84,
          column: 67
        }
      },
      "26": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 87,
          column: 5
        }
      },
      "27": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 69
        }
      },
      "28": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 90,
          column: 5
        }
      },
      "29": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 69
        }
      },
      "30": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 101,
          column: 6
        }
      },
      "31": {
        start: {
          line: 104,
          column: 22
        },
        end: {
          line: 104,
          column: 65
        }
      },
      "32": {
        start: {
          line: 104,
          column: 49
        },
        end: {
          line: 104,
          column: 64
        }
      },
      "33": {
        start: {
          line: 105,
          column: 4
        },
        end: {
          line: 107,
          column: 5
        }
      },
      "34": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 52
        }
      },
      "35": {
        start: {
          line: 108,
          column: 25
        },
        end: {
          line: 110,
          column: 5
        }
      },
      "36": {
        start: {
          line: 111,
          column: 4
        },
        end: {
          line: 115,
          column: 6
        }
      },
      "37": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 123,
          column: 6
        }
      },
      "38": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 134,
          column: 6
        }
      },
      "39": {
        start: {
          line: 128,
          column: 39
        },
        end: {
          line: 128,
          column: 54
        }
      },
      "40": {
        start: {
          line: 129,
          column: 39
        },
        end: {
          line: 129,
          column: 81
        }
      },
      "41": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 139,
          column: 5
        }
      },
      "42": {
        start: {
          line: 137,
          column: 31
        },
        end: {
          line: 137,
          column: 47
        }
      },
      "43": {
        start: {
          line: 137,
          column: 75
        },
        end: {
          line: 137,
          column: 89
        }
      },
      "44": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 20
        }
      },
      "45": {
        start: {
          line: 141,
          column: 18
        },
        end: {
          line: 148,
          column: 5
        }
      },
      "46": {
        start: {
          line: 149,
          column: 20
        },
        end: {
          line: 149,
          column: 29
        }
      },
      "47": {
        start: {
          line: 150,
          column: 4
        },
        end: {
          line: 168,
          column: 5
        }
      },
      "48": {
        start: {
          line: 151,
          column: 31
        },
        end: {
          line: 151,
          column: 44
        }
      },
      "49": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 154,
          column: 9
        }
      },
      "50": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 24
        }
      },
      "51": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 155,
          column: 40
        }
      },
      "52": {
        start: {
          line: 155,
          column: 31
        },
        end: {
          line: 155,
          column: 40
        }
      },
      "53": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 26
        }
      },
      "54": {
        start: {
          line: 158,
          column: 26
        },
        end: {
          line: 158,
          column: 168
        }
      },
      "55": {
        start: {
          line: 158,
          column: 50
        },
        end: {
          line: 158,
          column: 88
        }
      },
      "56": {
        start: {
          line: 158,
          column: 99
        },
        end: {
          line: 158,
          column: 138
        }
      },
      "57": {
        start: {
          line: 158,
          column: 152
        },
        end: {
          line: 158,
          column: 167
        }
      },
      "58": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 167,
          column: 9
        }
      },
      "59": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 166,
          column: 15
        }
      },
      "60": {
        start: {
          line: 169,
          column: 4
        },
        end: {
          line: 169,
          column: 16
        }
      },
      "61": {
        start: {
          line: 172,
          column: 22
        },
        end: {
          line: 172,
          column: 24
        }
      },
      "62": {
        start: {
          line: 173,
          column: 24
        },
        end: {
          line: 173,
          column: 33
        }
      },
      "63": {
        start: {
          line: 174,
          column: 24
        },
        end: {
          line: 174,
          column: 33
        }
      },
      "64": {
        start: {
          line: 176,
          column: 4
        },
        end: {
          line: 178,
          column: 5
        }
      },
      "65": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 177,
          column: 39
        }
      },
      "66": {
        start: {
          line: 179,
          column: 4
        },
        end: {
          line: 197,
          column: 5
        }
      },
      "67": {
        start: {
          line: 180,
          column: 25
        },
        end: {
          line: 180,
          column: 49
        }
      },
      "68": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 196,
          column: 9
        }
      },
      "69": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 189,
          column: 13
        }
      },
      "70": {
        start: {
          line: 184,
          column: 16
        },
        end: {
          line: 188,
          column: 19
        }
      },
      "71": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 192,
          column: 13
        }
      },
      "72": {
        start: {
          line: 191,
          column: 16
        },
        end: {
          line: 191,
          column: 47
        }
      },
      "73": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 43
        }
      },
      "74": {
        start: {
          line: 199,
          column: 4
        },
        end: {
          line: 201,
          column: 5
        }
      },
      "75": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 200,
          column: 39
        }
      },
      "76": {
        start: {
          line: 202,
          column: 4
        },
        end: {
          line: 209,
          column: 5
        }
      },
      "77": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 208,
          column: 9
        }
      },
      "78": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 207,
          column: 13
        }
      },
      "79": {
        start: {
          line: 206,
          column: 16
        },
        end: {
          line: 206,
          column: 47
        }
      },
      "80": {
        start: {
          line: 210,
          column: 19
        },
        end: {
          line: 223,
          column: 5
        }
      },
      "81": {
        start: {
          line: 224,
          column: 4
        },
        end: {
          line: 226,
          column: 5
        }
      },
      "82": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 225,
          column: 37
        }
      },
      "83": {
        start: {
          line: 227,
          column: 4
        },
        end: {
          line: 227,
          column: 18
        }
      },
      "84": {
        start: {
          line: 230,
          column: 4
        },
        end: {
          line: 232,
          column: 5
        }
      },
      "85": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 231,
          column: 46
        }
      },
      "86": {
        start: {
          line: 234,
          column: 14
        },
        end: {
          line: 234,
          column: 56
        }
      },
      "87": {
        start: {
          line: 235,
          column: 4
        },
        end: {
          line: 235,
          column: 71
        }
      },
      "88": {
        start: {
          line: 236,
          column: 4
        },
        end: {
          line: 236,
          column: 70
        }
      },
      "89": {
        start: {
          line: 238,
          column: 4
        },
        end: {
          line: 243,
          column: 5
        }
      },
      "90": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 239,
          column: 46
        }
      },
      "91": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 240,
          column: 64
        }
      },
      "92": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 241,
          column: 62
        }
      },
      "93": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 242,
          column: 31
        }
      },
      "94": {
        start: {
          line: 245,
          column: 4
        },
        end: {
          line: 252,
          column: 5
        }
      },
      "95": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 246,
          column: 94
        }
      },
      "96": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 247,
          column: 62
        }
      },
      "97": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 250,
          column: 9
        }
      },
      "98": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 249,
          column: 70
        }
      },
      "99": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 251,
          column: 31
        }
      },
      "100": {
        start: {
          line: 253,
          column: 4
        },
        end: {
          line: 253,
          column: 26
        }
      },
      "101": {
        start: {
          line: 254,
          column: 4
        },
        end: {
          line: 254,
          column: 24
        }
      },
      "102": {
        start: {
          line: 255,
          column: 4
        },
        end: {
          line: 255,
          column: 15
        }
      },
      "103": {
        start: {
          line: 258,
          column: 4
        },
        end: {
          line: 287,
          column: 5
        }
      },
      "104": {
        start: {
          line: 259,
          column: 23
        },
        end: {
          line: 259,
          column: 39
        }
      },
      "105": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 263,
          column: 9
        }
      },
      "106": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 262,
          column: 55
        }
      },
      "107": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 269,
          column: 9
        }
      },
      "108": {
        start: {
          line: 266,
          column: 12
        },
        end: {
          line: 268,
          column: 13
        }
      },
      "109": {
        start: {
          line: 267,
          column: 16
        },
        end: {
          line: 267,
          column: 59
        }
      },
      "110": {
        start: {
          line: 271,
          column: 24
        },
        end: {
          line: 271,
          column: 60
        }
      },
      "111": {
        start: {
          line: 271,
          column: 54
        },
        end: {
          line: 271,
          column: 58
        }
      },
      "112": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 276,
          column: 9
        }
      },
      "113": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 275,
          column: 13
        }
      },
      "114": {
        start: {
          line: 274,
          column: 16
        },
        end: {
          line: 274,
          column: 59
        }
      },
      "115": {
        start: {
          line: 277,
          column: 8
        },
        end: {
          line: 286,
          column: 10
        }
      },
      "116": {
        start: {
          line: 288,
          column: 4
        },
        end: {
          line: 288,
          column: 54
        }
      },
      "117": {
        start: {
          line: 291,
          column: 22
        },
        end: {
          line: 291,
          column: 40
        }
      },
      "118": {
        start: {
          line: 292,
          column: 22
        },
        end: {
          line: 292,
          column: 40
        }
      },
      "119": {
        start: {
          line: 293,
          column: 29
        },
        end: {
          line: 293,
          column: 60
        }
      },
      "120": {
        start: {
          line: 294,
          column: 20
        },
        end: {
          line: 294,
          column: 68
        }
      },
      "121": {
        start: {
          line: 296,
          column: 20
        },
        end: {
          line: 296,
          column: 29
        }
      },
      "122": {
        start: {
          line: 297,
          column: 4
        },
        end: {
          line: 300,
          column: 5
        }
      },
      "123": {
        start: {
          line: 298,
          column: 8
        },
        end: {
          line: 298,
          column: 70
        }
      },
      "124": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 299,
          column: 70
        }
      },
      "125": {
        start: {
          line: 301,
          column: 22
        },
        end: {
          line: 301,
          column: 107
        }
      },
      "126": {
        start: {
          line: 301,
          column: 82
        },
        end: {
          line: 301,
          column: 87
        }
      },
      "127": {
        start: {
          line: 302,
          column: 20
        },
        end: {
          line: 310,
          column: 5
        }
      },
      "128": {
        start: {
          line: 311,
          column: 4
        },
        end: {
          line: 316,
          column: 5
        }
      },
      "129": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 315,
          column: 60
        }
      },
      "130": {
        start: {
          line: 312,
          column: 84
        },
        end: {
          line: 315,
          column: 13
        }
      },
      "131": {
        start: {
          line: 315,
          column: 29
        },
        end: {
          line: 315,
          column: 46
        }
      },
      "132": {
        start: {
          line: 317,
          column: 4
        },
        end: {
          line: 319,
          column: 5
        }
      },
      "133": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 318,
          column: 55
        }
      },
      "134": {
        start: {
          line: 320,
          column: 4
        },
        end: {
          line: 320,
          column: 19
        }
      },
      "135": {
        start: {
          line: 323,
          column: 20
        },
        end: {
          line: 325,
          column: 5
        }
      },
      "136": {
        start: {
          line: 326,
          column: 4
        },
        end: {
          line: 339,
          column: 5
        }
      },
      "137": {
        start: {
          line: 328,
          column: 30
        },
        end: {
          line: 328,
          column: 39
        }
      },
      "138": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 337,
          column: 9
        }
      },
      "139": {
        start: {
          line: 330,
          column: 12
        },
        end: {
          line: 336,
          column: 13
        }
      },
      "140": {
        start: {
          line: 332,
          column: 40
        },
        end: {
          line: 332,
          column: 103
        }
      },
      "141": {
        start: {
          line: 333,
          column: 16
        },
        end: {
          line: 335,
          column: 17
        }
      },
      "142": {
        start: {
          line: 334,
          column: 20
        },
        end: {
          line: 334,
          column: 47
        }
      },
      "143": {
        start: {
          line: 338,
          column: 8
        },
        end: {
          line: 338,
          column: 80
        }
      },
      "144": {
        start: {
          line: 338,
          column: 54
        },
        end: {
          line: 338,
          column: 78
        }
      },
      "145": {
        start: {
          line: 340,
          column: 4
        },
        end: {
          line: 388,
          column: 5
        }
      },
      "146": {
        start: {
          line: 342,
          column: 26
        },
        end: {
          line: 342,
          column: 60
        }
      },
      "147": {
        start: {
          line: 343,
          column: 27
        },
        end: {
          line: 343,
          column: 29
        }
      },
      "148": {
        start: {
          line: 344,
          column: 26
        },
        end: {
          line: 344,
          column: 35
        }
      },
      "149": {
        start: {
          line: 345,
          column: 8
        },
        end: {
          line: 362,
          column: 9
        }
      },
      "150": {
        start: {
          line: 346,
          column: 12
        },
        end: {
          line: 346,
          column: 49
        }
      },
      "151": {
        start: {
          line: 346,
          column: 40
        },
        end: {
          line: 346,
          column: 49
        }
      },
      "152": {
        start: {
          line: 347,
          column: 26
        },
        end: {
          line: 349,
          column: 13
        }
      },
      "153": {
        start: {
          line: 350,
          column: 12
        },
        end: {
          line: 350,
          column: 35
        }
      },
      "154": {
        start: {
          line: 351,
          column: 12
        },
        end: {
          line: 358,
          column: 13
        }
      },
      "155": {
        start: {
          line: 352,
          column: 16
        },
        end: {
          line: 352,
          column: 54
        }
      },
      "156": {
        start: {
          line: 352,
          column: 45
        },
        end: {
          line: 352,
          column: 54
        }
      },
      "157": {
        start: {
          line: 353,
          column: 35
        },
        end: {
          line: 353,
          column: 79
        }
      },
      "158": {
        start: {
          line: 354,
          column: 16
        },
        end: {
          line: 357,
          column: 17
        }
      },
      "159": {
        start: {
          line: 355,
          column: 20
        },
        end: {
          line: 355,
          column: 38
        }
      },
      "160": {
        start: {
          line: 356,
          column: 20
        },
        end: {
          line: 356,
          column: 44
        }
      },
      "161": {
        start: {
          line: 359,
          column: 12
        },
        end: {
          line: 361,
          column: 13
        }
      },
      "162": {
        start: {
          line: 360,
          column: 16
        },
        end: {
          line: 360,
          column: 39
        }
      },
      "163": {
        start: {
          line: 364,
          column: 28
        },
        end: {
          line: 364,
          column: 30
        }
      },
      "164": {
        start: {
          line: 365,
          column: 28
        },
        end: {
          line: 365,
          column: 37
        }
      },
      "165": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 372,
          column: 9
        }
      },
      "166": {
        start: {
          line: 367,
          column: 27
        },
        end: {
          line: 367,
          column: 35
        }
      },
      "167": {
        start: {
          line: 368,
          column: 12
        },
        end: {
          line: 368,
          column: 37
        }
      },
      "168": {
        start: {
          line: 369,
          column: 12
        },
        end: {
          line: 371,
          column: 13
        }
      },
      "169": {
        start: {
          line: 370,
          column: 16
        },
        end: {
          line: 370,
          column: 52
        }
      },
      "170": {
        start: {
          line: 374,
          column: 8
        },
        end: {
          line: 380,
          column: 9
        }
      },
      "171": {
        start: {
          line: 375,
          column: 12
        },
        end: {
          line: 379,
          column: 13
        }
      },
      "172": {
        start: {
          line: 376,
          column: 16
        },
        end: {
          line: 378,
          column: 17
        }
      },
      "173": {
        start: {
          line: 376,
          column: 43
        },
        end: {
          line: 376,
          column: 59
        }
      },
      "174": {
        start: {
          line: 377,
          column: 20
        },
        end: {
          line: 377,
          column: 43
        }
      },
      "175": {
        start: {
          line: 381,
          column: 8
        },
        end: {
          line: 381,
          column: 38
        }
      },
      "176": {
        start: {
          line: 383,
          column: 8
        },
        end: {
          line: 387,
          column: 60
        }
      },
      "177": {
        start: {
          line: 383,
          column: 55
        },
        end: {
          line: 387,
          column: 13
        }
      },
      "178": {
        start: {
          line: 387,
          column: 31
        },
        end: {
          line: 387,
          column: 58
        }
      },
      "179": {
        start: {
          line: 389,
          column: 4
        },
        end: {
          line: 391,
          column: 5
        }
      },
      "180": {
        start: {
          line: 390,
          column: 8
        },
        end: {
          line: 390,
          column: 103
        }
      },
      "181": {
        start: {
          line: 390,
          column: 57
        },
        end: {
          line: 390,
          column: 101
        }
      },
      "182": {
        start: {
          line: 392,
          column: 4
        },
        end: {
          line: 392,
          column: 21
        }
      },
      "183": {
        start: {
          line: 395,
          column: 19
        },
        end: {
          line: 395,
          column: 21
        }
      },
      "184": {
        start: {
          line: 397,
          column: 4
        },
        end: {
          line: 412,
          column: 5
        }
      },
      "185": {
        start: {
          line: 398,
          column: 31
        },
        end: {
          line: 398,
          column: 40
        }
      },
      "186": {
        start: {
          line: 399,
          column: 8
        },
        end: {
          line: 402,
          column: 9
        }
      },
      "187": {
        start: {
          line: 400,
          column: 12
        },
        end: {
          line: 400,
          column: 44
        }
      },
      "188": {
        start: {
          line: 401,
          column: 12
        },
        end: {
          line: 401,
          column: 44
        }
      },
      "189": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 411,
          column: 9
        }
      },
      "190": {
        start: {
          line: 404,
          column: 12
        },
        end: {
          line: 410,
          column: 13
        }
      },
      "191": {
        start: {
          line: 405,
          column: 16
        },
        end: {
          line: 409,
          column: 19
        }
      },
      "192": {
        start: {
          line: 414,
          column: 20
        },
        end: {
          line: 414,
          column: 55
        }
      },
      "193": {
        start: {
          line: 414,
          column: 49
        },
        end: {
          line: 414,
          column: 53
        }
      },
      "194": {
        start: {
          line: 415,
          column: 4
        },
        end: {
          line: 430,
          column: 5
        }
      },
      "195": {
        start: {
          line: 416,
          column: 8
        },
        end: {
          line: 422,
          column: 9
        }
      },
      "196": {
        start: {
          line: 417,
          column: 12
        },
        end: {
          line: 421,
          column: 15
        }
      },
      "197": {
        start: {
          line: 423,
          column: 8
        },
        end: {
          line: 429,
          column: 9
        }
      },
      "198": {
        start: {
          line: 424,
          column: 12
        },
        end: {
          line: 428,
          column: 15
        }
      },
      "199": {
        start: {
          line: 431,
          column: 4
        },
        end: {
          line: 434,
          column: 6
        }
      },
      "200": {
        start: {
          line: 438,
          column: 22
        },
        end: {
          line: 438,
          column: 23
        }
      },
      "201": {
        start: {
          line: 439,
          column: 4
        },
        end: {
          line: 448,
          column: 5
        }
      },
      "202": {
        start: {
          line: 440,
          column: 8
        },
        end: {
          line: 447,
          column: 9
        }
      },
      "203": {
        start: {
          line: 441,
          column: 12
        },
        end: {
          line: 446,
          column: 13
        }
      },
      "204": {
        start: {
          line: 442,
          column: 29
        },
        end: {
          line: 442,
          column: 62
        }
      },
      "205": {
        start: {
          line: 443,
          column: 16
        },
        end: {
          line: 445,
          column: 17
        }
      },
      "206": {
        start: {
          line: 444,
          column: 20
        },
        end: {
          line: 444,
          column: 73
        }
      },
      "207": {
        start: {
          line: 449,
          column: 4
        },
        end: {
          line: 449,
          column: 23
        }
      },
      "208": {
        start: {
          line: 453,
          column: 26
        },
        end: {
          line: 453,
          column: 27
        }
      },
      "209": {
        start: {
          line: 454,
          column: 20
        },
        end: {
          line: 454,
          column: 21
        }
      },
      "210": {
        start: {
          line: 455,
          column: 4
        },
        end: {
          line: 469,
          column: 5
        }
      },
      "211": {
        start: {
          line: 456,
          column: 26
        },
        end: {
          line: 456,
          column: 148
        }
      },
      "212": {
        start: {
          line: 456,
          column: 50
        },
        end: {
          line: 456,
          column: 94
        }
      },
      "213": {
        start: {
          line: 456,
          column: 105
        },
        end: {
          line: 456,
          column: 147
        }
      },
      "214": {
        start: {
          line: 457,
          column: 8
        },
        end: {
          line: 468,
          column: 9
        }
      },
      "215": {
        start: {
          line: 458,
          column: 30
        },
        end: {
          line: 458,
          column: 31
        }
      },
      "216": {
        start: {
          line: 459,
          column: 12
        },
        end: {
          line: 464,
          column: 13
        }
      },
      "217": {
        start: {
          line: 459,
          column: 24
        },
        end: {
          line: 459,
          column: 25
        }
      },
      "218": {
        start: {
          line: 460,
          column: 16
        },
        end: {
          line: 463,
          column: 17
        }
      },
      "219": {
        start: {
          line: 460,
          column: 28
        },
        end: {
          line: 460,
          column: 33
        }
      },
      "220": {
        start: {
          line: 461,
          column: 36
        },
        end: {
          line: 461,
          column: 171
        }
      },
      "221": {
        start: {
          line: 461,
          column: 58
        },
        end: {
          line: 461,
          column: 170
        }
      },
      "222": {
        start: {
          line: 462,
          column: 20
        },
        end: {
          line: 462,
          column: 47
        }
      },
      "223": {
        start: {
          line: 462,
          column: 33
        },
        end: {
          line: 462,
          column: 47
        }
      },
      "224": {
        start: {
          line: 465,
          column: 35
        },
        end: {
          line: 465,
          column: 80
        }
      },
      "225": {
        start: {
          line: 466,
          column: 12
        },
        end: {
          line: 466,
          column: 60
        }
      },
      "226": {
        start: {
          line: 467,
          column: 12
        },
        end: {
          line: 467,
          column: 24
        }
      },
      "227": {
        start: {
          line: 470,
          column: 4
        },
        end: {
          line: 470,
          column: 59
        }
      },
      "228": {
        start: {
          line: 474,
          column: 20
        },
        end: {
          line: 474,
          column: 29
        }
      },
      "229": {
        start: {
          line: 475,
          column: 24
        },
        end: {
          line: 475,
          column: 26
        }
      },
      "230": {
        start: {
          line: 477,
          column: 8
        },
        end: {
          line: 477,
          column: 40
        }
      },
      "231": {
        start: {
          line: 477,
          column: 33
        },
        end: {
          line: 477,
          column: 40
        }
      },
      "232": {
        start: {
          line: 478,
          column: 8
        },
        end: {
          line: 478,
          column: 28
        }
      },
      "233": {
        start: {
          line: 479,
          column: 8
        },
        end: {
          line: 479,
          column: 31
        }
      },
      "234": {
        start: {
          line: 480,
          column: 26
        },
        end: {
          line: 480,
          column: 145
        }
      },
      "235": {
        start: {
          line: 480,
          column: 50
        },
        end: {
          line: 480,
          column: 92
        }
      },
      "236": {
        start: {
          line: 480,
          column: 103
        },
        end: {
          line: 480,
          column: 144
        }
      },
      "237": {
        start: {
          line: 481,
          column: 8
        },
        end: {
          line: 483,
          column: 9
        }
      },
      "238": {
        start: {
          line: 482,
          column: 12
        },
        end: {
          line: 482,
          column: 37
        }
      },
      "239": {
        start: {
          line: 485,
          column: 4
        },
        end: {
          line: 491,
          column: 5
        }
      },
      "240": {
        start: {
          line: 486,
          column: 8
        },
        end: {
          line: 490,
          column: 9
        }
      },
      "241": {
        start: {
          line: 487,
          column: 30
        },
        end: {
          line: 487,
          column: 32
        }
      },
      "242": {
        start: {
          line: 488,
          column: 12
        },
        end: {
          line: 488,
          column: 36
        }
      },
      "243": {
        start: {
          line: 489,
          column: 12
        },
        end: {
          line: 489,
          column: 40
        }
      },
      "244": {
        start: {
          line: 492,
          column: 4
        },
        end: {
          line: 492,
          column: 23
        }
      },
      "245": {
        start: {
          line: 495,
          column: 26
        },
        end: {
          line: 498,
          column: 5
        }
      },
      "246": {
        start: {
          line: 497,
          column: 39
        },
        end: {
          line: 497,
          column: 61
        }
      },
      "247": {
        start: {
          line: 499,
          column: 4
        },
        end: {
          line: 499,
          column: 47
        }
      },
      "248": {
        start: {
          line: 503,
          column: 24
        },
        end: {
          line: 503,
          column: 51
        }
      },
      "249": {
        start: {
          line: 504,
          column: 24
        },
        end: {
          line: 504,
          column: 51
        }
      },
      "250": {
        start: {
          line: 505,
          column: 4
        },
        end: {
          line: 505,
          column: 46
        }
      },
      "251": {
        start: {
          line: 505,
          column: 37
        },
        end: {
          line: 505,
          column: 46
        }
      },
      "252": {
        start: {
          line: 507,
          column: 26
        },
        end: {
          line: 511,
          column: 5
        }
      },
      "253": {
        start: {
          line: 512,
          column: 22
        },
        end: {
          line: 512,
          column: 63
        }
      },
      "254": {
        start: {
          line: 513,
          column: 22
        },
        end: {
          line: 513,
          column: 63
        }
      },
      "255": {
        start: {
          line: 514,
          column: 4
        },
        end: {
          line: 514,
          column: 44
        }
      },
      "256": {
        start: {
          line: 514,
          column: 33
        },
        end: {
          line: 514,
          column: 44
        }
      },
      "257": {
        start: {
          line: 515,
          column: 4
        },
        end: {
          line: 515,
          column: 83
        }
      },
      "258": {
        start: {
          line: 515,
          column: 72
        },
        end: {
          line: 515,
          column: 83
        }
      },
      "259": {
        start: {
          line: 516,
          column: 4
        },
        end: {
          line: 516,
          column: 13
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 13
          },
          end: {
            line: 15,
            column: 14
          }
        },
        loc: {
          start: {
            line: 15,
            column: 24
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 13
          },
          end: {
            line: 18,
            column: 14
          }
        },
        loc: {
          start: {
            line: 18,
            column: 24
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 18
          },
          end: {
            line: 21,
            column: 19
          }
        },
        loc: {
          start: {
            line: 21,
            column: 29
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 24,
            column: 26
          },
          end: {
            line: 24,
            column: 27
          }
        },
        loc: {
          start: {
            line: 24,
            column: 37
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 27,
            column: 17
          },
          end: {
            line: 27,
            column: 18
          }
        },
        loc: {
          start: {
            line: 27,
            column: 28
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 30,
            column: 14
          },
          end: {
            line: 30,
            column: 15
          }
        },
        loc: {
          start: {
            line: 30,
            column: 25
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 33,
            column: 17
          },
          end: {
            line: 33,
            column: 18
          }
        },
        loc: {
          start: {
            line: 33,
            column: 28
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 36,
            column: 17
          },
          end: {
            line: 36,
            column: 18
          }
        },
        loc: {
          start: {
            line: 36,
            column: 28
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 39,
            column: 19
          },
          end: {
            line: 39,
            column: 20
          }
        },
        loc: {
          start: {
            line: 39,
            column: 30
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 39
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 42,
            column: 17
          }
        },
        loc: {
          start: {
            line: 42,
            column: 27
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 42
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 45,
            column: 16
          },
          end: {
            line: 45,
            column: 17
          }
        },
        loc: {
          start: {
            line: 45,
            column: 27
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 45
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 48,
            column: 19
          },
          end: {
            line: 48,
            column: 20
          }
        },
        loc: {
          start: {
            line: 48,
            column: 30
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 48
      },
      "13": {
        name: "createKnowledgeGraph",
        decl: {
          start: {
            line: 53,
            column: 9
          },
          end: {
            line: 53,
            column: 29
          }
        },
        loc: {
          start: {
            line: 53,
            column: 34
          },
          end: {
            line: 64,
            column: 1
          }
        },
        line: 53
      },
      "14": {
        name: "addNode",
        decl: {
          start: {
            line: 65,
            column: 9
          },
          end: {
            line: 65,
            column: 16
          }
        },
        loc: {
          start: {
            line: 65,
            column: 30
          },
          end: {
            line: 80,
            column: 1
          }
        },
        line: 65
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 66,
            column: 25
          },
          end: {
            line: 66,
            column: 26
          }
        },
        loc: {
          start: {
            line: 66,
            column: 30
          },
          end: {
            line: 66,
            column: 46
          }
        },
        line: 66
      },
      "16": {
        name: "addEdge",
        decl: {
          start: {
            line: 81,
            column: 9
          },
          end: {
            line: 81,
            column: 16
          }
        },
        loc: {
          start: {
            line: 81,
            column: 30
          },
          end: {
            line: 102,
            column: 1
          }
        },
        line: 81
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 83,
            column: 42
          },
          end: {
            line: 83,
            column: 43
          }
        },
        loc: {
          start: {
            line: 83,
            column: 47
          },
          end: {
            line: 83,
            column: 67
          }
        },
        line: 83
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 84,
            column: 42
          },
          end: {
            line: 84,
            column: 43
          }
        },
        loc: {
          start: {
            line: 84,
            column: 47
          },
          end: {
            line: 84,
            column: 67
          }
        },
        line: 84
      },
      "19": {
        name: "updateNode",
        decl: {
          start: {
            line: 103,
            column: 9
          },
          end: {
            line: 103,
            column: 19
          }
        },
        loc: {
          start: {
            line: 103,
            column: 44
          },
          end: {
            line: 124,
            column: 1
          }
        },
        line: 103
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 104,
            column: 44
          },
          end: {
            line: 104,
            column: 45
          }
        },
        loc: {
          start: {
            line: 104,
            column: 49
          },
          end: {
            line: 104,
            column: 64
          }
        },
        line: 104
      },
      "21": {
        name: "removeNode",
        decl: {
          start: {
            line: 125,
            column: 9
          },
          end: {
            line: 125,
            column: 19
          }
        },
        loc: {
          start: {
            line: 125,
            column: 35
          },
          end: {
            line: 135,
            column: 1
          }
        },
        line: 125
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 128,
            column: 34
          },
          end: {
            line: 128,
            column: 35
          }
        },
        loc: {
          start: {
            line: 128,
            column: 39
          },
          end: {
            line: 128,
            column: 54
          }
        },
        line: 128
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 129,
            column: 34
          },
          end: {
            line: 129,
            column: 35
          }
        },
        loc: {
          start: {
            line: 129,
            column: 39
          },
          end: {
            line: 129,
            column: 81
          }
        },
        line: 129
      },
      "24": {
        name: "findPath",
        decl: {
          start: {
            line: 136,
            column: 9
          },
          end: {
            line: 136,
            column: 17
          }
        },
        loc: {
          start: {
            line: 136,
            column: 41
          },
          end: {
            line: 170,
            column: 1
          }
        },
        line: 136
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 137,
            column: 26
          },
          end: {
            line: 137,
            column: 27
          }
        },
        loc: {
          start: {
            line: 137,
            column: 31
          },
          end: {
            line: 137,
            column: 47
          }
        },
        line: 137
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 137,
            column: 70
          },
          end: {
            line: 137,
            column: 71
          }
        },
        loc: {
          start: {
            line: 137,
            column: 75
          },
          end: {
            line: 137,
            column: 89
          }
        },
        line: 137
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 158,
            column: 45
          },
          end: {
            line: 158,
            column: 46
          }
        },
        loc: {
          start: {
            line: 158,
            column: 50
          },
          end: {
            line: 158,
            column: 88
          }
        },
        line: 158
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 158,
            column: 94
          },
          end: {
            line: 158,
            column: 95
          }
        },
        loc: {
          start: {
            line: 158,
            column: 99
          },
          end: {
            line: 158,
            column: 138
          }
        },
        line: 158
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 158,
            column: 147
          },
          end: {
            line: 158,
            column: 148
          }
        },
        loc: {
          start: {
            line: 158,
            column: 152
          },
          end: {
            line: 158,
            column: 167
          }
        },
        line: 158
      },
      "30": {
        name: "mergeGraphs",
        decl: {
          start: {
            line: 171,
            column: 9
          },
          end: {
            line: 171,
            column: 20
          }
        },
        loc: {
          start: {
            line: 171,
            column: 51
          },
          end: {
            line: 228,
            column: 1
          }
        },
        line: 171
      },
      "31": {
        name: "exportGraph",
        decl: {
          start: {
            line: 229,
            column: 9
          },
          end: {
            line: 229,
            column: 20
          }
        },
        loc: {
          start: {
            line: 229,
            column: 36
          },
          end: {
            line: 256,
            column: 1
          }
        },
        line: 229
      },
      "32": {
        name: "importGraph",
        decl: {
          start: {
            line: 257,
            column: 9
          },
          end: {
            line: 257,
            column: 20
          }
        },
        loc: {
          start: {
            line: 257,
            column: 35
          },
          end: {
            line: 289,
            column: 1
          }
        },
        line: 257
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 271,
            column: 49
          },
          end: {
            line: 271,
            column: 50
          }
        },
        loc: {
          start: {
            line: 271,
            column: 54
          },
          end: {
            line: 271,
            column: 58
          }
        },
        line: 271
      },
      "34": {
        name: "analyzeGraph",
        decl: {
          start: {
            line: 290,
            column: 9
          },
          end: {
            line: 290,
            column: 21
          }
        },
        loc: {
          start: {
            line: 290,
            column: 43
          },
          end: {
            line: 321,
            column: 1
          }
        },
        line: 290
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 301,
            column: 74
          },
          end: {
            line: 301,
            column: 75
          }
        },
        loc: {
          start: {
            line: 301,
            column: 82
          },
          end: {
            line: 301,
            column: 87
          }
        },
        line: 301
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 312,
            column: 67
          },
          end: {
            line: 312,
            column: 68
          }
        },
        loc: {
          start: {
            line: 312,
            column: 84
          },
          end: {
            line: 315,
            column: 13
          }
        },
        line: 312
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 315,
            column: 21
          },
          end: {
            line: 315,
            column: 22
          }
        },
        loc: {
          start: {
            line: 315,
            column: 29
          },
          end: {
            line: 315,
            column: 46
          }
        },
        line: 315
      },
      "38": {
        name: "optimizeGraph",
        decl: {
          start: {
            line: 322,
            column: 9
          },
          end: {
            line: 322,
            column: 22
          }
        },
        loc: {
          start: {
            line: 322,
            column: 44
          },
          end: {
            line: 393,
            column: 1
          }
        },
        line: 322
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 338,
            column: 49
          },
          end: {
            line: 338,
            column: 50
          }
        },
        loc: {
          start: {
            line: 338,
            column: 54
          },
          end: {
            line: 338,
            column: 78
          }
        },
        line: 338
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 376,
            column: 38
          },
          end: {
            line: 376,
            column: 39
          }
        },
        loc: {
          start: {
            line: 376,
            column: 43
          },
          end: {
            line: 376,
            column: 59
          }
        },
        line: 376
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 383,
            column: 46
          },
          end: {
            line: 383,
            column: 47
          }
        },
        loc: {
          start: {
            line: 383,
            column: 55
          },
          end: {
            line: 387,
            column: 13
          }
        },
        line: 383
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 387,
            column: 23
          },
          end: {
            line: 387,
            column: 24
          }
        },
        loc: {
          start: {
            line: 387,
            column: 31
          },
          end: {
            line: 387,
            column: 58
          }
        },
        line: 387
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 390,
            column: 49
          },
          end: {
            line: 390,
            column: 50
          }
        },
        loc: {
          start: {
            line: 390,
            column: 57
          },
          end: {
            line: 390,
            column: 101
          }
        },
        line: 390
      },
      "44": {
        name: "validateGraph",
        decl: {
          start: {
            line: 394,
            column: 9
          },
          end: {
            line: 394,
            column: 22
          }
        },
        loc: {
          start: {
            line: 394,
            column: 44
          },
          end: {
            line: 435,
            column: 1
          }
        },
        line: 394
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 414,
            column: 44
          },
          end: {
            line: 414,
            column: 45
          }
        },
        loc: {
          start: {
            line: 414,
            column: 49
          },
          end: {
            line: 414,
            column: 53
          }
        },
        line: 414
      },
      "46": {
        name: "calculateDiameter",
        decl: {
          start: {
            line: 437,
            column: 9
          },
          end: {
            line: 437,
            column: 26
          }
        },
        loc: {
          start: {
            line: 437,
            column: 34
          },
          end: {
            line: 450,
            column: 1
          }
        },
        line: 437
      },
      "47": {
        name: "calculateClustering",
        decl: {
          start: {
            line: 451,
            column: 9
          },
          end: {
            line: 451,
            column: 28
          }
        },
        loc: {
          start: {
            line: 451,
            column: 36
          },
          end: {
            line: 471,
            column: 1
          }
        },
        line: 451
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 456,
            column: 45
          },
          end: {
            line: 456,
            column: 46
          }
        },
        loc: {
          start: {
            line: 456,
            column: 50
          },
          end: {
            line: 456,
            column: 94
          }
        },
        line: 456
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 456,
            column: 100
          },
          end: {
            line: 456,
            column: 101
          }
        },
        loc: {
          start: {
            line: 456,
            column: 105
          },
          end: {
            line: 456,
            column: 147
          }
        },
        line: 456
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 461,
            column: 53
          },
          end: {
            line: 461,
            column: 54
          }
        },
        loc: {
          start: {
            line: 461,
            column: 58
          },
          end: {
            line: 461,
            column: 170
          }
        },
        line: 461
      },
      "51": {
        name: "detectCommunities",
        decl: {
          start: {
            line: 472,
            column: 9
          },
          end: {
            line: 472,
            column: 26
          }
        },
        loc: {
          start: {
            line: 472,
            column: 34
          },
          end: {
            line: 493,
            column: 1
          }
        },
        line: 472
      },
      "52": {
        name: "dfs",
        decl: {
          start: {
            line: 476,
            column: 13
          },
          end: {
            line: 476,
            column: 16
          }
        },
        loc: {
          start: {
            line: 476,
            column: 36
          },
          end: {
            line: 484,
            column: 5
          }
        },
        line: 476
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 480,
            column: 45
          },
          end: {
            line: 480,
            column: 46
          }
        },
        loc: {
          start: {
            line: 480,
            column: 50
          },
          end: {
            line: 480,
            column: 92
          }
        },
        line: 480
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 480,
            column: 98
          },
          end: {
            line: 480,
            column: 99
          }
        },
        loc: {
          start: {
            line: 480,
            column: 103
          },
          end: {
            line: 480,
            column: 144
          }
        },
        line: 480
      },
      "55": {
        name: "findPathExcludingEdge",
        decl: {
          start: {
            line: 494,
            column: 9
          },
          end: {
            line: 494,
            column: 30
          }
        },
        loc: {
          start: {
            line: 494,
            column: 65
          },
          end: {
            line: 500,
            column: 1
          }
        },
        line: 494
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 497,
            column: 34
          },
          end: {
            line: 497,
            column: 35
          }
        },
        loc: {
          start: {
            line: 497,
            column: 39
          },
          end: {
            line: 497,
            column: 61
          }
        },
        line: 497
      },
      "57": {
        name: "calculateSimilarity",
        decl: {
          start: {
            line: 501,
            column: 9
          },
          end: {
            line: 501,
            column: 28
          }
        },
        loc: {
          start: {
            line: 501,
            column: 45
          },
          end: {
            line: 517,
            column: 1
          }
        },
        line: 501
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 55,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 55,
            column: 14
          }
        }, {
          start: {
            line: 55,
            column: 18
          },
          end: {
            line: 55,
            column: 43
          }
        }],
        line: 55
      },
      "1": {
        loc: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "2": {
        loc: {
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "3": {
        loc: {
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "4": {
        loc: {
          start: {
            line: 105,
            column: 4
          },
          end: {
            line: 107,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 4
          },
          end: {
            line: 107,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "5": {
        loc: {
          start: {
            line: 129,
            column: 39
          },
          end: {
            line: 129,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 129,
            column: 39
          },
          end: {
            line: 129,
            column: 58
          }
        }, {
          start: {
            line: 129,
            column: 62
          },
          end: {
            line: 129,
            column: 81
          }
        }],
        line: 129
      },
      "6": {
        loc: {
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 137
      },
      "7": {
        loc: {
          start: {
            line: 137,
            column: 8
          },
          end: {
            line: 137,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 137,
            column: 8
          },
          end: {
            line: 137,
            column: 48
          }
        }, {
          start: {
            line: 137,
            column: 52
          },
          end: {
            line: 137,
            column: 90
          }
        }],
        line: 137
      },
      "8": {
        loc: {
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 154,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 154,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "9": {
        loc: {
          start: {
            line: 155,
            column: 8
          },
          end: {
            line: 155,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 8
          },
          end: {
            line: 155,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 155
      },
      "10": {
        loc: {
          start: {
            line: 158,
            column: 50
          },
          end: {
            line: 158,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 158,
            column: 50
          },
          end: {
            line: 158,
            column: 67
          }
        }, {
          start: {
            line: 158,
            column: 71
          },
          end: {
            line: 158,
            column: 88
          }
        }],
        line: 158
      },
      "11": {
        loc: {
          start: {
            line: 158,
            column: 99
          },
          end: {
            line: 158,
            column: 138
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 158,
            column: 119
          },
          end: {
            line: 158,
            column: 127
          }
        }, {
          start: {
            line: 158,
            column: 130
          },
          end: {
            line: 158,
            column: 138
          }
        }],
        line: 158
      },
      "12": {
        loc: {
          start: {
            line: 171,
            column: 37
          },
          end: {
            line: 171,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 171,
            column: 47
          },
          end: {
            line: 171,
            column: 49
          }
        }],
        line: 171
      },
      "13": {
        loc: {
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 196,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 196,
            column: 9
          }
        }, {
          start: {
            line: 194,
            column: 15
          },
          end: {
            line: 196,
            column: 9
          }
        }],
        line: 181
      },
      "14": {
        loc: {
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 189,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 189,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      },
      "15": {
        loc: {
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 192,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 192,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "16": {
        loc: {
          start: {
            line: 190,
            column: 16
          },
          end: {
            line: 190,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 190,
            column: 16
          },
          end: {
            line: 190,
            column: 54
          }
        }, {
          start: {
            line: 190,
            column: 58
          },
          end: {
            line: 190,
            column: 102
          }
        }],
        line: 190
      },
      "17": {
        loc: {
          start: {
            line: 203,
            column: 8
          },
          end: {
            line: 208,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 8
          },
          end: {
            line: 208,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "18": {
        loc: {
          start: {
            line: 205,
            column: 12
          },
          end: {
            line: 207,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 205,
            column: 12
          },
          end: {
            line: 207,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 205
      },
      "19": {
        loc: {
          start: {
            line: 205,
            column: 16
          },
          end: {
            line: 205,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 205,
            column: 16
          },
          end: {
            line: 205,
            column: 44
          }
        }, {
          start: {
            line: 205,
            column: 48
          },
          end: {
            line: 205,
            column: 76
          }
        }],
        line: 205
      },
      "20": {
        loc: {
          start: {
            line: 224,
            column: 4
          },
          end: {
            line: 226,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 4
          },
          end: {
            line: 226,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 224
      },
      "21": {
        loc: {
          start: {
            line: 230,
            column: 4
          },
          end: {
            line: 232,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 230,
            column: 4
          },
          end: {
            line: 232,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 230
      },
      "22": {
        loc: {
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 250,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 250,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 248
      },
      "23": {
        loc: {
          start: {
            line: 258,
            column: 4
          },
          end: {
            line: 287,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 258,
            column: 4
          },
          end: {
            line: 287,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 258
      },
      "24": {
        loc: {
          start: {
            line: 261,
            column: 8
          },
          end: {
            line: 263,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 261,
            column: 8
          },
          end: {
            line: 263,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 261
      },
      "25": {
        loc: {
          start: {
            line: 261,
            column: 12
          },
          end: {
            line: 261,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 261,
            column: 12
          },
          end: {
            line: 261,
            column: 25
          }
        }, {
          start: {
            line: 261,
            column: 29
          },
          end: {
            line: 261,
            column: 42
          }
        }],
        line: 261
      },
      "26": {
        loc: {
          start: {
            line: 266,
            column: 12
          },
          end: {
            line: 268,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 266,
            column: 12
          },
          end: {
            line: 268,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 266
      },
      "27": {
        loc: {
          start: {
            line: 266,
            column: 16
          },
          end: {
            line: 266,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 266,
            column: 16
          },
          end: {
            line: 266,
            column: 24
          }
        }, {
          start: {
            line: 266,
            column: 28
          },
          end: {
            line: 266,
            column: 39
          }
        }, {
          start: {
            line: 266,
            column: 43
          },
          end: {
            line: 266,
            column: 53
          }
        }],
        line: 266
      },
      "28": {
        loc: {
          start: {
            line: 273,
            column: 12
          },
          end: {
            line: 275,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 273,
            column: 12
          },
          end: {
            line: 275,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 273
      },
      "29": {
        loc: {
          start: {
            line: 273,
            column: 16
          },
          end: {
            line: 273,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 273,
            column: 16
          },
          end: {
            line: 273,
            column: 41
          }
        }, {
          start: {
            line: 273,
            column: 45
          },
          end: {
            line: 273,
            column: 70
          }
        }],
        line: 273
      },
      "30": {
        loc: {
          start: {
            line: 278,
            column: 16
          },
          end: {
            line: 278,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 278,
            column: 16
          },
          end: {
            line: 278,
            column: 25
          }
        }, {
          start: {
            line: 278,
            column: 29
          },
          end: {
            line: 278,
            column: 54
          }
        }],
        line: 278
      },
      "31": {
        loc: {
          start: {
            line: 281,
            column: 22
          },
          end: {
            line: 285,
            column: 13
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 281,
            column: 22
          },
          end: {
            line: 281,
            column: 37
          }
        }, {
          start: {
            line: 281,
            column: 41
          },
          end: {
            line: 285,
            column: 13
          }
        }],
        line: 281
      },
      "32": {
        loc: {
          start: {
            line: 290,
            column: 29
          },
          end: {
            line: 290,
            column: 41
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 290,
            column: 39
          },
          end: {
            line: 290,
            column: 41
          }
        }],
        line: 290
      },
      "33": {
        loc: {
          start: {
            line: 294,
            column: 20
          },
          end: {
            line: 294,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 294,
            column: 36
          },
          end: {
            line: 294,
            column: 64
          }
        }, {
          start: {
            line: 294,
            column: 67
          },
          end: {
            line: 294,
            column: 68
          }
        }],
        line: 294
      },
      "34": {
        loc: {
          start: {
            line: 298,
            column: 34
          },
          end: {
            line: 298,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 298,
            column: 34
          },
          end: {
            line: 298,
            column: 58
          }
        }, {
          start: {
            line: 298,
            column: 62
          },
          end: {
            line: 298,
            column: 63
          }
        }],
        line: 298
      },
      "35": {
        loc: {
          start: {
            line: 299,
            column: 34
          },
          end: {
            line: 299,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 299,
            column: 34
          },
          end: {
            line: 299,
            column: 58
          }
        }, {
          start: {
            line: 299,
            column: 62
          },
          end: {
            line: 299,
            column: 63
          }
        }],
        line: 299
      },
      "36": {
        loc: {
          start: {
            line: 301,
            column: 22
          },
          end: {
            line: 301,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 301,
            column: 38
          },
          end: {
            line: 301,
            column: 103
          }
        }, {
          start: {
            line: 301,
            column: 106
          },
          end: {
            line: 301,
            column: 107
          }
        }],
        line: 301
      },
      "37": {
        loc: {
          start: {
            line: 311,
            column: 4
          },
          end: {
            line: 316,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 311,
            column: 4
          },
          end: {
            line: 316,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 311
      },
      "38": {
        loc: {
          start: {
            line: 317,
            column: 4
          },
          end: {
            line: 319,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 317,
            column: 4
          },
          end: {
            line: 319,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 317
      },
      "39": {
        loc: {
          start: {
            line: 322,
            column: 30
          },
          end: {
            line: 322,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 322,
            column: 40
          },
          end: {
            line: 322,
            column: 42
          }
        }],
        line: 322
      },
      "40": {
        loc: {
          start: {
            line: 326,
            column: 4
          },
          end: {
            line: 339,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 326,
            column: 4
          },
          end: {
            line: 339,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 326
      },
      "41": {
        loc: {
          start: {
            line: 330,
            column: 12
          },
          end: {
            line: 336,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 330,
            column: 12
          },
          end: {
            line: 336,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 330
      },
      "42": {
        loc: {
          start: {
            line: 333,
            column: 16
          },
          end: {
            line: 335,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 333,
            column: 16
          },
          end: {
            line: 335,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 333
      },
      "43": {
        loc: {
          start: {
            line: 333,
            column: 20
          },
          end: {
            line: 333,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 333,
            column: 20
          },
          end: {
            line: 333,
            column: 35
          }
        }, {
          start: {
            line: 333,
            column: 39
          },
          end: {
            line: 333,
            column: 66
          }
        }],
        line: 333
      },
      "44": {
        loc: {
          start: {
            line: 340,
            column: 4
          },
          end: {
            line: 388,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 340,
            column: 4
          },
          end: {
            line: 388,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 340
      },
      "45": {
        loc: {
          start: {
            line: 342,
            column: 26
          },
          end: {
            line: 342,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 342,
            column: 26
          },
          end: {
            line: 342,
            column: 53
          }
        }, {
          start: {
            line: 342,
            column: 57
          },
          end: {
            line: 342,
            column: 60
          }
        }],
        line: 342
      },
      "46": {
        loc: {
          start: {
            line: 346,
            column: 12
          },
          end: {
            line: 346,
            column: 49
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 346,
            column: 12
          },
          end: {
            line: 346,
            column: 49
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 346
      },
      "47": {
        loc: {
          start: {
            line: 352,
            column: 16
          },
          end: {
            line: 352,
            column: 54
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 352,
            column: 16
          },
          end: {
            line: 352,
            column: 54
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 352
      },
      "48": {
        loc: {
          start: {
            line: 354,
            column: 16
          },
          end: {
            line: 357,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 354,
            column: 16
          },
          end: {
            line: 357,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 354
      },
      "49": {
        loc: {
          start: {
            line: 359,
            column: 12
          },
          end: {
            line: 361,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 359,
            column: 12
          },
          end: {
            line: 361,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 359
      },
      "50": {
        loc: {
          start: {
            line: 375,
            column: 12
          },
          end: {
            line: 379,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 375,
            column: 12
          },
          end: {
            line: 379,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 375
      },
      "51": {
        loc: {
          start: {
            line: 375,
            column: 16
          },
          end: {
            line: 375,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 375,
            column: 16
          },
          end: {
            line: 375,
            column: 41
          }
        }, {
          start: {
            line: 375,
            column: 45
          },
          end: {
            line: 375,
            column: 81
          }
        }],
        line: 375
      },
      "52": {
        loc: {
          start: {
            line: 376,
            column: 16
          },
          end: {
            line: 378,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 376,
            column: 16
          },
          end: {
            line: 378,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 376
      },
      "53": {
        loc: {
          start: {
            line: 385,
            column: 24
          },
          end: {
            line: 385,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 385,
            column: 24
          },
          end: {
            line: 385,
            column: 52
          }
        }, {
          start: {
            line: 385,
            column: 56
          },
          end: {
            line: 385,
            column: 67
          }
        }],
        line: 385
      },
      "54": {
        loc: {
          start: {
            line: 386,
            column: 24
          },
          end: {
            line: 386,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 386,
            column: 24
          },
          end: {
            line: 386,
            column: 52
          }
        }, {
          start: {
            line: 386,
            column: 56
          },
          end: {
            line: 386,
            column: 67
          }
        }],
        line: 386
      },
      "55": {
        loc: {
          start: {
            line: 389,
            column: 4
          },
          end: {
            line: 391,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 389,
            column: 4
          },
          end: {
            line: 391,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 389
      },
      "56": {
        loc: {
          start: {
            line: 390,
            column: 58
          },
          end: {
            line: 390,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 390,
            column: 58
          },
          end: {
            line: 390,
            column: 69
          }
        }, {
          start: {
            line: 390,
            column: 73
          },
          end: {
            line: 390,
            column: 74
          }
        }],
        line: 390
      },
      "57": {
        loc: {
          start: {
            line: 394,
            column: 30
          },
          end: {
            line: 394,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 394,
            column: 40
          },
          end: {
            line: 394,
            column: 42
          }
        }],
        line: 394
      },
      "58": {
        loc: {
          start: {
            line: 397,
            column: 4
          },
          end: {
            line: 412,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 397,
            column: 4
          },
          end: {
            line: 412,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 397
      },
      "59": {
        loc: {
          start: {
            line: 404,
            column: 12
          },
          end: {
            line: 410,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 404,
            column: 12
          },
          end: {
            line: 410,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 404
      },
      "60": {
        loc: {
          start: {
            line: 416,
            column: 8
          },
          end: {
            line: 422,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 416,
            column: 8
          },
          end: {
            line: 422,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 416
      },
      "61": {
        loc: {
          start: {
            line: 423,
            column: 8
          },
          end: {
            line: 429,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 423,
            column: 8
          },
          end: {
            line: 429,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 423
      },
      "62": {
        loc: {
          start: {
            line: 441,
            column: 12
          },
          end: {
            line: 446,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 441,
            column: 12
          },
          end: {
            line: 446,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 441
      },
      "63": {
        loc: {
          start: {
            line: 443,
            column: 16
          },
          end: {
            line: 445,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 443,
            column: 16
          },
          end: {
            line: 445,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 443
      },
      "64": {
        loc: {
          start: {
            line: 456,
            column: 50
          },
          end: {
            line: 456,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 456,
            column: 50
          },
          end: {
            line: 456,
            column: 70
          }
        }, {
          start: {
            line: 456,
            column: 74
          },
          end: {
            line: 456,
            column: 94
          }
        }],
        line: 456
      },
      "65": {
        loc: {
          start: {
            line: 456,
            column: 105
          },
          end: {
            line: 456,
            column: 147
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 456,
            column: 128
          },
          end: {
            line: 456,
            column: 136
          }
        }, {
          start: {
            line: 456,
            column: 139
          },
          end: {
            line: 456,
            column: 147
          }
        }],
        line: 456
      },
      "66": {
        loc: {
          start: {
            line: 457,
            column: 8
          },
          end: {
            line: 468,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 457,
            column: 8
          },
          end: {
            line: 468,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 457
      },
      "67": {
        loc: {
          start: {
            line: 461,
            column: 58
          },
          end: {
            line: 461,
            column: 170
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 461,
            column: 58
          },
          end: {
            line: 461,
            column: 83
          }
        }, {
          start: {
            line: 461,
            column: 87
          },
          end: {
            line: 461,
            column: 112
          }
        }, {
          start: {
            line: 461,
            column: 116
          },
          end: {
            line: 461,
            column: 141
          }
        }, {
          start: {
            line: 461,
            column: 145
          },
          end: {
            line: 461,
            column: 170
          }
        }],
        line: 461
      },
      "68": {
        loc: {
          start: {
            line: 462,
            column: 20
          },
          end: {
            line: 462,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 462,
            column: 20
          },
          end: {
            line: 462,
            column: 47
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 462
      },
      "69": {
        loc: {
          start: {
            line: 470,
            column: 11
          },
          end: {
            line: 470,
            column: 58
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 470,
            column: 27
          },
          end: {
            line: 470,
            column: 54
          }
        }, {
          start: {
            line: 470,
            column: 57
          },
          end: {
            line: 470,
            column: 58
          }
        }],
        line: 470
      },
      "70": {
        loc: {
          start: {
            line: 477,
            column: 8
          },
          end: {
            line: 477,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 477,
            column: 8
          },
          end: {
            line: 477,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 477
      },
      "71": {
        loc: {
          start: {
            line: 480,
            column: 50
          },
          end: {
            line: 480,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 480,
            column: 50
          },
          end: {
            line: 480,
            column: 69
          }
        }, {
          start: {
            line: 480,
            column: 73
          },
          end: {
            line: 480,
            column: 92
          }
        }],
        line: 480
      },
      "72": {
        loc: {
          start: {
            line: 480,
            column: 103
          },
          end: {
            line: 480,
            column: 144
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 480,
            column: 125
          },
          end: {
            line: 480,
            column: 133
          }
        }, {
          start: {
            line: 480,
            column: 136
          },
          end: {
            line: 480,
            column: 144
          }
        }],
        line: 480
      },
      "73": {
        loc: {
          start: {
            line: 486,
            column: 8
          },
          end: {
            line: 490,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 486,
            column: 8
          },
          end: {
            line: 490,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 486
      },
      "74": {
        loc: {
          start: {
            line: 505,
            column: 4
          },
          end: {
            line: 505,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 505,
            column: 4
          },
          end: {
            line: 505,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 505
      },
      "75": {
        loc: {
          start: {
            line: 512,
            column: 22
          },
          end: {
            line: 512,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 512,
            column: 22
          },
          end: {
            line: 512,
            column: 48
          }
        }, {
          start: {
            line: 512,
            column: 52
          },
          end: {
            line: 512,
            column: 63
          }
        }],
        line: 512
      },
      "76": {
        loc: {
          start: {
            line: 513,
            column: 22
          },
          end: {
            line: 513,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 513,
            column: 22
          },
          end: {
            line: 513,
            column: 48
          }
        }, {
          start: {
            line: 513,
            column: 52
          },
          end: {
            line: 513,
            column: 63
          }
        }],
        line: 513
      },
      "77": {
        loc: {
          start: {
            line: 514,
            column: 4
          },
          end: {
            line: 514,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 514,
            column: 4
          },
          end: {
            line: 514,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 514
      },
      "78": {
        loc: {
          start: {
            line: 515,
            column: 4
          },
          end: {
            line: 515,
            column: 83
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 515,
            column: 4
          },
          end: {
            line: 515,
            column: 83
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 515
      },
      "79": {
        loc: {
          start: {
            line: 515,
            column: 8
          },
          end: {
            line: 515,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 515,
            column: 8
          },
          end: {
            line: 515,
            column: 37
          }
        }, {
          start: {
            line: 515,
            column: 41
          },
          end: {
            line: 515,
            column: 70
          }
        }],
        line: 515
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0, 0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matthewmoroney/builds/FreeAgentics/web/lib/knowledge-graph-management.ts"],
      sourcesContent: ["/**\n * Knowledge Graph Management Module\n * ADR-007 Compliant - Knowledge Management\n */\n\nexport interface KnowledgeNode {\n  id: string;\n  label: string;\n  type: \"concept\" | \"fact\" | \"entity\" | \"relationship\";\n  properties?: Record<string, any>;\n\n  // Visual properties for rendering\n  x?: number;\n  y?: number;\n  radius?: number;\n  color?: string;\n  ownerType?: \"individual\" | \"collective\" | \"shared\";\n  confidence?: number;\n  importance?: number;\n  lastUpdated?: Date;\n  createdAt?: Date;\n}\n\nexport interface KnowledgeEdge {\n  id: string;\n  source: string;\n  target: string;\n  type: string;\n  weight?: number;\n  strength?: number;\n  confidence?: number;\n  color?: string;\n  createdAt?: Date;\n  lastUpdated?: Date;\n  properties?: Record<string, any>;\n}\n\nexport interface KnowledgeGraph {\n  id: string;\n  nodes: KnowledgeNode[];\n  edges: KnowledgeEdge[];\n  metadata: {\n    created: number;\n    modified: number;\n    version: string;\n    [key: string]: any;\n  };\n}\n\nexport interface GraphMetrics {\n  nodeCount: number;\n  edgeCount: number;\n  density: number;\n  avgDegree: number;\n  diameter: number;\n  clustering: number;\n  modularity: number;\n  importantNodes?: Array<{ id: string; score: number }>;\n  communities?: string[][];\n}\n\nexport interface GraphQuery {\n  startNode?: string;\n  traverse?: {\n    direction: \"incoming\" | \"outgoing\" | \"both\";\n    edgeTypes?: string[];\n    maxDepth?: number;\n  };\n  filter?: {\n    nodeTypes?: string[];\n    properties?: Record<string, any>;\n  };\n}\n\nexport interface GraphDiff {\n  addedNodes: KnowledgeNode[];\n  removedNodes: KnowledgeNode[];\n  modifiedNodes: Array<{\n    id: string;\n    changes: Record<string, { old: any; new: any }>;\n  }>;\n  addedEdges: KnowledgeEdge[];\n  removedEdges: KnowledgeEdge[];\n}\n\nlet graphCounter = 0;\n\nexport function createKnowledgeGraph(id?: string): KnowledgeGraph {\n  return {\n    id: id || `graph-${++graphCounter}`,\n    nodes: [],\n    edges: [],\n    metadata: {\n      created: Date.now(),\n      modified: Date.now(),\n      version: \"1.0\",\n    },\n  };\n}\n\nexport function addNode(\n  graph: KnowledgeGraph,\n  node: KnowledgeNode,\n): KnowledgeGraph {\n  if (graph.nodes.some((n) => n.id === node.id)) {\n    throw new Error(`Node with ID ${node.id} already exists`);\n  }\n\n  return {\n    ...graph,\n    nodes: [...graph.nodes, node],\n    metadata: { ...graph.metadata, modified: Date.now() },\n  };\n}\n\nexport function addEdge(\n  graph: KnowledgeGraph,\n  edge: KnowledgeEdge,\n): KnowledgeGraph {\n  // Validate edge endpoints\n  const sourceExists = graph.nodes.some((n) => n.id === edge.source);\n  const targetExists = graph.nodes.some((n) => n.id === edge.target);\n\n  if (!sourceExists) {\n    throw new Error(`Source node ${edge.source} does not exist`);\n  }\n  if (!targetExists) {\n    throw new Error(`Target node ${edge.target} does not exist`);\n  }\n\n  return {\n    ...graph,\n    edges: [...graph.edges, edge],\n    metadata: { ...graph.metadata, modified: Date.now() },\n  };\n}\n\nexport function updateNode(\n  graph: KnowledgeGraph,\n  nodeId: string,\n  updates: Partial<KnowledgeNode>,\n): KnowledgeGraph {\n  const nodeIndex = graph.nodes.findIndex((n) => n.id === nodeId);\n\n  if (nodeIndex === -1) {\n    throw new Error(`Node ${nodeId} not found`);\n  }\n\n  const updatedNodes = [...graph.nodes];\n  updatedNodes[nodeIndex] = {\n    ...updatedNodes[nodeIndex],\n    ...updates,\n    id: nodeId, // Prevent ID changes\n  };\n\n  return {\n    ...graph,\n    nodes: updatedNodes,\n    metadata: { ...graph.metadata, modified: Date.now() },\n  };\n}\n\nexport function removeNode(\n  graph: KnowledgeGraph,\n  nodeId: string,\n): KnowledgeGraph {\n  return {\n    ...graph,\n    nodes: graph.nodes.filter((n) => n.id !== nodeId),\n    edges: graph.edges.filter(\n      (e) => e.source !== nodeId && e.target !== nodeId,\n    ),\n    metadata: { ...graph.metadata, modified: Date.now() },\n  };\n}\n\nexport function findPath(\n  graph: KnowledgeGraph,\n  startId: string,\n  endId: string,\n): string[] | null {\n  if (\n    !graph.nodes.some((n) => n.id === startId) ||\n    !graph.nodes.some((n) => n.id === endId)\n  ) {\n    return null;\n  }\n\n  // BFS to find shortest path\n  const queue: Array<{ node: string; path: string[] }> = [\n    { node: startId, path: [startId] },\n  ];\n  const visited = new Set<string>();\n\n  while (queue.length > 0) {\n    const { node, path } = queue.shift()!;\n\n    if (node === endId) {\n      return path;\n    }\n\n    if (visited.has(node)) continue;\n    visited.add(node);\n\n    // Find neighbors\n    const neighbors = graph.edges\n      .filter((e) => e.source === node || e.target === node)\n      .map((e) => (e.source === node ? e.target : e.source))\n      .filter((n) => !visited.has(n));\n\n    for (const neighbor of neighbors) {\n      queue.push({ node: neighbor, path: [...path, neighbor] });\n    }\n  }\n\n  return null;\n}\n\nexport function mergeGraphs(\n  graph1: KnowledgeGraph,\n  graph2: KnowledgeGraph,\n  options: {\n    conflictResolution?: \"keep-first\" | \"keep-second\" | \"newer\";\n    reportConflicts?: boolean;\n  } = {},\n): KnowledgeGraph & { conflicts?: any[] } {\n  const conflicts: any[] = [];\n  const mergedNodes = new Map<string, KnowledgeNode>();\n  const mergedEdges = new Map<string, KnowledgeEdge>();\n\n  // Merge nodes\n  for (const node of graph1.nodes) {\n    mergedNodes.set(node.id, node);\n  }\n\n  for (const node of graph2.nodes) {\n    const existing = mergedNodes.get(node.id);\n    if (existing) {\n      // Conflict detected\n      if (options.reportConflicts) {\n        conflicts.push({\n          nodeId: node.id,\n          graph1Value: existing.label,\n          graph2Value: node.label,\n        });\n      }\n\n      if (\n        options.conflictResolution === \"newer\" ||\n        options.conflictResolution === \"keep-second\"\n      ) {\n        mergedNodes.set(node.id, node);\n      }\n      // Otherwise keep existing (keep-first or default)\n    } else {\n      mergedNodes.set(node.id, node);\n    }\n  }\n\n  // Merge edges\n  for (const edge of graph1.edges) {\n    mergedEdges.set(edge.id, edge);\n  }\n\n  for (const edge of graph2.edges) {\n    if (!mergedEdges.has(edge.id)) {\n      // Only add if both endpoints exist in merged graph\n      if (mergedNodes.has(edge.source) && mergedNodes.has(edge.target)) {\n        mergedEdges.set(edge.id, edge);\n      }\n    }\n  }\n\n  const result: KnowledgeGraph & { conflicts?: any[] } = {\n    id: `merged-${graph1.id}-${graph2.id}`,\n    nodes: Array.from(mergedNodes.values()),\n    edges: Array.from(mergedEdges.values()),\n    metadata: {\n      created: Math.min(graph1.metadata.created, graph2.metadata.created),\n      modified: Date.now(),\n      version: \"1.0\",\n      mergedFrom: [graph1.id, graph2.id],\n    },\n  };\n\n  if (options.reportConflicts) {\n    result.conflicts = conflicts;\n  }\n\n  return result;\n}\n\nexport function exportGraph(\n  graph: KnowledgeGraph,\n  format: \"json\" | \"graphml\",\n): string {\n  if (format === \"json\") {\n    return JSON.stringify(graph, null, 2);\n  }\n\n  // GraphML format\n  let xml = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n';\n  xml += '<graphml xmlns=\"http://graphml.graphdrawing.org/xmlns\">\\n';\n  xml += '  <graph id=\"' + graph.id + '\" edgedefault=\"directed\">\\n';\n\n  // Add nodes\n  for (const node of graph.nodes) {\n    xml += `    <node id=\"${node.id}\">\\n`;\n    xml += `      <data key=\"label\">${node.label}</data>\\n`;\n    xml += `      <data key=\"type\">${node.type}</data>\\n`;\n    xml += \"    </node>\\n\";\n  }\n\n  // Add edges\n  for (const edge of graph.edges) {\n    xml += `    <edge id=\"${edge.id}\" source=\"${edge.source}\" target=\"${edge.target}\">\\n`;\n    xml += `      <data key=\"type\">${edge.type}</data>\\n`;\n    if (edge.weight !== undefined) {\n      xml += `      <data key=\"weight\">${edge.weight}</data>\\n`;\n    }\n    xml += \"    </edge>\\n\";\n  }\n\n  xml += \"  </graph>\\n\";\n  xml += \"</graphml>\";\n\n  return xml;\n}\n\nexport function importGraph(\n  data: string,\n  format: \"json\" | \"graphml\",\n): KnowledgeGraph {\n  if (format === \"json\") {\n    const parsed = JSON.parse(data);\n\n    // Validate structure\n    if (!parsed.nodes || !parsed.edges) {\n      throw new Error(\"Invalid graph structure\");\n    }\n\n    // Validate nodes\n    for (const node of parsed.nodes) {\n      if (!node.id || !node.label || !node.type) {\n        throw new Error(\"Invalid graph structure\");\n      }\n    }\n\n    // Validate edges reference existing nodes\n    const nodeIds = new Set(parsed.nodes.map((n: KnowledgeNode) => n.id));\n    for (const edge of parsed.edges) {\n      if (!nodeIds.has(edge.source) || !nodeIds.has(edge.target)) {\n        throw new Error(\"Invalid graph structure\");\n      }\n    }\n\n    return {\n      id: parsed.id || createKnowledgeGraph().id,\n      nodes: parsed.nodes,\n      edges: parsed.edges,\n      metadata: parsed.metadata || {\n        created: Date.now(),\n        modified: Date.now(),\n        version: \"1.0\",\n      },\n    };\n  }\n\n  throw new Error(\"GraphML import not implemented\");\n}\n\nexport function analyzeGraph(\n  graph: KnowledgeGraph,\n  options: {\n    includeNodeImportance?: boolean;\n    detectCommunities?: boolean;\n  } = {},\n): GraphMetrics {\n  const nodeCount = graph.nodes.length;\n  const edgeCount = graph.edges.length;\n  const maxPossibleEdges = (nodeCount * (nodeCount - 1)) / 2;\n  const density = nodeCount > 1 ? edgeCount / maxPossibleEdges : 0;\n\n  // Calculate average degree\n  const degrees = new Map<string, number>();\n  for (const edge of graph.edges) {\n    degrees.set(edge.source, (degrees.get(edge.source) || 0) + 1);\n    degrees.set(edge.target, (degrees.get(edge.target) || 0) + 1);\n  }\n  const avgDegree =\n    nodeCount > 0\n      ? Array.from(degrees.values()).reduce((a, b) => a + b, 0) / nodeCount\n      : 0;\n\n  const metrics: GraphMetrics = {\n    nodeCount,\n    edgeCount,\n    density,\n    avgDegree,\n    diameter: calculateDiameter(graph),\n    clustering: calculateClustering(graph),\n    modularity: 0.5, // Mock value\n  };\n\n  if (options.includeNodeImportance) {\n    metrics.importantNodes = Array.from(degrees.entries())\n      .map(([id, degree]) => ({ id, score: degree }))\n      .sort((a, b) => b.score - a.score)\n      .slice(0, 3);\n  }\n\n  if (options.detectCommunities) {\n    metrics.communities = detectCommunities(graph);\n  }\n\n  return metrics;\n}\n\nexport function optimizeGraph(\n  graph: KnowledgeGraph,\n  options: {\n    removeRedundant?: boolean;\n    consolidateSimilar?: boolean;\n    similarityThreshold?: number;\n    pruneThreshold?: number;\n  } = {},\n): KnowledgeGraph {\n  let optimized = { ...graph };\n\n  if (options.removeRedundant) {\n    // Remove transitive edges\n    const edgesToRemove = new Set<string>();\n\n    for (const edge of graph.edges) {\n      if (edge.type === \"implies\") {\n        // Check if there's an indirect path\n        const pathWithoutEdge = findPathExcludingEdge(\n          graph,\n          edge.source,\n          edge.target,\n          edge.id,\n        );\n\n        if (pathWithoutEdge && pathWithoutEdge.length <= 3) {\n          edgesToRemove.add(edge.id);\n        }\n      }\n    }\n\n    optimized.edges = optimized.edges.filter((e) => !edgesToRemove.has(e.id));\n  }\n\n  if (options.consolidateSimilar) {\n    // Simple consolidation based on label similarity\n    const threshold = options.similarityThreshold || 0.8;\n    const nodeGroups: KnowledgeNode[][] = [];\n    const processed = new Set<string>();\n\n    for (const node of graph.nodes) {\n      if (processed.has(node.id)) continue;\n\n      const group = [node];\n      processed.add(node.id);\n\n      for (const other of graph.nodes) {\n        if (processed.has(other.id)) continue;\n\n        const similarity = calculateSimilarity(node.label, other.label);\n        if (similarity >= threshold) {\n          group.push(other);\n          processed.add(other.id);\n        }\n      }\n\n      if (group.length > 1) {\n        nodeGroups.push(group);\n      }\n    }\n\n    // Merge similar nodes\n    const mergedNodes: KnowledgeNode[] = [];\n    const nodeMapping = new Map<string, string>();\n\n    for (const group of nodeGroups) {\n      const merged = group[0]; // Keep first as representative\n      mergedNodes.push(merged);\n\n      for (const node of group) {\n        nodeMapping.set(node.id, merged.id);\n      }\n    }\n\n    // Add non-grouped nodes\n    for (const node of graph.nodes) {\n      if (!nodeMapping.has(node.id) || nodeMapping.get(node.id) === node.id) {\n        if (!mergedNodes.some((n) => n.id === node.id)) {\n          mergedNodes.push(node);\n        }\n      }\n    }\n\n    optimized.nodes = mergedNodes;\n\n    // Update edges with merged node IDs\n    optimized.edges = optimized.edges\n      .map((edge) => ({\n        ...edge,\n        source: nodeMapping.get(edge.source) || edge.source,\n        target: nodeMapping.get(edge.target) || edge.target,\n      }))\n      .filter((edge) => edge.source !== edge.target); // Remove self-loops\n  }\n\n  if (options.pruneThreshold !== undefined) {\n    optimized.edges = optimized.edges.filter(\n      (edge) => (edge.weight || 1) >= options.pruneThreshold!,\n    );\n  }\n\n  return optimized;\n}\n\nexport function validateGraph(\n  graph: KnowledgeGraph,\n  options: { allowOrphans?: boolean } = {},\n): { isValid: boolean; errors: any[] } {\n  const errors: any[] = [];\n\n  // Check for orphaned nodes\n  if (!options.allowOrphans) {\n    const connectedNodes = new Set<string>();\n\n    for (const edge of graph.edges) {\n      connectedNodes.add(edge.source);\n      connectedNodes.add(edge.target);\n    }\n\n    for (const node of graph.nodes) {\n      if (!connectedNodes.has(node.id)) {\n        errors.push({\n          type: \"orphaned-node\",\n          nodeId: node.id,\n          message: `Node ${node.id} has no connections`,\n        });\n      }\n    }\n  }\n\n  // Check for invalid edges\n  const nodeIds = new Set(graph.nodes.map((n) => n.id));\n\n  for (const edge of graph.edges) {\n    if (!nodeIds.has(edge.source)) {\n      errors.push({\n        type: \"invalid-edge\",\n        edgeId: edge.id,\n        reason: `Source node ${edge.source} does not exist`,\n      });\n    }\n    if (!nodeIds.has(edge.target)) {\n      errors.push({\n        type: \"invalid-edge\",\n        edgeId: edge.id,\n        reason: `Target node ${edge.target} does not exist`,\n      });\n    }\n  }\n\n  return {\n    isValid: errors.length === 0,\n    errors,\n  };\n}\n\n// Helper functions\nfunction calculateDiameter(graph: KnowledgeGraph): number {\n  let maxDistance = 0;\n\n  for (const start of graph.nodes) {\n    for (const end of graph.nodes) {\n      if (start.id !== end.id) {\n        const path = findPath(graph, start.id, end.id);\n        if (path) {\n          maxDistance = Math.max(maxDistance, path.length - 1);\n        }\n      }\n    }\n  }\n\n  return maxDistance;\n}\n\nfunction calculateClustering(graph: KnowledgeGraph): number {\n  // Simplified clustering coefficient\n  let totalClustering = 0;\n  let nodeCount = 0;\n\n  for (const node of graph.nodes) {\n    const neighbors = graph.edges\n      .filter((e) => e.source === node.id || e.target === node.id)\n      .map((e) => (e.source === node.id ? e.target : e.source));\n\n    if (neighbors.length >= 2) {\n      let connections = 0;\n\n      for (let i = 0; i < neighbors.length; i++) {\n        for (let j = i + 1; j < neighbors.length; j++) {\n          const hasEdge = graph.edges.some(\n            (e) =>\n              (e.source === neighbors[i] && e.target === neighbors[j]) ||\n              (e.source === neighbors[j] && e.target === neighbors[i]),\n          );\n          if (hasEdge) connections++;\n        }\n      }\n\n      const maxConnections = (neighbors.length * (neighbors.length - 1)) / 2;\n      totalClustering += connections / maxConnections;\n      nodeCount++;\n    }\n  }\n\n  return nodeCount > 0 ? totalClustering / nodeCount : 0;\n}\n\nfunction detectCommunities(graph: KnowledgeGraph): string[][] {\n  // Simple community detection using connected components\n  const visited = new Set<string>();\n  const communities: string[][] = [];\n\n  function dfs(nodeId: string, community: string[]) {\n    if (visited.has(nodeId)) return;\n    visited.add(nodeId);\n    community.push(nodeId);\n\n    const neighbors = graph.edges\n      .filter((e) => e.source === nodeId || e.target === nodeId)\n      .map((e) => (e.source === nodeId ? e.target : e.source));\n\n    for (const neighbor of neighbors) {\n      dfs(neighbor, community);\n    }\n  }\n\n  for (const node of graph.nodes) {\n    if (!visited.has(node.id)) {\n      const community: string[] = [];\n      dfs(node.id, community);\n      communities.push(community);\n    }\n  }\n\n  return communities;\n}\n\nfunction findPathExcludingEdge(\n  graph: KnowledgeGraph,\n  start: string,\n  end: string,\n  excludeEdgeId: string,\n): string[] | null {\n  const filteredGraph = {\n    ...graph,\n    edges: graph.edges.filter((e) => e.id !== excludeEdgeId),\n  };\n  return findPath(filteredGraph, start, end);\n}\n\nfunction calculateSimilarity(label1: string, label2: string): number {\n  // Simple case-insensitive comparison\n  const normalized1 = label1.toLowerCase().trim();\n  const normalized2 = label2.toLowerCase().trim();\n\n  if (normalized1 === normalized2) return 1;\n\n  // Check for common abbreviations\n  const abbreviations: Record<string, string> = {\n    ml: \"machine learning\",\n    ai: \"artificial intelligence\",\n    dl: \"deep learning\",\n  };\n\n  const expanded1 = abbreviations[normalized1] || normalized1;\n  const expanded2 = abbreviations[normalized2] || normalized2;\n\n  if (expanded1 === expanded2) return 0.9;\n  if (expanded1.includes(expanded2) || expanded2.includes(expanded1))\n    return 0.8;\n\n  return 0;\n}\n"],
      names: ["addEdge", "addNode", "analyzeGraph", "createKnowledgeGraph", "exportGraph", "findPath", "importGraph", "mergeGraphs", "optimizeGraph", "removeNode", "updateNode", "validateGraph", "graphCounter", "id", "nodes", "edges", "metadata", "created", "Date", "now", "modified", "version", "graph", "node", "some", "n", "Error", "edge", "sourceExists", "source", "targetExists", "target", "nodeId", "updates", "nodeIndex", "findIndex", "updatedNodes", "filter", "e", "startId", "endId", "queue", "path", "visited", "Set", "length", "shift", "has", "add", "neighbors", "map", "neighbor", "push", "graph1", "graph2", "options", "conflicts", "mergedNodes", "Map", "mergedEdges", "set", "existing", "get", "reportConflicts", "graph1Value", "label", "graph2Value", "conflictResolution", "result", "Array", "from", "values", "Math", "min", "mergedFrom", "format", "JSON", "stringify", "xml", "type", "weight", "undefined", "data", "parsed", "parse", "nodeIds", "nodeCount", "edgeCount", "maxPossibleEdges", "density", "degrees", "avgDegree", "reduce", "a", "b", "metrics", "diameter", "calculateDiameter", "clustering", "calculateClustering", "modularity", "includeNodeImportance", "importantNodes", "entries", "degree", "score", "sort", "slice", "detectCommunities", "communities", "optimized", "removeRedundant", "edgesToRemove", "pathWithoutEdge", "findPathExcludingEdge", "consolidateSimilar", "threshold", "similarityThreshold", "nodeGroups", "processed", "group", "other", "similarity", "calculateSimilarity", "nodeMapping", "merged", "pruneThreshold", "errors", "allowOrphans", "connectedNodes", "message", "edgeId", "reason", "isValid", "maxDistance", "start", "end", "max", "totalClustering", "connections", "i", "j", "hasEdge", "maxConnections", "dfs", "community", "excludeEdgeId", "filteredGraph", "label1", "label2", "normalized1", "toLowerCase", "trim", "normalized2", "abbreviations", "ml", "ai", "dl", "expanded1", "expanded2", "includes"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bc795084bfc804da26b48a52a7d42a05cab1816e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_25agh713ge = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_25agh713ge();
cov_25agh713ge().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_25agh713ge().f[0]++;
  cov_25agh713ge().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_25agh713ge().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_25agh713ge().s[3]++;
_export(exports, {
  addEdge: function () {
    /* istanbul ignore next */
    cov_25agh713ge().f[1]++;
    cov_25agh713ge().s[4]++;
    return addEdge;
  },
  addNode: function () {
    /* istanbul ignore next */
    cov_25agh713ge().f[2]++;
    cov_25agh713ge().s[5]++;
    return addNode;
  },
  analyzeGraph: function () {
    /* istanbul ignore next */
    cov_25agh713ge().f[3]++;
    cov_25agh713ge().s[6]++;
    return analyzeGraph;
  },
  createKnowledgeGraph: function () {
    /* istanbul ignore next */
    cov_25agh713ge().f[4]++;
    cov_25agh713ge().s[7]++;
    return createKnowledgeGraph;
  },
  exportGraph: function () {
    /* istanbul ignore next */
    cov_25agh713ge().f[5]++;
    cov_25agh713ge().s[8]++;
    return exportGraph;
  },
  findPath: function () {
    /* istanbul ignore next */
    cov_25agh713ge().f[6]++;
    cov_25agh713ge().s[9]++;
    return findPath;
  },
  importGraph: function () {
    /* istanbul ignore next */
    cov_25agh713ge().f[7]++;
    cov_25agh713ge().s[10]++;
    return importGraph;
  },
  mergeGraphs: function () {
    /* istanbul ignore next */
    cov_25agh713ge().f[8]++;
    cov_25agh713ge().s[11]++;
    return mergeGraphs;
  },
  optimizeGraph: function () {
    /* istanbul ignore next */
    cov_25agh713ge().f[9]++;
    cov_25agh713ge().s[12]++;
    return optimizeGraph;
  },
  removeNode: function () {
    /* istanbul ignore next */
    cov_25agh713ge().f[10]++;
    cov_25agh713ge().s[13]++;
    return removeNode;
  },
  updateNode: function () {
    /* istanbul ignore next */
    cov_25agh713ge().f[11]++;
    cov_25agh713ge().s[14]++;
    return updateNode;
  },
  validateGraph: function () {
    /* istanbul ignore next */
    cov_25agh713ge().f[12]++;
    cov_25agh713ge().s[15]++;
    return validateGraph;
  }
});
let graphCounter =
/* istanbul ignore next */
(cov_25agh713ge().s[16]++, 0);
function createKnowledgeGraph(id) {
  /* istanbul ignore next */
  cov_25agh713ge().f[13]++;
  cov_25agh713ge().s[17]++;
  return {
    id:
    /* istanbul ignore next */
    (cov_25agh713ge().b[0][0]++, id) ||
    /* istanbul ignore next */
    (cov_25agh713ge().b[0][1]++, `graph-${++graphCounter}`),
    nodes: [],
    edges: [],
    metadata: {
      created: Date.now(),
      modified: Date.now(),
      version: "1.0"
    }
  };
}
function addNode(graph, node) {
  /* istanbul ignore next */
  cov_25agh713ge().f[14]++;
  cov_25agh713ge().s[18]++;
  if (graph.nodes.some(n => {
    /* istanbul ignore next */
    cov_25agh713ge().f[15]++;
    cov_25agh713ge().s[19]++;
    return n.id === node.id;
  })) {
    /* istanbul ignore next */
    cov_25agh713ge().b[1][0]++;
    cov_25agh713ge().s[20]++;
    throw new Error(`Node with ID ${node.id} already exists`);
  } else
  /* istanbul ignore next */
  {
    cov_25agh713ge().b[1][1]++;
  }
  cov_25agh713ge().s[21]++;
  return {
    ...graph,
    nodes: [...graph.nodes, node],
    metadata: {
      ...graph.metadata,
      modified: Date.now()
    }
  };
}
function addEdge(graph, edge) {
  /* istanbul ignore next */
  cov_25agh713ge().f[16]++;
  // Validate edge endpoints
  const sourceExists =
  /* istanbul ignore next */
  (cov_25agh713ge().s[22]++, graph.nodes.some(n => {
    /* istanbul ignore next */
    cov_25agh713ge().f[17]++;
    cov_25agh713ge().s[23]++;
    return n.id === edge.source;
  }));
  const targetExists =
  /* istanbul ignore next */
  (cov_25agh713ge().s[24]++, graph.nodes.some(n => {
    /* istanbul ignore next */
    cov_25agh713ge().f[18]++;
    cov_25agh713ge().s[25]++;
    return n.id === edge.target;
  }));
  /* istanbul ignore next */
  cov_25agh713ge().s[26]++;
  if (!sourceExists) {
    /* istanbul ignore next */
    cov_25agh713ge().b[2][0]++;
    cov_25agh713ge().s[27]++;
    throw new Error(`Source node ${edge.source} does not exist`);
  } else
  /* istanbul ignore next */
  {
    cov_25agh713ge().b[2][1]++;
  }
  cov_25agh713ge().s[28]++;
  if (!targetExists) {
    /* istanbul ignore next */
    cov_25agh713ge().b[3][0]++;
    cov_25agh713ge().s[29]++;
    throw new Error(`Target node ${edge.target} does not exist`);
  } else
  /* istanbul ignore next */
  {
    cov_25agh713ge().b[3][1]++;
  }
  cov_25agh713ge().s[30]++;
  return {
    ...graph,
    edges: [...graph.edges, edge],
    metadata: {
      ...graph.metadata,
      modified: Date.now()
    }
  };
}
function updateNode(graph, nodeId, updates) {
  /* istanbul ignore next */
  cov_25agh713ge().f[19]++;
  const nodeIndex =
  /* istanbul ignore next */
  (cov_25agh713ge().s[31]++, graph.nodes.findIndex(n => {
    /* istanbul ignore next */
    cov_25agh713ge().f[20]++;
    cov_25agh713ge().s[32]++;
    return n.id === nodeId;
  }));
  /* istanbul ignore next */
  cov_25agh713ge().s[33]++;
  if (nodeIndex === -1) {
    /* istanbul ignore next */
    cov_25agh713ge().b[4][0]++;
    cov_25agh713ge().s[34]++;
    throw new Error(`Node ${nodeId} not found`);
  } else
  /* istanbul ignore next */
  {
    cov_25agh713ge().b[4][1]++;
  }
  const updatedNodes =
  /* istanbul ignore next */
  (cov_25agh713ge().s[35]++, [...graph.nodes]);
  /* istanbul ignore next */
  cov_25agh713ge().s[36]++;
  updatedNodes[nodeIndex] = {
    ...updatedNodes[nodeIndex],
    ...updates,
    id: nodeId
  };
  /* istanbul ignore next */
  cov_25agh713ge().s[37]++;
  return {
    ...graph,
    nodes: updatedNodes,
    metadata: {
      ...graph.metadata,
      modified: Date.now()
    }
  };
}
function removeNode(graph, nodeId) {
  /* istanbul ignore next */
  cov_25agh713ge().f[21]++;
  cov_25agh713ge().s[38]++;
  return {
    ...graph,
    nodes: graph.nodes.filter(n => {
      /* istanbul ignore next */
      cov_25agh713ge().f[22]++;
      cov_25agh713ge().s[39]++;
      return n.id !== nodeId;
    }),
    edges: graph.edges.filter(e => {
      /* istanbul ignore next */
      cov_25agh713ge().f[23]++;
      cov_25agh713ge().s[40]++;
      return /* istanbul ignore next */(cov_25agh713ge().b[5][0]++, e.source !== nodeId) &&
      /* istanbul ignore next */
      (cov_25agh713ge().b[5][1]++, e.target !== nodeId);
    }),
    metadata: {
      ...graph.metadata,
      modified: Date.now()
    }
  };
}
function findPath(graph, startId, endId) {
  /* istanbul ignore next */
  cov_25agh713ge().f[24]++;
  cov_25agh713ge().s[41]++;
  if (
  /* istanbul ignore next */
  (cov_25agh713ge().b[7][0]++, !graph.nodes.some(n => {
    /* istanbul ignore next */
    cov_25agh713ge().f[25]++;
    cov_25agh713ge().s[42]++;
    return n.id === startId;
  })) ||
  /* istanbul ignore next */
  (cov_25agh713ge().b[7][1]++, !graph.nodes.some(n => {
    /* istanbul ignore next */
    cov_25agh713ge().f[26]++;
    cov_25agh713ge().s[43]++;
    return n.id === endId;
  }))) {
    /* istanbul ignore next */
    cov_25agh713ge().b[6][0]++;
    cov_25agh713ge().s[44]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_25agh713ge().b[6][1]++;
  }
  // BFS to find shortest path
  const queue =
  /* istanbul ignore next */
  (cov_25agh713ge().s[45]++, [{
    node: startId,
    path: [startId]
  }]);
  const visited =
  /* istanbul ignore next */
  (cov_25agh713ge().s[46]++, new Set());
  /* istanbul ignore next */
  cov_25agh713ge().s[47]++;
  while (queue.length > 0) {
    const {
      node,
      path
    } =
    /* istanbul ignore next */
    (cov_25agh713ge().s[48]++, queue.shift());
    /* istanbul ignore next */
    cov_25agh713ge().s[49]++;
    if (node === endId) {
      /* istanbul ignore next */
      cov_25agh713ge().b[8][0]++;
      cov_25agh713ge().s[50]++;
      return path;
    } else
    /* istanbul ignore next */
    {
      cov_25agh713ge().b[8][1]++;
    }
    cov_25agh713ge().s[51]++;
    if (visited.has(node)) {
      /* istanbul ignore next */
      cov_25agh713ge().b[9][0]++;
      cov_25agh713ge().s[52]++;
      continue;
    } else
    /* istanbul ignore next */
    {
      cov_25agh713ge().b[9][1]++;
    }
    cov_25agh713ge().s[53]++;
    visited.add(node);
    // Find neighbors
    const neighbors =
    /* istanbul ignore next */
    (cov_25agh713ge().s[54]++, graph.edges.filter(e => {
      /* istanbul ignore next */
      cov_25agh713ge().f[27]++;
      cov_25agh713ge().s[55]++;
      return /* istanbul ignore next */(cov_25agh713ge().b[10][0]++, e.source === node) ||
      /* istanbul ignore next */
      (cov_25agh713ge().b[10][1]++, e.target === node);
    }).map(e => {
      /* istanbul ignore next */
      cov_25agh713ge().f[28]++;
      cov_25agh713ge().s[56]++;
      return e.source === node ?
      /* istanbul ignore next */
      (cov_25agh713ge().b[11][0]++, e.target) :
      /* istanbul ignore next */
      (cov_25agh713ge().b[11][1]++, e.source);
    }).filter(n => {
      /* istanbul ignore next */
      cov_25agh713ge().f[29]++;
      cov_25agh713ge().s[57]++;
      return !visited.has(n);
    }));
    /* istanbul ignore next */
    cov_25agh713ge().s[58]++;
    for (const neighbor of neighbors) {
      /* istanbul ignore next */
      cov_25agh713ge().s[59]++;
      queue.push({
        node: neighbor,
        path: [...path, neighbor]
      });
    }
  }
  /* istanbul ignore next */
  cov_25agh713ge().s[60]++;
  return null;
}
function mergeGraphs(graph1, graph2, options =
/* istanbul ignore next */
(cov_25agh713ge().b[12][0]++, {})) {
  /* istanbul ignore next */
  cov_25agh713ge().f[30]++;
  const conflicts =
  /* istanbul ignore next */
  (cov_25agh713ge().s[61]++, []);
  const mergedNodes =
  /* istanbul ignore next */
  (cov_25agh713ge().s[62]++, new Map());
  const mergedEdges =
  /* istanbul ignore next */
  (cov_25agh713ge().s[63]++, new Map());
  // Merge nodes
  /* istanbul ignore next */
  cov_25agh713ge().s[64]++;
  for (const node of graph1.nodes) {
    /* istanbul ignore next */
    cov_25agh713ge().s[65]++;
    mergedNodes.set(node.id, node);
  }
  /* istanbul ignore next */
  cov_25agh713ge().s[66]++;
  for (const node of graph2.nodes) {
    const existing =
    /* istanbul ignore next */
    (cov_25agh713ge().s[67]++, mergedNodes.get(node.id));
    /* istanbul ignore next */
    cov_25agh713ge().s[68]++;
    if (existing) {
      /* istanbul ignore next */
      cov_25agh713ge().b[13][0]++;
      cov_25agh713ge().s[69]++;
      // Conflict detected
      if (options.reportConflicts) {
        /* istanbul ignore next */
        cov_25agh713ge().b[14][0]++;
        cov_25agh713ge().s[70]++;
        conflicts.push({
          nodeId: node.id,
          graph1Value: existing.label,
          graph2Value: node.label
        });
      } else
      /* istanbul ignore next */
      {
        cov_25agh713ge().b[14][1]++;
      }
      cov_25agh713ge().s[71]++;
      if (
      /* istanbul ignore next */
      (cov_25agh713ge().b[16][0]++, options.conflictResolution === "newer") ||
      /* istanbul ignore next */
      (cov_25agh713ge().b[16][1]++, options.conflictResolution === "keep-second")) {
        /* istanbul ignore next */
        cov_25agh713ge().b[15][0]++;
        cov_25agh713ge().s[72]++;
        mergedNodes.set(node.id, node);
      } else
      /* istanbul ignore next */
      {
        cov_25agh713ge().b[15][1]++;
      }
      // Otherwise keep existing (keep-first or default)
    } else {
      /* istanbul ignore next */
      cov_25agh713ge().b[13][1]++;
      cov_25agh713ge().s[73]++;
      mergedNodes.set(node.id, node);
    }
  }
  // Merge edges
  /* istanbul ignore next */
  cov_25agh713ge().s[74]++;
  for (const edge of graph1.edges) {
    /* istanbul ignore next */
    cov_25agh713ge().s[75]++;
    mergedEdges.set(edge.id, edge);
  }
  /* istanbul ignore next */
  cov_25agh713ge().s[76]++;
  for (const edge of graph2.edges) {
    /* istanbul ignore next */
    cov_25agh713ge().s[77]++;
    if (!mergedEdges.has(edge.id)) {
      /* istanbul ignore next */
      cov_25agh713ge().b[17][0]++;
      cov_25agh713ge().s[78]++;
      // Only add if both endpoints exist in merged graph
      if (
      /* istanbul ignore next */
      (cov_25agh713ge().b[19][0]++, mergedNodes.has(edge.source)) &&
      /* istanbul ignore next */
      (cov_25agh713ge().b[19][1]++, mergedNodes.has(edge.target))) {
        /* istanbul ignore next */
        cov_25agh713ge().b[18][0]++;
        cov_25agh713ge().s[79]++;
        mergedEdges.set(edge.id, edge);
      } else
      /* istanbul ignore next */
      {
        cov_25agh713ge().b[18][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_25agh713ge().b[17][1]++;
    }
  }
  const result =
  /* istanbul ignore next */
  (cov_25agh713ge().s[80]++, {
    id: `merged-${graph1.id}-${graph2.id}`,
    nodes: Array.from(mergedNodes.values()),
    edges: Array.from(mergedEdges.values()),
    metadata: {
      created: Math.min(graph1.metadata.created, graph2.metadata.created),
      modified: Date.now(),
      version: "1.0",
      mergedFrom: [graph1.id, graph2.id]
    }
  });
  /* istanbul ignore next */
  cov_25agh713ge().s[81]++;
  if (options.reportConflicts) {
    /* istanbul ignore next */
    cov_25agh713ge().b[20][0]++;
    cov_25agh713ge().s[82]++;
    result.conflicts = conflicts;
  } else
  /* istanbul ignore next */
  {
    cov_25agh713ge().b[20][1]++;
  }
  cov_25agh713ge().s[83]++;
  return result;
}
function exportGraph(graph, format) {
  /* istanbul ignore next */
  cov_25agh713ge().f[31]++;
  cov_25agh713ge().s[84]++;
  if (format === "json") {
    /* istanbul ignore next */
    cov_25agh713ge().b[21][0]++;
    cov_25agh713ge().s[85]++;
    return JSON.stringify(graph, null, 2);
  } else
  /* istanbul ignore next */
  {
    cov_25agh713ge().b[21][1]++;
  }
  // GraphML format
  let xml =
  /* istanbul ignore next */
  (cov_25agh713ge().s[86]++, '<?xml version="1.0" encoding="UTF-8"?>\n');
  /* istanbul ignore next */
  cov_25agh713ge().s[87]++;
  xml += '<graphml xmlns="http://graphml.graphdrawing.org/xmlns">\n';
  /* istanbul ignore next */
  cov_25agh713ge().s[88]++;
  xml += '  <graph id="' + graph.id + '" edgedefault="directed">\n';
  // Add nodes
  /* istanbul ignore next */
  cov_25agh713ge().s[89]++;
  for (const node of graph.nodes) {
    /* istanbul ignore next */
    cov_25agh713ge().s[90]++;
    xml += `    <node id="${node.id}">\n`;
    /* istanbul ignore next */
    cov_25agh713ge().s[91]++;
    xml += `      <data key="label">${node.label}</data>\n`;
    /* istanbul ignore next */
    cov_25agh713ge().s[92]++;
    xml += `      <data key="type">${node.type}</data>\n`;
    /* istanbul ignore next */
    cov_25agh713ge().s[93]++;
    xml += "    </node>\n";
  }
  // Add edges
  /* istanbul ignore next */
  cov_25agh713ge().s[94]++;
  for (const edge of graph.edges) {
    /* istanbul ignore next */
    cov_25agh713ge().s[95]++;
    xml += `    <edge id="${edge.id}" source="${edge.source}" target="${edge.target}">\n`;
    /* istanbul ignore next */
    cov_25agh713ge().s[96]++;
    xml += `      <data key="type">${edge.type}</data>\n`;
    /* istanbul ignore next */
    cov_25agh713ge().s[97]++;
    if (edge.weight !== undefined) {
      /* istanbul ignore next */
      cov_25agh713ge().b[22][0]++;
      cov_25agh713ge().s[98]++;
      xml += `      <data key="weight">${edge.weight}</data>\n`;
    } else
    /* istanbul ignore next */
    {
      cov_25agh713ge().b[22][1]++;
    }
    cov_25agh713ge().s[99]++;
    xml += "    </edge>\n";
  }
  /* istanbul ignore next */
  cov_25agh713ge().s[100]++;
  xml += "  </graph>\n";
  /* istanbul ignore next */
  cov_25agh713ge().s[101]++;
  xml += "</graphml>";
  /* istanbul ignore next */
  cov_25agh713ge().s[102]++;
  return xml;
}
function importGraph(data, format) {
  /* istanbul ignore next */
  cov_25agh713ge().f[32]++;
  cov_25agh713ge().s[103]++;
  if (format === "json") {
    /* istanbul ignore next */
    cov_25agh713ge().b[23][0]++;
    const parsed =
    /* istanbul ignore next */
    (cov_25agh713ge().s[104]++, JSON.parse(data));
    // Validate structure
    /* istanbul ignore next */
    cov_25agh713ge().s[105]++;
    if (
    /* istanbul ignore next */
    (cov_25agh713ge().b[25][0]++, !parsed.nodes) ||
    /* istanbul ignore next */
    (cov_25agh713ge().b[25][1]++, !parsed.edges)) {
      /* istanbul ignore next */
      cov_25agh713ge().b[24][0]++;
      cov_25agh713ge().s[106]++;
      throw new Error("Invalid graph structure");
    } else
    /* istanbul ignore next */
    {
      cov_25agh713ge().b[24][1]++;
    }
    // Validate nodes
    cov_25agh713ge().s[107]++;
    for (const node of parsed.nodes) {
      /* istanbul ignore next */
      cov_25agh713ge().s[108]++;
      if (
      /* istanbul ignore next */
      (cov_25agh713ge().b[27][0]++, !node.id) ||
      /* istanbul ignore next */
      (cov_25agh713ge().b[27][1]++, !node.label) ||
      /* istanbul ignore next */
      (cov_25agh713ge().b[27][2]++, !node.type)) {
        /* istanbul ignore next */
        cov_25agh713ge().b[26][0]++;
        cov_25agh713ge().s[109]++;
        throw new Error("Invalid graph structure");
      } else
      /* istanbul ignore next */
      {
        cov_25agh713ge().b[26][1]++;
      }
    }
    // Validate edges reference existing nodes
    const nodeIds =
    /* istanbul ignore next */
    (cov_25agh713ge().s[110]++, new Set(parsed.nodes.map(n => {
      /* istanbul ignore next */
      cov_25agh713ge().f[33]++;
      cov_25agh713ge().s[111]++;
      return n.id;
    })));
    /* istanbul ignore next */
    cov_25agh713ge().s[112]++;
    for (const edge of parsed.edges) {
      /* istanbul ignore next */
      cov_25agh713ge().s[113]++;
      if (
      /* istanbul ignore next */
      (cov_25agh713ge().b[29][0]++, !nodeIds.has(edge.source)) ||
      /* istanbul ignore next */
      (cov_25agh713ge().b[29][1]++, !nodeIds.has(edge.target))) {
        /* istanbul ignore next */
        cov_25agh713ge().b[28][0]++;
        cov_25agh713ge().s[114]++;
        throw new Error("Invalid graph structure");
      } else
      /* istanbul ignore next */
      {
        cov_25agh713ge().b[28][1]++;
      }
    }
    /* istanbul ignore next */
    cov_25agh713ge().s[115]++;
    return {
      id:
      /* istanbul ignore next */
      (cov_25agh713ge().b[30][0]++, parsed.id) ||
      /* istanbul ignore next */
      (cov_25agh713ge().b[30][1]++, createKnowledgeGraph().id),
      nodes: parsed.nodes,
      edges: parsed.edges,
      metadata:
      /* istanbul ignore next */
      (cov_25agh713ge().b[31][0]++, parsed.metadata) ||
      /* istanbul ignore next */
      (cov_25agh713ge().b[31][1]++, {
        created: Date.now(),
        modified: Date.now(),
        version: "1.0"
      })
    };
  } else
  /* istanbul ignore next */
  {
    cov_25agh713ge().b[23][1]++;
  }
  cov_25agh713ge().s[116]++;
  throw new Error("GraphML import not implemented");
}
function analyzeGraph(graph, options =
/* istanbul ignore next */
(cov_25agh713ge().b[32][0]++, {})) {
  /* istanbul ignore next */
  cov_25agh713ge().f[34]++;
  const nodeCount =
  /* istanbul ignore next */
  (cov_25agh713ge().s[117]++, graph.nodes.length);
  const edgeCount =
  /* istanbul ignore next */
  (cov_25agh713ge().s[118]++, graph.edges.length);
  const maxPossibleEdges =
  /* istanbul ignore next */
  (cov_25agh713ge().s[119]++, nodeCount * (nodeCount - 1) / 2);
  const density =
  /* istanbul ignore next */
  (cov_25agh713ge().s[120]++, nodeCount > 1 ?
  /* istanbul ignore next */
  (cov_25agh713ge().b[33][0]++, edgeCount / maxPossibleEdges) :
  /* istanbul ignore next */
  (cov_25agh713ge().b[33][1]++, 0));
  // Calculate average degree
  const degrees =
  /* istanbul ignore next */
  (cov_25agh713ge().s[121]++, new Map());
  /* istanbul ignore next */
  cov_25agh713ge().s[122]++;
  for (const edge of graph.edges) {
    /* istanbul ignore next */
    cov_25agh713ge().s[123]++;
    degrees.set(edge.source, (
    /* istanbul ignore next */
    (cov_25agh713ge().b[34][0]++, degrees.get(edge.source)) ||
    /* istanbul ignore next */
    (cov_25agh713ge().b[34][1]++, 0)) + 1);
    /* istanbul ignore next */
    cov_25agh713ge().s[124]++;
    degrees.set(edge.target, (
    /* istanbul ignore next */
    (cov_25agh713ge().b[35][0]++, degrees.get(edge.target)) ||
    /* istanbul ignore next */
    (cov_25agh713ge().b[35][1]++, 0)) + 1);
  }
  const avgDegree =
  /* istanbul ignore next */
  (cov_25agh713ge().s[125]++, nodeCount > 0 ?
  /* istanbul ignore next */
  (cov_25agh713ge().b[36][0]++, Array.from(degrees.values()).reduce((a, b) => {
    /* istanbul ignore next */
    cov_25agh713ge().f[35]++;
    cov_25agh713ge().s[126]++;
    return a + b;
  }, 0) / nodeCount) :
  /* istanbul ignore next */
  (cov_25agh713ge().b[36][1]++, 0));
  const metrics =
  /* istanbul ignore next */
  (cov_25agh713ge().s[127]++, {
    nodeCount,
    edgeCount,
    density,
    avgDegree,
    diameter: calculateDiameter(graph),
    clustering: calculateClustering(graph),
    modularity: 0.5
  });
  /* istanbul ignore next */
  cov_25agh713ge().s[128]++;
  if (options.includeNodeImportance) {
    /* istanbul ignore next */
    cov_25agh713ge().b[37][0]++;
    cov_25agh713ge().s[129]++;
    metrics.importantNodes = Array.from(degrees.entries()).map(([id, degree]) => {
      /* istanbul ignore next */
      cov_25agh713ge().f[36]++;
      cov_25agh713ge().s[130]++;
      return {
        id,
        score: degree
      };
    }).sort((a, b) => {
      /* istanbul ignore next */
      cov_25agh713ge().f[37]++;
      cov_25agh713ge().s[131]++;
      return b.score - a.score;
    }).slice(0, 3);
  } else
  /* istanbul ignore next */
  {
    cov_25agh713ge().b[37][1]++;
  }
  cov_25agh713ge().s[132]++;
  if (options.detectCommunities) {
    /* istanbul ignore next */
    cov_25agh713ge().b[38][0]++;
    cov_25agh713ge().s[133]++;
    metrics.communities = detectCommunities(graph);
  } else
  /* istanbul ignore next */
  {
    cov_25agh713ge().b[38][1]++;
  }
  cov_25agh713ge().s[134]++;
  return metrics;
}
function optimizeGraph(graph, options =
/* istanbul ignore next */
(cov_25agh713ge().b[39][0]++, {})) {
  /* istanbul ignore next */
  cov_25agh713ge().f[38]++;
  let optimized =
  /* istanbul ignore next */
  (cov_25agh713ge().s[135]++, {
    ...graph
  });
  /* istanbul ignore next */
  cov_25agh713ge().s[136]++;
  if (options.removeRedundant) {
    /* istanbul ignore next */
    cov_25agh713ge().b[40][0]++;
    // Remove transitive edges
    const edgesToRemove =
    /* istanbul ignore next */
    (cov_25agh713ge().s[137]++, new Set());
    /* istanbul ignore next */
    cov_25agh713ge().s[138]++;
    for (const edge of graph.edges) {
      /* istanbul ignore next */
      cov_25agh713ge().s[139]++;
      if (edge.type === "implies") {
        /* istanbul ignore next */
        cov_25agh713ge().b[41][0]++;
        // Check if there's an indirect path
        const pathWithoutEdge =
        /* istanbul ignore next */
        (cov_25agh713ge().s[140]++, findPathExcludingEdge(graph, edge.source, edge.target, edge.id));
        /* istanbul ignore next */
        cov_25agh713ge().s[141]++;
        if (
        /* istanbul ignore next */
        (cov_25agh713ge().b[43][0]++, pathWithoutEdge) &&
        /* istanbul ignore next */
        (cov_25agh713ge().b[43][1]++, pathWithoutEdge.length <= 3)) {
          /* istanbul ignore next */
          cov_25agh713ge().b[42][0]++;
          cov_25agh713ge().s[142]++;
          edgesToRemove.add(edge.id);
        } else
        /* istanbul ignore next */
        {
          cov_25agh713ge().b[42][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_25agh713ge().b[41][1]++;
      }
    }
    /* istanbul ignore next */
    cov_25agh713ge().s[143]++;
    optimized.edges = optimized.edges.filter(e => {
      /* istanbul ignore next */
      cov_25agh713ge().f[39]++;
      cov_25agh713ge().s[144]++;
      return !edgesToRemove.has(e.id);
    });
  } else
  /* istanbul ignore next */
  {
    cov_25agh713ge().b[40][1]++;
  }
  cov_25agh713ge().s[145]++;
  if (options.consolidateSimilar) {
    /* istanbul ignore next */
    cov_25agh713ge().b[44][0]++;
    // Simple consolidation based on label similarity
    const threshold =
    /* istanbul ignore next */
    (cov_25agh713ge().s[146]++,
    /* istanbul ignore next */
    (cov_25agh713ge().b[45][0]++, options.similarityThreshold) ||
    /* istanbul ignore next */
    (cov_25agh713ge().b[45][1]++, 0.8));
    const nodeGroups =
    /* istanbul ignore next */
    (cov_25agh713ge().s[147]++, []);
    const processed =
    /* istanbul ignore next */
    (cov_25agh713ge().s[148]++, new Set());
    /* istanbul ignore next */
    cov_25agh713ge().s[149]++;
    for (const node of graph.nodes) {
      /* istanbul ignore next */
      cov_25agh713ge().s[150]++;
      if (processed.has(node.id)) {
        /* istanbul ignore next */
        cov_25agh713ge().b[46][0]++;
        cov_25agh713ge().s[151]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_25agh713ge().b[46][1]++;
      }
      const group =
      /* istanbul ignore next */
      (cov_25agh713ge().s[152]++, [node]);
      /* istanbul ignore next */
      cov_25agh713ge().s[153]++;
      processed.add(node.id);
      /* istanbul ignore next */
      cov_25agh713ge().s[154]++;
      for (const other of graph.nodes) {
        /* istanbul ignore next */
        cov_25agh713ge().s[155]++;
        if (processed.has(other.id)) {
          /* istanbul ignore next */
          cov_25agh713ge().b[47][0]++;
          cov_25agh713ge().s[156]++;
          continue;
        } else
        /* istanbul ignore next */
        {
          cov_25agh713ge().b[47][1]++;
        }
        const similarity =
        /* istanbul ignore next */
        (cov_25agh713ge().s[157]++, calculateSimilarity(node.label, other.label));
        /* istanbul ignore next */
        cov_25agh713ge().s[158]++;
        if (similarity >= threshold) {
          /* istanbul ignore next */
          cov_25agh713ge().b[48][0]++;
          cov_25agh713ge().s[159]++;
          group.push(other);
          /* istanbul ignore next */
          cov_25agh713ge().s[160]++;
          processed.add(other.id);
        } else
        /* istanbul ignore next */
        {
          cov_25agh713ge().b[48][1]++;
        }
      }
      /* istanbul ignore next */
      cov_25agh713ge().s[161]++;
      if (group.length > 1) {
        /* istanbul ignore next */
        cov_25agh713ge().b[49][0]++;
        cov_25agh713ge().s[162]++;
        nodeGroups.push(group);
      } else
      /* istanbul ignore next */
      {
        cov_25agh713ge().b[49][1]++;
      }
    }
    // Merge similar nodes
    const mergedNodes =
    /* istanbul ignore next */
    (cov_25agh713ge().s[163]++, []);
    const nodeMapping =
    /* istanbul ignore next */
    (cov_25agh713ge().s[164]++, new Map());
    /* istanbul ignore next */
    cov_25agh713ge().s[165]++;
    for (const group of nodeGroups) {
      const merged =
      /* istanbul ignore next */
      (cov_25agh713ge().s[166]++, group[0]); // Keep first as representative
      /* istanbul ignore next */
      cov_25agh713ge().s[167]++;
      mergedNodes.push(merged);
      /* istanbul ignore next */
      cov_25agh713ge().s[168]++;
      for (const node of group) {
        /* istanbul ignore next */
        cov_25agh713ge().s[169]++;
        nodeMapping.set(node.id, merged.id);
      }
    }
    // Add non-grouped nodes
    /* istanbul ignore next */
    cov_25agh713ge().s[170]++;
    for (const node of graph.nodes) {
      /* istanbul ignore next */
      cov_25agh713ge().s[171]++;
      if (
      /* istanbul ignore next */
      (cov_25agh713ge().b[51][0]++, !nodeMapping.has(node.id)) ||
      /* istanbul ignore next */
      (cov_25agh713ge().b[51][1]++, nodeMapping.get(node.id) === node.id)) {
        /* istanbul ignore next */
        cov_25agh713ge().b[50][0]++;
        cov_25agh713ge().s[172]++;
        if (!mergedNodes.some(n => {
          /* istanbul ignore next */
          cov_25agh713ge().f[40]++;
          cov_25agh713ge().s[173]++;
          return n.id === node.id;
        })) {
          /* istanbul ignore next */
          cov_25agh713ge().b[52][0]++;
          cov_25agh713ge().s[174]++;
          mergedNodes.push(node);
        } else
        /* istanbul ignore next */
        {
          cov_25agh713ge().b[52][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_25agh713ge().b[50][1]++;
      }
    }
    /* istanbul ignore next */
    cov_25agh713ge().s[175]++;
    optimized.nodes = mergedNodes;
    // Update edges with merged node IDs
    /* istanbul ignore next */
    cov_25agh713ge().s[176]++;
    optimized.edges = optimized.edges.map(edge => {
      /* istanbul ignore next */
      cov_25agh713ge().f[41]++;
      cov_25agh713ge().s[177]++;
      return {
        ...edge,
        source:
        /* istanbul ignore next */
        (cov_25agh713ge().b[53][0]++, nodeMapping.get(edge.source)) ||
        /* istanbul ignore next */
        (cov_25agh713ge().b[53][1]++, edge.source),
        target:
        /* istanbul ignore next */
        (cov_25agh713ge().b[54][0]++, nodeMapping.get(edge.target)) ||
        /* istanbul ignore next */
        (cov_25agh713ge().b[54][1]++, edge.target)
      };
    }).filter(edge => {
      /* istanbul ignore next */
      cov_25agh713ge().f[42]++;
      cov_25agh713ge().s[178]++;
      return edge.source !== edge.target;
    }); // Remove self-loops
  } else
  /* istanbul ignore next */
  {
    cov_25agh713ge().b[44][1]++;
  }
  cov_25agh713ge().s[179]++;
  if (options.pruneThreshold !== undefined) {
    /* istanbul ignore next */
    cov_25agh713ge().b[55][0]++;
    cov_25agh713ge().s[180]++;
    optimized.edges = optimized.edges.filter(edge => {
      /* istanbul ignore next */
      cov_25agh713ge().f[43]++;
      cov_25agh713ge().s[181]++;
      return (
      /* istanbul ignore next */
      (cov_25agh713ge().b[56][0]++, edge.weight) ||
      /* istanbul ignore next */
      (cov_25agh713ge().b[56][1]++, 1)) >= options.pruneThreshold;
    });
  } else
  /* istanbul ignore next */
  {
    cov_25agh713ge().b[55][1]++;
  }
  cov_25agh713ge().s[182]++;
  return optimized;
}
function validateGraph(graph, options =
/* istanbul ignore next */
(cov_25agh713ge().b[57][0]++, {})) {
  /* istanbul ignore next */
  cov_25agh713ge().f[44]++;
  const errors =
  /* istanbul ignore next */
  (cov_25agh713ge().s[183]++, []);
  // Check for orphaned nodes
  /* istanbul ignore next */
  cov_25agh713ge().s[184]++;
  if (!options.allowOrphans) {
    /* istanbul ignore next */
    cov_25agh713ge().b[58][0]++;
    const connectedNodes =
    /* istanbul ignore next */
    (cov_25agh713ge().s[185]++, new Set());
    /* istanbul ignore next */
    cov_25agh713ge().s[186]++;
    for (const edge of graph.edges) {
      /* istanbul ignore next */
      cov_25agh713ge().s[187]++;
      connectedNodes.add(edge.source);
      /* istanbul ignore next */
      cov_25agh713ge().s[188]++;
      connectedNodes.add(edge.target);
    }
    /* istanbul ignore next */
    cov_25agh713ge().s[189]++;
    for (const node of graph.nodes) {
      /* istanbul ignore next */
      cov_25agh713ge().s[190]++;
      if (!connectedNodes.has(node.id)) {
        /* istanbul ignore next */
        cov_25agh713ge().b[59][0]++;
        cov_25agh713ge().s[191]++;
        errors.push({
          type: "orphaned-node",
          nodeId: node.id,
          message: `Node ${node.id} has no connections`
        });
      } else
      /* istanbul ignore next */
      {
        cov_25agh713ge().b[59][1]++;
      }
    }
  } else
  /* istanbul ignore next */
  {
    cov_25agh713ge().b[58][1]++;
  }
  // Check for invalid edges
  const nodeIds =
  /* istanbul ignore next */
  (cov_25agh713ge().s[192]++, new Set(graph.nodes.map(n => {
    /* istanbul ignore next */
    cov_25agh713ge().f[45]++;
    cov_25agh713ge().s[193]++;
    return n.id;
  })));
  /* istanbul ignore next */
  cov_25agh713ge().s[194]++;
  for (const edge of graph.edges) {
    /* istanbul ignore next */
    cov_25agh713ge().s[195]++;
    if (!nodeIds.has(edge.source)) {
      /* istanbul ignore next */
      cov_25agh713ge().b[60][0]++;
      cov_25agh713ge().s[196]++;
      errors.push({
        type: "invalid-edge",
        edgeId: edge.id,
        reason: `Source node ${edge.source} does not exist`
      });
    } else
    /* istanbul ignore next */
    {
      cov_25agh713ge().b[60][1]++;
    }
    cov_25agh713ge().s[197]++;
    if (!nodeIds.has(edge.target)) {
      /* istanbul ignore next */
      cov_25agh713ge().b[61][0]++;
      cov_25agh713ge().s[198]++;
      errors.push({
        type: "invalid-edge",
        edgeId: edge.id,
        reason: `Target node ${edge.target} does not exist`
      });
    } else
    /* istanbul ignore next */
    {
      cov_25agh713ge().b[61][1]++;
    }
  }
  /* istanbul ignore next */
  cov_25agh713ge().s[199]++;
  return {
    isValid: errors.length === 0,
    errors
  };
}
// Helper functions
function calculateDiameter(graph) {
  /* istanbul ignore next */
  cov_25agh713ge().f[46]++;
  let maxDistance =
  /* istanbul ignore next */
  (cov_25agh713ge().s[200]++, 0);
  /* istanbul ignore next */
  cov_25agh713ge().s[201]++;
  for (const start of graph.nodes) {
    /* istanbul ignore next */
    cov_25agh713ge().s[202]++;
    for (const end of graph.nodes) {
      /* istanbul ignore next */
      cov_25agh713ge().s[203]++;
      if (start.id !== end.id) {
        /* istanbul ignore next */
        cov_25agh713ge().b[62][0]++;
        const path =
        /* istanbul ignore next */
        (cov_25agh713ge().s[204]++, findPath(graph, start.id, end.id));
        /* istanbul ignore next */
        cov_25agh713ge().s[205]++;
        if (path) {
          /* istanbul ignore next */
          cov_25agh713ge().b[63][0]++;
          cov_25agh713ge().s[206]++;
          maxDistance = Math.max(maxDistance, path.length - 1);
        } else
        /* istanbul ignore next */
        {
          cov_25agh713ge().b[63][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_25agh713ge().b[62][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_25agh713ge().s[207]++;
  return maxDistance;
}
function calculateClustering(graph) {
  /* istanbul ignore next */
  cov_25agh713ge().f[47]++;
  // Simplified clustering coefficient
  let totalClustering =
  /* istanbul ignore next */
  (cov_25agh713ge().s[208]++, 0);
  let nodeCount =
  /* istanbul ignore next */
  (cov_25agh713ge().s[209]++, 0);
  /* istanbul ignore next */
  cov_25agh713ge().s[210]++;
  for (const node of graph.nodes) {
    const neighbors =
    /* istanbul ignore next */
    (cov_25agh713ge().s[211]++, graph.edges.filter(e => {
      /* istanbul ignore next */
      cov_25agh713ge().f[48]++;
      cov_25agh713ge().s[212]++;
      return /* istanbul ignore next */(cov_25agh713ge().b[64][0]++, e.source === node.id) ||
      /* istanbul ignore next */
      (cov_25agh713ge().b[64][1]++, e.target === node.id);
    }).map(e => {
      /* istanbul ignore next */
      cov_25agh713ge().f[49]++;
      cov_25agh713ge().s[213]++;
      return e.source === node.id ?
      /* istanbul ignore next */
      (cov_25agh713ge().b[65][0]++, e.target) :
      /* istanbul ignore next */
      (cov_25agh713ge().b[65][1]++, e.source);
    }));
    /* istanbul ignore next */
    cov_25agh713ge().s[214]++;
    if (neighbors.length >= 2) {
      /* istanbul ignore next */
      cov_25agh713ge().b[66][0]++;
      let connections =
      /* istanbul ignore next */
      (cov_25agh713ge().s[215]++, 0);
      /* istanbul ignore next */
      cov_25agh713ge().s[216]++;
      for (let i =
      /* istanbul ignore next */
      (cov_25agh713ge().s[217]++, 0); i < neighbors.length; i++) {
        /* istanbul ignore next */
        cov_25agh713ge().s[218]++;
        for (let j =
        /* istanbul ignore next */
        (cov_25agh713ge().s[219]++, i + 1); j < neighbors.length; j++) {
          const hasEdge =
          /* istanbul ignore next */
          (cov_25agh713ge().s[220]++, graph.edges.some(e => {
            /* istanbul ignore next */
            cov_25agh713ge().f[50]++;
            cov_25agh713ge().s[221]++;
            return /* istanbul ignore next */(cov_25agh713ge().b[67][0]++, e.source === neighbors[i]) &&
            /* istanbul ignore next */
            (cov_25agh713ge().b[67][1]++, e.target === neighbors[j]) ||
            /* istanbul ignore next */
            (cov_25agh713ge().b[67][2]++, e.source === neighbors[j]) &&
            /* istanbul ignore next */
            (cov_25agh713ge().b[67][3]++, e.target === neighbors[i]);
          }));
          /* istanbul ignore next */
          cov_25agh713ge().s[222]++;
          if (hasEdge) {
            /* istanbul ignore next */
            cov_25agh713ge().b[68][0]++;
            cov_25agh713ge().s[223]++;
            connections++;
          } else
          /* istanbul ignore next */
          {
            cov_25agh713ge().b[68][1]++;
          }
        }
      }
      const maxConnections =
      /* istanbul ignore next */
      (cov_25agh713ge().s[224]++, neighbors.length * (neighbors.length - 1) / 2);
      /* istanbul ignore next */
      cov_25agh713ge().s[225]++;
      totalClustering += connections / maxConnections;
      /* istanbul ignore next */
      cov_25agh713ge().s[226]++;
      nodeCount++;
    } else
    /* istanbul ignore next */
    {
      cov_25agh713ge().b[66][1]++;
    }
  }
  /* istanbul ignore next */
  cov_25agh713ge().s[227]++;
  return nodeCount > 0 ?
  /* istanbul ignore next */
  (cov_25agh713ge().b[69][0]++, totalClustering / nodeCount) :
  /* istanbul ignore next */
  (cov_25agh713ge().b[69][1]++, 0);
}
function detectCommunities(graph) {
  /* istanbul ignore next */
  cov_25agh713ge().f[51]++;
  // Simple community detection using connected components
  const visited =
  /* istanbul ignore next */
  (cov_25agh713ge().s[228]++, new Set());
  const communities =
  /* istanbul ignore next */
  (cov_25agh713ge().s[229]++, []);
  function dfs(nodeId, community) {
    /* istanbul ignore next */
    cov_25agh713ge().f[52]++;
    cov_25agh713ge().s[230]++;
    if (visited.has(nodeId)) {
      /* istanbul ignore next */
      cov_25agh713ge().b[70][0]++;
      cov_25agh713ge().s[231]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_25agh713ge().b[70][1]++;
    }
    cov_25agh713ge().s[232]++;
    visited.add(nodeId);
    /* istanbul ignore next */
    cov_25agh713ge().s[233]++;
    community.push(nodeId);
    const neighbors =
    /* istanbul ignore next */
    (cov_25agh713ge().s[234]++, graph.edges.filter(e => {
      /* istanbul ignore next */
      cov_25agh713ge().f[53]++;
      cov_25agh713ge().s[235]++;
      return /* istanbul ignore next */(cov_25agh713ge().b[71][0]++, e.source === nodeId) ||
      /* istanbul ignore next */
      (cov_25agh713ge().b[71][1]++, e.target === nodeId);
    }).map(e => {
      /* istanbul ignore next */
      cov_25agh713ge().f[54]++;
      cov_25agh713ge().s[236]++;
      return e.source === nodeId ?
      /* istanbul ignore next */
      (cov_25agh713ge().b[72][0]++, e.target) :
      /* istanbul ignore next */
      (cov_25agh713ge().b[72][1]++, e.source);
    }));
    /* istanbul ignore next */
    cov_25agh713ge().s[237]++;
    for (const neighbor of neighbors) {
      /* istanbul ignore next */
      cov_25agh713ge().s[238]++;
      dfs(neighbor, community);
    }
  }
  /* istanbul ignore next */
  cov_25agh713ge().s[239]++;
  for (const node of graph.nodes) {
    /* istanbul ignore next */
    cov_25agh713ge().s[240]++;
    if (!visited.has(node.id)) {
      /* istanbul ignore next */
      cov_25agh713ge().b[73][0]++;
      const community =
      /* istanbul ignore next */
      (cov_25agh713ge().s[241]++, []);
      /* istanbul ignore next */
      cov_25agh713ge().s[242]++;
      dfs(node.id, community);
      /* istanbul ignore next */
      cov_25agh713ge().s[243]++;
      communities.push(community);
    } else
    /* istanbul ignore next */
    {
      cov_25agh713ge().b[73][1]++;
    }
  }
  /* istanbul ignore next */
  cov_25agh713ge().s[244]++;
  return communities;
}
function findPathExcludingEdge(graph, start, end, excludeEdgeId) {
  /* istanbul ignore next */
  cov_25agh713ge().f[55]++;
  const filteredGraph =
  /* istanbul ignore next */
  (cov_25agh713ge().s[245]++, {
    ...graph,
    edges: graph.edges.filter(e => {
      /* istanbul ignore next */
      cov_25agh713ge().f[56]++;
      cov_25agh713ge().s[246]++;
      return e.id !== excludeEdgeId;
    })
  });
  /* istanbul ignore next */
  cov_25agh713ge().s[247]++;
  return findPath(filteredGraph, start, end);
}
function calculateSimilarity(label1, label2) {
  /* istanbul ignore next */
  cov_25agh713ge().f[57]++;
  // Simple case-insensitive comparison
  const normalized1 =
  /* istanbul ignore next */
  (cov_25agh713ge().s[248]++, label1.toLowerCase().trim());
  const normalized2 =
  /* istanbul ignore next */
  (cov_25agh713ge().s[249]++, label2.toLowerCase().trim());
  /* istanbul ignore next */
  cov_25agh713ge().s[250]++;
  if (normalized1 === normalized2) {
    /* istanbul ignore next */
    cov_25agh713ge().b[74][0]++;
    cov_25agh713ge().s[251]++;
    return 1;
  } else
  /* istanbul ignore next */
  {
    cov_25agh713ge().b[74][1]++;
  }
  // Check for common abbreviations
  const abbreviations =
  /* istanbul ignore next */
  (cov_25agh713ge().s[252]++, {
    ml: "machine learning",
    ai: "artificial intelligence",
    dl: "deep learning"
  });
  const expanded1 =
  /* istanbul ignore next */
  (cov_25agh713ge().s[253]++,
  /* istanbul ignore next */
  (cov_25agh713ge().b[75][0]++, abbreviations[normalized1]) ||
  /* istanbul ignore next */
  (cov_25agh713ge().b[75][1]++, normalized1));
  const expanded2 =
  /* istanbul ignore next */
  (cov_25agh713ge().s[254]++,
  /* istanbul ignore next */
  (cov_25agh713ge().b[76][0]++, abbreviations[normalized2]) ||
  /* istanbul ignore next */
  (cov_25agh713ge().b[76][1]++, normalized2));
  /* istanbul ignore next */
  cov_25agh713ge().s[255]++;
  if (expanded1 === expanded2) {
    /* istanbul ignore next */
    cov_25agh713ge().b[77][0]++;
    cov_25agh713ge().s[256]++;
    return 0.9;
  } else
  /* istanbul ignore next */
  {
    cov_25agh713ge().b[77][1]++;
  }
  cov_25agh713ge().s[257]++;
  if (
  /* istanbul ignore next */
  (cov_25agh713ge().b[79][0]++, expanded1.includes(expanded2)) ||
  /* istanbul ignore next */
  (cov_25agh713ge().b[79][1]++, expanded2.includes(expanded1))) {
    /* istanbul ignore next */
    cov_25agh713ge().b[78][0]++;
    cov_25agh713ge().s[258]++;
    return 0.8;
  } else
  /* istanbul ignore next */
  {
    cov_25agh713ge().b[78][1]++;
  }
  cov_25agh713ge().s[259]++;
  return 0;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMjVhZ2g3MTNnZSIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwidHlwZSIsImxvY2F0aW9ucyIsInVuZGVmaW5lZCIsInMiLCJmIiwiYiIsImlucHV0U291cmNlTWFwIiwidmVyc2lvbiIsInNvdXJjZXMiLCJzb3VyY2VzQ29udGVudCIsIm5hbWVzIiwibWFwcGluZ3MiLCJfY292ZXJhZ2VTY2hlbWEiLCJjb3ZlcmFnZSIsImFjdHVhbENvdmVyYWdlIiwiYWRkRWRnZSIsImFkZE5vZGUiLCJhbmFseXplR3JhcGgiLCJjcmVhdGVLbm93bGVkZ2VHcmFwaCIsImV4cG9ydEdyYXBoIiwiZmluZFBhdGgiLCJpbXBvcnRHcmFwaCIsIm1lcmdlR3JhcGhzIiwib3B0aW1pemVHcmFwaCIsInJlbW92ZU5vZGUiLCJ1cGRhdGVOb2RlIiwidmFsaWRhdGVHcmFwaCIsImdyYXBoQ291bnRlciIsImlkIiwibm9kZXMiLCJlZGdlcyIsIm1ldGFkYXRhIiwiY3JlYXRlZCIsIkRhdGUiLCJub3ciLCJtb2RpZmllZCIsImdyYXBoIiwibm9kZSIsInNvbWUiLCJuIiwiRXJyb3IiLCJlZGdlIiwic291cmNlRXhpc3RzIiwic291cmNlIiwidGFyZ2V0RXhpc3RzIiwidGFyZ2V0Iiwibm9kZUlkIiwidXBkYXRlcyIsIm5vZGVJbmRleCIsImZpbmRJbmRleCIsInVwZGF0ZWROb2RlcyIsImZpbHRlciIsImUiLCJzdGFydElkIiwiZW5kSWQiLCJxdWV1ZSIsInZpc2l0ZWQiLCJTZXQiLCJsZW5ndGgiLCJzaGlmdCIsImhhcyIsImFkZCIsIm5laWdoYm9ycyIsIm1hcCIsIm5laWdoYm9yIiwicHVzaCIsImdyYXBoMSIsImdyYXBoMiIsIm9wdGlvbnMiLCJjb25mbGljdHMiLCJtZXJnZWROb2RlcyIsIk1hcCIsIm1lcmdlZEVkZ2VzIiwic2V0IiwiZXhpc3RpbmciLCJnZXQiLCJyZXBvcnRDb25mbGljdHMiLCJncmFwaDFWYWx1ZSIsImxhYmVsIiwiZ3JhcGgyVmFsdWUiLCJjb25mbGljdFJlc29sdXRpb24iLCJyZXN1bHQiLCJBcnJheSIsImZyb20iLCJ2YWx1ZXMiLCJNYXRoIiwibWluIiwibWVyZ2VkRnJvbSIsImZvcm1hdCIsIkpTT04iLCJzdHJpbmdpZnkiLCJ4bWwiLCJ3ZWlnaHQiLCJkYXRhIiwicGFyc2VkIiwicGFyc2UiLCJub2RlSWRzIiwibm9kZUNvdW50IiwiZWRnZUNvdW50IiwibWF4UG9zc2libGVFZGdlcyIsImRlbnNpdHkiLCJkZWdyZWVzIiwiYXZnRGVncmVlIiwicmVkdWNlIiwiYSIsIm1ldHJpY3MiLCJkaWFtZXRlciIsImNhbGN1bGF0ZURpYW1ldGVyIiwiY2x1c3RlcmluZyIsImNhbGN1bGF0ZUNsdXN0ZXJpbmciLCJtb2R1bGFyaXR5IiwiaW5jbHVkZU5vZGVJbXBvcnRhbmNlIiwiaW1wb3J0YW50Tm9kZXMiLCJlbnRyaWVzIiwiZGVncmVlIiwic2NvcmUiLCJzb3J0Iiwic2xpY2UiLCJkZXRlY3RDb21tdW5pdGllcyIsImNvbW11bml0aWVzIiwib3B0aW1pemVkIiwicmVtb3ZlUmVkdW5kYW50IiwiZWRnZXNUb1JlbW92ZSIsInBhdGhXaXRob3V0RWRnZSIsImZpbmRQYXRoRXhjbHVkaW5nRWRnZSIsImNvbnNvbGlkYXRlU2ltaWxhciIsInRocmVzaG9sZCIsInNpbWlsYXJpdHlUaHJlc2hvbGQiLCJub2RlR3JvdXBzIiwicHJvY2Vzc2VkIiwiZ3JvdXAiLCJvdGhlciIsInNpbWlsYXJpdHkiLCJjYWxjdWxhdGVTaW1pbGFyaXR5Iiwibm9kZU1hcHBpbmciLCJtZXJnZWQiLCJwcnVuZVRocmVzaG9sZCIsImVycm9ycyIsImFsbG93T3JwaGFucyIsImNvbm5lY3RlZE5vZGVzIiwibWVzc2FnZSIsImVkZ2VJZCIsInJlYXNvbiIsImlzVmFsaWQiLCJtYXhEaXN0YW5jZSIsIm1heCIsInRvdGFsQ2x1c3RlcmluZyIsImNvbm5lY3Rpb25zIiwiaSIsImoiLCJoYXNFZGdlIiwibWF4Q29ubmVjdGlvbnMiLCJkZnMiLCJjb21tdW5pdHkiLCJleGNsdWRlRWRnZUlkIiwiZmlsdGVyZWRHcmFwaCIsImxhYmVsMSIsImxhYmVsMiIsIm5vcm1hbGl6ZWQxIiwidG9Mb3dlckNhc2UiLCJ0cmltIiwibm9ybWFsaXplZDIiLCJhYmJyZXZpYXRpb25zIiwibWwiLCJhaSIsImRsIiwiZXhwYW5kZWQxIiwiZXhwYW5kZWQyIiwiaW5jbHVkZXMiXSwic291cmNlcyI6WyIvVXNlcnMvbWF0dGhld21vcm9uZXkvYnVpbGRzL0ZyZWVBZ2VudGljcy93ZWIvbGliL2tub3dsZWRnZS1ncmFwaC1tYW5hZ2VtZW50LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogS25vd2xlZGdlIEdyYXBoIE1hbmFnZW1lbnQgTW9kdWxlXG4gKiBBRFItMDA3IENvbXBsaWFudCAtIEtub3dsZWRnZSBNYW5hZ2VtZW50XG4gKi9cblxuZXhwb3J0IGludGVyZmFjZSBLbm93bGVkZ2VOb2RlIHtcbiAgaWQ6IHN0cmluZztcbiAgbGFiZWw6IHN0cmluZztcbiAgdHlwZTogXCJjb25jZXB0XCIgfCBcImZhY3RcIiB8IFwiZW50aXR5XCIgfCBcInJlbGF0aW9uc2hpcFwiO1xuICBwcm9wZXJ0aWVzPzogUmVjb3JkPHN0cmluZywgYW55PjtcblxuICAvLyBWaXN1YWwgcHJvcGVydGllcyBmb3IgcmVuZGVyaW5nXG4gIHg/OiBudW1iZXI7XG4gIHk/OiBudW1iZXI7XG4gIHJhZGl1cz86IG51bWJlcjtcbiAgY29sb3I/OiBzdHJpbmc7XG4gIG93bmVyVHlwZT86IFwiaW5kaXZpZHVhbFwiIHwgXCJjb2xsZWN0aXZlXCIgfCBcInNoYXJlZFwiO1xuICBjb25maWRlbmNlPzogbnVtYmVyO1xuICBpbXBvcnRhbmNlPzogbnVtYmVyO1xuICBsYXN0VXBkYXRlZD86IERhdGU7XG4gIGNyZWF0ZWRBdD86IERhdGU7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgS25vd2xlZGdlRWRnZSB7XG4gIGlkOiBzdHJpbmc7XG4gIHNvdXJjZTogc3RyaW5nO1xuICB0YXJnZXQ6IHN0cmluZztcbiAgdHlwZTogc3RyaW5nO1xuICB3ZWlnaHQ/OiBudW1iZXI7XG4gIHN0cmVuZ3RoPzogbnVtYmVyO1xuICBjb25maWRlbmNlPzogbnVtYmVyO1xuICBjb2xvcj86IHN0cmluZztcbiAgY3JlYXRlZEF0PzogRGF0ZTtcbiAgbGFzdFVwZGF0ZWQ/OiBEYXRlO1xuICBwcm9wZXJ0aWVzPzogUmVjb3JkPHN0cmluZywgYW55Pjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBLbm93bGVkZ2VHcmFwaCB7XG4gIGlkOiBzdHJpbmc7XG4gIG5vZGVzOiBLbm93bGVkZ2VOb2RlW107XG4gIGVkZ2VzOiBLbm93bGVkZ2VFZGdlW107XG4gIG1ldGFkYXRhOiB7XG4gICAgY3JlYXRlZDogbnVtYmVyO1xuICAgIG1vZGlmaWVkOiBudW1iZXI7XG4gICAgdmVyc2lvbjogc3RyaW5nO1xuICAgIFtrZXk6IHN0cmluZ106IGFueTtcbiAgfTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBHcmFwaE1ldHJpY3Mge1xuICBub2RlQ291bnQ6IG51bWJlcjtcbiAgZWRnZUNvdW50OiBudW1iZXI7XG4gIGRlbnNpdHk6IG51bWJlcjtcbiAgYXZnRGVncmVlOiBudW1iZXI7XG4gIGRpYW1ldGVyOiBudW1iZXI7XG4gIGNsdXN0ZXJpbmc6IG51bWJlcjtcbiAgbW9kdWxhcml0eTogbnVtYmVyO1xuICBpbXBvcnRhbnROb2Rlcz86IEFycmF5PHsgaWQ6IHN0cmluZzsgc2NvcmU6IG51bWJlciB9PjtcbiAgY29tbXVuaXRpZXM/OiBzdHJpbmdbXVtdO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEdyYXBoUXVlcnkge1xuICBzdGFydE5vZGU/OiBzdHJpbmc7XG4gIHRyYXZlcnNlPzoge1xuICAgIGRpcmVjdGlvbjogXCJpbmNvbWluZ1wiIHwgXCJvdXRnb2luZ1wiIHwgXCJib3RoXCI7XG4gICAgZWRnZVR5cGVzPzogc3RyaW5nW107XG4gICAgbWF4RGVwdGg/OiBudW1iZXI7XG4gIH07XG4gIGZpbHRlcj86IHtcbiAgICBub2RlVHlwZXM/OiBzdHJpbmdbXTtcbiAgICBwcm9wZXJ0aWVzPzogUmVjb3JkPHN0cmluZywgYW55PjtcbiAgfTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBHcmFwaERpZmYge1xuICBhZGRlZE5vZGVzOiBLbm93bGVkZ2VOb2RlW107XG4gIHJlbW92ZWROb2RlczogS25vd2xlZGdlTm9kZVtdO1xuICBtb2RpZmllZE5vZGVzOiBBcnJheTx7XG4gICAgaWQ6IHN0cmluZztcbiAgICBjaGFuZ2VzOiBSZWNvcmQ8c3RyaW5nLCB7IG9sZDogYW55OyBuZXc6IGFueSB9PjtcbiAgfT47XG4gIGFkZGVkRWRnZXM6IEtub3dsZWRnZUVkZ2VbXTtcbiAgcmVtb3ZlZEVkZ2VzOiBLbm93bGVkZ2VFZGdlW107XG59XG5cbmxldCBncmFwaENvdW50ZXIgPSAwO1xuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlS25vd2xlZGdlR3JhcGgoaWQ/OiBzdHJpbmcpOiBLbm93bGVkZ2VHcmFwaCB7XG4gIHJldHVybiB7XG4gICAgaWQ6IGlkIHx8IGBncmFwaC0keysrZ3JhcGhDb3VudGVyfWAsXG4gICAgbm9kZXM6IFtdLFxuICAgIGVkZ2VzOiBbXSxcbiAgICBtZXRhZGF0YToge1xuICAgICAgY3JlYXRlZDogRGF0ZS5ub3coKSxcbiAgICAgIG1vZGlmaWVkOiBEYXRlLm5vdygpLFxuICAgICAgdmVyc2lvbjogXCIxLjBcIixcbiAgICB9LFxuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYWRkTm9kZShcbiAgZ3JhcGg6IEtub3dsZWRnZUdyYXBoLFxuICBub2RlOiBLbm93bGVkZ2VOb2RlLFxuKTogS25vd2xlZGdlR3JhcGgge1xuICBpZiAoZ3JhcGgubm9kZXMuc29tZSgobikgPT4gbi5pZCA9PT0gbm9kZS5pZCkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYE5vZGUgd2l0aCBJRCAke25vZGUuaWR9IGFscmVhZHkgZXhpc3RzYCk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIC4uLmdyYXBoLFxuICAgIG5vZGVzOiBbLi4uZ3JhcGgubm9kZXMsIG5vZGVdLFxuICAgIG1ldGFkYXRhOiB7IC4uLmdyYXBoLm1ldGFkYXRhLCBtb2RpZmllZDogRGF0ZS5ub3coKSB9LFxuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYWRkRWRnZShcbiAgZ3JhcGg6IEtub3dsZWRnZUdyYXBoLFxuICBlZGdlOiBLbm93bGVkZ2VFZGdlLFxuKTogS25vd2xlZGdlR3JhcGgge1xuICAvLyBWYWxpZGF0ZSBlZGdlIGVuZHBvaW50c1xuICBjb25zdCBzb3VyY2VFeGlzdHMgPSBncmFwaC5ub2Rlcy5zb21lKChuKSA9PiBuLmlkID09PSBlZGdlLnNvdXJjZSk7XG4gIGNvbnN0IHRhcmdldEV4aXN0cyA9IGdyYXBoLm5vZGVzLnNvbWUoKG4pID0+IG4uaWQgPT09IGVkZ2UudGFyZ2V0KTtcblxuICBpZiAoIXNvdXJjZUV4aXN0cykge1xuICAgIHRocm93IG5ldyBFcnJvcihgU291cmNlIG5vZGUgJHtlZGdlLnNvdXJjZX0gZG9lcyBub3QgZXhpc3RgKTtcbiAgfVxuICBpZiAoIXRhcmdldEV4aXN0cykge1xuICAgIHRocm93IG5ldyBFcnJvcihgVGFyZ2V0IG5vZGUgJHtlZGdlLnRhcmdldH0gZG9lcyBub3QgZXhpc3RgKTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgLi4uZ3JhcGgsXG4gICAgZWRnZXM6IFsuLi5ncmFwaC5lZGdlcywgZWRnZV0sXG4gICAgbWV0YWRhdGE6IHsgLi4uZ3JhcGgubWV0YWRhdGEsIG1vZGlmaWVkOiBEYXRlLm5vdygpIH0sXG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVOb2RlKFxuICBncmFwaDogS25vd2xlZGdlR3JhcGgsXG4gIG5vZGVJZDogc3RyaW5nLFxuICB1cGRhdGVzOiBQYXJ0aWFsPEtub3dsZWRnZU5vZGU+LFxuKTogS25vd2xlZGdlR3JhcGgge1xuICBjb25zdCBub2RlSW5kZXggPSBncmFwaC5ub2Rlcy5maW5kSW5kZXgoKG4pID0+IG4uaWQgPT09IG5vZGVJZCk7XG5cbiAgaWYgKG5vZGVJbmRleCA9PT0gLTEpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYE5vZGUgJHtub2RlSWR9IG5vdCBmb3VuZGApO1xuICB9XG5cbiAgY29uc3QgdXBkYXRlZE5vZGVzID0gWy4uLmdyYXBoLm5vZGVzXTtcbiAgdXBkYXRlZE5vZGVzW25vZGVJbmRleF0gPSB7XG4gICAgLi4udXBkYXRlZE5vZGVzW25vZGVJbmRleF0sXG4gICAgLi4udXBkYXRlcyxcbiAgICBpZDogbm9kZUlkLCAvLyBQcmV2ZW50IElEIGNoYW5nZXNcbiAgfTtcblxuICByZXR1cm4ge1xuICAgIC4uLmdyYXBoLFxuICAgIG5vZGVzOiB1cGRhdGVkTm9kZXMsXG4gICAgbWV0YWRhdGE6IHsgLi4uZ3JhcGgubWV0YWRhdGEsIG1vZGlmaWVkOiBEYXRlLm5vdygpIH0sXG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZW1vdmVOb2RlKFxuICBncmFwaDogS25vd2xlZGdlR3JhcGgsXG4gIG5vZGVJZDogc3RyaW5nLFxuKTogS25vd2xlZGdlR3JhcGgge1xuICByZXR1cm4ge1xuICAgIC4uLmdyYXBoLFxuICAgIG5vZGVzOiBncmFwaC5ub2Rlcy5maWx0ZXIoKG4pID0+IG4uaWQgIT09IG5vZGVJZCksXG4gICAgZWRnZXM6IGdyYXBoLmVkZ2VzLmZpbHRlcihcbiAgICAgIChlKSA9PiBlLnNvdXJjZSAhPT0gbm9kZUlkICYmIGUudGFyZ2V0ICE9PSBub2RlSWQsXG4gICAgKSxcbiAgICBtZXRhZGF0YTogeyAuLi5ncmFwaC5tZXRhZGF0YSwgbW9kaWZpZWQ6IERhdGUubm93KCkgfSxcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZpbmRQYXRoKFxuICBncmFwaDogS25vd2xlZGdlR3JhcGgsXG4gIHN0YXJ0SWQ6IHN0cmluZyxcbiAgZW5kSWQ6IHN0cmluZyxcbik6IHN0cmluZ1tdIHwgbnVsbCB7XG4gIGlmIChcbiAgICAhZ3JhcGgubm9kZXMuc29tZSgobikgPT4gbi5pZCA9PT0gc3RhcnRJZCkgfHxcbiAgICAhZ3JhcGgubm9kZXMuc29tZSgobikgPT4gbi5pZCA9PT0gZW5kSWQpXG4gICkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgLy8gQkZTIHRvIGZpbmQgc2hvcnRlc3QgcGF0aFxuICBjb25zdCBxdWV1ZTogQXJyYXk8eyBub2RlOiBzdHJpbmc7IHBhdGg6IHN0cmluZ1tdIH0+ID0gW1xuICAgIHsgbm9kZTogc3RhcnRJZCwgcGF0aDogW3N0YXJ0SWRdIH0sXG4gIF07XG4gIGNvbnN0IHZpc2l0ZWQgPSBuZXcgU2V0PHN0cmluZz4oKTtcblxuICB3aGlsZSAocXVldWUubGVuZ3RoID4gMCkge1xuICAgIGNvbnN0IHsgbm9kZSwgcGF0aCB9ID0gcXVldWUuc2hpZnQoKSE7XG5cbiAgICBpZiAobm9kZSA9PT0gZW5kSWQpIHtcbiAgICAgIHJldHVybiBwYXRoO1xuICAgIH1cblxuICAgIGlmICh2aXNpdGVkLmhhcyhub2RlKSkgY29udGludWU7XG4gICAgdmlzaXRlZC5hZGQobm9kZSk7XG5cbiAgICAvLyBGaW5kIG5laWdoYm9yc1xuICAgIGNvbnN0IG5laWdoYm9ycyA9IGdyYXBoLmVkZ2VzXG4gICAgICAuZmlsdGVyKChlKSA9PiBlLnNvdXJjZSA9PT0gbm9kZSB8fCBlLnRhcmdldCA9PT0gbm9kZSlcbiAgICAgIC5tYXAoKGUpID0+IChlLnNvdXJjZSA9PT0gbm9kZSA/IGUudGFyZ2V0IDogZS5zb3VyY2UpKVxuICAgICAgLmZpbHRlcigobikgPT4gIXZpc2l0ZWQuaGFzKG4pKTtcblxuICAgIGZvciAoY29uc3QgbmVpZ2hib3Igb2YgbmVpZ2hib3JzKSB7XG4gICAgICBxdWV1ZS5wdXNoKHsgbm9kZTogbmVpZ2hib3IsIHBhdGg6IFsuLi5wYXRoLCBuZWlnaGJvcl0gfSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG51bGw7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtZXJnZUdyYXBocyhcbiAgZ3JhcGgxOiBLbm93bGVkZ2VHcmFwaCxcbiAgZ3JhcGgyOiBLbm93bGVkZ2VHcmFwaCxcbiAgb3B0aW9uczoge1xuICAgIGNvbmZsaWN0UmVzb2x1dGlvbj86IFwia2VlcC1maXJzdFwiIHwgXCJrZWVwLXNlY29uZFwiIHwgXCJuZXdlclwiO1xuICAgIHJlcG9ydENvbmZsaWN0cz86IGJvb2xlYW47XG4gIH0gPSB7fSxcbik6IEtub3dsZWRnZUdyYXBoICYgeyBjb25mbGljdHM/OiBhbnlbXSB9IHtcbiAgY29uc3QgY29uZmxpY3RzOiBhbnlbXSA9IFtdO1xuICBjb25zdCBtZXJnZWROb2RlcyA9IG5ldyBNYXA8c3RyaW5nLCBLbm93bGVkZ2VOb2RlPigpO1xuICBjb25zdCBtZXJnZWRFZGdlcyA9IG5ldyBNYXA8c3RyaW5nLCBLbm93bGVkZ2VFZGdlPigpO1xuXG4gIC8vIE1lcmdlIG5vZGVzXG4gIGZvciAoY29uc3Qgbm9kZSBvZiBncmFwaDEubm9kZXMpIHtcbiAgICBtZXJnZWROb2Rlcy5zZXQobm9kZS5pZCwgbm9kZSk7XG4gIH1cblxuICBmb3IgKGNvbnN0IG5vZGUgb2YgZ3JhcGgyLm5vZGVzKSB7XG4gICAgY29uc3QgZXhpc3RpbmcgPSBtZXJnZWROb2Rlcy5nZXQobm9kZS5pZCk7XG4gICAgaWYgKGV4aXN0aW5nKSB7XG4gICAgICAvLyBDb25mbGljdCBkZXRlY3RlZFxuICAgICAgaWYgKG9wdGlvbnMucmVwb3J0Q29uZmxpY3RzKSB7XG4gICAgICAgIGNvbmZsaWN0cy5wdXNoKHtcbiAgICAgICAgICBub2RlSWQ6IG5vZGUuaWQsXG4gICAgICAgICAgZ3JhcGgxVmFsdWU6IGV4aXN0aW5nLmxhYmVsLFxuICAgICAgICAgIGdyYXBoMlZhbHVlOiBub2RlLmxhYmVsLFxuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgaWYgKFxuICAgICAgICBvcHRpb25zLmNvbmZsaWN0UmVzb2x1dGlvbiA9PT0gXCJuZXdlclwiIHx8XG4gICAgICAgIG9wdGlvbnMuY29uZmxpY3RSZXNvbHV0aW9uID09PSBcImtlZXAtc2Vjb25kXCJcbiAgICAgICkge1xuICAgICAgICBtZXJnZWROb2Rlcy5zZXQobm9kZS5pZCwgbm9kZSk7XG4gICAgICB9XG4gICAgICAvLyBPdGhlcndpc2Uga2VlcCBleGlzdGluZyAoa2VlcC1maXJzdCBvciBkZWZhdWx0KVxuICAgIH0gZWxzZSB7XG4gICAgICBtZXJnZWROb2Rlcy5zZXQobm9kZS5pZCwgbm9kZSk7XG4gICAgfVxuICB9XG5cbiAgLy8gTWVyZ2UgZWRnZXNcbiAgZm9yIChjb25zdCBlZGdlIG9mIGdyYXBoMS5lZGdlcykge1xuICAgIG1lcmdlZEVkZ2VzLnNldChlZGdlLmlkLCBlZGdlKTtcbiAgfVxuXG4gIGZvciAoY29uc3QgZWRnZSBvZiBncmFwaDIuZWRnZXMpIHtcbiAgICBpZiAoIW1lcmdlZEVkZ2VzLmhhcyhlZGdlLmlkKSkge1xuICAgICAgLy8gT25seSBhZGQgaWYgYm90aCBlbmRwb2ludHMgZXhpc3QgaW4gbWVyZ2VkIGdyYXBoXG4gICAgICBpZiAobWVyZ2VkTm9kZXMuaGFzKGVkZ2Uuc291cmNlKSAmJiBtZXJnZWROb2Rlcy5oYXMoZWRnZS50YXJnZXQpKSB7XG4gICAgICAgIG1lcmdlZEVkZ2VzLnNldChlZGdlLmlkLCBlZGdlKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBjb25zdCByZXN1bHQ6IEtub3dsZWRnZUdyYXBoICYgeyBjb25mbGljdHM/OiBhbnlbXSB9ID0ge1xuICAgIGlkOiBgbWVyZ2VkLSR7Z3JhcGgxLmlkfS0ke2dyYXBoMi5pZH1gLFxuICAgIG5vZGVzOiBBcnJheS5mcm9tKG1lcmdlZE5vZGVzLnZhbHVlcygpKSxcbiAgICBlZGdlczogQXJyYXkuZnJvbShtZXJnZWRFZGdlcy52YWx1ZXMoKSksXG4gICAgbWV0YWRhdGE6IHtcbiAgICAgIGNyZWF0ZWQ6IE1hdGgubWluKGdyYXBoMS5tZXRhZGF0YS5jcmVhdGVkLCBncmFwaDIubWV0YWRhdGEuY3JlYXRlZCksXG4gICAgICBtb2RpZmllZDogRGF0ZS5ub3coKSxcbiAgICAgIHZlcnNpb246IFwiMS4wXCIsXG4gICAgICBtZXJnZWRGcm9tOiBbZ3JhcGgxLmlkLCBncmFwaDIuaWRdLFxuICAgIH0sXG4gIH07XG5cbiAgaWYgKG9wdGlvbnMucmVwb3J0Q29uZmxpY3RzKSB7XG4gICAgcmVzdWx0LmNvbmZsaWN0cyA9IGNvbmZsaWN0cztcbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBleHBvcnRHcmFwaChcbiAgZ3JhcGg6IEtub3dsZWRnZUdyYXBoLFxuICBmb3JtYXQ6IFwianNvblwiIHwgXCJncmFwaG1sXCIsXG4pOiBzdHJpbmcge1xuICBpZiAoZm9ybWF0ID09PSBcImpzb25cIikge1xuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShncmFwaCwgbnVsbCwgMik7XG4gIH1cblxuICAvLyBHcmFwaE1MIGZvcm1hdFxuICBsZXQgeG1sID0gJzw/eG1sIHZlcnNpb249XCIxLjBcIiBlbmNvZGluZz1cIlVURi04XCI/Plxcbic7XG4gIHhtbCArPSAnPGdyYXBobWwgeG1sbnM9XCJodHRwOi8vZ3JhcGhtbC5ncmFwaGRyYXdpbmcub3JnL3htbG5zXCI+XFxuJztcbiAgeG1sICs9ICcgIDxncmFwaCBpZD1cIicgKyBncmFwaC5pZCArICdcIiBlZGdlZGVmYXVsdD1cImRpcmVjdGVkXCI+XFxuJztcblxuICAvLyBBZGQgbm9kZXNcbiAgZm9yIChjb25zdCBub2RlIG9mIGdyYXBoLm5vZGVzKSB7XG4gICAgeG1sICs9IGAgICAgPG5vZGUgaWQ9XCIke25vZGUuaWR9XCI+XFxuYDtcbiAgICB4bWwgKz0gYCAgICAgIDxkYXRhIGtleT1cImxhYmVsXCI+JHtub2RlLmxhYmVsfTwvZGF0YT5cXG5gO1xuICAgIHhtbCArPSBgICAgICAgPGRhdGEga2V5PVwidHlwZVwiPiR7bm9kZS50eXBlfTwvZGF0YT5cXG5gO1xuICAgIHhtbCArPSBcIiAgICA8L25vZGU+XFxuXCI7XG4gIH1cblxuICAvLyBBZGQgZWRnZXNcbiAgZm9yIChjb25zdCBlZGdlIG9mIGdyYXBoLmVkZ2VzKSB7XG4gICAgeG1sICs9IGAgICAgPGVkZ2UgaWQ9XCIke2VkZ2UuaWR9XCIgc291cmNlPVwiJHtlZGdlLnNvdXJjZX1cIiB0YXJnZXQ9XCIke2VkZ2UudGFyZ2V0fVwiPlxcbmA7XG4gICAgeG1sICs9IGAgICAgICA8ZGF0YSBrZXk9XCJ0eXBlXCI+JHtlZGdlLnR5cGV9PC9kYXRhPlxcbmA7XG4gICAgaWYgKGVkZ2Uud2VpZ2h0ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHhtbCArPSBgICAgICAgPGRhdGEga2V5PVwid2VpZ2h0XCI+JHtlZGdlLndlaWdodH08L2RhdGE+XFxuYDtcbiAgICB9XG4gICAgeG1sICs9IFwiICAgIDwvZWRnZT5cXG5cIjtcbiAgfVxuXG4gIHhtbCArPSBcIiAgPC9ncmFwaD5cXG5cIjtcbiAgeG1sICs9IFwiPC9ncmFwaG1sPlwiO1xuXG4gIHJldHVybiB4bWw7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpbXBvcnRHcmFwaChcbiAgZGF0YTogc3RyaW5nLFxuICBmb3JtYXQ6IFwianNvblwiIHwgXCJncmFwaG1sXCIsXG4pOiBLbm93bGVkZ2VHcmFwaCB7XG4gIGlmIChmb3JtYXQgPT09IFwianNvblwiKSB7XG4gICAgY29uc3QgcGFyc2VkID0gSlNPTi5wYXJzZShkYXRhKTtcblxuICAgIC8vIFZhbGlkYXRlIHN0cnVjdHVyZVxuICAgIGlmICghcGFyc2VkLm5vZGVzIHx8ICFwYXJzZWQuZWRnZXMpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgZ3JhcGggc3RydWN0dXJlXCIpO1xuICAgIH1cblxuICAgIC8vIFZhbGlkYXRlIG5vZGVzXG4gICAgZm9yIChjb25zdCBub2RlIG9mIHBhcnNlZC5ub2Rlcykge1xuICAgICAgaWYgKCFub2RlLmlkIHx8ICFub2RlLmxhYmVsIHx8ICFub2RlLnR5cGUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBncmFwaCBzdHJ1Y3R1cmVcIik7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gVmFsaWRhdGUgZWRnZXMgcmVmZXJlbmNlIGV4aXN0aW5nIG5vZGVzXG4gICAgY29uc3Qgbm9kZUlkcyA9IG5ldyBTZXQocGFyc2VkLm5vZGVzLm1hcCgobjogS25vd2xlZGdlTm9kZSkgPT4gbi5pZCkpO1xuICAgIGZvciAoY29uc3QgZWRnZSBvZiBwYXJzZWQuZWRnZXMpIHtcbiAgICAgIGlmICghbm9kZUlkcy5oYXMoZWRnZS5zb3VyY2UpIHx8ICFub2RlSWRzLmhhcyhlZGdlLnRhcmdldCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBncmFwaCBzdHJ1Y3R1cmVcIik7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIGlkOiBwYXJzZWQuaWQgfHwgY3JlYXRlS25vd2xlZGdlR3JhcGgoKS5pZCxcbiAgICAgIG5vZGVzOiBwYXJzZWQubm9kZXMsXG4gICAgICBlZGdlczogcGFyc2VkLmVkZ2VzLFxuICAgICAgbWV0YWRhdGE6IHBhcnNlZC5tZXRhZGF0YSB8fCB7XG4gICAgICAgIGNyZWF0ZWQ6IERhdGUubm93KCksXG4gICAgICAgIG1vZGlmaWVkOiBEYXRlLm5vdygpLFxuICAgICAgICB2ZXJzaW9uOiBcIjEuMFwiLFxuICAgICAgfSxcbiAgICB9O1xuICB9XG5cbiAgdGhyb3cgbmV3IEVycm9yKFwiR3JhcGhNTCBpbXBvcnQgbm90IGltcGxlbWVudGVkXCIpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYW5hbHl6ZUdyYXBoKFxuICBncmFwaDogS25vd2xlZGdlR3JhcGgsXG4gIG9wdGlvbnM6IHtcbiAgICBpbmNsdWRlTm9kZUltcG9ydGFuY2U/OiBib29sZWFuO1xuICAgIGRldGVjdENvbW11bml0aWVzPzogYm9vbGVhbjtcbiAgfSA9IHt9LFxuKTogR3JhcGhNZXRyaWNzIHtcbiAgY29uc3Qgbm9kZUNvdW50ID0gZ3JhcGgubm9kZXMubGVuZ3RoO1xuICBjb25zdCBlZGdlQ291bnQgPSBncmFwaC5lZGdlcy5sZW5ndGg7XG4gIGNvbnN0IG1heFBvc3NpYmxlRWRnZXMgPSAobm9kZUNvdW50ICogKG5vZGVDb3VudCAtIDEpKSAvIDI7XG4gIGNvbnN0IGRlbnNpdHkgPSBub2RlQ291bnQgPiAxID8gZWRnZUNvdW50IC8gbWF4UG9zc2libGVFZGdlcyA6IDA7XG5cbiAgLy8gQ2FsY3VsYXRlIGF2ZXJhZ2UgZGVncmVlXG4gIGNvbnN0IGRlZ3JlZXMgPSBuZXcgTWFwPHN0cmluZywgbnVtYmVyPigpO1xuICBmb3IgKGNvbnN0IGVkZ2Ugb2YgZ3JhcGguZWRnZXMpIHtcbiAgICBkZWdyZWVzLnNldChlZGdlLnNvdXJjZSwgKGRlZ3JlZXMuZ2V0KGVkZ2Uuc291cmNlKSB8fCAwKSArIDEpO1xuICAgIGRlZ3JlZXMuc2V0KGVkZ2UudGFyZ2V0LCAoZGVncmVlcy5nZXQoZWRnZS50YXJnZXQpIHx8IDApICsgMSk7XG4gIH1cbiAgY29uc3QgYXZnRGVncmVlID1cbiAgICBub2RlQ291bnQgPiAwXG4gICAgICA/IEFycmF5LmZyb20oZGVncmVlcy52YWx1ZXMoKSkucmVkdWNlKChhLCBiKSA9PiBhICsgYiwgMCkgLyBub2RlQ291bnRcbiAgICAgIDogMDtcblxuICBjb25zdCBtZXRyaWNzOiBHcmFwaE1ldHJpY3MgPSB7XG4gICAgbm9kZUNvdW50LFxuICAgIGVkZ2VDb3VudCxcbiAgICBkZW5zaXR5LFxuICAgIGF2Z0RlZ3JlZSxcbiAgICBkaWFtZXRlcjogY2FsY3VsYXRlRGlhbWV0ZXIoZ3JhcGgpLFxuICAgIGNsdXN0ZXJpbmc6IGNhbGN1bGF0ZUNsdXN0ZXJpbmcoZ3JhcGgpLFxuICAgIG1vZHVsYXJpdHk6IDAuNSwgLy8gTW9jayB2YWx1ZVxuICB9O1xuXG4gIGlmIChvcHRpb25zLmluY2x1ZGVOb2RlSW1wb3J0YW5jZSkge1xuICAgIG1ldHJpY3MuaW1wb3J0YW50Tm9kZXMgPSBBcnJheS5mcm9tKGRlZ3JlZXMuZW50cmllcygpKVxuICAgICAgLm1hcCgoW2lkLCBkZWdyZWVdKSA9PiAoeyBpZCwgc2NvcmU6IGRlZ3JlZSB9KSlcbiAgICAgIC5zb3J0KChhLCBiKSA9PiBiLnNjb3JlIC0gYS5zY29yZSlcbiAgICAgIC5zbGljZSgwLCAzKTtcbiAgfVxuXG4gIGlmIChvcHRpb25zLmRldGVjdENvbW11bml0aWVzKSB7XG4gICAgbWV0cmljcy5jb21tdW5pdGllcyA9IGRldGVjdENvbW11bml0aWVzKGdyYXBoKTtcbiAgfVxuXG4gIHJldHVybiBtZXRyaWNzO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gb3B0aW1pemVHcmFwaChcbiAgZ3JhcGg6IEtub3dsZWRnZUdyYXBoLFxuICBvcHRpb25zOiB7XG4gICAgcmVtb3ZlUmVkdW5kYW50PzogYm9vbGVhbjtcbiAgICBjb25zb2xpZGF0ZVNpbWlsYXI/OiBib29sZWFuO1xuICAgIHNpbWlsYXJpdHlUaHJlc2hvbGQ/OiBudW1iZXI7XG4gICAgcHJ1bmVUaHJlc2hvbGQ/OiBudW1iZXI7XG4gIH0gPSB7fSxcbik6IEtub3dsZWRnZUdyYXBoIHtcbiAgbGV0IG9wdGltaXplZCA9IHsgLi4uZ3JhcGggfTtcblxuICBpZiAob3B0aW9ucy5yZW1vdmVSZWR1bmRhbnQpIHtcbiAgICAvLyBSZW1vdmUgdHJhbnNpdGl2ZSBlZGdlc1xuICAgIGNvbnN0IGVkZ2VzVG9SZW1vdmUgPSBuZXcgU2V0PHN0cmluZz4oKTtcblxuICAgIGZvciAoY29uc3QgZWRnZSBvZiBncmFwaC5lZGdlcykge1xuICAgICAgaWYgKGVkZ2UudHlwZSA9PT0gXCJpbXBsaWVzXCIpIHtcbiAgICAgICAgLy8gQ2hlY2sgaWYgdGhlcmUncyBhbiBpbmRpcmVjdCBwYXRoXG4gICAgICAgIGNvbnN0IHBhdGhXaXRob3V0RWRnZSA9IGZpbmRQYXRoRXhjbHVkaW5nRWRnZShcbiAgICAgICAgICBncmFwaCxcbiAgICAgICAgICBlZGdlLnNvdXJjZSxcbiAgICAgICAgICBlZGdlLnRhcmdldCxcbiAgICAgICAgICBlZGdlLmlkLFxuICAgICAgICApO1xuXG4gICAgICAgIGlmIChwYXRoV2l0aG91dEVkZ2UgJiYgcGF0aFdpdGhvdXRFZGdlLmxlbmd0aCA8PSAzKSB7XG4gICAgICAgICAgZWRnZXNUb1JlbW92ZS5hZGQoZWRnZS5pZCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBvcHRpbWl6ZWQuZWRnZXMgPSBvcHRpbWl6ZWQuZWRnZXMuZmlsdGVyKChlKSA9PiAhZWRnZXNUb1JlbW92ZS5oYXMoZS5pZCkpO1xuICB9XG5cbiAgaWYgKG9wdGlvbnMuY29uc29saWRhdGVTaW1pbGFyKSB7XG4gICAgLy8gU2ltcGxlIGNvbnNvbGlkYXRpb24gYmFzZWQgb24gbGFiZWwgc2ltaWxhcml0eVxuICAgIGNvbnN0IHRocmVzaG9sZCA9IG9wdGlvbnMuc2ltaWxhcml0eVRocmVzaG9sZCB8fCAwLjg7XG4gICAgY29uc3Qgbm9kZUdyb3VwczogS25vd2xlZGdlTm9kZVtdW10gPSBbXTtcbiAgICBjb25zdCBwcm9jZXNzZWQgPSBuZXcgU2V0PHN0cmluZz4oKTtcblxuICAgIGZvciAoY29uc3Qgbm9kZSBvZiBncmFwaC5ub2Rlcykge1xuICAgICAgaWYgKHByb2Nlc3NlZC5oYXMobm9kZS5pZCkpIGNvbnRpbnVlO1xuXG4gICAgICBjb25zdCBncm91cCA9IFtub2RlXTtcbiAgICAgIHByb2Nlc3NlZC5hZGQobm9kZS5pZCk7XG5cbiAgICAgIGZvciAoY29uc3Qgb3RoZXIgb2YgZ3JhcGgubm9kZXMpIHtcbiAgICAgICAgaWYgKHByb2Nlc3NlZC5oYXMob3RoZXIuaWQpKSBjb250aW51ZTtcblxuICAgICAgICBjb25zdCBzaW1pbGFyaXR5ID0gY2FsY3VsYXRlU2ltaWxhcml0eShub2RlLmxhYmVsLCBvdGhlci5sYWJlbCk7XG4gICAgICAgIGlmIChzaW1pbGFyaXR5ID49IHRocmVzaG9sZCkge1xuICAgICAgICAgIGdyb3VwLnB1c2gob3RoZXIpO1xuICAgICAgICAgIHByb2Nlc3NlZC5hZGQob3RoZXIuaWQpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChncm91cC5sZW5ndGggPiAxKSB7XG4gICAgICAgIG5vZGVHcm91cHMucHVzaChncm91cCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gTWVyZ2Ugc2ltaWxhciBub2Rlc1xuICAgIGNvbnN0IG1lcmdlZE5vZGVzOiBLbm93bGVkZ2VOb2RlW10gPSBbXTtcbiAgICBjb25zdCBub2RlTWFwcGluZyA9IG5ldyBNYXA8c3RyaW5nLCBzdHJpbmc+KCk7XG5cbiAgICBmb3IgKGNvbnN0IGdyb3VwIG9mIG5vZGVHcm91cHMpIHtcbiAgICAgIGNvbnN0IG1lcmdlZCA9IGdyb3VwWzBdOyAvLyBLZWVwIGZpcnN0IGFzIHJlcHJlc2VudGF0aXZlXG4gICAgICBtZXJnZWROb2Rlcy5wdXNoKG1lcmdlZCk7XG5cbiAgICAgIGZvciAoY29uc3Qgbm9kZSBvZiBncm91cCkge1xuICAgICAgICBub2RlTWFwcGluZy5zZXQobm9kZS5pZCwgbWVyZ2VkLmlkKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBBZGQgbm9uLWdyb3VwZWQgbm9kZXNcbiAgICBmb3IgKGNvbnN0IG5vZGUgb2YgZ3JhcGgubm9kZXMpIHtcbiAgICAgIGlmICghbm9kZU1hcHBpbmcuaGFzKG5vZGUuaWQpIHx8IG5vZGVNYXBwaW5nLmdldChub2RlLmlkKSA9PT0gbm9kZS5pZCkge1xuICAgICAgICBpZiAoIW1lcmdlZE5vZGVzLnNvbWUoKG4pID0+IG4uaWQgPT09IG5vZGUuaWQpKSB7XG4gICAgICAgICAgbWVyZ2VkTm9kZXMucHVzaChub2RlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIG9wdGltaXplZC5ub2RlcyA9IG1lcmdlZE5vZGVzO1xuXG4gICAgLy8gVXBkYXRlIGVkZ2VzIHdpdGggbWVyZ2VkIG5vZGUgSURzXG4gICAgb3B0aW1pemVkLmVkZ2VzID0gb3B0aW1pemVkLmVkZ2VzXG4gICAgICAubWFwKChlZGdlKSA9PiAoe1xuICAgICAgICAuLi5lZGdlLFxuICAgICAgICBzb3VyY2U6IG5vZGVNYXBwaW5nLmdldChlZGdlLnNvdXJjZSkgfHwgZWRnZS5zb3VyY2UsXG4gICAgICAgIHRhcmdldDogbm9kZU1hcHBpbmcuZ2V0KGVkZ2UudGFyZ2V0KSB8fCBlZGdlLnRhcmdldCxcbiAgICAgIH0pKVxuICAgICAgLmZpbHRlcigoZWRnZSkgPT4gZWRnZS5zb3VyY2UgIT09IGVkZ2UudGFyZ2V0KTsgLy8gUmVtb3ZlIHNlbGYtbG9vcHNcbiAgfVxuXG4gIGlmIChvcHRpb25zLnBydW5lVGhyZXNob2xkICE9PSB1bmRlZmluZWQpIHtcbiAgICBvcHRpbWl6ZWQuZWRnZXMgPSBvcHRpbWl6ZWQuZWRnZXMuZmlsdGVyKFxuICAgICAgKGVkZ2UpID0+IChlZGdlLndlaWdodCB8fCAxKSA+PSBvcHRpb25zLnBydW5lVGhyZXNob2xkISxcbiAgICApO1xuICB9XG5cbiAgcmV0dXJuIG9wdGltaXplZDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlR3JhcGgoXG4gIGdyYXBoOiBLbm93bGVkZ2VHcmFwaCxcbiAgb3B0aW9uczogeyBhbGxvd09ycGhhbnM/OiBib29sZWFuIH0gPSB7fSxcbik6IHsgaXNWYWxpZDogYm9vbGVhbjsgZXJyb3JzOiBhbnlbXSB9IHtcbiAgY29uc3QgZXJyb3JzOiBhbnlbXSA9IFtdO1xuXG4gIC8vIENoZWNrIGZvciBvcnBoYW5lZCBub2Rlc1xuICBpZiAoIW9wdGlvbnMuYWxsb3dPcnBoYW5zKSB7XG4gICAgY29uc3QgY29ubmVjdGVkTm9kZXMgPSBuZXcgU2V0PHN0cmluZz4oKTtcblxuICAgIGZvciAoY29uc3QgZWRnZSBvZiBncmFwaC5lZGdlcykge1xuICAgICAgY29ubmVjdGVkTm9kZXMuYWRkKGVkZ2Uuc291cmNlKTtcbiAgICAgIGNvbm5lY3RlZE5vZGVzLmFkZChlZGdlLnRhcmdldCk7XG4gICAgfVxuXG4gICAgZm9yIChjb25zdCBub2RlIG9mIGdyYXBoLm5vZGVzKSB7XG4gICAgICBpZiAoIWNvbm5lY3RlZE5vZGVzLmhhcyhub2RlLmlkKSkge1xuICAgICAgICBlcnJvcnMucHVzaCh7XG4gICAgICAgICAgdHlwZTogXCJvcnBoYW5lZC1ub2RlXCIsXG4gICAgICAgICAgbm9kZUlkOiBub2RlLmlkLFxuICAgICAgICAgIG1lc3NhZ2U6IGBOb2RlICR7bm9kZS5pZH0gaGFzIG5vIGNvbm5lY3Rpb25zYCxcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy8gQ2hlY2sgZm9yIGludmFsaWQgZWRnZXNcbiAgY29uc3Qgbm9kZUlkcyA9IG5ldyBTZXQoZ3JhcGgubm9kZXMubWFwKChuKSA9PiBuLmlkKSk7XG5cbiAgZm9yIChjb25zdCBlZGdlIG9mIGdyYXBoLmVkZ2VzKSB7XG4gICAgaWYgKCFub2RlSWRzLmhhcyhlZGdlLnNvdXJjZSkpIHtcbiAgICAgIGVycm9ycy5wdXNoKHtcbiAgICAgICAgdHlwZTogXCJpbnZhbGlkLWVkZ2VcIixcbiAgICAgICAgZWRnZUlkOiBlZGdlLmlkLFxuICAgICAgICByZWFzb246IGBTb3VyY2Ugbm9kZSAke2VkZ2Uuc291cmNlfSBkb2VzIG5vdCBleGlzdGAsXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWYgKCFub2RlSWRzLmhhcyhlZGdlLnRhcmdldCkpIHtcbiAgICAgIGVycm9ycy5wdXNoKHtcbiAgICAgICAgdHlwZTogXCJpbnZhbGlkLWVkZ2VcIixcbiAgICAgICAgZWRnZUlkOiBlZGdlLmlkLFxuICAgICAgICByZWFzb246IGBUYXJnZXQgbm9kZSAke2VkZ2UudGFyZ2V0fSBkb2VzIG5vdCBleGlzdGAsXG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGlzVmFsaWQ6IGVycm9ycy5sZW5ndGggPT09IDAsXG4gICAgZXJyb3JzLFxuICB9O1xufVxuXG4vLyBIZWxwZXIgZnVuY3Rpb25zXG5mdW5jdGlvbiBjYWxjdWxhdGVEaWFtZXRlcihncmFwaDogS25vd2xlZGdlR3JhcGgpOiBudW1iZXIge1xuICBsZXQgbWF4RGlzdGFuY2UgPSAwO1xuXG4gIGZvciAoY29uc3Qgc3RhcnQgb2YgZ3JhcGgubm9kZXMpIHtcbiAgICBmb3IgKGNvbnN0IGVuZCBvZiBncmFwaC5ub2Rlcykge1xuICAgICAgaWYgKHN0YXJ0LmlkICE9PSBlbmQuaWQpIHtcbiAgICAgICAgY29uc3QgcGF0aCA9IGZpbmRQYXRoKGdyYXBoLCBzdGFydC5pZCwgZW5kLmlkKTtcbiAgICAgICAgaWYgKHBhdGgpIHtcbiAgICAgICAgICBtYXhEaXN0YW5jZSA9IE1hdGgubWF4KG1heERpc3RhbmNlLCBwYXRoLmxlbmd0aCAtIDEpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG1heERpc3RhbmNlO1xufVxuXG5mdW5jdGlvbiBjYWxjdWxhdGVDbHVzdGVyaW5nKGdyYXBoOiBLbm93bGVkZ2VHcmFwaCk6IG51bWJlciB7XG4gIC8vIFNpbXBsaWZpZWQgY2x1c3RlcmluZyBjb2VmZmljaWVudFxuICBsZXQgdG90YWxDbHVzdGVyaW5nID0gMDtcbiAgbGV0IG5vZGVDb3VudCA9IDA7XG5cbiAgZm9yIChjb25zdCBub2RlIG9mIGdyYXBoLm5vZGVzKSB7XG4gICAgY29uc3QgbmVpZ2hib3JzID0gZ3JhcGguZWRnZXNcbiAgICAgIC5maWx0ZXIoKGUpID0+IGUuc291cmNlID09PSBub2RlLmlkIHx8IGUudGFyZ2V0ID09PSBub2RlLmlkKVxuICAgICAgLm1hcCgoZSkgPT4gKGUuc291cmNlID09PSBub2RlLmlkID8gZS50YXJnZXQgOiBlLnNvdXJjZSkpO1xuXG4gICAgaWYgKG5laWdoYm9ycy5sZW5ndGggPj0gMikge1xuICAgICAgbGV0IGNvbm5lY3Rpb25zID0gMDtcblxuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBuZWlnaGJvcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgZm9yIChsZXQgaiA9IGkgKyAxOyBqIDwgbmVpZ2hib3JzLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgY29uc3QgaGFzRWRnZSA9IGdyYXBoLmVkZ2VzLnNvbWUoXG4gICAgICAgICAgICAoZSkgPT5cbiAgICAgICAgICAgICAgKGUuc291cmNlID09PSBuZWlnaGJvcnNbaV0gJiYgZS50YXJnZXQgPT09IG5laWdoYm9yc1tqXSkgfHxcbiAgICAgICAgICAgICAgKGUuc291cmNlID09PSBuZWlnaGJvcnNbal0gJiYgZS50YXJnZXQgPT09IG5laWdoYm9yc1tpXSksXG4gICAgICAgICAgKTtcbiAgICAgICAgICBpZiAoaGFzRWRnZSkgY29ubmVjdGlvbnMrKztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBjb25zdCBtYXhDb25uZWN0aW9ucyA9IChuZWlnaGJvcnMubGVuZ3RoICogKG5laWdoYm9ycy5sZW5ndGggLSAxKSkgLyAyO1xuICAgICAgdG90YWxDbHVzdGVyaW5nICs9IGNvbm5lY3Rpb25zIC8gbWF4Q29ubmVjdGlvbnM7XG4gICAgICBub2RlQ291bnQrKztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbm9kZUNvdW50ID4gMCA/IHRvdGFsQ2x1c3RlcmluZyAvIG5vZGVDb3VudCA6IDA7XG59XG5cbmZ1bmN0aW9uIGRldGVjdENvbW11bml0aWVzKGdyYXBoOiBLbm93bGVkZ2VHcmFwaCk6IHN0cmluZ1tdW10ge1xuICAvLyBTaW1wbGUgY29tbXVuaXR5IGRldGVjdGlvbiB1c2luZyBjb25uZWN0ZWQgY29tcG9uZW50c1xuICBjb25zdCB2aXNpdGVkID0gbmV3IFNldDxzdHJpbmc+KCk7XG4gIGNvbnN0IGNvbW11bml0aWVzOiBzdHJpbmdbXVtdID0gW107XG5cbiAgZnVuY3Rpb24gZGZzKG5vZGVJZDogc3RyaW5nLCBjb21tdW5pdHk6IHN0cmluZ1tdKSB7XG4gICAgaWYgKHZpc2l0ZWQuaGFzKG5vZGVJZCkpIHJldHVybjtcbiAgICB2aXNpdGVkLmFkZChub2RlSWQpO1xuICAgIGNvbW11bml0eS5wdXNoKG5vZGVJZCk7XG5cbiAgICBjb25zdCBuZWlnaGJvcnMgPSBncmFwaC5lZGdlc1xuICAgICAgLmZpbHRlcigoZSkgPT4gZS5zb3VyY2UgPT09IG5vZGVJZCB8fCBlLnRhcmdldCA9PT0gbm9kZUlkKVxuICAgICAgLm1hcCgoZSkgPT4gKGUuc291cmNlID09PSBub2RlSWQgPyBlLnRhcmdldCA6IGUuc291cmNlKSk7XG5cbiAgICBmb3IgKGNvbnN0IG5laWdoYm9yIG9mIG5laWdoYm9ycykge1xuICAgICAgZGZzKG5laWdoYm9yLCBjb21tdW5pdHkpO1xuICAgIH1cbiAgfVxuXG4gIGZvciAoY29uc3Qgbm9kZSBvZiBncmFwaC5ub2Rlcykge1xuICAgIGlmICghdmlzaXRlZC5oYXMobm9kZS5pZCkpIHtcbiAgICAgIGNvbnN0IGNvbW11bml0eTogc3RyaW5nW10gPSBbXTtcbiAgICAgIGRmcyhub2RlLmlkLCBjb21tdW5pdHkpO1xuICAgICAgY29tbXVuaXRpZXMucHVzaChjb21tdW5pdHkpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBjb21tdW5pdGllcztcbn1cblxuZnVuY3Rpb24gZmluZFBhdGhFeGNsdWRpbmdFZGdlKFxuICBncmFwaDogS25vd2xlZGdlR3JhcGgsXG4gIHN0YXJ0OiBzdHJpbmcsXG4gIGVuZDogc3RyaW5nLFxuICBleGNsdWRlRWRnZUlkOiBzdHJpbmcsXG4pOiBzdHJpbmdbXSB8IG51bGwge1xuICBjb25zdCBmaWx0ZXJlZEdyYXBoID0ge1xuICAgIC4uLmdyYXBoLFxuICAgIGVkZ2VzOiBncmFwaC5lZGdlcy5maWx0ZXIoKGUpID0+IGUuaWQgIT09IGV4Y2x1ZGVFZGdlSWQpLFxuICB9O1xuICByZXR1cm4gZmluZFBhdGgoZmlsdGVyZWRHcmFwaCwgc3RhcnQsIGVuZCk7XG59XG5cbmZ1bmN0aW9uIGNhbGN1bGF0ZVNpbWlsYXJpdHkobGFiZWwxOiBzdHJpbmcsIGxhYmVsMjogc3RyaW5nKTogbnVtYmVyIHtcbiAgLy8gU2ltcGxlIGNhc2UtaW5zZW5zaXRpdmUgY29tcGFyaXNvblxuICBjb25zdCBub3JtYWxpemVkMSA9IGxhYmVsMS50b0xvd2VyQ2FzZSgpLnRyaW0oKTtcbiAgY29uc3Qgbm9ybWFsaXplZDIgPSBsYWJlbDIudG9Mb3dlckNhc2UoKS50cmltKCk7XG5cbiAgaWYgKG5vcm1hbGl6ZWQxID09PSBub3JtYWxpemVkMikgcmV0dXJuIDE7XG5cbiAgLy8gQ2hlY2sgZm9yIGNvbW1vbiBhYmJyZXZpYXRpb25zXG4gIGNvbnN0IGFiYnJldmlhdGlvbnM6IFJlY29yZDxzdHJpbmcsIHN0cmluZz4gPSB7XG4gICAgbWw6IFwibWFjaGluZSBsZWFybmluZ1wiLFxuICAgIGFpOiBcImFydGlmaWNpYWwgaW50ZWxsaWdlbmNlXCIsXG4gICAgZGw6IFwiZGVlcCBsZWFybmluZ1wiLFxuICB9O1xuXG4gIGNvbnN0IGV4cGFuZGVkMSA9IGFiYnJldmlhdGlvbnNbbm9ybWFsaXplZDFdIHx8IG5vcm1hbGl6ZWQxO1xuICBjb25zdCBleHBhbmRlZDIgPSBhYmJyZXZpYXRpb25zW25vcm1hbGl6ZWQyXSB8fCBub3JtYWxpemVkMjtcblxuICBpZiAoZXhwYW5kZWQxID09PSBleHBhbmRlZDIpIHJldHVybiAwLjk7XG4gIGlmIChleHBhbmRlZDEuaW5jbHVkZXMoZXhwYW5kZWQyKSB8fCBleHBhbmRlZDIuaW5jbHVkZXMoZXhwYW5kZWQxKSlcbiAgICByZXR1cm4gMC44O1xuXG4gIHJldHVybiAwO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTs7O0dBR0M7O0FBQUE7QUFBQSxTQUFBQSxlQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VBQUEsSUFBQUMsWUFBQTtJQUFBTCxJQUFBO0lBQUFNLFlBQUE7TUFBQTtRQUFBQyxLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO0lBQUE7SUFBQUUsS0FBQTtNQUFBO1FBQUFDLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtJQUFBO0lBQUFPLFNBQUE7TUFBQTtRQUFBRCxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtJQUFBO0lBQUFXLENBQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO0lBQUE7SUFBQUMsQ0FBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO0lBQUE7SUFBQUMsQ0FBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxjQUFBO01BQUFDLE9BQUE7TUFBQUMsT0FBQTtNQUFBQyxjQUFBO01BQUFDLEtBQUE7TUFBQUMsUUFBQTtJQUFBO0lBQUFDLGVBQUE7SUFBQTNCLElBQUE7RUFBQTtFQUFBLElBQUE0QixRQUFBLEdBQUEzQixNQUFBLENBQUFFLEdBQUEsTUFBQUYsTUFBQSxDQUFBRSxHQUFBO0VBQUEsS0FBQXlC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
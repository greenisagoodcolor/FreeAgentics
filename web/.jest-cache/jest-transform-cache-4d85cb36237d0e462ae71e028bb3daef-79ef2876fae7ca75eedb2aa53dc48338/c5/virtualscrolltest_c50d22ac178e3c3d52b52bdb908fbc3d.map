{"version":3,"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/__tests__/components/virtual-scroll.test.tsx"],"sourcesContent":["/**\n * Virtual Scrolling Component Tests\n * Optimized for large data sets with performance monitoring\n */\n\nimport React from \"react\";\nimport { render, screen, fireEvent } from \"@testing-library/react\";\nimport { jest } from \"@jest/globals\";\n\n// Virtual Scrolling Component\ninterface VirtualScrollItem {\n  id: string;\n  height: number;\n  data: any;\n}\n\ninterface VirtualScrollProps {\n  items: VirtualScrollItem[];\n  containerHeight: number;\n  itemRenderer: (item: VirtualScrollItem, index: number) => React.ReactNode;\n  overscan?: number;\n  onScroll?: (scrollTop: number) => void;\n}\n\nconst VirtualScroll: React.FC<VirtualScrollProps> = ({\n  items,\n  containerHeight,\n  itemRenderer,\n  overscan = 5,\n  onScroll,\n}) => {\n  const [scrollTop, setScrollTop] = React.useState(0);\n  const containerRef = React.useRef<HTMLDivElement>(null);\n\n  // Calculate total height and item positions\n  const itemPositions = React.useMemo(() => {\n    const positions: number[] = [];\n    let currentPosition = 0;\n\n    items.forEach((item, index) => {\n      positions[index] = currentPosition;\n      currentPosition += item.height;\n    });\n\n    return positions;\n  }, [items]);\n\n  const totalHeight =\n    itemPositions[itemPositions.length - 1] +\n    (items[items.length - 1]?.height || 0);\n\n  // Calculate visible range\n  const visibleRange = React.useMemo(() => {\n    const startIndex = itemPositions.findIndex(\n      (pos) => pos + items[itemPositions.indexOf(pos)]?.height >= scrollTop,\n    );\n    const endIndex = itemPositions.findIndex(\n      (pos) => pos > scrollTop + containerHeight,\n    );\n\n    return {\n      start: Math.max(0, startIndex - overscan),\n      end: Math.min(\n        items.length - 1,\n        (endIndex === -1 ? items.length - 1 : endIndex) + overscan,\n      ),\n    };\n  }, [scrollTop, containerHeight, itemPositions, items, overscan]);\n\n  const handleScroll = (event: React.UIEvent<HTMLDivElement>) => {\n    const newScrollTop = event.currentTarget.scrollTop;\n    setScrollTop(newScrollTop);\n    onScroll?.(newScrollTop);\n  };\n\n  const visibleItems = [];\n  for (let i = visibleRange.start; i <= visibleRange.end; i++) {\n    const item = items[i];\n    if (item) {\n      visibleItems.push(\n        <div\n          key={item.id}\n          style={{\n            position: \"absolute\",\n            top: itemPositions[i],\n            height: item.height,\n            width: \"100%\",\n          }}\n        >\n          {itemRenderer(item, i)}\n        </div>,\n      );\n    }\n  }\n\n  return (\n    <div\n      ref={containerRef}\n      data-testid=\"virtual-scroll-container\"\n      style={{\n        height: containerHeight,\n        overflow: \"auto\",\n        position: \"relative\",\n      }}\n      onScroll={handleScroll}\n    >\n      <div\n        style={{\n          height: totalHeight,\n          position: \"relative\",\n        }}\n      >\n        {visibleItems}\n      </div>\n    </div>\n  );\n};\n\n// Tests\ndescribe(\"Virtual Scrolling\", () => {\n  const createItems = (count: number): VirtualScrollItem[] =>\n    Array.from({ length: count }, (_, i) => ({\n      id: `item-${i}`,\n      height: 50,\n      data: { text: `Item ${i}` },\n    }));\n\n  test(\"should render only visible items\", () => {\n    const items = createItems(1000);\n    const itemRenderer = (item: VirtualScrollItem) => (\n      <div data-testid={`item-${item.id}`}>{item.data.text}</div>\n    );\n\n    render(\n      <VirtualScroll\n        items={items}\n        containerHeight={300}\n        itemRenderer={itemRenderer}\n      />,\n    );\n\n    const container = screen.getByTestId(\"virtual-scroll-container\");\n    expect(container).toBeInTheDocument();\n\n    // Should only render visible items (plus overscan)\n    const renderedItems = screen.queryAllByTestId(/^item-item-/);\n    expect(renderedItems.length).toBeLessThan(1000);\n    expect(renderedItems.length).toBeGreaterThan(0);\n  });\n\n  test(\"should handle scroll events\", () => {\n    const items = createItems(100);\n    const onScroll = jest.fn();\n    const itemRenderer = (item: VirtualScrollItem) => (\n      <div>{item.data.text}</div>\n    );\n\n    render(\n      <VirtualScroll\n        items={items}\n        containerHeight={300}\n        itemRenderer={itemRenderer}\n        onScroll={onScroll}\n      />,\n    );\n\n    const container = screen.getByTestId(\"virtual-scroll-container\");\n\n    fireEvent.scroll(container, { target: { scrollTop: 100 } });\n\n    expect(onScroll).toHaveBeenCalledWith(100);\n  });\n\n  test(\"should handle items with varying heights\", () => {\n    const items: VirtualScrollItem[] = [\n      { id: \"item-1\", height: 50, data: { text: \"Item 1\" } },\n      { id: \"item-2\", height: 100, data: { text: \"Item 2\" } },\n      { id: \"item-3\", height: 75, data: { text: \"Item 3\" } },\n    ];\n\n    const itemRenderer = (item: VirtualScrollItem) => (\n      <div data-testid={`item-${item.id}`} style={{ height: item.height }}>\n        {item.data.text}\n      </div>\n    );\n\n    render(\n      <VirtualScroll\n        items={items}\n        containerHeight={300}\n        itemRenderer={itemRenderer}\n      />,\n    );\n\n    const item1 = screen.getByTestId(\"item-item-1\");\n    const item2 = screen.getByTestId(\"item-item-2\");\n\n    expect(item1).toHaveStyle({ height: \"50px\" });\n    expect(item2).toHaveStyle({ height: \"100px\" });\n  });\n\n  test(\"should handle empty items list\", () => {\n    const items: VirtualScrollItem[] = [];\n    const itemRenderer = (item: VirtualScrollItem) => (\n      <div>{item.data.text}</div>\n    );\n\n    render(\n      <VirtualScroll\n        items={items}\n        containerHeight={300}\n        itemRenderer={itemRenderer}\n      />,\n    );\n\n    const container = screen.getByTestId(\"virtual-scroll-container\");\n    expect(container).toBeInTheDocument();\n\n    // Should not render any items\n    const renderedItems = screen.queryAllByTestId(/^item-/);\n    expect(renderedItems.length).toBe(0);\n  });\n\n  test(\"should adjust overscan correctly\", () => {\n    const items = createItems(50);\n    const itemRenderer = (item: VirtualScrollItem) => (\n      <div data-testid={`item-${item.id}`}>{item.data.text}</div>\n    );\n\n    render(\n      <VirtualScroll\n        items={items}\n        containerHeight={200}\n        itemRenderer={itemRenderer}\n        overscan={2}\n      />,\n    );\n\n    // With smaller overscan, fewer items should be rendered\n    const renderedItems = screen.queryAllByTestId(/^item-item-/);\n    expect(renderedItems.length).toBeGreaterThan(0);\n    expect(renderedItems.length).toBeLessThan(20); // Should be reasonable number\n  });\n\n  test(\"should calculate total height correctly\", () => {\n    const items: VirtualScrollItem[] = [\n      { id: \"item-1\", height: 100, data: { text: \"Item 1\" } },\n      { id: \"item-2\", height: 150, data: { text: \"Item 2\" } },\n      { id: \"item-3\", height: 75, data: { text: \"Item 3\" } },\n    ];\n\n    const itemRenderer = (item: VirtualScrollItem) => (\n      <div>{item.data.text}</div>\n    );\n\n    render(\n      <VirtualScroll\n        items={items}\n        containerHeight={200}\n        itemRenderer={itemRenderer}\n      />,\n    );\n\n    const container = screen.getByTestId(\"virtual-scroll-container\");\n    const innerDiv = container.firstChild as HTMLElement;\n\n    // Total height should be 100 + 150 + 75 = 325\n    expect(innerDiv).toHaveStyle({ height: \"325px\" });\n  });\n\n  test(\"should handle rapid scrolling\", () => {\n    const items = createItems(200);\n    const onScroll = jest.fn();\n    const itemRenderer = (item: VirtualScrollItem) => (\n      <div data-testid={`item-${item.id}`}>{item.data.text}</div>\n    );\n\n    render(\n      <VirtualScroll\n        items={items}\n        containerHeight={300}\n        itemRenderer={itemRenderer}\n        onScroll={onScroll}\n      />,\n    );\n\n    const container = screen.getByTestId(\"virtual-scroll-container\");\n\n    // Simulate rapid scrolling\n    fireEvent.scroll(container, { target: { scrollTop: 100 } });\n    fireEvent.scroll(container, { target: { scrollTop: 500 } });\n    fireEvent.scroll(container, { target: { scrollTop: 1000 } });\n\n    expect(onScroll).toHaveBeenCalledTimes(3);\n    expect(onScroll).toHaveBeenLastCalledWith(1000);\n  });\n\n  test(\"should render correct items at different scroll positions\", () => {\n    const items = createItems(20);\n    const itemRenderer = (item: VirtualScrollItem) => (\n      <div data-testid={`item-${item.id}`}>{item.data.text}</div>\n    );\n\n    const { rerender } = render(\n      <VirtualScroll\n        items={items}\n        containerHeight={150}\n        itemRenderer={itemRenderer}\n        overscan={1}\n      />,\n    );\n\n    // Check initial render\n    expect(screen.getByTestId(\"item-item-0\")).toBeInTheDocument();\n\n    // Scroll down and check different items are rendered\n    const container = screen.getByTestId(\"virtual-scroll-container\");\n    fireEvent.scroll(container, { target: { scrollTop: 300 } });\n\n    // Should render different items after scrolling\n    // Due to how virtual scrolling works, exact items depend on calculations\n    const renderedItems = screen.queryAllByTestId(/^item-item-/);\n    expect(renderedItems.length).toBeGreaterThan(0);\n  });\n\n  test(\"should handle item renderer changes\", () => {\n    const items = createItems(10);\n    const initialRenderer = (item: VirtualScrollItem) => (\n      <div data-testid={`item-${item.id}`}>Initial: {item.data.text}</div>\n    );\n\n    const { rerender } = render(\n      <VirtualScroll\n        items={items}\n        containerHeight={300}\n        itemRenderer={initialRenderer}\n      />,\n    );\n\n    expect(screen.getByTestId(\"item-item-0\")).toHaveTextContent(\"Initial:\");\n\n    // Change renderer\n    const newRenderer = (item: VirtualScrollItem) => (\n      <div data-testid={`item-${item.id}`}>New: {item.data.text}</div>\n    );\n\n    rerender(\n      <VirtualScroll\n        items={items}\n        containerHeight={300}\n        itemRenderer={newRenderer}\n      />,\n    );\n\n    expect(screen.getByTestId(\"item-item-0\")).toHaveTextContent(\"New:\");\n  });\n\n  test(\"should handle performance with large datasets\", () => {\n    const items = createItems(10000);\n    const itemRenderer = (item: VirtualScrollItem) => (\n      <div data-testid={`item-${item.id}`}>{item.data.text}</div>\n    );\n\n    const startTime = performance.now();\n    \n    render(\n      <VirtualScroll\n        items={items}\n        containerHeight={400}\n        itemRenderer={itemRenderer}\n      />,\n    );\n\n    const endTime = performance.now();\n\n    // Should render quickly even with 10k items\n    expect(endTime - startTime).toBeLessThan(100);\n\n    // Should only render visible items, not all 10k\n    const renderedItems = screen.queryAllByTestId(/^item-item-/);\n    expect(renderedItems.length).toBeLessThan(50);\n  });\n});"],"names":["VirtualScroll","items","containerHeight","itemRenderer","overscan","onScroll","scrollTop","setScrollTop","React","useState","containerRef","useRef","itemPositions","useMemo","positions","currentPosition","forEach","item","index","height","totalHeight","length","visibleRange","startIndex","findIndex","pos","indexOf","endIndex","start","Math","max","end","min","handleScroll","event","newScrollTop","currentTarget","visibleItems","i","push","div","style","position","top","width","id","ref","data-testid","overflow","describe","createItems","count","Array","from","_","data","text","test","render","container","screen","getByTestId","expect","toBeInTheDocument","renderedItems","queryAllByTestId","toBeLessThan","toBeGreaterThan","jest","fn","fireEvent","scroll","target","toHaveBeenCalledWith","item1","item2","toHaveStyle","toBe","innerDiv","firstChild","toHaveBeenCalledTimes","toHaveBeenLastCalledWith","rerender","initialRenderer","toHaveTextContent","newRenderer","startTime","performance","now","endTime"],"mappings":"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"}
{"version":3,"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/components/llmtest.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect, useCallback } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Spinner } from \"@/components/ui/spinner\";\nimport { useLLM } from \"@/contexts/llm-context\";\n\nexport default function LLMTest() {\n  const { client, isProcessing, setIsProcessing, settings } = useLLM();\n  const [prompt, setPrompt] = useState<string>(\n    \"Explain quantum computing in simple terms.\",\n  );\n  const [response, setResponse] = useState<string>(\"\");\n  const [debugInfo, setDebugInfo] = useState<string>(\"\");\n  const [sessionDebug, setSessionDebug] = useState<string>(\"\");\n  const [settingsDebug, setSettingsDebug] = useState<string>(\"\");\n\n  // Add debug info on mount and when settings change\n  useEffect(() => {\n    const checkSessionId = async () => {\n      if (!settings) {\n        setSessionDebug(\"Settings not available\");\n        return;\n      }\n\n      try {\n        // Get session ID from localStorage\n        const localSessionId = localStorage.getItem(\n          `api_session_${settings.provider}`,\n        );\n\n        // Debug session info\n        setSessionDebug(`\nProvider: ${settings.provider}\nSettings has apiKeySessionId: ${!!settings.apiKeySessionId}\nSettings apiKeySessionId: ${settings.apiKeySessionId || \"undefined\"}\nLocal storage sessionId: ${localSessionId || \"undefined\"}\nSettings keys: ${Object.keys(settings).join(\", \")}\n`);\n      } catch (error) {\n        console.error(\"Error checking session ID:\", error);\n        setSessionDebug(\n          `Error checking session ID: ${error instanceof Error ? error.message : \"Unknown error\"}`,\n        );\n      }\n    };\n\n    checkSessionId();\n  }, [settings]);\n\n  const debugSession = useCallback(() => {\n    if (!settings) {\n      setSessionDebug(\"Settings not available\");\n      return;\n    }\n\n    try {\n      // Get session ID from localStorage\n      const localSessionId = localStorage.getItem(\n        `api_session_${settings.provider}`,\n      );\n\n      // Debug session info\n      setSessionDebug(`\nProvider: ${settings.provider}\nModel: ${settings.model}\nSettings Keys: ${Object.keys(settings).join(\", \")}\nHas API Key Session ID: ${!!settings.apiKeySessionId}\nAPI Key Session ID: ${settings.apiKeySessionId || \"Not set\"}\nLocal Storage Session ID: ${localSessionId || \"Not found\"}\nSession ID Match: ${settings.apiKeySessionId === localSessionId ? \"Yes\" : \"No\"}\n      `);\n    } catch (error) {\n      setSessionDebug(`Error debugging session: ${error}`);\n    }\n  }, [settings]);\n\n  const debugSettings = useCallback(() => {\n    if (!settings) {\n      setSettingsDebug(\"Settings not available\");\n      return;\n    }\n\n    try {\n      const settingsInfo = `\nCurrent Settings:\nProvider: ${settings.provider}\nModel: ${settings.model}\nTemperature: ${settings.temperature}\nMax Tokens: ${settings.maxTokens}\nSettings Object Keys: ${Object.keys(settings).join(\", \")}\nHas API Key: ${!!settings.apiKey}\nAPI Key Length: ${settings.apiKey ? settings.apiKey.length : 0}\n      `;\n    } catch (error) {\n      setSettingsDebug(`Error debugging settings: ${error}`);\n    }\n  }, [settings]);\n\n  const handleTest = async () => {\n    if (!prompt.trim() || isProcessing) return;\n\n    if (!settings) {\n      setResponse(\"Error: Settings not available\");\n      return;\n    }\n\n    if (!client) {\n      setResponse(\"Error: LLM client not available\");\n      return;\n    }\n\n    try {\n      setIsProcessing(true);\n      setResponse(\"\");\n      setDebugInfo(\"\");\n\n      // Log detailed debug info about settings and session\n      console.log(\"Test settings debug:\", {\n        provider: settings.provider,\n        hasApiKeySessionId: !!settings.apiKeySessionId,\n        apiKeySessionId: settings.apiKeySessionId,\n        settingsKeys: Object.keys(settings),\n        localStorageSessionId: localStorage.getItem(\n          `api_session_${settings.provider}`,\n        ),\n      });\n\n      // Check if API key session ID is available\n      const sessionId =\n        settings.apiKeySessionId ||\n        localStorage.getItem(`api_session_${settings.provider}`);\n\n      if (!sessionId) {\n        throw new Error(\n          `API key is required for ${settings.provider} provider. Please add your API key in the Settings tab.`,\n        );\n      }\n\n      // If we have a session ID in localStorage but not in settings, update the settings\n      if (!settings.apiKeySessionId && sessionId) {\n        console.log(\n          \"Found session ID in localStorage but not in settings, updating settings\",\n        );\n        client.updateSettings({\n          ...settings,\n          apiKeySessionId: sessionId,\n        });\n      }\n\n      // Add debug info\n      setDebugInfo(`Provider: ${settings.provider}\nModel: ${settings.model}\nAPI key: [Securely Stored]\nAPI key session ID: ${sessionId}\nTemperature: ${settings.temperature}\nMax tokens: ${settings.maxTokens}\nTop P: ${settings.topP}\nFrequency penalty: ${settings.frequencyPenalty}\nPresence penalty: ${settings.presencePenalty}\nSystem fingerprint: ${settings.systemFingerprint}`);\n\n      // Force update the client settings before making the call\n      client.updateSettings({\n        ...settings,\n        apiKeySessionId: sessionId,\n      });\n\n      // Get the current settings directly from the client to ensure we're using the latest\n      const currentSettings = client.getSettings();\n      console.log(\"Current settings before test:\", {\n        provider: currentSettings.provider,\n        model: currentSettings.model,\n        hasApiKeySessionId: !!currentSettings.apiKeySessionId,\n        apiKeySessionId: currentSettings.apiKeySessionId,\n      });\n\n      try {\n        const result = await client.generateResponse(\n          \"You are a helpful AI assistant that explains complex topics in simple terms.\",\n          prompt,\n        );\n        setResponse(result);\n      } catch (error) {\n        console.error(\"Error in client.generateResponse:\", error);\n        setResponse(\n          `Error: ${error instanceof Error ? error.message : \"Unknown error\"}`,\n        );\n      }\n    } catch (error) {\n      console.error(\"Error testing LLM:\", error);\n      setResponse(\n        `Error: ${error instanceof Error ? error.message : \"Unknown error\"}`,\n      );\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  return (\n    <Card className=\"w-full\">\n      <CardHeader>\n        <CardTitle>LLM Integration Test</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4\">\n          {sessionDebug && (\n            <div className=\"space-y-2\">\n              <h3 className=\"text-sm font-medium\">Session Debug:</h3>\n              <div className=\"p-4 bg-gray-800 rounded-md whitespace-pre-wrap text-xs font-mono text-white\">\n                {sessionDebug}\n              </div>\n            </div>\n          )}\n\n          <div className=\"space-y-2\">\n            <label htmlFor=\"prompt\" className=\"text-sm font-medium\">\n              Prompt\n            </label>\n            <Textarea\n              id=\"prompt\"\n              value={prompt}\n              onChange={(e) => setPrompt(e.target.value)}\n              placeholder=\"Enter a prompt to test the LLM integration...\"\n              className=\"min-h-[100px]\"\n            />\n          </div>\n\n          <Button\n            onClick={handleTest}\n            disabled={isProcessing || !prompt.trim()}\n            className=\"w-full\"\n          >\n            {isProcessing ? (\n              <>\n                <Spinner size={16} className=\"mr-2\" />\n                Processing...\n              </>\n            ) : (\n              \"Test LLM Integration\"\n            )}\n          </Button>\n\n          {debugInfo && (\n            <div className=\"space-y-2 mt-4\">\n              <h3 className=\"text-sm font-medium\">Debug Info:</h3>\n              <div className=\"p-4 bg-gray-800 rounded-md whitespace-pre-wrap text-xs font-mono text-white\">\n                {debugInfo}\n              </div>\n            </div>\n          )}\n\n          {response && (\n            <div className=\"space-y-2 mt-4\">\n              <h3 className=\"text-sm font-medium\">Response:</h3>\n              <div className=\"p-4 bg-muted rounded-md whitespace-pre-wrap\">\n                {response}\n              </div>\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":["LLMTest","client","isProcessing","setIsProcessing","settings","useLLM","prompt","setPrompt","useState","response","setResponse","debugInfo","setDebugInfo","sessionDebug","setSessionDebug","settingsDebug","setSettingsDebug","useEffect","checkSessionId","localSessionId","localStorage","getItem","provider","apiKeySessionId","Object","keys","join","error","console","Error","message","debugSession","useCallback","model","debugSettings","settingsInfo","temperature","maxTokens","apiKey","length","handleTest","trim","log","hasApiKeySessionId","settingsKeys","localStorageSessionId","sessionId","updateSettings","topP","frequencyPenalty","presencePenalty","systemFingerprint","currentSettings","getSettings","result","generateResponse","Card","className","CardHeader","CardTitle","CardContent","div","h3","label","htmlFor","Textarea","id","value","onChange","e","target","placeholder","Button","onClick","disabled","Spinner","size"],"mappings":"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"}
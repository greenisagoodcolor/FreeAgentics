ffb48f6b8faed35a5aefe68f34ca44f3
"use client";
"use strict";

/* istanbul ignore next */
function cov_1rgr27b886() {
  var path = "/Users/matthewmoroney/builds/FreeAgentics/web/components/memoryviewer.tsx";
  var hash = "00bb2fc19df9133060de77fecd0b2cbb79c1345d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewmoroney/builds/FreeAgentics/web/components/memoryviewer.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 28
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "5": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 14,
          column: 38
        }
      },
      "6": {
        start: {
          line: 15,
          column: 18
        },
        end: {
          line: 15,
          column: 42
        }
      },
      "7": {
        start: {
          line: 16,
          column: 14
        },
        end: {
          line: 16,
          column: 34
        }
      },
      "8": {
        start: {
          line: 17,
          column: 21
        },
        end: {
          line: 17,
          column: 44
        }
      },
      "9": {
        start: {
          line: 18,
          column: 16
        },
        end: {
          line: 18,
          column: 38
        }
      },
      "10": {
        start: {
          line: 19,
          column: 20
        },
        end: {
          line: 19,
          column: 47
        }
      },
      "11": {
        start: {
          line: 20,
          column: 15
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "12": {
        start: {
          line: 21,
          column: 18
        },
        end: {
          line: 21,
          column: 47
        }
      },
      "13": {
        start: {
          line: 22,
          column: 15
        },
        end: {
          line: 22,
          column: 36
        }
      },
      "14": {
        start: {
          line: 23,
          column: 15
        },
        end: {
          line: 23,
          column: 36
        }
      },
      "15": {
        start: {
          line: 24,
          column: 20
        },
        end: {
          line: 24,
          column: 54
        }
      },
      "16": {
        start: {
          line: 25,
          column: 26
        },
        end: {
          line: 25,
          column: 61
        }
      },
      "17": {
        start: {
          line: 26,
          column: 25
        },
        end: {
          line: 26,
          column: 59
        }
      },
      "18": {
        start: {
          line: 27,
          column: 21
        },
        end: {
          line: 27,
          column: 51
        }
      },
      "19": {
        start: {
          line: 28,
          column: 15
        },
        end: {
          line: 28,
          column: 62
        }
      },
      "20": {
        start: {
          line: 30,
          column: 31
        },
        end: {
          line: 57,
          column: 1
        }
      },
      "21": {
        start: {
          line: 59,
          column: 38
        },
        end: {
          line: 59,
          column: 62
        }
      },
      "22": {
        start: {
          line: 60,
          column: 44
        },
        end: {
          line: 60,
          column: 77
        }
      },
      "23": {
        start: {
          line: 61,
          column: 22
        },
        end: {
          line: 61,
          column: 47
        }
      },
      "24": {
        start: {
          line: 63,
          column: 23
        },
        end: {
          line: 63,
          column: 48
        }
      },
      "25": {
        start: {
          line: 64,
          column: 46
        },
        end: {
          line: 64,
          column: 56
        }
      },
      "26": {
        start: {
          line: 66,
          column: 44
        },
        end: {
          line: 66,
          column: 74
        }
      },
      "27": {
        start: {
          line: 67,
          column: 54
        },
        end: {
          line: 67,
          column: 78
        }
      },
      "28": {
        start: {
          line: 68,
          column: 58
        },
        end: {
          line: 68,
          column: 82
        }
      },
      "29": {
        start: {
          line: 69,
          column: 54
        },
        end: {
          line: 69,
          column: 80
        }
      },
      "30": {
        start: {
          line: 70,
          column: 52
        },
        end: {
          line: 70,
          column: 79
        }
      },
      "31": {
        start: {
          line: 71,
          column: 46
        },
        end: {
          line: 71,
          column: 255
        }
      },
      "32": {
        start: {
          line: 72,
          column: 64
        },
        end: {
          line: 72,
          column: 88
        }
      },
      "33": {
        start: {
          line: 73,
          column: 60
        },
        end: {
          line: 73,
          column: 84
        }
      },
      "34": {
        start: {
          line: 75,
          column: 42
        },
        end: {
          line: 75,
          column: 66
        }
      },
      "35": {
        start: {
          line: 76,
          column: 42
        },
        end: {
          line: 76,
          column: 74
        }
      },
      "36": {
        start: {
          line: 77,
          column: 32
        },
        end: {
          line: 77,
          column: 62
        }
      },
      "37": {
        start: {
          line: 79,
          column: 56
        },
        end: {
          line: 79,
          column: 83
        }
      },
      "38": {
        start: {
          line: 80,
          column: 54
        },
        end: {
          line: 80,
          column: 80
        }
      },
      "39": {
        start: {
          line: 82,
          column: 44
        },
        end: {
          line: 82,
          column: 68
        }
      },
      "40": {
        start: {
          line: 83,
          column: 52
        },
        end: {
          line: 83,
          column: 83
        }
      },
      "41": {
        start: {
          line: 85,
          column: 52
        },
        end: {
          line: 85,
          column: 76
        }
      },
      "42": {
        start: {
          line: 86,
          column: 40
        },
        end: {
          line: 86,
          column: 64
        }
      },
      "43": {
        start: {
          line: 87,
          column: 58
        },
        end: {
          line: 87,
          column: 85
        }
      },
      "44": {
        start: {
          line: 88,
          column: 64
        },
        end: {
          line: 88,
          column: 90
        }
      },
      "45": {
        start: {
          line: 89,
          column: 48
        },
        end: {
          line: 89,
          column: 76
        }
      },
      "46": {
        start: {
          line: 90,
          column: 56
        },
        end: {
          line: 90,
          column: 79
        }
      },
      "47": {
        start: {
          line: 91,
          column: 44
        },
        end: {
          line: 91,
          column: 74
        }
      },
      "48": {
        start: {
          line: 93,
          column: 50
        },
        end: {
          line: 93,
          column: 94
        }
      },
      "49": {
        start: {
          line: 94,
          column: 46
        },
        end: {
          line: 94,
          column: 73
        }
      },
      "50": {
        start: {
          line: 95,
          column: 48
        },
        end: {
          line: 95,
          column: 75
        }
      },
      "51": {
        start: {
          line: 97,
          column: 41
        },
        end: {
          line: 97,
          column: 65
        }
      },
      "52": {
        start: {
          line: 98,
          column: 31
        },
        end: {
          line: 98,
          column: 55
        }
      },
      "53": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 120,
          column: 7
        }
      },
      "54": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "55": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 50
        }
      },
      "56": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 107,
          column: 13
        }
      },
      "57": {
        start: {
          line: 106,
          column: 16
        },
        end: {
          line: 106,
          column: 43
        }
      },
      "58": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 39
        }
      },
      "59": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 31
        }
      },
      "60": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 39
        }
      },
      "61": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 88
        }
      },
      "62": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 37
        }
      },
      "63": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 58
        }
      },
      "64": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 141,
          column: 7
        }
      },
      "65": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "66": {
        start: {
          line: 126,
          column: 34
        },
        end: {
          line: 126,
          column: 126
        }
      },
      "67": {
        start: {
          line: 126,
          column: 72
        },
        end: {
          line: 126,
          column: 125
        }
      },
      "68": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 135,
          column: 13
        }
      },
      "69": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 129,
          column: 52
        }
      },
      "70": {
        start: {
          line: 130,
          column: 19
        },
        end: {
          line: 135,
          column: 13
        }
      },
      "71": {
        start: {
          line: 131,
          column: 37
        },
        end: {
          line: 131,
          column: 135
        }
      },
      "72": {
        start: {
          line: 131,
          column: 75
        },
        end: {
          line: 131,
          column: 134
        }
      },
      "73": {
        start: {
          line: 132,
          column: 16
        },
        end: {
          line: 134,
          column: 17
        }
      },
      "74": {
        start: {
          line: 133,
          column: 20
        },
        end: {
          line: 133,
          column: 55
        }
      },
      "75": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 56
        }
      },
      "76": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 150,
          column: 7
        }
      },
      "77": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 147,
          column: 9
        }
      },
      "78": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 65
        }
      },
      "79": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 61
        }
      },
      "80": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 158,
          column: 7
        }
      },
      "81": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 155,
          column: 9
        }
      },
      "82": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 46
        }
      },
      "83": {
        start: {
          line: 160,
          column: 23
        },
        end: {
          line: 169,
          column: 6
        }
      },
      "84": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 38
        }
      },
      "85": {
        start: {
          line: 161,
          column: 28
        },
        end: {
          line: 161,
          column: 38
        }
      },
      "86": {
        start: {
          line: 162,
          column: 21
        },
        end: {
          line: 162,
          column: 30
        }
      },
      "87": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 165,
          column: 11
        }
      },
      "88": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 53
        }
      },
      "89": {
        start: {
          line: 164,
          column: 38
        },
        end: {
          line: 164,
          column: 51
        }
      },
      "90": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 166,
          column: 39
        }
      },
      "91": {
        start: {
          line: 171,
          column: 30
        },
        end: {
          line: 203,
          column: 6
        }
      },
      "92": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 38
        }
      },
      "93": {
        start: {
          line: 172,
          column: 28
        },
        end: {
          line: 172,
          column: 38
        }
      },
      "94": {
        start: {
          line: 173,
          column: 23
        },
        end: {
          line: 175,
          column: 9
        }
      },
      "95": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 180,
          column: 9
        }
      },
      "96": {
        start: {
          line: 178,
          column: 26
        },
        end: {
          line: 178,
          column: 51
        }
      },
      "97": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 179,
          column: 138
        }
      },
      "98": {
        start: {
          line: 179,
          column: 48
        },
        end: {
          line: 179,
          column: 136
        }
      },
      "99": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 184,
          column: 9
        }
      },
      "100": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 183,
          column: 82
        }
      },
      "101": {
        start: {
          line: 183,
          column: 48
        },
        end: {
          line: 183,
          column: 80
        }
      },
      "102": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 196,
          column: 9
        }
      },
      "103": {
        start: {
          line: 188,
          column: 16
        },
        end: {
          line: 188,
          column: 85
        }
      },
      "104": {
        start: {
          line: 188,
          column: 38
        },
        end: {
          line: 188,
          column: 83
        }
      },
      "105": {
        start: {
          line: 189,
          column: 16
        },
        end: {
          line: 189,
          column: 22
        }
      },
      "106": {
        start: {
          line: 191,
          column: 16
        },
        end: {
          line: 191,
          column: 85
        }
      },
      "107": {
        start: {
          line: 191,
          column: 38
        },
        end: {
          line: 191,
          column: 83
        }
      },
      "108": {
        start: {
          line: 192,
          column: 16
        },
        end: {
          line: 192,
          column: 22
        }
      },
      "109": {
        start: {
          line: 194,
          column: 16
        },
        end: {
          line: 194,
          column: 70
        }
      },
      "110": {
        start: {
          line: 194,
          column: 38
        },
        end: {
          line: 194,
          column: 68
        }
      },
      "111": {
        start: {
          line: 195,
          column: 16
        },
        end: {
          line: 195,
          column: 22
        }
      },
      "112": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 197,
          column: 24
        }
      },
      "113": {
        start: {
          line: 205,
          column: 34
        },
        end: {
          line: 211,
          column: 6
        }
      },
      "114": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 206,
          column: 38
        }
      },
      "115": {
        start: {
          line: 206,
          column: 28
        },
        end: {
          line: 206,
          column: 38
        }
      },
      "116": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 207,
          column: 156
        }
      },
      "117": {
        start: {
          line: 207,
          column: 50
        },
        end: {
          line: 207,
          column: 94
        }
      },
      "118": {
        start: {
          line: 207,
          column: 109
        },
        end: {
          line: 207,
          column: 154
        }
      },
      "119": {
        start: {
          line: 212,
          column: 32
        },
        end: {
          line: 222,
          column: 5
        }
      },
      "120": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 213,
          column: 35
        }
      },
      "121": {
        start: {
          line: 213,
          column: 28
        },
        end: {
          line: 213,
          column: 35
        }
      },
      "122": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 216,
          column: 11
        }
      },
      "123": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 221,
          column: 11
        }
      },
      "124": {
        start: {
          line: 223,
          column: 31
        },
        end: {
          line: 240,
          column: 5
        }
      },
      "125": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 224,
          column: 95
        }
      },
      "126": {
        start: {
          line: 224,
          column: 88
        },
        end: {
          line: 224,
          column: 95
        }
      },
      "127": {
        start: {
          line: 225,
          column: 29
        },
        end: {
          line: 231,
          column: 9
        }
      },
      "128": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 232,
          column: 55
        }
      },
      "129": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 233,
          column: 33
        }
      },
      "130": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 234,
          column: 35
        }
      },
      "131": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 239,
          column: 11
        }
      },
      "132": {
        start: {
          line: 242,
          column: 32
        },
        end: {
          line: 384,
          column: 5
        }
      },
      "133": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 251,
          column: 9
        }
      },
      "134": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 249,
          column: 15
        }
      },
      "135": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 250,
          column: 19
        }
      },
      "136": {
        start: {
          line: 253,
          column: 35
        },
        end: {
          line: 253,
          column: 274
        }
      },
      "137": {
        start: {
          line: 253,
          column: 93
        },
        end: {
          line: 253,
          column: 127
        }
      },
      "138": {
        start: {
          line: 253,
          column: 166
        },
        end: {
          line: 253,
          column: 210
        }
      },
      "139": {
        start: {
          line: 253,
          column: 225
        },
        end: {
          line: 253,
          column: 270
        }
      },
      "140": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 262,
          column: 9
        }
      },
      "141": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 260,
          column: 15
        }
      },
      "142": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 261,
          column: 19
        }
      },
      "143": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 263,
          column: 37
        }
      },
      "144": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 264,
          column: 40
        }
      },
      "145": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 265,
          column: 34
        }
      },
      "146": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 266,
          column: 35
        }
      },
      "147": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 383,
          column: 9
        }
      },
      "148": {
        start: {
          line: 269,
          column: 37
        },
        end: {
          line: 272,
          column: 27
        }
      },
      "149": {
        start: {
          line: 270,
          column: 35
        },
        end: {
          line: 270,
          column: 128
        }
      },
      "150": {
        start: {
          line: 270,
          column: 87
        },
        end: {
          line: 270,
          column: 108
        }
      },
      "151": {
        start: {
          line: 271,
          column: 16
        },
        end: {
          line: 271,
          column: 55
        }
      },
      "152": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 273,
          column: 106
        }
      },
      "153": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 276,
          column: 38
        }
      },
      "154": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 371,
          column: 13
        }
      },
      "155": {
        start: {
          line: 279,
          column: 16
        },
        end: {
          line: 281,
          column: 17
        }
      },
      "156": {
        start: {
          line: 280,
          column: 20
        },
        end: {
          line: 280,
          column: 67
        }
      },
      "157": {
        start: {
          line: 282,
          column: 43
        },
        end: {
          line: 282,
          column: 134
        }
      },
      "158": {
        start: {
          line: 284,
          column: 35
        },
        end: {
          line: 284,
          column: 90
        }
      },
      "159": {
        start: {
          line: 285,
          column: 16
        },
        end: {
          line: 285,
          column: 81
        }
      },
      "160": {
        start: {
          line: 286,
          column: 16
        },
        end: {
          line: 286,
          column: 42
        }
      },
      "161": {
        start: {
          line: 287,
          column: 16
        },
        end: {
          line: 287,
          column: 42
        }
      },
      "162": {
        start: {
          line: 288,
          column: 16
        },
        end: {
          line: 288,
          column: 46
        }
      },
      "163": {
        start: {
          line: 290,
          column: 16
        },
        end: {
          line: 361,
          column: 17
        }
      },
      "164": {
        start: {
          line: 292,
          column: 46
        },
        end: {
          line: 292,
          column: 69
        }
      },
      "165": {
        start: {
          line: 294,
          column: 44
        },
        end: {
          line: 336,
          column: 3
        }
      },
      "166": {
        start: {
          line: 303,
          column: 34
        },
        end: {
          line: 303,
          column: 90
        }
      },
      "167": {
        start: {
          line: 338,
          column: 36
        },
        end: {
          line: 338,
          column: 107
        }
      },
      "168": {
        start: {
          line: 339,
          column: 20
        },
        end: {
          line: 339,
          column: 76
        }
      },
      "169": {
        start: {
          line: 340,
          column: 20
        },
        end: {
          line: 351,
          column: 21
        }
      },
      "170": {
        start: {
          line: 341,
          column: 24
        },
        end: {
          line: 341,
          column: 53
        }
      },
      "171": {
        start: {
          line: 342,
          column: 24
        },
        end: {
          line: 342,
          column: 51
        }
      },
      "172": {
        start: {
          line: 343,
          column: 24
        },
        end: {
          line: 343,
          column: 54
        }
      },
      "173": {
        start: {
          line: 344,
          column: 24
        },
        end: {
          line: 348,
          column: 27
        }
      },
      "174": {
        start: {
          line: 350,
          column: 24
        },
        end: {
          line: 350,
          column: 96
        }
      },
      "175": {
        start: {
          line: 353,
          column: 20
        },
        end: {
          line: 353,
          column: 74
        }
      },
      "176": {
        start: {
          line: 354,
          column: 20
        },
        end: {
          line: 359,
          column: 23
        }
      },
      "177": {
        start: {
          line: 360,
          column: 20
        },
        end: {
          line: 360,
          column: 46
        }
      },
      "178": {
        start: {
          line: 363,
          column: 16
        },
        end: {
          line: 363,
          column: 77
        }
      },
      "179": {
        start: {
          line: 364,
          column: 16
        },
        end: {
          line: 369,
          column: 19
        }
      },
      "180": {
        start: {
          line: 370,
          column: 16
        },
        end: {
          line: 370,
          column: 42
        }
      },
      "181": {
        start: {
          line: 373,
          column: 12
        },
        end: {
          line: 373,
          column: 72
        }
      },
      "182": {
        start: {
          line: 374,
          column: 12
        },
        end: {
          line: 379,
          column: 15
        }
      },
      "183": {
        start: {
          line: 380,
          column: 12
        },
        end: {
          line: 380,
          column: 38
        }
      },
      "184": {
        start: {
          line: 382,
          column: 12
        },
        end: {
          line: 382,
          column: 42
        }
      },
      "185": {
        start: {
          line: 386,
          column: 31
        },
        end: {
          line: 391,
          column: 5
        }
      },
      "186": {
        start: {
          line: 387,
          column: 8
        },
        end: {
          line: 390,
          column: 29
        }
      },
      "187": {
        start: {
          line: 387,
          column: 36
        },
        end: {
          line: 390,
          column: 27
        }
      },
      "188": {
        start: {
          line: 387,
          column: 58
        },
        end: {
          line: 390,
          column: 26
        }
      },
      "189": {
        start: {
          line: 393,
          column: 37
        },
        end: {
          line: 441,
          column: 5
        }
      },
      "190": {
        start: {
          line: 394,
          column: 8
        },
        end: {
          line: 394,
          column: 35
        }
      },
      "191": {
        start: {
          line: 394,
          column: 28
        },
        end: {
          line: 394,
          column: 35
        }
      },
      "192": {
        start: {
          line: 395,
          column: 32
        },
        end: {
          line: 395,
          column: 92
        }
      },
      "193": {
        start: {
          line: 395,
          column: 66
        },
        end: {
          line: 395,
          column: 91
        }
      },
      "194": {
        start: {
          line: 396,
          column: 8
        },
        end: {
          line: 396,
          column: 90
        }
      },
      "195": {
        start: {
          line: 397,
          column: 8
        },
        end: {
          line: 405,
          column: 9
        }
      },
      "196": {
        start: {
          line: 398,
          column: 12
        },
        end: {
          line: 403,
          column: 15
        }
      },
      "197": {
        start: {
          line: 404,
          column: 12
        },
        end: {
          line: 404,
          column: 19
        }
      },
      "198": {
        start: {
          line: 406,
          column: 8
        },
        end: {
          line: 440,
          column: 9
        }
      },
      "199": {
        start: {
          line: 408,
          column: 37
        },
        end: {
          line: 414,
          column: 19
        }
      },
      "200": {
        start: {
          line: 408,
          column: 68
        },
        end: {
          line: 414,
          column: 17
        }
      },
      "201": {
        start: {
          line: 415,
          column: 12
        },
        end: {
          line: 415,
          column: 100
        }
      },
      "202": {
        start: {
          line: 417,
          column: 12
        },
        end: {
          line: 420,
          column: 13
        }
      },
      "203": {
        start: {
          line: 418,
          column: 16
        },
        end: {
          line: 418,
          column: 60
        }
      },
      "204": {
        start: {
          line: 419,
          column: 16
        },
        end: {
          line: 419,
          column: 56
        }
      },
      "205": {
        start: {
          line: 422,
          column: 12
        },
        end: {
          line: 422,
          column: 36
        }
      },
      "206": {
        start: {
          line: 423,
          column: 12
        },
        end: {
          line: 423,
          column: 30
        }
      },
      "207": {
        start: {
          line: 424,
          column: 12
        },
        end: {
          line: 424,
          column: 38
        }
      },
      "208": {
        start: {
          line: 425,
          column: 12
        },
        end: {
          line: 429,
          column: 15
        }
      },
      "209": {
        start: {
          line: 431,
          column: 12
        },
        end: {
          line: 431,
          column: 38
        }
      },
      "210": {
        start: {
          line: 433,
          column: 12
        },
        end: {
          line: 433,
          column: 71
        }
      },
      "211": {
        start: {
          line: 434,
          column: 12
        },
        end: {
          line: 439,
          column: 15
        }
      },
      "212": {
        start: {
          line: 442,
          column: 39
        },
        end: {
          line: 466,
          column: 5
        }
      },
      "213": {
        start: {
          line: 443,
          column: 8
        },
        end: {
          line: 443,
          column: 57
        }
      },
      "214": {
        start: {
          line: 443,
          column: 50
        },
        end: {
          line: 443,
          column: 57
        }
      },
      "215": {
        start: {
          line: 445,
          column: 28
        },
        end: {
          line: 445,
          column: 87
        }
      },
      "216": {
        start: {
          line: 447,
          column: 24
        },
        end: {
          line: 451,
          column: 9
        }
      },
      "217": {
        start: {
          line: 453,
          column: 8
        },
        end: {
          line: 453,
          column: 75
        }
      },
      "218": {
        start: {
          line: 455,
          column: 8
        },
        end: {
          line: 458,
          column: 11
        }
      },
      "219": {
        start: {
          line: 460,
          column: 8
        },
        end: {
          line: 460,
          column: 35
        }
      },
      "220": {
        start: {
          line: 461,
          column: 8
        },
        end: {
          line: 465,
          column: 11
        }
      },
      "221": {
        start: {
          line: 467,
          column: 34
        },
        end: {
          line: 483,
          column: 5
        }
      },
      "222": {
        start: {
          line: 468,
          column: 8
        },
        end: {
          line: 468,
          column: 57
        }
      },
      "223": {
        start: {
          line: 468,
          column: 50
        },
        end: {
          line: 468,
          column: 57
        }
      },
      "224": {
        start: {
          line: 470,
          column: 8
        },
        end: {
          line: 470,
          column: 66
        }
      },
      "225": {
        start: {
          line: 472,
          column: 8
        },
        end: {
          line: 474,
          column: 9
        }
      },
      "226": {
        start: {
          line: 473,
          column: 12
        },
        end: {
          line: 473,
          column: 39
        }
      },
      "227": {
        start: {
          line: 476,
          column: 8
        },
        end: {
          line: 476,
          column: 37
        }
      },
      "228": {
        start: {
          line: 477,
          column: 8
        },
        end: {
          line: 477,
          column: 35
        }
      },
      "229": {
        start: {
          line: 478,
          column: 8
        },
        end: {
          line: 482,
          column: 11
        }
      },
      "230": {
        start: {
          line: 484,
          column: 42
        },
        end: {
          line: 513,
          column: 5
        }
      },
      "231": {
        start: {
          line: 486,
          column: 8
        },
        end: {
          line: 512,
          column: 9
        }
      },
      "232": {
        start: {
          line: 488,
          column: 26
        },
        end: {
          line: 488,
          column: 92
        }
      },
      "233": {
        start: {
          line: 488,
          column: 52
        },
        end: {
          line: 488,
          column: 91
        }
      },
      "234": {
        start: {
          line: 489,
          column: 12
        },
        end: {
          line: 502,
          column: 13
        }
      },
      "235": {
        start: {
          line: 491,
          column: 16
        },
        end: {
          line: 491,
          column: 61
        }
      },
      "236": {
        start: {
          line: 493,
          column: 16
        },
        end: {
          line: 498,
          column: 17
        }
      },
      "237": {
        start: {
          line: 494,
          column: 20
        },
        end: {
          line: 494,
          column: 41
        }
      },
      "238": {
        start: {
          line: 495,
          column: 23
        },
        end: {
          line: 498,
          column: 17
        }
      },
      "239": {
        start: {
          line: 497,
          column: 20
        },
        end: {
          line: 497,
          column: 48
        }
      },
      "240": {
        start: {
          line: 499,
          column: 16
        },
        end: {
          line: 499,
          column: 42
        }
      },
      "241": {
        start: {
          line: 500,
          column: 16
        },
        end: {
          line: 500,
          column: 45
        }
      },
      "242": {
        start: {
          line: 501,
          column: 16
        },
        end: {
          line: 501,
          column: 47
        }
      },
      "243": {
        start: {
          line: 503,
          column: 15
        },
        end: {
          line: 512,
          column: 9
        }
      },
      "244": {
        start: {
          line: 504,
          column: 12
        },
        end: {
          line: 504,
          column: 41
        }
      },
      "245": {
        start: {
          line: 505,
          column: 12
        },
        end: {
          line: 505,
          column: 38
        }
      },
      "246": {
        start: {
          line: 506,
          column: 12
        },
        end: {
          line: 506,
          column: 56
        }
      },
      "247": {
        start: {
          line: 507,
          column: 12
        },
        end: {
          line: 507,
          column: 43
        }
      },
      "248": {
        start: {
          line: 509,
          column: 12
        },
        end: {
          line: 511,
          column: 13
        }
      },
      "249": {
        start: {
          line: 510,
          column: 16
        },
        end: {
          line: 510,
          column: 37
        }
      },
      "250": {
        start: {
          line: 515,
          column: 39
        },
        end: {
          line: 532,
          column: 5
        }
      },
      "251": {
        start: {
          line: 517,
          column: 8
        },
        end: {
          line: 517,
          column: 32
        }
      },
      "252": {
        start: {
          line: 519,
          column: 8
        },
        end: {
          line: 519,
          column: 53
        }
      },
      "253": {
        start: {
          line: 521,
          column: 8
        },
        end: {
          line: 526,
          column: 9
        }
      },
      "254": {
        start: {
          line: 522,
          column: 12
        },
        end: {
          line: 522,
          column: 33
        }
      },
      "255": {
        start: {
          line: 523,
          column: 15
        },
        end: {
          line: 526,
          column: 9
        }
      },
      "256": {
        start: {
          line: 525,
          column: 12
        },
        end: {
          line: 525,
          column: 40
        }
      },
      "257": {
        start: {
          line: 528,
          column: 8
        },
        end: {
          line: 528,
          column: 34
        }
      },
      "258": {
        start: {
          line: 529,
          column: 8
        },
        end: {
          line: 529,
          column: 37
        }
      },
      "259": {
        start: {
          line: 531,
          column: 8
        },
        end: {
          line: 531,
          column: 39
        }
      },
      "260": {
        start: {
          line: 533,
          column: 38
        },
        end: {
          line: 544,
          column: 5
        }
      },
      "261": {
        start: {
          line: 534,
          column: 8
        },
        end: {
          line: 534,
          column: 46
        }
      },
      "262": {
        start: {
          line: 534,
          column: 36
        },
        end: {
          line: 534,
          column: 46
        }
      },
      "263": {
        start: {
          line: 535,
          column: 8
        },
        end: {
          line: 543,
          column: 11
        }
      },
      "264": {
        start: {
          line: 536,
          column: 12
        },
        end: {
          line: 541,
          column: 13
        }
      },
      "265": {
        start: {
          line: 538,
          column: 16
        },
        end: {
          line: 538,
          column: 98
        }
      },
      "266": {
        start: {
          line: 538,
          column: 53
        },
        end: {
          line: 538,
          column: 96
        }
      },
      "267": {
        start: {
          line: 539,
          column: 19
        },
        end: {
          line: 541,
          column: 13
        }
      },
      "268": {
        start: {
          line: 540,
          column: 16
        },
        end: {
          line: 540,
          column: 103
        }
      },
      "269": {
        start: {
          line: 540,
          column: 53
        },
        end: {
          line: 540,
          column: 101
        }
      },
      "270": {
        start: {
          line: 542,
          column: 12
        },
        end: {
          line: 542,
          column: 25
        }
      },
      "271": {
        start: {
          line: 546,
          column: 30
        },
        end: {
          line: 548,
          column: 5
        }
      },
      "272": {
        start: {
          line: 547,
          column: 8
        },
        end: {
          line: 547,
          column: 73
        }
      },
      "273": {
        start: {
          line: 547,
          column: 47
        },
        end: {
          line: 547,
          column: 71
        }
      },
      "274": {
        start: {
          line: 550,
          column: 32
        },
        end: {
          line: 552,
          column: 5
        }
      },
      "275": {
        start: {
          line: 551,
          column: 8
        },
        end: {
          line: 551,
          column: 70
        }
      },
      "276": {
        start: {
          line: 551,
          column: 47
        },
        end: {
          line: 551,
          column: 68
        }
      },
      "277": {
        start: {
          line: 554,
          column: 25
        },
        end: {
          line: 558,
          column: 5
        }
      },
      "278": {
        start: {
          line: 555,
          column: 8
        },
        end: {
          line: 555,
          column: 27
        }
      },
      "279": {
        start: {
          line: 556,
          column: 8
        },
        end: {
          line: 556,
          column: 35
        }
      },
      "280": {
        start: {
          line: 557,
          column: 8
        },
        end: {
          line: 557,
          column: 28
        }
      },
      "281": {
        start: {
          line: 560,
          column: 35
        },
        end: {
          line: 563,
          column: 5
        }
      },
      "282": {
        start: {
          line: 562,
          column: 8
        },
        end: {
          line: 562,
          column: 229
        }
      },
      "283": {
        start: {
          line: 565,
          column: 35
        },
        end: {
          line: 596,
          column: 5
        }
      },
      "284": {
        start: {
          line: 566,
          column: 8
        },
        end: {
          line: 574,
          column: 9
        }
      },
      "285": {
        start: {
          line: 567,
          column: 12
        },
        end: {
          line: 572,
          column: 15
        }
      },
      "286": {
        start: {
          line: 573,
          column: 12
        },
        end: {
          line: 573,
          column: 19
        }
      },
      "287": {
        start: {
          line: 575,
          column: 8
        },
        end: {
          line: 575,
          column: 30
        }
      },
      "288": {
        start: {
          line: 577,
          column: 8
        },
        end: {
          line: 595,
          column: 17
        }
      },
      "289": {
        start: {
          line: 578,
          column: 12
        },
        end: {
          line: 594,
          column: 13
        }
      },
      "290": {
        start: {
          line: 579,
          column: 16
        },
        end: {
          line: 583,
          column: 19
        }
      },
      "291": {
        start: {
          line: 585,
          column: 16
        },
        end: {
          line: 585,
          column: 73
        }
      },
      "292": {
        start: {
          line: 586,
          column: 16
        },
        end: {
          line: 591,
          column: 19
        }
      },
      "293": {
        start: {
          line: 593,
          column: 16
        },
        end: {
          line: 593,
          column: 39
        }
      },
      "294": {
        start: {
          line: 598,
          column: 27
        },
        end: {
          line: 610,
          column: 5
        }
      },
      "295": {
        start: {
          line: 600,
          column: 23
        },
        end: {
          line: 600,
          column: 31
        }
      },
      "296": {
        start: {
          line: 601,
          column: 27
        },
        end: {
          line: 601,
          column: 55
        }
      },
      "297": {
        start: {
          line: 602,
          column: 8
        },
        end: {
          line: 609,
          column: 9
        }
      },
      "298": {
        start: {
          line: 603,
          column: 24
        },
        end: {
          line: 603,
          column: 59
        }
      },
      "299": {
        start: {
          line: 604,
          column: 12
        },
        end: {
          line: 608,
          column: 13
        }
      },
      "300": {
        start: {
          line: 605,
          column: 16
        },
        end: {
          line: 605,
          column: 36
        }
      },
      "301": {
        start: {
          line: 606,
          column: 16
        },
        end: {
          line: 606,
          column: 43
        }
      },
      "302": {
        start: {
          line: 607,
          column: 16
        },
        end: {
          line: 607,
          column: 42
        }
      },
      "303": {
        start: {
          line: 612,
          column: 29
        },
        end: {
          line: 622,
          column: 5
        }
      },
      "304": {
        start: {
          line: 613,
          column: 8
        },
        end: {
          line: 621,
          column: 11
        }
      },
      "305": {
        start: {
          line: 614,
          column: 28
        },
        end: {
          line: 617,
          column: 13
        }
      },
      "306": {
        start: {
          line: 619,
          column: 12
        },
        end: {
          line: 619,
          column: 36
        }
      },
      "307": {
        start: {
          line: 620,
          column: 12
        },
        end: {
          line: 620,
          column: 27
        }
      },
      "308": {
        start: {
          line: 623,
          column: 35
        },
        end: {
          line: 641,
          column: 5
        }
      },
      "309": {
        start: {
          line: 624,
          column: 8
        },
        end: {
          line: 624,
          column: 35
        }
      },
      "310": {
        start: {
          line: 624,
          column: 28
        },
        end: {
          line: 624,
          column: 35
        }
      },
      "311": {
        start: {
          line: 625,
          column: 8
        },
        end: {
          line: 625,
          column: 31
        }
      },
      "312": {
        start: {
          line: 627,
          column: 8
        },
        end: {
          line: 629,
          column: 11
        }
      },
      "313": {
        start: {
          line: 631,
          column: 8
        },
        end: {
          line: 631,
          column: 33
        }
      },
      "314": {
        start: {
          line: 633,
          column: 8
        },
        end: {
          line: 637,
          column: 11
        }
      },
      "315": {
        start: {
          line: 638,
          column: 8
        },
        end: {
          line: 640,
          column: 16
        }
      },
      "316": {
        start: {
          line: 639,
          column: 12
        },
        end: {
          line: 639,
          column: 36
        }
      },
      "317": {
        start: {
          line: 642,
          column: 4
        },
        end: {
          line: 2219,
          column: 7
        }
      },
      "318": {
        start: {
          line: 662,
          column: 36
        },
        end: {
          line: 662,
          column: 67
        }
      },
      "319": {
        start: {
          line: 663,
          column: 36
        },
        end: {
          line: 663,
          column: 65
        }
      },
      "320": {
        start: {
          line: 706,
          column: 109
        },
        end: {
          line: 785,
          column: 60
        }
      },
      "321": {
        start: {
          line: 708,
          column: 65
        },
        end: {
          line: 708,
          column: 101
        }
      },
      "322": {
        start: {
          line: 738,
          column: 159
        },
        end: {
          line: 749,
          column: 84
        }
      },
      "323": {
        start: {
          line: 740,
          column: 90
        },
        end: {
          line: 740,
          column: 133
        }
      },
      "324": {
        start: {
          line: 765,
          column: 161
        },
        end: {
          line: 780,
          column: 84
        }
      },
      "325": {
        start: {
          line: 767,
          column: 90
        },
        end: {
          line: 767,
          column: 133
        }
      },
      "326": {
        start: {
          line: 812,
          column: 40
        },
        end: {
          line: 812,
          column: 63
        }
      },
      "327": {
        start: {
          line: 853,
          column: 49
        },
        end: {
          line: 853,
          column: 106
        }
      },
      "328": {
        start: {
          line: 897,
          column: 75
        },
        end: {
          line: 897,
          column: 103
        }
      },
      "329": {
        start: {
          line: 936,
          column: 89
        },
        end: {
          line: 936,
          column: 133
        }
      },
      "330": {
        start: {
          line: 938,
          column: 93
        },
        end: {
          line: 938,
          column: 137
        }
      },
      "331": {
        start: {
          line: 938,
          column: 152
        },
        end: {
          line: 938,
          column: 197
        }
      },
      "332": {
        start: {
          line: 938,
          column: 225
        },
        end: {
          line: 1009,
          column: 63
        }
      },
      "333": {
        start: {
          line: 969,
          column: 104
        },
        end: {
          line: 969,
          column: 152
        }
      },
      "334": {
        start: {
          line: 969,
          column: 121
        },
        end: {
          line: 969,
          column: 132
        }
      },
      "335": {
        start: {
          line: 978,
          column: 144
        },
        end: {
          line: 1002,
          column: 82
        }
      },
      "336": {
        start: {
          line: 987,
          column: 147
        },
        end: {
          line: 987,
          column: 168
        }
      },
      "337": {
        start: {
          line: 1089,
          column: 111
        },
        end: {
          line: 1089,
          column: 141
        }
      },
      "338": {
        start: {
          line: 1122,
          column: 140
        },
        end: {
          line: 1125,
          column: 115
        }
      },
      "339": {
        start: {
          line: 1143,
          column: 120
        },
        end: {
          line: 1143,
          column: 136
        }
      },
      "340": {
        start: {
          line: 1184,
          column: 135
        },
        end: {
          line: 1218,
          column: 96
        }
      },
      "341": {
        start: {
          line: 1187,
          column: 96
        },
        end: {
          line: 1187,
          column: 120
        }
      },
      "342": {
        start: {
          line: 1188,
          column: 96
        },
        end: {
          line: 1188,
          column: 123
        }
      },
      "343": {
        start: {
          line: 1202,
          column: 148
        },
        end: {
          line: 1206,
          column: 115
        }
      },
      "344": {
        start: {
          line: 1252,
          column: 117
        },
        end: {
          line: 1252,
          column: 155
        }
      },
      "345": {
        start: {
          line: 1266,
          column: 108
        },
        end: {
          line: 1266,
          column: 148
        }
      },
      "346": {
        start: {
          line: 1267,
          column: 108
        },
        end: {
          line: 1267,
          column: 136
        }
      },
      "347": {
        start: {
          line: 1295,
          column: 119
        },
        end: {
          line: 1295,
          column: 158
        }
      },
      "348": {
        start: {
          line: 1311,
          column: 119
        },
        end: {
          line: 1311,
          column: 160
        }
      },
      "349": {
        start: {
          line: 1378,
          column: 95
        },
        end: {
          line: 1378,
          column: 131
        }
      },
      "350": {
        start: {
          line: 1394,
          column: 95
        },
        end: {
          line: 1394,
          column: 133
        }
      },
      "351": {
        start: {
          line: 1425,
          column: 96
        },
        end: {
          line: 1425,
          column: 118
        }
      },
      "352": {
        start: {
          line: 1469,
          column: 103
        },
        end: {
          line: 1469,
          column: 135
        }
      },
      "353": {
        start: {
          line: 1485,
          column: 112
        },
        end: {
          line: 1485,
          column: 144
        }
      },
      "354": {
        start: {
          line: 1495,
          column: 189
        },
        end: {
          line: 1502,
          column: 111
        }
      },
      "355": {
        start: {
          line: 1595,
          column: 162
        },
        end: {
          line: 1631,
          column: 93
        }
      },
      "356": {
        start: {
          line: 1616,
          column: 126
        },
        end: {
          line: 1616,
          column: 151
        }
      },
      "357": {
        start: {
          line: 1718,
          column: 75
        },
        end: {
          line: 1718,
          column: 110
        }
      },
      "358": {
        start: {
          line: 1734,
          column: 75
        },
        end: {
          line: 1734,
          column: 106
        }
      },
      "359": {
        start: {
          line: 1787,
          column: 91
        },
        end: {
          line: 1787,
          column: 143
        }
      },
      "360": {
        start: {
          line: 1802,
          column: 91
        },
        end: {
          line: 1802,
          column: 140
        }
      },
      "361": {
        start: {
          line: 1817,
          column: 91
        },
        end: {
          line: 1817,
          column: 144
        }
      },
      "362": {
        start: {
          line: 1832,
          column: 91
        },
        end: {
          line: 1832,
          column: 136
        }
      },
      "363": {
        start: {
          line: 1847,
          column: 91
        },
        end: {
          line: 1847,
          column: 143
        }
      },
      "364": {
        start: {
          line: 1862,
          column: 91
        },
        end: {
          line: 1862,
          column: 146
        }
      },
      "365": {
        start: {
          line: 1891,
          column: 91
        },
        end: {
          line: 1891,
          column: 144
        }
      },
      "366": {
        start: {
          line: 1906,
          column: 91
        },
        end: {
          line: 1906,
          column: 146
        }
      },
      "367": {
        start: {
          line: 1921,
          column: 91
        },
        end: {
          line: 1921,
          column: 140
        }
      },
      "368": {
        start: {
          line: 1936,
          column: 91
        },
        end: {
          line: 1936,
          column: 142
        }
      },
      "369": {
        start: {
          line: 1965,
          column: 91
        },
        end: {
          line: 1965,
          column: 139
        }
      },
      "370": {
        start: {
          line: 1980,
          column: 91
        },
        end: {
          line: 1980,
          column: 148
        }
      },
      "371": {
        start: {
          line: 1995,
          column: 91
        },
        end: {
          line: 1995,
          column: 141
        }
      },
      "372": {
        start: {
          line: 2010,
          column: 91
        },
        end: {
          line: 2010,
          column: 146
        }
      },
      "373": {
        start: {
          line: 2039,
          column: 91
        },
        end: {
          line: 2039,
          column: 140
        }
      },
      "374": {
        start: {
          line: 2054,
          column: 91
        },
        end: {
          line: 2054,
          column: 144
        }
      },
      "375": {
        start: {
          line: 2069,
          column: 91
        },
        end: {
          line: 2069,
          column: 142
        }
      },
      "376": {
        start: {
          line: 2084,
          column: 91
        },
        end: {
          line: 2084,
          column: 143
        }
      },
      "377": {
        start: {
          line: 2113,
          column: 91
        },
        end: {
          line: 2113,
          column: 141
        }
      },
      "378": {
        start: {
          line: 2128,
          column: 91
        },
        end: {
          line: 2128,
          column: 148
        }
      },
      "379": {
        start: {
          line: 2143,
          column: 91
        },
        end: {
          line: 2143,
          column: 149
        }
      },
      "380": {
        start: {
          line: 2203,
          column: 57
        },
        end: {
          line: 2203,
          column: 85
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "MemoryViewer",
        decl: {
          start: {
            line: 58,
            column: 9
          },
          end: {
            line: 58,
            column: 21
          }
        },
        loc: {
          start: {
            line: 58,
            column: 223
          },
          end: {
            line: 2220,
            column: 1
          }
        },
        line: 58
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 58,
            column: 198
          },
          end: {
            line: 58,
            column: 199
          }
        },
        loc: {
          start: {
            line: 58,
            column: 202
          },
          end: {
            line: 58,
            column: 204
          }
        },
        line: 58
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 100,
            column: 26
          },
          end: {
            line: 100,
            column: 27
          }
        },
        loc: {
          start: {
            line: 100,
            column: 30
          },
          end: {
            line: 118,
            column: 5
          }
        },
        line: 100
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 122,
            column: 26
          },
          end: {
            line: 122,
            column: 27
          }
        },
        loc: {
          start: {
            line: 122,
            column: 30
          },
          end: {
            line: 139,
            column: 5
          }
        },
        line: 122
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 126,
            column: 63
          },
          end: {
            line: 126,
            column: 64
          }
        },
        loc: {
          start: {
            line: 126,
            column: 72
          },
          end: {
            line: 126,
            column: 125
          }
        },
        line: 126
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 131,
            column: 66
          },
          end: {
            line: 131,
            column: 67
          }
        },
        loc: {
          start: {
            line: 131,
            column: 75
          },
          end: {
            line: 131,
            column: 134
          }
        },
        line: 131
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 143,
            column: 26
          },
          end: {
            line: 143,
            column: 27
          }
        },
        loc: {
          start: {
            line: 143,
            column: 30
          },
          end: {
            line: 148,
            column: 5
          }
        },
        line: 143
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 152,
            column: 26
          },
          end: {
            line: 152,
            column: 27
          }
        },
        loc: {
          start: {
            line: 152,
            column: 30
          },
          end: {
            line: 156,
            column: 5
          }
        },
        line: 152
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 160,
            column: 43
          },
          end: {
            line: 160,
            column: 44
          }
        },
        loc: {
          start: {
            line: 160,
            column: 47
          },
          end: {
            line: 167,
            column: 5
          }
        },
        line: 160
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 163,
            column: 40
          },
          end: {
            line: 163,
            column: 41
          }
        },
        loc: {
          start: {
            line: 163,
            column: 49
          },
          end: {
            line: 165,
            column: 9
          }
        },
        line: 163
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 164,
            column: 31
          },
          end: {
            line: 164,
            column: 32
          }
        },
        loc: {
          start: {
            line: 164,
            column: 38
          },
          end: {
            line: 164,
            column: 51
          }
        },
        line: 164
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 171,
            column: 50
          },
          end: {
            line: 171,
            column: 51
          }
        },
        loc: {
          start: {
            line: 171,
            column: 54
          },
          end: {
            line: 198,
            column: 5
          }
        },
        line: 171
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 179,
            column: 39
          },
          end: {
            line: 179,
            column: 40
          }
        },
        loc: {
          start: {
            line: 179,
            column: 48
          },
          end: {
            line: 179,
            column: 136
          }
        },
        line: 179
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 183,
            column: 39
          },
          end: {
            line: 183,
            column: 40
          }
        },
        loc: {
          start: {
            line: 183,
            column: 48
          },
          end: {
            line: 183,
            column: 80
          }
        },
        line: 183
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 188,
            column: 30
          },
          end: {
            line: 188,
            column: 31
          }
        },
        loc: {
          start: {
            line: 188,
            column: 38
          },
          end: {
            line: 188,
            column: 83
          }
        },
        line: 188
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 191,
            column: 30
          },
          end: {
            line: 191,
            column: 31
          }
        },
        loc: {
          start: {
            line: 191,
            column: 38
          },
          end: {
            line: 191,
            column: 83
          }
        },
        line: 191
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 194,
            column: 30
          },
          end: {
            line: 194,
            column: 31
          }
        },
        loc: {
          start: {
            line: 194,
            column: 38
          },
          end: {
            line: 194,
            column: 68
          }
        },
        line: 194
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 205,
            column: 54
          },
          end: {
            line: 205,
            column: 55
          }
        },
        loc: {
          start: {
            line: 205,
            column: 58
          },
          end: {
            line: 208,
            column: 5
          }
        },
        line: 205
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 207,
            column: 42
          },
          end: {
            line: 207,
            column: 43
          }
        },
        loc: {
          start: {
            line: 207,
            column: 50
          },
          end: {
            line: 207,
            column: 94
          }
        },
        line: 207
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 207,
            column: 101
          },
          end: {
            line: 207,
            column: 102
          }
        },
        loc: {
          start: {
            line: 207,
            column: 109
          },
          end: {
            line: 207,
            column: 154
          }
        },
        line: 207
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 212,
            column: 32
          },
          end: {
            line: 212,
            column: 33
          }
        },
        loc: {
          start: {
            line: 212,
            column: 36
          },
          end: {
            line: 222,
            column: 5
          }
        },
        line: 212
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 223,
            column: 31
          },
          end: {
            line: 223,
            column: 32
          }
        },
        loc: {
          start: {
            line: 223,
            column: 35
          },
          end: {
            line: 240,
            column: 5
          }
        },
        line: 223
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 242,
            column: 32
          },
          end: {
            line: 242,
            column: 33
          }
        },
        loc: {
          start: {
            line: 242,
            column: 42
          },
          end: {
            line: 384,
            column: 5
          }
        },
        line: 242
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 253,
            column: 85
          },
          end: {
            line: 253,
            column: 86
          }
        },
        loc: {
          start: {
            line: 253,
            column: 93
          },
          end: {
            line: 253,
            column: 127
          }
        },
        line: 253
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 253,
            column: 158
          },
          end: {
            line: 253,
            column: 159
          }
        },
        loc: {
          start: {
            line: 253,
            column: 166
          },
          end: {
            line: 253,
            column: 210
          }
        },
        line: 253
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 253,
            column: 217
          },
          end: {
            line: 253,
            column: 218
          }
        },
        loc: {
          start: {
            line: 253,
            column: 225
          },
          end: {
            line: 253,
            column: 270
          }
        },
        line: 253
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 269,
            column: 69
          },
          end: {
            line: 269,
            column: 70
          }
        },
        loc: {
          start: {
            line: 269,
            column: 76
          },
          end: {
            line: 272,
            column: 13
          }
        },
        line: 269
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 270,
            column: 82
          },
          end: {
            line: 270,
            column: 83
          }
        },
        loc: {
          start: {
            line: 270,
            column: 87
          },
          end: {
            line: 270,
            column: 108
          }
        },
        line: 270
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 303,
            column: 17
          },
          end: {
            line: 303,
            column: 18
          }
        },
        loc: {
          start: {
            line: 303,
            column: 34
          },
          end: {
            line: 303,
            column: 90
          }
        },
        line: 303
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 386,
            column: 31
          },
          end: {
            line: 386,
            column: 32
          }
        },
        loc: {
          start: {
            line: 386,
            column: 40
          },
          end: {
            line: 391,
            column: 5
          }
        },
        line: 386
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 387,
            column: 28
          },
          end: {
            line: 387,
            column: 29
          }
        },
        loc: {
          start: {
            line: 387,
            column: 36
          },
          end: {
            line: 390,
            column: 27
          }
        },
        line: 387
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 387,
            column: 45
          },
          end: {
            line: 387,
            column: 46
          }
        },
        loc: {
          start: {
            line: 387,
            column: 58
          },
          end: {
            line: 390,
            column: 26
          }
        },
        line: 387
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 393,
            column: 37
          },
          end: {
            line: 393,
            column: 38
          }
        },
        loc: {
          start: {
            line: 393,
            column: 47
          },
          end: {
            line: 441,
            column: 5
          }
        },
        line: 393
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 395,
            column: 56
          },
          end: {
            line: 395,
            column: 57
          }
        },
        loc: {
          start: {
            line: 395,
            column: 66
          },
          end: {
            line: 395,
            column: 91
          }
        },
        line: 395
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 408,
            column: 57
          },
          end: {
            line: 408,
            column: 58
          }
        },
        loc: {
          start: {
            line: 408,
            column: 68
          },
          end: {
            line: 414,
            column: 17
          }
        },
        line: 408
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 442,
            column: 39
          },
          end: {
            line: 442,
            column: 40
          }
        },
        loc: {
          start: {
            line: 442,
            column: 43
          },
          end: {
            line: 466,
            column: 5
          }
        },
        line: 442
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 467,
            column: 34
          },
          end: {
            line: 467,
            column: 35
          }
        },
        loc: {
          start: {
            line: 467,
            column: 38
          },
          end: {
            line: 483,
            column: 5
          }
        },
        line: 467
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 484,
            column: 42
          },
          end: {
            line: 484,
            column: 43
          }
        },
        loc: {
          start: {
            line: 484,
            column: 51
          },
          end: {
            line: 513,
            column: 5
          }
        },
        line: 484
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 488,
            column: 47
          },
          end: {
            line: 488,
            column: 48
          }
        },
        loc: {
          start: {
            line: 488,
            column: 52
          },
          end: {
            line: 488,
            column: 91
          }
        },
        line: 488
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 515,
            column: 39
          },
          end: {
            line: 515,
            column: 40
          }
        },
        loc: {
          start: {
            line: 515,
            column: 62
          },
          end: {
            line: 532,
            column: 5
          }
        },
        line: 515
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 533,
            column: 38
          },
          end: {
            line: 533,
            column: 39
          }
        },
        loc: {
          start: {
            line: 533,
            column: 42
          },
          end: {
            line: 544,
            column: 5
          }
        },
        line: 533
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 535,
            column: 29
          },
          end: {
            line: 535,
            column: 30
          }
        },
        loc: {
          start: {
            line: 535,
            column: 38
          },
          end: {
            line: 543,
            column: 9
          }
        },
        line: 535
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 538,
            column: 44
          },
          end: {
            line: 538,
            column: 45
          }
        },
        loc: {
          start: {
            line: 538,
            column: 53
          },
          end: {
            line: 538,
            column: 96
          }
        },
        line: 538
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 540,
            column: 44
          },
          end: {
            line: 540,
            column: 45
          }
        },
        loc: {
          start: {
            line: 540,
            column: 53
          },
          end: {
            line: 540,
            column: 101
          }
        },
        line: 540
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 546,
            column: 30
          },
          end: {
            line: 546,
            column: 31
          }
        },
        loc: {
          start: {
            line: 546,
            column: 44
          },
          end: {
            line: 548,
            column: 5
          }
        },
        line: 546
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 547,
            column: 38
          },
          end: {
            line: 547,
            column: 39
          }
        },
        loc: {
          start: {
            line: 547,
            column: 47
          },
          end: {
            line: 547,
            column: 71
          }
        },
        line: 547
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 550,
            column: 32
          },
          end: {
            line: 550,
            column: 33
          }
        },
        loc: {
          start: {
            line: 550,
            column: 48
          },
          end: {
            line: 552,
            column: 5
          }
        },
        line: 550
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 551,
            column: 38
          },
          end: {
            line: 551,
            column: 39
          }
        },
        loc: {
          start: {
            line: 551,
            column: 47
          },
          end: {
            line: 551,
            column: 68
          }
        },
        line: 551
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 554,
            column: 25
          },
          end: {
            line: 554,
            column: 26
          }
        },
        loc: {
          start: {
            line: 554,
            column: 29
          },
          end: {
            line: 558,
            column: 5
          }
        },
        line: 554
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 560,
            column: 35
          },
          end: {
            line: 560,
            column: 36
          }
        },
        loc: {
          start: {
            line: 560,
            column: 46
          },
          end: {
            line: 563,
            column: 5
          }
        },
        line: 560
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 565,
            column: 35
          },
          end: {
            line: 565,
            column: 36
          }
        },
        loc: {
          start: {
            line: 565,
            column: 39
          },
          end: {
            line: 596,
            column: 5
          }
        },
        line: 565
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 577,
            column: 19
          },
          end: {
            line: 577,
            column: 20
          }
        },
        loc: {
          start: {
            line: 577,
            column: 23
          },
          end: {
            line: 595,
            column: 9
          }
        },
        line: 577
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 598,
            column: 27
          },
          end: {
            line: 598,
            column: 28
          }
        },
        loc: {
          start: {
            line: 598,
            column: 32
          },
          end: {
            line: 610,
            column: 5
          }
        },
        line: 598
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 612,
            column: 29
          },
          end: {
            line: 612,
            column: 30
          }
        },
        loc: {
          start: {
            line: 612,
            column: 49
          },
          end: {
            line: 622,
            column: 5
          }
        },
        line: 612
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 613,
            column: 27
          },
          end: {
            line: 613,
            column: 28
          }
        },
        loc: {
          start: {
            line: 613,
            column: 35
          },
          end: {
            line: 621,
            column: 9
          }
        },
        line: 613
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 623,
            column: 35
          },
          end: {
            line: 623,
            column: 36
          }
        },
        loc: {
          start: {
            line: 623,
            column: 39
          },
          end: {
            line: 641,
            column: 5
          }
        },
        line: 623
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 638,
            column: 19
          },
          end: {
            line: 638,
            column: 20
          }
        },
        loc: {
          start: {
            line: 638,
            column: 23
          },
          end: {
            line: 640,
            column: 9
          }
        },
        line: 638
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 661,
            column: 41
          },
          end: {
            line: 661,
            column: 42
          }
        },
        loc: {
          start: {
            line: 661,
            column: 45
          },
          end: {
            line: 664,
            column: 33
          }
        },
        line: 661
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 706,
            column: 86
          },
          end: {
            line: 706,
            column: 87
          }
        },
        loc: {
          start: {
            line: 706,
            column: 109
          },
          end: {
            line: 785,
            column: 60
          }
        },
        line: 706
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 708,
            column: 61
          },
          end: {
            line: 708,
            column: 62
          }
        },
        loc: {
          start: {
            line: 708,
            column: 65
          },
          end: {
            line: 708,
            column: 101
          }
        },
        line: 708
      },
      "61": {
        name: "(anonymous_61)",
        decl: {
          start: {
            line: 738,
            column: 136
          },
          end: {
            line: 738,
            column: 137
          }
        },
        loc: {
          start: {
            line: 738,
            column: 159
          },
          end: {
            line: 749,
            column: 84
          }
        },
        line: 738
      },
      "62": {
        name: "(anonymous_62)",
        decl: {
          start: {
            line: 740,
            column: 85
          },
          end: {
            line: 740,
            column: 86
          }
        },
        loc: {
          start: {
            line: 740,
            column: 90
          },
          end: {
            line: 740,
            column: 133
          }
        },
        line: 740
      },
      "63": {
        name: "(anonymous_63)",
        decl: {
          start: {
            line: 765,
            column: 138
          },
          end: {
            line: 765,
            column: 139
          }
        },
        loc: {
          start: {
            line: 765,
            column: 161
          },
          end: {
            line: 780,
            column: 84
          }
        },
        line: 765
      },
      "64": {
        name: "(anonymous_64)",
        decl: {
          start: {
            line: 767,
            column: 85
          },
          end: {
            line: 767,
            column: 86
          }
        },
        loc: {
          start: {
            line: 767,
            column: 90
          },
          end: {
            line: 767,
            column: 133
          }
        },
        line: 767
      },
      "65": {
        name: "(anonymous_65)",
        decl: {
          start: {
            line: 811,
            column: 51
          },
          end: {
            line: 811,
            column: 52
          }
        },
        loc: {
          start: {
            line: 811,
            column: 60
          },
          end: {
            line: 813,
            column: 37
          }
        },
        line: 811
      },
      "66": {
        name: "(anonymous_66)",
        decl: {
          start: {
            line: 853,
            column: 45
          },
          end: {
            line: 853,
            column: 46
          }
        },
        loc: {
          start: {
            line: 853,
            column: 49
          },
          end: {
            line: 853,
            column: 106
          }
        },
        line: 853
      },
      "67": {
        name: "(anonymous_67)",
        decl: {
          start: {
            line: 897,
            column: 70
          },
          end: {
            line: 897,
            column: 71
          }
        },
        loc: {
          start: {
            line: 897,
            column: 75
          },
          end: {
            line: 897,
            column: 103
          }
        },
        line: 897
      },
      "68": {
        name: "(anonymous_68)",
        decl: {
          start: {
            line: 936,
            column: 81
          },
          end: {
            line: 936,
            column: 82
          }
        },
        loc: {
          start: {
            line: 936,
            column: 89
          },
          end: {
            line: 936,
            column: 133
          }
        },
        line: 936
      },
      "69": {
        name: "(anonymous_69)",
        decl: {
          start: {
            line: 938,
            column: 85
          },
          end: {
            line: 938,
            column: 86
          }
        },
        loc: {
          start: {
            line: 938,
            column: 93
          },
          end: {
            line: 938,
            column: 137
          }
        },
        line: 938
      },
      "70": {
        name: "(anonymous_70)",
        decl: {
          start: {
            line: 938,
            column: 144
          },
          end: {
            line: 938,
            column: 145
          }
        },
        loc: {
          start: {
            line: 938,
            column: 152
          },
          end: {
            line: 938,
            column: 197
          }
        },
        line: 938
      },
      "71": {
        name: "(anonymous_71)",
        decl: {
          start: {
            line: 938,
            column: 203
          },
          end: {
            line: 938,
            column: 204
          }
        },
        loc: {
          start: {
            line: 938,
            column: 225
          },
          end: {
            line: 1009,
            column: 63
          }
        },
        line: 938
      },
      "72": {
        name: "(anonymous_72)",
        decl: {
          start: {
            line: 969,
            column: 98
          },
          end: {
            line: 969,
            column: 99
          }
        },
        loc: {
          start: {
            line: 969,
            column: 104
          },
          end: {
            line: 969,
            column: 152
          }
        },
        line: 969
      },
      "73": {
        name: "(anonymous_73)",
        decl: {
          start: {
            line: 969,
            column: 116
          },
          end: {
            line: 969,
            column: 117
          }
        },
        loc: {
          start: {
            line: 969,
            column: 121
          },
          end: {
            line: 969,
            column: 132
          }
        },
        line: 969
      },
      "74": {
        name: "(anonymous_74)",
        decl: {
          start: {
            line: 978,
            column: 123
          },
          end: {
            line: 978,
            column: 124
          }
        },
        loc: {
          start: {
            line: 978,
            column: 144
          },
          end: {
            line: 1002,
            column: 82
          }
        },
        line: 978
      },
      "75": {
        name: "(anonymous_75)",
        decl: {
          start: {
            line: 987,
            column: 142
          },
          end: {
            line: 987,
            column: 143
          }
        },
        loc: {
          start: {
            line: 987,
            column: 147
          },
          end: {
            line: 987,
            column: 168
          }
        },
        line: 987
      },
      "76": {
        name: "(anonymous_76)",
        decl: {
          start: {
            line: 1089,
            column: 106
          },
          end: {
            line: 1089,
            column: 107
          }
        },
        loc: {
          start: {
            line: 1089,
            column: 111
          },
          end: {
            line: 1089,
            column: 141
          }
        },
        line: 1089
      },
      "77": {
        name: "(anonymous_77)",
        decl: {
          start: {
            line: 1122,
            column: 119
          },
          end: {
            line: 1122,
            column: 120
          }
        },
        loc: {
          start: {
            line: 1122,
            column: 140
          },
          end: {
            line: 1125,
            column: 115
          }
        },
        line: 1122
      },
      "78": {
        name: "(anonymous_78)",
        decl: {
          start: {
            line: 1143,
            column: 111
          },
          end: {
            line: 1143,
            column: 112
          }
        },
        loc: {
          start: {
            line: 1143,
            column: 120
          },
          end: {
            line: 1143,
            column: 136
          }
        },
        line: 1143
      },
      "79": {
        name: "(anonymous_79)",
        decl: {
          start: {
            line: 1184,
            column: 116
          },
          end: {
            line: 1184,
            column: 117
          }
        },
        loc: {
          start: {
            line: 1184,
            column: 135
          },
          end: {
            line: 1218,
            column: 96
          }
        },
        line: 1184
      },
      "80": {
        name: "(anonymous_80)",
        decl: {
          start: {
            line: 1186,
            column: 101
          },
          end: {
            line: 1186,
            column: 102
          }
        },
        loc: {
          start: {
            line: 1186,
            column: 105
          },
          end: {
            line: 1189,
            column: 93
          }
        },
        line: 1186
      },
      "81": {
        name: "(anonymous_81)",
        decl: {
          start: {
            line: 1202,
            column: 127
          },
          end: {
            line: 1202,
            column: 128
          }
        },
        loc: {
          start: {
            line: 1202,
            column: 148
          },
          end: {
            line: 1206,
            column: 115
          }
        },
        line: 1202
      },
      "82": {
        name: "(anonymous_82)",
        decl: {
          start: {
            line: 1252,
            column: 113
          },
          end: {
            line: 1252,
            column: 114
          }
        },
        loc: {
          start: {
            line: 1252,
            column: 117
          },
          end: {
            line: 1252,
            column: 155
          }
        },
        line: 1252
      },
      "83": {
        name: "(anonymous_83)",
        decl: {
          start: {
            line: 1265,
            column: 113
          },
          end: {
            line: 1265,
            column: 114
          }
        },
        loc: {
          start: {
            line: 1265,
            column: 117
          },
          end: {
            line: 1268,
            column: 105
          }
        },
        line: 1265
      },
      "84": {
        name: "(anonymous_84)",
        decl: {
          start: {
            line: 1295,
            column: 114
          },
          end: {
            line: 1295,
            column: 115
          }
        },
        loc: {
          start: {
            line: 1295,
            column: 119
          },
          end: {
            line: 1295,
            column: 158
          }
        },
        line: 1295
      },
      "85": {
        name: "(anonymous_85)",
        decl: {
          start: {
            line: 1311,
            column: 114
          },
          end: {
            line: 1311,
            column: 115
          }
        },
        loc: {
          start: {
            line: 1311,
            column: 119
          },
          end: {
            line: 1311,
            column: 160
          }
        },
        line: 1311
      },
      "86": {
        name: "(anonymous_86)",
        decl: {
          start: {
            line: 1378,
            column: 90
          },
          end: {
            line: 1378,
            column: 91
          }
        },
        loc: {
          start: {
            line: 1378,
            column: 95
          },
          end: {
            line: 1378,
            column: 131
          }
        },
        line: 1378
      },
      "87": {
        name: "(anonymous_87)",
        decl: {
          start: {
            line: 1394,
            column: 90
          },
          end: {
            line: 1394,
            column: 91
          }
        },
        loc: {
          start: {
            line: 1394,
            column: 95
          },
          end: {
            line: 1394,
            column: 133
          }
        },
        line: 1394
      },
      "88": {
        name: "(anonymous_88)",
        decl: {
          start: {
            line: 1425,
            column: 87
          },
          end: {
            line: 1425,
            column: 88
          }
        },
        loc: {
          start: {
            line: 1425,
            column: 96
          },
          end: {
            line: 1425,
            column: 118
          }
        },
        line: 1425
      },
      "89": {
        name: "(anonymous_89)",
        decl: {
          start: {
            line: 1469,
            column: 98
          },
          end: {
            line: 1469,
            column: 99
          }
        },
        loc: {
          start: {
            line: 1469,
            column: 103
          },
          end: {
            line: 1469,
            column: 135
          }
        },
        line: 1469
      },
      "90": {
        name: "(anonymous_90)",
        decl: {
          start: {
            line: 1485,
            column: 103
          },
          end: {
            line: 1485,
            column: 104
          }
        },
        loc: {
          start: {
            line: 1485,
            column: 112
          },
          end: {
            line: 1485,
            column: 144
          }
        },
        line: 1485
      },
      "91": {
        name: "(anonymous_91)",
        decl: {
          start: {
            line: 1495,
            column: 167
          },
          end: {
            line: 1495,
            column: 168
          }
        },
        loc: {
          start: {
            line: 1495,
            column: 189
          },
          end: {
            line: 1502,
            column: 111
          }
        },
        line: 1495
      },
      "92": {
        name: "(anonymous_92)",
        decl: {
          start: {
            line: 1595,
            column: 131
          },
          end: {
            line: 1595,
            column: 132
          }
        },
        loc: {
          start: {
            line: 1595,
            column: 162
          },
          end: {
            line: 1631,
            column: 93
          }
        },
        line: 1595
      },
      "93": {
        name: "(anonymous_93)",
        decl: {
          start: {
            line: 1616,
            column: 122
          },
          end: {
            line: 1616,
            column: 123
          }
        },
        loc: {
          start: {
            line: 1616,
            column: 126
          },
          end: {
            line: 1616,
            column: 151
          }
        },
        line: 1616
      },
      "94": {
        name: "(anonymous_94)",
        decl: {
          start: {
            line: 1718,
            column: 70
          },
          end: {
            line: 1718,
            column: 71
          }
        },
        loc: {
          start: {
            line: 1718,
            column: 75
          },
          end: {
            line: 1718,
            column: 110
          }
        },
        line: 1718
      },
      "95": {
        name: "(anonymous_95)",
        decl: {
          start: {
            line: 1734,
            column: 70
          },
          end: {
            line: 1734,
            column: 71
          }
        },
        loc: {
          start: {
            line: 1734,
            column: 75
          },
          end: {
            line: 1734,
            column: 106
          }
        },
        line: 1734
      },
      "96": {
        name: "(anonymous_96)",
        decl: {
          start: {
            line: 1787,
            column: 86
          },
          end: {
            line: 1787,
            column: 87
          }
        },
        loc: {
          start: {
            line: 1787,
            column: 91
          },
          end: {
            line: 1787,
            column: 143
          }
        },
        line: 1787
      },
      "97": {
        name: "(anonymous_97)",
        decl: {
          start: {
            line: 1802,
            column: 86
          },
          end: {
            line: 1802,
            column: 87
          }
        },
        loc: {
          start: {
            line: 1802,
            column: 91
          },
          end: {
            line: 1802,
            column: 140
          }
        },
        line: 1802
      },
      "98": {
        name: "(anonymous_98)",
        decl: {
          start: {
            line: 1817,
            column: 86
          },
          end: {
            line: 1817,
            column: 87
          }
        },
        loc: {
          start: {
            line: 1817,
            column: 91
          },
          end: {
            line: 1817,
            column: 144
          }
        },
        line: 1817
      },
      "99": {
        name: "(anonymous_99)",
        decl: {
          start: {
            line: 1832,
            column: 86
          },
          end: {
            line: 1832,
            column: 87
          }
        },
        loc: {
          start: {
            line: 1832,
            column: 91
          },
          end: {
            line: 1832,
            column: 136
          }
        },
        line: 1832
      },
      "100": {
        name: "(anonymous_100)",
        decl: {
          start: {
            line: 1847,
            column: 86
          },
          end: {
            line: 1847,
            column: 87
          }
        },
        loc: {
          start: {
            line: 1847,
            column: 91
          },
          end: {
            line: 1847,
            column: 143
          }
        },
        line: 1847
      },
      "101": {
        name: "(anonymous_101)",
        decl: {
          start: {
            line: 1862,
            column: 86
          },
          end: {
            line: 1862,
            column: 87
          }
        },
        loc: {
          start: {
            line: 1862,
            column: 91
          },
          end: {
            line: 1862,
            column: 146
          }
        },
        line: 1862
      },
      "102": {
        name: "(anonymous_102)",
        decl: {
          start: {
            line: 1891,
            column: 86
          },
          end: {
            line: 1891,
            column: 87
          }
        },
        loc: {
          start: {
            line: 1891,
            column: 91
          },
          end: {
            line: 1891,
            column: 144
          }
        },
        line: 1891
      },
      "103": {
        name: "(anonymous_103)",
        decl: {
          start: {
            line: 1906,
            column: 86
          },
          end: {
            line: 1906,
            column: 87
          }
        },
        loc: {
          start: {
            line: 1906,
            column: 91
          },
          end: {
            line: 1906,
            column: 146
          }
        },
        line: 1906
      },
      "104": {
        name: "(anonymous_104)",
        decl: {
          start: {
            line: 1921,
            column: 86
          },
          end: {
            line: 1921,
            column: 87
          }
        },
        loc: {
          start: {
            line: 1921,
            column: 91
          },
          end: {
            line: 1921,
            column: 140
          }
        },
        line: 1921
      },
      "105": {
        name: "(anonymous_105)",
        decl: {
          start: {
            line: 1936,
            column: 86
          },
          end: {
            line: 1936,
            column: 87
          }
        },
        loc: {
          start: {
            line: 1936,
            column: 91
          },
          end: {
            line: 1936,
            column: 142
          }
        },
        line: 1936
      },
      "106": {
        name: "(anonymous_106)",
        decl: {
          start: {
            line: 1965,
            column: 86
          },
          end: {
            line: 1965,
            column: 87
          }
        },
        loc: {
          start: {
            line: 1965,
            column: 91
          },
          end: {
            line: 1965,
            column: 139
          }
        },
        line: 1965
      },
      "107": {
        name: "(anonymous_107)",
        decl: {
          start: {
            line: 1980,
            column: 86
          },
          end: {
            line: 1980,
            column: 87
          }
        },
        loc: {
          start: {
            line: 1980,
            column: 91
          },
          end: {
            line: 1980,
            column: 148
          }
        },
        line: 1980
      },
      "108": {
        name: "(anonymous_108)",
        decl: {
          start: {
            line: 1995,
            column: 86
          },
          end: {
            line: 1995,
            column: 87
          }
        },
        loc: {
          start: {
            line: 1995,
            column: 91
          },
          end: {
            line: 1995,
            column: 141
          }
        },
        line: 1995
      },
      "109": {
        name: "(anonymous_109)",
        decl: {
          start: {
            line: 2010,
            column: 86
          },
          end: {
            line: 2010,
            column: 87
          }
        },
        loc: {
          start: {
            line: 2010,
            column: 91
          },
          end: {
            line: 2010,
            column: 146
          }
        },
        line: 2010
      },
      "110": {
        name: "(anonymous_110)",
        decl: {
          start: {
            line: 2039,
            column: 86
          },
          end: {
            line: 2039,
            column: 87
          }
        },
        loc: {
          start: {
            line: 2039,
            column: 91
          },
          end: {
            line: 2039,
            column: 140
          }
        },
        line: 2039
      },
      "111": {
        name: "(anonymous_111)",
        decl: {
          start: {
            line: 2054,
            column: 86
          },
          end: {
            line: 2054,
            column: 87
          }
        },
        loc: {
          start: {
            line: 2054,
            column: 91
          },
          end: {
            line: 2054,
            column: 144
          }
        },
        line: 2054
      },
      "112": {
        name: "(anonymous_112)",
        decl: {
          start: {
            line: 2069,
            column: 86
          },
          end: {
            line: 2069,
            column: 87
          }
        },
        loc: {
          start: {
            line: 2069,
            column: 91
          },
          end: {
            line: 2069,
            column: 142
          }
        },
        line: 2069
      },
      "113": {
        name: "(anonymous_113)",
        decl: {
          start: {
            line: 2084,
            column: 86
          },
          end: {
            line: 2084,
            column: 87
          }
        },
        loc: {
          start: {
            line: 2084,
            column: 91
          },
          end: {
            line: 2084,
            column: 143
          }
        },
        line: 2084
      },
      "114": {
        name: "(anonymous_114)",
        decl: {
          start: {
            line: 2113,
            column: 86
          },
          end: {
            line: 2113,
            column: 87
          }
        },
        loc: {
          start: {
            line: 2113,
            column: 91
          },
          end: {
            line: 2113,
            column: 141
          }
        },
        line: 2113
      },
      "115": {
        name: "(anonymous_115)",
        decl: {
          start: {
            line: 2128,
            column: 86
          },
          end: {
            line: 2128,
            column: 87
          }
        },
        loc: {
          start: {
            line: 2128,
            column: 91
          },
          end: {
            line: 2128,
            column: 148
          }
        },
        line: 2128
      },
      "116": {
        name: "(anonymous_116)",
        decl: {
          start: {
            line: 2143,
            column: 86
          },
          end: {
            line: 2143,
            column: 87
          }
        },
        loc: {
          start: {
            line: 2143,
            column: 91
          },
          end: {
            line: 2143,
            column: 149
          }
        },
        line: 2143
      },
      "117": {
        name: "(anonymous_117)",
        decl: {
          start: {
            line: 2203,
            column: 53
          },
          end: {
            line: 2203,
            column: 54
          }
        },
        loc: {
          start: {
            line: 2203,
            column: 57
          },
          end: {
            line: 2203,
            column: 85
          }
        },
        line: 2203
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 58,
            column: 137
          },
          end: {
            line: 58,
            column: 165
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 58,
            column: 161
          },
          end: {
            line: 58,
            column: 165
          }
        }],
        line: 58
      },
      "1": {
        loc: {
          start: {
            line: 58,
            column: 167
          },
          end: {
            line: 58,
            column: 204
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 58,
            column: 198
          },
          end: {
            line: 58,
            column: 204
          }
        }],
        line: 58
      },
      "2": {
        loc: {
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "3": {
        loc: {
          start: {
            line: 105,
            column: 12
          },
          end: {
            line: 107,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 12
          },
          end: {
            line: 107,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "4": {
        loc: {
          start: {
            line: 105,
            column: 16
          },
          end: {
            line: 105,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 105,
            column: 16
          },
          end: {
            line: 105,
            column: 53
          }
        }, {
          start: {
            line: 105,
            column: 57
          },
          end: {
            line: 105,
            column: 104
          }
        }],
        line: 105
      },
      "5": {
        loc: {
          start: {
            line: 113,
            column: 31
          },
          end: {
            line: 113,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 31
          },
          end: {
            line: 113,
            column: 60
          }
        }, {
          start: {
            line: 113,
            column: 64
          },
          end: {
            line: 113,
            column: 86
          }
        }],
        line: 113
      },
      "6": {
        loc: {
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "7": {
        loc: {
          start: {
            line: 124,
            column: 12
          },
          end: {
            line: 124,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 12
          },
          end: {
            line: 124,
            column: 48
          }
        }, {
          start: {
            line: 124,
            column: 52
          },
          end: {
            line: 124,
            column: 65
          }
        }],
        line: 124
      },
      "8": {
        loc: {
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 135,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 135,
            column: 13
          }
        }, {
          start: {
            line: 130,
            column: 19
          },
          end: {
            line: 135,
            column: 13
          }
        }],
        line: 128
      },
      "9": {
        loc: {
          start: {
            line: 130,
            column: 19
          },
          end: {
            line: 135,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 19
          },
          end: {
            line: 135,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "10": {
        loc: {
          start: {
            line: 132,
            column: 16
          },
          end: {
            line: 134,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 16
          },
          end: {
            line: 134,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "11": {
        loc: {
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "12": {
        loc: {
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "13": {
        loc: {
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 161,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 161,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "14": {
        loc: {
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 172,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 172,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "15": {
        loc: {
          start: {
            line: 177,
            column: 8
          },
          end: {
            line: 180,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 177,
            column: 8
          },
          end: {
            line: 180,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 177
      },
      "16": {
        loc: {
          start: {
            line: 179,
            column: 48
          },
          end: {
            line: 179,
            column: 136
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 179,
            column: 48
          },
          end: {
            line: 179,
            column: 89
          }
        }, {
          start: {
            line: 179,
            column: 93
          },
          end: {
            line: 179,
            column: 136
          }
        }],
        line: 179
      },
      "17": {
        loc: {
          start: {
            line: 182,
            column: 8
          },
          end: {
            line: 184,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 8
          },
          end: {
            line: 184,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 182
      },
      "18": {
        loc: {
          start: {
            line: 182,
            column: 12
          },
          end: {
            line: 182,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 182,
            column: 12
          },
          end: {
            line: 182,
            column: 23
          }
        }, {
          start: {
            line: 182,
            column: 27
          },
          end: {
            line: 182,
            column: 53
          }
        }],
        line: 182
      },
      "19": {
        loc: {
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 196,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 187,
            column: 12
          },
          end: {
            line: 189,
            column: 22
          }
        }, {
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 192,
            column: 22
          }
        }, {
          start: {
            line: 193,
            column: 12
          },
          end: {
            line: 195,
            column: 22
          }
        }],
        line: 186
      },
      "20": {
        loc: {
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 206,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 206,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 206
      },
      "21": {
        loc: {
          start: {
            line: 213,
            column: 8
          },
          end: {
            line: 213,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 8
          },
          end: {
            line: 213,
            column: 35
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 213
      },
      "22": {
        loc: {
          start: {
            line: 224,
            column: 8
          },
          end: {
            line: 224,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 8
          },
          end: {
            line: 224,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 224
      },
      "23": {
        loc: {
          start: {
            line: 224,
            column: 12
          },
          end: {
            line: 224,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 224,
            column: 12
          },
          end: {
            line: 224,
            column: 26
          }
        }, {
          start: {
            line: 224,
            column: 30
          },
          end: {
            line: 224,
            column: 55
          }
        }, {
          start: {
            line: 224,
            column: 59
          },
          end: {
            line: 224,
            column: 86
          }
        }],
        line: 224
      },
      "24": {
        loc: {
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 251,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 251,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 243
      },
      "25": {
        loc: {
          start: {
            line: 253,
            column: 35
          },
          end: {
            line: 253,
            column: 274
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 253,
            column: 60
          },
          end: {
            line: 253,
            column: 128
          }
        }, {
          start: {
            line: 253,
            column: 131
          },
          end: {
            line: 253,
            column: 274
          }
        }],
        line: 253
      },
      "26": {
        loc: {
          start: {
            line: 254,
            column: 8
          },
          end: {
            line: 262,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 254,
            column: 8
          },
          end: {
            line: 262,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 254
      },
      "27": {
        loc: {
          start: {
            line: 270,
            column: 35
          },
          end: {
            line: 270,
            column: 128
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 270,
            column: 61
          },
          end: {
            line: 270,
            column: 67
          }
        }, {
          start: {
            line: 270,
            column: 70
          },
          end: {
            line: 270,
            column: 128
          }
        }],
        line: 270
      },
      "28": {
        loc: {
          start: {
            line: 270,
            column: 70
          },
          end: {
            line: 270,
            column: 128
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 270,
            column: 70
          },
          end: {
            line: 270,
            column: 115
          }
        }, {
          start: {
            line: 270,
            column: 119
          },
          end: {
            line: 270,
            column: 128
          }
        }],
        line: 270
      },
      "29": {
        loc: {
          start: {
            line: 279,
            column: 16
          },
          end: {
            line: 281,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 279,
            column: 16
          },
          end: {
            line: 281,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 279
      },
      "30": {
        loc: {
          start: {
            line: 340,
            column: 20
          },
          end: {
            line: 351,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 340,
            column: 20
          },
          end: {
            line: 351,
            column: 21
          }
        }, {
          start: {
            line: 349,
            column: 27
          },
          end: {
            line: 351,
            column: 21
          }
        }],
        line: 340
      },
      "31": {
        loc: {
          start: {
            line: 340,
            column: 24
          },
          end: {
            line: 340,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 340,
            column: 24
          },
          end: {
            line: 340,
            column: 31
          }
        }, {
          start: {
            line: 340,
            column: 35
          },
          end: {
            line: 340,
            column: 53
          }
        }],
        line: 340
      },
      "32": {
        loc: {
          start: {
            line: 376,
            column: 29
          },
          end: {
            line: 376,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 376,
            column: 54
          },
          end: {
            line: 376,
            column: 67
          }
        }, {
          start: {
            line: 376,
            column: 70
          },
          end: {
            line: 376,
            column: 97
          }
        }],
        line: 376
      },
      "33": {
        loc: {
          start: {
            line: 387,
            column: 58
          },
          end: {
            line: 390,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 387,
            column: 72
          },
          end: {
            line: 390,
            column: 17
          }
        }, {
          start: {
            line: 390,
            column: 20
          },
          end: {
            line: 390,
            column: 26
          }
        }],
        line: 387
      },
      "34": {
        loc: {
          start: {
            line: 389,
            column: 30
          },
          end: {
            line: 389,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 389,
            column: 58
          },
          end: {
            line: 389,
            column: 62
          }
        }, {
          start: {
            line: 389,
            column: 65
          },
          end: {
            line: 389,
            column: 70
          }
        }],
        line: 389
      },
      "35": {
        loc: {
          start: {
            line: 394,
            column: 8
          },
          end: {
            line: 394,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 394,
            column: 8
          },
          end: {
            line: 394,
            column: 35
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 394
      },
      "36": {
        loc: {
          start: {
            line: 397,
            column: 8
          },
          end: {
            line: 405,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 397,
            column: 8
          },
          end: {
            line: 405,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 397
      },
      "37": {
        loc: {
          start: {
            line: 436,
            column: 29
          },
          end: {
            line: 436,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 436,
            column: 54
          },
          end: {
            line: 436,
            column: 67
          }
        }, {
          start: {
            line: 436,
            column: 70
          },
          end: {
            line: 436,
            column: 97
          }
        }],
        line: 436
      },
      "38": {
        loc: {
          start: {
            line: 443,
            column: 8
          },
          end: {
            line: 443,
            column: 57
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 443,
            column: 8
          },
          end: {
            line: 443,
            column: 57
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 443
      },
      "39": {
        loc: {
          start: {
            line: 443,
            column: 12
          },
          end: {
            line: 443,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 443,
            column: 12
          },
          end: {
            line: 443,
            column: 26
          }
        }, {
          start: {
            line: 443,
            column: 30
          },
          end: {
            line: 443,
            column: 48
          }
        }],
        line: 443
      },
      "40": {
        loc: {
          start: {
            line: 468,
            column: 8
          },
          end: {
            line: 468,
            column: 57
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 468,
            column: 8
          },
          end: {
            line: 468,
            column: 57
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 468
      },
      "41": {
        loc: {
          start: {
            line: 468,
            column: 12
          },
          end: {
            line: 468,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 468,
            column: 12
          },
          end: {
            line: 468,
            column: 26
          }
        }, {
          start: {
            line: 468,
            column: 30
          },
          end: {
            line: 468,
            column: 48
          }
        }],
        line: 468
      },
      "42": {
        loc: {
          start: {
            line: 472,
            column: 8
          },
          end: {
            line: 474,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 472,
            column: 8
          },
          end: {
            line: 474,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 472
      },
      "43": {
        loc: {
          start: {
            line: 486,
            column: 8
          },
          end: {
            line: 512,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 486,
            column: 8
          },
          end: {
            line: 512,
            column: 9
          }
        }, {
          start: {
            line: 503,
            column: 15
          },
          end: {
            line: 512,
            column: 9
          }
        }],
        line: 486
      },
      "44": {
        loc: {
          start: {
            line: 489,
            column: 12
          },
          end: {
            line: 502,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 489,
            column: 12
          },
          end: {
            line: 502,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 489
      },
      "45": {
        loc: {
          start: {
            line: 493,
            column: 16
          },
          end: {
            line: 498,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 493,
            column: 16
          },
          end: {
            line: 498,
            column: 17
          }
        }, {
          start: {
            line: 495,
            column: 23
          },
          end: {
            line: 498,
            column: 17
          }
        }],
        line: 493
      },
      "46": {
        loc: {
          start: {
            line: 493,
            column: 20
          },
          end: {
            line: 493,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 493,
            column: 20
          },
          end: {
            line: 493,
            column: 33
          }
        }, {
          start: {
            line: 493,
            column: 37
          },
          end: {
            line: 493,
            column: 67
          }
        }],
        line: 493
      },
      "47": {
        loc: {
          start: {
            line: 495,
            column: 23
          },
          end: {
            line: 498,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 495,
            column: 23
          },
          end: {
            line: 498,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 495
      },
      "48": {
        loc: {
          start: {
            line: 503,
            column: 15
          },
          end: {
            line: 512,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 503,
            column: 15
          },
          end: {
            line: 512,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 503
      },
      "49": {
        loc: {
          start: {
            line: 509,
            column: 12
          },
          end: {
            line: 511,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 509,
            column: 12
          },
          end: {
            line: 511,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 509
      },
      "50": {
        loc: {
          start: {
            line: 509,
            column: 16
          },
          end: {
            line: 509,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 509,
            column: 16
          },
          end: {
            line: 509,
            column: 29
          }
        }, {
          start: {
            line: 509,
            column: 33
          },
          end: {
            line: 509,
            column: 63
          }
        }],
        line: 509
      },
      "51": {
        loc: {
          start: {
            line: 521,
            column: 8
          },
          end: {
            line: 526,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 521,
            column: 8
          },
          end: {
            line: 526,
            column: 9
          }
        }, {
          start: {
            line: 523,
            column: 15
          },
          end: {
            line: 526,
            column: 9
          }
        }],
        line: 521
      },
      "52": {
        loc: {
          start: {
            line: 521,
            column: 12
          },
          end: {
            line: 521,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 521,
            column: 12
          },
          end: {
            line: 521,
            column: 25
          }
        }, {
          start: {
            line: 521,
            column: 29
          },
          end: {
            line: 521,
            column: 59
          }
        }],
        line: 521
      },
      "53": {
        loc: {
          start: {
            line: 523,
            column: 15
          },
          end: {
            line: 526,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 523,
            column: 15
          },
          end: {
            line: 526,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 523
      },
      "54": {
        loc: {
          start: {
            line: 534,
            column: 8
          },
          end: {
            line: 534,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 534,
            column: 8
          },
          end: {
            line: 534,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 534
      },
      "55": {
        loc: {
          start: {
            line: 536,
            column: 12
          },
          end: {
            line: 541,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 536,
            column: 12
          },
          end: {
            line: 541,
            column: 13
          }
        }, {
          start: {
            line: 539,
            column: 19
          },
          end: {
            line: 541,
            column: 13
          }
        }],
        line: 536
      },
      "56": {
        loc: {
          start: {
            line: 539,
            column: 19
          },
          end: {
            line: 541,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 539,
            column: 19
          },
          end: {
            line: 541,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 539
      },
      "57": {
        loc: {
          start: {
            line: 566,
            column: 8
          },
          end: {
            line: 574,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 566,
            column: 8
          },
          end: {
            line: 574,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 566
      },
      "58": {
        loc: {
          start: {
            line: 566,
            column: 12
          },
          end: {
            line: 566,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 566,
            column: 12
          },
          end: {
            line: 566,
            column: 26
          }
        }, {
          start: {
            line: 566,
            column: 30
          },
          end: {
            line: 566,
            column: 50
          }
        }],
        line: 566
      },
      "59": {
        loc: {
          start: {
            line: 588,
            column: 33
          },
          end: {
            line: 588,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 588,
            column: 58
          },
          end: {
            line: 588,
            column: 71
          }
        }, {
          start: {
            line: 588,
            column: 74
          },
          end: {
            line: 588,
            column: 101
          }
        }],
        line: 588
      },
      "60": {
        loc: {
          start: {
            line: 602,
            column: 8
          },
          end: {
            line: 609,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 602,
            column: 8
          },
          end: {
            line: 609,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 602
      },
      "61": {
        loc: {
          start: {
            line: 604,
            column: 12
          },
          end: {
            line: 608,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 604,
            column: 12
          },
          end: {
            line: 608,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 604
      },
      "62": {
        loc: {
          start: {
            line: 624,
            column: 8
          },
          end: {
            line: 624,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 624,
            column: 8
          },
          end: {
            line: 624,
            column: 35
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 624
      },
      "63": {
        loc: {
          start: {
            line: 652,
            column: 12
          },
          end: {
            line: 2178,
            column: 14
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 652,
            column: 87
          },
          end: {
            line: 801,
            column: 14
          }
        }, {
          start: {
            line: 801,
            column: 17
          },
          end: {
            line: 2178,
            column: 14
          }
        }],
        line: 652
      },
      "64": {
        loc: {
          start: {
            line: 652,
            column: 12
          },
          end: {
            line: 652,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 652,
            column: 12
          },
          end: {
            line: 652,
            column: 33
          }
        }, {
          start: {
            line: 652,
            column: 37
          },
          end: {
            line: 652,
            column: 70
          }
        }],
        line: 652
      },
      "65": {
        loc: {
          start: {
            line: 677,
            column: 36
          },
          end: {
            line: 677,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 677,
            column: 77
          },
          end: {
            line: 677,
            column: 94
          }
        }, {
          start: {
            line: 677,
            column: 97
          },
          end: {
            line: 677,
            column: 102
          }
        }],
        line: 677
      },
      "66": {
        loc: {
          start: {
            line: 696,
            column: 44
          },
          end: {
            line: 696,
            column: 142
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 696,
            column: 85
          },
          end: {
            line: 696,
            column: 101
          }
        }, {
          start: {
            line: 696,
            column: 104
          },
          end: {
            line: 696,
            column: 142
          }
        }],
        line: 696
      },
      "67": {
        loc: {
          start: {
            line: 704,
            column: 50
          },
          end: {
            line: 794,
            column: 42
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 704,
            column: 105
          },
          end: {
            line: 786,
            column: 42
          }
        }, {
          start: {
            line: 786,
            column: 59
          },
          end: {
            line: 794,
            column: 42
          }
        }],
        line: 704
      },
      "68": {
        loc: {
          start: {
            line: 725,
            column: 56
          },
          end: {
            line: 783,
            column: 58
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 725,
            column: 109
          },
          end: {
            line: 752,
            column: 58
          }
        }, {
          start: {
            line: 752,
            column: 75
          },
          end: {
            line: 783,
            column: 58
          }
        }],
        line: 725
      },
      "69": {
        loc: {
          start: {
            line: 791,
            column: 48
          },
          end: {
            line: 791,
            column: 114
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 791,
            column: 89
          },
          end: {
            line: 791,
            column: 106
          }
        }, {
          start: {
            line: 791,
            column: 109
          },
          end: {
            line: 791,
            column: 114
          }
        }],
        line: 791
      },
      "70": {
        loc: {
          start: {
            line: 801,
            column: 17
          },
          end: {
            line: 2178,
            column: 14
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 801,
            column: 47
          },
          end: {
            line: 2175,
            column: 14
          }
        }, {
          start: {
            line: 2175,
            column: 31
          },
          end: {
            line: 2178,
            column: 14
          }
        }],
        line: 801
      },
      "71": {
        loc: {
          start: {
            line: 852,
            column: 32
          },
          end: {
            line: 863,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 852,
            column: 32
          },
          end: {
            line: 852,
            column: 45
          }
        }, {
          start: {
            line: 852,
            column: 63
          },
          end: {
            line: 863,
            column: 34
          }
        }],
        line: 852
      },
      "72": {
        loc: {
          start: {
            line: 870,
            column: 28
          },
          end: {
            line: 918,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 870,
            column: 28
          },
          end: {
            line: 870,
            column: 56
          }
        }, {
          start: {
            line: 870,
            column: 74
          },
          end: {
            line: 918,
            column: 30
          }
        }],
        line: 870
      },
      "73": {
        loc: {
          start: {
            line: 919,
            column: 28
          },
          end: {
            line: 1017,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 919,
            column: 28
          },
          end: {
            line: 919,
            column: 60
          }
        }, {
          start: {
            line: 919,
            column: 78
          },
          end: {
            line: 1017,
            column: 30
          }
        }],
        line: 919
      },
      "74": {
        loc: {
          start: {
            line: 936,
            column: 54
          },
          end: {
            line: 1013,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 936,
            column: 162
          },
          end: {
            line: 1010,
            column: 46
          }
        }, {
          start: {
            line: 1010,
            column: 63
          },
          end: {
            line: 1013,
            column: 46
          }
        }],
        line: 936
      },
      "75": {
        loc: {
          start: {
            line: 969,
            column: 104
          },
          end: {
            line: 969,
            column: 152
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 969,
            column: 104
          },
          end: {
            line: 969,
            column: 139
          }
        }, {
          start: {
            line: 969,
            column: 143
          },
          end: {
            line: 969,
            column: 152
          }
        }],
        line: 969
      },
      "76": {
        loc: {
          start: {
            line: 978,
            column: 78
          },
          end: {
            line: 1005,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 978,
            column: 105
          },
          end: {
            line: 1002,
            column: 83
          }
        }, {
          start: {
            line: 1002,
            column: 100
          },
          end: {
            line: 1005,
            column: 70
          }
        }],
        line: 978
      },
      "77": {
        loc: {
          start: {
            line: 987,
            column: 96
          },
          end: {
            line: 987,
            column: 188
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 987,
            column: 122
          },
          end: {
            line: 987,
            column: 127
          }
        }, {
          start: {
            line: 987,
            column: 130
          },
          end: {
            line: 987,
            column: 188
          }
        }],
        line: 987
      },
      "78": {
        loc: {
          start: {
            line: 987,
            column: 130
          },
          end: {
            line: 987,
            column: 188
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 987,
            column: 130
          },
          end: {
            line: 987,
            column: 175
          }
        }, {
          start: {
            line: 987,
            column: 179
          },
          end: {
            line: 987,
            column: 188
          }
        }],
        line: 987
      },
      "79": {
        loc: {
          start: {
            line: 1018,
            column: 28
          },
          end: {
            line: 1693,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1018,
            column: 28
          },
          end: {
            line: 1018,
            column: 56
          }
        }, {
          start: {
            line: 1018,
            column: 74
          },
          end: {
            line: 1693,
            column: 30
          }
        }],
        line: 1018
      },
      "80": {
        loc: {
          start: {
            line: 1068,
            column: 56
          },
          end: {
            line: 1361,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1068,
            column: 56
          },
          end: {
            line: 1068,
            column: 81
          }
        }, {
          start: {
            line: 1068,
            column: 99
          },
          end: {
            line: 1361,
            column: 58
          }
        }],
        line: 1068
      },
      "81": {
        loc: {
          start: {
            line: 1092,
            column: 92
          },
          end: {
            line: 1100,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1092,
            column: 93
          },
          end: {
            line: 1092,
            column: 104
          }
        }, {
          start: {
            line: 1092,
            column: 108
          },
          end: {
            line: 1092,
            column: 119
          }
        }, {
          start: {
            line: 1092,
            column: 123
          },
          end: {
            line: 1092,
            column: 142
          }
        }, {
          start: {
            line: 1092,
            column: 161
          },
          end: {
            line: 1100,
            column: 94
          }
        }],
        line: 1092
      },
      "82": {
        loc: {
          start: {
            line: 1105,
            column: 98
          },
          end: {
            line: 1129,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1105,
            column: 98
          },
          end: {
            line: 1105,
            column: 119
          }
        }, {
          start: {
            line: 1105,
            column: 137
          },
          end: {
            line: 1129,
            column: 90
          }
        }],
        line: 1105
      },
      "83": {
        loc: {
          start: {
            line: 1182,
            column: 90
          },
          end: {
            line: 1222,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1182,
            column: 135
          },
          end: {
            line: 1219,
            column: 82
          }
        }, {
          start: {
            line: 1219,
            column: 99
          },
          end: {
            line: 1222,
            column: 82
          }
        }],
        line: 1182
      },
      "84": {
        loc: {
          start: {
            line: 1185,
            column: 140
          },
          end: {
            line: 1185,
            column: 236
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1185,
            column: 173
          },
          end: {
            line: 1185,
            column: 203
          }
        }, {
          start: {
            line: 1185,
            column: 206
          },
          end: {
            line: 1185,
            column: 236
          }
        }],
        line: 1185
      },
      "85": {
        loc: {
          start: {
            line: 1199,
            column: 96
          },
          end: {
            line: 1216,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1199,
            column: 96
          },
          end: {
            line: 1199,
            column: 113
          }
        }, {
          start: {
            line: 1199,
            column: 131
          },
          end: {
            line: 1216,
            column: 98
          }
        }],
        line: 1199
      },
      "86": {
        loc: {
          start: {
            line: 1207,
            column: 104
          },
          end: {
            line: 1214,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1207,
            column: 104
          },
          end: {
            line: 1207,
            column: 121
          }
        }, {
          start: {
            line: 1207,
            column: 139
          },
          end: {
            line: 1214,
            column: 106
          }
        }],
        line: 1207
      },
      "87": {
        loc: {
          start: {
            line: 1221,
            column: 94
          },
          end: {
            line: 1221,
            column: 199
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1221,
            column: 131
          },
          end: {
            line: 1221,
            column: 169
          }
        }, {
          start: {
            line: 1221,
            column: 172
          },
          end: {
            line: 1221,
            column: 199
          }
        }],
        line: 1221
      },
      "88": {
        loc: {
          start: {
            line: 1236,
            column: 86
          },
          end: {
            line: 1356,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1236,
            column: 120
          },
          end: {
            line: 1353,
            column: 78
          }
        }, {
          start: {
            line: 1353,
            column: 95
          },
          end: {
            line: 1356,
            column: 78
          }
        }],
        line: 1236
      },
      "89": {
        loc: {
          start: {
            line: 1259,
            column: 108
          },
          end: {
            line: 1259,
            column: 144
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1259,
            column: 127
          },
          end: {
            line: 1259,
            column: 135
          }
        }, {
          start: {
            line: 1259,
            column: 138
          },
          end: {
            line: 1259,
            column: 144
          }
        }],
        line: 1259
      },
      "90": {
        loc: {
          start: {
            line: 1281,
            column: 84
          },
          end: {
            line: 1351,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1281,
            column: 117
          },
          end: {
            line: 1333,
            column: 86
          }
        }, {
          start: {
            line: 1333,
            column: 103
          },
          end: {
            line: 1351,
            column: 86
          }
        }],
        line: 1281
      },
      "91": {
        loc: {
          start: {
            line: 1362,
            column: 56
          },
          end: {
            line: 1417,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1362,
            column: 56
          },
          end: {
            line: 1362,
            column: 78
          }
        }, {
          start: {
            line: 1362,
            column: 96
          },
          end: {
            line: 1417,
            column: 58
          }
        }],
        line: 1362
      },
      "92": {
        loc: {
          start: {
            line: 1418,
            column: 56
          },
          end: {
            line: 1686,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1418,
            column: 56
          },
          end: {
            line: 1418,
            column: 84
          }
        }, {
          start: {
            line: 1418,
            column: 102
          },
          end: {
            line: 1686,
            column: 58
          }
        }],
        line: 1418
      },
      "93": {
        loc: {
          start: {
            line: 1453,
            column: 64
          },
          end: {
            line: 1534,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1453,
            column: 64
          },
          end: {
            line: 1453,
            column: 89
          }
        }, {
          start: {
            line: 1453,
            column: 107
          },
          end: {
            line: 1534,
            column: 66
          }
        }],
        line: 1453
      },
      "94": {
        loc: {
          start: {
            line: 1484,
            column: 95
          },
          end: {
            line: 1484,
            column: 130
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1484,
            column: 95
          },
          end: {
            line: 1484,
            column: 117
          }
        }, {
          start: {
            line: 1484,
            column: 121
          },
          end: {
            line: 1484,
            column: 130
          }
        }],
        line: 1484
      },
      "95": {
        loc: {
          start: {
            line: 1495,
            column: 106
          },
          end: {
            line: 1506,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1495,
            column: 141
          },
          end: {
            line: 1502,
            column: 112
          }
        }, {
          start: {
            line: 1502,
            column: 129
          },
          end: {
            line: 1506,
            column: 98
          }
        }],
        line: 1495
      },
      "96": {
        loc: {
          start: {
            line: 1516,
            column: 90
          },
          end: {
            line: 1530,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1516,
            column: 126
          },
          end: {
            line: 1522,
            column: 82
          }
        }, {
          start: {
            line: 1522,
            column: 99
          },
          end: {
            line: 1530,
            column: 82
          }
        }],
        line: 1516
      },
      "97": {
        loc: {
          start: {
            line: 1535,
            column: 64
          },
          end: {
            line: 1644,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1535,
            column: 64
          },
          end: {
            line: 1535,
            column: 90
          }
        }, {
          start: {
            line: 1535,
            column: 108
          },
          end: {
            line: 1644,
            column: 66
          }
        }],
        line: 1535
      },
      "98": {
        loc: {
          start: {
            line: 1538,
            column: 72
          },
          end: {
            line: 1541,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1538,
            column: 72
          },
          end: {
            line: 1538,
            column: 97
          }
        }, {
          start: {
            line: 1538,
            column: 115
          },
          end: {
            line: 1541,
            column: 74
          }
        }],
        line: 1538
      },
      "99": {
        loc: {
          start: {
            line: 1542,
            column: 72
          },
          end: {
            line: 1566,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1542,
            column: 72
          },
          end: {
            line: 1542,
            column: 103
          }
        }, {
          start: {
            line: 1542,
            column: 121
          },
          end: {
            line: 1566,
            column: 74
          }
        }],
        line: 1542
      },
      "100": {
        loc: {
          start: {
            line: 1567,
            column: 72
          },
          end: {
            line: 1591,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1567,
            column: 72
          },
          end: {
            line: 1567,
            column: 101
          }
        }, {
          start: {
            line: 1567,
            column: 119
          },
          end: {
            line: 1591,
            column: 74
          }
        }],
        line: 1567
      },
      "101": {
        loc: {
          start: {
            line: 1592,
            column: 72
          },
          end: {
            line: 1642,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1592,
            column: 72
          },
          end: {
            line: 1592,
            column: 101
          }
        }, {
          start: {
            line: 1592,
            column: 119
          },
          end: {
            line: 1642,
            column: 74
          }
        }],
        line: 1592
      },
      "102": {
        loc: {
          start: {
            line: 1595,
            column: 80
          },
          end: {
            line: 1634,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1595,
            column: 110
          },
          end: {
            line: 1631,
            column: 94
          }
        }, {
          start: {
            line: 1631,
            column: 111
          },
          end: {
            line: 1634,
            column: 82
          }
        }],
        line: 1595
      },
      "103": {
        loc: {
          start: {
            line: 1605,
            column: 108
          },
          end: {
            line: 1605,
            column: 141
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1605,
            column: 108
          },
          end: {
            line: 1605,
            column: 120
          }
        }, {
          start: {
            line: 1605,
            column: 124
          },
          end: {
            line: 1605,
            column: 141
          }
        }],
        line: 1605
      },
      "104": {
        loc: {
          start: {
            line: 1606,
            column: 108
          },
          end: {
            line: 1606,
            column: 161
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1606,
            column: 151
          },
          end: {
            line: 1606,
            column: 156
          }
        }, {
          start: {
            line: 1606,
            column: 159
          },
          end: {
            line: 1606,
            column: 161
          }
        }],
        line: 1606
      },
      "105": {
        loc: {
          start: {
            line: 1606,
            column: 108
          },
          end: {
            line: 1606,
            column: 148
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1606,
            column: 108
          },
          end: {
            line: 1606,
            column: 120
          }
        }, {
          start: {
            line: 1606,
            column: 124
          },
          end: {
            line: 1606,
            column: 148
          }
        }],
        line: 1606
      },
      "106": {
        loc: {
          start: {
            line: 1628,
            column: 106
          },
          end: {
            line: 1628,
            column: 154
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1628,
            column: 106
          },
          end: {
            line: 1628,
            column: 128
          }
        }, {
          start: {
            line: 1628,
            column: 132
          },
          end: {
            line: 1628,
            column: 154
          }
        }],
        line: 1628
      },
      "107": {
        loc: {
          start: {
            line: 1645,
            column: 64
          },
          end: {
            line: 1684,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1645,
            column: 64
          },
          end: {
            line: 1645,
            column: 90
          }
        }, {
          start: {
            line: 1645,
            column: 108
          },
          end: {
            line: 1684,
            column: 66
          }
        }],
        line: 1645
      },
      "108": {
        loc: {
          start: {
            line: 1694,
            column: 28
          },
          end: {
            line: 1756,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1694,
            column: 28
          },
          end: {
            line: 1694,
            column: 53
          }
        }, {
          start: {
            line: 1694,
            column: 71
          },
          end: {
            line: 1756,
            column: 30
          }
        }],
        line: 1694
      },
      "109": {
        loc: {
          start: {
            line: 1757,
            column: 28
          },
          end: {
            line: 2171,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1757,
            column: 28
          },
          end: {
            line: 1757,
            column: 52
          }
        }, {
          start: {
            line: 1757,
            column: 70
          },
          end: {
            line: 2171,
            column: 30
          }
        }],
        line: 1757
      },
      "110": {
        loc: {
          start: {
            line: 2158,
            column: 62
          },
          end: {
            line: 2158,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2158,
            column: 62
          },
          end: {
            line: 2158,
            column: 77
          }
        }, {
          start: {
            line: 2158,
            column: 81
          },
          end: {
            line: 2158,
            column: 94
          }
        }],
        line: 2158
      },
      "111": {
        loc: {
          start: {
            line: 2179,
            column: 12
          },
          end: {
            line: 2217,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2179,
            column: 12
          },
          end: {
            line: 2179,
            column: 30
          }
        }, {
          start: {
            line: 2179,
            column: 48
          },
          end: {
            line: 2217,
            column: 14
          }
        }],
        line: 2179
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0,
      "305": 0,
      "306": 0,
      "307": 0,
      "308": 0,
      "309": 0,
      "310": 0,
      "311": 0,
      "312": 0,
      "313": 0,
      "314": 0,
      "315": 0,
      "316": 0,
      "317": 0,
      "318": 0,
      "319": 0,
      "320": 0,
      "321": 0,
      "322": 0,
      "323": 0,
      "324": 0,
      "325": 0,
      "326": 0,
      "327": 0,
      "328": 0,
      "329": 0,
      "330": 0,
      "331": 0,
      "332": 0,
      "333": 0,
      "334": 0,
      "335": 0,
      "336": 0,
      "337": 0,
      "338": 0,
      "339": 0,
      "340": 0,
      "341": 0,
      "342": 0,
      "343": 0,
      "344": 0,
      "345": 0,
      "346": 0,
      "347": 0,
      "348": 0,
      "349": 0,
      "350": 0,
      "351": 0,
      "352": 0,
      "353": 0,
      "354": 0,
      "355": 0,
      "356": 0,
      "357": 0,
      "358": 0,
      "359": 0,
      "360": 0,
      "361": 0,
      "362": 0,
      "363": 0,
      "364": 0,
      "365": 0,
      "366": 0,
      "367": 0,
      "368": 0,
      "369": 0,
      "370": 0,
      "371": 0,
      "372": 0,
      "373": 0,
      "374": 0,
      "375": 0,
      "376": 0,
      "377": 0,
      "378": 0,
      "379": 0,
      "380": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0, 0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0],
      "87": [0, 0],
      "88": [0, 0],
      "89": [0, 0],
      "90": [0, 0],
      "91": [0, 0],
      "92": [0, 0],
      "93": [0, 0],
      "94": [0, 0],
      "95": [0, 0],
      "96": [0, 0],
      "97": [0, 0],
      "98": [0, 0],
      "99": [0, 0],
      "100": [0, 0],
      "101": [0, 0],
      "102": [0, 0],
      "103": [0, 0],
      "104": [0, 0],
      "105": [0, 0],
      "106": [0, 0],
      "107": [0, 0],
      "108": [0, 0],
      "109": [0, 0],
      "110": [0, 0],
      "111": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matthewmoroney/builds/FreeAgentics/web/components/memoryviewer.tsx"],
      sourcesContent: ["\"use client\";\n\nimport type React from \"react\";\n\nimport { useState, useEffect, useMemo, useRef } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Save, Trash, Edit, ArrowLeft, Search, X } from \"lucide-react\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { formatTimestamp, extractTagsFromMarkdown } from \"@/lib/utils\";\nimport type { Agent, Conversation, KnowledgeEntry } from \"@/lib/types\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Input } from \"@/components/ui/input\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useLLM } from \"@/contexts/llm-context\";\nimport {\n  type ExtractedBelief,\n  type RefinedBelief,\n  parseBeliefs,\n  parseRefinedBeliefs,\n} from \"@/lib/belief-extraction\";\nimport { exportAgentKnowledge } from \"@/lib/knowledge-export\";\nimport { debugLog } from \"@/lib/debug-logger\";\nimport { createLogger } from \"@/lib/debug-logger\";\n\nconst logger = createLogger(\"MEMORY-VIEWER\");\n\n// Note: Conversation history scrollbar styles have been moved to app/globals.css\n\n// Define the AgentToolPermissions type\nexport type AgentToolPermissions = {\n  // Information Access Tools\n  internetSearch: boolean;\n  webScraping: boolean;\n  wikipediaAccess: boolean;\n  newsApi: boolean;\n  academicSearch: boolean;\n  documentRetrieval: boolean;\n\n  // Content Generation & Processing\n  imageGeneration: boolean;\n  textSummarization: boolean;\n  translation: boolean;\n  codeExecution: boolean;\n\n  // Knowledge & Reasoning Tools\n  calculator: boolean;\n  knowledgeGraphQuery: boolean;\n  factChecking: boolean;\n  timelineGenerator: boolean;\n\n  // External Integrations\n  weatherData: boolean;\n  mapLocationData: boolean;\n  financialData: boolean;\n  publicDatasets: boolean;\n\n  // Agent-Specific Tools\n  memorySearch: boolean;\n  crossAgentKnowledge: boolean;\n  conversationAnalysis: boolean;\n};\n\n// Update the MemoryViewerProps interface Ito include the toolPermissions update\ninterface MemoryViewerProps {\n  selectedAgent: Agent | null;\n  conversationHistory: Conversation[];\n  onAddKnowledge: (agentId: string, knowledge: KnowledgeEntry) => void;\n  onUpdateAgent: (\n    agentId: string,\n    updates: {\n      name?: string;\n      biography?: string;\n      toolPermissions?: AgentToolPermissions;\n    },\n  ) => void;\n  onDeleteKnowledge: (agentId: string, knowledgeId: string) => void;\n  onUpdateKnowledge: (\n    agentId: string,\n    knowledgeId: string,\n    updates: Partial<KnowledgeEntry>,\n  ) => void;\n  agents: Agent[];\n  selectedKnowledgeNode?: {\n    type: \"entry\" | \"tag\";\n    id: string;\n    title: string;\n  } | null;\n  onClearSelectedKnowledgeNode?: () => void;\n  onSelectAgent?: (agent: Agent) => void;\n}\n\n// Add default tool permissions\nconst defaultToolPermissions: AgentToolPermissions = {\n  // Information Access Tools\n  internetSearch: false,\n  webScraping: false,\n  wikipediaAccess: false,\n  newsApi: false,\n  academicSearch: false,\n  documentRetrieval: false,\n\n  // Content Generation & Processing\n  imageGeneration: false,\n  textSummarization: false,\n  translation: false,\n  codeExecution: false,\n\n  // Knowledge & Reasoning Tools\n  calculator: false,\n  knowledgeGraphQuery: false,\n  factChecking: false,\n  timelineGenerator: false,\n\n  // External Integrations\n  weatherData: false,\n  mapLocationData: false,\n  financialData: false,\n  publicDatasets: false,\n\n  // Agent-Specific Tools\n  memorySearch: false,\n  crossAgentKnowledge: false,\n  conversationAnalysis: false,\n};\n\nexport default function MemoryViewer({\n  selectedAgent,\n  conversationHistory,\n  onAddKnowledge,\n  onUpdateAgent,\n  onDeleteKnowledge,\n  onUpdateKnowledge,\n  agents,\n  selectedKnowledgeNode = null,\n  onClearSelectedKnowledgeNode = () => {},\n  onSelectAgent,\n}: MemoryViewerProps) {\n  const [biography, setBiography] = useState<string>(\"\");\n  const [selectedView, setSelectedView] = useState<string>(\"biography\");\n  const { toast } = useToast();\n\n  // Get LLM context\n  const llmContext = useLLM();\n  const { isProcessing, setIsProcessing } = llmContext;\n\n  // Knowledge state\n  const [knowledgeTab, setKnowledgeTab] = useState<string>(\"browse\");\n  const [newKnowledgeTitle, setNewKnowledgeTitle] = useState<string>(\"\");\n  const [newKnowledgeContent, setNewKnowledgeContent] = useState<string>(\"\");\n  const [selectedKnowledge, setSelectedKnowledge] =\n    useState<KnowledgeEntry | null>(null);\n  const [editingKnowledge, setEditingKnowledge] = useState<boolean>(false);\n  const [beliefsPrompt, setBeliefsPrompt] = useState<string>(\n    \"Extract factual [[knowledge]], user [[preferences]], and [[research-relevant]] information. Focus on substantive content that would help with research projects and future conversations.\",\n  );\n  const [editedKnowledgeContent, setEditedKnowledgeContent] =\n    useState<string>(\"\");\n  const [editedKnowledgeTitle, setEditedKnowledgeTitle] = useState<string>(\"\");\n\n  // Knowledge search and filter state\n  const [searchQuery, setSearchQuery] = useState<string>(\"\");\n  const [selectedTag, setSelectedTag] = useState<string>(\"all_tags\");\n  const [sortBy, setSortBy] = useState<\"newest\" | \"oldest\" | \"title\">(\"newest\");\n\n  // Delete confirmation dialog\n  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState<boolean>(false);\n  const [knowledgeToDelete, setKnowledgeToDelete] =\n    useState<KnowledgeEntry | null>(null);\n\n  // System prompt state\n  const [systemPrompt, setSystemPrompt] = useState<string>(\"\");\n  const [systemPromptName, setSystemPromptName] = useState<string>(\"Default\");\n\n  // Belief extraction state\n  const [extractedBeliefs, setExtractedBeliefs] = useState<RefinedBelief[]>([]);\n  const [rawBeliefs, setRawBeliefs] = useState<ExtractedBelief[]>([]);\n  const [isExtractingBeliefs, setIsExtractingBeliefs] = useState(false);\n  const [selectedConversationId, setSelectedConversationId] = useState<\n    string | null\n  >(null);\n  const [extractionStep, setExtractionStep] = useState<\n    \"idle\" | \"extracting\" | \"refining\" | \"complete\"\n  >(\"idle\");\n  const [extractionProgress, setExtractionProgress] = useState(0);\n  const [inferenceTab, setInferenceTab] = useState<\n    \"prompt\" | \"results\" | \"preview\"\n  >(\"prompt\");\n\n  // Add these state variables to the MemoryViewer component, near the other state declarations\n  const [toolPermissions, setToolPermissions] = useState<AgentToolPermissions>(\n    defaultToolPermissions,\n  );\n  const [isSavingTools, setIsSavingTools] = useState<boolean>(false);\n  const [hasToolChanges, setHasToolChanges] = useState<boolean>(false);\n\n  // Add a ref to track pending knowledge selection after agent change\n  const pendingKnowledgeSelectionRef = useRef<KnowledgeEntry | null>(null);\n  const previousAgentIdRef = useRef<string | null>(null);\n\n  // Update biography state when selected agent changes\n  useEffect(() => {\n    if (selectedAgent) {\n      setBiography(selectedAgent.biography);\n\n      // Only reset selectedKnowledge if we don't have a pending selection\n      // and if the agent has actually changed\n      if (\n        !pendingKnowledgeSelectionRef.current &&\n        previousAgentIdRef.current !== selectedAgent.id\n      ) {\n        setSelectedKnowledge(null);\n      }\n\n      setEditingKnowledge(false);\n\n      // Reset search and filter when changing agents\n      setSearchQuery(\"\");\n      setSelectedTag(\"all_tags\");\n\n      // Initialize tool permissions with agent's existing permissions or defaults\n      setToolPermissions(\n        selectedAgent.toolPermissions || defaultToolPermissions,\n      );\n      setHasToolChanges(false);\n\n      // Update the previous agent id ref\n      previousAgentIdRef.current = selectedAgent.id;\n    }\n  }, [selectedAgent]);\n\n  // Add a new useEffect to handle pending knowledge selection\n  useEffect(() => {\n    // If we have a pending knowledge selection and a selected agent\n    if (pendingKnowledgeSelectionRef.current && selectedAgent) {\n      // Find the matching knowledge entry in the selected agent's knowledge\n      const matchingEntry = selectedAgent.knowledge.find(\n        (entry) => entry.id === pendingKnowledgeSelectionRef.current?.id,\n      );\n\n      // If we found a matching entry, select it\n      if (matchingEntry) {\n        setSelectedKnowledge(matchingEntry);\n      }\n      // If we didn't find a matching entry but have a title, try to find by title\n      else if (pendingKnowledgeSelectionRef.current.title) {\n        const entryByTitle = selectedAgent.knowledge.find(\n          (entry) =>\n            entry.title === pendingKnowledgeSelectionRef.current?.title,\n        );\n\n        if (entryByTitle) {\n          setSelectedKnowledge(entryByTitle);\n        }\n      }\n\n      // Clear the pending selection\n      pendingKnowledgeSelectionRef.current = null;\n    }\n  }, [selectedAgent]);\n\n  // Update edited knowledge content when selected knowledge changes\n  useEffect(() => {\n    if (selectedKnowledge) {\n      setEditedKnowledgeContent(selectedKnowledge.content);\n      setEditedKnowledgeTitle(selectedKnowledge.title);\n    }\n  }, [selectedKnowledge]);\n\n  // When a knowledge node is selected from the global graph, switch to the node selection view\n  useEffect(() => {\n    if (selectedKnowledgeNode) {\n      setSelectedView(\"node-selection\");\n    }\n  }, [selectedKnowledgeNode]);\n\n  // Get all unique tags from the selected agent's knowledge\n  const uniqueTags = useMemo(() => {\n    if (!selectedAgent) return [];\n\n    const tags = new Set<string>();\n    selectedAgent.knowledge.forEach((entry) => {\n      entry.tags.forEach((tag) => tags.add(tag));\n    });\n\n    return Array.from(tags).sort();\n  }, [selectedAgent]);\n\n  // Filter and sort knowledge entries based on search, tag, and sort criteria\n  const filteredKnowledge = useMemo(() => {\n    if (!selectedAgent) return [];\n\n    let filtered = [...selectedAgent.knowledge];\n\n    // Apply search filter\n    if (searchQuery) {\n      const query = searchQuery.toLowerCase();\n      filtered = filtered.filter(\n        (entry) =>\n          entry.title.toLowerCase().includes(query) ||\n          entry.content.toLowerCase().includes(query),\n      );\n    }\n\n    // Apply tag filter\n    if (selectedTag && selectedTag !== \"all_tags\") {\n      filtered = filtered.filter((entry) => entry.tags.includes(selectedTag));\n    }\n\n    // Apply sorting\n    switch (sortBy) {\n      case \"newest\":\n        filtered.sort((a, b) => b.timestamp.getTime() - a.timestamp.getTime());\n        break;\n      case \"oldest\":\n        filtered.sort((a, b) => a.timestamp.getTime() - b.timestamp.getTime());\n        break;\n      case \"title\":\n        filtered.sort((a, b) => a.title.localeCompare(b.title));\n        break;\n    }\n\n    return filtered;\n  }, [selectedAgent, searchQuery, selectedTag, sortBy]);\n\n  // Get relevant conversations for the selected agent\n  const relevantConversations = useMemo(() => {\n    if (!selectedAgent) return [];\n\n    return conversationHistory\n      .filter((conv) => conv.participants.includes(selectedAgent.id))\n      .sort((a, b) => b.startTime.getTime() - a.startTime.getTime());\n  }, [selectedAgent, conversationHistory]);\n\n  const handleSaveBiography = () => {\n    if (!selectedAgent) return;\n    onUpdateAgent(selectedAgent.id, { biography });\n    toast({\n      title: \"Biography updated\",\n      description: `${selectedAgent.name}'s biography has been updated.`,\n      duration: 3000,\n    });\n  };\n\n  const handleAddKnowledge = () => {\n    if (\n      !selectedAgent ||\n      !newKnowledgeTitle.trim() ||\n      !newKnowledgeContent.trim()\n    )\n      return;\n\n    const newKnowledge: KnowledgeEntry = {\n      id: `knowledge-${Date.now()}`,\n      title: newKnowledgeTitle,\n      content: newKnowledgeContent,\n      timestamp: new Date(),\n      tags: extractTagsFromMarkdown(newKnowledgeContent),\n    };\n\n    onAddKnowledge(selectedAgent.id, newKnowledge);\n    setNewKnowledgeTitle(\"\");\n    setNewKnowledgeContent(\"\");\n\n    toast({\n      title: \"Knowledge added\",\n      description: `\"${newKnowledgeTitle}\" has been added to ${selectedAgent.name}'s knowledge.`,\n      duration: 3000,\n    });\n  };\n\n  // Handle belief extraction with progress tracking\n  const handleUpdateBeliefs = async () => {\n    if (!selectedAgent) {\n      toast({\n        title: \"No agent selected\",\n        description: \"Please select an agent first\",\n        variant: \"destructive\",\n        duration: 3000,\n      });\n      return;\n    }\n\n    // Get the selected conversation or the most recent one\n    const targetConversation = selectedConversationId\n      ? conversationHistory.find((conv) => conv.id === selectedConversationId)\n      : conversationHistory\n          .filter((conv) => conv.participants.includes(selectedAgent.id))\n          .sort((a, b) => b.startTime.getTime() - a.startTime.getTime())[0];\n\n    if (!targetConversation) {\n      toast({\n        title: \"No conversation available\",\n        description: \"There are no conversations for this agent to analyze\",\n        variant: \"destructive\",\n        duration: 3000,\n      });\n      return;\n    }\n\n    setIsExtractingBeliefs(true);\n    setExtractionStep(\"extracting\");\n    setExtractionProgress(10);\n    setInferenceTab(\"results\");\n\n    try {\n      // Format the conversation for analysis\n      const conversationText = targetConversation.messages\n        .map((msg) => {\n          const senderName =\n            msg.senderId === \"user\"\n              ? \"User\"\n              : agents.find((a) => a.id === msg.senderId)?.name || \"Unknown\";\n          return `${senderName}: ${msg.content}`;\n        })\n        .join(\"\\n\\n\");\n\n      debugLog(\n        \"Formatted conversation for belief extraction:\",\n        conversationText,\n      );\n\n      // FIXED: Use the client's extractBeliefs method directly instead of calling the function\n      // with settings that don't contain the API key\n      setExtractionProgress(30);\n      try {\n        // Call the client's extractBeliefs method which handles API key retrieval\n        if (!llmContext.client) {\n          throw new Error(\"LLM client is not available\");\n        }\n\n        const rawBeliefsResponse = await llmContext.client.extractBeliefs(\n          conversationText,\n          selectedAgent.name,\n          beliefsPrompt,\n        );\n\n        // Parse the response - the client returns a string, but we need to parse it into beliefs\n        const rawBeliefs = parseBeliefs(rawBeliefsResponse);\n        debugLog(\"Raw beliefs extracted:\", rawBeliefs);\n\n        setRawBeliefs(rawBeliefs);\n        setExtractionProgress(60);\n        setExtractionStep(\"refining\");\n\n        // Now refine the beliefs using the client's method\n        try {\n          // Get the existing knowledge to check for duplicates\n          const existingKnowledge = selectedAgent.knowledge;\n\n          // Call the refine method on the client\n          const refinedResponse = await llmContext.client.generateResponse(\n            // System prompt for refinement\n            `You are an AI assistant that refines and enhances extracted beliefs for a knowledge base.\nYour task is to analyze each belief, rate its accuracy and relevance, categorize it, and suggest a title.\n\nIMPORTANT: Maintain the Obsidian-style markdown format with [[double brackets]] around key concepts.`,\n            // User prompt with the raw beliefs\n            `Below are beliefs extracted from a conversation.\nRefine these beliefs according to these priorities: ${beliefsPrompt}\n\nEXTRACTED BELIEFS:\n${rawBeliefs.map((belief, index) => `${index + 1}. ${belief.content} (${belief.confidence})`).join(\"\\n\")}\n\nPRIORITIZE:\n1. Factual knowledge about topics discussed (not about the agents themselves)\n2. User preferences and research goals\n3. Information that would be valuable for future reference\n\nDEPRIORITIZE OR REMOVE:\n1. Observations about the agent's behavior or willingness to help\n2. Generic statements without specific information\n3. Low-value or redundant information\n\nFor each belief, provide:\n1. Accuracy (1-5 scale, where 5 is highest)\n2. Relevance (1-5 scale, where 5 is highest) - rate higher for factual knowledge and user preferences\n3. Category (Fact, Opinion, Preference, Relationship, or Other)\n4. A concise title for the knowledge entry\n5. Refined content (maintain or enhance the Obsidian-style [[tags]])\n6. Set \"selected\": false for any beliefs that are about the agent itself rather than substantive knowledge\n\nFormat your response as a JSON array with one object per belief:\n[\n {\n   \"originalIndex\": 1,\n   \"accuracy\": 4,\n   \"relevance\": 5,\n   \"category\": \"Fact\",\n   \"title\": \"Example Title\",\n   \"refined_content\": \"Refined belief with [[tags]]\",\n   \"confidence\": \"High\",\n   \"selected\": true\n },\n ...\n]`,\n          );\n\n          // Parse the refined beliefs from the response\n          const refined = parseRefinedBeliefs(refinedResponse, rawBeliefs);\n          debugLog(\"Refined beliefs:\", refined);\n\n          if (refined && refined.length > 0) {\n            setExtractedBeliefs(refined);\n            setExtractionProgress(100);\n            setExtractionStep(\"complete\");\n\n            toast({\n              title: \"Beliefs extracted\",\n              description: `Found ${refined.length} potential new beliefs for ${selectedAgent.name}`,\n              duration: 3000,\n            });\n          } else {\n            throw new Error(\n              \"No beliefs could be extracted from this conversation\",\n            );\n          }\n        } catch (refineError) {\n          console.error(\"Error refining beliefs:\", refineError);\n          toast({\n            title: \"Error refining beliefs\",\n            description:\n              \"The system encountered an error while processing the extracted beliefs. Please try again.\",\n            variant: \"destructive\",\n            duration: 5000,\n          });\n          setExtractionStep(\"idle\");\n        }\n      } catch (extractError) {\n        console.error(\"Error extracting raw beliefs:\", extractError);\n        toast({\n          title: \"Error extracting beliefs\",\n          description:\n            \"The system encountered an error while analyzing the conversation. Please try again.\",\n          variant: \"destructive\",\n          duration: 5000,\n        });\n        setExtractionStep(\"idle\");\n      }\n    } catch (error) {\n      console.error(\"Error in belief extraction process:\", error);\n      toast({\n        title: \"Error extracting beliefs\",\n        description:\n          error instanceof Error ? error.message : \"An unknown error occurred\",\n        variant: \"destructive\",\n        duration: 5000,\n      });\n      setExtractionStep(\"idle\");\n    } finally {\n      setIsExtractingBeliefs(false);\n    }\n  };\n\n  // Handle toggling belief selection\n  const handleToggleBelief = (index: number) => {\n    setExtractedBeliefs((prev) =>\n      prev.map((belief, i) =>\n        i === index\n          ? { ...belief, selected: belief.selected === false ? true : false }\n          : belief,\n      ),\n    );\n  };\n\n  // Handle adding selected beliefs to knowledge\n  const handleAddSelectedBeliefs = async () => {\n    if (!selectedAgent) return;\n\n    const selectedBeliefs = extractedBeliefs.filter(\n      (belief) => belief.selected !== false,\n    );\n    logger.info(\n      `Selected beliefs count: ${selectedBeliefs.length}`,\n      selectedBeliefs,\n    );\n\n    if (selectedBeliefs.length === 0) {\n      toast({\n        title: \"No beliefs selected\",\n        description: \"Please select at least one belief to add to knowledge\",\n        variant: \"destructive\",\n        duration: 3000,\n      });\n      return;\n    }\n\n    try {\n      // Create knowledge entries from selected beliefs\n      const knowledgeEntries = selectedBeliefs.map((belief) => ({\n        id: `knowledge-${Date.now()}-${Math.random().toString(36).substring(2, 7)}`,\n        title: belief.title,\n        content: belief.refined_content,\n        timestamp: new Date(),\n        tags: belief.tags,\n      }));\n\n      logger.info(\n        `Adding ${knowledgeEntries.length} knowledge entries to agent's knowledge`,\n      );\n\n      // Add each entry to the agent's knowledge\n      for (const entry of knowledgeEntries) {\n        logger.info(`Adding entry: ${entry.title}`);\n        onAddKnowledge(selectedAgent.id, entry);\n      }\n\n      // Clear extracted beliefs\n      setExtractedBeliefs([]);\n      setRawBeliefs([]);\n      setExtractionStep(\"idle\");\n\n      toast({\n        title: \"Knowledge updated\",\n        description: `Added ${knowledgeEntries.length} new knowledge entries to ${selectedAgent.name}'s knowledge`,\n        duration: 3000,\n      });\n\n      // Switch to browse tab\n      setKnowledgeTab(\"browse\");\n    } catch (error) {\n      console.error(\"Error adding beliefs to knowledge:\", error);\n      toast({\n        title: \"Error adding beliefs\",\n        description:\n          error instanceof Error ? error.message : \"An unknown error occurred\",\n        variant: \"destructive\",\n        duration: 5000,\n      });\n    }\n  };\n\n  const handleSaveKnowledgeChanges = () => {\n    if (!selectedAgent || !selectedKnowledge) return;\n\n    // Extract tags from the updated content\n    const updatedTags = extractTagsFromMarkdown(editedKnowledgeContent);\n\n    // Create the updates object\n    const updates: Partial<KnowledgeEntry> = {\n      title: editedKnowledgeTitle,\n      content: editedKnowledgeContent,\n      tags: updatedTags,\n    };\n\n    // Call the update function\n    onUpdateKnowledge(selectedAgent.id, selectedKnowledge.id, updates);\n\n    // Update the local state\n    setSelectedKnowledge({\n      ...selectedKnowledge,\n      ...updates,\n    });\n\n    // Exit editing mode\n    setEditingKnowledge(false);\n\n    toast({\n      title: \"Knowledge updated\",\n      description: \"Knowledge entry has been updated successfully.\",\n      duration: 3000,\n    });\n  };\n\n  const handleDeleteKnowledge = () => {\n    if (!selectedAgent || !knowledgeToDelete) return;\n\n    // Call the delete function\n    onDeleteKnowledge(selectedAgent.id, knowledgeToDelete.id);\n\n    // Clear the selected knowledge if it's the one being deleted\n    if (selectedKnowledge?.id === knowledgeToDelete.id) {\n      setSelectedKnowledge(null);\n    }\n\n    // Close the dialog\n    setIsDeleteDialogOpen(false);\n    setKnowledgeToDelete(null);\n\n    toast({\n      title: \"Knowledge deleted\",\n      description: `\"${knowledgeToDelete.title}\" has been deleted from ${selectedAgent.name}'s knowledge.`,\n      duration: 3000,\n    });\n  };\n\n  const handleSelectAgentForKnowledge = (agent: Agent) => {\n    // Find the specific knowledge entry if we're looking at an entry\n    if (selectedKnowledgeNode?.type === \"entry\") {\n      // For consolidated entries, check by title\n      const entry = agent.knowledge.find(\n        (k) => k.title === selectedKnowledgeNode.title,\n      );\n      if (entry) {\n        // Store the entry we want to select in the ref\n        pendingKnowledgeSelectionRef.current = entry;\n\n        // Select the agent if it's not already selected\n        if (onSelectAgent && selectedAgent?.id !== agent.id) {\n          onSelectAgent(agent);\n        } else if (selectedAgent?.id === agent.id) {\n          // If the agent is already selected, we can set the knowledge directly\n          setSelectedKnowledge(entry);\n        }\n\n        setKnowledgeTab(\"browse\");\n        setSelectedView(\"knowledge\");\n        onClearSelectedKnowledgeNode();\n      }\n    }\n    // If we're looking at a tag, switch to the knowledge view with that tag\n    else if (selectedKnowledgeNode?.type === \"tag\") {\n      setSelectedView(\"knowledge\");\n      setKnowledgeTab(\"browse\");\n      setSelectedTag(selectedKnowledgeNode.title);\n      onClearSelectedKnowledgeNode();\n\n      // Select the agent if it's not already selected\n      if (onSelectAgent && selectedAgent?.id !== agent.id) {\n        onSelectAgent(agent);\n      }\n    }\n  };\n\n  // Add a new function to handle clicking on a specific knowledge entry\n  const handleSelectKnowledgeEntry = (\n    agent: Agent,\n    entry: KnowledgeEntry,\n    event: React.MouseEvent,\n  ) => {\n    // Prevent the click from propagating to the agent card\n    event.stopPropagation();\n\n    // Store the entry we want to select in the ref\n    pendingKnowledgeSelectionRef.current = entry;\n\n    // Select the agent using the onSelectAgent prop\n    if (onSelectAgent && selectedAgent?.id !== agent.id) {\n      onSelectAgent(agent);\n    } else if (selectedAgent?.id === agent.id) {\n      // If the agent is already selected, we can set the knowledge directly\n      setSelectedKnowledge(entry);\n    }\n\n    // Switch to the knowledge view\n    setKnowledgeTab(\"browse\");\n    setSelectedView(\"knowledge\");\n\n    // Clear the selected knowledge node\n    onClearSelectedKnowledgeNode();\n  };\n\n  const getAgentsWithSelectedNode = () => {\n    if (!selectedKnowledgeNode) return [];\n\n    return agents.filter((agent) => {\n      if (selectedKnowledgeNode.type === \"entry\") {\n        // For consolidated entries, check by title\n        return agent.knowledge.some(\n          (entry) => entry.title === selectedKnowledgeNode.title,\n        );\n      } else if (selectedKnowledgeNode.type === \"tag\") {\n        return agent.knowledge.some((entry) =>\n          entry.tags.includes(selectedKnowledgeNode.title),\n        );\n      }\n      return false;\n    });\n  };\n\n  // Get knowledge entries that match the selected tag\n  const getEntriesWithTag = (agent: Agent, tag: string) => {\n    return agent.knowledge.filter((entry) => entry.tags.includes(tag));\n  };\n\n  // Get knowledge entries that match the selected title\n  const getEntriesWithTitle = (agent: Agent, title: string) => {\n    return agent.knowledge.filter((entry) => entry.title === title);\n  };\n\n  // Clear all search and filter criteria\n  const clearFilters = () => {\n    setSearchQuery(\"\");\n    setSelectedTag(\"all_tags\");\n    setSortBy(\"newest\");\n  };\n\n  // Helper function to render markdown with highlighted tags\n  const renderMarkdownWithTags = (content: string) => {\n    // Replace [[tags]] with highlighted spans that have a data-tag attribute\n    return content.replace(\n      /\\[\\[(.*?)\\]\\]/g,\n      '<span class=\"bg-purple-500/20 text-purple-900 px-1 rounded cursor-pointer hover:bg-purple-500/30 transition-colors\" data-tag=\"$1\">[[<span class=\"font-medium\">$1</span>]]</span>',\n    );\n  };\n\n  // Handle saving system prompt\n  const handleSaveSystemPrompt = () => {\n    if (!selectedAgent || !systemPrompt.trim()) {\n      toast({\n        title: \"Cannot save system prompt\",\n        description: \"Agent or prompt not available\",\n        variant: \"destructive\",\n        duration: 3000,\n      });\n      return;\n    }\n\n    setIsProcessing(true);\n\n    // Simulate a delay\n    setTimeout(() => {\n      try {\n        toast({\n          title: \"System prompt saved\",\n          description: `System prompt \"${systemPromptName}\" has been saved for ${selectedAgent.name}.`,\n          duration: 3000,\n        });\n      } catch (error) {\n        console.error(\"Error in handleSaveSystemPrompt:\", error);\n        toast({\n          title: \"Error saving system prompt\",\n          description:\n            error instanceof Error\n              ? error.message\n              : \"An unknown error occurred\",\n          variant: \"destructive\",\n          duration: 5000,\n        });\n      } finally {\n        setIsProcessing(false);\n      }\n    }, 1000);\n  };\n\n  // Add this function inside the MemoryViewer component\n  const handleTagClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    // Check if the clicked element or its parent has a data-tag attribute\n    const target = e.target as HTMLElement;\n    const tagElement = target.closest(\"[data-tag]\");\n\n    if (tagElement) {\n      const tag = tagElement.getAttribute(\"data-tag\");\n      if (tag) {\n        setSelectedTag(tag);\n        setSelectedKnowledge(null);\n        setKnowledgeTab(\"browse\");\n      }\n    }\n  };\n\n  // Add these handler functions for tool permissions\n  const handleToolChange = (\n    toolKey: keyof AgentToolPermissions,\n    checked: boolean,\n  ) => {\n    setToolPermissions((prev) => {\n      const updated = { ...prev, [toolKey]: checked };\n      // Mark that we have unsaved changes\n      setHasToolChanges(true);\n      return updated;\n    });\n  };\n\n  const handleSaveToolSettings = () => {\n    if (!selectedAgent) return;\n\n    setIsSavingTools(true);\n\n    // Update the agent with new tool permissions\n    onUpdateAgent(selectedAgent.id, { toolPermissions });\n\n    // Reset the changes flag\n    setHasToolChanges(false);\n\n    // Show success message\n    toast({\n      title: \"Tool settings saved\",\n      description: `Tool permissions for ${selectedAgent.name} have been updated.`,\n      duration: 3000,\n    });\n\n    setTimeout(() => {\n      setIsSavingTools(false);\n    }, 500);\n  };\n\n  return (\n    <div className=\"flex flex-col h-full overflow-hidden\">\n      <div className=\"p-4 border-b border-border\">\n        <h2 className=\"text-xl font-bold text-white\">Memory Viewer</h2>\n      </div>\n\n      {selectedKnowledgeNode && selectedView === \"node-selection\" ? (\n        <div className=\"flex-1 flex flex-col\">\n          <div className=\"px-4 pt-4 flex items-center\">\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => {\n                onClearSelectedKnowledgeNode();\n                setSelectedView(\"biography\");\n              }}\n              className=\"mr-2 bg-purple-900/30 text-white hover:bg-purple-800/50 hover:text-white\"\n            >\n              <ArrowLeft size={16} className=\"mr-1\" />\n              Back\n            </Button>\n            <h3 className=\"text-lg font-semibold text-white\">\n              {selectedKnowledgeNode.type === \"entry\"\n                ? \"Knowledge Entry\"\n                : \"Tag\"}\n              : {selectedKnowledgeNode.title}\n            </h3>\n          </div>\n\n          <div className=\"flex-1 p-4\">\n            <Card className=\"h-full\">\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-base\">\n                  Agents with{\" \"}\n                  {selectedKnowledgeNode.type === \"entry\"\n                    ? \"this knowledge\"\n                    : `\"${selectedKnowledgeNode.title}\" tag`}\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"h-[calc(100%-60px)]\">\n                <ScrollArea className=\"h-full pr-4\">\n                  {getAgentsWithSelectedNode().length > 0 ? (\n                    <div className=\"space-y-4\">\n                      {getAgentsWithSelectedNode().map((agent) => (\n                        <div\n                          key={agent.id}\n                          className=\"p-4 border rounded-md cursor-pointer hover:bg-muted transition-colors\"\n                          onClick={() => handleSelectAgentForKnowledge(agent)}\n                        >\n                          <div className=\"flex items-center gap-2 mb-2\">\n                            <div\n                              className=\"w-4 h-4 rounded-full\"\n                              style={{ backgroundColor: agent.color }}\n                            />\n                            <h3 className=\"font-medium\">{agent.name}</h3>\n                          </div>\n\n                          {selectedKnowledgeNode.type === \"tag\" ? (\n                            <div className=\"mt-2\">\n                              <p className=\"text-sm text-muted-foreground mb-1\">\n                                {\n                                  getEntriesWithTag(\n                                    agent,\n                                    selectedKnowledgeNode.title,\n                                  ).length\n                                }{\" \"}\n                                entries with this tag:\n                              </p>\n                              <div className=\"space-y-1 ml-2\">\n                                {getEntriesWithTag(\n                                  agent,\n                                  selectedKnowledgeNode.title,\n                                ).map((entry) => (\n                                  <div\n                                    key={entry.id}\n                                    className=\"text-sm py-1 px-2 rounded hover:bg-purple-800/30 cursor-pointer flex items-center\"\n                                    onClick={(e) =>\n                                      handleSelectKnowledgeEntry(\n                                        agent,\n                                        entry,\n                                        e,\n                                      )\n                                    }\n                                  >\n                                    <span className=\"w-1 h-1 bg-purple-400 rounded-full mr-2\"></span>\n                                    <span>{entry.title}</span>\n                                  </div>\n                                ))}\n                              </div>\n                            </div>\n                          ) : (\n                            <div className=\"mt-2\">\n                              <p className=\"text-sm text-muted-foreground mb-1\">\n                                {\n                                  getEntriesWithTitle(\n                                    agent,\n                                    selectedKnowledgeNode.title,\n                                  ).length\n                                }{\" \"}\n                                entries with this title:\n                              </p>\n                              <div className=\"space-y-1 ml-2\">\n                                {getEntriesWithTitle(\n                                  agent,\n                                  selectedKnowledgeNode.title,\n                                ).map((entry) => (\n                                  <div\n                                    key={entry.id}\n                                    className=\"text-sm py-1 px-2 rounded hover:bg-purple-800/30 cursor-pointer flex items-center\"\n                                    onClick={(e) =>\n                                      handleSelectKnowledgeEntry(\n                                        agent,\n                                        entry,\n                                        e,\n                                      )\n                                    }\n                                  >\n                                    <span className=\"w-1 h-1 bg-purple-400 rounded-full mr-2\"></span>\n                                    <span>\n                                      Created:{\" \"}\n                                      {formatTimestamp(entry.timestamp)}\n                                    </span>\n                                  </div>\n                                ))}\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      ))}\n                    </div>\n                  ) : (\n                    <div className=\"flex items-center justify-center h-full text-muted-foreground\">\n                      No agents have this{\" \"}\n                      {selectedKnowledgeNode.type === \"entry\"\n                        ? \"knowledge entry\"\n                        : \"tag\"}\n                      .\n                    </div>\n                  )}\n                </ScrollArea>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      ) : selectedAgent ? (\n        <div className=\"flex-1 flex flex-col\">\n          <div className=\"px-4 pt-4\">\n            <div className=\"flex justify-between items-center\">\n              <Select\n                value={selectedView}\n                onValueChange={(value) => {\n                  setSelectedView(value);\n                }}\n              >\n                <SelectTrigger className=\"w-full bg-purple-950 border-purple-700 text-white\">\n                  <SelectValue placeholder=\"Select view\" />\n                </SelectTrigger>\n                <SelectContent className=\"bg-purple-950 border-purple-700 text-white\">\n                  <SelectItem value=\"biography\">Biography</SelectItem>\n                  <SelectItem value=\"conversations\">Conversations</SelectItem>\n                  <SelectItem value=\"knowledge\">Knowledge</SelectItem>\n                  <SelectItem value=\"graph\">Graph</SelectItem>\n                  <SelectItem value=\"system\">System Prompt</SelectItem>\n                  <SelectItem value=\"tools\">Tools</SelectItem>\n                </SelectContent>\n              </Select>\n\n              {selectedAgent && (\n                <Button\n                  onClick={() => exportAgentKnowledge(selectedAgent)}\n                  className=\"ml-2 bg-purple-700 hover:bg-purple-600 text-white\"\n                  size=\"sm\"\n                >\n                  <Save size={16} className=\"mr-2\" />\n                  Export Knowledge\n                </Button>\n              )}\n            </div>\n          </div>\n\n          <div className=\"flex-1 p-4 pt-2 overflow-hidden\">\n            {selectedView === \"biography\" && (\n              <Card>\n                <CardHeader className=\"pb-2\">\n                  <CardTitle className=\"text-base\">\n                    {selectedAgent.name}&apos;s Profile\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <div className=\"space-y-2\">\n                      <label\n                        htmlFor=\"agent-biography\"\n                        className=\"text-sm font-medium\"\n                      >\n                        Biography\n                      </label>\n                      <Textarea\n                        id=\"agent-biography\"\n                        value={biography}\n                        onChange={(e) => setBiography(e.target.value)}\n                        className=\"min-h-[200px]\"\n                        placeholder=\"Enter agent biography...\"\n                      />\n                    </div>\n                    <Button\n                      onClick={handleSaveBiography}\n                      className=\"bg-purple-700 hover:bg-purple-600 text-white\"\n                    >\n                      <Save size={16} className=\"mr-2\" />\n                      Save Biography\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n            )}\n\n            {selectedView === \"conversations\" && (\n              <Card className=\"h-full flex flex-col\">\n                <CardHeader className=\"pb-2 flex-shrink-0\">\n                  <CardTitle className=\"text-base\">\n                    Conversation History\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"flex-1 p-0 overflow-hidden\">\n                  <ScrollArea\n                    className=\"h-full py-4 px-6 conversation-history-scrollbar\"\n                    style={{\n                      height: \"calc(100vh - 220px)\",\n                    }}\n                  >\n                    {conversationHistory.filter((conv) =>\n                      conv.participants.includes(selectedAgent.id),\n                    ).length > 0 ? (\n                      <div className=\"space-y-4\">\n                        {/* Conversation entries remain the same */}\n                        {conversationHistory\n                          .filter((conv) =>\n                            conv.participants.includes(selectedAgent.id),\n                          )\n                          .sort(\n                            (a, b) =>\n                              b.startTime.getTime() - a.startTime.getTime(),\n                          )\n                          .map((conv) => (\n                            <Card key={conv.id} className=\"p-4\">\n                              <div className=\"mb-2\">\n                                <div className=\"flex justify-between items-center\">\n                                  <h3 className=\"font-medium\">\n                                    Conversation{\" \"}\n                                    {formatTimestamp(conv.startTime)}\n                                  </h3>\n                                  <span className=\"text-xs text-muted-foreground\">\n                                    {conv.messages.length} messages\n                                  </span>\n                                </div>\n                                <div className=\"text-xs text-muted-foreground mt-1\">\n                                  Participants:{\" \"}\n                                  {conv.participants\n                                    .map(\n                                      (id) =>\n                                        agents.find((a) => a.id === id)?.name ||\n                                        \"Unknown\",\n                                    )\n                                    .join(\", \")}\n                                </div>\n                              </div>\n                              <div className=\"border-t pt-2 mt-2\">\n                                <div className=\"max-h-32 overflow-y-auto text-sm\">\n                                  {conv.messages.length > 0 ? (\n                                    conv.messages.map((msg) => (\n                                      <div key={msg.id} className=\"mb-2\">\n                                        <div className=\"flex items-center gap-1\">\n                                          <span className=\"font-medium\">\n                                            {msg.senderId === \"user\"\n                                              ? \"You\"\n                                              : agents.find(\n                                                  (a) => a.id === msg.senderId,\n                                                )?.name || \"Unknown\"}\n                                            :\n                                          </span>\n                                          <span className=\"text-xs text-muted-foreground\">\n                                            {new Date(\n                                              msg.timestamp,\n                                            ).toLocaleTimeString()}\n                                          </span>\n                                        </div>\n                                        <p className=\"text-sm\">{msg.content}</p>\n                                      </div>\n                                    ))\n                                  ) : (\n                                    <p className=\"text-muted-foreground\">\n                                      No messages in this conversation.\n                                    </p>\n                                  )}\n                                </div>\n                              </div>\n                            </Card>\n                          ))}\n                      </div>\n                    ) : (\n                      <div className=\"flex items-center justify-center h-full text-muted-foreground\">\n                        No conversation history for this agent.\n                      </div>\n                    )}\n                  </ScrollArea>\n                </CardContent>\n              </Card>\n            )}\n\n            {selectedView === \"knowledge\" && (\n              <Card className=\"h-full\">\n                <CardHeader className=\"pb-2\">\n                  <CardTitle className=\"text-base\">Knowledge Base</CardTitle>\n                </CardHeader>\n                <CardContent className=\"h-[calc(100%-60px)] p-0\">\n                  <div className=\"h-full flex flex-col\">\n                    <div className=\"px-6 py-2 border-b\">\n                      <Select\n                        value={knowledgeTab}\n                        onValueChange={setKnowledgeTab}\n                      >\n                        <SelectTrigger className=\"w-full bg-purple-950 border-purple-700 text-white\">\n                          <SelectValue placeholder=\"Select view\" />\n                        </SelectTrigger>\n                        <SelectContent className=\"bg-purple-950 border-purple-700 text-white\">\n                          <SelectItem value=\"browse\">Browse</SelectItem>\n                          <SelectItem value=\"add\">Add Knowledge</SelectItem>\n                          <SelectItem value=\"inference\">Inference</SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </div>\n\n                    <div className=\"flex-1 overflow-hidden\">\n                      {knowledgeTab === \"browse\" && (\n                        <div className=\"h-full p-0 m-0\">\n                          <div className=\"grid grid-cols-3 h-full\">\n                            <div className=\"col-span-1 border-r h-full\">\n                              <div className=\"p-4 border-b\">\n                                <div className=\"flex items-center gap-2 mb-2\">\n                                  <Search\n                                    size={14}\n                                    className=\"text-muted-foreground\"\n                                  />\n                                  <Input\n                                    placeholder=\"Search knowledge...\"\n                                    value={searchQuery}\n                                    onChange={(e) =>\n                                      setSearchQuery(e.target.value)\n                                    }\n                                    className=\"h-8\"\n                                  />\n                                  {(searchQuery ||\n                                    selectedTag ||\n                                    sortBy !== \"newest\") && (\n                                    <Button\n                                      variant=\"ghost\"\n                                      size=\"sm\"\n                                      onClick={clearFilters}\n                                      className=\"h-8 w-8 p-0\"\n                                    >\n                                      <X size={14} />\n                                    </Button>\n                                  )}\n                                </div>\n\n                                <div className=\"flex flex-wrap gap-2 mb-2\">\n                                  {uniqueTags.length > 0 && (\n                                    <Select\n                                      value={selectedTag}\n                                      onValueChange={setSelectedTag}\n                                    >\n                                      <SelectTrigger className=\"h-8 w-full bg-purple-950 border-purple-700 text-white\">\n                                        <SelectValue placeholder=\"Filter by tag\" />\n                                      </SelectTrigger>\n                                      <SelectContent className=\"bg-purple-950 border-purple-700 text-white\">\n                                        <SelectItem value=\"all_tags\">\n                                          All tags\n                                        </SelectItem>\n                                        {uniqueTags.map((tag) => (\n                                          <SelectItem key={tag} value={tag}>\n                                            {tag}\n                                          </SelectItem>\n                                        ))}\n                                      </SelectContent>\n                                    </Select>\n                                  )}\n                                </div>\n\n                                <div className=\"flex justify-between items-center\">\n                                  <span className=\"text-xs text-muted-foreground\">\n                                    {filteredKnowledge.length} entries\n                                  </span>\n                                  <Select\n                                    value={sortBy}\n                                    onValueChange={(value) =>\n                                      setSortBy(value as any)\n                                    }\n                                  >\n                                    <SelectTrigger className=\"h-7 text-xs w-28 bg-purple-950 border-purple-700 text-white\">\n                                      <SelectValue placeholder=\"Sort by\" />\n                                    </SelectTrigger>\n                                    <SelectContent className=\"bg-purple-950 border-purple-700 text-white\">\n                                      <SelectItem value=\"newest\">\n                                        Newest\n                                      </SelectItem>\n                                      <SelectItem value=\"oldest\">\n                                        Oldest\n                                      </SelectItem>\n                                      <SelectItem value=\"title\">\n                                        Title\n                                      </SelectItem>\n                                    </SelectContent>\n                                  </Select>\n                                </div>\n                              </div>\n\n                              <ScrollArea\n                                className=\"p-4\"\n                                type=\"always\"\n                                style={{\n                                  height: \"calc(100vh - 300px)\",\n                                  maxHeight: \"calc(100vh - 300px)\",\n                                  overflow: \"hidden\",\n                                }}\n                              >\n                                {filteredKnowledge.length > 0 ? (\n                                  <div className=\"space-y-2\">\n                                    {filteredKnowledge.map((k) => (\n                                      <div\n                                        key={k.id}\n                                        className={`p-2 rounded border cursor-pointer ${\n                                          selectedKnowledge?.id === k.id\n                                            ? \"border-primary bg-primary/10\"\n                                            : \"border-border hover:bg-muted\"\n                                        }`}\n                                        onClick={() => {\n                                          setSelectedKnowledge(k);\n                                          setEditingKnowledge(false);\n                                        }}\n                                      >\n                                        <h4 className=\"font-medium text-sm truncate\">\n                                          {k.title}\n                                        </h4>\n                                        <p className=\"text-xs text-muted-foreground mt-1\">\n                                          {formatTimestamp(k.timestamp)}\n                                        </p>\n                                        {k.tags.length > 0 && (\n                                          <div className=\"flex flex-wrap gap-1 mt-1\">\n                                            {k.tags.slice(0, 2).map((tag) => (\n                                              <Badge\n                                                key={tag}\n                                                variant=\"secondary\"\n                                                className=\"text-xs py-0 h-5\"\n                                              >\n                                                {tag}\n                                              </Badge>\n                                            ))}\n                                            {k.tags.length > 2 && (\n                                              <Badge\n                                                variant=\"outline\"\n                                                className=\"text-xs py-0 h-5\"\n                                              >\n                                                +{k.tags.length - 2}\n                                              </Badge>\n                                            )}\n                                          </div>\n                                        )}\n                                      </div>\n                                    ))}\n                                  </div>\n                                ) : (\n                                  <div className=\"text-center text-muted-foreground py-8\">\n                                    {selectedAgent.knowledge.length > 0\n                                      ? \"No matching knowledge entries found.\"\n                                      : \"No knowledge entries yet.\"}\n                                  </div>\n                                )}\n                              </ScrollArea>\n                            </div>\n\n                            <div className=\"col-span-2 h-full\">\n                              <ScrollArea\n                                className=\"p-4\"\n                                type=\"always\"\n                                style={{\n                                  height: \"calc(100vh - 300px)\",\n                                  maxHeight: \"calc(100vh - 300px)\",\n                                  overflow: \"hidden\",\n                                }}\n                              >\n                                {selectedKnowledge ? (\n                                  <div className=\"flex flex-col\">\n                                    <div className=\"flex justify-between items-center mb-2\">\n                                      <h3 className=\"font-medium\">\n                                        {selectedKnowledge.title}\n                                      </h3>\n                                      <div className=\"flex gap-2\">\n                                        <Button\n                                          variant=\"outline\"\n                                          size=\"sm\"\n                                          onClick={() =>\n                                            setEditingKnowledge(\n                                              !editingKnowledge,\n                                            )\n                                          }\n                                          className=\"bg-purple-900/50 border-purple-500 text-white hover:bg-purple-800 hover:text-white\"\n                                        >\n                                          <Edit size={14} className=\"mr-1\" />\n                                          {editingKnowledge ? \"Cancel\" : \"Edit\"}\n                                        </Button>\n                                        <Button\n                                          variant=\"destructive\"\n                                          size=\"sm\"\n                                          onClick={() => {\n                                            setKnowledgeToDelete(\n                                              selectedKnowledge,\n                                            );\n                                            setIsDeleteDialogOpen(true);\n                                          }}\n                                        >\n                                          <Trash size={14} className=\"mr-1\" />\n                                          Delete\n                                        </Button>\n                                      </div>\n                                    </div>\n\n                                    {editingKnowledge ? (\n                                      <div className=\"flex flex-col\">\n                                        <div className=\"mb-4\">\n                                          <label\n                                            htmlFor=\"edit-knowledge-title\"\n                                            className=\"text-sm font-medium block mb-1\"\n                                          >\n                                            Title\n                                          </label>\n                                          <Input\n                                            id=\"edit-knowledge-title\"\n                                            value={editedKnowledgeTitle}\n                                            onChange={(e) =>\n                                              setEditedKnowledgeTitle(\n                                                e.target.value,\n                                              )\n                                            }\n                                            placeholder=\"Knowledge title...\"\n                                          />\n                                        </div>\n                                        <div className=\"flex-1 flex flex-col\">\n                                          <label\n                                            htmlFor=\"edit-knowledge-content\"\n                                            className=\"text-sm font-medium block mb-1\"\n                                          >\n                                            Content\n                                          </label>\n                                          <Textarea\n                                            id=\"edit-knowledge-content\"\n                                            value={editedKnowledgeContent}\n                                            onChange={(e) =>\n                                              setEditedKnowledgeContent(\n                                                e.target.value,\n                                              )\n                                            }\n                                            className=\"flex-1 min-h-[200px]\"\n                                            placeholder=\"Knowledge content...\"\n                                          />\n                                        </div>\n                                        <div className=\"mt-2 text-xs text-muted-foreground\">\n                                          Use [[tag]] syntax to add tags to your\n                                          knowledge.\n                                        </div>\n                                        <Button\n                                          className=\"mt-4 bg-purple-700 hover:bg-purple-600 text-white\"\n                                          onClick={handleSaveKnowledgeChanges}\n                                        >\n                                          <Save size={16} className=\"mr-2\" />\n                                          Save Changes\n                                        </Button>\n                                      </div>\n                                    ) : (\n                                      <div>\n                                        <div\n                                          className=\"prose max-w-none\"\n                                          dangerouslySetInnerHTML={{\n                                            __html: renderMarkdownWithTags(\n                                              selectedKnowledge.content,\n                                            ),\n                                          }}\n                                          onClick={handleTagClick}\n                                        />\n                                        <p className=\"text-xs text-muted-foreground mt-2\">\n                                          Created:{\" \"}\n                                          {formatTimestamp(\n                                            selectedKnowledge.timestamp,\n                                          )}\n                                        </p>\n                                      </div>\n                                    )}\n                                  </div>\n                                ) : (\n                                  <div className=\"text-center text-muted-foreground py-8\">\n                                    Select a knowledge entry to view its\n                                    contents.\n                                  </div>\n                                )}\n                              </ScrollArea>\n                            </div>\n                          </div>\n                        </div>\n                      )}\n\n                      {knowledgeTab === \"add\" && (\n                        <div className=\"p-4\">\n                          <div className=\"space-y-4\">\n                            <div className=\"space-y-2\">\n                              <label\n                                htmlFor=\"new-knowledge-title\"\n                                className=\"text-sm font-medium\"\n                              >\n                                Title\n                              </label>\n                              <Input\n                                id=\"new-knowledge-title\"\n                                value={newKnowledgeTitle}\n                                onChange={(e) =>\n                                  setNewKnowledgeTitle(e.target.value)\n                                }\n                                placeholder=\"Knowledge title...\"\n                              />\n                            </div>\n                            <div className=\"space-y-2\">\n                              <label\n                                htmlFor=\"new-knowledge-content\"\n                                className=\"text-sm font-medium\"\n                              >\n                                Content\n                              </label>\n                              <Textarea\n                                id=\"new-knowledge-content\"\n                                value={newKnowledgeContent}\n                                onChange={(e) =>\n                                  setNewKnowledgeContent(e.target.value)\n                                }\n                                className=\"min-h-[200px]\"\n                                placeholder=\"Knowledge content...\"\n                              />\n                              <div className=\"text-xs text-muted-foreground\">\n                                Use [[tag]] syntax to add tags to your\n                                knowledge.\n                              </div>\n                            </div>\n                            <Button\n                              onClick={handleAddKnowledge}\n                              className=\"bg-purple-700 hover:bg-purple-600 text-white\"\n                            >\n                              <Save size={16} className=\"mr-2\" />\n                              Add Knowledge\n                            </Button>\n                          </div>\n                        </div>\n                      )}\n\n                      {knowledgeTab === \"inference\" && (\n                        <div className=\"flex flex-col h-full\">\n                          <div className=\"px-6 py-2 border-b\">\n                            <Select\n                              value={inferenceTab}\n                              onValueChange={(\n                                value: \"prompt\" | \"results\" | \"preview\",\n                              ) => setInferenceTab(value)}\n                            >\n                              <SelectTrigger className=\"w-full bg-purple-950 border-purple-700 text-white\">\n                                <SelectValue placeholder=\"Select view\" />\n                              </SelectTrigger>\n                              <SelectContent className=\"bg-purple-950 border-purple-700 text-white\">\n                                <SelectItem value=\"prompt\">Prompt</SelectItem>\n                                <SelectItem value=\"results\">Results</SelectItem>\n                                <SelectItem value=\"preview\">Preview</SelectItem>\n                              </SelectContent>\n                            </Select>\n                          </div>\n\n                          {inferenceTab === \"prompt\" && (\n                            <div className=\"p-4\">\n                              <div className=\"space-y-4\">\n                                <div className=\"space-y-2\">\n                                  <label\n                                    htmlFor=\"beliefs-prompt\"\n                                    className=\"text-sm font-medium\"\n                                  >\n                                    Beliefs Prompt\n                                  </label>\n                                  <Textarea\n                                    id=\"beliefs-prompt\"\n                                    value={beliefsPrompt}\n                                    onChange={(e) =>\n                                      setBeliefsPrompt(e.target.value)\n                                    }\n                                    className=\"min-h-[100px]\"\n                                    placeholder=\"Enter prompt for extracting beliefs...\"\n                                  />\n                                </div>\n\n                                <div className=\"space-y-2\">\n                                  <label\n                                    htmlFor=\"conversation-select\"\n                                    className=\"text-sm font-medium\"\n                                  >\n                                    Select Conversation\n                                  </label>\n                                  <Select\n                                    value={selectedConversationId || undefined}\n                                    onValueChange={(value: string) =>\n                                      setSelectedConversationId(value)\n                                    }\n                                  >\n                                    <SelectTrigger className=\"w-full bg-purple-950 border-purple-700 text-white\">\n                                      <SelectValue placeholder=\"Select a conversation\" />\n                                    </SelectTrigger>\n                                    <SelectContent className=\"bg-purple-950 border-purple-700 text-white\">\n                                      {relevantConversations.length > 0 ? (\n                                        relevantConversations.map((conv) => (\n                                          <SelectItem\n                                            key={conv.id}\n                                            value={conv.id}\n                                          >\n                                            Conversation{\" \"}\n                                            {formatTimestamp(conv.startTime)}\n                                          </SelectItem>\n                                        ))\n                                      ) : (\n                                        <SelectItem\n                                          disabled\n                                          value=\"no-conversations\"\n                                        >\n                                          No conversations available\n                                        </SelectItem>\n                                      )}\n                                    </SelectContent>\n                                  </Select>\n                                </div>\n\n                                <Button\n                                  onClick={handleUpdateBeliefs}\n                                  className=\"bg-purple-700 hover:bg-purple-600 text-white\"\n                                  disabled={isExtractingBeliefs}\n                                >\n                                  {isExtractingBeliefs ? (\n                                    <>\n                                      Extracting Beliefs... (\n                                      {extractionProgress}%)\n                                    </>\n                                  ) : (\n                                    <>\n                                      <Search size={16} className=\"mr-2\" />\n                                      Extract Beliefs\n                                    </>\n                                  )}\n                                </Button>\n                              </div>\n                            </div>\n                          )}\n\n                          {inferenceTab === \"results\" && (\n                            <div className=\"flex-1 p-4 overflow-auto\">\n                              {extractionStep === \"idle\" && (\n                                <div className=\"text-center text-muted-foreground py-8\">\n                                  No beliefs extracted yet.\n                                </div>\n                              )}\n\n                              {extractionStep === \"extracting\" && (\n                                <div className=\"text-center py-8 space-y-4\">\n                                  <p className=\"text-muted-foreground\">\n                                    Extracting beliefs...\n                                  </p>\n                                  <div className=\"w-full max-w-md mx-auto bg-gray-200 rounded-full h-2.5 dark:bg-gray-700\">\n                                    <div\n                                      className=\"bg-purple-600 h-2.5 rounded-full transition-all duration-300 ease-in-out\"\n                                      style={{\n                                        width: `${extractionProgress}%`,\n                                      }}\n                                    ></div>\n                                  </div>\n                                  <p className=\"text-sm text-muted-foreground\">\n                                    {extractionProgress}% complete\n                                  </p>\n                                </div>\n                              )}\n\n                              {extractionStep === \"refining\" && (\n                                <div className=\"text-center py-8 space-y-4\">\n                                  <p className=\"text-muted-foreground\">\n                                    Refining beliefs...\n                                  </p>\n                                  <div className=\"w-full max-w-md mx-auto bg-gray-200 rounded-full h-2.5 dark:bg-gray-700\">\n                                    <div\n                                      className=\"bg-purple-600 h-2.5 rounded-full transition-all duration-300 ease-in-out\"\n                                      style={{\n                                        width: `${extractionProgress}%`,\n                                      }}\n                                    ></div>\n                                  </div>\n                                  <p className=\"text-sm text-muted-foreground\">\n                                    {extractionProgress}% complete\n                                  </p>\n                                </div>\n                              )}\n\n                              {extractionStep === \"complete\" && (\n                                <div className=\"space-y-4\">\n                                  {extractedBeliefs.length > 0 ? (\n                                    extractedBeliefs.map((belief, index) => (\n                                      <Card key={index} className=\"p-4\">\n                                        <div className=\"flex items-center justify-between\">\n                                          <h3\n                                            className=\"font-medium truncate max-w-[80%]\"\n                                            title={belief.title}\n                                          >\n                                            {belief.title || \"Untitled belief\"}\n                                            {belief.title &&\n                                            belief.title.length > 30\n                                              ? \"...\"\n                                              : \"\"}\n                                          </h3>\n                                          <label className=\"inline-flex items-center space-x-2 cursor-pointer\">\n                                            <input\n                                              type=\"checkbox\"\n                                              className=\"h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer\"\n                                              checked={\n                                                belief.selected !== false\n                                              }\n                                              onChange={() =>\n                                                handleToggleBelief(index)\n                                              }\n                                            />\n                                            <span className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                                              Select\n                                            </span>\n                                          </label>\n                                        </div>\n                                        <p className=\"text-sm text-muted-foreground mt-1 line-clamp-2\">\n                                          {belief.refined_content ||\n                                            \"No content available\"}\n                                        </p>\n                                      </Card>\n                                    ))\n                                  ) : (\n                                    <div className=\"text-center text-muted-foreground py-8\">\n                                      No beliefs extracted.\n                                    </div>\n                                  )}\n\n                                  <Button\n                                    onClick={handleAddSelectedBeliefs}\n                                    className=\"bg-purple-700 hover:bg-purple-600 text-white\"\n                                    disabled={extractedBeliefs.length === 0}\n                                  >\n                                    Add Selected Beliefs to Knowledge\n                                  </Button>\n                                </div>\n                              )}\n                            </div>\n                          )}\n\n                          {inferenceTab === \"preview\" && (\n                            <div className=\"p-4\">\n                              <div className=\"space-y-4\">\n                                <div className=\"space-y-2\">\n                                  <label\n                                    htmlFor=\"raw-beliefs\"\n                                    className=\"text-sm font-medium\"\n                                  >\n                                    Raw Beliefs\n                                  </label>\n                                  <Textarea\n                                    id=\"raw-beliefs\"\n                                    value={JSON.stringify(rawBeliefs, null, 2)}\n                                    className=\"min-h-[100px]\"\n                                    readOnly\n                                  />\n                                </div>\n\n                                <div className=\"space-y-2\">\n                                  <label\n                                    htmlFor=\"extracted-beliefs\"\n                                    className=\"text-sm font-medium\"\n                                  >\n                                    Extracted Beliefs\n                                  </label>\n                                  <Textarea\n                                    id=\"extracted-beliefs\"\n                                    value={JSON.stringify(\n                                      extractedBeliefs,\n                                      null,\n                                      2,\n                                    )}\n                                    className=\"min-h-[100px]\"\n                                    readOnly\n                                  />\n                                </div>\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            )}\n\n            {selectedView === \"system\" && (\n              <Card>\n                <CardHeader className=\"pb-2\">\n                  <CardTitle className=\"text-base\">System Prompt</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <div className=\"space-y-2\">\n                      <label\n                        htmlFor=\"system-prompt-name\"\n                        className=\"text-sm font-medium\"\n                      >\n                        Prompt Name\n                      </label>\n                      <Input\n                        id=\"system-prompt-name\"\n                        value={systemPromptName}\n                        onChange={(e) => setSystemPromptName(e.target.value)}\n                        placeholder=\"Enter prompt name...\"\n                      />\n                    </div>\n                    <div className=\"space-y-2\">\n                      <label\n                        htmlFor=\"system-prompt\"\n                        className=\"text-sm font-medium\"\n                      >\n                        System Prompt\n                      </label>\n                      <Textarea\n                        id=\"system-prompt\"\n                        value={systemPrompt}\n                        onChange={(e) => setSystemPrompt(e.target.value)}\n                        className=\"min-h-[200px]\"\n                        placeholder=\"Enter system prompt...\"\n                      />\n                    </div>\n                    <Button\n                      onClick={handleSaveSystemPrompt}\n                      className=\"bg-purple-700 hover:bg-purple-600 text-white\"\n                      disabled={isProcessing}\n                    >\n                      <Save size={16} className=\"mr-2\" />\n                      Save System Prompt\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n            )}\n\n            {selectedView === \"tools\" && (\n              <Card>\n                <CardHeader className=\"pb-2\">\n                  <CardTitle className=\"text-base\">Agent Tools</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    {/* Information Access Tools */}\n                    <div className=\"space-y-2\">\n                      <h4 className=\"text-sm font-medium\">\n                        Information Access Tools\n                      </h4>\n                      <div className=\"grid grid-cols-2 gap-2\">\n                        <label className=\"inline-flex items-center space-x-2 cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            className=\"h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer\"\n                            checked={toolPermissions.internetSearch}\n                            onChange={(e) =>\n                              handleToolChange(\n                                \"internetSearch\",\n                                e.target.checked,\n                              )\n                            }\n                          />\n                          <span className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                            Internet Search\n                          </span>\n                        </label>\n                        <label className=\"inline-flex items-center space-x-2 cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            className=\"h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer\"\n                            checked={toolPermissions.webScraping}\n                            onChange={(e) =>\n                              handleToolChange(\"webScraping\", e.target.checked)\n                            }\n                          />\n                          <span className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                            Web Scraping\n                          </span>\n                        </label>\n                        <label className=\"inline-flex items-center space-x-2 cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            className=\"h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer\"\n                            checked={toolPermissions.wikipediaAccess}\n                            onChange={(e) =>\n                              handleToolChange(\n                                \"wikipediaAccess\",\n                                e.target.checked,\n                              )\n                            }\n                          />\n                          <span className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                            Wikipedia Access\n                          </span>\n                        </label>\n                        <label className=\"inline-flex items-center space-x-2 cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            className=\"h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer\"\n                            checked={toolPermissions.newsApi}\n                            onChange={(e) =>\n                              handleToolChange(\"newsApi\", e.target.checked)\n                            }\n                          />\n                          <span className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                            News API\n                          </span>\n                        </label>\n                        <label className=\"inline-flex items-center space-x-2 cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            className=\"h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer\"\n                            checked={toolPermissions.academicSearch}\n                            onChange={(e) =>\n                              handleToolChange(\n                                \"academicSearch\",\n                                e.target.checked,\n                              )\n                            }\n                          />\n                          <span className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                            Academic Search\n                          </span>\n                        </label>\n                        <label className=\"inline-flex items-center space-x-2 cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            className=\"h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer\"\n                            checked={toolPermissions.documentRetrieval}\n                            onChange={(e) =>\n                              handleToolChange(\n                                \"documentRetrieval\",\n                                e.target.checked,\n                              )\n                            }\n                          />\n                          <span className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                            Document Retrieval\n                          </span>\n                        </label>\n                      </div>\n                    </div>\n\n                    {/* Content Generation & Processing */}\n                    <div className=\"space-y-2\">\n                      <h4 className=\"text-sm font-medium\">\n                        Content Generation &amp; Processing\n                      </h4>\n                      <div className=\"grid grid-cols-2 gap-2\">\n                        <label className=\"inline-flex items-center space-x-2 cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            className=\"h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer\"\n                            checked={toolPermissions.imageGeneration}\n                            onChange={(e) =>\n                              handleToolChange(\n                                \"imageGeneration\",\n                                e.target.checked,\n                              )\n                            }\n                          />\n                          <span className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                            Image Generation\n                          </span>\n                        </label>\n                        <label className=\"inline-flex items-center space-x-2 cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            className=\"h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer\"\n                            checked={toolPermissions.textSummarization}\n                            onChange={(e) =>\n                              handleToolChange(\n                                \"textSummarization\",\n                                e.target.checked,\n                              )\n                            }\n                          />\n                          <span className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                            Text Summarization\n                          </span>\n                        </label>\n                        <label className=\"inline-flex items-center space-x-2 cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            className=\"h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer\"\n                            checked={toolPermissions.translation}\n                            onChange={(e) =>\n                              handleToolChange(\"translation\", e.target.checked)\n                            }\n                          />\n                          <span className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                            Translation\n                          </span>\n                        </label>\n                        <label className=\"inline-flex items-center space-x-2 cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            className=\"h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer\"\n                            checked={toolPermissions.codeExecution}\n                            onChange={(e) =>\n                              handleToolChange(\n                                \"codeExecution\",\n                                e.target.checked,\n                              )\n                            }\n                          />\n                          <span className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                            Code Execution\n                          </span>\n                        </label>\n                      </div>\n                    </div>\n\n                    {/* Knowledge & Reasoning Tools */}\n                    <div className=\"space-y-2\">\n                      <h4 className=\"text-sm font-medium\">\n                        Knowledge &amp; Reasoning Tools\n                      </h4>\n                      <div className=\"grid grid-cols-2 gap-2\">\n                        <label className=\"inline-flex items-center space-x-2 cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            className=\"h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer\"\n                            checked={toolPermissions.calculator}\n                            onChange={(e) =>\n                              handleToolChange(\"calculator\", e.target.checked)\n                            }\n                          />\n                          <span className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                            Calculator\n                          </span>\n                        </label>\n                        <label className=\"inline-flex items-center space-x-2 cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            className=\"h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer\"\n                            checked={toolPermissions.knowledgeGraphQuery}\n                            onChange={(e) =>\n                              handleToolChange(\n                                \"knowledgeGraphQuery\",\n                                e.target.checked,\n                              )\n                            }\n                          />\n                          <span className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                            Knowledge Graph Query\n                          </span>\n                        </label>\n                        <label className=\"inline-flex items-center space-x-2 cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            className=\"h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer\"\n                            checked={toolPermissions.factChecking}\n                            onChange={(e) =>\n                              handleToolChange(\"factChecking\", e.target.checked)\n                            }\n                          />\n                          <span className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                            Fact Checking\n                          </span>\n                        </label>\n                        <label className=\"inline-flex items-center space-x-2 cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            className=\"h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer\"\n                            checked={toolPermissions.timelineGenerator}\n                            onChange={(e) =>\n                              handleToolChange(\n                                \"timelineGenerator\",\n                                e.target.checked,\n                              )\n                            }\n                          />\n                          <span className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                            Timeline Generator\n                          </span>\n                        </label>\n                      </div>\n                    </div>\n\n                    {/* External Integrations */}\n                    <div className=\"space-y-2\">\n                      <h4 className=\"text-sm font-medium\">\n                        External Integrations\n                      </h4>\n                      <div className=\"grid grid-cols-2 gap-2\">\n                        <label className=\"inline-flex items-center space-x-2 cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            className=\"h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer\"\n                            checked={toolPermissions.weatherData}\n                            onChange={(e) =>\n                              handleToolChange(\"weatherData\", e.target.checked)\n                            }\n                          />\n                          <span className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                            Weather Data\n                          </span>\n                        </label>\n                        <label className=\"inline-flex items-center space-x-2 cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            className=\"h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer\"\n                            checked={toolPermissions.mapLocationData}\n                            onChange={(e) =>\n                              handleToolChange(\n                                \"mapLocationData\",\n                                e.target.checked,\n                              )\n                            }\n                          />\n                          <span className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                            Map Location Data\n                          </span>\n                        </label>\n                        <label className=\"inline-flex items-center space-x-2 cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            className=\"h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer\"\n                            checked={toolPermissions.financialData}\n                            onChange={(e) =>\n                              handleToolChange(\n                                \"financialData\",\n                                e.target.checked,\n                              )\n                            }\n                          />\n                          <span className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                            Financial Data\n                          </span>\n                        </label>\n                        <label className=\"inline-flex items-center space-x-2 cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            className=\"h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer\"\n                            checked={toolPermissions.publicDatasets}\n                            onChange={(e) =>\n                              handleToolChange(\n                                \"publicDatasets\",\n                                e.target.checked,\n                              )\n                            }\n                          />\n                          <span className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                            Public Datasets\n                          </span>\n                        </label>\n                      </div>\n                    </div>\n\n                    {/* Agent-Specific Tools */}\n                    <div className=\"space-y-2\">\n                      <h4 className=\"text-sm font-medium\">\n                        Agent-Specific Tools\n                      </h4>\n                      <div className=\"grid grid-cols-2 gap-2\">\n                        <label className=\"inline-flex items-center space-x-2 cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            className=\"h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer\"\n                            checked={toolPermissions.memorySearch}\n                            onChange={(e) =>\n                              handleToolChange(\"memorySearch\", e.target.checked)\n                            }\n                          />\n                          <span className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                            Memory Search\n                          </span>\n                        </label>\n                        <label className=\"inline-flex items-center space-x-2 cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            className=\"h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer\"\n                            checked={toolPermissions.crossAgentKnowledge}\n                            onChange={(e) =>\n                              handleToolChange(\n                                \"crossAgentKnowledge\",\n                                e.target.checked,\n                              )\n                            }\n                          />\n                          <span className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                            Cross-Agent Knowledge\n                          </span>\n                        </label>\n                        <label className=\"inline-flex items-center space-x-2 cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            className=\"h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer\"\n                            checked={toolPermissions.conversationAnalysis}\n                            onChange={(e) =>\n                              handleToolChange(\n                                \"conversationAnalysis\",\n                                e.target.checked,\n                              )\n                            }\n                          />\n                          <span className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                            Conversation Analysis\n                          </span>\n                        </label>\n                      </div>\n                    </div>\n\n                    <Button\n                      onClick={handleSaveToolSettings}\n                      className=\"bg-purple-700 hover:bg-purple-600 text-white\"\n                      disabled={!hasToolChanges || isSavingTools}\n                    >\n                      <Save size={16} className=\"mr-2\" />\n                      Save Tool Settings\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n            )}\n          </div>\n        </div>\n      ) : (\n        <div className=\"flex-1 flex items-center justify-center text-muted-foreground\">\n          Select an agent to view memory.\n        </div>\n      )}\n\n      {/* Delete Confirmation Dialog */}\n      {isDeleteDialogOpen && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/50\">\n          <Card className=\"max-w-md w-full\">\n            <CardHeader>\n              <CardTitle>Delete Knowledge</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <p>\n                Are you sure you want to delete &quot;{knowledgeToDelete?.title}\n                &quot;?\n              </p>\n              <div className=\"mt-4 flex justify-end gap-2\">\n                <Button\n                  variant=\"ghost\"\n                  onClick={() => setIsDeleteDialogOpen(false)}\n                >\n                  Cancel\n                </Button>\n                <Button variant=\"destructive\" onClick={handleDeleteKnowledge}>\n                  Delete\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      )}\n    </div>\n  );\n}\n"],
      names: ["MemoryViewer", "logger", "createLogger", "defaultToolPermissions", "internetSearch", "webScraping", "wikipediaAccess", "newsApi", "academicSearch", "documentRetrieval", "imageGeneration", "textSummarization", "translation", "codeExecution", "calculator", "knowledgeGraphQuery", "factChecking", "timelineGenerator", "weatherData", "mapLocationData", "financialData", "publicDatasets", "memorySearch", "crossAgentKnowledge", "conversationAnalysis", "selectedAgent", "conversationHistory", "onAddKnowledge", "onUpdateAgent", "onDeleteKnowledge", "onUpdateKnowledge", "agents", "selectedKnowledgeNode", "onClearSelectedKnowledgeNode", "onSelectAgent", "biography", "setBiography", "useState", "selectedView", "setSelectedView", "toast", "useToast", "llmContext", "useLLM", "isProcessing", "setIsProcessing", "knowledgeTab", "setKnowledgeTab", "newKnowledgeTitle", "setNewKnowledgeTitle", "newKnowledgeContent", "setNewKnowledgeContent", "selectedKnowledge", "setSelectedKnowledge", "editingKnowledge", "setEditingKnowledge", "beliefsPrompt", "setBeliefsPrompt", "editedKnowledgeContent", "setEditedKnowledgeContent", "editedKnowledgeTitle", "setEditedKnowledgeTitle", "searchQuery", "setSearchQuery", "selectedTag", "setSelectedTag", "sortBy", "setSortBy", "isDeleteDialogOpen", "setIsDeleteDialogOpen", "knowledgeToDelete", "setKnowledgeToDelete", "systemPrompt", "setSystemPrompt", "systemPromptName", "setSystemPromptName", "extractedBeliefs", "setExtractedBeliefs", "rawBeliefs", "setRawBeliefs", "isExtractingBeliefs", "setIsExtractingBeliefs", "selectedConversationId", "setSelectedConversationId", "extractionStep", "setExtractionStep", "extractionProgress", "setExtractionProgress", "inferenceTab", "setInferenceTab", "toolPermissions", "setToolPermissions", "isSavingTools", "setIsSavingTools", "hasToolChanges", "setHasToolChanges", "pendingKnowledgeSelectionRef", "useRef", "previousAgentIdRef", "useEffect", "current", "id", "matchingEntry", "knowledge", "find", "entry", "title", "entryByTitle", "content", "uniqueTags", "useMemo", "tags", "Set", "forEach", "tag", "add", "Array", "from", "sort", "filteredKnowledge", "filtered", "query", "toLowerCase", "filter", "includes", "a", "b", "timestamp", "getTime", "localeCompare", "relevantConversations", "conv", "participants", "startTime", "handleSaveBiography", "description", "name", "duration", "handleAddKnowledge", "trim", "newKnowledge", "Date", "now", "extractTagsFromMarkdown", "handleUpdateBeliefs", "variant", "targetConversation", "conversationText", "messages", "map", "msg", "senderName", "senderId", "join", "debugLog", "client", "Error", "rawBeliefsResponse", "extractBeliefs", "parseBeliefs", "existingKnowledge", "refinedResponse", "generateResponse", "belief", "index", "confidence", "refined", "parseRefinedBeliefs", "length", "refineError", "console", "error", "extractError", "message", "handleToggleBelief", "prev", "i", "selected", "handleAddSelectedBeliefs", "selectedBeliefs", "info", "knowledgeEntries", "Math", "random", "toString", "substring", "refined_content", "handleSaveKnowledgeChanges", "updatedTags", "updates", "handleDeleteKnowledge", "handleSelectAgentForKnowledge", "agent", "type", "k", "handleSelectKnowledgeEntry", "event", "stopPropagation", "getAgentsWithSelectedNode", "some", "getEntriesWithTag", "getEntriesWithTitle", "clearFilters", "renderMarkdownWithTags", "replace", "handleSaveSystemPrompt", "setTimeout", "handleTagClick", "e", "target", "tagElement", "closest", "getAttribute", "handleToolChange", "toolKey", "checked", "updated", "handleSaveToolSettings", "div", "className", "h2", "Button", "size", "onClick", "ArrowLeft", "h3", "Card", "CardHeader", "CardTitle", "CardContent", "ScrollArea", "style", "backgroundColor", "color", "p", "span", "formatTimestamp", "Select", "value", "onValueChange", "SelectTrigger", "SelectValue", "placeholder", "SelectContent", "SelectItem", "exportAgentKnowledge", "Save", "label", "htmlFor", "Textarea", "onChange", "height", "toLocaleTimeString", "Search", "Input", "X", "maxHeight", "overflow", "h4", "slice", "Badge", "Edit", "Trash", "dangerouslySetInnerHTML", "__html", "undefined", "disabled", "width", "input", "JSON", "stringify", "readOnly"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "00bb2fc19df9133060de77fecd0b2cbb79c1345d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1rgr27b886 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1rgr27b886();
cov_1rgr27b886().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1rgr27b886().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1rgr27b886().f[0]++;
    cov_1rgr27b886().s[2]++;
    return MemoryViewer;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1rgr27b886().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_1rgr27b886().s[4]++, require("react"));
const _button =
/* istanbul ignore next */
(cov_1rgr27b886().s[5]++, require("./ui/button"));
const _textarea =
/* istanbul ignore next */
(cov_1rgr27b886().s[6]++, require("./ui/textarea"));
const _card =
/* istanbul ignore next */
(cov_1rgr27b886().s[7]++, require("./ui/card"));
const _lucidereact =
/* istanbul ignore next */
(cov_1rgr27b886().s[8]++, require("lucide-react"));
const _select =
/* istanbul ignore next */
(cov_1rgr27b886().s[9]++, require("./ui/select"));
const _scrollarea =
/* istanbul ignore next */
(cov_1rgr27b886().s[10]++, require("./ui/scroll-area"));
const _utils =
/* istanbul ignore next */
(cov_1rgr27b886().s[11]++, require("../lib/utils"));
const _usetoast =
/* istanbul ignore next */
(cov_1rgr27b886().s[12]++, require("../hooks/use-toast"));
const _input =
/* istanbul ignore next */
(cov_1rgr27b886().s[13]++, require("./ui/input"));
const _badge =
/* istanbul ignore next */
(cov_1rgr27b886().s[14]++, require("./ui/badge"));
const _llmcontext =
/* istanbul ignore next */
(cov_1rgr27b886().s[15]++, require("../contexts/llm-context"));
const _beliefextraction =
/* istanbul ignore next */
(cov_1rgr27b886().s[16]++, require("../lib/belief-extraction"));
const _knowledgeexport =
/* istanbul ignore next */
(cov_1rgr27b886().s[17]++, require("../lib/knowledge-export"));
const _debuglogger =
/* istanbul ignore next */
(cov_1rgr27b886().s[18]++, require("../lib/debug-logger"));
const logger =
/* istanbul ignore next */
(cov_1rgr27b886().s[19]++, (0, _debuglogger.createLogger)("MEMORY-VIEWER"));
// Add default tool permissions
const defaultToolPermissions =
/* istanbul ignore next */
(cov_1rgr27b886().s[20]++, {
  // Information Access Tools
  internetSearch: false,
  webScraping: false,
  wikipediaAccess: false,
  newsApi: false,
  academicSearch: false,
  documentRetrieval: false,
  // Content Generation & Processing
  imageGeneration: false,
  textSummarization: false,
  translation: false,
  codeExecution: false,
  // Knowledge & Reasoning Tools
  calculator: false,
  knowledgeGraphQuery: false,
  factChecking: false,
  timelineGenerator: false,
  // External Integrations
  weatherData: false,
  mapLocationData: false,
  financialData: false,
  publicDatasets: false,
  // Agent-Specific Tools
  memorySearch: false,
  crossAgentKnowledge: false,
  conversationAnalysis: false
});
function MemoryViewer({
  selectedAgent,
  conversationHistory,
  onAddKnowledge,
  onUpdateAgent,
  onDeleteKnowledge,
  onUpdateKnowledge,
  agents,
  selectedKnowledgeNode =
  /* istanbul ignore next */
  (cov_1rgr27b886().b[0][0]++, null),
  onClearSelectedKnowledgeNode =
  /* istanbul ignore next */
  (cov_1rgr27b886().b[1][0]++, () => {
    /* istanbul ignore next */
    cov_1rgr27b886().f[2]++;
  }),
  onSelectAgent
}) {
  /* istanbul ignore next */
  cov_1rgr27b886().f[1]++;
  const [biography, setBiography] =
  /* istanbul ignore next */
  (cov_1rgr27b886().s[21]++, (0, _react.useState)(""));
  const [selectedView, setSelectedView] =
  /* istanbul ignore next */
  (cov_1rgr27b886().s[22]++, (0, _react.useState)("biography"));
  const {
    toast
  } =
  /* istanbul ignore next */
  (cov_1rgr27b886().s[23]++, (0, _usetoast.useToast)());
  // Get LLM context
  const llmContext =
  /* istanbul ignore next */
  (cov_1rgr27b886().s[24]++, (0, _llmcontext.useLLM)());
  const {
    isProcessing,
    setIsProcessing
  } =
  /* istanbul ignore next */
  (cov_1rgr27b886().s[25]++, llmContext);
  // Knowledge state
  const [knowledgeTab, setKnowledgeTab] =
  /* istanbul ignore next */
  (cov_1rgr27b886().s[26]++, (0, _react.useState)("browse"));
  const [newKnowledgeTitle, setNewKnowledgeTitle] =
  /* istanbul ignore next */
  (cov_1rgr27b886().s[27]++, (0, _react.useState)(""));
  const [newKnowledgeContent, setNewKnowledgeContent] =
  /* istanbul ignore next */
  (cov_1rgr27b886().s[28]++, (0, _react.useState)(""));
  const [selectedKnowledge, setSelectedKnowledge] =
  /* istanbul ignore next */
  (cov_1rgr27b886().s[29]++, (0, _react.useState)(null));
  const [editingKnowledge, setEditingKnowledge] =
  /* istanbul ignore next */
  (cov_1rgr27b886().s[30]++, (0, _react.useState)(false));
  const [beliefsPrompt, setBeliefsPrompt] =
  /* istanbul ignore next */
  (cov_1rgr27b886().s[31]++, (0, _react.useState)("Extract factual [[knowledge]], user [[preferences]], and [[research-relevant]] information. Focus on substantive content that would help with research projects and future conversations."));
  const [editedKnowledgeContent, setEditedKnowledgeContent] =
  /* istanbul ignore next */
  (cov_1rgr27b886().s[32]++, (0, _react.useState)(""));
  const [editedKnowledgeTitle, setEditedKnowledgeTitle] =
  /* istanbul ignore next */
  (cov_1rgr27b886().s[33]++, (0, _react.useState)(""));
  // Knowledge search and filter state
  const [searchQuery, setSearchQuery] =
  /* istanbul ignore next */
  (cov_1rgr27b886().s[34]++, (0, _react.useState)(""));
  const [selectedTag, setSelectedTag] =
  /* istanbul ignore next */
  (cov_1rgr27b886().s[35]++, (0, _react.useState)("all_tags"));
  const [sortBy, setSortBy] =
  /* istanbul ignore next */
  (cov_1rgr27b886().s[36]++, (0, _react.useState)("newest"));
  // Delete confirmation dialog
  const [isDeleteDialogOpen, setIsDeleteDialogOpen] =
  /* istanbul ignore next */
  (cov_1rgr27b886().s[37]++, (0, _react.useState)(false));
  const [knowledgeToDelete, setKnowledgeToDelete] =
  /* istanbul ignore next */
  (cov_1rgr27b886().s[38]++, (0, _react.useState)(null));
  // System prompt state
  const [systemPrompt, setSystemPrompt] =
  /* istanbul ignore next */
  (cov_1rgr27b886().s[39]++, (0, _react.useState)(""));
  const [systemPromptName, setSystemPromptName] =
  /* istanbul ignore next */
  (cov_1rgr27b886().s[40]++, (0, _react.useState)("Default"));
  // Belief extraction state
  const [extractedBeliefs, setExtractedBeliefs] =
  /* istanbul ignore next */
  (cov_1rgr27b886().s[41]++, (0, _react.useState)([]));
  const [rawBeliefs, setRawBeliefs] =
  /* istanbul ignore next */
  (cov_1rgr27b886().s[42]++, (0, _react.useState)([]));
  const [isExtractingBeliefs, setIsExtractingBeliefs] =
  /* istanbul ignore next */
  (cov_1rgr27b886().s[43]++, (0, _react.useState)(false));
  const [selectedConversationId, setSelectedConversationId] =
  /* istanbul ignore next */
  (cov_1rgr27b886().s[44]++, (0, _react.useState)(null));
  const [extractionStep, setExtractionStep] =
  /* istanbul ignore next */
  (cov_1rgr27b886().s[45]++, (0, _react.useState)("idle"));
  const [extractionProgress, setExtractionProgress] =
  /* istanbul ignore next */
  (cov_1rgr27b886().s[46]++, (0, _react.useState)(0));
  const [inferenceTab, setInferenceTab] =
  /* istanbul ignore next */
  (cov_1rgr27b886().s[47]++, (0, _react.useState)("prompt"));
  // Add these state variables to the MemoryViewer component, near the other state declarations
  const [toolPermissions, setToolPermissions] =
  /* istanbul ignore next */
  (cov_1rgr27b886().s[48]++, (0, _react.useState)(defaultToolPermissions));
  const [isSavingTools, setIsSavingTools] =
  /* istanbul ignore next */
  (cov_1rgr27b886().s[49]++, (0, _react.useState)(false));
  const [hasToolChanges, setHasToolChanges] =
  /* istanbul ignore next */
  (cov_1rgr27b886().s[50]++, (0, _react.useState)(false));
  // Add a ref to track pending knowledge selection after agent change
  const pendingKnowledgeSelectionRef =
  /* istanbul ignore next */
  (cov_1rgr27b886().s[51]++, (0, _react.useRef)(null));
  const previousAgentIdRef =
  /* istanbul ignore next */
  (cov_1rgr27b886().s[52]++, (0, _react.useRef)(null));
  // Update biography state when selected agent changes
  /* istanbul ignore next */
  cov_1rgr27b886().s[53]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1rgr27b886().f[3]++;
    cov_1rgr27b886().s[54]++;
    if (selectedAgent) {
      /* istanbul ignore next */
      cov_1rgr27b886().b[2][0]++;
      cov_1rgr27b886().s[55]++;
      setBiography(selectedAgent.biography);
      // Only reset selectedKnowledge if we don't have a pending selection
      // and if the agent has actually changed
      /* istanbul ignore next */
      cov_1rgr27b886().s[56]++;
      if (
      /* istanbul ignore next */
      (cov_1rgr27b886().b[4][0]++, !pendingKnowledgeSelectionRef.current) &&
      /* istanbul ignore next */
      (cov_1rgr27b886().b[4][1]++, previousAgentIdRef.current !== selectedAgent.id)) {
        /* istanbul ignore next */
        cov_1rgr27b886().b[3][0]++;
        cov_1rgr27b886().s[57]++;
        setSelectedKnowledge(null);
      } else
      /* istanbul ignore next */
      {
        cov_1rgr27b886().b[3][1]++;
      }
      cov_1rgr27b886().s[58]++;
      setEditingKnowledge(false);
      // Reset search and filter when changing agents
      /* istanbul ignore next */
      cov_1rgr27b886().s[59]++;
      setSearchQuery("");
      /* istanbul ignore next */
      cov_1rgr27b886().s[60]++;
      setSelectedTag("all_tags");
      // Initialize tool permissions with agent's existing permissions or defaults
      /* istanbul ignore next */
      cov_1rgr27b886().s[61]++;
      setToolPermissions(
      /* istanbul ignore next */
      (cov_1rgr27b886().b[5][0]++, selectedAgent.toolPermissions) ||
      /* istanbul ignore next */
      (cov_1rgr27b886().b[5][1]++, defaultToolPermissions));
      /* istanbul ignore next */
      cov_1rgr27b886().s[62]++;
      setHasToolChanges(false);
      // Update the previous agent id ref
      /* istanbul ignore next */
      cov_1rgr27b886().s[63]++;
      previousAgentIdRef.current = selectedAgent.id;
    } else
    /* istanbul ignore next */
    {
      cov_1rgr27b886().b[2][1]++;
    }
  }, [selectedAgent]);
  // Add a new useEffect to handle pending knowledge selection
  /* istanbul ignore next */
  cov_1rgr27b886().s[64]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1rgr27b886().f[4]++;
    cov_1rgr27b886().s[65]++;
    // If we have a pending knowledge selection and a selected agent
    if (
    /* istanbul ignore next */
    (cov_1rgr27b886().b[7][0]++, pendingKnowledgeSelectionRef.current) &&
    /* istanbul ignore next */
    (cov_1rgr27b886().b[7][1]++, selectedAgent)) {
      /* istanbul ignore next */
      cov_1rgr27b886().b[6][0]++;
      // Find the matching knowledge entry in the selected agent's knowledge
      const matchingEntry =
      /* istanbul ignore next */
      (cov_1rgr27b886().s[66]++, selectedAgent.knowledge.find(entry => {
        /* istanbul ignore next */
        cov_1rgr27b886().f[5]++;
        cov_1rgr27b886().s[67]++;
        return entry.id === pendingKnowledgeSelectionRef.current?.id;
      }));
      // If we found a matching entry, select it
      /* istanbul ignore next */
      cov_1rgr27b886().s[68]++;
      if (matchingEntry) {
        /* istanbul ignore next */
        cov_1rgr27b886().b[8][0]++;
        cov_1rgr27b886().s[69]++;
        setSelectedKnowledge(matchingEntry);
      } else {
        /* istanbul ignore next */
        cov_1rgr27b886().b[8][1]++;
        cov_1rgr27b886().s[70]++;
        if (pendingKnowledgeSelectionRef.current.title) {
          /* istanbul ignore next */
          cov_1rgr27b886().b[9][0]++;
          const entryByTitle =
          /* istanbul ignore next */
          (cov_1rgr27b886().s[71]++, selectedAgent.knowledge.find(entry => {
            /* istanbul ignore next */
            cov_1rgr27b886().f[6]++;
            cov_1rgr27b886().s[72]++;
            return entry.title === pendingKnowledgeSelectionRef.current?.title;
          }));
          /* istanbul ignore next */
          cov_1rgr27b886().s[73]++;
          if (entryByTitle) {
            /* istanbul ignore next */
            cov_1rgr27b886().b[10][0]++;
            cov_1rgr27b886().s[74]++;
            setSelectedKnowledge(entryByTitle);
          } else
          /* istanbul ignore next */
          {
            cov_1rgr27b886().b[10][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_1rgr27b886().b[9][1]++;
        }
      }
      // Clear the pending selection
      /* istanbul ignore next */
      cov_1rgr27b886().s[75]++;
      pendingKnowledgeSelectionRef.current = null;
    } else
    /* istanbul ignore next */
    {
      cov_1rgr27b886().b[6][1]++;
    }
  }, [selectedAgent]);
  // Update edited knowledge content when selected knowledge changes
  /* istanbul ignore next */
  cov_1rgr27b886().s[76]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1rgr27b886().f[7]++;
    cov_1rgr27b886().s[77]++;
    if (selectedKnowledge) {
      /* istanbul ignore next */
      cov_1rgr27b886().b[11][0]++;
      cov_1rgr27b886().s[78]++;
      setEditedKnowledgeContent(selectedKnowledge.content);
      /* istanbul ignore next */
      cov_1rgr27b886().s[79]++;
      setEditedKnowledgeTitle(selectedKnowledge.title);
    } else
    /* istanbul ignore next */
    {
      cov_1rgr27b886().b[11][1]++;
    }
  }, [selectedKnowledge]);
  // When a knowledge node is selected from the global graph, switch to the node selection view
  /* istanbul ignore next */
  cov_1rgr27b886().s[80]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1rgr27b886().f[8]++;
    cov_1rgr27b886().s[81]++;
    if (selectedKnowledgeNode) {
      /* istanbul ignore next */
      cov_1rgr27b886().b[12][0]++;
      cov_1rgr27b886().s[82]++;
      setSelectedView("node-selection");
    } else
    /* istanbul ignore next */
    {
      cov_1rgr27b886().b[12][1]++;
    }
  }, [selectedKnowledgeNode]);
  // Get all unique tags from the selected agent's knowledge
  const uniqueTags =
  /* istanbul ignore next */
  (cov_1rgr27b886().s[83]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_1rgr27b886().f[9]++;
    cov_1rgr27b886().s[84]++;
    if (!selectedAgent) {
      /* istanbul ignore next */
      cov_1rgr27b886().b[13][0]++;
      cov_1rgr27b886().s[85]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_1rgr27b886().b[13][1]++;
    }
    const tags =
    /* istanbul ignore next */
    (cov_1rgr27b886().s[86]++, new Set());
    /* istanbul ignore next */
    cov_1rgr27b886().s[87]++;
    selectedAgent.knowledge.forEach(entry => {
      /* istanbul ignore next */
      cov_1rgr27b886().f[10]++;
      cov_1rgr27b886().s[88]++;
      entry.tags.forEach(tag => {
        /* istanbul ignore next */
        cov_1rgr27b886().f[11]++;
        cov_1rgr27b886().s[89]++;
        return tags.add(tag);
      });
    });
    /* istanbul ignore next */
    cov_1rgr27b886().s[90]++;
    return Array.from(tags).sort();
  }, [selectedAgent]));
  // Filter and sort knowledge entries based on search, tag, and sort criteria
  const filteredKnowledge =
  /* istanbul ignore next */
  (cov_1rgr27b886().s[91]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_1rgr27b886().f[12]++;
    cov_1rgr27b886().s[92]++;
    if (!selectedAgent) {
      /* istanbul ignore next */
      cov_1rgr27b886().b[14][0]++;
      cov_1rgr27b886().s[93]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_1rgr27b886().b[14][1]++;
    }
    let filtered =
    /* istanbul ignore next */
    (cov_1rgr27b886().s[94]++, [...selectedAgent.knowledge]);
    // Apply search filter
    /* istanbul ignore next */
    cov_1rgr27b886().s[95]++;
    if (searchQuery) {
      /* istanbul ignore next */
      cov_1rgr27b886().b[15][0]++;
      const query =
      /* istanbul ignore next */
      (cov_1rgr27b886().s[96]++, searchQuery.toLowerCase());
      /* istanbul ignore next */
      cov_1rgr27b886().s[97]++;
      filtered = filtered.filter(entry => {
        /* istanbul ignore next */
        cov_1rgr27b886().f[13]++;
        cov_1rgr27b886().s[98]++;
        return /* istanbul ignore next */(cov_1rgr27b886().b[16][0]++, entry.title.toLowerCase().includes(query)) ||
        /* istanbul ignore next */
        (cov_1rgr27b886().b[16][1]++, entry.content.toLowerCase().includes(query));
      });
    } else
    /* istanbul ignore next */
    {
      cov_1rgr27b886().b[15][1]++;
    }
    // Apply tag filter
    cov_1rgr27b886().s[99]++;
    if (
    /* istanbul ignore next */
    (cov_1rgr27b886().b[18][0]++, selectedTag) &&
    /* istanbul ignore next */
    (cov_1rgr27b886().b[18][1]++, selectedTag !== "all_tags")) {
      /* istanbul ignore next */
      cov_1rgr27b886().b[17][0]++;
      cov_1rgr27b886().s[100]++;
      filtered = filtered.filter(entry => {
        /* istanbul ignore next */
        cov_1rgr27b886().f[14]++;
        cov_1rgr27b886().s[101]++;
        return entry.tags.includes(selectedTag);
      });
    } else
    /* istanbul ignore next */
    {
      cov_1rgr27b886().b[17][1]++;
    }
    // Apply sorting
    cov_1rgr27b886().s[102]++;
    switch (sortBy) {
      case "newest":
        /* istanbul ignore next */
        cov_1rgr27b886().b[19][0]++;
        cov_1rgr27b886().s[103]++;
        filtered.sort((a, b) => {
          /* istanbul ignore next */
          cov_1rgr27b886().f[15]++;
          cov_1rgr27b886().s[104]++;
          return b.timestamp.getTime() - a.timestamp.getTime();
        });
        /* istanbul ignore next */
        cov_1rgr27b886().s[105]++;
        break;
      case "oldest":
        /* istanbul ignore next */
        cov_1rgr27b886().b[19][1]++;
        cov_1rgr27b886().s[106]++;
        filtered.sort((a, b) => {
          /* istanbul ignore next */
          cov_1rgr27b886().f[16]++;
          cov_1rgr27b886().s[107]++;
          return a.timestamp.getTime() - b.timestamp.getTime();
        });
        /* istanbul ignore next */
        cov_1rgr27b886().s[108]++;
        break;
      case "title":
        /* istanbul ignore next */
        cov_1rgr27b886().b[19][2]++;
        cov_1rgr27b886().s[109]++;
        filtered.sort((a, b) => {
          /* istanbul ignore next */
          cov_1rgr27b886().f[17]++;
          cov_1rgr27b886().s[110]++;
          return a.title.localeCompare(b.title);
        });
        /* istanbul ignore next */
        cov_1rgr27b886().s[111]++;
        break;
    }
    /* istanbul ignore next */
    cov_1rgr27b886().s[112]++;
    return filtered;
  }, [selectedAgent, searchQuery, selectedTag, sortBy]));
  // Get relevant conversations for the selected agent
  const relevantConversations =
  /* istanbul ignore next */
  (cov_1rgr27b886().s[113]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_1rgr27b886().f[18]++;
    cov_1rgr27b886().s[114]++;
    if (!selectedAgent) {
      /* istanbul ignore next */
      cov_1rgr27b886().b[20][0]++;
      cov_1rgr27b886().s[115]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_1rgr27b886().b[20][1]++;
    }
    cov_1rgr27b886().s[116]++;
    return conversationHistory.filter(conv => {
      /* istanbul ignore next */
      cov_1rgr27b886().f[19]++;
      cov_1rgr27b886().s[117]++;
      return conv.participants.includes(selectedAgent.id);
    }).sort((a, b) => {
      /* istanbul ignore next */
      cov_1rgr27b886().f[20]++;
      cov_1rgr27b886().s[118]++;
      return b.startTime.getTime() - a.startTime.getTime();
    });
  }, [selectedAgent, conversationHistory]));
  /* istanbul ignore next */
  cov_1rgr27b886().s[119]++;
  const handleSaveBiography = () => {
    /* istanbul ignore next */
    cov_1rgr27b886().f[21]++;
    cov_1rgr27b886().s[120]++;
    if (!selectedAgent) {
      /* istanbul ignore next */
      cov_1rgr27b886().b[21][0]++;
      cov_1rgr27b886().s[121]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1rgr27b886().b[21][1]++;
    }
    cov_1rgr27b886().s[122]++;
    onUpdateAgent(selectedAgent.id, {
      biography
    });
    /* istanbul ignore next */
    cov_1rgr27b886().s[123]++;
    toast({
      title: "Biography updated",
      description: `${selectedAgent.name}'s biography has been updated.`,
      duration: 3000
    });
  };
  /* istanbul ignore next */
  cov_1rgr27b886().s[124]++;
  const handleAddKnowledge = () => {
    /* istanbul ignore next */
    cov_1rgr27b886().f[22]++;
    cov_1rgr27b886().s[125]++;
    if (
    /* istanbul ignore next */
    (cov_1rgr27b886().b[23][0]++, !selectedAgent) ||
    /* istanbul ignore next */
    (cov_1rgr27b886().b[23][1]++, !newKnowledgeTitle.trim()) ||
    /* istanbul ignore next */
    (cov_1rgr27b886().b[23][2]++, !newKnowledgeContent.trim())) {
      /* istanbul ignore next */
      cov_1rgr27b886().b[22][0]++;
      cov_1rgr27b886().s[126]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1rgr27b886().b[22][1]++;
    }
    const newKnowledge =
    /* istanbul ignore next */
    (cov_1rgr27b886().s[127]++, {
      id: `knowledge-${Date.now()}`,
      title: newKnowledgeTitle,
      content: newKnowledgeContent,
      timestamp: new Date(),
      tags: (0, _utils.extractTagsFromMarkdown)(newKnowledgeContent)
    });
    /* istanbul ignore next */
    cov_1rgr27b886().s[128]++;
    onAddKnowledge(selectedAgent.id, newKnowledge);
    /* istanbul ignore next */
    cov_1rgr27b886().s[129]++;
    setNewKnowledgeTitle("");
    /* istanbul ignore next */
    cov_1rgr27b886().s[130]++;
    setNewKnowledgeContent("");
    /* istanbul ignore next */
    cov_1rgr27b886().s[131]++;
    toast({
      title: "Knowledge added",
      description: `"${newKnowledgeTitle}" has been added to ${selectedAgent.name}'s knowledge.`,
      duration: 3000
    });
  };
  // Handle belief extraction with progress tracking
  /* istanbul ignore next */
  cov_1rgr27b886().s[132]++;
  const handleUpdateBeliefs = async () => {
    /* istanbul ignore next */
    cov_1rgr27b886().f[23]++;
    cov_1rgr27b886().s[133]++;
    if (!selectedAgent) {
      /* istanbul ignore next */
      cov_1rgr27b886().b[24][0]++;
      cov_1rgr27b886().s[134]++;
      toast({
        title: "No agent selected",
        description: "Please select an agent first",
        variant: "destructive",
        duration: 3000
      });
      /* istanbul ignore next */
      cov_1rgr27b886().s[135]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1rgr27b886().b[24][1]++;
    }
    // Get the selected conversation or the most recent one
    const targetConversation =
    /* istanbul ignore next */
    (cov_1rgr27b886().s[136]++, selectedConversationId ?
    /* istanbul ignore next */
    (cov_1rgr27b886().b[25][0]++, conversationHistory.find(conv => {
      /* istanbul ignore next */
      cov_1rgr27b886().f[24]++;
      cov_1rgr27b886().s[137]++;
      return conv.id === selectedConversationId;
    })) :
    /* istanbul ignore next */
    (cov_1rgr27b886().b[25][1]++, conversationHistory.filter(conv => {
      /* istanbul ignore next */
      cov_1rgr27b886().f[25]++;
      cov_1rgr27b886().s[138]++;
      return conv.participants.includes(selectedAgent.id);
    }).sort((a, b) => {
      /* istanbul ignore next */
      cov_1rgr27b886().f[26]++;
      cov_1rgr27b886().s[139]++;
      return b.startTime.getTime() - a.startTime.getTime();
    })[0]));
    /* istanbul ignore next */
    cov_1rgr27b886().s[140]++;
    if (!targetConversation) {
      /* istanbul ignore next */
      cov_1rgr27b886().b[26][0]++;
      cov_1rgr27b886().s[141]++;
      toast({
        title: "No conversation available",
        description: "There are no conversations for this agent to analyze",
        variant: "destructive",
        duration: 3000
      });
      /* istanbul ignore next */
      cov_1rgr27b886().s[142]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1rgr27b886().b[26][1]++;
    }
    cov_1rgr27b886().s[143]++;
    setIsExtractingBeliefs(true);
    /* istanbul ignore next */
    cov_1rgr27b886().s[144]++;
    setExtractionStep("extracting");
    /* istanbul ignore next */
    cov_1rgr27b886().s[145]++;
    setExtractionProgress(10);
    /* istanbul ignore next */
    cov_1rgr27b886().s[146]++;
    setInferenceTab("results");
    /* istanbul ignore next */
    cov_1rgr27b886().s[147]++;
    try {
      // Format the conversation for analysis
      const conversationText =
      /* istanbul ignore next */
      (cov_1rgr27b886().s[148]++, targetConversation.messages.map(msg => {
        /* istanbul ignore next */
        cov_1rgr27b886().f[27]++;
        const senderName =
        /* istanbul ignore next */
        (cov_1rgr27b886().s[149]++, msg.senderId === "user" ?
        /* istanbul ignore next */
        (cov_1rgr27b886().b[27][0]++, "User") :
        /* istanbul ignore next */
        (cov_1rgr27b886().b[27][1]++,
        /* istanbul ignore next */
        (cov_1rgr27b886().b[28][0]++, agents.find(a => {
          /* istanbul ignore next */
          cov_1rgr27b886().f[28]++;
          cov_1rgr27b886().s[150]++;
          return a.id === msg.senderId;
        })?.name) ||
        /* istanbul ignore next */
        (cov_1rgr27b886().b[28][1]++, "Unknown")));
        /* istanbul ignore next */
        cov_1rgr27b886().s[151]++;
        return `${senderName}: ${msg.content}`;
      }).join("\n\n"));
      /* istanbul ignore next */
      cov_1rgr27b886().s[152]++;
      (0, _debuglogger.debugLog)("Formatted conversation for belief extraction:", conversationText);
      // FIXED: Use the client's extractBeliefs method directly instead of calling the function
      // with settings that don't contain the API key
      /* istanbul ignore next */
      cov_1rgr27b886().s[153]++;
      setExtractionProgress(30);
      /* istanbul ignore next */
      cov_1rgr27b886().s[154]++;
      try {
        /* istanbul ignore next */
        cov_1rgr27b886().s[155]++;
        // Call the client's extractBeliefs method which handles API key retrieval
        if (!llmContext.client) {
          /* istanbul ignore next */
          cov_1rgr27b886().b[29][0]++;
          cov_1rgr27b886().s[156]++;
          throw new Error("LLM client is not available");
        } else
        /* istanbul ignore next */
        {
          cov_1rgr27b886().b[29][1]++;
        }
        const rawBeliefsResponse =
        /* istanbul ignore next */
        (cov_1rgr27b886().s[157]++, await llmContext.client.extractBeliefs(conversationText, selectedAgent.name, beliefsPrompt));
        // Parse the response - the client returns a string, but we need to parse it into beliefs
        const rawBeliefs =
        /* istanbul ignore next */
        (cov_1rgr27b886().s[158]++, (0, _beliefextraction.parseBeliefs)(rawBeliefsResponse));
        /* istanbul ignore next */
        cov_1rgr27b886().s[159]++;
        (0, _debuglogger.debugLog)("Raw beliefs extracted:", rawBeliefs);
        /* istanbul ignore next */
        cov_1rgr27b886().s[160]++;
        setRawBeliefs(rawBeliefs);
        /* istanbul ignore next */
        cov_1rgr27b886().s[161]++;
        setExtractionProgress(60);
        /* istanbul ignore next */
        cov_1rgr27b886().s[162]++;
        setExtractionStep("refining");
        // Now refine the beliefs using the client's method
        /* istanbul ignore next */
        cov_1rgr27b886().s[163]++;
        try {
          // Get the existing knowledge to check for duplicates
          const existingKnowledge =
          /* istanbul ignore next */
          (cov_1rgr27b886().s[164]++, selectedAgent.knowledge);
          // Call the refine method on the client
          const refinedResponse =
          /* istanbul ignore next */
          (cov_1rgr27b886().s[165]++, await llmContext.client.generateResponse(
          // System prompt for refinement
          `You are an AI assistant that refines and enhances extracted beliefs for a knowledge base.
Your task is to analyze each belief, rate its accuracy and relevance, categorize it, and suggest a title.

IMPORTANT: Maintain the Obsidian-style markdown format with [[double brackets]] around key concepts.`,
          // User prompt with the raw beliefs
          `Below are beliefs extracted from a conversation.
Refine these beliefs according to these priorities: ${beliefsPrompt}

EXTRACTED BELIEFS:
${rawBeliefs.map((belief, index) => {
            /* istanbul ignore next */
            cov_1rgr27b886().f[29]++;
            cov_1rgr27b886().s[166]++;
            return `${index + 1}. ${belief.content} (${belief.confidence})`;
          }).join("\n")}

PRIORITIZE:
1. Factual knowledge about topics discussed (not about the agents themselves)
2. User preferences and research goals
3. Information that would be valuable for future reference

DEPRIORITIZE OR REMOVE:
1. Observations about the agent's behavior or willingness to help
2. Generic statements without specific information
3. Low-value or redundant information

For each belief, provide:
1. Accuracy (1-5 scale, where 5 is highest)
2. Relevance (1-5 scale, where 5 is highest) - rate higher for factual knowledge and user preferences
3. Category (Fact, Opinion, Preference, Relationship, or Other)
4. A concise title for the knowledge entry
5. Refined content (maintain or enhance the Obsidian-style [[tags]])
6. Set "selected": false for any beliefs that are about the agent itself rather than substantive knowledge

Format your response as a JSON array with one object per belief:
[
 {
   "originalIndex": 1,
   "accuracy": 4,
   "relevance": 5,
   "category": "Fact",
   "title": "Example Title",
   "refined_content": "Refined belief with [[tags]]",
   "confidence": "High",
   "selected": true
 },
 ...
]`));
          // Parse the refined beliefs from the response
          const refined =
          /* istanbul ignore next */
          (cov_1rgr27b886().s[167]++, (0, _beliefextraction.parseRefinedBeliefs)(refinedResponse, rawBeliefs));
          /* istanbul ignore next */
          cov_1rgr27b886().s[168]++;
          (0, _debuglogger.debugLog)("Refined beliefs:", refined);
          /* istanbul ignore next */
          cov_1rgr27b886().s[169]++;
          if (
          /* istanbul ignore next */
          (cov_1rgr27b886().b[31][0]++, refined) &&
          /* istanbul ignore next */
          (cov_1rgr27b886().b[31][1]++, refined.length > 0)) {
            /* istanbul ignore next */
            cov_1rgr27b886().b[30][0]++;
            cov_1rgr27b886().s[170]++;
            setExtractedBeliefs(refined);
            /* istanbul ignore next */
            cov_1rgr27b886().s[171]++;
            setExtractionProgress(100);
            /* istanbul ignore next */
            cov_1rgr27b886().s[172]++;
            setExtractionStep("complete");
            /* istanbul ignore next */
            cov_1rgr27b886().s[173]++;
            toast({
              title: "Beliefs extracted",
              description: `Found ${refined.length} potential new beliefs for ${selectedAgent.name}`,
              duration: 3000
            });
          } else {
            /* istanbul ignore next */
            cov_1rgr27b886().b[30][1]++;
            cov_1rgr27b886().s[174]++;
            throw new Error("No beliefs could be extracted from this conversation");
          }
        } catch (refineError) {
          /* istanbul ignore next */
          cov_1rgr27b886().s[175]++;
          console.error("Error refining beliefs:", refineError);
          /* istanbul ignore next */
          cov_1rgr27b886().s[176]++;
          toast({
            title: "Error refining beliefs",
            description: "The system encountered an error while processing the extracted beliefs. Please try again.",
            variant: "destructive",
            duration: 5000
          });
          /* istanbul ignore next */
          cov_1rgr27b886().s[177]++;
          setExtractionStep("idle");
        }
      } catch (extractError) {
        /* istanbul ignore next */
        cov_1rgr27b886().s[178]++;
        console.error("Error extracting raw beliefs:", extractError);
        /* istanbul ignore next */
        cov_1rgr27b886().s[179]++;
        toast({
          title: "Error extracting beliefs",
          description: "The system encountered an error while analyzing the conversation. Please try again.",
          variant: "destructive",
          duration: 5000
        });
        /* istanbul ignore next */
        cov_1rgr27b886().s[180]++;
        setExtractionStep("idle");
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1rgr27b886().s[181]++;
      console.error("Error in belief extraction process:", error);
      /* istanbul ignore next */
      cov_1rgr27b886().s[182]++;
      toast({
        title: "Error extracting beliefs",
        description: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1rgr27b886().b[32][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1rgr27b886().b[32][1]++, "An unknown error occurred"),
        variant: "destructive",
        duration: 5000
      });
      /* istanbul ignore next */
      cov_1rgr27b886().s[183]++;
      setExtractionStep("idle");
    } finally {
      /* istanbul ignore next */
      cov_1rgr27b886().s[184]++;
      setIsExtractingBeliefs(false);
    }
  };
  // Handle toggling belief selection
  /* istanbul ignore next */
  cov_1rgr27b886().s[185]++;
  const handleToggleBelief = index => {
    /* istanbul ignore next */
    cov_1rgr27b886().f[30]++;
    cov_1rgr27b886().s[186]++;
    setExtractedBeliefs(prev => {
      /* istanbul ignore next */
      cov_1rgr27b886().f[31]++;
      cov_1rgr27b886().s[187]++;
      return prev.map((belief, i) => {
        /* istanbul ignore next */
        cov_1rgr27b886().f[32]++;
        cov_1rgr27b886().s[188]++;
        return i === index ?
        /* istanbul ignore next */
        (cov_1rgr27b886().b[33][0]++, {
          ...belief,
          selected: belief.selected === false ?
          /* istanbul ignore next */
          (cov_1rgr27b886().b[34][0]++, true) :
          /* istanbul ignore next */
          (cov_1rgr27b886().b[34][1]++, false)
        }) :
        /* istanbul ignore next */
        (cov_1rgr27b886().b[33][1]++, belief);
      });
    });
  };
  // Handle adding selected beliefs to knowledge
  /* istanbul ignore next */
  cov_1rgr27b886().s[189]++;
  const handleAddSelectedBeliefs = async () => {
    /* istanbul ignore next */
    cov_1rgr27b886().f[33]++;
    cov_1rgr27b886().s[190]++;
    if (!selectedAgent) {
      /* istanbul ignore next */
      cov_1rgr27b886().b[35][0]++;
      cov_1rgr27b886().s[191]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1rgr27b886().b[35][1]++;
    }
    const selectedBeliefs =
    /* istanbul ignore next */
    (cov_1rgr27b886().s[192]++, extractedBeliefs.filter(belief => {
      /* istanbul ignore next */
      cov_1rgr27b886().f[34]++;
      cov_1rgr27b886().s[193]++;
      return belief.selected !== false;
    }));
    /* istanbul ignore next */
    cov_1rgr27b886().s[194]++;
    logger.info(`Selected beliefs count: ${selectedBeliefs.length}`, selectedBeliefs);
    /* istanbul ignore next */
    cov_1rgr27b886().s[195]++;
    if (selectedBeliefs.length === 0) {
      /* istanbul ignore next */
      cov_1rgr27b886().b[36][0]++;
      cov_1rgr27b886().s[196]++;
      toast({
        title: "No beliefs selected",
        description: "Please select at least one belief to add to knowledge",
        variant: "destructive",
        duration: 3000
      });
      /* istanbul ignore next */
      cov_1rgr27b886().s[197]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1rgr27b886().b[36][1]++;
    }
    cov_1rgr27b886().s[198]++;
    try {
      // Create knowledge entries from selected beliefs
      const knowledgeEntries =
      /* istanbul ignore next */
      (cov_1rgr27b886().s[199]++, selectedBeliefs.map(belief => {
        /* istanbul ignore next */
        cov_1rgr27b886().f[35]++;
        cov_1rgr27b886().s[200]++;
        return {
          id: `knowledge-${Date.now()}-${Math.random().toString(36).substring(2, 7)}`,
          title: belief.title,
          content: belief.refined_content,
          timestamp: new Date(),
          tags: belief.tags
        };
      }));
      /* istanbul ignore next */
      cov_1rgr27b886().s[201]++;
      logger.info(`Adding ${knowledgeEntries.length} knowledge entries to agent's knowledge`);
      // Add each entry to the agent's knowledge
      /* istanbul ignore next */
      cov_1rgr27b886().s[202]++;
      for (const entry of knowledgeEntries) {
        /* istanbul ignore next */
        cov_1rgr27b886().s[203]++;
        logger.info(`Adding entry: ${entry.title}`);
        /* istanbul ignore next */
        cov_1rgr27b886().s[204]++;
        onAddKnowledge(selectedAgent.id, entry);
      }
      // Clear extracted beliefs
      /* istanbul ignore next */
      cov_1rgr27b886().s[205]++;
      setExtractedBeliefs([]);
      /* istanbul ignore next */
      cov_1rgr27b886().s[206]++;
      setRawBeliefs([]);
      /* istanbul ignore next */
      cov_1rgr27b886().s[207]++;
      setExtractionStep("idle");
      /* istanbul ignore next */
      cov_1rgr27b886().s[208]++;
      toast({
        title: "Knowledge updated",
        description: `Added ${knowledgeEntries.length} new knowledge entries to ${selectedAgent.name}'s knowledge`,
        duration: 3000
      });
      // Switch to browse tab
      /* istanbul ignore next */
      cov_1rgr27b886().s[209]++;
      setKnowledgeTab("browse");
    } catch (error) {
      /* istanbul ignore next */
      cov_1rgr27b886().s[210]++;
      console.error("Error adding beliefs to knowledge:", error);
      /* istanbul ignore next */
      cov_1rgr27b886().s[211]++;
      toast({
        title: "Error adding beliefs",
        description: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1rgr27b886().b[37][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1rgr27b886().b[37][1]++, "An unknown error occurred"),
        variant: "destructive",
        duration: 5000
      });
    }
  };
  /* istanbul ignore next */
  cov_1rgr27b886().s[212]++;
  const handleSaveKnowledgeChanges = () => {
    /* istanbul ignore next */
    cov_1rgr27b886().f[36]++;
    cov_1rgr27b886().s[213]++;
    if (
    /* istanbul ignore next */
    (cov_1rgr27b886().b[39][0]++, !selectedAgent) ||
    /* istanbul ignore next */
    (cov_1rgr27b886().b[39][1]++, !selectedKnowledge)) {
      /* istanbul ignore next */
      cov_1rgr27b886().b[38][0]++;
      cov_1rgr27b886().s[214]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1rgr27b886().b[38][1]++;
    }
    // Extract tags from the updated content
    const updatedTags =
    /* istanbul ignore next */
    (cov_1rgr27b886().s[215]++, (0, _utils.extractTagsFromMarkdown)(editedKnowledgeContent));
    // Create the updates object
    const updates =
    /* istanbul ignore next */
    (cov_1rgr27b886().s[216]++, {
      title: editedKnowledgeTitle,
      content: editedKnowledgeContent,
      tags: updatedTags
    });
    // Call the update function
    /* istanbul ignore next */
    cov_1rgr27b886().s[217]++;
    onUpdateKnowledge(selectedAgent.id, selectedKnowledge.id, updates);
    // Update the local state
    /* istanbul ignore next */
    cov_1rgr27b886().s[218]++;
    setSelectedKnowledge({
      ...selectedKnowledge,
      ...updates
    });
    // Exit editing mode
    /* istanbul ignore next */
    cov_1rgr27b886().s[219]++;
    setEditingKnowledge(false);
    /* istanbul ignore next */
    cov_1rgr27b886().s[220]++;
    toast({
      title: "Knowledge updated",
      description: "Knowledge entry has been updated successfully.",
      duration: 3000
    });
  };
  /* istanbul ignore next */
  cov_1rgr27b886().s[221]++;
  const handleDeleteKnowledge = () => {
    /* istanbul ignore next */
    cov_1rgr27b886().f[37]++;
    cov_1rgr27b886().s[222]++;
    if (
    /* istanbul ignore next */
    (cov_1rgr27b886().b[41][0]++, !selectedAgent) ||
    /* istanbul ignore next */
    (cov_1rgr27b886().b[41][1]++, !knowledgeToDelete)) {
      /* istanbul ignore next */
      cov_1rgr27b886().b[40][0]++;
      cov_1rgr27b886().s[223]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1rgr27b886().b[40][1]++;
    }
    // Call the delete function
    cov_1rgr27b886().s[224]++;
    onDeleteKnowledge(selectedAgent.id, knowledgeToDelete.id);
    // Clear the selected knowledge if it's the one being deleted
    /* istanbul ignore next */
    cov_1rgr27b886().s[225]++;
    if (selectedKnowledge?.id === knowledgeToDelete.id) {
      /* istanbul ignore next */
      cov_1rgr27b886().b[42][0]++;
      cov_1rgr27b886().s[226]++;
      setSelectedKnowledge(null);
    } else
    /* istanbul ignore next */
    {
      cov_1rgr27b886().b[42][1]++;
    }
    // Close the dialog
    cov_1rgr27b886().s[227]++;
    setIsDeleteDialogOpen(false);
    /* istanbul ignore next */
    cov_1rgr27b886().s[228]++;
    setKnowledgeToDelete(null);
    /* istanbul ignore next */
    cov_1rgr27b886().s[229]++;
    toast({
      title: "Knowledge deleted",
      description: `"${knowledgeToDelete.title}" has been deleted from ${selectedAgent.name}'s knowledge.`,
      duration: 3000
    });
  };
  /* istanbul ignore next */
  cov_1rgr27b886().s[230]++;
  const handleSelectAgentForKnowledge = agent => {
    /* istanbul ignore next */
    cov_1rgr27b886().f[38]++;
    cov_1rgr27b886().s[231]++;
    // Find the specific knowledge entry if we're looking at an entry
    if (selectedKnowledgeNode?.type === "entry") {
      /* istanbul ignore next */
      cov_1rgr27b886().b[43][0]++;
      // For consolidated entries, check by title
      const entry =
      /* istanbul ignore next */
      (cov_1rgr27b886().s[232]++, agent.knowledge.find(k => {
        /* istanbul ignore next */
        cov_1rgr27b886().f[39]++;
        cov_1rgr27b886().s[233]++;
        return k.title === selectedKnowledgeNode.title;
      }));
      /* istanbul ignore next */
      cov_1rgr27b886().s[234]++;
      if (entry) {
        /* istanbul ignore next */
        cov_1rgr27b886().b[44][0]++;
        cov_1rgr27b886().s[235]++;
        // Store the entry we want to select in the ref
        pendingKnowledgeSelectionRef.current = entry;
        // Select the agent if it's not already selected
        /* istanbul ignore next */
        cov_1rgr27b886().s[236]++;
        if (
        /* istanbul ignore next */
        (cov_1rgr27b886().b[46][0]++, onSelectAgent) &&
        /* istanbul ignore next */
        (cov_1rgr27b886().b[46][1]++, selectedAgent?.id !== agent.id)) {
          /* istanbul ignore next */
          cov_1rgr27b886().b[45][0]++;
          cov_1rgr27b886().s[237]++;
          onSelectAgent(agent);
        } else {
          /* istanbul ignore next */
          cov_1rgr27b886().b[45][1]++;
          cov_1rgr27b886().s[238]++;
          if (selectedAgent?.id === agent.id) {
            /* istanbul ignore next */
            cov_1rgr27b886().b[47][0]++;
            cov_1rgr27b886().s[239]++;
            // If the agent is already selected, we can set the knowledge directly
            setSelectedKnowledge(entry);
          } else
          /* istanbul ignore next */
          {
            cov_1rgr27b886().b[47][1]++;
          }
        }
        /* istanbul ignore next */
        cov_1rgr27b886().s[240]++;
        setKnowledgeTab("browse");
        /* istanbul ignore next */
        cov_1rgr27b886().s[241]++;
        setSelectedView("knowledge");
        /* istanbul ignore next */
        cov_1rgr27b886().s[242]++;
        onClearSelectedKnowledgeNode();
      } else
      /* istanbul ignore next */
      {
        cov_1rgr27b886().b[44][1]++;
      }
    } else {
      /* istanbul ignore next */
      cov_1rgr27b886().b[43][1]++;
      cov_1rgr27b886().s[243]++;
      if (selectedKnowledgeNode?.type === "tag") {
        /* istanbul ignore next */
        cov_1rgr27b886().b[48][0]++;
        cov_1rgr27b886().s[244]++;
        setSelectedView("knowledge");
        /* istanbul ignore next */
        cov_1rgr27b886().s[245]++;
        setKnowledgeTab("browse");
        /* istanbul ignore next */
        cov_1rgr27b886().s[246]++;
        setSelectedTag(selectedKnowledgeNode.title);
        /* istanbul ignore next */
        cov_1rgr27b886().s[247]++;
        onClearSelectedKnowledgeNode();
        // Select the agent if it's not already selected
        /* istanbul ignore next */
        cov_1rgr27b886().s[248]++;
        if (
        /* istanbul ignore next */
        (cov_1rgr27b886().b[50][0]++, onSelectAgent) &&
        /* istanbul ignore next */
        (cov_1rgr27b886().b[50][1]++, selectedAgent?.id !== agent.id)) {
          /* istanbul ignore next */
          cov_1rgr27b886().b[49][0]++;
          cov_1rgr27b886().s[249]++;
          onSelectAgent(agent);
        } else
        /* istanbul ignore next */
        {
          cov_1rgr27b886().b[49][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1rgr27b886().b[48][1]++;
      }
    }
  };
  // Add a new function to handle clicking on a specific knowledge entry
  /* istanbul ignore next */
  cov_1rgr27b886().s[250]++;
  const handleSelectKnowledgeEntry = (agent, entry, event) => {
    /* istanbul ignore next */
    cov_1rgr27b886().f[40]++;
    cov_1rgr27b886().s[251]++;
    // Prevent the click from propagating to the agent card
    event.stopPropagation();
    // Store the entry we want to select in the ref
    /* istanbul ignore next */
    cov_1rgr27b886().s[252]++;
    pendingKnowledgeSelectionRef.current = entry;
    // Select the agent using the onSelectAgent prop
    /* istanbul ignore next */
    cov_1rgr27b886().s[253]++;
    if (
    /* istanbul ignore next */
    (cov_1rgr27b886().b[52][0]++, onSelectAgent) &&
    /* istanbul ignore next */
    (cov_1rgr27b886().b[52][1]++, selectedAgent?.id !== agent.id)) {
      /* istanbul ignore next */
      cov_1rgr27b886().b[51][0]++;
      cov_1rgr27b886().s[254]++;
      onSelectAgent(agent);
    } else {
      /* istanbul ignore next */
      cov_1rgr27b886().b[51][1]++;
      cov_1rgr27b886().s[255]++;
      if (selectedAgent?.id === agent.id) {
        /* istanbul ignore next */
        cov_1rgr27b886().b[53][0]++;
        cov_1rgr27b886().s[256]++;
        // If the agent is already selected, we can set the knowledge directly
        setSelectedKnowledge(entry);
      } else
      /* istanbul ignore next */
      {
        cov_1rgr27b886().b[53][1]++;
      }
    }
    // Switch to the knowledge view
    /* istanbul ignore next */
    cov_1rgr27b886().s[257]++;
    setKnowledgeTab("browse");
    /* istanbul ignore next */
    cov_1rgr27b886().s[258]++;
    setSelectedView("knowledge");
    // Clear the selected knowledge node
    /* istanbul ignore next */
    cov_1rgr27b886().s[259]++;
    onClearSelectedKnowledgeNode();
  };
  /* istanbul ignore next */
  cov_1rgr27b886().s[260]++;
  const getAgentsWithSelectedNode = () => {
    /* istanbul ignore next */
    cov_1rgr27b886().f[41]++;
    cov_1rgr27b886().s[261]++;
    if (!selectedKnowledgeNode) {
      /* istanbul ignore next */
      cov_1rgr27b886().b[54][0]++;
      cov_1rgr27b886().s[262]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_1rgr27b886().b[54][1]++;
    }
    cov_1rgr27b886().s[263]++;
    return agents.filter(agent => {
      /* istanbul ignore next */
      cov_1rgr27b886().f[42]++;
      cov_1rgr27b886().s[264]++;
      if (selectedKnowledgeNode.type === "entry") {
        /* istanbul ignore next */
        cov_1rgr27b886().b[55][0]++;
        cov_1rgr27b886().s[265]++;
        // For consolidated entries, check by title
        return agent.knowledge.some(entry => {
          /* istanbul ignore next */
          cov_1rgr27b886().f[43]++;
          cov_1rgr27b886().s[266]++;
          return entry.title === selectedKnowledgeNode.title;
        });
      } else {
        /* istanbul ignore next */
        cov_1rgr27b886().b[55][1]++;
        cov_1rgr27b886().s[267]++;
        if (selectedKnowledgeNode.type === "tag") {
          /* istanbul ignore next */
          cov_1rgr27b886().b[56][0]++;
          cov_1rgr27b886().s[268]++;
          return agent.knowledge.some(entry => {
            /* istanbul ignore next */
            cov_1rgr27b886().f[44]++;
            cov_1rgr27b886().s[269]++;
            return entry.tags.includes(selectedKnowledgeNode.title);
          });
        } else
        /* istanbul ignore next */
        {
          cov_1rgr27b886().b[56][1]++;
        }
      }
      /* istanbul ignore next */
      cov_1rgr27b886().s[270]++;
      return false;
    });
  };
  // Get knowledge entries that match the selected tag
  /* istanbul ignore next */
  cov_1rgr27b886().s[271]++;
  const getEntriesWithTag = (agent, tag) => {
    /* istanbul ignore next */
    cov_1rgr27b886().f[45]++;
    cov_1rgr27b886().s[272]++;
    return agent.knowledge.filter(entry => {
      /* istanbul ignore next */
      cov_1rgr27b886().f[46]++;
      cov_1rgr27b886().s[273]++;
      return entry.tags.includes(tag);
    });
  };
  // Get knowledge entries that match the selected title
  /* istanbul ignore next */
  cov_1rgr27b886().s[274]++;
  const getEntriesWithTitle = (agent, title) => {
    /* istanbul ignore next */
    cov_1rgr27b886().f[47]++;
    cov_1rgr27b886().s[275]++;
    return agent.knowledge.filter(entry => {
      /* istanbul ignore next */
      cov_1rgr27b886().f[48]++;
      cov_1rgr27b886().s[276]++;
      return entry.title === title;
    });
  };
  // Clear all search and filter criteria
  /* istanbul ignore next */
  cov_1rgr27b886().s[277]++;
  const clearFilters = () => {
    /* istanbul ignore next */
    cov_1rgr27b886().f[49]++;
    cov_1rgr27b886().s[278]++;
    setSearchQuery("");
    /* istanbul ignore next */
    cov_1rgr27b886().s[279]++;
    setSelectedTag("all_tags");
    /* istanbul ignore next */
    cov_1rgr27b886().s[280]++;
    setSortBy("newest");
  };
  // Helper function to render markdown with highlighted tags
  /* istanbul ignore next */
  cov_1rgr27b886().s[281]++;
  const renderMarkdownWithTags = content => {
    /* istanbul ignore next */
    cov_1rgr27b886().f[50]++;
    cov_1rgr27b886().s[282]++;
    // Replace [[tags]] with highlighted spans that have a data-tag attribute
    return content.replace(/\[\[(.*?)\]\]/g, '<span class="bg-purple-500/20 text-purple-900 px-1 rounded cursor-pointer hover:bg-purple-500/30 transition-colors" data-tag="$1">[[<span class="font-medium">$1</span>]]</span>');
  };
  // Handle saving system prompt
  /* istanbul ignore next */
  cov_1rgr27b886().s[283]++;
  const handleSaveSystemPrompt = () => {
    /* istanbul ignore next */
    cov_1rgr27b886().f[51]++;
    cov_1rgr27b886().s[284]++;
    if (
    /* istanbul ignore next */
    (cov_1rgr27b886().b[58][0]++, !selectedAgent) ||
    /* istanbul ignore next */
    (cov_1rgr27b886().b[58][1]++, !systemPrompt.trim())) {
      /* istanbul ignore next */
      cov_1rgr27b886().b[57][0]++;
      cov_1rgr27b886().s[285]++;
      toast({
        title: "Cannot save system prompt",
        description: "Agent or prompt not available",
        variant: "destructive",
        duration: 3000
      });
      /* istanbul ignore next */
      cov_1rgr27b886().s[286]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1rgr27b886().b[57][1]++;
    }
    cov_1rgr27b886().s[287]++;
    setIsProcessing(true);
    // Simulate a delay
    /* istanbul ignore next */
    cov_1rgr27b886().s[288]++;
    setTimeout(() => {
      /* istanbul ignore next */
      cov_1rgr27b886().f[52]++;
      cov_1rgr27b886().s[289]++;
      try {
        /* istanbul ignore next */
        cov_1rgr27b886().s[290]++;
        toast({
          title: "System prompt saved",
          description: `System prompt "${systemPromptName}" has been saved for ${selectedAgent.name}.`,
          duration: 3000
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_1rgr27b886().s[291]++;
        console.error("Error in handleSaveSystemPrompt:", error);
        /* istanbul ignore next */
        cov_1rgr27b886().s[292]++;
        toast({
          title: "Error saving system prompt",
          description: error instanceof Error ?
          /* istanbul ignore next */
          (cov_1rgr27b886().b[59][0]++, error.message) :
          /* istanbul ignore next */
          (cov_1rgr27b886().b[59][1]++, "An unknown error occurred"),
          variant: "destructive",
          duration: 5000
        });
      } finally {
        /* istanbul ignore next */
        cov_1rgr27b886().s[293]++;
        setIsProcessing(false);
      }
    }, 1000);
  };
  // Add this function inside the MemoryViewer component
  /* istanbul ignore next */
  cov_1rgr27b886().s[294]++;
  const handleTagClick = e => {
    /* istanbul ignore next */
    cov_1rgr27b886().f[53]++;
    // Check if the clicked element or its parent has a data-tag attribute
    const target =
    /* istanbul ignore next */
    (cov_1rgr27b886().s[295]++, e.target);
    const tagElement =
    /* istanbul ignore next */
    (cov_1rgr27b886().s[296]++, target.closest("[data-tag]"));
    /* istanbul ignore next */
    cov_1rgr27b886().s[297]++;
    if (tagElement) {
      /* istanbul ignore next */
      cov_1rgr27b886().b[60][0]++;
      const tag =
      /* istanbul ignore next */
      (cov_1rgr27b886().s[298]++, tagElement.getAttribute("data-tag"));
      /* istanbul ignore next */
      cov_1rgr27b886().s[299]++;
      if (tag) {
        /* istanbul ignore next */
        cov_1rgr27b886().b[61][0]++;
        cov_1rgr27b886().s[300]++;
        setSelectedTag(tag);
        /* istanbul ignore next */
        cov_1rgr27b886().s[301]++;
        setSelectedKnowledge(null);
        /* istanbul ignore next */
        cov_1rgr27b886().s[302]++;
        setKnowledgeTab("browse");
      } else
      /* istanbul ignore next */
      {
        cov_1rgr27b886().b[61][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1rgr27b886().b[60][1]++;
    }
  };
  // Add these handler functions for tool permissions
  /* istanbul ignore next */
  cov_1rgr27b886().s[303]++;
  const handleToolChange = (toolKey, checked) => {
    /* istanbul ignore next */
    cov_1rgr27b886().f[54]++;
    cov_1rgr27b886().s[304]++;
    setToolPermissions(prev => {
      /* istanbul ignore next */
      cov_1rgr27b886().f[55]++;
      const updated =
      /* istanbul ignore next */
      (cov_1rgr27b886().s[305]++, {
        ...prev,
        [toolKey]: checked
      });
      // Mark that we have unsaved changes
      /* istanbul ignore next */
      cov_1rgr27b886().s[306]++;
      setHasToolChanges(true);
      /* istanbul ignore next */
      cov_1rgr27b886().s[307]++;
      return updated;
    });
  };
  /* istanbul ignore next */
  cov_1rgr27b886().s[308]++;
  const handleSaveToolSettings = () => {
    /* istanbul ignore next */
    cov_1rgr27b886().f[56]++;
    cov_1rgr27b886().s[309]++;
    if (!selectedAgent) {
      /* istanbul ignore next */
      cov_1rgr27b886().b[62][0]++;
      cov_1rgr27b886().s[310]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1rgr27b886().b[62][1]++;
    }
    cov_1rgr27b886().s[311]++;
    setIsSavingTools(true);
    // Update the agent with new tool permissions
    /* istanbul ignore next */
    cov_1rgr27b886().s[312]++;
    onUpdateAgent(selectedAgent.id, {
      toolPermissions
    });
    // Reset the changes flag
    /* istanbul ignore next */
    cov_1rgr27b886().s[313]++;
    setHasToolChanges(false);
    // Show success message
    /* istanbul ignore next */
    cov_1rgr27b886().s[314]++;
    toast({
      title: "Tool settings saved",
      description: `Tool permissions for ${selectedAgent.name} have been updated.`,
      duration: 3000
    });
    /* istanbul ignore next */
    cov_1rgr27b886().s[315]++;
    setTimeout(() => {
      /* istanbul ignore next */
      cov_1rgr27b886().f[57]++;
      cov_1rgr27b886().s[316]++;
      setIsSavingTools(false);
    }, 500);
  };
  /* istanbul ignore next */
  cov_1rgr27b886().s[317]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "flex flex-col h-full overflow-hidden",
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "p-4 border-b border-border",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
        className: "text-xl font-bold text-white",
        children: "Memory Viewer"
      })
    }),
    /* istanbul ignore next */
    (cov_1rgr27b886().b[64][0]++, selectedKnowledgeNode) &&
    /* istanbul ignore next */
    (cov_1rgr27b886().b[64][1]++, selectedView === "node-selection") ?
    /* istanbul ignore next */
    (/*#__PURE__*/cov_1rgr27b886().b[63][0]++, (0, _jsxruntime.jsxs)("div", {
      className: "flex-1 flex flex-col",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "px-4 pt-4 flex items-center",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
          variant: "ghost",
          size: "sm",
          onClick: () => {
            /* istanbul ignore next */
            cov_1rgr27b886().f[58]++;
            cov_1rgr27b886().s[318]++;
            onClearSelectedKnowledgeNode();
            /* istanbul ignore next */
            cov_1rgr27b886().s[319]++;
            setSelectedView("biography");
          },
          className: "mr-2 bg-purple-900/30 text-white hover:bg-purple-800/50 hover:text-white",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.ArrowLeft, {
            size: 16,
            className: "mr-1"
          }), "Back"]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("h3", {
          className: "text-lg font-semibold text-white",
          children: [selectedKnowledgeNode.type === "entry" ?
          /* istanbul ignore next */
          (cov_1rgr27b886().b[65][0]++, "Knowledge Entry") :
          /* istanbul ignore next */
          (cov_1rgr27b886().b[65][1]++, "Tag"), ": ", selectedKnowledgeNode.title]
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "flex-1 p-4",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
          className: "h-full",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
            className: "pb-2",
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardTitle, {
              className: "text-base",
              children: ["Agents with", " ", selectedKnowledgeNode.type === "entry" ?
              /* istanbul ignore next */
              (cov_1rgr27b886().b[66][0]++, "this knowledge") :
              /* istanbul ignore next */
              (cov_1rgr27b886().b[66][1]++, `"${selectedKnowledgeNode.title}" tag`)]
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
            className: "h-[calc(100%-60px)]",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_scrollarea.ScrollArea, {
              className: "h-full pr-4",
              children: getAgentsWithSelectedNode().length > 0 ?
              /* istanbul ignore next */
              (/*#__PURE__*/cov_1rgr27b886().b[67][0]++, (0, _jsxruntime.jsx)("div", {
                className: "space-y-4",
                children: getAgentsWithSelectedNode().map(agent => {
                  /* istanbul ignore next */
                  cov_1rgr27b886().f[59]++;
                  cov_1rgr27b886().s[320]++;
                  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "p-4 border rounded-md cursor-pointer hover:bg-muted transition-colors",
                    onClick: () => {
                      /* istanbul ignore next */
                      cov_1rgr27b886().f[60]++;
                      cov_1rgr27b886().s[321]++;
                      return handleSelectAgentForKnowledge(agent);
                    },
                    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "flex items-center gap-2 mb-2",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                        className: "w-4 h-4 rounded-full",
                        style: {
                          backgroundColor: agent.color
                        }
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
                        className: "font-medium",
                        children: agent.name
                      })]
                    }), selectedKnowledgeNode.type === "tag" ?
                    /* istanbul ignore next */
                    (/*#__PURE__*/cov_1rgr27b886().b[68][0]++, (0, _jsxruntime.jsxs)("div", {
                      className: "mt-2",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
                        className: "text-sm text-muted-foreground mb-1",
                        children: [getEntriesWithTag(agent, selectedKnowledgeNode.title).length, " ", "entries with this tag:"]
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                        className: "space-y-1 ml-2",
                        children: getEntriesWithTag(agent, selectedKnowledgeNode.title).map(entry => {
                          /* istanbul ignore next */
                          cov_1rgr27b886().f[61]++;
                          cov_1rgr27b886().s[322]++;
                          return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                            className: "text-sm py-1 px-2 rounded hover:bg-purple-800/30 cursor-pointer flex items-center",
                            onClick: e => {
                              /* istanbul ignore next */
                              cov_1rgr27b886().f[62]++;
                              cov_1rgr27b886().s[323]++;
                              return handleSelectKnowledgeEntry(agent, entry, e);
                            },
                            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                              className: "w-1 h-1 bg-purple-400 rounded-full mr-2"
                            }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                              children: entry.title
                            })]
                          }, entry.id);
                        })
                      })]
                    })) :
                    /* istanbul ignore next */
                    (/*#__PURE__*/cov_1rgr27b886().b[68][1]++, (0, _jsxruntime.jsxs)("div", {
                      className: "mt-2",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
                        className: "text-sm text-muted-foreground mb-1",
                        children: [getEntriesWithTitle(agent, selectedKnowledgeNode.title).length, " ", "entries with this title:"]
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                        className: "space-y-1 ml-2",
                        children: getEntriesWithTitle(agent, selectedKnowledgeNode.title).map(entry => {
                          /* istanbul ignore next */
                          cov_1rgr27b886().f[63]++;
                          cov_1rgr27b886().s[324]++;
                          return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                            className: "text-sm py-1 px-2 rounded hover:bg-purple-800/30 cursor-pointer flex items-center",
                            onClick: e => {
                              /* istanbul ignore next */
                              cov_1rgr27b886().f[64]++;
                              cov_1rgr27b886().s[325]++;
                              return handleSelectKnowledgeEntry(agent, entry, e);
                            },
                            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                              className: "w-1 h-1 bg-purple-400 rounded-full mr-2"
                            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                              children: ["Created:", " ", (0, _utils.formatTimestamp)(entry.timestamp)]
                            })]
                          }, entry.id);
                        })
                      })]
                    }))]
                  }, agent.id);
                })
              })) :
              /* istanbul ignore next */
              (/*#__PURE__*/cov_1rgr27b886().b[67][1]++, (0, _jsxruntime.jsxs)("div", {
                className: "flex items-center justify-center h-full text-muted-foreground",
                children: ["No agents have this", " ", selectedKnowledgeNode.type === "entry" ?
                /* istanbul ignore next */
                (cov_1rgr27b886().b[69][0]++, "knowledge entry") :
                /* istanbul ignore next */
                (cov_1rgr27b886().b[69][1]++, "tag"), "."]
              }))
            })
          })]
        })
      })]
    })) :
    /* istanbul ignore next */
    (cov_1rgr27b886().b[63][1]++, selectedAgent ?
    /* istanbul ignore next */
    (/*#__PURE__*/cov_1rgr27b886().b[70][0]++, (0, _jsxruntime.jsxs)("div", {
      className: "flex-1 flex flex-col",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "px-4 pt-4",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex justify-between items-center",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_select.Select, {
            value: selectedView,
            onValueChange: value => {
              /* istanbul ignore next */
              cov_1rgr27b886().f[65]++;
              cov_1rgr27b886().s[326]++;
              setSelectedView(value);
            },
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectTrigger, {
              className: "w-full bg-purple-950 border-purple-700 text-white",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectValue, {
                placeholder: "Select view"
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_select.SelectContent, {
              className: "bg-purple-950 border-purple-700 text-white",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                value: "biography",
                children: "Biography"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                value: "conversations",
                children: "Conversations"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                value: "knowledge",
                children: "Knowledge"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                value: "graph",
                children: "Graph"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                value: "system",
                children: "System Prompt"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                value: "tools",
                children: "Tools"
              })]
            })]
          }),
          /* istanbul ignore next */
          (cov_1rgr27b886().b[71][0]++, selectedAgent) &&
          /* istanbul ignore next */
          (cov_1rgr27b886().b[71][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
            onClick: () => {
              /* istanbul ignore next */
              cov_1rgr27b886().f[66]++;
              cov_1rgr27b886().s[327]++;
              return (0, _knowledgeexport.exportAgentKnowledge)(selectedAgent);
            },
            className: "ml-2 bg-purple-700 hover:bg-purple-600 text-white",
            size: "sm",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Save, {
              size: 16,
              className: "mr-2"
            }), "Export Knowledge"]
          }))]
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex-1 p-4 pt-2 overflow-hidden",
        children: [
        /* istanbul ignore next */
        (cov_1rgr27b886().b[72][0]++, selectedView === "biography") &&
        /* istanbul ignore next */
        (cov_1rgr27b886().b[72][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
            className: "pb-2",
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardTitle, {
              className: "text-base",
              children: [selectedAgent.name, "'s Profile"]
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "space-y-4",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "space-y-2",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                  htmlFor: "agent-biography",
                  className: "text-sm font-medium",
                  children: "Biography"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_textarea.Textarea, {
                  id: "agent-biography",
                  value: biography,
                  onChange: e => {
                    /* istanbul ignore next */
                    cov_1rgr27b886().f[67]++;
                    cov_1rgr27b886().s[328]++;
                    return setBiography(e.target.value);
                  },
                  className: "min-h-[200px]",
                  placeholder: "Enter agent biography..."
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
                onClick: handleSaveBiography,
                className: "bg-purple-700 hover:bg-purple-600 text-white",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Save, {
                  size: 16,
                  className: "mr-2"
                }), "Save Biography"]
              })]
            })
          })]
        })),
        /* istanbul ignore next */
        (cov_1rgr27b886().b[73][0]++, selectedView === "conversations") &&
        /* istanbul ignore next */
        (cov_1rgr27b886().b[73][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
          className: "h-full flex flex-col",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
            className: "pb-2 flex-shrink-0",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
              className: "text-base",
              children: "Conversation History"
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
            className: "flex-1 p-0 overflow-hidden",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_scrollarea.ScrollArea, {
              className: "h-full py-4 px-6 conversation-history-scrollbar",
              style: {
                height: "calc(100vh - 220px)"
              },
              children: conversationHistory.filter(conv => {
                /* istanbul ignore next */
                cov_1rgr27b886().f[68]++;
                cov_1rgr27b886().s[329]++;
                return conv.participants.includes(selectedAgent.id);
              }).length > 0 ?
              /* istanbul ignore next */
              (/*#__PURE__*/cov_1rgr27b886().b[74][0]++, (0, _jsxruntime.jsx)("div", {
                className: "space-y-4",
                children: conversationHistory.filter(conv => {
                  /* istanbul ignore next */
                  cov_1rgr27b886().f[69]++;
                  cov_1rgr27b886().s[330]++;
                  return conv.participants.includes(selectedAgent.id);
                }).sort((a, b) => {
                  /* istanbul ignore next */
                  cov_1rgr27b886().f[70]++;
                  cov_1rgr27b886().s[331]++;
                  return b.startTime.getTime() - a.startTime.getTime();
                }).map(conv => {
                  /* istanbul ignore next */
                  cov_1rgr27b886().f[71]++;
                  cov_1rgr27b886().s[332]++;
                  return /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
                    className: "p-4",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "mb-2",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                        className: "flex justify-between items-center",
                        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("h3", {
                          className: "font-medium",
                          children: ["Conversation", " ", (0, _utils.formatTimestamp)(conv.startTime)]
                        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                          className: "text-xs text-muted-foreground",
                          children: [conv.messages.length, " messages"]
                        })]
                      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                        className: "text-xs text-muted-foreground mt-1",
                        children: ["Participants:", " ", conv.participants.map(id => {
                          /* istanbul ignore next */
                          cov_1rgr27b886().f[72]++;
                          cov_1rgr27b886().s[333]++;
                          return /* istanbul ignore next */(cov_1rgr27b886().b[75][0]++, agents.find(a => {
                            /* istanbul ignore next */
                            cov_1rgr27b886().f[73]++;
                            cov_1rgr27b886().s[334]++;
                            return a.id === id;
                          })?.name) ||
                          /* istanbul ignore next */
                          (cov_1rgr27b886().b[75][1]++, "Unknown");
                        }).join(", ")]
                      })]
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: "border-t pt-2 mt-2",
                      children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                        className: "max-h-32 overflow-y-auto text-sm",
                        children: conv.messages.length > 0 ?
                        /* istanbul ignore next */
                        (cov_1rgr27b886().b[76][0]++, conv.messages.map(msg => {
                          /* istanbul ignore next */
                          cov_1rgr27b886().f[74]++;
                          cov_1rgr27b886().s[335]++;
                          return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                            className: "mb-2",
                            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                              className: "flex items-center gap-1",
                              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                                className: "font-medium",
                                children: [msg.senderId === "user" ?
                                /* istanbul ignore next */
                                (cov_1rgr27b886().b[77][0]++, "You") :
                                /* istanbul ignore next */
                                (cov_1rgr27b886().b[77][1]++,
                                /* istanbul ignore next */
                                (cov_1rgr27b886().b[78][0]++, agents.find(a => {
                                  /* istanbul ignore next */
                                  cov_1rgr27b886().f[75]++;
                                  cov_1rgr27b886().s[336]++;
                                  return a.id === msg.senderId;
                                })?.name) ||
                                /* istanbul ignore next */
                                (cov_1rgr27b886().b[78][1]++, "Unknown")), ":"]
                              }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                                className: "text-xs text-muted-foreground",
                                children: new Date(msg.timestamp).toLocaleTimeString()
                              })]
                            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                              className: "text-sm",
                              children: msg.content
                            })]
                          }, msg.id);
                        })) :
                        /* istanbul ignore next */
                        (/*#__PURE__*/cov_1rgr27b886().b[76][1]++, (0, _jsxruntime.jsx)("p", {
                          className: "text-muted-foreground",
                          children: "No messages in this conversation."
                        }))
                      })
                    })]
                  }, conv.id);
                })
              })) :
              /* istanbul ignore next */
              (/*#__PURE__*/cov_1rgr27b886().b[74][1]++, (0, _jsxruntime.jsx)("div", {
                className: "flex items-center justify-center h-full text-muted-foreground",
                children: "No conversation history for this agent."
              }))
            })
          })]
        })),
        /* istanbul ignore next */
        (cov_1rgr27b886().b[79][0]++, selectedView === "knowledge") &&
        /* istanbul ignore next */
        (cov_1rgr27b886().b[79][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
          className: "h-full",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
            className: "pb-2",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
              className: "text-base",
              children: "Knowledge Base"
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
            className: "h-[calc(100%-60px)] p-0",
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "h-full flex flex-col",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "px-6 py-2 border-b",
                children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_select.Select, {
                  value: knowledgeTab,
                  onValueChange: setKnowledgeTab,
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectTrigger, {
                    className: "w-full bg-purple-950 border-purple-700 text-white",
                    children: /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectValue, {
                      placeholder: "Select view"
                    })
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_select.SelectContent, {
                    className: "bg-purple-950 border-purple-700 text-white",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                      value: "browse",
                      children: "Browse"
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                      value: "add",
                      children: "Add Knowledge"
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                      value: "inference",
                      children: "Inference"
                    })]
                  })]
                })
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex-1 overflow-hidden",
                children: [
                /* istanbul ignore next */
                (cov_1rgr27b886().b[80][0]++, knowledgeTab === "browse") &&
                /* istanbul ignore next */
                (cov_1rgr27b886().b[80][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: "h-full p-0 m-0",
                  children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "grid grid-cols-3 h-full",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "col-span-1 border-r h-full",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                        className: "p-4 border-b",
                        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                          className: "flex items-center gap-2 mb-2",
                          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Search, {
                            size: 14,
                            className: "text-muted-foreground"
                          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
                            placeholder: "Search knowledge...",
                            value: searchQuery,
                            onChange: e => {
                              /* istanbul ignore next */
                              cov_1rgr27b886().f[76]++;
                              cov_1rgr27b886().s[337]++;
                              return setSearchQuery(e.target.value);
                            },
                            className: "h-8"
                          }), (
                          /* istanbul ignore next */
                          (cov_1rgr27b886().b[81][0]++, searchQuery) ||
                          /* istanbul ignore next */
                          (cov_1rgr27b886().b[81][1]++, selectedTag) ||
                          /* istanbul ignore next */
                          (cov_1rgr27b886().b[81][2]++, sortBy !== "newest")) &&
                          /* istanbul ignore next */
                          (cov_1rgr27b886().b[81][3]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
                            variant: "ghost",
                            size: "sm",
                            onClick: clearFilters,
                            className: "h-8 w-8 p-0",
                            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.X, {
                              size: 14
                            })
                          }))]
                        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                          className: "flex flex-wrap gap-2 mb-2",
                          children:
                          /* istanbul ignore next */
                          (cov_1rgr27b886().b[82][0]++, uniqueTags.length > 0) &&
                          /* istanbul ignore next */
                          (cov_1rgr27b886().b[82][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_select.Select, {
                            value: selectedTag,
                            onValueChange: setSelectedTag,
                            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectTrigger, {
                              className: "h-8 w-full bg-purple-950 border-purple-700 text-white",
                              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectValue, {
                                placeholder: "Filter by tag"
                              })
                            }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_select.SelectContent, {
                              className: "bg-purple-950 border-purple-700 text-white",
                              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                                value: "all_tags",
                                children: "All tags"
                              }), uniqueTags.map(tag => {
                                /* istanbul ignore next */
                                cov_1rgr27b886().f[77]++;
                                cov_1rgr27b886().s[338]++;
                                return /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                                  value: tag,
                                  children: tag
                                }, tag);
                              })]
                            })]
                          }))
                        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                          className: "flex justify-between items-center",
                          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                            className: "text-xs text-muted-foreground",
                            children: [filteredKnowledge.length, " entries"]
                          }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_select.Select, {
                            value: sortBy,
                            onValueChange: value => {
                              /* istanbul ignore next */
                              cov_1rgr27b886().f[78]++;
                              cov_1rgr27b886().s[339]++;
                              return setSortBy(value);
                            },
                            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectTrigger, {
                              className: "h-7 text-xs w-28 bg-purple-950 border-purple-700 text-white",
                              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectValue, {
                                placeholder: "Sort by"
                              })
                            }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_select.SelectContent, {
                              className: "bg-purple-950 border-purple-700 text-white",
                              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                                value: "newest",
                                children: "Newest"
                              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                                value: "oldest",
                                children: "Oldest"
                              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                                value: "title",
                                children: "Title"
                              })]
                            })]
                          })]
                        })]
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_scrollarea.ScrollArea, {
                        className: "p-4",
                        type: "always",
                        style: {
                          height: "calc(100vh - 300px)",
                          maxHeight: "calc(100vh - 300px)",
                          overflow: "hidden"
                        },
                        children: filteredKnowledge.length > 0 ?
                        /* istanbul ignore next */
                        (/*#__PURE__*/cov_1rgr27b886().b[83][0]++, (0, _jsxruntime.jsx)("div", {
                          className: "space-y-2",
                          children: filteredKnowledge.map(k => {
                            /* istanbul ignore next */
                            cov_1rgr27b886().f[79]++;
                            cov_1rgr27b886().s[340]++;
                            return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                              className: `p-2 rounded border cursor-pointer ${selectedKnowledge?.id === k.id ?
                              /* istanbul ignore next */
                              (cov_1rgr27b886().b[84][0]++, "border-primary bg-primary/10") :
                              /* istanbul ignore next */
                              (cov_1rgr27b886().b[84][1]++, "border-border hover:bg-muted")}`,
                              onClick: () => {
                                /* istanbul ignore next */
                                cov_1rgr27b886().f[80]++;
                                cov_1rgr27b886().s[341]++;
                                setSelectedKnowledge(k);
                                /* istanbul ignore next */
                                cov_1rgr27b886().s[342]++;
                                setEditingKnowledge(false);
                              },
                              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
                                className: "font-medium text-sm truncate",
                                children: k.title
                              }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                                className: "text-xs text-muted-foreground mt-1",
                                children: (0, _utils.formatTimestamp)(k.timestamp)
                              }),
                              /* istanbul ignore next */
                              (cov_1rgr27b886().b[85][0]++, k.tags.length > 0) &&
                              /* istanbul ignore next */
                              (cov_1rgr27b886().b[85][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                                className: "flex flex-wrap gap-1 mt-1",
                                children: [k.tags.slice(0, 2).map(tag => {
                                  /* istanbul ignore next */
                                  cov_1rgr27b886().f[81]++;
                                  cov_1rgr27b886().s[343]++;
                                  return /*#__PURE__*/(0, _jsxruntime.jsx)(_badge.Badge, {
                                    variant: "secondary",
                                    className: "text-xs py-0 h-5",
                                    children: tag
                                  }, tag);
                                }),
                                /* istanbul ignore next */
                                (cov_1rgr27b886().b[86][0]++, k.tags.length > 2) &&
                                /* istanbul ignore next */
                                (cov_1rgr27b886().b[86][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_badge.Badge, {
                                  variant: "outline",
                                  className: "text-xs py-0 h-5",
                                  children: ["+", k.tags.length - 2]
                                }))]
                              }))]
                            }, k.id);
                          })
                        })) :
                        /* istanbul ignore next */
                        (/*#__PURE__*/cov_1rgr27b886().b[83][1]++, (0, _jsxruntime.jsx)("div", {
                          className: "text-center text-muted-foreground py-8",
                          children: selectedAgent.knowledge.length > 0 ?
                          /* istanbul ignore next */
                          (cov_1rgr27b886().b[87][0]++, "No matching knowledge entries found.") :
                          /* istanbul ignore next */
                          (cov_1rgr27b886().b[87][1]++, "No knowledge entries yet.")
                        }))
                      })]
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: "col-span-2 h-full",
                      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_scrollarea.ScrollArea, {
                        className: "p-4",
                        type: "always",
                        style: {
                          height: "calc(100vh - 300px)",
                          maxHeight: "calc(100vh - 300px)",
                          overflow: "hidden"
                        },
                        children: selectedKnowledge ?
                        /* istanbul ignore next */
                        (/*#__PURE__*/cov_1rgr27b886().b[88][0]++, (0, _jsxruntime.jsxs)("div", {
                          className: "flex flex-col",
                          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                            className: "flex justify-between items-center mb-2",
                            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
                              className: "font-medium",
                              children: selectedKnowledge.title
                            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                              className: "flex gap-2",
                              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
                                variant: "outline",
                                size: "sm",
                                onClick: () => {
                                  /* istanbul ignore next */
                                  cov_1rgr27b886().f[82]++;
                                  cov_1rgr27b886().s[344]++;
                                  return setEditingKnowledge(!editingKnowledge);
                                },
                                className: "bg-purple-900/50 border-purple-500 text-white hover:bg-purple-800 hover:text-white",
                                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Edit, {
                                  size: 14,
                                  className: "mr-1"
                                }), editingKnowledge ?
                                /* istanbul ignore next */
                                (cov_1rgr27b886().b[89][0]++, "Cancel") :
                                /* istanbul ignore next */
                                (cov_1rgr27b886().b[89][1]++, "Edit")]
                              }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
                                variant: "destructive",
                                size: "sm",
                                onClick: () => {
                                  /* istanbul ignore next */
                                  cov_1rgr27b886().f[83]++;
                                  cov_1rgr27b886().s[345]++;
                                  setKnowledgeToDelete(selectedKnowledge);
                                  /* istanbul ignore next */
                                  cov_1rgr27b886().s[346]++;
                                  setIsDeleteDialogOpen(true);
                                },
                                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Trash, {
                                  size: 14,
                                  className: "mr-1"
                                }), "Delete"]
                              })]
                            })]
                          }), editingKnowledge ?
                          /* istanbul ignore next */
                          (/*#__PURE__*/cov_1rgr27b886().b[90][0]++, (0, _jsxruntime.jsxs)("div", {
                            className: "flex flex-col",
                            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                              className: "mb-4",
                              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                                htmlFor: "edit-knowledge-title",
                                className: "text-sm font-medium block mb-1",
                                children: "Title"
                              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
                                id: "edit-knowledge-title",
                                value: editedKnowledgeTitle,
                                onChange: e => {
                                  /* istanbul ignore next */
                                  cov_1rgr27b886().f[84]++;
                                  cov_1rgr27b886().s[347]++;
                                  return setEditedKnowledgeTitle(e.target.value);
                                },
                                placeholder: "Knowledge title..."
                              })]
                            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                              className: "flex-1 flex flex-col",
                              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                                htmlFor: "edit-knowledge-content",
                                className: "text-sm font-medium block mb-1",
                                children: "Content"
                              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_textarea.Textarea, {
                                id: "edit-knowledge-content",
                                value: editedKnowledgeContent,
                                onChange: e => {
                                  /* istanbul ignore next */
                                  cov_1rgr27b886().f[85]++;
                                  cov_1rgr27b886().s[348]++;
                                  return setEditedKnowledgeContent(e.target.value);
                                },
                                className: "flex-1 min-h-[200px]",
                                placeholder: "Knowledge content..."
                              })]
                            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                              className: "mt-2 text-xs text-muted-foreground",
                              children: "Use [[tag]] syntax to add tags to your knowledge."
                            }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
                              className: "mt-4 bg-purple-700 hover:bg-purple-600 text-white",
                              onClick: handleSaveKnowledgeChanges,
                              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Save, {
                                size: 16,
                                className: "mr-2"
                              }), "Save Changes"]
                            })]
                          })) :
                          /* istanbul ignore next */
                          (/*#__PURE__*/cov_1rgr27b886().b[90][1]++, (0, _jsxruntime.jsxs)("div", {
                            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                              className: "prose max-w-none",
                              dangerouslySetInnerHTML: {
                                __html: renderMarkdownWithTags(selectedKnowledge.content)
                              },
                              onClick: handleTagClick
                            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
                              className: "text-xs text-muted-foreground mt-2",
                              children: ["Created:", " ", (0, _utils.formatTimestamp)(selectedKnowledge.timestamp)]
                            })]
                          }))]
                        })) :
                        /* istanbul ignore next */
                        (/*#__PURE__*/cov_1rgr27b886().b[88][1]++, (0, _jsxruntime.jsx)("div", {
                          className: "text-center text-muted-foreground py-8",
                          children: "Select a knowledge entry to view its contents."
                        }))
                      })
                    })]
                  })
                })),
                /* istanbul ignore next */
                (cov_1rgr27b886().b[91][0]++, knowledgeTab === "add") &&
                /* istanbul ignore next */
                (cov_1rgr27b886().b[91][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: "p-4",
                  children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "space-y-4",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "space-y-2",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                        htmlFor: "new-knowledge-title",
                        className: "text-sm font-medium",
                        children: "Title"
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
                        id: "new-knowledge-title",
                        value: newKnowledgeTitle,
                        onChange: e => {
                          /* istanbul ignore next */
                          cov_1rgr27b886().f[86]++;
                          cov_1rgr27b886().s[349]++;
                          return setNewKnowledgeTitle(e.target.value);
                        },
                        placeholder: "Knowledge title..."
                      })]
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "space-y-2",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                        htmlFor: "new-knowledge-content",
                        className: "text-sm font-medium",
                        children: "Content"
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_textarea.Textarea, {
                        id: "new-knowledge-content",
                        value: newKnowledgeContent,
                        onChange: e => {
                          /* istanbul ignore next */
                          cov_1rgr27b886().f[87]++;
                          cov_1rgr27b886().s[350]++;
                          return setNewKnowledgeContent(e.target.value);
                        },
                        className: "min-h-[200px]",
                        placeholder: "Knowledge content..."
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                        className: "text-xs text-muted-foreground",
                        children: "Use [[tag]] syntax to add tags to your knowledge."
                      })]
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
                      onClick: handleAddKnowledge,
                      className: "bg-purple-700 hover:bg-purple-600 text-white",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Save, {
                        size: 16,
                        className: "mr-2"
                      }), "Add Knowledge"]
                    })]
                  })
                })),
                /* istanbul ignore next */
                (cov_1rgr27b886().b[92][0]++, knowledgeTab === "inference") &&
                /* istanbul ignore next */
                (cov_1rgr27b886().b[92][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex flex-col h-full",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    className: "px-6 py-2 border-b",
                    children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_select.Select, {
                      value: inferenceTab,
                      onValueChange: value => {
                        /* istanbul ignore next */
                        cov_1rgr27b886().f[88]++;
                        cov_1rgr27b886().s[351]++;
                        return setInferenceTab(value);
                      },
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectTrigger, {
                        className: "w-full bg-purple-950 border-purple-700 text-white",
                        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectValue, {
                          placeholder: "Select view"
                        })
                      }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_select.SelectContent, {
                        className: "bg-purple-950 border-purple-700 text-white",
                        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                          value: "prompt",
                          children: "Prompt"
                        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                          value: "results",
                          children: "Results"
                        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                          value: "preview",
                          children: "Preview"
                        })]
                      })]
                    })
                  }),
                  /* istanbul ignore next */
                  (cov_1rgr27b886().b[93][0]++, inferenceTab === "prompt") &&
                  /* istanbul ignore next */
                  (cov_1rgr27b886().b[93][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    className: "p-4",
                    children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "space-y-4",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                        className: "space-y-2",
                        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                          htmlFor: "beliefs-prompt",
                          className: "text-sm font-medium",
                          children: "Beliefs Prompt"
                        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_textarea.Textarea, {
                          id: "beliefs-prompt",
                          value: beliefsPrompt,
                          onChange: e => {
                            /* istanbul ignore next */
                            cov_1rgr27b886().f[89]++;
                            cov_1rgr27b886().s[352]++;
                            return setBeliefsPrompt(e.target.value);
                          },
                          className: "min-h-[100px]",
                          placeholder: "Enter prompt for extracting beliefs..."
                        })]
                      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                        className: "space-y-2",
                        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                          htmlFor: "conversation-select",
                          className: "text-sm font-medium",
                          children: "Select Conversation"
                        }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_select.Select, {
                          value:
                          /* istanbul ignore next */
                          (cov_1rgr27b886().b[94][0]++, selectedConversationId) ||
                          /* istanbul ignore next */
                          (cov_1rgr27b886().b[94][1]++, undefined),
                          onValueChange: value => {
                            /* istanbul ignore next */
                            cov_1rgr27b886().f[90]++;
                            cov_1rgr27b886().s[353]++;
                            return setSelectedConversationId(value);
                          },
                          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectTrigger, {
                            className: "w-full bg-purple-950 border-purple-700 text-white",
                            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectValue, {
                              placeholder: "Select a conversation"
                            })
                          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectContent, {
                            className: "bg-purple-950 border-purple-700 text-white",
                            children: relevantConversations.length > 0 ?
                            /* istanbul ignore next */
                            (cov_1rgr27b886().b[95][0]++, relevantConversations.map(conv => {
                              /* istanbul ignore next */
                              cov_1rgr27b886().f[91]++;
                              cov_1rgr27b886().s[354]++;
                              return /*#__PURE__*/(0, _jsxruntime.jsxs)(_select.SelectItem, {
                                value: conv.id,
                                children: ["Conversation", " ", (0, _utils.formatTimestamp)(conv.startTime)]
                              }, conv.id);
                            })) :
                            /* istanbul ignore next */
                            (/*#__PURE__*/cov_1rgr27b886().b[95][1]++, (0, _jsxruntime.jsx)(_select.SelectItem, {
                              disabled: true,
                              value: "no-conversations",
                              children: "No conversations available"
                            }))
                          })]
                        })]
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
                        onClick: handleUpdateBeliefs,
                        className: "bg-purple-700 hover:bg-purple-600 text-white",
                        disabled: isExtractingBeliefs,
                        children: isExtractingBeliefs ?
                        /* istanbul ignore next */
                        (/*#__PURE__*/cov_1rgr27b886().b[96][0]++, (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                          children: ["Extracting Beliefs... (", extractionProgress, "%)"]
                        })) :
                        /* istanbul ignore next */
                        (/*#__PURE__*/cov_1rgr27b886().b[96][1]++, (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Search, {
                            size: 16,
                            className: "mr-2"
                          }), "Extract Beliefs"]
                        }))
                      })]
                    })
                  })),
                  /* istanbul ignore next */
                  (cov_1rgr27b886().b[97][0]++, inferenceTab === "results") &&
                  /* istanbul ignore next */
                  (cov_1rgr27b886().b[97][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex-1 p-4 overflow-auto",
                    children: [
                    /* istanbul ignore next */
                    (cov_1rgr27b886().b[98][0]++, extractionStep === "idle") &&
                    /* istanbul ignore next */
                    (cov_1rgr27b886().b[98][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: "text-center text-muted-foreground py-8",
                      children: "No beliefs extracted yet."
                    })),
                    /* istanbul ignore next */
                    (cov_1rgr27b886().b[99][0]++, extractionStep === "extracting") &&
                    /* istanbul ignore next */
                    (cov_1rgr27b886().b[99][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "text-center py-8 space-y-4",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                        className: "text-muted-foreground",
                        children: "Extracting beliefs..."
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                        className: "w-full max-w-md mx-auto bg-gray-200 rounded-full h-2.5 dark:bg-gray-700",
                        children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                          className: "bg-purple-600 h-2.5 rounded-full transition-all duration-300 ease-in-out",
                          style: {
                            width: `${extractionProgress}%`
                          }
                        })
                      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
                        className: "text-sm text-muted-foreground",
                        children: [extractionProgress, "% complete"]
                      })]
                    })),
                    /* istanbul ignore next */
                    (cov_1rgr27b886().b[100][0]++, extractionStep === "refining") &&
                    /* istanbul ignore next */
                    (cov_1rgr27b886().b[100][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "text-center py-8 space-y-4",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                        className: "text-muted-foreground",
                        children: "Refining beliefs..."
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                        className: "w-full max-w-md mx-auto bg-gray-200 rounded-full h-2.5 dark:bg-gray-700",
                        children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                          className: "bg-purple-600 h-2.5 rounded-full transition-all duration-300 ease-in-out",
                          style: {
                            width: `${extractionProgress}%`
                          }
                        })
                      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
                        className: "text-sm text-muted-foreground",
                        children: [extractionProgress, "% complete"]
                      })]
                    })),
                    /* istanbul ignore next */
                    (cov_1rgr27b886().b[101][0]++, extractionStep === "complete") &&
                    /* istanbul ignore next */
                    (cov_1rgr27b886().b[101][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "space-y-4",
                      children: [extractedBeliefs.length > 0 ?
                      /* istanbul ignore next */
                      (cov_1rgr27b886().b[102][0]++, extractedBeliefs.map((belief, index) => {
                        /* istanbul ignore next */
                        cov_1rgr27b886().f[92]++;
                        cov_1rgr27b886().s[355]++;
                        return /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
                          className: "p-4",
                          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                            className: "flex items-center justify-between",
                            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("h3", {
                              className: "font-medium truncate max-w-[80%]",
                              title: belief.title,
                              children: [
                              /* istanbul ignore next */
                              (cov_1rgr27b886().b[103][0]++, belief.title) ||
                              /* istanbul ignore next */
                              (cov_1rgr27b886().b[103][1]++, "Untitled belief"),
                              /* istanbul ignore next */
                              (cov_1rgr27b886().b[105][0]++, belief.title) &&
                              /* istanbul ignore next */
                              (cov_1rgr27b886().b[105][1]++, belief.title.length > 30) ?
                              /* istanbul ignore next */
                              (cov_1rgr27b886().b[104][0]++, "...") :
                              /* istanbul ignore next */
                              (cov_1rgr27b886().b[104][1]++, "")]
                            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
                              className: "inline-flex items-center space-x-2 cursor-pointer",
                              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                                type: "checkbox",
                                className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                                checked: belief.selected !== false,
                                onChange: () => {
                                  /* istanbul ignore next */
                                  cov_1rgr27b886().f[93]++;
                                  cov_1rgr27b886().s[356]++;
                                  return handleToggleBelief(index);
                                }
                              }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                                className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                                children: "Select"
                              })]
                            })]
                          }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                            className: "text-sm text-muted-foreground mt-1 line-clamp-2",
                            children:
                            /* istanbul ignore next */
                            (cov_1rgr27b886().b[106][0]++, belief.refined_content) ||
                            /* istanbul ignore next */
                            (cov_1rgr27b886().b[106][1]++, "No content available")
                          })]
                        }, index);
                      })) :
                      /* istanbul ignore next */
                      (/*#__PURE__*/cov_1rgr27b886().b[102][1]++, (0, _jsxruntime.jsx)("div", {
                        className: "text-center text-muted-foreground py-8",
                        children: "No beliefs extracted."
                      })), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
                        onClick: handleAddSelectedBeliefs,
                        className: "bg-purple-700 hover:bg-purple-600 text-white",
                        disabled: extractedBeliefs.length === 0,
                        children: "Add Selected Beliefs to Knowledge"
                      })]
                    }))]
                  })),
                  /* istanbul ignore next */
                  (cov_1rgr27b886().b[107][0]++, inferenceTab === "preview") &&
                  /* istanbul ignore next */
                  (cov_1rgr27b886().b[107][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    className: "p-4",
                    children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "space-y-4",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                        className: "space-y-2",
                        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                          htmlFor: "raw-beliefs",
                          className: "text-sm font-medium",
                          children: "Raw Beliefs"
                        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_textarea.Textarea, {
                          id: "raw-beliefs",
                          value: JSON.stringify(rawBeliefs, null, 2),
                          className: "min-h-[100px]",
                          readOnly: true
                        })]
                      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                        className: "space-y-2",
                        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                          htmlFor: "extracted-beliefs",
                          className: "text-sm font-medium",
                          children: "Extracted Beliefs"
                        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_textarea.Textarea, {
                          id: "extracted-beliefs",
                          value: JSON.stringify(extractedBeliefs, null, 2),
                          className: "min-h-[100px]",
                          readOnly: true
                        })]
                      })]
                    })
                  }))]
                }))]
              })]
            })
          })]
        })),
        /* istanbul ignore next */
        (cov_1rgr27b886().b[108][0]++, selectedView === "system") &&
        /* istanbul ignore next */
        (cov_1rgr27b886().b[108][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
            className: "pb-2",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
              className: "text-base",
              children: "System Prompt"
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "space-y-4",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "space-y-2",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                  htmlFor: "system-prompt-name",
                  className: "text-sm font-medium",
                  children: "Prompt Name"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
                  id: "system-prompt-name",
                  value: systemPromptName,
                  onChange: e => {
                    /* istanbul ignore next */
                    cov_1rgr27b886().f[94]++;
                    cov_1rgr27b886().s[357]++;
                    return setSystemPromptName(e.target.value);
                  },
                  placeholder: "Enter prompt name..."
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "space-y-2",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                  htmlFor: "system-prompt",
                  className: "text-sm font-medium",
                  children: "System Prompt"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_textarea.Textarea, {
                  id: "system-prompt",
                  value: systemPrompt,
                  onChange: e => {
                    /* istanbul ignore next */
                    cov_1rgr27b886().f[95]++;
                    cov_1rgr27b886().s[358]++;
                    return setSystemPrompt(e.target.value);
                  },
                  className: "min-h-[200px]",
                  placeholder: "Enter system prompt..."
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
                onClick: handleSaveSystemPrompt,
                className: "bg-purple-700 hover:bg-purple-600 text-white",
                disabled: isProcessing,
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Save, {
                  size: 16,
                  className: "mr-2"
                }), "Save System Prompt"]
              })]
            })
          })]
        })),
        /* istanbul ignore next */
        (cov_1rgr27b886().b[109][0]++, selectedView === "tools") &&
        /* istanbul ignore next */
        (cov_1rgr27b886().b[109][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
            className: "pb-2",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
              className: "text-base",
              children: "Agent Tools"
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "space-y-4",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "space-y-2",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
                  className: "text-sm font-medium",
                  children: "Information Access Tools"
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "grid grid-cols-2 gap-2",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
                    className: "inline-flex items-center space-x-2 cursor-pointer",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                      type: "checkbox",
                      className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                      checked: toolPermissions.internetSearch,
                      onChange: e => {
                        /* istanbul ignore next */
                        cov_1rgr27b886().f[96]++;
                        cov_1rgr27b886().s[359]++;
                        return handleToolChange("internetSearch", e.target.checked);
                      }
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                      children: "Internet Search"
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
                    className: "inline-flex items-center space-x-2 cursor-pointer",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                      type: "checkbox",
                      className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                      checked: toolPermissions.webScraping,
                      onChange: e => {
                        /* istanbul ignore next */
                        cov_1rgr27b886().f[97]++;
                        cov_1rgr27b886().s[360]++;
                        return handleToolChange("webScraping", e.target.checked);
                      }
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                      children: "Web Scraping"
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
                    className: "inline-flex items-center space-x-2 cursor-pointer",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                      type: "checkbox",
                      className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                      checked: toolPermissions.wikipediaAccess,
                      onChange: e => {
                        /* istanbul ignore next */
                        cov_1rgr27b886().f[98]++;
                        cov_1rgr27b886().s[361]++;
                        return handleToolChange("wikipediaAccess", e.target.checked);
                      }
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                      children: "Wikipedia Access"
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
                    className: "inline-flex items-center space-x-2 cursor-pointer",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                      type: "checkbox",
                      className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                      checked: toolPermissions.newsApi,
                      onChange: e => {
                        /* istanbul ignore next */
                        cov_1rgr27b886().f[99]++;
                        cov_1rgr27b886().s[362]++;
                        return handleToolChange("newsApi", e.target.checked);
                      }
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                      children: "News API"
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
                    className: "inline-flex items-center space-x-2 cursor-pointer",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                      type: "checkbox",
                      className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                      checked: toolPermissions.academicSearch,
                      onChange: e => {
                        /* istanbul ignore next */
                        cov_1rgr27b886().f[100]++;
                        cov_1rgr27b886().s[363]++;
                        return handleToolChange("academicSearch", e.target.checked);
                      }
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                      children: "Academic Search"
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
                    className: "inline-flex items-center space-x-2 cursor-pointer",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                      type: "checkbox",
                      className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                      checked: toolPermissions.documentRetrieval,
                      onChange: e => {
                        /* istanbul ignore next */
                        cov_1rgr27b886().f[101]++;
                        cov_1rgr27b886().s[364]++;
                        return handleToolChange("documentRetrieval", e.target.checked);
                      }
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                      children: "Document Retrieval"
                    })]
                  })]
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "space-y-2",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
                  className: "text-sm font-medium",
                  children: "Content Generation & Processing"
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "grid grid-cols-2 gap-2",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
                    className: "inline-flex items-center space-x-2 cursor-pointer",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                      type: "checkbox",
                      className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                      checked: toolPermissions.imageGeneration,
                      onChange: e => {
                        /* istanbul ignore next */
                        cov_1rgr27b886().f[102]++;
                        cov_1rgr27b886().s[365]++;
                        return handleToolChange("imageGeneration", e.target.checked);
                      }
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                      children: "Image Generation"
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
                    className: "inline-flex items-center space-x-2 cursor-pointer",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                      type: "checkbox",
                      className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                      checked: toolPermissions.textSummarization,
                      onChange: e => {
                        /* istanbul ignore next */
                        cov_1rgr27b886().f[103]++;
                        cov_1rgr27b886().s[366]++;
                        return handleToolChange("textSummarization", e.target.checked);
                      }
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                      children: "Text Summarization"
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
                    className: "inline-flex items-center space-x-2 cursor-pointer",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                      type: "checkbox",
                      className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                      checked: toolPermissions.translation,
                      onChange: e => {
                        /* istanbul ignore next */
                        cov_1rgr27b886().f[104]++;
                        cov_1rgr27b886().s[367]++;
                        return handleToolChange("translation", e.target.checked);
                      }
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                      children: "Translation"
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
                    className: "inline-flex items-center space-x-2 cursor-pointer",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                      type: "checkbox",
                      className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                      checked: toolPermissions.codeExecution,
                      onChange: e => {
                        /* istanbul ignore next */
                        cov_1rgr27b886().f[105]++;
                        cov_1rgr27b886().s[368]++;
                        return handleToolChange("codeExecution", e.target.checked);
                      }
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                      children: "Code Execution"
                    })]
                  })]
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "space-y-2",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
                  className: "text-sm font-medium",
                  children: "Knowledge & Reasoning Tools"
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "grid grid-cols-2 gap-2",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
                    className: "inline-flex items-center space-x-2 cursor-pointer",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                      type: "checkbox",
                      className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                      checked: toolPermissions.calculator,
                      onChange: e => {
                        /* istanbul ignore next */
                        cov_1rgr27b886().f[106]++;
                        cov_1rgr27b886().s[369]++;
                        return handleToolChange("calculator", e.target.checked);
                      }
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                      children: "Calculator"
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
                    className: "inline-flex items-center space-x-2 cursor-pointer",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                      type: "checkbox",
                      className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                      checked: toolPermissions.knowledgeGraphQuery,
                      onChange: e => {
                        /* istanbul ignore next */
                        cov_1rgr27b886().f[107]++;
                        cov_1rgr27b886().s[370]++;
                        return handleToolChange("knowledgeGraphQuery", e.target.checked);
                      }
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                      children: "Knowledge Graph Query"
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
                    className: "inline-flex items-center space-x-2 cursor-pointer",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                      type: "checkbox",
                      className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                      checked: toolPermissions.factChecking,
                      onChange: e => {
                        /* istanbul ignore next */
                        cov_1rgr27b886().f[108]++;
                        cov_1rgr27b886().s[371]++;
                        return handleToolChange("factChecking", e.target.checked);
                      }
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                      children: "Fact Checking"
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
                    className: "inline-flex items-center space-x-2 cursor-pointer",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                      type: "checkbox",
                      className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                      checked: toolPermissions.timelineGenerator,
                      onChange: e => {
                        /* istanbul ignore next */
                        cov_1rgr27b886().f[109]++;
                        cov_1rgr27b886().s[372]++;
                        return handleToolChange("timelineGenerator", e.target.checked);
                      }
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                      children: "Timeline Generator"
                    })]
                  })]
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "space-y-2",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
                  className: "text-sm font-medium",
                  children: "External Integrations"
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "grid grid-cols-2 gap-2",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
                    className: "inline-flex items-center space-x-2 cursor-pointer",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                      type: "checkbox",
                      className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                      checked: toolPermissions.weatherData,
                      onChange: e => {
                        /* istanbul ignore next */
                        cov_1rgr27b886().f[110]++;
                        cov_1rgr27b886().s[373]++;
                        return handleToolChange("weatherData", e.target.checked);
                      }
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                      children: "Weather Data"
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
                    className: "inline-flex items-center space-x-2 cursor-pointer",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                      type: "checkbox",
                      className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                      checked: toolPermissions.mapLocationData,
                      onChange: e => {
                        /* istanbul ignore next */
                        cov_1rgr27b886().f[111]++;
                        cov_1rgr27b886().s[374]++;
                        return handleToolChange("mapLocationData", e.target.checked);
                      }
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                      children: "Map Location Data"
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
                    className: "inline-flex items-center space-x-2 cursor-pointer",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                      type: "checkbox",
                      className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                      checked: toolPermissions.financialData,
                      onChange: e => {
                        /* istanbul ignore next */
                        cov_1rgr27b886().f[112]++;
                        cov_1rgr27b886().s[375]++;
                        return handleToolChange("financialData", e.target.checked);
                      }
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                      children: "Financial Data"
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
                    className: "inline-flex items-center space-x-2 cursor-pointer",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                      type: "checkbox",
                      className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                      checked: toolPermissions.publicDatasets,
                      onChange: e => {
                        /* istanbul ignore next */
                        cov_1rgr27b886().f[113]++;
                        cov_1rgr27b886().s[376]++;
                        return handleToolChange("publicDatasets", e.target.checked);
                      }
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                      children: "Public Datasets"
                    })]
                  })]
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "space-y-2",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
                  className: "text-sm font-medium",
                  children: "Agent-Specific Tools"
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "grid grid-cols-2 gap-2",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
                    className: "inline-flex items-center space-x-2 cursor-pointer",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                      type: "checkbox",
                      className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                      checked: toolPermissions.memorySearch,
                      onChange: e => {
                        /* istanbul ignore next */
                        cov_1rgr27b886().f[114]++;
                        cov_1rgr27b886().s[377]++;
                        return handleToolChange("memorySearch", e.target.checked);
                      }
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                      children: "Memory Search"
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
                    className: "inline-flex items-center space-x-2 cursor-pointer",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                      type: "checkbox",
                      className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                      checked: toolPermissions.crossAgentKnowledge,
                      onChange: e => {
                        /* istanbul ignore next */
                        cov_1rgr27b886().f[115]++;
                        cov_1rgr27b886().s[378]++;
                        return handleToolChange("crossAgentKnowledge", e.target.checked);
                      }
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                      children: "Cross-Agent Knowledge"
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
                    className: "inline-flex items-center space-x-2 cursor-pointer",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                      type: "checkbox",
                      className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                      checked: toolPermissions.conversationAnalysis,
                      onChange: e => {
                        /* istanbul ignore next */
                        cov_1rgr27b886().f[116]++;
                        cov_1rgr27b886().s[379]++;
                        return handleToolChange("conversationAnalysis", e.target.checked);
                      }
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                      children: "Conversation Analysis"
                    })]
                  })]
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
                onClick: handleSaveToolSettings,
                className: "bg-purple-700 hover:bg-purple-600 text-white",
                disabled:
                /* istanbul ignore next */
                (cov_1rgr27b886().b[110][0]++, !hasToolChanges) ||
                /* istanbul ignore next */
                (cov_1rgr27b886().b[110][1]++, isSavingTools),
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Save, {
                  size: 16,
                  className: "mr-2"
                }), "Save Tool Settings"]
              })]
            })
          })]
        }))]
      })]
    })) :
    /* istanbul ignore next */
    (/*#__PURE__*/cov_1rgr27b886().b[70][1]++, (0, _jsxruntime.jsx)("div", {
      className: "flex-1 flex items-center justify-center text-muted-foreground",
      children: "Select an agent to view memory."
    }))),
    /* istanbul ignore next */
    (cov_1rgr27b886().b[111][0]++, isDeleteDialogOpen) &&
    /* istanbul ignore next */
    (cov_1rgr27b886().b[111][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "fixed inset-0 z-50 flex items-center justify-center bg-black/50",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
        className: "max-w-md w-full",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
            children: "Delete Knowledge"
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
            children: ['Are you sure you want to delete "', knowledgeToDelete?.title, '"?']
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "mt-4 flex justify-end gap-2",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
              variant: "ghost",
              onClick: () => {
                /* istanbul ignore next */
                cov_1rgr27b886().f[117]++;
                cov_1rgr27b886().s[380]++;
                return setIsDeleteDialogOpen(false);
              },
              children: "Cancel"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
              variant: "destructive",
              onClick: handleDeleteKnowledge,
              children: "Delete"
            })]
          })]
        })]
      })
    }))]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
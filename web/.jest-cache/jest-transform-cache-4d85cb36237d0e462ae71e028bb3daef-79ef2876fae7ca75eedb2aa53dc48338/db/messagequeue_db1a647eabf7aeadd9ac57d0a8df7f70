c0ce557feb34b3ba20ebfc7bffb38a9d
/**
 * Message Queue Implementation
 *
 * High-performance message queue for real-time agent communication
 * with priority handling, batching, and optimization.
 */"use strict";

/* istanbul ignore next */
function cov_2kzzrnr6eg() {
  var path = "/Users/matthewmoroney/builds/FreeAgentics/web/lib/message-queue.ts";
  var hash = "de6517631fccf79cd8dd38277be118dda01b8876";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewmoroney/builds/FreeAgentics/web/lib/message-queue.ts",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 9,
          column: 3
        }
      },
      "1": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 14,
          column: 7
        }
      },
      "2": {
        start: {
          line: 11,
          column: 24
        },
        end: {
          line: 14,
          column: 7
        }
      },
      "3": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 29,
          column: 3
        }
      },
      "4": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 36
        }
      },
      "5": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 34
        }
      },
      "6": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 29
        }
      },
      "7": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 30
        }
      },
      "8": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 34
        }
      },
      "9": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 40
        }
      },
      "10": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 34
        }
      },
      "11": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 34
        }
      },
      "12": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 29
        }
      },
      "13": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 33
        }
      },
      "14": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 40,
          column: 9
        }
      },
      "15": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 79
        }
      },
      "16": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 29
        }
      },
      "17": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 45,
          column: 11
        }
      },
      "18": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 50
        }
      },
      "19": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 56,
          column: 10
        }
      },
      "20": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 61,
          column: 10
        }
      },
      "21": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 29
        }
      },
      "22": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 67,
          column: 10
        }
      },
      "23": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 72,
          column: 9
        }
      },
      "24": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 42
        }
      },
      "25": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "26": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 19
        }
      },
      "27": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 47
        }
      },
      "28": {
        start: {
          line: 80,
          column: 30
        },
        end: {
          line: 80,
          column: 71
        }
      },
      "29": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 85,
          column: 9
        }
      },
      "30": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 40
        }
      },
      "31": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 66
        }
      },
      "32": {
        start: {
          line: 84,
          column: 39
        },
        end: {
          line: 84,
          column: 64
        }
      },
      "33": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 37
        }
      },
      "34": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 29
        }
      },
      "35": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 99,
          column: 9
        }
      },
      "36": {
        start: {
          line: 92,
          column: 26
        },
        end: {
          line: 92,
          column: 59
        }
      },
      "37": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 98,
          column: 13
        }
      },
      "38": {
        start: {
          line: 94,
          column: 32
        },
        end: {
          line: 94,
          column: 45
        }
      },
      "39": {
        start: {
          line: 95,
          column: 16
        },
        end: {
          line: 95,
          column: 49
        }
      },
      "40": {
        start: {
          line: 96,
          column: 16
        },
        end: {
          line: 96,
          column: 37
        }
      },
      "41": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 97,
          column: 31
        }
      },
      "42": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 20
        }
      },
      "43": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "44": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 55
        }
      },
      "45": {
        start: {
          line: 106,
          column: 24
        },
        end: {
          line: 106,
          column: 44
        }
      },
      "46": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "47": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 19
        }
      },
      "48": {
        start: {
          line: 110,
          column: 26
        },
        end: {
          line: 110,
          column: 36
        }
      },
      "49": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 122,
          column: 9
        }
      },
      "50": {
        start: {
          line: 112,
          column: 27
        },
        end: {
          line: 112,
          column: 56
        }
      },
      "51": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 118,
          column: 13
        }
      },
      "52": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 49
        }
      },
      "53": {
        start: {
          line: 116,
          column: 16
        },
        end: {
          line: 116,
          column: 42
        }
      },
      "54": {
        start: {
          line: 117,
          column: 16
        },
        end: {
          line: 117,
          column: 60
        }
      },
      "55": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 38
        }
      },
      "56": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 56
        }
      },
      "57": {
        start: {
          line: 123,
          column: 31
        },
        end: {
          line: 123,
          column: 53
        }
      },
      "58": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 50
        }
      },
      "59": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 128,
          column: 9
        }
      },
      "60": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 67
        }
      },
      "61": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 29
        }
      },
      "62": {
        start: {
          line: 132,
          column: 27
        },
        end: {
          line: 132,
          column: 56
        }
      },
      "63": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 140,
          column: 9
        }
      },
      "64": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 44
        }
      },
      "65": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 40
        }
      },
      "66": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 47
        }
      },
      "67": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 149,
          column: 9
        }
      },
      "68": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 147,
          column: 13
        }
      },
      "69": {
        start: {
          line: 145,
          column: 24
        },
        end: {
          line: 145,
          column: 25
        }
      },
      "70": {
        start: {
          line: 146,
          column: 16
        },
        end: {
          line: 146,
          column: 41
        }
      },
      "71": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 19
        }
      },
      "72": {
        start: {
          line: 150,
          column: 22
        },
        end: {
          line: 150,
          column: 24
        }
      },
      "73": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 156,
          column: 9
        }
      },
      "74": {
        start: {
          line: 152,
          column: 20
        },
        end: {
          line: 152,
          column: 21
        }
      },
      "75": {
        start: {
          line: 153,
          column: 28
        },
        end: {
          line: 153,
          column: 48
        }
      },
      "76": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 32
        }
      },
      "77": {
        start: {
          line: 154,
          column: 26
        },
        end: {
          line: 154,
          column: 32
        }
      },
      "78": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 32
        }
      },
      "79": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 157,
          column: 39
        }
      },
      "80": {
        start: {
          line: 157,
          column: 32
        },
        end: {
          line: 157,
          column: 39
        }
      },
      "81": {
        start: {
          line: 158,
          column: 26
        },
        end: {
          line: 158,
          column: 36
        }
      },
      "82": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 171,
          column: 9
        }
      },
      "83": {
        start: {
          line: 160,
          column: 28
        },
        end: {
          line: 160,
          column: 60
        }
      },
      "84": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 167,
          column: 15
        }
      },
      "85": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 166,
          column: 17
        }
      },
      "86": {
        start: {
          line: 163,
          column: 20
        },
        end: {
          line: 163,
          column: 53
        }
      },
      "87": {
        start: {
          line: 165,
          column: 20
        },
        end: {
          line: 165,
          column: 63
        }
      },
      "88": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 170,
          column: 76
        }
      },
      "89": {
        start: {
          line: 170,
          column: 37
        },
        end: {
          line: 170,
          column: 74
        }
      },
      "90": {
        start: {
          line: 172,
          column: 26
        },
        end: {
          line: 172,
          column: 48
        }
      },
      "91": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 43
        }
      },
      "92": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 60
        }
      },
      "93": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 175,
          column: 29
        }
      },
      "94": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 35
        }
      },
      "95": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 181,
          column: 40
        }
      },
      "96": {
        start: {
          line: 184,
          column: 35
        },
        end: {
          line: 184,
          column: 77
        }
      },
      "97": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 195,
          column: 31
        }
      },
      "98": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 194,
          column: 13
        }
      },
      "99": {
        start: {
          line: 187,
          column: 16
        },
        end: {
          line: 191,
          column: 17
        }
      },
      "100": {
        start: {
          line: 188,
          column: 20
        },
        end: {
          line: 188,
          column: 46
        }
      },
      "101": {
        start: {
          line: 190,
          column: 20
        },
        end: {
          line: 190,
          column: 45
        }
      },
      "102": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 193,
          column: 63
        }
      },
      "103": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 201,
          column: 9
        }
      },
      "104": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 199,
          column: 55
        }
      },
      "105": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 52
        }
      },
      "106": {
        start: {
          line: 204,
          column: 24
        },
        end: {
          line: 204,
          column: 26
        }
      },
      "107": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 215,
          column: 11
        }
      },
      "108": {
        start: {
          line: 206,
          column: 26
        },
        end: {
          line: 206,
          column: 30
        }
      },
      "109": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 211,
          column: 15
        }
      },
      "110": {
        start: {
          line: 208,
          column: 16
        },
        end: {
          line: 210,
          column: 17
        }
      },
      "111": {
        start: {
          line: 209,
          column: 20
        },
        end: {
          line: 209,
          column: 36
        }
      },
      "112": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 214,
          column: 13
        }
      },
      "113": {
        start: {
          line: 213,
          column: 16
        },
        end: {
          line: 213,
          column: 38
        }
      },
      "114": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 216,
          column: 23
        }
      },
      "115": {
        start: {
          line: 219,
          column: 24
        },
        end: {
          line: 219,
          column: 26
        }
      },
      "116": {
        start: {
          line: 220,
          column: 27
        },
        end: {
          line: 220,
          column: 46
        }
      },
      "117": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 225,
          column: 11
        }
      },
      "118": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 224,
          column: 13
        }
      },
      "119": {
        start: {
          line: 223,
          column: 16
        },
        end: {
          line: 223,
          column: 38
        }
      },
      "120": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 226,
          column: 23
        }
      },
      "121": {
        start: {
          line: 229,
          column: 20
        },
        end: {
          line: 229,
          column: 30
        }
      },
      "122": {
        start: {
          line: 230,
          column: 27
        },
        end: {
          line: 230,
          column: 29
        }
      },
      "123": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 235,
          column: 11
        }
      },
      "124": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 234,
          column: 13
        }
      },
      "125": {
        start: {
          line: 233,
          column: 16
        },
        end: {
          line: 233,
          column: 36
        }
      },
      "126": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 249,
          column: 11
        }
      },
      "127": {
        start: {
          line: 237,
          column: 28
        },
        end: {
          line: 237,
          column: 49
        }
      },
      "128": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 248,
          column: 13
        }
      },
      "129": {
        start: {
          line: 239,
          column: 16
        },
        end: {
          line: 239,
          column: 41
        }
      },
      "130": {
        start: {
          line: 241,
          column: 38
        },
        end: {
          line: 241,
          column: 79
        }
      },
      "131": {
        start: {
          line: 242,
          column: 16
        },
        end: {
          line: 247,
          column: 17
        }
      },
      "132": {
        start: {
          line: 243,
          column: 34
        },
        end: {
          line: 243,
          column: 75
        }
      },
      "133": {
        start: {
          line: 243,
          column: 63
        },
        end: {
          line: 243,
          column: 74
        }
      },
      "134": {
        start: {
          line: 244,
          column: 20
        },
        end: {
          line: 246,
          column: 21
        }
      },
      "135": {
        start: {
          line: 245,
          column: 24
        },
        end: {
          line: 245,
          column: 55
        }
      },
      "136": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 250,
          column: 29
        }
      },
      "137": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 254,
          column: 63
        }
      },
      "138": {
        start: {
          line: 254,
          column: 45
        },
        end: {
          line: 254,
          column: 61
        }
      },
      "139": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 260,
          column: 11
        }
      },
      "140": {
        start: {
          line: 256,
          column: 34
        },
        end: {
          line: 256,
          column: 75
        }
      },
      "141": {
        start: {
          line: 257,
          column: 12
        },
        end: {
          line: 259,
          column: 13
        }
      },
      "142": {
        start: {
          line: 258,
          column: 16
        },
        end: {
          line: 258,
          column: 44
        }
      },
      "143": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 264,
          column: 11
        }
      },
      "144": {
        start: {
          line: 263,
          column: 12
        },
        end: {
          line: 263,
          column: 58
        }
      },
      "145": {
        start: {
          line: 263,
          column: 31
        },
        end: {
          line: 263,
          column: 56
        }
      },
      "146": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 265,
          column: 29
        }
      },
      "147": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 268,
          column: 48
        }
      },
      "148": {
        start: {
          line: 268,
          column: 41
        },
        end: {
          line: 268,
          column: 48
        }
      },
      "149": {
        start: {
          line: 270,
          column: 30
        },
        end: {
          line: 270,
          column: 56
        }
      },
      "150": {
        start: {
          line: 271,
          column: 33
        },
        end: {
          line: 271,
          column: 94
        }
      },
      "151": {
        start: {
          line: 271,
          column: 62
        },
        end: {
          line: 271,
          column: 67
        }
      },
      "152": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 277,
          column: 9
        }
      },
      "153": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 274,
          column: 76
        }
      },
      "154": {
        start: {
          line: 275,
          column: 15
        },
        end: {
          line: 277,
          column: 9
        }
      },
      "155": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 276,
          column: 75
        }
      },
      "156": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 282,
          column: 10
        }
      },
      "157": {
        start: {
          line: 285,
          column: 8
        },
        end: {
          line: 285,
          column: 43
        }
      },
      "158": {
        start: {
          line: 285,
          column: 30
        },
        end: {
          line: 285,
          column: 43
        }
      },
      "159": {
        start: {
          line: 287,
          column: 28
        },
        end: {
          line: 287,
          column: 29
        }
      },
      "160": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 290,
          column: 11
        }
      },
      "161": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 289,
          column: 42
        }
      },
      "162": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 291,
          column: 52
        }
      },
      "163": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 294,
          column: 33
        }
      },
      "164": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 296,
          column: 29
        }
      },
      "165": {
        start: {
          line: 298,
          column: 8
        },
        end: {
          line: 298,
          column: 36
        }
      },
      "166": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 301,
          column: 32
        }
      },
      "167": {
        start: {
          line: 304,
          column: 38
        },
        end: {
          line: 304,
          column: 69
        }
      },
      "168": {
        start: {
          line: 305,
          column: 24
        },
        end: {
          line: 305,
          column: 101
        }
      },
      "169": {
        start: {
          line: 305,
          column: 61
        },
        end: {
          line: 305,
          column: 66
        }
      },
      "170": {
        start: {
          line: 307,
          column: 36
        },
        end: {
          line: 307,
          column: 48
        }
      },
      "171": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 314,
          column: 10
        }
      },
      "172": {
        start: {
          line: 317,
          column: 28
        },
        end: {
          line: 317,
          column: 29
        }
      },
      "173": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 320,
          column: 11
        }
      },
      "174": {
        start: {
          line: 319,
          column: 12
        },
        end: {
          line: 319,
          column: 42
        }
      },
      "175": {
        start: {
          line: 321,
          column: 8
        },
        end: {
          line: 321,
          column: 53
        }
      },
      "176": {
        start: {
          line: 322,
          column: 8
        },
        end: {
          line: 322,
          column: 52
        }
      },
      "177": {
        start: {
          line: 323,
          column: 8
        },
        end: {
          line: 325,
          column: 9
        }
      },
      "178": {
        start: {
          line: 324,
          column: 12
        },
        end: {
          line: 324,
          column: 125
        }
      },
      "179": {
        start: {
          line: 324,
          column: 85
        },
        end: {
          line: 324,
          column: 90
        }
      },
      "180": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 328,
          column: 9
        }
      },
      "181": {
        start: {
          line: 327,
          column: 12
        },
        end: {
          line: 327,
          column: 110
        }
      },
      "182": {
        start: {
          line: 327,
          column: 75
        },
        end: {
          line: 327,
          column: 80
        }
      },
      "183": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 329,
          column: 123
        }
      },
      "184": {
        start: {
          line: 331,
          column: 8
        },
        end: {
          line: 334,
          column: 9
        }
      },
      "185": {
        start: {
          line: 332,
          column: 30
        },
        end: {
          line: 332,
          column: 75
        }
      },
      "186": {
        start: {
          line: 332,
          column: 66
        },
        end: {
          line: 332,
          column: 71
        }
      },
      "187": {
        start: {
          line: 333,
          column: 12
        },
        end: {
          line: 333,
          column: 88
        }
      },
      "188": {
        start: {
          line: 338,
          column: 4
        },
        end: {
          line: 338,
          column: 40
        }
      },
      "189": {
        start: {
          line: 341,
          column: 4
        },
        end: {
          line: 348,
          column: 5
        }
      },
      "190": {
        start: {
          line: 342,
          column: 8
        },
        end: {
          line: 342,
          column: 40
        }
      },
      "191": {
        start: {
          line: 344,
          column: 8
        },
        end: {
          line: 347,
          column: 10
        }
      },
      "192": {
        start: {
          line: 351,
          column: 20
        },
        end: {
          line: 351,
          column: 22
        }
      },
      "193": {
        start: {
          line: 352,
          column: 4
        },
        end: {
          line: 354,
          column: 5
        }
      },
      "194": {
        start: {
          line: 353,
          column: 8
        },
        end: {
          line: 353,
          column: 63
        }
      },
      "195": {
        start: {
          line: 355,
          column: 4
        },
        end: {
          line: 355,
          column: 19
        }
      },
      "196": {
        start: {
          line: 359,
          column: 4
        },
        end: {
          line: 359,
          column: 34
        }
      },
      "197": {
        start: {
          line: 360,
          column: 4
        },
        end: {
          line: 360,
          column: 20
        }
      },
      "198": {
        start: {
          line: 361,
          column: 4
        },
        end: {
          line: 361,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 10,
            column: 9
          },
          end: {
            line: 10,
            column: 16
          }
        },
        loc: {
          start: {
            line: 10,
            column: 30
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 26
          },
          end: {
            line: 17,
            column: 27
          }
        },
        loc: {
          start: {
            line: 17,
            column: 37
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 24
          },
          end: {
            line: 20,
            column: 25
          }
        },
        loc: {
          start: {
            line: 20,
            column: 35
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 23,
            column: 19
          },
          end: {
            line: 23,
            column: 20
          }
        },
        loc: {
          start: {
            line: 23,
            column: 30
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 20
          },
          end: {
            line: 26,
            column: 21
          }
        },
        loc: {
          start: {
            line: 26,
            column: 31
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        loc: {
          start: {
            line: 31,
            column: 23
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 31
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 43,
            column: 38
          },
          end: {
            line: 43,
            column: 39
          }
        },
        loc: {
          start: {
            line: 43,
            column: 50
          },
          end: {
            line: 45,
            column: 9
          }
        },
        line: 43
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        loc: {
          start: {
            line: 58,
            column: 16
          },
          end: {
            line: 62,
            column: 5
          }
        },
        line: 58
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        },
        loc: {
          start: {
            line: 63,
            column: 17
          },
          end: {
            line: 68,
            column: 5
          }
        },
        line: 63
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        },
        loc: {
          start: {
            line: 69,
            column: 27
          },
          end: {
            line: 88,
            column: 5
          }
        },
        line: 69
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 84,
            column: 31
          },
          end: {
            line: 84,
            column: 32
          }
        },
        loc: {
          start: {
            line: 84,
            column: 39
          },
          end: {
            line: 84,
            column: 64
          }
        },
        line: 84
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        },
        loc: {
          start: {
            line: 89,
            column: 20
          },
          end: {
            line: 101,
            column: 5
          }
        },
        line: 89
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 102,
            column: 5
          }
        },
        loc: {
          start: {
            line: 102,
            column: 24
          },
          end: {
            line: 130,
            column: 5
          }
        },
        line: 102
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 131,
            column: 4
          },
          end: {
            line: 131,
            column: 5
          }
        },
        loc: {
          start: {
            line: 131,
            column: 43
          },
          end: {
            line: 141,
            column: 5
          }
        },
        line: 131
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        },
        loc: {
          start: {
            line: 142,
            column: 25
          },
          end: {
            line: 176,
            column: 5
          }
        },
        line: 142
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 161,
            column: 28
          },
          end: {
            line: 161,
            column: 29
          }
        },
        loc: {
          start: {
            line: 161,
            column: 45
          },
          end: {
            line: 167,
            column: 13
          }
        },
        line: 161
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 170,
            column: 26
          },
          end: {
            line: 170,
            column: 27
          }
        },
        loc: {
          start: {
            line: 170,
            column: 37
          },
          end: {
            line: 170,
            column: 74
          }
        },
        line: 170
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 177,
            column: 4
          },
          end: {
            line: 177,
            column: 5
          }
        },
        loc: {
          start: {
            line: 177,
            column: 28
          },
          end: {
            line: 179,
            column: 5
          }
        },
        line: 177
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 180,
            column: 4
          },
          end: {
            line: 180,
            column: 5
          }
        },
        loc: {
          start: {
            line: 180,
            column: 33
          },
          end: {
            line: 182,
            column: 5
          }
        },
        line: 180
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 183,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        },
        loc: {
          start: {
            line: 183,
            column: 34
          },
          end: {
            line: 196,
            column: 5
          }
        },
        line: 183
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 185,
            column: 50
          },
          end: {
            line: 185,
            column: 51
          }
        },
        loc: {
          start: {
            line: 185,
            column: 60
          },
          end: {
            line: 195,
            column: 9
          }
        },
        line: 185
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 197,
            column: 4
          },
          end: {
            line: 197,
            column: 5
          }
        },
        loc: {
          start: {
            line: 197,
            column: 25
          },
          end: {
            line: 202,
            column: 5
          }
        },
        line: 197
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 203,
            column: 4
          },
          end: {
            line: 203,
            column: 5
          }
        },
        loc: {
          start: {
            line: 203,
            column: 25
          },
          end: {
            line: 217,
            column: 5
          }
        },
        line: 203
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 205,
            column: 30
          },
          end: {
            line: 205,
            column: 31
          }
        },
        loc: {
          start: {
            line: 205,
            column: 41
          },
          end: {
            line: 215,
            column: 9
          }
        },
        line: 205
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 207,
            column: 43
          },
          end: {
            line: 207,
            column: 44
          }
        },
        loc: {
          start: {
            line: 207,
            column: 59
          },
          end: {
            line: 211,
            column: 13
          }
        },
        line: 207
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 218,
            column: 4
          },
          end: {
            line: 218,
            column: 5
          }
        },
        loc: {
          start: {
            line: 218,
            column: 26
          },
          end: {
            line: 227,
            column: 5
          }
        },
        line: 218
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 221,
            column: 30
          },
          end: {
            line: 221,
            column: 31
          }
        },
        loc: {
          start: {
            line: 221,
            column: 41
          },
          end: {
            line: 225,
            column: 9
          }
        },
        line: 221
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 228,
            column: 4
          },
          end: {
            line: 228,
            column: 5
          }
        },
        loc: {
          start: {
            line: 228,
            column: 34
          },
          end: {
            line: 251,
            column: 5
          }
        },
        line: 228
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 231,
            column: 30
          },
          end: {
            line: 231,
            column: 31
          }
        },
        loc: {
          start: {
            line: 231,
            column: 45
          },
          end: {
            line: 235,
            column: 9
          }
        },
        line: 231
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 236,
            column: 27
          },
          end: {
            line: 236,
            column: 28
          }
        },
        loc: {
          start: {
            line: 236,
            column: 33
          },
          end: {
            line: 249,
            column: 9
          }
        },
        line: 236
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 243,
            column: 58
          },
          end: {
            line: 243,
            column: 59
          }
        },
        loc: {
          start: {
            line: 243,
            column: 63
          },
          end: {
            line: 243,
            column: 74
          }
        },
        line: 243
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 252,
            column: 4
          },
          end: {
            line: 252,
            column: 5
          }
        },
        loc: {
          start: {
            line: 252,
            column: 20
          },
          end: {
            line: 266,
            column: 5
          }
        },
        line: 252
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 254,
            column: 36
          },
          end: {
            line: 254,
            column: 37
          }
        },
        loc: {
          start: {
            line: 254,
            column: 45
          },
          end: {
            line: 254,
            column: 61
          }
        },
        line: 254
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 255,
            column: 30
          },
          end: {
            line: 255,
            column: 31
          }
        },
        loc: {
          start: {
            line: 255,
            column: 41
          },
          end: {
            line: 260,
            column: 9
          }
        },
        line: 255
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 262,
            column: 36
          },
          end: {
            line: 262,
            column: 37
          }
        },
        loc: {
          start: {
            line: 262,
            column: 45
          },
          end: {
            line: 264,
            column: 9
          }
        },
        line: 262
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 263,
            column: 23
          },
          end: {
            line: 263,
            column: 24
          }
        },
        loc: {
          start: {
            line: 263,
            column: 31
          },
          end: {
            line: 263,
            column: 56
          }
        },
        line: 263
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 267,
            column: 4
          },
          end: {
            line: 267,
            column: 5
          }
        },
        loc: {
          start: {
            line: 267,
            column: 30
          },
          end: {
            line: 278,
            column: 5
          }
        },
        line: 267
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 271,
            column: 54
          },
          end: {
            line: 271,
            column: 55
          }
        },
        loc: {
          start: {
            line: 271,
            column: 62
          },
          end: {
            line: 271,
            column: 67
          }
        },
        line: 271
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 279,
            column: 4
          },
          end: {
            line: 279,
            column: 5
          }
        },
        loc: {
          start: {
            line: 279,
            column: 25
          },
          end: {
            line: 283,
            column: 5
          }
        },
        line: 279
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 284,
            column: 4
          },
          end: {
            line: 284,
            column: 5
          }
        },
        loc: {
          start: {
            line: 284,
            column: 31
          },
          end: {
            line: 292,
            column: 5
          }
        },
        line: 284
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 288,
            column: 36
          },
          end: {
            line: 288,
            column: 37
          }
        },
        loc: {
          start: {
            line: 288,
            column: 45
          },
          end: {
            line: 290,
            column: 9
          }
        },
        line: 288
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 293,
            column: 4
          },
          end: {
            line: 293,
            column: 5
          }
        },
        loc: {
          start: {
            line: 293,
            column: 20
          },
          end: {
            line: 299,
            column: 5
          }
        },
        line: 293
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 300,
            column: 4
          },
          end: {
            line: 300,
            column: 5
          }
        },
        loc: {
          start: {
            line: 300,
            column: 25
          },
          end: {
            line: 302,
            column: 5
          }
        },
        line: 300
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 303,
            column: 4
          },
          end: {
            line: 303,
            column: 5
          }
        },
        loc: {
          start: {
            line: 303,
            column: 27
          },
          end: {
            line: 315,
            column: 5
          }
        },
        line: 303
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 305,
            column: 53
          },
          end: {
            line: 305,
            column: 54
          }
        },
        loc: {
          start: {
            line: 305,
            column: 61
          },
          end: {
            line: 305,
            column: 66
          }
        },
        line: 305
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 316,
            column: 4
          },
          end: {
            line: 316,
            column: 5
          }
        },
        loc: {
          start: {
            line: 316,
            column: 20
          },
          end: {
            line: 335,
            column: 5
          }
        },
        line: 316
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 318,
            column: 36
          },
          end: {
            line: 318,
            column: 37
          }
        },
        loc: {
          start: {
            line: 318,
            column: 45
          },
          end: {
            line: 320,
            column: 9
          }
        },
        line: 318
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 324,
            column: 77
          },
          end: {
            line: 324,
            column: 78
          }
        },
        loc: {
          start: {
            line: 324,
            column: 85
          },
          end: {
            line: 324,
            column: 90
          }
        },
        line: 324
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 327,
            column: 67
          },
          end: {
            line: 327,
            column: 68
          }
        },
        loc: {
          start: {
            line: 327,
            column: 75
          },
          end: {
            line: 327,
            column: 80
          }
        },
        line: 327
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 332,
            column: 58
          },
          end: {
            line: 332,
            column: 59
          }
        },
        loc: {
          start: {
            line: 332,
            column: 66
          },
          end: {
            line: 332,
            column: 71
          }
        },
        line: 332
      },
      "50": {
        name: "createMessageQueue",
        decl: {
          start: {
            line: 337,
            column: 9
          },
          end: {
            line: 337,
            column: 27
          }
        },
        loc: {
          start: {
            line: 337,
            column: 36
          },
          end: {
            line: 339,
            column: 1
          }
        },
        line: 337
      },
      "51": {
        name: "processMessage",
        decl: {
          start: {
            line: 340,
            column: 15
          },
          end: {
            line: 340,
            column: 29
          }
        },
        loc: {
          start: {
            line: 340,
            column: 50
          },
          end: {
            line: 349,
            column: 1
          }
        },
        line: 340
      },
      "52": {
        name: "batchProcessMessages",
        decl: {
          start: {
            line: 350,
            column: 15
          },
          end: {
            line: 350,
            column: 35
          }
        },
        loc: {
          start: {
            line: 350,
            column: 57
          },
          end: {
            line: 356,
            column: 1
          }
        },
        line: 350
      },
      "53": {
        name: "optimizeQueue",
        decl: {
          start: {
            line: 357,
            column: 9
          },
          end: {
            line: 357,
            column: 22
          }
        },
        loc: {
          start: {
            line: 357,
            column: 30
          },
          end: {
            line: 362,
            column: 1
          }
        },
        line: 357
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 40,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 40,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "1": {
        loc: {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "2": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "3": {
        loc: {
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 74,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 74,
            column: 43
          }
        }, {
          start: {
            line: 74,
            column: 47
          },
          end: {
            line: 74,
            column: 76
          }
        }],
        line: 74
      },
      "4": {
        loc: {
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "5": {
        loc: {
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 98,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 98,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "6": {
        loc: {
          start: {
            line: 93,
            column: 16
          },
          end: {
            line: 93,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 16
          },
          end: {
            line: 93,
            column: 21
          }
        }, {
          start: {
            line: 93,
            column: 25
          },
          end: {
            line: 93,
            column: 41
          }
        }],
        line: 93
      },
      "7": {
        loc: {
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "8": {
        loc: {
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "9": {
        loc: {
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 118,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 118,
            column: 13
          }
        }, {
          start: {
            line: 115,
            column: 19
          },
          end: {
            line: 118,
            column: 13
          }
        }],
        line: 113
      },
      "10": {
        loc: {
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 128,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 128,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "11": {
        loc: {
          start: {
            line: 132,
            column: 28
          },
          end: {
            line: 132,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 132,
            column: 28
          },
          end: {
            line: 132,
            column: 46
          }
        }, {
          start: {
            line: 132,
            column: 50
          },
          end: {
            line: 132,
            column: 51
          }
        }],
        line: 132
      },
      "12": {
        loc: {
          start: {
            line: 133,
            column: 8
          },
          end: {
            line: 140,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 8
          },
          end: {
            line: 140,
            column: 9
          }
        }, {
          start: {
            line: 137,
            column: 15
          },
          end: {
            line: 140,
            column: 9
          }
        }],
        line: 133
      },
      "13": {
        loc: {
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 143
      },
      "14": {
        loc: {
          start: {
            line: 154,
            column: 12
          },
          end: {
            line: 154,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 12
          },
          end: {
            line: 154,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 154
      },
      "15": {
        loc: {
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 157,
            column: 39
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 157,
            column: 39
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "16": {
        loc: {
          start: {
            line: 162,
            column: 16
          },
          end: {
            line: 166,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 16
          },
          end: {
            line: 166,
            column: 17
          }
        }, {
          start: {
            line: 164,
            column: 23
          },
          end: {
            line: 166,
            column: 17
          }
        }],
        line: 162
      },
      "17": {
        loc: {
          start: {
            line: 184,
            column: 35
          },
          end: {
            line: 184,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 184,
            column: 35
          },
          end: {
            line: 184,
            column: 43
          }
        }, {
          start: {
            line: 184,
            column: 47
          },
          end: {
            line: 184,
            column: 77
          }
        }],
        line: 184
      },
      "18": {
        loc: {
          start: {
            line: 187,
            column: 16
          },
          end: {
            line: 191,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 16
          },
          end: {
            line: 191,
            column: 17
          }
        }, {
          start: {
            line: 189,
            column: 23
          },
          end: {
            line: 191,
            column: 17
          }
        }],
        line: 187
      },
      "19": {
        loc: {
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 201,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 201,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 198
      },
      "20": {
        loc: {
          start: {
            line: 208,
            column: 16
          },
          end: {
            line: 210,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 208,
            column: 16
          },
          end: {
            line: 210,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 208
      },
      "21": {
        loc: {
          start: {
            line: 212,
            column: 12
          },
          end: {
            line: 214,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 12
          },
          end: {
            line: 214,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 212
      },
      "22": {
        loc: {
          start: {
            line: 222,
            column: 12
          },
          end: {
            line: 224,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 12
          },
          end: {
            line: 224,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 222
      },
      "23": {
        loc: {
          start: {
            line: 232,
            column: 12
          },
          end: {
            line: 234,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 12
          },
          end: {
            line: 234,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 232
      },
      "24": {
        loc: {
          start: {
            line: 232,
            column: 16
          },
          end: {
            line: 232,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 232,
            column: 16
          },
          end: {
            line: 232,
            column: 33
          }
        }, {
          start: {
            line: 232,
            column: 37
          },
          end: {
            line: 232,
            column: 60
          }
        }],
        line: 232
      },
      "25": {
        loc: {
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 248,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 248,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 238
      },
      "26": {
        loc: {
          start: {
            line: 242,
            column: 16
          },
          end: {
            line: 247,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 242,
            column: 16
          },
          end: {
            line: 247,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 242
      },
      "27": {
        loc: {
          start: {
            line: 244,
            column: 20
          },
          end: {
            line: 246,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 244,
            column: 20
          },
          end: {
            line: 246,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 244
      },
      "28": {
        loc: {
          start: {
            line: 257,
            column: 12
          },
          end: {
            line: 259,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 257,
            column: 12
          },
          end: {
            line: 259,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 257
      },
      "29": {
        loc: {
          start: {
            line: 268,
            column: 8
          },
          end: {
            line: 268,
            column: 48
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 268,
            column: 8
          },
          end: {
            line: 268,
            column: 48
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 268
      },
      "30": {
        loc: {
          start: {
            line: 273,
            column: 8
          },
          end: {
            line: 277,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 273,
            column: 8
          },
          end: {
            line: 277,
            column: 9
          }
        }, {
          start: {
            line: 275,
            column: 15
          },
          end: {
            line: 277,
            column: 9
          }
        }],
        line: 273
      },
      "31": {
        loc: {
          start: {
            line: 273,
            column: 12
          },
          end: {
            line: 273,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 273,
            column: 12
          },
          end: {
            line: 273,
            column: 51
          }
        }, {
          start: {
            line: 273,
            column: 55
          },
          end: {
            line: 273,
            column: 95
          }
        }],
        line: 273
      },
      "32": {
        loc: {
          start: {
            line: 275,
            column: 15
          },
          end: {
            line: 277,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 275,
            column: 15
          },
          end: {
            line: 277,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 275
      },
      "33": {
        loc: {
          start: {
            line: 285,
            column: 8
          },
          end: {
            line: 285,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 285,
            column: 8
          },
          end: {
            line: 285,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 285
      },
      "34": {
        loc: {
          start: {
            line: 311,
            column: 29
          },
          end: {
            line: 313,
            column: 18
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 311,
            column: 51
          },
          end: {
            line: 313,
            column: 13
          }
        }, {
          start: {
            line: 313,
            column: 16
          },
          end: {
            line: 313,
            column: 18
          }
        }],
        line: 311
      },
      "35": {
        loc: {
          start: {
            line: 323,
            column: 8
          },
          end: {
            line: 325,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 323,
            column: 8
          },
          end: {
            line: 325,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 323
      },
      "36": {
        loc: {
          start: {
            line: 326,
            column: 8
          },
          end: {
            line: 328,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 326,
            column: 8
          },
          end: {
            line: 328,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 326
      },
      "37": {
        loc: {
          start: {
            line: 329,
            column: 33
          },
          end: {
            line: 329,
            column: 122
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 329,
            column: 66
          },
          end: {
            line: 329,
            column: 118
          }
        }, {
          start: {
            line: 329,
            column: 121
          },
          end: {
            line: 329,
            column: 122
          }
        }],
        line: 329
      },
      "38": {
        loc: {
          start: {
            line: 331,
            column: 8
          },
          end: {
            line: 334,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 331,
            column: 8
          },
          end: {
            line: 334,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 331
      },
      "39": {
        loc: {
          start: {
            line: 346,
            column: 19
          },
          end: {
            line: 346,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 346,
            column: 44
          },
          end: {
            line: 346,
            column: 57
          }
        }, {
          start: {
            line: 346,
            column: 60
          },
          end: {
            line: 346,
            column: 75
          }
        }],
        line: 346
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matthewmoroney/builds/FreeAgentics/web/lib/message-queue.ts"],
      sourcesContent: ["/**\n * Message Queue Implementation\n *\n * High-performance message queue for real-time agent communication\n * with priority handling, batching, and optimization.\n */\n\nexport type MessagePriority = \"critical\" | \"high\" | \"normal\" | \"low\";\n\nexport interface Message {\n  id: string;\n  type: string;\n  priority: MessagePriority;\n  content: string;\n  timestamp: number;\n  agentId: string;\n  expiresAt?: number;\n  retryCount?: number;\n  metadata?: Record<string, any>;\n}\n\nexport interface QueueConfig {\n  maxSize: number;\n  batchSize: number;\n  processingInterval: number;\n  priorityLevels: string[];\n  enableBatching: boolean;\n  enableDeduplication: boolean;\n  retryAttempts: number;\n  retryDelay: number;\n}\n\nexport interface QueueMetrics {\n  totalMessages: number;\n  pendingMessages: number;\n  processedMessages: number;\n  errorCount: number;\n  averageProcessingTime: number;\n  throughput: number;\n  errorRate: number;\n  queueSize: number;\n  averageBatchSize: number;\n}\n\nexport interface MessageProcessor {\n  (\n    message: Message,\n  ): Promise<{ success: boolean; result?: any; error?: string }>;\n}\n\nexport interface BatchProcessor {\n  (\n    messages: Message[],\n  ): Promise<Array<{ success: boolean; result?: any; error?: string }>>;\n}\n\nexport interface MessageQueue {\n  getConfig(): QueueConfig;\n  getMetrics(): QueueMetrics;\n  enqueue(message: Message): Promise<void>;\n  dequeue(): Promise<Message | null>;\n  processNext(): Promise<void>;\n  processBatch(): Promise<void>;\n  setProcessor(processor: MessageProcessor): void;\n  setBatchProcessor(processor: BatchProcessor): void;\n  startAutoProcessing(interval?: number): void;\n  stopAutoProcessing(): void;\n  findMessages(filter: Partial<Message>): Message[];\n  searchMessages(query: string): Message[];\n  removeExpiredMessages(): Promise<void>;\n  compact(): Promise<void>;\n  optimizeBatchSize(): Promise<void>;\n  getDeadLetterQueue(): Message[];\n  performHealthCheck(): Promise<boolean>;\n  recover(): Promise<void>;\n  simulateCorruption(): void;\n  getPerformanceReport(): any;\n}\n\nclass MessageQueueImpl implements MessageQueue {\n  private config: QueueConfig;\n  private messages: Map<string, Message> = new Map();\n  private priorityQueues: Map<MessagePriority, Message[]> = new Map();\n  private deadLetterQueue: Message[] = [];\n  private processor?: MessageProcessor;\n  private batchProcessor?: BatchProcessor;\n  private autoProcessingInterval?: NodeJS.Timeout;\n  private metrics: QueueMetrics;\n  private processingTimes: number[] = [];\n  private batchSizes: number[] = [];\n  private isCorrupted = false;\n\n  constructor(config: QueueConfig) {\n    if (config.maxSize <= 0) {\n      throw new Error(\"Invalid configuration: maxSize must be positive\");\n    }\n\n    this.config = config;\n\n    // Initialize priority queues\n    (config.priorityLevels as MessagePriority[]).forEach((priority) => {\n      this.priorityQueues.set(priority, []);\n    });\n\n    this.metrics = {\n      totalMessages: 0,\n      pendingMessages: 0,\n      processedMessages: 0,\n      errorCount: 0,\n      averageProcessingTime: 0,\n      throughput: 0,\n      errorRate: 0,\n      queueSize: 0,\n      averageBatchSize: 0,\n    };\n  }\n\n  getConfig(): QueueConfig {\n    return { ...this.config };\n  }\n\n  getMetrics(): QueueMetrics {\n    this.updateMetrics();\n    return { ...this.metrics };\n  }\n\n  async enqueue(message: Message): Promise<void> {\n    if (this.messages.size >= this.config.maxSize) {\n      throw new Error(\"Queue full\");\n    }\n\n    // Deduplication\n    if (this.config.enableDeduplication && this.messages.has(message.id)) {\n      return; // Skip duplicate\n    }\n\n    // Add to messages map\n    this.messages.set(message.id, message);\n\n    // Add to priority queue\n    const priorityQueue = this.priorityQueues.get(message.priority);\n    if (priorityQueue) {\n      priorityQueue.push(message);\n      // Sort by timestamp for FIFO within priority\n      priorityQueue.sort((a, b) => a.timestamp - b.timestamp);\n    }\n\n    this.metrics.totalMessages++;\n    this.updateMetrics();\n  }\n\n  async dequeue(): Promise<Message | null> {\n    // Check priority queues in order\n    for (const priority of this.config.priorityLevels as MessagePriority[]) {\n      const queue = this.priorityQueues.get(priority);\n      if (queue && queue.length > 0) {\n        const message = queue.shift()!;\n        this.messages.delete(message.id);\n        this.updateMetrics();\n        return message;\n      }\n    }\n    return null;\n  }\n\n  async processNext(): Promise<void> {\n    if (!this.processor) {\n      throw new Error(\"No processor configured\");\n    }\n\n    const message = await this.dequeue();\n    if (!message) {\n      return;\n    }\n\n    const startTime = Date.now();\n\n    try {\n      const result = await this.processor(message);\n\n      if (result.success) {\n        this.metrics.processedMessages++;\n      } else {\n        this.metrics.errorCount++; // Count errors immediately\n        await this.handleProcessingFailure(message);\n      }\n    } catch (error) {\n      this.metrics.errorCount++; // Count errors immediately  \n      await this.handleProcessingFailure(message);\n    }\n\n    const processingTime = Date.now() - startTime;\n    this.processingTimes.push(processingTime);\n\n    // Keep only recent processing times\n    if (this.processingTimes.length > 100) {\n      this.processingTimes = this.processingTimes.slice(-50);\n    }\n\n    this.updateMetrics();\n  }\n\n  private async handleProcessingFailure(message: Message): Promise<void> {\n    const retryCount = (message.retryCount || 0) + 1;\n\n    if (retryCount <= this.config.retryAttempts) {\n      // Retry the message\n      message.retryCount = retryCount;\n      await this.enqueue(message);\n    } else {\n      // Move to dead letter queue (error already counted in processNext)\n      this.deadLetterQueue.push(message);\n    }\n  }\n\n  async processBatch(): Promise<void> {\n    if (!this.batchProcessor) {\n      // Fall back to individual processing\n      for (let i = 0; i < this.config.batchSize; i++) {\n        await this.processNext();\n      }\n      return;\n    }\n\n    const batch: Message[] = [];\n\n    // Collect batch\n    for (let i = 0; i < this.config.batchSize; i++) {\n      const message = await this.dequeue();\n      if (!message) break;\n      batch.push(message);\n    }\n\n    if (batch.length === 0) return;\n\n    const startTime = Date.now();\n\n    try {\n      const results = await this.batchProcessor(batch);\n\n      results.forEach((result, index) => {\n        if (result.success) {\n          this.metrics.processedMessages++;\n        } else {\n          this.handleProcessingFailure(batch[index]);\n        }\n      });\n    } catch (error) {\n      // Handle batch failure\n      batch.forEach((message) => this.handleProcessingFailure(message));\n    }\n\n    const batchTime = Date.now() - startTime;\n    this.batchSizes.push(batch.length);\n    this.processingTimes.push(batchTime / batch.length); // Average per message\n\n    this.updateMetrics();\n  }\n\n  setProcessor(processor: MessageProcessor): void {\n    this.processor = processor;\n  }\n\n  setBatchProcessor(processor: BatchProcessor): void {\n    this.batchProcessor = processor;\n  }\n\n  startAutoProcessing(interval?: number): void {\n    const processingInterval = interval || this.config.processingInterval;\n\n    this.autoProcessingInterval = setInterval(async () => {\n      try {\n        if (this.config.enableBatching) {\n          await this.processBatch();\n        } else {\n          await this.processNext();\n        }\n      } catch (error) {\n        console.error(\"Auto processing error:\", error);\n      }\n    }, processingInterval);\n  }\n\n  stopAutoProcessing(): void {\n    if (this.autoProcessingInterval) {\n      clearInterval(this.autoProcessingInterval);\n      this.autoProcessingInterval = undefined;\n    }\n  }\n\n  findMessages(filter: Partial<Message>): Message[] {\n    const results: Message[] = [];\n\n    this.messages.forEach((message) => {\n      let matches = true;\n\n      Object.entries(filter).forEach(([key, value]) => {\n        if (message[key as keyof Message] !== value) {\n          matches = false;\n        }\n      });\n\n      if (matches) {\n        results.push(message);\n      }\n    });\n\n    return results;\n  }\n\n  searchMessages(query: string): Message[] {\n    const results: Message[] = [];\n    const lowerQuery = query.toLowerCase();\n\n    this.messages.forEach((message) => {\n      if (message.content.toLowerCase().includes(lowerQuery)) {\n        results.push(message);\n      }\n    });\n\n    return results;\n  }\n\n  async removeExpiredMessages(): Promise<void> {\n    const now = Date.now();\n    const expiredIds: string[] = [];\n\n    this.messages.forEach((message, id) => {\n      if (message.expiresAt && message.expiresAt < now) {\n        expiredIds.push(id);\n      }\n    });\n\n    expiredIds.forEach((id) => {\n      const message = this.messages.get(id);\n      if (message) {\n        this.messages.delete(id);\n\n        // Remove from priority queue\n        const priorityQueue = this.priorityQueues.get(message.priority);\n        if (priorityQueue) {\n          const index = priorityQueue.findIndex((m) => m.id === id);\n          if (index >= 0) {\n            priorityQueue.splice(index, 1);\n          }\n        }\n      }\n    });\n\n    this.updateMetrics();\n  }\n\n  async compact(): Promise<void> {\n    // Rebuild priority queues from messages map\n    this.priorityQueues.forEach((queue) => (queue.length = 0));\n\n    this.messages.forEach((message) => {\n      const priorityQueue = this.priorityQueues.get(message.priority);\n      if (priorityQueue) {\n        priorityQueue.push(message);\n      }\n    });\n\n    // Sort each priority queue\n    this.priorityQueues.forEach((queue) => {\n      queue.sort((a, b) => a.timestamp - b.timestamp);\n    });\n\n    this.updateMetrics();\n  }\n\n  async optimizeBatchSize(): Promise<void> {\n    if (this.batchSizes.length < 10) return;\n\n    // Calculate optimal batch size based on performance\n    const recentBatches = this.batchSizes.slice(-20);\n    const averageBatchSize =\n      recentBatches.reduce((a, b) => a + b, 0) / recentBatches.length;\n\n    // Adjust config based on performance metrics\n    if (\n      this.metrics.averageProcessingTime < 50 &&\n      averageBatchSize < this.config.batchSize\n    ) {\n      this.config.batchSize = Math.min(this.config.batchSize + 5, 50);\n    } else if (this.metrics.averageProcessingTime > 200) {\n      this.config.batchSize = Math.max(this.config.batchSize - 5, 1);\n    }\n  }\n\n  getDeadLetterQueue(): Message[] {\n    return [...this.deadLetterQueue];\n  }\n\n  async performHealthCheck(): Promise<boolean> {\n    if (this.isCorrupted) return false;\n\n    // Check queue consistency\n    let totalInQueues = 0;\n    this.priorityQueues.forEach((queue) => {\n      totalInQueues += queue.length;\n    });\n\n    return totalInQueues === this.messages.size;\n  }\n\n  async recover(): Promise<void> {\n    this.isCorrupted = false;\n\n    // Rebuild priority queues\n    await this.compact();\n\n    // Reset metrics\n    this.metrics.errorCount = 0;\n  }\n\n  simulateCorruption(): void {\n    this.isCorrupted = true;\n  }\n\n  getPerformanceReport(): any {\n    const recentProcessingTimes = this.processingTimes.slice(-20);\n    const avgTime =\n      recentProcessingTimes.reduce((a, b) => a + b, 0) /\n      recentProcessingTimes.length;\n\n    // Detect degradation - lowered threshold to be more sensitive to performance issues\n    const degradationDetected = avgTime > 30; // More realistic threshold for degradation\n\n    return {\n      degradationDetected,\n      averageProcessingTime: avgTime,\n      recommendations: degradationDetected\n        ? [\"Consider scaling processing capacity\"]\n        : [],\n    };\n  }\n\n  private updateMetrics(): void {\n    let totalInQueues = 0;\n    this.priorityQueues.forEach((queue) => {\n      totalInQueues += queue.length;\n    });\n\n    this.metrics.pendingMessages = totalInQueues;\n    this.metrics.queueSize = this.messages.size;\n\n    if (this.processingTimes.length > 0) {\n      this.metrics.averageProcessingTime =\n        this.processingTimes.reduce((a, b) => a + b, 0) /\n        this.processingTimes.length;\n    }\n\n    if (this.batchSizes.length > 0) {\n      this.metrics.averageBatchSize =\n        this.batchSizes.reduce((a, b) => a + b, 0) / this.batchSizes.length;\n    }\n\n    this.metrics.errorRate =\n      this.metrics.totalMessages > 0\n        ? this.metrics.errorCount / this.metrics.totalMessages\n        : 0;\n\n    // Calculate throughput (messages per second)\n    if (this.processingTimes.length > 1) {\n      const totalTime = this.processingTimes.reduce((a, b) => a + b, 0);\n      this.metrics.throughput =\n        (this.metrics.processedMessages * 1000) / totalTime;\n    }\n  }\n}\n\nexport function createMessageQueue(config: QueueConfig): MessageQueue {\n  return new MessageQueueImpl(config);\n}\n\nexport async function processMessage(\n  message: Message,\n  processor: MessageProcessor,\n): Promise<{ success: boolean; result?: any; error?: string }> {\n  try {\n    return await processor(message);\n  } catch (error) {\n    return {\n      success: false,\n      error: error instanceof Error ? error.message : \"Unknown error\",\n    };\n  }\n}\n\nexport async function batchProcessMessages(\n  messages: Message[],\n  processor: MessageProcessor,\n): Promise<Array<{ success: boolean; result?: any; error?: string }>> {\n  const results = [];\n\n  for (const message of messages) {\n    results.push(await processMessage(message, processor));\n  }\n\n  return results;\n}\n\nexport function optimizeQueue(queue: MessageQueue): void {\n  // Perform various optimizations\n  queue.removeExpiredMessages();\n  queue.compact();\n  queue.optimizeBatchSize();\n}\n"],
      names: ["batchProcessMessages", "createMessageQueue", "optimizeQueue", "processMessage", "MessageQueueImpl", "constructor", "config", "messages", "Map", "priorityQueues", "deadLetterQueue", "processingTimes", "batchSizes", "isCorrupted", "maxSize", "Error", "priorityLevels", "forEach", "priority", "set", "metrics", "totalMessages", "pendingMessages", "processedMessages", "errorCount", "averageProcessingTime", "throughput", "errorRate", "queueSize", "averageBatchSize", "getConfig", "getMetrics", "updateMetrics", "enqueue", "message", "size", "enableDeduplication", "has", "id", "priorityQueue", "get", "push", "sort", "a", "b", "timestamp", "dequeue", "queue", "length", "shift", "delete", "processNext", "processor", "startTime", "Date", "now", "result", "success", "handleProcessingFailure", "error", "processingTime", "slice", "retryCount", "retryAttempts", "processBatch", "batchProcessor", "i", "batchSize", "batch", "results", "index", "batchTime", "setProcessor", "setBatchProcessor", "startAutoProcessing", "interval", "processingInterval", "autoProcessingInterval", "setInterval", "enableBatching", "console", "stopAutoProcessing", "clearInterval", "undefined", "findMessages", "filter", "matches", "Object", "entries", "key", "value", "searchMessages", "query", "lowerQuery", "toLowerCase", "content", "includes", "removeExpiredMessages", "expiredIds", "expiresAt", "findIndex", "m", "splice", "compact", "optimizeBatchSize", "recentBatches", "reduce", "Math", "min", "max", "getDeadLetterQueue", "performHealthCheck", "totalInQueues", "recover", "simulateCorruption", "getPerformanceReport", "recentProcessingTimes", "avgTime", "degradationDetected", "recommendations", "totalTime"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "de6517631fccf79cd8dd38277be118dda01b8876"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2kzzrnr6eg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2kzzrnr6eg();
cov_2kzzrnr6eg().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2kzzrnr6eg().f[0]++;
  cov_2kzzrnr6eg().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_2kzzrnr6eg().s[3]++;
_export(exports, {
  batchProcessMessages: function () {
    /* istanbul ignore next */
    cov_2kzzrnr6eg().f[1]++;
    cov_2kzzrnr6eg().s[4]++;
    return batchProcessMessages;
  },
  createMessageQueue: function () {
    /* istanbul ignore next */
    cov_2kzzrnr6eg().f[2]++;
    cov_2kzzrnr6eg().s[5]++;
    return createMessageQueue;
  },
  optimizeQueue: function () {
    /* istanbul ignore next */
    cov_2kzzrnr6eg().f[3]++;
    cov_2kzzrnr6eg().s[6]++;
    return optimizeQueue;
  },
  processMessage: function () {
    /* istanbul ignore next */
    cov_2kzzrnr6eg().f[4]++;
    cov_2kzzrnr6eg().s[7]++;
    return processMessage;
  }
});
class MessageQueueImpl {
  constructor(config) {
    /* istanbul ignore next */
    cov_2kzzrnr6eg().f[5]++;
    cov_2kzzrnr6eg().s[8]++;
    this.messages = new Map();
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[9]++;
    this.priorityQueues = new Map();
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[10]++;
    this.deadLetterQueue = [];
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[11]++;
    this.processingTimes = [];
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[12]++;
    this.batchSizes = [];
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[13]++;
    this.isCorrupted = false;
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[14]++;
    if (config.maxSize <= 0) {
      /* istanbul ignore next */
      cov_2kzzrnr6eg().b[0][0]++;
      cov_2kzzrnr6eg().s[15]++;
      throw new Error("Invalid configuration: maxSize must be positive");
    } else
    /* istanbul ignore next */
    {
      cov_2kzzrnr6eg().b[0][1]++;
    }
    cov_2kzzrnr6eg().s[16]++;
    this.config = config;
    // Initialize priority queues
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[17]++;
    config.priorityLevels.forEach(priority => {
      /* istanbul ignore next */
      cov_2kzzrnr6eg().f[6]++;
      cov_2kzzrnr6eg().s[18]++;
      this.priorityQueues.set(priority, []);
    });
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[19]++;
    this.metrics = {
      totalMessages: 0,
      pendingMessages: 0,
      processedMessages: 0,
      errorCount: 0,
      averageProcessingTime: 0,
      throughput: 0,
      errorRate: 0,
      queueSize: 0,
      averageBatchSize: 0
    };
  }
  getConfig() {
    /* istanbul ignore next */
    cov_2kzzrnr6eg().f[7]++;
    cov_2kzzrnr6eg().s[20]++;
    return {
      ...this.config
    };
  }
  getMetrics() {
    /* istanbul ignore next */
    cov_2kzzrnr6eg().f[8]++;
    cov_2kzzrnr6eg().s[21]++;
    this.updateMetrics();
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[22]++;
    return {
      ...this.metrics
    };
  }
  async enqueue(message) {
    /* istanbul ignore next */
    cov_2kzzrnr6eg().f[9]++;
    cov_2kzzrnr6eg().s[23]++;
    if (this.messages.size >= this.config.maxSize) {
      /* istanbul ignore next */
      cov_2kzzrnr6eg().b[1][0]++;
      cov_2kzzrnr6eg().s[24]++;
      throw new Error("Queue full");
    } else
    /* istanbul ignore next */
    {
      cov_2kzzrnr6eg().b[1][1]++;
    }
    // Deduplication
    cov_2kzzrnr6eg().s[25]++;
    if (
    /* istanbul ignore next */
    (cov_2kzzrnr6eg().b[3][0]++, this.config.enableDeduplication) &&
    /* istanbul ignore next */
    (cov_2kzzrnr6eg().b[3][1]++, this.messages.has(message.id))) {
      /* istanbul ignore next */
      cov_2kzzrnr6eg().b[2][0]++;
      cov_2kzzrnr6eg().s[26]++;
      return; // Skip duplicate
    } else
    /* istanbul ignore next */
    {
      cov_2kzzrnr6eg().b[2][1]++;
    }
    // Add to messages map
    cov_2kzzrnr6eg().s[27]++;
    this.messages.set(message.id, message);
    // Add to priority queue
    const priorityQueue =
    /* istanbul ignore next */
    (cov_2kzzrnr6eg().s[28]++, this.priorityQueues.get(message.priority));
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[29]++;
    if (priorityQueue) {
      /* istanbul ignore next */
      cov_2kzzrnr6eg().b[4][0]++;
      cov_2kzzrnr6eg().s[30]++;
      priorityQueue.push(message);
      // Sort by timestamp for FIFO within priority
      /* istanbul ignore next */
      cov_2kzzrnr6eg().s[31]++;
      priorityQueue.sort((a, b) => {
        /* istanbul ignore next */
        cov_2kzzrnr6eg().f[10]++;
        cov_2kzzrnr6eg().s[32]++;
        return a.timestamp - b.timestamp;
      });
    } else
    /* istanbul ignore next */
    {
      cov_2kzzrnr6eg().b[4][1]++;
    }
    cov_2kzzrnr6eg().s[33]++;
    this.metrics.totalMessages++;
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[34]++;
    this.updateMetrics();
  }
  async dequeue() {
    /* istanbul ignore next */
    cov_2kzzrnr6eg().f[11]++;
    cov_2kzzrnr6eg().s[35]++;
    // Check priority queues in order
    for (const priority of this.config.priorityLevels) {
      const queue =
      /* istanbul ignore next */
      (cov_2kzzrnr6eg().s[36]++, this.priorityQueues.get(priority));
      /* istanbul ignore next */
      cov_2kzzrnr6eg().s[37]++;
      if (
      /* istanbul ignore next */
      (cov_2kzzrnr6eg().b[6][0]++, queue) &&
      /* istanbul ignore next */
      (cov_2kzzrnr6eg().b[6][1]++, queue.length > 0)) {
        /* istanbul ignore next */
        cov_2kzzrnr6eg().b[5][0]++;
        const message =
        /* istanbul ignore next */
        (cov_2kzzrnr6eg().s[38]++, queue.shift());
        /* istanbul ignore next */
        cov_2kzzrnr6eg().s[39]++;
        this.messages.delete(message.id);
        /* istanbul ignore next */
        cov_2kzzrnr6eg().s[40]++;
        this.updateMetrics();
        /* istanbul ignore next */
        cov_2kzzrnr6eg().s[41]++;
        return message;
      } else
      /* istanbul ignore next */
      {
        cov_2kzzrnr6eg().b[5][1]++;
      }
    }
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[42]++;
    return null;
  }
  async processNext() {
    /* istanbul ignore next */
    cov_2kzzrnr6eg().f[12]++;
    cov_2kzzrnr6eg().s[43]++;
    if (!this.processor) {
      /* istanbul ignore next */
      cov_2kzzrnr6eg().b[7][0]++;
      cov_2kzzrnr6eg().s[44]++;
      throw new Error("No processor configured");
    } else
    /* istanbul ignore next */
    {
      cov_2kzzrnr6eg().b[7][1]++;
    }
    const message =
    /* istanbul ignore next */
    (cov_2kzzrnr6eg().s[45]++, await this.dequeue());
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[46]++;
    if (!message) {
      /* istanbul ignore next */
      cov_2kzzrnr6eg().b[8][0]++;
      cov_2kzzrnr6eg().s[47]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2kzzrnr6eg().b[8][1]++;
    }
    const startTime =
    /* istanbul ignore next */
    (cov_2kzzrnr6eg().s[48]++, Date.now());
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[49]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_2kzzrnr6eg().s[50]++, await this.processor(message));
      /* istanbul ignore next */
      cov_2kzzrnr6eg().s[51]++;
      if (result.success) {
        /* istanbul ignore next */
        cov_2kzzrnr6eg().b[9][0]++;
        cov_2kzzrnr6eg().s[52]++;
        this.metrics.processedMessages++;
      } else {
        /* istanbul ignore next */
        cov_2kzzrnr6eg().b[9][1]++;
        cov_2kzzrnr6eg().s[53]++;
        this.metrics.errorCount++; // Count errors immediately
        /* istanbul ignore next */
        cov_2kzzrnr6eg().s[54]++;
        await this.handleProcessingFailure(message);
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_2kzzrnr6eg().s[55]++;
      this.metrics.errorCount++; // Count errors immediately  
      /* istanbul ignore next */
      cov_2kzzrnr6eg().s[56]++;
      await this.handleProcessingFailure(message);
    }
    const processingTime =
    /* istanbul ignore next */
    (cov_2kzzrnr6eg().s[57]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[58]++;
    this.processingTimes.push(processingTime);
    // Keep only recent processing times
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[59]++;
    if (this.processingTimes.length > 100) {
      /* istanbul ignore next */
      cov_2kzzrnr6eg().b[10][0]++;
      cov_2kzzrnr6eg().s[60]++;
      this.processingTimes = this.processingTimes.slice(-50);
    } else
    /* istanbul ignore next */
    {
      cov_2kzzrnr6eg().b[10][1]++;
    }
    cov_2kzzrnr6eg().s[61]++;
    this.updateMetrics();
  }
  async handleProcessingFailure(message) {
    /* istanbul ignore next */
    cov_2kzzrnr6eg().f[13]++;
    const retryCount =
    /* istanbul ignore next */
    (cov_2kzzrnr6eg().s[62]++, (
    /* istanbul ignore next */
    (cov_2kzzrnr6eg().b[11][0]++, message.retryCount) ||
    /* istanbul ignore next */
    (cov_2kzzrnr6eg().b[11][1]++, 0)) + 1);
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[63]++;
    if (retryCount <= this.config.retryAttempts) {
      /* istanbul ignore next */
      cov_2kzzrnr6eg().b[12][0]++;
      cov_2kzzrnr6eg().s[64]++;
      // Retry the message
      message.retryCount = retryCount;
      /* istanbul ignore next */
      cov_2kzzrnr6eg().s[65]++;
      await this.enqueue(message);
    } else {
      /* istanbul ignore next */
      cov_2kzzrnr6eg().b[12][1]++;
      cov_2kzzrnr6eg().s[66]++;
      // Move to dead letter queue (error already counted in processNext)
      this.deadLetterQueue.push(message);
    }
  }
  async processBatch() {
    /* istanbul ignore next */
    cov_2kzzrnr6eg().f[14]++;
    cov_2kzzrnr6eg().s[67]++;
    if (!this.batchProcessor) {
      /* istanbul ignore next */
      cov_2kzzrnr6eg().b[13][0]++;
      cov_2kzzrnr6eg().s[68]++;
      // Fall back to individual processing
      for (let i =
      /* istanbul ignore next */
      (cov_2kzzrnr6eg().s[69]++, 0); i < this.config.batchSize; i++) {
        /* istanbul ignore next */
        cov_2kzzrnr6eg().s[70]++;
        await this.processNext();
      }
      /* istanbul ignore next */
      cov_2kzzrnr6eg().s[71]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2kzzrnr6eg().b[13][1]++;
    }
    const batch =
    /* istanbul ignore next */
    (cov_2kzzrnr6eg().s[72]++, []);
    // Collect batch
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[73]++;
    for (let i =
    /* istanbul ignore next */
    (cov_2kzzrnr6eg().s[74]++, 0); i < this.config.batchSize; i++) {
      const message =
      /* istanbul ignore next */
      (cov_2kzzrnr6eg().s[75]++, await this.dequeue());
      /* istanbul ignore next */
      cov_2kzzrnr6eg().s[76]++;
      if (!message) {
        /* istanbul ignore next */
        cov_2kzzrnr6eg().b[14][0]++;
        cov_2kzzrnr6eg().s[77]++;
        break;
      } else
      /* istanbul ignore next */
      {
        cov_2kzzrnr6eg().b[14][1]++;
      }
      cov_2kzzrnr6eg().s[78]++;
      batch.push(message);
    }
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[79]++;
    if (batch.length === 0) {
      /* istanbul ignore next */
      cov_2kzzrnr6eg().b[15][0]++;
      cov_2kzzrnr6eg().s[80]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2kzzrnr6eg().b[15][1]++;
    }
    const startTime =
    /* istanbul ignore next */
    (cov_2kzzrnr6eg().s[81]++, Date.now());
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[82]++;
    try {
      const results =
      /* istanbul ignore next */
      (cov_2kzzrnr6eg().s[83]++, await this.batchProcessor(batch));
      /* istanbul ignore next */
      cov_2kzzrnr6eg().s[84]++;
      results.forEach((result, index) => {
        /* istanbul ignore next */
        cov_2kzzrnr6eg().f[15]++;
        cov_2kzzrnr6eg().s[85]++;
        if (result.success) {
          /* istanbul ignore next */
          cov_2kzzrnr6eg().b[16][0]++;
          cov_2kzzrnr6eg().s[86]++;
          this.metrics.processedMessages++;
        } else {
          /* istanbul ignore next */
          cov_2kzzrnr6eg().b[16][1]++;
          cov_2kzzrnr6eg().s[87]++;
          this.handleProcessingFailure(batch[index]);
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2kzzrnr6eg().s[88]++;
      // Handle batch failure
      batch.forEach(message => {
        /* istanbul ignore next */
        cov_2kzzrnr6eg().f[16]++;
        cov_2kzzrnr6eg().s[89]++;
        return this.handleProcessingFailure(message);
      });
    }
    const batchTime =
    /* istanbul ignore next */
    (cov_2kzzrnr6eg().s[90]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[91]++;
    this.batchSizes.push(batch.length);
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[92]++;
    this.processingTimes.push(batchTime / batch.length); // Average per message
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[93]++;
    this.updateMetrics();
  }
  setProcessor(processor) {
    /* istanbul ignore next */
    cov_2kzzrnr6eg().f[17]++;
    cov_2kzzrnr6eg().s[94]++;
    this.processor = processor;
  }
  setBatchProcessor(processor) {
    /* istanbul ignore next */
    cov_2kzzrnr6eg().f[18]++;
    cov_2kzzrnr6eg().s[95]++;
    this.batchProcessor = processor;
  }
  startAutoProcessing(interval) {
    /* istanbul ignore next */
    cov_2kzzrnr6eg().f[19]++;
    const processingInterval =
    /* istanbul ignore next */
    (cov_2kzzrnr6eg().s[96]++,
    /* istanbul ignore next */
    (cov_2kzzrnr6eg().b[17][0]++, interval) ||
    /* istanbul ignore next */
    (cov_2kzzrnr6eg().b[17][1]++, this.config.processingInterval));
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[97]++;
    this.autoProcessingInterval = setInterval(async () => {
      /* istanbul ignore next */
      cov_2kzzrnr6eg().f[20]++;
      cov_2kzzrnr6eg().s[98]++;
      try {
        /* istanbul ignore next */
        cov_2kzzrnr6eg().s[99]++;
        if (this.config.enableBatching) {
          /* istanbul ignore next */
          cov_2kzzrnr6eg().b[18][0]++;
          cov_2kzzrnr6eg().s[100]++;
          await this.processBatch();
        } else {
          /* istanbul ignore next */
          cov_2kzzrnr6eg().b[18][1]++;
          cov_2kzzrnr6eg().s[101]++;
          await this.processNext();
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_2kzzrnr6eg().s[102]++;
        console.error("Auto processing error:", error);
      }
    }, processingInterval);
  }
  stopAutoProcessing() {
    /* istanbul ignore next */
    cov_2kzzrnr6eg().f[21]++;
    cov_2kzzrnr6eg().s[103]++;
    if (this.autoProcessingInterval) {
      /* istanbul ignore next */
      cov_2kzzrnr6eg().b[19][0]++;
      cov_2kzzrnr6eg().s[104]++;
      clearInterval(this.autoProcessingInterval);
      /* istanbul ignore next */
      cov_2kzzrnr6eg().s[105]++;
      this.autoProcessingInterval = undefined;
    } else
    /* istanbul ignore next */
    {
      cov_2kzzrnr6eg().b[19][1]++;
    }
  }
  findMessages(filter) {
    /* istanbul ignore next */
    cov_2kzzrnr6eg().f[22]++;
    const results =
    /* istanbul ignore next */
    (cov_2kzzrnr6eg().s[106]++, []);
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[107]++;
    this.messages.forEach(message => {
      /* istanbul ignore next */
      cov_2kzzrnr6eg().f[23]++;
      let matches =
      /* istanbul ignore next */
      (cov_2kzzrnr6eg().s[108]++, true);
      /* istanbul ignore next */
      cov_2kzzrnr6eg().s[109]++;
      Object.entries(filter).forEach(([key, value]) => {
        /* istanbul ignore next */
        cov_2kzzrnr6eg().f[24]++;
        cov_2kzzrnr6eg().s[110]++;
        if (message[key] !== value) {
          /* istanbul ignore next */
          cov_2kzzrnr6eg().b[20][0]++;
          cov_2kzzrnr6eg().s[111]++;
          matches = false;
        } else
        /* istanbul ignore next */
        {
          cov_2kzzrnr6eg().b[20][1]++;
        }
      });
      /* istanbul ignore next */
      cov_2kzzrnr6eg().s[112]++;
      if (matches) {
        /* istanbul ignore next */
        cov_2kzzrnr6eg().b[21][0]++;
        cov_2kzzrnr6eg().s[113]++;
        results.push(message);
      } else
      /* istanbul ignore next */
      {
        cov_2kzzrnr6eg().b[21][1]++;
      }
    });
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[114]++;
    return results;
  }
  searchMessages(query) {
    /* istanbul ignore next */
    cov_2kzzrnr6eg().f[25]++;
    const results =
    /* istanbul ignore next */
    (cov_2kzzrnr6eg().s[115]++, []);
    const lowerQuery =
    /* istanbul ignore next */
    (cov_2kzzrnr6eg().s[116]++, query.toLowerCase());
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[117]++;
    this.messages.forEach(message => {
      /* istanbul ignore next */
      cov_2kzzrnr6eg().f[26]++;
      cov_2kzzrnr6eg().s[118]++;
      if (message.content.toLowerCase().includes(lowerQuery)) {
        /* istanbul ignore next */
        cov_2kzzrnr6eg().b[22][0]++;
        cov_2kzzrnr6eg().s[119]++;
        results.push(message);
      } else
      /* istanbul ignore next */
      {
        cov_2kzzrnr6eg().b[22][1]++;
      }
    });
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[120]++;
    return results;
  }
  async removeExpiredMessages() {
    /* istanbul ignore next */
    cov_2kzzrnr6eg().f[27]++;
    const now =
    /* istanbul ignore next */
    (cov_2kzzrnr6eg().s[121]++, Date.now());
    const expiredIds =
    /* istanbul ignore next */
    (cov_2kzzrnr6eg().s[122]++, []);
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[123]++;
    this.messages.forEach((message, id) => {
      /* istanbul ignore next */
      cov_2kzzrnr6eg().f[28]++;
      cov_2kzzrnr6eg().s[124]++;
      if (
      /* istanbul ignore next */
      (cov_2kzzrnr6eg().b[24][0]++, message.expiresAt) &&
      /* istanbul ignore next */
      (cov_2kzzrnr6eg().b[24][1]++, message.expiresAt < now)) {
        /* istanbul ignore next */
        cov_2kzzrnr6eg().b[23][0]++;
        cov_2kzzrnr6eg().s[125]++;
        expiredIds.push(id);
      } else
      /* istanbul ignore next */
      {
        cov_2kzzrnr6eg().b[23][1]++;
      }
    });
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[126]++;
    expiredIds.forEach(id => {
      /* istanbul ignore next */
      cov_2kzzrnr6eg().f[29]++;
      const message =
      /* istanbul ignore next */
      (cov_2kzzrnr6eg().s[127]++, this.messages.get(id));
      /* istanbul ignore next */
      cov_2kzzrnr6eg().s[128]++;
      if (message) {
        /* istanbul ignore next */
        cov_2kzzrnr6eg().b[25][0]++;
        cov_2kzzrnr6eg().s[129]++;
        this.messages.delete(id);
        // Remove from priority queue
        const priorityQueue =
        /* istanbul ignore next */
        (cov_2kzzrnr6eg().s[130]++, this.priorityQueues.get(message.priority));
        /* istanbul ignore next */
        cov_2kzzrnr6eg().s[131]++;
        if (priorityQueue) {
          /* istanbul ignore next */
          cov_2kzzrnr6eg().b[26][0]++;
          const index =
          /* istanbul ignore next */
          (cov_2kzzrnr6eg().s[132]++, priorityQueue.findIndex(m => {
            /* istanbul ignore next */
            cov_2kzzrnr6eg().f[30]++;
            cov_2kzzrnr6eg().s[133]++;
            return m.id === id;
          }));
          /* istanbul ignore next */
          cov_2kzzrnr6eg().s[134]++;
          if (index >= 0) {
            /* istanbul ignore next */
            cov_2kzzrnr6eg().b[27][0]++;
            cov_2kzzrnr6eg().s[135]++;
            priorityQueue.splice(index, 1);
          } else
          /* istanbul ignore next */
          {
            cov_2kzzrnr6eg().b[27][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_2kzzrnr6eg().b[26][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_2kzzrnr6eg().b[25][1]++;
      }
    });
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[136]++;
    this.updateMetrics();
  }
  async compact() {
    /* istanbul ignore next */
    cov_2kzzrnr6eg().f[31]++;
    cov_2kzzrnr6eg().s[137]++;
    // Rebuild priority queues from messages map
    this.priorityQueues.forEach(queue => {
      /* istanbul ignore next */
      cov_2kzzrnr6eg().f[32]++;
      cov_2kzzrnr6eg().s[138]++;
      return queue.length = 0;
    });
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[139]++;
    this.messages.forEach(message => {
      /* istanbul ignore next */
      cov_2kzzrnr6eg().f[33]++;
      const priorityQueue =
      /* istanbul ignore next */
      (cov_2kzzrnr6eg().s[140]++, this.priorityQueues.get(message.priority));
      /* istanbul ignore next */
      cov_2kzzrnr6eg().s[141]++;
      if (priorityQueue) {
        /* istanbul ignore next */
        cov_2kzzrnr6eg().b[28][0]++;
        cov_2kzzrnr6eg().s[142]++;
        priorityQueue.push(message);
      } else
      /* istanbul ignore next */
      {
        cov_2kzzrnr6eg().b[28][1]++;
      }
    });
    // Sort each priority queue
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[143]++;
    this.priorityQueues.forEach(queue => {
      /* istanbul ignore next */
      cov_2kzzrnr6eg().f[34]++;
      cov_2kzzrnr6eg().s[144]++;
      queue.sort((a, b) => {
        /* istanbul ignore next */
        cov_2kzzrnr6eg().f[35]++;
        cov_2kzzrnr6eg().s[145]++;
        return a.timestamp - b.timestamp;
      });
    });
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[146]++;
    this.updateMetrics();
  }
  async optimizeBatchSize() {
    /* istanbul ignore next */
    cov_2kzzrnr6eg().f[36]++;
    cov_2kzzrnr6eg().s[147]++;
    if (this.batchSizes.length < 10) {
      /* istanbul ignore next */
      cov_2kzzrnr6eg().b[29][0]++;
      cov_2kzzrnr6eg().s[148]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2kzzrnr6eg().b[29][1]++;
    }
    // Calculate optimal batch size based on performance
    const recentBatches =
    /* istanbul ignore next */
    (cov_2kzzrnr6eg().s[149]++, this.batchSizes.slice(-20));
    const averageBatchSize =
    /* istanbul ignore next */
    (cov_2kzzrnr6eg().s[150]++, recentBatches.reduce((a, b) => {
      /* istanbul ignore next */
      cov_2kzzrnr6eg().f[37]++;
      cov_2kzzrnr6eg().s[151]++;
      return a + b;
    }, 0) / recentBatches.length);
    // Adjust config based on performance metrics
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[152]++;
    if (
    /* istanbul ignore next */
    (cov_2kzzrnr6eg().b[31][0]++, this.metrics.averageProcessingTime < 50) &&
    /* istanbul ignore next */
    (cov_2kzzrnr6eg().b[31][1]++, averageBatchSize < this.config.batchSize)) {
      /* istanbul ignore next */
      cov_2kzzrnr6eg().b[30][0]++;
      cov_2kzzrnr6eg().s[153]++;
      this.config.batchSize = Math.min(this.config.batchSize + 5, 50);
    } else {
      /* istanbul ignore next */
      cov_2kzzrnr6eg().b[30][1]++;
      cov_2kzzrnr6eg().s[154]++;
      if (this.metrics.averageProcessingTime > 200) {
        /* istanbul ignore next */
        cov_2kzzrnr6eg().b[32][0]++;
        cov_2kzzrnr6eg().s[155]++;
        this.config.batchSize = Math.max(this.config.batchSize - 5, 1);
      } else
      /* istanbul ignore next */
      {
        cov_2kzzrnr6eg().b[32][1]++;
      }
    }
  }
  getDeadLetterQueue() {
    /* istanbul ignore next */
    cov_2kzzrnr6eg().f[38]++;
    cov_2kzzrnr6eg().s[156]++;
    return [...this.deadLetterQueue];
  }
  async performHealthCheck() {
    /* istanbul ignore next */
    cov_2kzzrnr6eg().f[39]++;
    cov_2kzzrnr6eg().s[157]++;
    if (this.isCorrupted) {
      /* istanbul ignore next */
      cov_2kzzrnr6eg().b[33][0]++;
      cov_2kzzrnr6eg().s[158]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_2kzzrnr6eg().b[33][1]++;
    }
    // Check queue consistency
    let totalInQueues =
    /* istanbul ignore next */
    (cov_2kzzrnr6eg().s[159]++, 0);
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[160]++;
    this.priorityQueues.forEach(queue => {
      /* istanbul ignore next */
      cov_2kzzrnr6eg().f[40]++;
      cov_2kzzrnr6eg().s[161]++;
      totalInQueues += queue.length;
    });
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[162]++;
    return totalInQueues === this.messages.size;
  }
  async recover() {
    /* istanbul ignore next */
    cov_2kzzrnr6eg().f[41]++;
    cov_2kzzrnr6eg().s[163]++;
    this.isCorrupted = false;
    // Rebuild priority queues
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[164]++;
    await this.compact();
    // Reset metrics
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[165]++;
    this.metrics.errorCount = 0;
  }
  simulateCorruption() {
    /* istanbul ignore next */
    cov_2kzzrnr6eg().f[42]++;
    cov_2kzzrnr6eg().s[166]++;
    this.isCorrupted = true;
  }
  getPerformanceReport() {
    /* istanbul ignore next */
    cov_2kzzrnr6eg().f[43]++;
    const recentProcessingTimes =
    /* istanbul ignore next */
    (cov_2kzzrnr6eg().s[167]++, this.processingTimes.slice(-20));
    const avgTime =
    /* istanbul ignore next */
    (cov_2kzzrnr6eg().s[168]++, recentProcessingTimes.reduce((a, b) => {
      /* istanbul ignore next */
      cov_2kzzrnr6eg().f[44]++;
      cov_2kzzrnr6eg().s[169]++;
      return a + b;
    }, 0) / recentProcessingTimes.length);
    // Detect degradation - lowered threshold to be more sensitive to performance issues
    const degradationDetected =
    /* istanbul ignore next */
    (cov_2kzzrnr6eg().s[170]++, avgTime > 30); // More realistic threshold for degradation
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[171]++;
    return {
      degradationDetected,
      averageProcessingTime: avgTime,
      recommendations: degradationDetected ?
      /* istanbul ignore next */
      (cov_2kzzrnr6eg().b[34][0]++, ["Consider scaling processing capacity"]) :
      /* istanbul ignore next */
      (cov_2kzzrnr6eg().b[34][1]++, [])
    };
  }
  updateMetrics() {
    /* istanbul ignore next */
    cov_2kzzrnr6eg().f[45]++;
    let totalInQueues =
    /* istanbul ignore next */
    (cov_2kzzrnr6eg().s[172]++, 0);
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[173]++;
    this.priorityQueues.forEach(queue => {
      /* istanbul ignore next */
      cov_2kzzrnr6eg().f[46]++;
      cov_2kzzrnr6eg().s[174]++;
      totalInQueues += queue.length;
    });
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[175]++;
    this.metrics.pendingMessages = totalInQueues;
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[176]++;
    this.metrics.queueSize = this.messages.size;
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[177]++;
    if (this.processingTimes.length > 0) {
      /* istanbul ignore next */
      cov_2kzzrnr6eg().b[35][0]++;
      cov_2kzzrnr6eg().s[178]++;
      this.metrics.averageProcessingTime = this.processingTimes.reduce((a, b) => {
        /* istanbul ignore next */
        cov_2kzzrnr6eg().f[47]++;
        cov_2kzzrnr6eg().s[179]++;
        return a + b;
      }, 0) / this.processingTimes.length;
    } else
    /* istanbul ignore next */
    {
      cov_2kzzrnr6eg().b[35][1]++;
    }
    cov_2kzzrnr6eg().s[180]++;
    if (this.batchSizes.length > 0) {
      /* istanbul ignore next */
      cov_2kzzrnr6eg().b[36][0]++;
      cov_2kzzrnr6eg().s[181]++;
      this.metrics.averageBatchSize = this.batchSizes.reduce((a, b) => {
        /* istanbul ignore next */
        cov_2kzzrnr6eg().f[48]++;
        cov_2kzzrnr6eg().s[182]++;
        return a + b;
      }, 0) / this.batchSizes.length;
    } else
    /* istanbul ignore next */
    {
      cov_2kzzrnr6eg().b[36][1]++;
    }
    cov_2kzzrnr6eg().s[183]++;
    this.metrics.errorRate = this.metrics.totalMessages > 0 ?
    /* istanbul ignore next */
    (cov_2kzzrnr6eg().b[37][0]++, this.metrics.errorCount / this.metrics.totalMessages) :
    /* istanbul ignore next */
    (cov_2kzzrnr6eg().b[37][1]++, 0);
    // Calculate throughput (messages per second)
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[184]++;
    if (this.processingTimes.length > 1) {
      /* istanbul ignore next */
      cov_2kzzrnr6eg().b[38][0]++;
      const totalTime =
      /* istanbul ignore next */
      (cov_2kzzrnr6eg().s[185]++, this.processingTimes.reduce((a, b) => {
        /* istanbul ignore next */
        cov_2kzzrnr6eg().f[49]++;
        cov_2kzzrnr6eg().s[186]++;
        return a + b;
      }, 0));
      /* istanbul ignore next */
      cov_2kzzrnr6eg().s[187]++;
      this.metrics.throughput = this.metrics.processedMessages * 1000 / totalTime;
    } else
    /* istanbul ignore next */
    {
      cov_2kzzrnr6eg().b[38][1]++;
    }
  }
}
function createMessageQueue(config) {
  /* istanbul ignore next */
  cov_2kzzrnr6eg().f[50]++;
  cov_2kzzrnr6eg().s[188]++;
  return new MessageQueueImpl(config);
}
async function processMessage(message, processor) {
  /* istanbul ignore next */
  cov_2kzzrnr6eg().f[51]++;
  cov_2kzzrnr6eg().s[189]++;
  try {
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[190]++;
    return await processor(message);
  } catch (error) {
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[191]++;
    return {
      success: false,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2kzzrnr6eg().b[39][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2kzzrnr6eg().b[39][1]++, "Unknown error")
    };
  }
}
async function batchProcessMessages(messages, processor) {
  /* istanbul ignore next */
  cov_2kzzrnr6eg().f[52]++;
  const results =
  /* istanbul ignore next */
  (cov_2kzzrnr6eg().s[192]++, []);
  /* istanbul ignore next */
  cov_2kzzrnr6eg().s[193]++;
  for (const message of messages) {
    /* istanbul ignore next */
    cov_2kzzrnr6eg().s[194]++;
    results.push(await processMessage(message, processor));
  }
  /* istanbul ignore next */
  cov_2kzzrnr6eg().s[195]++;
  return results;
}
function optimizeQueue(queue) {
  /* istanbul ignore next */
  cov_2kzzrnr6eg().f[53]++;
  cov_2kzzrnr6eg().s[196]++;
  // Perform various optimizations
  queue.removeExpiredMessages();
  /* istanbul ignore next */
  cov_2kzzrnr6eg().s[197]++;
  queue.compact();
  /* istanbul ignore next */
  cov_2kzzrnr6eg().s[198]++;
  queue.optimizeBatchSize();
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
{"version":3,"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/components/ui/use-toast.tsx"],"sourcesContent":["import { useState, useCallback } from \"react\";\n\nexport interface Toast {\n  title: string;\n  description?: string;\n  duration?: number;\n}\n\nlet toastId = 0;\n\nexport function useToast() {\n  const [toasts, setToasts] = useState<Array<Toast & { id: number }>>([]);\n\n  const toast = useCallback(\n    ({ title, description, duration = 3000 }: Toast) => {\n      const id = toastId++;\n      const newToast = { id, title, description, duration };\n\n      setToasts((prev) => [...prev, newToast]);\n\n      // Simple console log for now since we don't have a full toast system\n      console.log(`Toast: ${title}${description ? ` - ${description}` : \"\"}`);\n\n      setTimeout(() => {\n        setToasts((prev) => prev.filter((t) => t.id !== id));\n      }, duration);\n    },\n    [],\n  );\n\n  return { toast, toasts };\n}\n"],"names":["useToast","toastId","toasts","setToasts","useState","toast","useCallback","title","description","duration","id","newToast","prev","console","log","setTimeout","filter","t"],"mappings":";;;;+BAUgBA;;;eAAAA;;;uBAVsB;AAQtC,IAAIC,UAAU;AAEP,SAASD;IACd,MAAM,CAACE,QAAQC,UAAU,GAAGC,IAAAA,eAAQ,EAAgC,EAAE;IAEtE,MAAMC,QAAQC,IAAAA,kBAAW,EACvB,CAAC,EAAEC,KAAK,EAAEC,WAAW,EAAEC,WAAW,IAAI,EAAS;QAC7C,MAAMC,KAAKT;QACX,MAAMU,WAAW;YAAED;YAAIH;YAAOC;YAAaC;QAAS;QAEpDN,UAAU,CAACS,OAAS;mBAAIA;gBAAMD;aAAS;QAEvC,qEAAqE;QACrEE,QAAQC,GAAG,CAAC,CAAC,OAAO,EAAEP,MAAM,EAAEC,cAAc,CAAC,GAAG,EAAEA,YAAY,CAAC,GAAG,GAAG,CAAC;QAEtEO,WAAW;YACTZ,UAAU,CAACS,OAASA,KAAKI,MAAM,CAAC,CAACC,IAAMA,EAAEP,EAAE,KAAKA;QAClD,GAAGD;IACL,GACA,EAAE;IAGJ,OAAO;QAAEJ;QAAOH;IAAO;AACzB"}
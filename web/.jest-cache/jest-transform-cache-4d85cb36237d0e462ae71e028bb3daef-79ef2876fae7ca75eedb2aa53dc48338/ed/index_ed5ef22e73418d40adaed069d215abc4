a8e03497cd5cdf185d9297d65251c6b7
"use client";
"use strict";

/* istanbul ignore next */
function cov_2o9zq5twgo() {
  var path = "/Users/matthewmoroney/builds/FreeAgentics/web/app/dashboard/components/panels/ConversationPanel/index.tsx";
  var hash = "cb1c272f2131e5c16cb48edd934f98747fa5eb29";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewmoroney/builds/FreeAgentics/web/app/dashboard/components/panels/ConversationPanel/index.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 33
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 14,
          column: 44
        }
      },
      "6": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 51
        }
      },
      "7": {
        start: {
          line: 16,
          column: 39
        },
        end: {
          line: 16,
          column: 51
        }
      },
      "8": {
        start: {
          line: 17,
          column: 28
        },
        end: {
          line: 17,
          column: 41
        }
      },
      "9": {
        start: {
          line: 18,
          column: 27
        },
        end: {
          line: 18,
          column: 40
        }
      },
      "10": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 21,
          column: 20
        }
      },
      "11": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 66
        }
      },
      "12": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "13": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 19
        }
      },
      "14": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 31,
          column: 5
        }
      },
      "15": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 30,
          column: 10
        }
      },
      "16": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 32,
          column: 53
        }
      },
      "17": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "18": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 30
        }
      },
      "19": {
        start: {
          line: 36,
          column: 17
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "20": {
        start: {
          line: 39,
          column: 32
        },
        end: {
          line: 39,
          column: 88
        }
      },
      "21": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "22": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 48,
          column: 9
        }
      },
      "23": {
        start: {
          line: 42,
          column: 23
        },
        end: {
          line: 42,
          column: 95
        }
      },
      "24": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 47,
          column: 13
        }
      },
      "25": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 57
        }
      },
      "26": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 46,
          column: 39
        }
      },
      "27": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 50,
          column: 25
        }
      },
      "28": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "29": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 31
        }
      },
      "30": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 18
        }
      },
      "31": {
        start: {
          line: 57,
          column: 21
        },
        end: {
          line: 82,
          column: 1
        }
      },
      "32": {
        start: {
          line: 84,
          column: 36
        },
        end: {
          line: 84,
          column: 70
        }
      },
      "33": {
        start: {
          line: 85,
          column: 22
        },
        end: {
          line: 85,
          column: 46
        }
      },
      "34": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 93,
          column: 7
        }
      },
      "35": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 90,
          column: 9
        }
      },
      "36": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 73
        }
      },
      "37": {
        start: {
          line: 94,
          column: 27
        },
        end: {
          line: 113,
          column: 5
        }
      },
      "38": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 112,
          column: 9
        }
      },
      "39": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 99,
          column: 19
        }
      },
      "40": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 103,
          column: 19
        }
      },
      "41": {
        start: {
          line: 105,
          column: 16
        },
        end: {
          line: 107,
          column: 19
        }
      },
      "42": {
        start: {
          line: 109,
          column: 16
        },
        end: {
          line: 111,
          column: 19
        }
      },
      "43": {
        start: {
          line: 114,
          column: 28
        },
        end: {
          line: 125,
          column: 5
        }
      },
      "44": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 124,
          column: 9
        }
      },
      "45": {
        start: {
          line: 117,
          column: 16
        },
        end: {
          line: 117,
          column: 72
        }
      },
      "46": {
        start: {
          line: 119,
          column: 16
        },
        end: {
          line: 119,
          column: 75
        }
      },
      "47": {
        start: {
          line: 121,
          column: 16
        },
        end: {
          line: 121,
          column: 78
        }
      },
      "48": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 123,
          column: 105
        }
      },
      "49": {
        start: {
          line: 126,
          column: 25
        },
        end: {
          line: 137,
          column: 5
        }
      },
      "50": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 136,
          column: 9
        }
      },
      "51": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 129,
          column: 29
        }
      },
      "52": {
        start: {
          line: 131,
          column: 16
        },
        end: {
          line: 131,
          column: 29
        }
      },
      "53": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 133,
          column: 31
        }
      },
      "54": {
        start: {
          line: 135,
          column: 16
        },
        end: {
          line: 135,
          column: 32
        }
      },
      "55": {
        start: {
          line: 138,
          column: 4
        },
        end: {
          line: 240,
          column: 7
        }
      },
      "56": {
        start: {
          line: 193,
          column: 64
        },
        end: {
          line: 223,
          column: 34
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 33
          }
        },
        loc: {
          start: {
            line: 15,
            column: 47
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 39
          },
          end: {
            line: 19,
            column: 40
          }
        },
        loc: {
          start: {
            line: 19,
            column: 61
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 34
          }
        },
        loc: {
          start: {
            line: 23,
            column: 53
          },
          end: {
            line: 55,
            column: 1
          }
        },
        line: 23
      },
      "4": {
        name: "ConversationPanel",
        decl: {
          start: {
            line: 83,
            column: 9
          },
          end: {
            line: 83,
            column: 26
          }
        },
        loc: {
          start: {
            line: 83,
            column: 37
          },
          end: {
            line: 241,
            column: 1
          }
        },
        line: 83
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 86,
            column: 26
          },
          end: {
            line: 86,
            column: 27
          }
        },
        loc: {
          start: {
            line: 86,
            column: 30
          },
          end: {
            line: 91,
            column: 5
          }
        },
        line: 86
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 94,
            column: 27
          },
          end: {
            line: 94,
            column: 28
          }
        },
        loc: {
          start: {
            line: 94,
            column: 35
          },
          end: {
            line: 113,
            column: 5
          }
        },
        line: 94
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 114,
            column: 28
          },
          end: {
            line: 114,
            column: 29
          }
        },
        loc: {
          start: {
            line: 114,
            column: 36
          },
          end: {
            line: 125,
            column: 5
          }
        },
        line: 114
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 126,
            column: 25
          },
          end: {
            line: 126,
            column: 26
          }
        },
        loc: {
          start: {
            line: 126,
            column: 33
          },
          end: {
            line: 137,
            column: 5
          }
        },
        line: 126
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 193,
            column: 39
          },
          end: {
            line: 193,
            column: 40
          }
        },
        loc: {
          start: {
            line: 193,
            column: 64
          },
          end: {
            line: 223,
            column: 34
          }
        },
        line: 193
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 20,
            column: 15
          },
          end: {
            line: 20,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 20,
            column: 29
          },
          end: {
            line: 20,
            column: 45
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 65
          }
        }],
        line: 20
      },
      "2": {
        loc: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "3": {
        loc: {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 24,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 24,
            column: 20
          }
        }, {
          start: {
            line: 24,
            column: 24
          },
          end: {
            line: 24,
            column: 27
          }
        }, {
          start: {
            line: 24,
            column: 31
          },
          end: {
            line: 24,
            column: 45
          }
        }],
        line: 24
      },
      "4": {
        loc: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "5": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 27,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 27,
            column: 20
          }
        }, {
          start: {
            line: 27,
            column: 24
          },
          end: {
            line: 27,
            column: 47
          }
        }, {
          start: {
            line: 27,
            column: 51
          },
          end: {
            line: 27,
            column: 76
          }
        }],
        line: 27
      },
      "6": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "7": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 13
          }
        }, {
          start: {
            line: 33,
            column: 17
          },
          end: {
            line: 33,
            column: 31
          }
        }],
        line: 33
      },
      "8": {
        loc: {
          start: {
            line: 39,
            column: 32
          },
          end: {
            line: 39,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 32
          },
          end: {
            line: 39,
            column: 53
          }
        }, {
          start: {
            line: 39,
            column: 57
          },
          end: {
            line: 39,
            column: 88
          }
        }],
        line: 39
      },
      "9": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "10": {
        loc: {
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 41,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 41,
            column: 29
          }
        }, {
          start: {
            line: 41,
            column: 33
          },
          end: {
            line: 41,
            column: 79
          }
        }],
        line: 41
      },
      "11": {
        loc: {
          start: {
            line: 42,
            column: 23
          },
          end: {
            line: 42,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 42,
            column: 47
          },
          end: {
            line: 42,
            column: 88
          }
        }, {
          start: {
            line: 42,
            column: 91
          },
          end: {
            line: 42,
            column: 95
          }
        }],
        line: 42
      },
      "12": {
        loc: {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 47,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 47,
            column: 13
          }
        }, {
          start: {
            line: 45,
            column: 19
          },
          end: {
            line: 47,
            column: 13
          }
        }],
        line: 43
      },
      "13": {
        loc: {
          start: {
            line: 43,
            column: 16
          },
          end: {
            line: 43,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 16
          },
          end: {
            line: 43,
            column: 20
          }
        }, {
          start: {
            line: 43,
            column: 25
          },
          end: {
            line: 43,
            column: 33
          }
        }, {
          start: {
            line: 43,
            column: 37
          },
          end: {
            line: 43,
            column: 45
          }
        }],
        line: 43
      },
      "14": {
        loc: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "15": {
        loc: {
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "16": {
        loc: {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 99,
            column: 19
          }
        }, {
          start: {
            line: 100,
            column: 12
          },
          end: {
            line: 103,
            column: 19
          }
        }, {
          start: {
            line: 104,
            column: 12
          },
          end: {
            line: 107,
            column: 19
          }
        }, {
          start: {
            line: 108,
            column: 12
          },
          end: {
            line: 111,
            column: 19
          }
        }],
        line: 95
      },
      "17": {
        loc: {
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 116,
            column: 12
          },
          end: {
            line: 117,
            column: 72
          }
        }, {
          start: {
            line: 118,
            column: 12
          },
          end: {
            line: 119,
            column: 75
          }
        }, {
          start: {
            line: 120,
            column: 12
          },
          end: {
            line: 121,
            column: 78
          }
        }, {
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 123,
            column: 105
          }
        }],
        line: 115
      },
      "18": {
        loc: {
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 129,
            column: 29
          }
        }, {
          start: {
            line: 130,
            column: 12
          },
          end: {
            line: 131,
            column: 29
          }
        }, {
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 133,
            column: 31
          }
        }, {
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 135,
            column: 32
          }
        }],
        line: 127
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0, 0],
      "17": [0, 0, 0, 0],
      "18": [0, 0, 0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matthewmoroney/builds/FreeAgentics/web/app/dashboard/components/panels/ConversationPanel/index.tsx"],
      sourcesContent: ["\"use client\";\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport {\n  MessageSquare,\n  Brain,\n  Network,\n  Activity,\n  ChevronRight,\n} from \"lucide-react\";\n\n// Define DashboardView type locally\nexport type DashboardView =\n  | \"ceo-demo\"\n  | \"executive\"\n  | \"technical\"\n  | \"research\"\n  | \"minimal\";\n\ninterface ConversationPanelProps {\n  view: DashboardView;\n}\n\ninterface ConversationMessage {\n  id: string;\n  type: \"llm\" | \"gnn\" | \"pymdp\" | \"system\";\n  content: string;\n  timestamp: string; // Changed to string for consistent formatting\n  metadata?: any;\n}\n\n// Use static timestamps with consistent formatting to avoid hydration mismatches\nconst mockMessages: ConversationMessage[] = [\n  {\n    id: \"1\",\n    type: \"system\",\n    content: \"Agent initialized with goal: Optimize resource allocation\",\n    timestamp: \"12:59:50 PM\",\n  },\n  {\n    id: \"2\",\n    type: \"llm\",\n    content: \"Analyzing current resource distribution patterns...\",\n    timestamp: \"12:59:51 PM\",\n  },\n  {\n    id: \"3\",\n    type: \"gnn\",\n    content: \"Graph neural network processing: 847 nodes, 2,341 edges analyzed\",\n    timestamp: \"12:59:52 PM\",\n  },\n  {\n    id: \"4\",\n    type: \"pymdp\",\n    content: \"Active inference update: Free energy reduced by 23.4%\",\n    timestamp: \"12:59:53 PM\",\n  },\n];\n\nexport default function ConversationPanel({ view }: ConversationPanelProps) {\n  const [messages, setMessages] = useState<ConversationMessage[]>(mockMessages);\n  const scrollRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    // Auto-scroll to bottom\n    if (scrollRef.current) {\n      scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  const getMessageIcon = (type: ConversationMessage[\"type\"]) => {\n    switch (type) {\n      case \"llm\":\n        return <Brain className=\"w-4 h-4\" />;\n      case \"gnn\":\n        return <Network className=\"w-4 h-4\" />;\n      case \"pymdp\":\n        return <Activity className=\"w-4 h-4\" />;\n      case \"system\":\n        return <MessageSquare className=\"w-4 h-4\" />;\n    }\n  };\n\n  const getMessageColor = (type: ConversationMessage[\"type\"]) => {\n    switch (type) {\n      case \"llm\":\n        return \"text-blue-400 border-blue-400/20 bg-blue-400/5\";\n      case \"gnn\":\n        return \"text-green-400 border-green-400/20 bg-green-400/5\";\n      case \"pymdp\":\n        return \"text-purple-400 border-purple-400/20 bg-purple-400/5\";\n      case \"system\":\n        return \"text-[var(--text-tertiary)] border-[var(--bg-tertiary)] bg-[var(--bg-tertiary)]\";\n    }\n  };\n\n  const getTypeLabel = (type: ConversationMessage[\"type\"]) => {\n    switch (type) {\n      case \"llm\":\n        return \"LLM\";\n      case \"gnn\":\n        return \"GNN\";\n      case \"pymdp\":\n        return \"PyMDP\";\n      case \"system\":\n        return \"SYSTEM\";\n    }\n  };\n\n  return (\n    <div className=\"h-full flex flex-col bg-[var(--bg-primary)]\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between p-3 border-b border-[var(--bg-tertiary)]\">\n        <div className=\"flex items-center gap-2\">\n          <div className=\"flex items-center gap-1\">\n            <div className=\"w-2 h-2 rounded-full bg-green-400 animate-pulse\" />\n            <span className=\"text-xs font-mono text-[var(--text-secondary)]\">\n              ACTIVE\n            </span>\n          </div>\n          <span className=\"text-xs font-mono text-[var(--text-tertiary)]\">\n            Agent Loop\n          </span>\n        </div>\n        <div className=\"flex items-center gap-2 text-xs font-mono\">\n          <span className=\"text-blue-400\">LLM</span>\n          <ChevronRight className=\"w-3 h-3 text-[var(--text-tertiary)]\" />\n          <span className=\"text-green-400\">GNN</span>\n          <ChevronRight className=\"w-3 h-3 text-[var(--text-tertiary)]\" />\n          <span className=\"text-purple-400\">PyMDP</span>\n        </div>\n      </div>\n\n      {/* Messages */}\n      <div\n        ref={scrollRef}\n        className=\"flex-1 overflow-y-auto p-3 space-y-2 scrollbar-thin\"\n      >\n        {messages.map((message) => (\n          <div\n            key={message.id}\n            className={`flex items-start gap-3 p-3 rounded-lg border ${getMessageColor(\n              message.type,\n            )} transition-all hover:border-opacity-40`}\n          >\n            <div className=\"flex-shrink-0 mt-0.5\">\n              {getMessageIcon(message.type)}\n            </div>\n            <div className=\"flex-1 min-w-0\">\n              <div className=\"flex items-center gap-2 mb-1\">\n                <span className=\"text-xs font-mono font-semibold\">\n                  {getTypeLabel(message.type)}\n                </span>\n                <span className=\"text-xs font-mono text-[var(--text-tertiary)]\">\n                  {message.timestamp}\n                </span>\n              </div>\n              <p className=\"text-sm text-[var(--text-primary)] break-words\">\n                {message.content}\n              </p>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Input Area (Future) */}\n      <div className=\"p-3 border-t border-[var(--bg-tertiary)]\">\n        <div className=\"flex items-center gap-2 text-xs font-mono text-[var(--text-tertiary)]\">\n          <Activity className=\"w-3 h-3\" />\n          <span>Processing next inference cycle...</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],
      names: ["ConversationPanel", "mockMessages", "id", "type", "content", "timestamp", "view", "messages", "setMessages", "useState", "scrollRef", "useRef", "useEffect", "current", "scrollTop", "scrollHeight", "getMessageIcon", "Brain", "className", "Network", "Activity", "MessageSquare", "getMessageColor", "getTypeLabel", "div", "span", "ChevronRight", "ref", "map", "message", "p"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "cb1c272f2131e5c16cb48edd934f98747fa5eb29"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2o9zq5twgo = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2o9zq5twgo();
cov_2o9zq5twgo().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2o9zq5twgo().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2o9zq5twgo().f[0]++;
    cov_2o9zq5twgo().s[2]++;
    return ConversationPanel;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2o9zq5twgo().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_2o9zq5twgo().s[4]++, _interop_require_wildcard(require("react")));
const _lucidereact =
/* istanbul ignore next */
(cov_2o9zq5twgo().s[5]++, require("lucide-react"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_2o9zq5twgo().f[1]++;
  cov_2o9zq5twgo().s[6]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_2o9zq5twgo().b[0][0]++;
    cov_2o9zq5twgo().s[7]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_2o9zq5twgo().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_2o9zq5twgo().s[8]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_2o9zq5twgo().s[9]++, new WeakMap());
  /* istanbul ignore next */
  cov_2o9zq5twgo().s[10]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_2o9zq5twgo().f[2]++;
    cov_2o9zq5twgo().s[11]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_2o9zq5twgo().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_2o9zq5twgo().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_2o9zq5twgo().f[3]++;
  cov_2o9zq5twgo().s[12]++;
  if (
  /* istanbul ignore next */
  (cov_2o9zq5twgo().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_2o9zq5twgo().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_2o9zq5twgo().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_2o9zq5twgo().b[2][0]++;
    cov_2o9zq5twgo().s[13]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_2o9zq5twgo().b[2][1]++;
  }
  cov_2o9zq5twgo().s[14]++;
  if (
  /* istanbul ignore next */
  (cov_2o9zq5twgo().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_2o9zq5twgo().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_2o9zq5twgo().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_2o9zq5twgo().b[4][0]++;
    cov_2o9zq5twgo().s[15]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_2o9zq5twgo().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_2o9zq5twgo().s[16]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_2o9zq5twgo().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_2o9zq5twgo().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_2o9zq5twgo().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_2o9zq5twgo().b[6][0]++;
    cov_2o9zq5twgo().s[18]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_2o9zq5twgo().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_2o9zq5twgo().s[19]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_2o9zq5twgo().s[20]++,
  /* istanbul ignore next */
  (cov_2o9zq5twgo().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_2o9zq5twgo().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_2o9zq5twgo().s[21]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_2o9zq5twgo().s[22]++;
    if (
    /* istanbul ignore next */
    (cov_2o9zq5twgo().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_2o9zq5twgo().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_2o9zq5twgo().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_2o9zq5twgo().s[23]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_2o9zq5twgo().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_2o9zq5twgo().b[11][1]++, null));
      /* istanbul ignore next */
      cov_2o9zq5twgo().s[24]++;
      if (
      /* istanbul ignore next */
      (cov_2o9zq5twgo().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_2o9zq5twgo().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_2o9zq5twgo().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_2o9zq5twgo().b[12][0]++;
        cov_2o9zq5twgo().s[25]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_2o9zq5twgo().b[12][1]++;
        cov_2o9zq5twgo().s[26]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_2o9zq5twgo().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_2o9zq5twgo().s[27]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_2o9zq5twgo().s[28]++;
  if (cache) {
    /* istanbul ignore next */
    cov_2o9zq5twgo().b[14][0]++;
    cov_2o9zq5twgo().s[29]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_2o9zq5twgo().b[14][1]++;
  }
  cov_2o9zq5twgo().s[30]++;
  return newObj;
}
// Use static timestamps with consistent formatting to avoid hydration mismatches
const mockMessages =
/* istanbul ignore next */
(cov_2o9zq5twgo().s[31]++, [{
  id: "1",
  type: "system",
  content: "Agent initialized with goal: Optimize resource allocation",
  timestamp: "12:59:50 PM"
}, {
  id: "2",
  type: "llm",
  content: "Analyzing current resource distribution patterns...",
  timestamp: "12:59:51 PM"
}, {
  id: "3",
  type: "gnn",
  content: "Graph neural network processing: 847 nodes, 2,341 edges analyzed",
  timestamp: "12:59:52 PM"
}, {
  id: "4",
  type: "pymdp",
  content: "Active inference update: Free energy reduced by 23.4%",
  timestamp: "12:59:53 PM"
}]);
function ConversationPanel({
  view
}) {
  /* istanbul ignore next */
  cov_2o9zq5twgo().f[4]++;
  const [messages, setMessages] =
  /* istanbul ignore next */
  (cov_2o9zq5twgo().s[32]++, (0, _react.useState)(mockMessages));
  const scrollRef =
  /* istanbul ignore next */
  (cov_2o9zq5twgo().s[33]++, (0, _react.useRef)(null));
  /* istanbul ignore next */
  cov_2o9zq5twgo().s[34]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2o9zq5twgo().f[5]++;
    cov_2o9zq5twgo().s[35]++;
    // Auto-scroll to bottom
    if (scrollRef.current) {
      /* istanbul ignore next */
      cov_2o9zq5twgo().b[15][0]++;
      cov_2o9zq5twgo().s[36]++;
      scrollRef.current.scrollTop = scrollRef.current.scrollHeight;
    } else
    /* istanbul ignore next */
    {
      cov_2o9zq5twgo().b[15][1]++;
    }
  }, [messages]);
  /* istanbul ignore next */
  cov_2o9zq5twgo().s[37]++;
  const getMessageIcon = type => {
    /* istanbul ignore next */
    cov_2o9zq5twgo().f[6]++;
    cov_2o9zq5twgo().s[38]++;
    switch (type) {
      case "llm":
        /* istanbul ignore next */
        cov_2o9zq5twgo().b[16][0]++;
        cov_2o9zq5twgo().s[39]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Brain, {
          className: "w-4 h-4"
        });
      case "gnn":
        /* istanbul ignore next */
        cov_2o9zq5twgo().b[16][1]++;
        cov_2o9zq5twgo().s[40]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Network, {
          className: "w-4 h-4"
        });
      case "pymdp":
        /* istanbul ignore next */
        cov_2o9zq5twgo().b[16][2]++;
        cov_2o9zq5twgo().s[41]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Activity, {
          className: "w-4 h-4"
        });
      case "system":
        /* istanbul ignore next */
        cov_2o9zq5twgo().b[16][3]++;
        cov_2o9zq5twgo().s[42]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.MessageSquare, {
          className: "w-4 h-4"
        });
    }
  };
  /* istanbul ignore next */
  cov_2o9zq5twgo().s[43]++;
  const getMessageColor = type => {
    /* istanbul ignore next */
    cov_2o9zq5twgo().f[7]++;
    cov_2o9zq5twgo().s[44]++;
    switch (type) {
      case "llm":
        /* istanbul ignore next */
        cov_2o9zq5twgo().b[17][0]++;
        cov_2o9zq5twgo().s[45]++;
        return "text-blue-400 border-blue-400/20 bg-blue-400/5";
      case "gnn":
        /* istanbul ignore next */
        cov_2o9zq5twgo().b[17][1]++;
        cov_2o9zq5twgo().s[46]++;
        return "text-green-400 border-green-400/20 bg-green-400/5";
      case "pymdp":
        /* istanbul ignore next */
        cov_2o9zq5twgo().b[17][2]++;
        cov_2o9zq5twgo().s[47]++;
        return "text-purple-400 border-purple-400/20 bg-purple-400/5";
      case "system":
        /* istanbul ignore next */
        cov_2o9zq5twgo().b[17][3]++;
        cov_2o9zq5twgo().s[48]++;
        return "text-[var(--text-tertiary)] border-[var(--bg-tertiary)] bg-[var(--bg-tertiary)]";
    }
  };
  /* istanbul ignore next */
  cov_2o9zq5twgo().s[49]++;
  const getTypeLabel = type => {
    /* istanbul ignore next */
    cov_2o9zq5twgo().f[8]++;
    cov_2o9zq5twgo().s[50]++;
    switch (type) {
      case "llm":
        /* istanbul ignore next */
        cov_2o9zq5twgo().b[18][0]++;
        cov_2o9zq5twgo().s[51]++;
        return "LLM";
      case "gnn":
        /* istanbul ignore next */
        cov_2o9zq5twgo().b[18][1]++;
        cov_2o9zq5twgo().s[52]++;
        return "GNN";
      case "pymdp":
        /* istanbul ignore next */
        cov_2o9zq5twgo().b[18][2]++;
        cov_2o9zq5twgo().s[53]++;
        return "PyMDP";
      case "system":
        /* istanbul ignore next */
        cov_2o9zq5twgo().b[18][3]++;
        cov_2o9zq5twgo().s[54]++;
        return "SYSTEM";
    }
  };
  /* istanbul ignore next */
  cov_2o9zq5twgo().s[55]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "h-full flex flex-col bg-[var(--bg-primary)]",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex items-center justify-between p-3 border-b border-[var(--bg-tertiary)]",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center gap-2",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex items-center gap-1",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "w-2 h-2 rounded-full bg-green-400 animate-pulse"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
            className: "text-xs font-mono text-[var(--text-secondary)]",
            children: "ACTIVE"
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
          className: "text-xs font-mono text-[var(--text-tertiary)]",
          children: "Agent Loop"
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center gap-2 text-xs font-mono",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
          className: "text-blue-400",
          children: "LLM"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.ChevronRight, {
          className: "w-3 h-3 text-[var(--text-tertiary)]"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
          className: "text-green-400",
          children: "GNN"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.ChevronRight, {
          className: "w-3 h-3 text-[var(--text-tertiary)]"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
          className: "text-purple-400",
          children: "PyMDP"
        })]
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      ref: scrollRef,
      className: "flex-1 overflow-y-auto p-3 space-y-2 scrollbar-thin",
      children: messages.map(message => {
        /* istanbul ignore next */
        cov_2o9zq5twgo().f[9]++;
        cov_2o9zq5twgo().s[56]++;
        return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: `flex items-start gap-3 p-3 rounded-lg border ${getMessageColor(message.type)} transition-all hover:border-opacity-40`,
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "flex-shrink-0 mt-0.5",
            children: getMessageIcon(message.type)
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex-1 min-w-0",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center gap-2 mb-1",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                className: "text-xs font-mono font-semibold",
                children: getTypeLabel(message.type)
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                className: "text-xs font-mono text-[var(--text-tertiary)]",
                children: message.timestamp
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-sm text-[var(--text-primary)] break-words",
              children: message.content
            })]
          })]
        }, message.id);
      })
    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "p-3 border-t border-[var(--bg-tertiary)]",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center gap-2 text-xs font-mono text-[var(--text-tertiary)]",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Activity, {
          className: "w-3 h-3"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
          children: "Processing next inference cycle..."
        })]
      })
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
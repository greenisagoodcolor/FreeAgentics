{"version":3,"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/__tests__/app/dashboard/page-isolated.test.tsx"],"sourcesContent":["/**\n * @jest-environment jsdom\n */\n\nimport React from \"react\";\nimport { render, screen } from \"@testing-library/react\";\nimport \"@testing-library/jest-dom\";\n\n// Mock dashboard panel components before importing HomePage\njest.mock(\"../../../app/dashboard/components/panels/AgentPanel\", () => {\n  return function AgentPanel({ view }: { view: string }) {\n    return <div data-testid=\"agent-panel-mock\">Agent Panel Mock - {view}</div>;\n  };\n});\n\njest.mock(\"../../../app/dashboard/components/panels/ConversationPanel\", () => {\n  return function ConversationPanel({ view }: { view: string }) {\n    return <div data-testid=\"conversation-panel-mock\">Conversation Panel Mock - {view}</div>;\n  };\n});\n\njest.mock(\"../../../app/dashboard/components/panels/GoalPanel\", () => {\n  return function GoalPanel({ view }: { view: string }) {\n    return <div data-testid=\"goal-panel-mock\">Goal Panel Mock - {view}</div>;\n  };\n});\n\njest.mock(\"../../../app/dashboard/components/panels/KnowledgePanel\", () => {\n  return function KnowledgePanel({ view }: { view: string }) {\n    return <div data-testid=\"knowledge-panel-mock\">Knowledge Panel Mock - {view}</div>;\n  };\n});\n\njest.mock(\"../../../app/dashboard/components/panels/MetricsPanel\", () => {\n  return function MetricsPanel({ view }: { view: string }) {\n    return <div data-testid=\"metrics-panel-mock\">Metrics Panel Mock - {view}</div>;\n  };\n});\n\n// Mock Next.js router\njest.mock(\"next/navigation\", () => ({\n  useRouter: () => ({\n    push: jest.fn(),\n    replace: jest.fn(),\n    refresh: jest.fn(),\n  }),\n}));\n\n// Now import HomePage after mocks are set up\nimport HomePage from \"../../../app/page\";\n\ndescribe(\"HomePage (Isolated Test)\", () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  test(\"renders without crashing with mocked components\", () => {\n    render(<HomePage />);\n    \n    // Check that mocked components are rendered\n    expect(screen.getByTestId(\"agent-panel-mock\")).toBeInTheDocument();\n    expect(screen.getByTestId(\"conversation-panel-mock\")).toBeInTheDocument();\n    expect(screen.getByTestId(\"goal-panel-mock\")).toBeInTheDocument();\n    expect(screen.getByTestId(\"knowledge-panel-mock\")).toBeInTheDocument();\n    expect(screen.getByTestId(\"metrics-panel-mock\")).toBeInTheDocument();\n  });\n\n  test(\"dashboard panels receive correct view prop\", () => {\n    render(<HomePage />);\n    \n    // Check that panels receive the default view\n    expect(screen.getByText(/Agent Panel Mock - executive/)).toBeInTheDocument();\n    expect(screen.getByText(/Conversation Panel Mock - executive/)).toBeInTheDocument();\n  });\n});"],"names":["jest","mock","AgentPanel","view","div","data-testid","ConversationPanel","GoalPanel","KnowledgePanel","MetricsPanel","useRouter","push","fn","replace","refresh","describe","beforeEach","clearAllMocks","test","render","HomePage","expect","screen","getByTestId","toBeInTheDocument","getByText"],"mappings":"AAAA;;CAEC;AAMD,4DAA4D;AAC5DA,KAAKC,IAAI,CAAC,uDAAuD;IAC/D,OAAO,SAASC,WAAW,EAAEC,IAAI,EAAoB;QACnD,qBAAO,sBAACC;YAAIC,eAAY;;gBAAmB;gBAAoBF;;;IACjE;AACF;AAEAH,KAAKC,IAAI,CAAC,8DAA8D;IACtE,OAAO,SAASK,kBAAkB,EAAEH,IAAI,EAAoB;QAC1D,qBAAO,sBAACC;YAAIC,eAAY;;gBAA0B;gBAA2BF;;;IAC/E;AACF;AAEAH,KAAKC,IAAI,CAAC,sDAAsD;IAC9D,OAAO,SAASM,UAAU,EAAEJ,IAAI,EAAoB;QAClD,qBAAO,sBAACC;YAAIC,eAAY;;gBAAkB;gBAAmBF;;;IAC/D;AACF;AAEAH,KAAKC,IAAI,CAAC,2DAA2D;IACnE,OAAO,SAASO,eAAe,EAAEL,IAAI,EAAoB;QACvD,qBAAO,sBAACC;YAAIC,eAAY;;gBAAuB;gBAAwBF;;;IACzE;AACF;AAEAH,KAAKC,IAAI,CAAC,yDAAyD;IACjE,OAAO,SAASQ,aAAa,EAAEN,IAAI,EAAoB;QACrD,qBAAO,sBAACC;YAAIC,eAAY;;gBAAqB;gBAAsBF;;;IACrE;AACF;AAEA,sBAAsB;AACtBH,KAAKC,IAAI,CAAC,mBAAmB,IAAO,CAAA;QAClCS,WAAW,IAAO,CAAA;gBAChBC,MAAMX,KAAKY,EAAE;gBACbC,SAASb,KAAKY,EAAE;gBAChBE,SAASd,KAAKY,EAAE;YAClB,CAAA;IACF,CAAA;;;;;8DA1CkB;wBACa;QACxB;6DA2Cc;;;;;;AAErBG,SAAS,4BAA4B;IACnCC,WAAW;QACThB,KAAKiB,aAAa;IACpB;IAEAC,KAAK,mDAAmD;QACtDC,IAAAA,cAAM,gBAAC,qBAACC,aAAQ;QAEhB,4CAA4C;QAC5CC,OAAOC,cAAM,CAACC,WAAW,CAAC,qBAAqBC,iBAAiB;QAChEH,OAAOC,cAAM,CAACC,WAAW,CAAC,4BAA4BC,iBAAiB;QACvEH,OAAOC,cAAM,CAACC,WAAW,CAAC,oBAAoBC,iBAAiB;QAC/DH,OAAOC,cAAM,CAACC,WAAW,CAAC,yBAAyBC,iBAAiB;QACpEH,OAAOC,cAAM,CAACC,WAAW,CAAC,uBAAuBC,iBAAiB;IACpE;IAEAN,KAAK,8CAA8C;QACjDC,IAAAA,cAAM,gBAAC,qBAACC,aAAQ;QAEhB,6CAA6C;QAC7CC,OAAOC,cAAM,CAACG,SAAS,CAAC,iCAAiCD,iBAAiB;QAC1EH,OAAOC,cAAM,CAACG,SAAS,CAAC,wCAAwCD,iBAAiB;IACnF;AACF"}
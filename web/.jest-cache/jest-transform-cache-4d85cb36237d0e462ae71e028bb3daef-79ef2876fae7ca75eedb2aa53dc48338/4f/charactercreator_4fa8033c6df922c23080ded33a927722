a8f252d9c000f214f9cde0a09886903c
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "CharacterCreator", {
    enumerable: true,
    get: function() {
        return CharacterCreator;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _button = require("./ui/button");
const _card = require("./ui/card");
const _alert = require("./ui/alert");
const _lucidereact = require("lucide-react");
const _agentcreationwizard = require("./ui/agent-creation-wizard");
const _agentsapi = require("../lib/api/agents-api");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
function CharacterCreator({ onClose, onSuccess }) {
    const [isSubmitting, setIsSubmitting] = (0, _react.useState)(false);
    const [error, setError] = (0, _react.useState)(null);
    const [success, setSuccess] = (0, _react.useState)(null);
    const handleAgentCreate = async (template, configuration)=>{
        setIsSubmitting(true);
        setError(null);
        try {
            // Convert template and configuration to API request format
            const createRequest = {
                name: configuration.name,
                // Convert Active Inference configuration
                activeInference: {
                    template: template.category,
                    stateLabels: [
                        "State1",
                        "State2",
                        "State3"
                    ],
                    numStates: configuration.mathematics?.matrices?.aMatrix?.rows || template.mathematicalFoundation.beliefsStates,
                    numObservations: configuration.mathematics?.matrices?.bMatrix?.observations || template.mathematicalFoundation.observationModalities,
                    numActions: template.mathematicalFoundation.actionSpaces,
                    generativeModel: {
                        A: [],
                        B: [],
                        C: [],
                        D: []
                    },
                    precisionParameters: {
                        sensory: configuration.mathematics?.precision?.sensoryPrecision || template.mathematicalFoundation.defaultPrecision.sensory,
                        policy: configuration.mathematics?.precision?.policyPrecision || template.mathematicalFoundation.defaultPrecision.policy,
                        state: configuration.mathematics?.precision?.statePrecision || template.mathematicalFoundation.defaultPrecision.state
                    },
                    mathematicalConstraints: {
                        normalizedBeliefs: true,
                        stochasticMatrices: true,
                        precisionBounds: true
                    }
                },
                // Add legacy personality mapping for backward compatibility
                personality: undefined,
                capabilities: template.capabilities || [
                    "movement",
                    "perception",
                    "communication"
                ],
                tags: [
                    template.category,
                    template.complexity,
                    ...configuration.environment?.tags || []
                ],
                metadata: {
                    templateId: template.id,
                    templateName: template.name,
                    complexity: template.complexity,
                    description: configuration.description,
                    mathematicalFoundation: template.mathematicalFoundation,
                    createdViaWizard: true,
                    configurationVersion: "1.0",
                    ...configuration.advanced?.customParameters || {}
                }
            };
            // Create agent via API
            const result = await _agentsapi.agentsApi.createAgent(createRequest);
            setSuccess(result.agent);
            // Show success briefly, then call success callback
            setTimeout(()=>{
                onSuccess(result.agent);
            }, 1500);
        } catch (err) {
            const errorMessage = err instanceof Error ? err.message : "Unknown error occurred";
            setError(errorMessage);
            console.error("Agent creation failed:", err);
        } finally{
            setIsSubmitting(false);
        }
    };
    // Handle creating from template directly (backward compatibility)
    const handleTemplateCreate = async (template)=>{
        setIsSubmitting(true);
        setError(null);
        try {
            // Create agent using template method
            const result = await _agentsapi.agentsApi.createAgentFromTemplate({
                template: template.category,
                name: `${template.name} ${Date.now()}`,
                stateLabels: [
                    "Explore",
                    "Rest",
                    "Communicate",
                    "Plan"
                ],
                precisionParameters: {
                    sensory: template.mathematicalFoundation.defaultPrecision.sensory || 16,
                    policy: template.mathematicalFoundation.defaultPrecision.policy || 12,
                    state: template.mathematicalFoundation.defaultPrecision.state || 2
                },
                tags: [
                    template.category,
                    template.complexity
                ],
                metadata: {
                    templateId: template.id,
                    templateName: template.name,
                    complexity: template.complexity,
                    createdDirectly: true
                }
            });
            setSuccess(result.agent);
            setTimeout(()=>{
                onSuccess(result.agent);
            }, 1500);
        } catch (err) {
            const errorMessage = err instanceof Error ? err.message : "Unknown error occurred";
            setError(errorMessage);
        } finally{
            setIsSubmitting(false);
        }
    };
    if (success) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.Card, {
            className: "p-6",
            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "text-center space-y-4",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.CheckCircle, {
                        className: "h-16 w-16 text-green-600 mx-auto"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                                className: "text-lg font-semibold text-green-900",
                                children: "Agent Created Successfully!"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                                className: "text-sm text-green-700 mt-2",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("strong", {
                                        children: success.name
                                    }),
                                    " has been created with Active Inference capabilities."
                                ]
                            }),
                            success.activeInference && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "mt-4 p-3 bg-green-50 border border-green-200 rounded-lg",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "text-xs text-green-800 space-y-1",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                                            children: [
                                                "• Template: ",
                                                success.activeInference.template
                                            ]
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                                            children: [
                                                "• States: ",
                                                success.activeInference.numStates
                                            ]
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                                            children: [
                                                "• Precision γ:",
                                                " ",
                                                success.activeInference.precisionParameters.sensory.toFixed(1)
                                            ]
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                            children: "• Mathematical validation: ✓ Passed"
                                        })
                                    ]
                                })
                            })
                        ]
                    })
                ]
            })
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: "space-y-6",
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "flex items-center justify-between",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("h2", {
                                className: "text-2xl font-bold",
                                children: "Create Active Inference Agent"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                className: "text-muted-foreground mt-1",
                                children: "Build a mathematically rigorous agent with real-time visualization"
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                        variant: "outline",
                        onClick: onClose,
                        disabled: isSubmitting,
                        children: "Cancel"
                    })
                ]
            }),
            error && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_alert.Alert, {
                variant: "destructive",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.AlertTriangle, {
                        className: "h-4 w-4"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_alert.AlertDescription, {
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("strong", {
                                children: "Creation Failed:"
                            }),
                            " ",
                            error
                        ]
                    })
                ]
            }),
            isSubmitting && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "relative",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    className: "absolute inset-0 bg-background/80 backdrop-blur-sm z-10 flex items-center justify-center rounded-lg",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "flex items-center gap-3",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Loader2, {
                                className: "h-6 w-6 animate-spin"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "text-center",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                        className: "font-medium",
                                        children: "Creating Agent..."
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                        className: "text-sm text-muted-foreground",
                                        children: "Validating mathematical parameters and initializing Active Inference systems"
                                    })
                                ]
                            })
                        ]
                    })
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_agentcreationwizard.AgentCreationWizard, {
                onAgentCreate: handleAgentCreate,
                onCancel: onClose
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
                className: "p-4 bg-blue-50 border-blue-200",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("h4", {
                        className: "font-semibold text-blue-900 mb-2",
                        children: "Active Inference Integration"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "text-sm text-blue-800 space-y-1",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                                children: [
                                    "• ",
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("strong", {
                                        children: "API Validation:"
                                    }),
                                    " Mathematical constraints verified server-side"
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                                children: [
                                    "• ",
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("strong", {
                                        children: "Belief States:"
                                    }),
                                    " Real-time q(s) distribution with entropy calculation"
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                                children: [
                                    "• ",
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("strong", {
                                        children: "Free Energy:"
                                    }),
                                    " F = Accuracy + Complexity minimization"
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                                children: [
                                    "• ",
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("strong", {
                                        children: "pymdp Compatible:"
                                    }),
                                    " Ready for expert review and production deployment"
                                ]
                            })
                        ]
                    })
                ]
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,
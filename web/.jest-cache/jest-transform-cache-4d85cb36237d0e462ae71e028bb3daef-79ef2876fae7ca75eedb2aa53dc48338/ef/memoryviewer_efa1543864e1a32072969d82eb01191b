4e1e9b164faf8cee73243bb8b1acc6bc
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return MemoryViewer;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _button = require("./ui/button");
const _textarea = require("./ui/textarea");
const _card = require("./ui/card");
const _lucidereact = require("lucide-react");
const _select = require("./ui/select");
const _scrollarea = require("./ui/scroll-area");
const _utils = require("../lib/utils");
const _usetoast = require("../hooks/use-toast");
const _input = require("./ui/input");
const _badge = require("./ui/badge");
const _llmcontext = require("../contexts/llm-context");
const _beliefextraction = require("../lib/belief-extraction");
const _knowledgeexport = require("../lib/knowledge-export");
const _debuglogger = require("../lib/debug-logger");
const logger = (0, _debuglogger.createLogger)("MEMORY-VIEWER");
// Add default tool permissions
const defaultToolPermissions = {
    // Information Access Tools
    internetSearch: false,
    webScraping: false,
    wikipediaAccess: false,
    newsApi: false,
    academicSearch: false,
    documentRetrieval: false,
    // Content Generation & Processing
    imageGeneration: false,
    textSummarization: false,
    translation: false,
    codeExecution: false,
    // Knowledge & Reasoning Tools
    calculator: false,
    knowledgeGraphQuery: false,
    factChecking: false,
    timelineGenerator: false,
    // External Integrations
    weatherData: false,
    mapLocationData: false,
    financialData: false,
    publicDatasets: false,
    // Agent-Specific Tools
    memorySearch: false,
    crossAgentKnowledge: false,
    conversationAnalysis: false
};
function MemoryViewer({ selectedAgent, conversationHistory, onAddKnowledge, onUpdateAgent, onDeleteKnowledge, onUpdateKnowledge, agents, selectedKnowledgeNode = null, onClearSelectedKnowledgeNode = ()=>{}, onSelectAgent }) {
    const [biography, setBiography] = (0, _react.useState)("");
    const [selectedView, setSelectedView] = (0, _react.useState)("biography");
    const { toast } = (0, _usetoast.useToast)();
    // Get LLM context
    const llmContext = (0, _llmcontext.useLLM)();
    const { isProcessing, setIsProcessing } = llmContext;
    // Knowledge state
    const [knowledgeTab, setKnowledgeTab] = (0, _react.useState)("browse");
    const [newKnowledgeTitle, setNewKnowledgeTitle] = (0, _react.useState)("");
    const [newKnowledgeContent, setNewKnowledgeContent] = (0, _react.useState)("");
    const [selectedKnowledge, setSelectedKnowledge] = (0, _react.useState)(null);
    const [editingKnowledge, setEditingKnowledge] = (0, _react.useState)(false);
    const [beliefsPrompt, setBeliefsPrompt] = (0, _react.useState)("Extract factual [[knowledge]], user [[preferences]], and [[research-relevant]] information. Focus on substantive content that would help with research projects and future conversations.");
    const [editedKnowledgeContent, setEditedKnowledgeContent] = (0, _react.useState)("");
    const [editedKnowledgeTitle, setEditedKnowledgeTitle] = (0, _react.useState)("");
    // Knowledge search and filter state
    const [searchQuery, setSearchQuery] = (0, _react.useState)("");
    const [selectedTag, setSelectedTag] = (0, _react.useState)("all_tags");
    const [sortBy, setSortBy] = (0, _react.useState)("newest");
    // Delete confirmation dialog
    const [isDeleteDialogOpen, setIsDeleteDialogOpen] = (0, _react.useState)(false);
    const [knowledgeToDelete, setKnowledgeToDelete] = (0, _react.useState)(null);
    // System prompt state
    const [systemPrompt, setSystemPrompt] = (0, _react.useState)("");
    const [systemPromptName, setSystemPromptName] = (0, _react.useState)("Default");
    // Belief extraction state
    const [extractedBeliefs, setExtractedBeliefs] = (0, _react.useState)([]);
    const [rawBeliefs, setRawBeliefs] = (0, _react.useState)([]);
    const [isExtractingBeliefs, setIsExtractingBeliefs] = (0, _react.useState)(false);
    const [selectedConversationId, setSelectedConversationId] = (0, _react.useState)(null);
    const [extractionStep, setExtractionStep] = (0, _react.useState)("idle");
    const [extractionProgress, setExtractionProgress] = (0, _react.useState)(0);
    const [inferenceTab, setInferenceTab] = (0, _react.useState)("prompt");
    // Add these state variables to the MemoryViewer component, near the other state declarations
    const [toolPermissions, setToolPermissions] = (0, _react.useState)(defaultToolPermissions);
    const [isSavingTools, setIsSavingTools] = (0, _react.useState)(false);
    const [hasToolChanges, setHasToolChanges] = (0, _react.useState)(false);
    // Add a ref to track pending knowledge selection after agent change
    const pendingKnowledgeSelectionRef = (0, _react.useRef)(null);
    const previousAgentIdRef = (0, _react.useRef)(null);
    // Update biography state when selected agent changes
    (0, _react.useEffect)(()=>{
        if (selectedAgent) {
            setBiography(selectedAgent.biography);
            // Only reset selectedKnowledge if we don't have a pending selection
            // and if the agent has actually changed
            if (!pendingKnowledgeSelectionRef.current && previousAgentIdRef.current !== selectedAgent.id) {
                setSelectedKnowledge(null);
            }
            setEditingKnowledge(false);
            // Reset search and filter when changing agents
            setSearchQuery("");
            setSelectedTag("all_tags");
            // Initialize tool permissions with agent's existing permissions or defaults
            setToolPermissions(selectedAgent.toolPermissions || defaultToolPermissions);
            setHasToolChanges(false);
            // Update the previous agent id ref
            previousAgentIdRef.current = selectedAgent.id;
        }
    }, [
        selectedAgent
    ]);
    // Add a new useEffect to handle pending knowledge selection
    (0, _react.useEffect)(()=>{
        // If we have a pending knowledge selection and a selected agent
        if (pendingKnowledgeSelectionRef.current && selectedAgent) {
            // Find the matching knowledge entry in the selected agent's knowledge
            const matchingEntry = selectedAgent.knowledge.find((entry)=>entry.id === pendingKnowledgeSelectionRef.current?.id);
            // If we found a matching entry, select it
            if (matchingEntry) {
                setSelectedKnowledge(matchingEntry);
            } else if (pendingKnowledgeSelectionRef.current.title) {
                const entryByTitle = selectedAgent.knowledge.find((entry)=>entry.title === pendingKnowledgeSelectionRef.current?.title);
                if (entryByTitle) {
                    setSelectedKnowledge(entryByTitle);
                }
            }
            // Clear the pending selection
            pendingKnowledgeSelectionRef.current = null;
        }
    }, [
        selectedAgent
    ]);
    // Update edited knowledge content when selected knowledge changes
    (0, _react.useEffect)(()=>{
        if (selectedKnowledge) {
            setEditedKnowledgeContent(selectedKnowledge.content);
            setEditedKnowledgeTitle(selectedKnowledge.title);
        }
    }, [
        selectedKnowledge
    ]);
    // When a knowledge node is selected from the global graph, switch to the node selection view
    (0, _react.useEffect)(()=>{
        if (selectedKnowledgeNode) {
            setSelectedView("node-selection");
        }
    }, [
        selectedKnowledgeNode
    ]);
    // Get all unique tags from the selected agent's knowledge
    const uniqueTags = (0, _react.useMemo)(()=>{
        if (!selectedAgent) return [];
        const tags = new Set();
        selectedAgent.knowledge.forEach((entry)=>{
            entry.tags.forEach((tag)=>tags.add(tag));
        });
        return Array.from(tags).sort();
    }, [
        selectedAgent
    ]);
    // Filter and sort knowledge entries based on search, tag, and sort criteria
    const filteredKnowledge = (0, _react.useMemo)(()=>{
        if (!selectedAgent) return [];
        let filtered = [
            ...selectedAgent.knowledge
        ];
        // Apply search filter
        if (searchQuery) {
            const query = searchQuery.toLowerCase();
            filtered = filtered.filter((entry)=>entry.title.toLowerCase().includes(query) || entry.content.toLowerCase().includes(query));
        }
        // Apply tag filter
        if (selectedTag && selectedTag !== "all_tags") {
            filtered = filtered.filter((entry)=>entry.tags.includes(selectedTag));
        }
        // Apply sorting
        switch(sortBy){
            case "newest":
                filtered.sort((a, b)=>b.timestamp.getTime() - a.timestamp.getTime());
                break;
            case "oldest":
                filtered.sort((a, b)=>a.timestamp.getTime() - b.timestamp.getTime());
                break;
            case "title":
                filtered.sort((a, b)=>a.title.localeCompare(b.title));
                break;
        }
        return filtered;
    }, [
        selectedAgent,
        searchQuery,
        selectedTag,
        sortBy
    ]);
    // Get relevant conversations for the selected agent
    const relevantConversations = (0, _react.useMemo)(()=>{
        if (!selectedAgent) return [];
        return conversationHistory.filter((conv)=>conv.participants.includes(selectedAgent.id)).sort((a, b)=>b.startTime.getTime() - a.startTime.getTime());
    }, [
        selectedAgent,
        conversationHistory
    ]);
    const handleSaveBiography = ()=>{
        if (!selectedAgent) return;
        onUpdateAgent(selectedAgent.id, {
            biography
        });
        toast({
            title: "Biography updated",
            description: `${selectedAgent.name}'s biography has been updated.`,
            duration: 3000
        });
    };
    const handleAddKnowledge = ()=>{
        if (!selectedAgent || !newKnowledgeTitle.trim() || !newKnowledgeContent.trim()) return;
        const newKnowledge = {
            id: `knowledge-${Date.now()}`,
            title: newKnowledgeTitle,
            content: newKnowledgeContent,
            timestamp: new Date(),
            tags: (0, _utils.extractTagsFromMarkdown)(newKnowledgeContent)
        };
        onAddKnowledge(selectedAgent.id, newKnowledge);
        setNewKnowledgeTitle("");
        setNewKnowledgeContent("");
        toast({
            title: "Knowledge added",
            description: `"${newKnowledgeTitle}" has been added to ${selectedAgent.name}'s knowledge.`,
            duration: 3000
        });
    };
    // Handle belief extraction with progress tracking
    const handleUpdateBeliefs = async ()=>{
        if (!selectedAgent) {
            toast({
                title: "No agent selected",
                description: "Please select an agent first",
                variant: "destructive",
                duration: 3000
            });
            return;
        }
        // Get the selected conversation or the most recent one
        const targetConversation = selectedConversationId ? conversationHistory.find((conv)=>conv.id === selectedConversationId) : conversationHistory.filter((conv)=>conv.participants.includes(selectedAgent.id)).sort((a, b)=>b.startTime.getTime() - a.startTime.getTime())[0];
        if (!targetConversation) {
            toast({
                title: "No conversation available",
                description: "There are no conversations for this agent to analyze",
                variant: "destructive",
                duration: 3000
            });
            return;
        }
        setIsExtractingBeliefs(true);
        setExtractionStep("extracting");
        setExtractionProgress(10);
        setInferenceTab("results");
        try {
            // Format the conversation for analysis
            const conversationText = targetConversation.messages.map((msg)=>{
                const senderName = msg.senderId === "user" ? "User" : agents.find((a)=>a.id === msg.senderId)?.name || "Unknown";
                return `${senderName}: ${msg.content}`;
            }).join("\n\n");
            (0, _debuglogger.debugLog)("Formatted conversation for belief extraction:", conversationText);
            // FIXED: Use the client's extractBeliefs method directly instead of calling the function
            // with settings that don't contain the API key
            setExtractionProgress(30);
            try {
                // Call the client's extractBeliefs method which handles API key retrieval
                if (!llmContext.client) {
                    throw new Error("LLM client is not available");
                }
                const rawBeliefsResponse = await llmContext.client.extractBeliefs(conversationText, selectedAgent.name, beliefsPrompt);
                // Parse the response - the client returns a string, but we need to parse it into beliefs
                const rawBeliefs = (0, _beliefextraction.parseBeliefs)(rawBeliefsResponse);
                (0, _debuglogger.debugLog)("Raw beliefs extracted:", rawBeliefs);
                setRawBeliefs(rawBeliefs);
                setExtractionProgress(60);
                setExtractionStep("refining");
                // Now refine the beliefs using the client's method
                try {
                    // Get the existing knowledge to check for duplicates
                    const existingKnowledge = selectedAgent.knowledge;
                    // Call the refine method on the client
                    const refinedResponse = await llmContext.client.generateResponse(// System prompt for refinement
                    `You are an AI assistant that refines and enhances extracted beliefs for a knowledge base.
Your task is to analyze each belief, rate its accuracy and relevance, categorize it, and suggest a title.

IMPORTANT: Maintain the Obsidian-style markdown format with [[double brackets]] around key concepts.`, // User prompt with the raw beliefs
                    `Below are beliefs extracted from a conversation.
Refine these beliefs according to these priorities: ${beliefsPrompt}

EXTRACTED BELIEFS:
${rawBeliefs.map((belief, index)=>`${index + 1}. ${belief.content} (${belief.confidence})`).join("\n")}

PRIORITIZE:
1. Factual knowledge about topics discussed (not about the agents themselves)
2. User preferences and research goals
3. Information that would be valuable for future reference

DEPRIORITIZE OR REMOVE:
1. Observations about the agent's behavior or willingness to help
2. Generic statements without specific information
3. Low-value or redundant information

For each belief, provide:
1. Accuracy (1-5 scale, where 5 is highest)
2. Relevance (1-5 scale, where 5 is highest) - rate higher for factual knowledge and user preferences
3. Category (Fact, Opinion, Preference, Relationship, or Other)
4. A concise title for the knowledge entry
5. Refined content (maintain or enhance the Obsidian-style [[tags]])
6. Set "selected": false for any beliefs that are about the agent itself rather than substantive knowledge

Format your response as a JSON array with one object per belief:
[
 {
   "originalIndex": 1,
   "accuracy": 4,
   "relevance": 5,
   "category": "Fact",
   "title": "Example Title",
   "refined_content": "Refined belief with [[tags]]",
   "confidence": "High",
   "selected": true
 },
 ...
]`);
                    // Parse the refined beliefs from the response
                    const refined = (0, _beliefextraction.parseRefinedBeliefs)(refinedResponse, rawBeliefs);
                    (0, _debuglogger.debugLog)("Refined beliefs:", refined);
                    if (refined && refined.length > 0) {
                        setExtractedBeliefs(refined);
                        setExtractionProgress(100);
                        setExtractionStep("complete");
                        toast({
                            title: "Beliefs extracted",
                            description: `Found ${refined.length} potential new beliefs for ${selectedAgent.name}`,
                            duration: 3000
                        });
                    } else {
                        throw new Error("No beliefs could be extracted from this conversation");
                    }
                } catch (refineError) {
                    console.error("Error refining beliefs:", refineError);
                    toast({
                        title: "Error refining beliefs",
                        description: "The system encountered an error while processing the extracted beliefs. Please try again.",
                        variant: "destructive",
                        duration: 5000
                    });
                    setExtractionStep("idle");
                }
            } catch (extractError) {
                console.error("Error extracting raw beliefs:", extractError);
                toast({
                    title: "Error extracting beliefs",
                    description: "The system encountered an error while analyzing the conversation. Please try again.",
                    variant: "destructive",
                    duration: 5000
                });
                setExtractionStep("idle");
            }
        } catch (error) {
            console.error("Error in belief extraction process:", error);
            toast({
                title: "Error extracting beliefs",
                description: error instanceof Error ? error.message : "An unknown error occurred",
                variant: "destructive",
                duration: 5000
            });
            setExtractionStep("idle");
        } finally{
            setIsExtractingBeliefs(false);
        }
    };
    // Handle toggling belief selection
    const handleToggleBelief = (index)=>{
        setExtractedBeliefs((prev)=>prev.map((belief, i)=>i === index ? {
                    ...belief,
                    selected: belief.selected === false ? true : false
                } : belief));
    };
    // Handle adding selected beliefs to knowledge
    const handleAddSelectedBeliefs = async ()=>{
        if (!selectedAgent) return;
        const selectedBeliefs = extractedBeliefs.filter((belief)=>belief.selected !== false);
        logger.info(`Selected beliefs count: ${selectedBeliefs.length}`, selectedBeliefs);
        if (selectedBeliefs.length === 0) {
            toast({
                title: "No beliefs selected",
                description: "Please select at least one belief to add to knowledge",
                variant: "destructive",
                duration: 3000
            });
            return;
        }
        try {
            // Create knowledge entries from selected beliefs
            const knowledgeEntries = selectedBeliefs.map((belief)=>({
                    id: `knowledge-${Date.now()}-${Math.random().toString(36).substring(2, 7)}`,
                    title: belief.title,
                    content: belief.refined_content,
                    timestamp: new Date(),
                    tags: belief.tags
                }));
            logger.info(`Adding ${knowledgeEntries.length} knowledge entries to agent's knowledge`);
            // Add each entry to the agent's knowledge
            for (const entry of knowledgeEntries){
                logger.info(`Adding entry: ${entry.title}`);
                onAddKnowledge(selectedAgent.id, entry);
            }
            // Clear extracted beliefs
            setExtractedBeliefs([]);
            setRawBeliefs([]);
            setExtractionStep("idle");
            toast({
                title: "Knowledge updated",
                description: `Added ${knowledgeEntries.length} new knowledge entries to ${selectedAgent.name}'s knowledge`,
                duration: 3000
            });
            // Switch to browse tab
            setKnowledgeTab("browse");
        } catch (error) {
            console.error("Error adding beliefs to knowledge:", error);
            toast({
                title: "Error adding beliefs",
                description: error instanceof Error ? error.message : "An unknown error occurred",
                variant: "destructive",
                duration: 5000
            });
        }
    };
    const handleSaveKnowledgeChanges = ()=>{
        if (!selectedAgent || !selectedKnowledge) return;
        // Extract tags from the updated content
        const updatedTags = (0, _utils.extractTagsFromMarkdown)(editedKnowledgeContent);
        // Create the updates object
        const updates = {
            title: editedKnowledgeTitle,
            content: editedKnowledgeContent,
            tags: updatedTags
        };
        // Call the update function
        onUpdateKnowledge(selectedAgent.id, selectedKnowledge.id, updates);
        // Update the local state
        setSelectedKnowledge({
            ...selectedKnowledge,
            ...updates
        });
        // Exit editing mode
        setEditingKnowledge(false);
        toast({
            title: "Knowledge updated",
            description: "Knowledge entry has been updated successfully.",
            duration: 3000
        });
    };
    const handleDeleteKnowledge = ()=>{
        if (!selectedAgent || !knowledgeToDelete) return;
        // Call the delete function
        onDeleteKnowledge(selectedAgent.id, knowledgeToDelete.id);
        // Clear the selected knowledge if it's the one being deleted
        if (selectedKnowledge?.id === knowledgeToDelete.id) {
            setSelectedKnowledge(null);
        }
        // Close the dialog
        setIsDeleteDialogOpen(false);
        setKnowledgeToDelete(null);
        toast({
            title: "Knowledge deleted",
            description: `"${knowledgeToDelete.title}" has been deleted from ${selectedAgent.name}'s knowledge.`,
            duration: 3000
        });
    };
    const handleSelectAgentForKnowledge = (agent)=>{
        // Find the specific knowledge entry if we're looking at an entry
        if (selectedKnowledgeNode?.type === "entry") {
            // For consolidated entries, check by title
            const entry = agent.knowledge.find((k)=>k.title === selectedKnowledgeNode.title);
            if (entry) {
                // Store the entry we want to select in the ref
                pendingKnowledgeSelectionRef.current = entry;
                // Select the agent if it's not already selected
                if (onSelectAgent && selectedAgent?.id !== agent.id) {
                    onSelectAgent(agent);
                } else if (selectedAgent?.id === agent.id) {
                    // If the agent is already selected, we can set the knowledge directly
                    setSelectedKnowledge(entry);
                }
                setKnowledgeTab("browse");
                setSelectedView("knowledge");
                onClearSelectedKnowledgeNode();
            }
        } else if (selectedKnowledgeNode?.type === "tag") {
            setSelectedView("knowledge");
            setKnowledgeTab("browse");
            setSelectedTag(selectedKnowledgeNode.title);
            onClearSelectedKnowledgeNode();
            // Select the agent if it's not already selected
            if (onSelectAgent && selectedAgent?.id !== agent.id) {
                onSelectAgent(agent);
            }
        }
    };
    // Add a new function to handle clicking on a specific knowledge entry
    const handleSelectKnowledgeEntry = (agent, entry, event)=>{
        // Prevent the click from propagating to the agent card
        event.stopPropagation();
        // Store the entry we want to select in the ref
        pendingKnowledgeSelectionRef.current = entry;
        // Select the agent using the onSelectAgent prop
        if (onSelectAgent && selectedAgent?.id !== agent.id) {
            onSelectAgent(agent);
        } else if (selectedAgent?.id === agent.id) {
            // If the agent is already selected, we can set the knowledge directly
            setSelectedKnowledge(entry);
        }
        // Switch to the knowledge view
        setKnowledgeTab("browse");
        setSelectedView("knowledge");
        // Clear the selected knowledge node
        onClearSelectedKnowledgeNode();
    };
    const getAgentsWithSelectedNode = ()=>{
        if (!selectedKnowledgeNode) return [];
        return agents.filter((agent)=>{
            if (selectedKnowledgeNode.type === "entry") {
                // For consolidated entries, check by title
                return agent.knowledge.some((entry)=>entry.title === selectedKnowledgeNode.title);
            } else if (selectedKnowledgeNode.type === "tag") {
                return agent.knowledge.some((entry)=>entry.tags.includes(selectedKnowledgeNode.title));
            }
            return false;
        });
    };
    // Get knowledge entries that match the selected tag
    const getEntriesWithTag = (agent, tag)=>{
        return agent.knowledge.filter((entry)=>entry.tags.includes(tag));
    };
    // Get knowledge entries that match the selected title
    const getEntriesWithTitle = (agent, title)=>{
        return agent.knowledge.filter((entry)=>entry.title === title);
    };
    // Clear all search and filter criteria
    const clearFilters = ()=>{
        setSearchQuery("");
        setSelectedTag("all_tags");
        setSortBy("newest");
    };
    // Helper function to render markdown with highlighted tags
    const renderMarkdownWithTags = (content)=>{
        // Replace [[tags]] with highlighted spans that have a data-tag attribute
        return content.replace(/\[\[(.*?)\]\]/g, '<span class="bg-purple-500/20 text-purple-900 px-1 rounded cursor-pointer hover:bg-purple-500/30 transition-colors" data-tag="$1">[[<span class="font-medium">$1</span>]]</span>');
    };
    // Handle saving system prompt
    const handleSaveSystemPrompt = ()=>{
        if (!selectedAgent || !systemPrompt.trim()) {
            toast({
                title: "Cannot save system prompt",
                description: "Agent or prompt not available",
                variant: "destructive",
                duration: 3000
            });
            return;
        }
        setIsProcessing(true);
        // Simulate a delay
        setTimeout(()=>{
            try {
                toast({
                    title: "System prompt saved",
                    description: `System prompt "${systemPromptName}" has been saved for ${selectedAgent.name}.`,
                    duration: 3000
                });
            } catch (error) {
                console.error("Error in handleSaveSystemPrompt:", error);
                toast({
                    title: "Error saving system prompt",
                    description: error instanceof Error ? error.message : "An unknown error occurred",
                    variant: "destructive",
                    duration: 5000
                });
            } finally{
                setIsProcessing(false);
            }
        }, 1000);
    };
    // Add this function inside the MemoryViewer component
    const handleTagClick = (e)=>{
        // Check if the clicked element or its parent has a data-tag attribute
        const target = e.target;
        const tagElement = target.closest("[data-tag]");
        if (tagElement) {
            const tag = tagElement.getAttribute("data-tag");
            if (tag) {
                setSelectedTag(tag);
                setSelectedKnowledge(null);
                setKnowledgeTab("browse");
            }
        }
    };
    // Add these handler functions for tool permissions
    const handleToolChange = (toolKey, checked)=>{
        setToolPermissions((prev)=>{
            const updated = {
                ...prev,
                [toolKey]: checked
            };
            // Mark that we have unsaved changes
            setHasToolChanges(true);
            return updated;
        });
    };
    const handleSaveToolSettings = ()=>{
        if (!selectedAgent) return;
        setIsSavingTools(true);
        // Update the agent with new tool permissions
        onUpdateAgent(selectedAgent.id, {
            toolPermissions
        });
        // Reset the changes flag
        setHasToolChanges(false);
        // Show success message
        toast({
            title: "Tool settings saved",
            description: `Tool permissions for ${selectedAgent.name} have been updated.`,
            duration: 3000
        });
        setTimeout(()=>{
            setIsSavingTools(false);
        }, 500);
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: "flex flex-col h-full overflow-hidden",
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "p-4 border-b border-border",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("h2", {
                    className: "text-xl font-bold text-white",
                    children: "Memory Viewer"
                })
            }),
            selectedKnowledgeNode && selectedView === "node-selection" ? /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "flex-1 flex flex-col",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "px-4 pt-4 flex items-center",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                                variant: "ghost",
                                size: "sm",
                                onClick: ()=>{
                                    onClearSelectedKnowledgeNode();
                                    setSelectedView("biography");
                                },
                                className: "mr-2 bg-purple-900/30 text-white hover:bg-purple-800/50 hover:text-white",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.ArrowLeft, {
                                        size: 16,
                                        className: "mr-1"
                                    }),
                                    "Back"
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("h3", {
                                className: "text-lg font-semibold text-white",
                                children: [
                                    selectedKnowledgeNode.type === "entry" ? "Knowledge Entry" : "Tag",
                                    ": ",
                                    selectedKnowledgeNode.title
                                ]
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "flex-1 p-4",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
                            className: "h-full",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardHeader, {
                                    className: "pb-2",
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardTitle, {
                                        className: "text-base",
                                        children: [
                                            "Agents with",
                                            " ",
                                            selectedKnowledgeNode.type === "entry" ? "this knowledge" : `"${selectedKnowledgeNode.title}" tag`
                                        ]
                                    })
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardContent, {
                                    className: "h-[calc(100%-60px)]",
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_scrollarea.ScrollArea, {
                                        className: "h-full pr-4",
                                        children: getAgentsWithSelectedNode().length > 0 ? /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                            className: "space-y-4",
                                            children: getAgentsWithSelectedNode().map((agent)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    className: "p-4 border rounded-md cursor-pointer hover:bg-muted transition-colors",
                                                    onClick: ()=>handleSelectAgentForKnowledge(agent),
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                            className: "flex items-center gap-2 mb-2",
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                    className: "w-4 h-4 rounded-full",
                                                                    style: {
                                                                        backgroundColor: agent.color
                                                                    }
                                                                }),
                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                                                                    className: "font-medium",
                                                                    children: agent.name
                                                                })
                                                            ]
                                                        }),
                                                        selectedKnowledgeNode.type === "tag" ? /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                            className: "mt-2",
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                                                                    className: "text-sm text-muted-foreground mb-1",
                                                                    children: [
                                                                        getEntriesWithTag(agent, selectedKnowledgeNode.title).length,
                                                                        " ",
                                                                        "entries with this tag:"
                                                                    ]
                                                                }),
                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                    className: "space-y-1 ml-2",
                                                                    children: getEntriesWithTag(agent, selectedKnowledgeNode.title).map((entry)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                            className: "text-sm py-1 px-2 rounded hover:bg-purple-800/30 cursor-pointer flex items-center",
                                                                            onClick: (e)=>handleSelectKnowledgeEntry(agent, entry, e),
                                                                            children: [
                                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                                    className: "w-1 h-1 bg-purple-400 rounded-full mr-2"
                                                                                }),
                                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                                    children: entry.title
                                                                                })
                                                                            ]
                                                                        }, entry.id))
                                                                })
                                                            ]
                                                        }) : /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                            className: "mt-2",
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                                                                    className: "text-sm text-muted-foreground mb-1",
                                                                    children: [
                                                                        getEntriesWithTitle(agent, selectedKnowledgeNode.title).length,
                                                                        " ",
                                                                        "entries with this title:"
                                                                    ]
                                                                }),
                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                    className: "space-y-1 ml-2",
                                                                    children: getEntriesWithTitle(agent, selectedKnowledgeNode.title).map((entry)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                            className: "text-sm py-1 px-2 rounded hover:bg-purple-800/30 cursor-pointer flex items-center",
                                                                            onClick: (e)=>handleSelectKnowledgeEntry(agent, entry, e),
                                                                            children: [
                                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                                    className: "w-1 h-1 bg-purple-400 rounded-full mr-2"
                                                                                }),
                                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                                                                    children: [
                                                                                        "Created:",
                                                                                        " ",
                                                                                        (0, _utils.formatTimestamp)(entry.timestamp)
                                                                                    ]
                                                                                })
                                                                            ]
                                                                        }, entry.id))
                                                                })
                                                            ]
                                                        })
                                                    ]
                                                }, agent.id))
                                        }) : /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "flex items-center justify-center h-full text-muted-foreground",
                                            children: [
                                                "No agents have this",
                                                " ",
                                                selectedKnowledgeNode.type === "entry" ? "knowledge entry" : "tag",
                                                "."
                                            ]
                                        })
                                    })
                                })
                            ]
                        })
                    })
                ]
            }) : selectedAgent ? /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "flex-1 flex flex-col",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "px-4 pt-4",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "flex justify-between items-center",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_select.Select, {
                                    value: selectedView,
                                    onValueChange: (value)=>{
                                        setSelectedView(value);
                                    },
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectTrigger, {
                                            className: "w-full bg-purple-950 border-purple-700 text-white",
                                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectValue, {
                                                placeholder: "Select view"
                                            })
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_select.SelectContent, {
                                            className: "bg-purple-950 border-purple-700 text-white",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                                    value: "biography",
                                                    children: "Biography"
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                                    value: "conversations",
                                                    children: "Conversations"
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                                    value: "knowledge",
                                                    children: "Knowledge"
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                                    value: "graph",
                                                    children: "Graph"
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                                    value: "system",
                                                    children: "System Prompt"
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                                    value: "tools",
                                                    children: "Tools"
                                                })
                                            ]
                                        })
                                    ]
                                }),
                                selectedAgent && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                                    onClick: ()=>(0, _knowledgeexport.exportAgentKnowledge)(selectedAgent),
                                    className: "ml-2 bg-purple-700 hover:bg-purple-600 text-white",
                                    size: "sm",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Save, {
                                            size: 16,
                                            className: "mr-2"
                                        }),
                                        "Export Knowledge"
                                    ]
                                })
                            ]
                        })
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "flex-1 p-4 pt-2 overflow-hidden",
                        children: [
                            selectedView === "biography" && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardHeader, {
                                        className: "pb-2",
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardTitle, {
                                            className: "text-base",
                                            children: [
                                                selectedAgent.name,
                                                "'s Profile"
                                            ]
                                        })
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardContent, {
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "space-y-4",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    className: "space-y-2",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                                            htmlFor: "agent-biography",
                                                            className: "text-sm font-medium",
                                                            children: "Biography"
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_textarea.Textarea, {
                                                            id: "agent-biography",
                                                            value: biography,
                                                            onChange: (e)=>setBiography(e.target.value),
                                                            className: "min-h-[200px]",
                                                            placeholder: "Enter agent biography..."
                                                        })
                                                    ]
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                                                    onClick: handleSaveBiography,
                                                    className: "bg-purple-700 hover:bg-purple-600 text-white",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Save, {
                                                            size: 16,
                                                            className: "mr-2"
                                                        }),
                                                        "Save Biography"
                                                    ]
                                                })
                                            ]
                                        })
                                    })
                                ]
                            }),
                            selectedView === "conversations" && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
                                className: "h-full flex flex-col",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardHeader, {
                                        className: "pb-2 flex-shrink-0",
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardTitle, {
                                            className: "text-base",
                                            children: "Conversation History"
                                        })
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardContent, {
                                        className: "flex-1 p-0 overflow-hidden",
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_scrollarea.ScrollArea, {
                                            className: "h-full py-4 px-6 conversation-history-scrollbar",
                                            style: {
                                                height: "calc(100vh - 220px)"
                                            },
                                            children: conversationHistory.filter((conv)=>conv.participants.includes(selectedAgent.id)).length > 0 ? /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                className: "space-y-4",
                                                children: conversationHistory.filter((conv)=>conv.participants.includes(selectedAgent.id)).sort((a, b)=>b.startTime.getTime() - a.startTime.getTime()).map((conv)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
                                                        className: "p-4",
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                className: "mb-2",
                                                                children: [
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                        className: "flex justify-between items-center",
                                                                        children: [
                                                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("h3", {
                                                                                className: "font-medium",
                                                                                children: [
                                                                                    "Conversation",
                                                                                    " ",
                                                                                    (0, _utils.formatTimestamp)(conv.startTime)
                                                                                ]
                                                                            }),
                                                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                                                                className: "text-xs text-muted-foreground",
                                                                                children: [
                                                                                    conv.messages.length,
                                                                                    " messages"
                                                                                ]
                                                                            })
                                                                        ]
                                                                    }),
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                        className: "text-xs text-muted-foreground mt-1",
                                                                        children: [
                                                                            "Participants:",
                                                                            " ",
                                                                            conv.participants.map((id)=>agents.find((a)=>a.id === id)?.name || "Unknown").join(", ")
                                                                        ]
                                                                    })
                                                                ]
                                                            }),
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                className: "border-t pt-2 mt-2",
                                                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                    className: "max-h-32 overflow-y-auto text-sm",
                                                                    children: conv.messages.length > 0 ? conv.messages.map((msg)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                            className: "mb-2",
                                                                            children: [
                                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                                    className: "flex items-center gap-1",
                                                                                    children: [
                                                                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                                                                            className: "font-medium",
                                                                                            children: [
                                                                                                msg.senderId === "user" ? "You" : agents.find((a)=>a.id === msg.senderId)?.name || "Unknown",
                                                                                                ":"
                                                                                            ]
                                                                                        }),
                                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                                            className: "text-xs text-muted-foreground",
                                                                                            children: new Date(msg.timestamp).toLocaleTimeString()
                                                                                        })
                                                                                    ]
                                                                                }),
                                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                                                    className: "text-sm",
                                                                                    children: msg.content
                                                                                })
                                                                            ]
                                                                        }, msg.id)) : /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                                        className: "text-muted-foreground",
                                                                        children: "No messages in this conversation."
                                                                    })
                                                                })
                                                            })
                                                        ]
                                                    }, conv.id))
                                            }) : /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                className: "flex items-center justify-center h-full text-muted-foreground",
                                                children: "No conversation history for this agent."
                                            })
                                        })
                                    })
                                ]
                            }),
                            selectedView === "knowledge" && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
                                className: "h-full",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardHeader, {
                                        className: "pb-2",
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardTitle, {
                                            className: "text-base",
                                            children: "Knowledge Base"
                                        })
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardContent, {
                                        className: "h-[calc(100%-60px)] p-0",
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "h-full flex flex-col",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                    className: "px-6 py-2 border-b",
                                                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_select.Select, {
                                                        value: knowledgeTab,
                                                        onValueChange: setKnowledgeTab,
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectTrigger, {
                                                                className: "w-full bg-purple-950 border-purple-700 text-white",
                                                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectValue, {
                                                                    placeholder: "Select view"
                                                                })
                                                            }),
                                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_select.SelectContent, {
                                                                className: "bg-purple-950 border-purple-700 text-white",
                                                                children: [
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                                                        value: "browse",
                                                                        children: "Browse"
                                                                    }),
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                                                        value: "add",
                                                                        children: "Add Knowledge"
                                                                    }),
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                                                        value: "inference",
                                                                        children: "Inference"
                                                                    })
                                                                ]
                                                            })
                                                        ]
                                                    })
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    className: "flex-1 overflow-hidden",
                                                    children: [
                                                        knowledgeTab === "browse" && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                            className: "h-full p-0 m-0",
                                                            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                className: "grid grid-cols-3 h-full",
                                                                children: [
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                        className: "col-span-1 border-r h-full",
                                                                        children: [
                                                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                                className: "p-4 border-b",
                                                                                children: [
                                                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                                        className: "flex items-center gap-2 mb-2",
                                                                                        children: [
                                                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Search, {
                                                                                                size: 14,
                                                                                                className: "text-muted-foreground"
                                                                                            }),
                                                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_input.Input, {
                                                                                                placeholder: "Search knowledge...",
                                                                                                value: searchQuery,
                                                                                                onChange: (e)=>setSearchQuery(e.target.value),
                                                                                                className: "h-8"
                                                                                            }),
                                                                                            (searchQuery || selectedTag || sortBy !== "newest") && /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                                                                                variant: "ghost",
                                                                                                size: "sm",
                                                                                                onClick: clearFilters,
                                                                                                className: "h-8 w-8 p-0",
                                                                                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.X, {
                                                                                                    size: 14
                                                                                                })
                                                                                            })
                                                                                        ]
                                                                                    }),
                                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                                        className: "flex flex-wrap gap-2 mb-2",
                                                                                        children: uniqueTags.length > 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_select.Select, {
                                                                                            value: selectedTag,
                                                                                            onValueChange: setSelectedTag,
                                                                                            children: [
                                                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectTrigger, {
                                                                                                    className: "h-8 w-full bg-purple-950 border-purple-700 text-white",
                                                                                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectValue, {
                                                                                                        placeholder: "Filter by tag"
                                                                                                    })
                                                                                                }),
                                                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_select.SelectContent, {
                                                                                                    className: "bg-purple-950 border-purple-700 text-white",
                                                                                                    children: [
                                                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                                                                                            value: "all_tags",
                                                                                                            children: "All tags"
                                                                                                        }),
                                                                                                        uniqueTags.map((tag)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                                                                                                value: tag,
                                                                                                                children: tag
                                                                                                            }, tag))
                                                                                                    ]
                                                                                                })
                                                                                            ]
                                                                                        })
                                                                                    }),
                                                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                                        className: "flex justify-between items-center",
                                                                                        children: [
                                                                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                                                                                className: "text-xs text-muted-foreground",
                                                                                                children: [
                                                                                                    filteredKnowledge.length,
                                                                                                    " entries"
                                                                                                ]
                                                                                            }),
                                                                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_select.Select, {
                                                                                                value: sortBy,
                                                                                                onValueChange: (value)=>setSortBy(value),
                                                                                                children: [
                                                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectTrigger, {
                                                                                                        className: "h-7 text-xs w-28 bg-purple-950 border-purple-700 text-white",
                                                                                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectValue, {
                                                                                                            placeholder: "Sort by"
                                                                                                        })
                                                                                                    }),
                                                                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_select.SelectContent, {
                                                                                                        className: "bg-purple-950 border-purple-700 text-white",
                                                                                                        children: [
                                                                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                                                                                                value: "newest",
                                                                                                                children: "Newest"
                                                                                                            }),
                                                                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                                                                                                value: "oldest",
                                                                                                                children: "Oldest"
                                                                                                            }),
                                                                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                                                                                                value: "title",
                                                                                                                children: "Title"
                                                                                                            })
                                                                                                        ]
                                                                                                    })
                                                                                                ]
                                                                                            })
                                                                                        ]
                                                                                    })
                                                                                ]
                                                                            }),
                                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_scrollarea.ScrollArea, {
                                                                                className: "p-4",
                                                                                type: "always",
                                                                                style: {
                                                                                    height: "calc(100vh - 300px)",
                                                                                    maxHeight: "calc(100vh - 300px)",
                                                                                    overflow: "hidden"
                                                                                },
                                                                                children: filteredKnowledge.length > 0 ? /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                                    className: "space-y-2",
                                                                                    children: filteredKnowledge.map((k)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                                            className: `p-2 rounded border cursor-pointer ${selectedKnowledge?.id === k.id ? "border-primary bg-primary/10" : "border-border hover:bg-muted"}`,
                                                                                            onClick: ()=>{
                                                                                                setSelectedKnowledge(k);
                                                                                                setEditingKnowledge(false);
                                                                                            },
                                                                                            children: [
                                                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("h4", {
                                                                                                    className: "font-medium text-sm truncate",
                                                                                                    children: k.title
                                                                                                }),
                                                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                                                                    className: "text-xs text-muted-foreground mt-1",
                                                                                                    children: (0, _utils.formatTimestamp)(k.timestamp)
                                                                                                }),
                                                                                                k.tags.length > 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                                                    className: "flex flex-wrap gap-1 mt-1",
                                                                                                    children: [
                                                                                                        k.tags.slice(0, 2).map((tag)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_badge.Badge, {
                                                                                                                variant: "secondary",
                                                                                                                className: "text-xs py-0 h-5",
                                                                                                                children: tag
                                                                                                            }, tag)),
                                                                                                        k.tags.length > 2 && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_badge.Badge, {
                                                                                                            variant: "outline",
                                                                                                            className: "text-xs py-0 h-5",
                                                                                                            children: [
                                                                                                                "+",
                                                                                                                k.tags.length - 2
                                                                                                            ]
                                                                                                        })
                                                                                                    ]
                                                                                                })
                                                                                            ]
                                                                                        }, k.id))
                                                                                }) : /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                                    className: "text-center text-muted-foreground py-8",
                                                                                    children: selectedAgent.knowledge.length > 0 ? "No matching knowledge entries found." : "No knowledge entries yet."
                                                                                })
                                                                            })
                                                                        ]
                                                                    }),
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                        className: "col-span-2 h-full",
                                                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_scrollarea.ScrollArea, {
                                                                            className: "p-4",
                                                                            type: "always",
                                                                            style: {
                                                                                height: "calc(100vh - 300px)",
                                                                                maxHeight: "calc(100vh - 300px)",
                                                                                overflow: "hidden"
                                                                            },
                                                                            children: selectedKnowledge ? /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                                className: "flex flex-col",
                                                                                children: [
                                                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                                        className: "flex justify-between items-center mb-2",
                                                                                        children: [
                                                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                                                                                                className: "font-medium",
                                                                                                children: selectedKnowledge.title
                                                                                            }),
                                                                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                                                className: "flex gap-2",
                                                                                                children: [
                                                                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                                                                                                        variant: "outline",
                                                                                                        size: "sm",
                                                                                                        onClick: ()=>setEditingKnowledge(!editingKnowledge),
                                                                                                        className: "bg-purple-900/50 border-purple-500 text-white hover:bg-purple-800 hover:text-white",
                                                                                                        children: [
                                                                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Edit, {
                                                                                                                size: 14,
                                                                                                                className: "mr-1"
                                                                                                            }),
                                                                                                            editingKnowledge ? "Cancel" : "Edit"
                                                                                                        ]
                                                                                                    }),
                                                                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                                                                                                        variant: "destructive",
                                                                                                        size: "sm",
                                                                                                        onClick: ()=>{
                                                                                                            setKnowledgeToDelete(selectedKnowledge);
                                                                                                            setIsDeleteDialogOpen(true);
                                                                                                        },
                                                                                                        children: [
                                                                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Trash, {
                                                                                                                size: 14,
                                                                                                                className: "mr-1"
                                                                                                            }),
                                                                                                            "Delete"
                                                                                                        ]
                                                                                                    })
                                                                                                ]
                                                                                            })
                                                                                        ]
                                                                                    }),
                                                                                    editingKnowledge ? /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                                        className: "flex flex-col",
                                                                                        children: [
                                                                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                                                className: "mb-4",
                                                                                                children: [
                                                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                                                                                        htmlFor: "edit-knowledge-title",
                                                                                                        className: "text-sm font-medium block mb-1",
                                                                                                        children: "Title"
                                                                                                    }),
                                                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_input.Input, {
                                                                                                        id: "edit-knowledge-title",
                                                                                                        value: editedKnowledgeTitle,
                                                                                                        onChange: (e)=>setEditedKnowledgeTitle(e.target.value),
                                                                                                        placeholder: "Knowledge title..."
                                                                                                    })
                                                                                                ]
                                                                                            }),
                                                                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                                                className: "flex-1 flex flex-col",
                                                                                                children: [
                                                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                                                                                        htmlFor: "edit-knowledge-content",
                                                                                                        className: "text-sm font-medium block mb-1",
                                                                                                        children: "Content"
                                                                                                    }),
                                                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_textarea.Textarea, {
                                                                                                        id: "edit-knowledge-content",
                                                                                                        value: editedKnowledgeContent,
                                                                                                        onChange: (e)=>setEditedKnowledgeContent(e.target.value),
                                                                                                        className: "flex-1 min-h-[200px]",
                                                                                                        placeholder: "Knowledge content..."
                                                                                                    })
                                                                                                ]
                                                                                            }),
                                                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                                                className: "mt-2 text-xs text-muted-foreground",
                                                                                                children: "Use [[tag]] syntax to add tags to your knowledge."
                                                                                            }),
                                                                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                                                                                                className: "mt-4 bg-purple-700 hover:bg-purple-600 text-white",
                                                                                                onClick: handleSaveKnowledgeChanges,
                                                                                                children: [
                                                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Save, {
                                                                                                        size: 16,
                                                                                                        className: "mr-2"
                                                                                                    }),
                                                                                                    "Save Changes"
                                                                                                ]
                                                                                            })
                                                                                        ]
                                                                                    }) : /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                                        children: [
                                                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                                                className: "prose max-w-none",
                                                                                                dangerouslySetInnerHTML: {
                                                                                                    __html: renderMarkdownWithTags(selectedKnowledge.content)
                                                                                                },
                                                                                                onClick: handleTagClick
                                                                                            }),
                                                                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                                                                                                className: "text-xs text-muted-foreground mt-2",
                                                                                                children: [
                                                                                                    "Created:",
                                                                                                    " ",
                                                                                                    (0, _utils.formatTimestamp)(selectedKnowledge.timestamp)
                                                                                                ]
                                                                                            })
                                                                                        ]
                                                                                    })
                                                                                ]
                                                                            }) : /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                                className: "text-center text-muted-foreground py-8",
                                                                                children: "Select a knowledge entry to view its contents."
                                                                            })
                                                                        })
                                                                    })
                                                                ]
                                                            })
                                                        }),
                                                        knowledgeTab === "add" && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                            className: "p-4",
                                                            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                className: "space-y-4",
                                                                children: [
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                        className: "space-y-2",
                                                                        children: [
                                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                                                                htmlFor: "new-knowledge-title",
                                                                                className: "text-sm font-medium",
                                                                                children: "Title"
                                                                            }),
                                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_input.Input, {
                                                                                id: "new-knowledge-title",
                                                                                value: newKnowledgeTitle,
                                                                                onChange: (e)=>setNewKnowledgeTitle(e.target.value),
                                                                                placeholder: "Knowledge title..."
                                                                            })
                                                                        ]
                                                                    }),
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                        className: "space-y-2",
                                                                        children: [
                                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                                                                htmlFor: "new-knowledge-content",
                                                                                className: "text-sm font-medium",
                                                                                children: "Content"
                                                                            }),
                                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_textarea.Textarea, {
                                                                                id: "new-knowledge-content",
                                                                                value: newKnowledgeContent,
                                                                                onChange: (e)=>setNewKnowledgeContent(e.target.value),
                                                                                className: "min-h-[200px]",
                                                                                placeholder: "Knowledge content..."
                                                                            }),
                                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                                className: "text-xs text-muted-foreground",
                                                                                children: "Use [[tag]] syntax to add tags to your knowledge."
                                                                            })
                                                                        ]
                                                                    }),
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                                                                        onClick: handleAddKnowledge,
                                                                        className: "bg-purple-700 hover:bg-purple-600 text-white",
                                                                        children: [
                                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Save, {
                                                                                size: 16,
                                                                                className: "mr-2"
                                                                            }),
                                                                            "Add Knowledge"
                                                                        ]
                                                                    })
                                                                ]
                                                            })
                                                        }),
                                                        knowledgeTab === "inference" && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                            className: "flex flex-col h-full",
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                    className: "px-6 py-2 border-b",
                                                                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_select.Select, {
                                                                        value: inferenceTab,
                                                                        onValueChange: (value)=>setInferenceTab(value),
                                                                        children: [
                                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectTrigger, {
                                                                                className: "w-full bg-purple-950 border-purple-700 text-white",
                                                                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectValue, {
                                                                                    placeholder: "Select view"
                                                                                })
                                                                            }),
                                                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_select.SelectContent, {
                                                                                className: "bg-purple-950 border-purple-700 text-white",
                                                                                children: [
                                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                                                                        value: "prompt",
                                                                                        children: "Prompt"
                                                                                    }),
                                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                                                                        value: "results",
                                                                                        children: "Results"
                                                                                    }),
                                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                                                                        value: "preview",
                                                                                        children: "Preview"
                                                                                    })
                                                                                ]
                                                                            })
                                                                        ]
                                                                    })
                                                                }),
                                                                inferenceTab === "prompt" && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                    className: "p-4",
                                                                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                        className: "space-y-4",
                                                                        children: [
                                                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                                className: "space-y-2",
                                                                                children: [
                                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                                                                        htmlFor: "beliefs-prompt",
                                                                                        className: "text-sm font-medium",
                                                                                        children: "Beliefs Prompt"
                                                                                    }),
                                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_textarea.Textarea, {
                                                                                        id: "beliefs-prompt",
                                                                                        value: beliefsPrompt,
                                                                                        onChange: (e)=>setBeliefsPrompt(e.target.value),
                                                                                        className: "min-h-[100px]",
                                                                                        placeholder: "Enter prompt for extracting beliefs..."
                                                                                    })
                                                                                ]
                                                                            }),
                                                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                                className: "space-y-2",
                                                                                children: [
                                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                                                                        htmlFor: "conversation-select",
                                                                                        className: "text-sm font-medium",
                                                                                        children: "Select Conversation"
                                                                                    }),
                                                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_select.Select, {
                                                                                        value: selectedConversationId || undefined,
                                                                                        onValueChange: (value)=>setSelectedConversationId(value),
                                                                                        children: [
                                                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectTrigger, {
                                                                                                className: "w-full bg-purple-950 border-purple-700 text-white",
                                                                                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectValue, {
                                                                                                    placeholder: "Select a conversation"
                                                                                                })
                                                                                            }),
                                                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectContent, {
                                                                                                className: "bg-purple-950 border-purple-700 text-white",
                                                                                                children: relevantConversations.length > 0 ? relevantConversations.map((conv)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)(_select.SelectItem, {
                                                                                                        value: conv.id,
                                                                                                        children: [
                                                                                                            "Conversation",
                                                                                                            " ",
                                                                                                            (0, _utils.formatTimestamp)(conv.startTime)
                                                                                                        ]
                                                                                                    }, conv.id)) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_select.SelectItem, {
                                                                                                    disabled: true,
                                                                                                    value: "no-conversations",
                                                                                                    children: "No conversations available"
                                                                                                })
                                                                                            })
                                                                                        ]
                                                                                    })
                                                                                ]
                                                                            }),
                                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                                                                onClick: handleUpdateBeliefs,
                                                                                className: "bg-purple-700 hover:bg-purple-600 text-white",
                                                                                disabled: isExtractingBeliefs,
                                                                                children: isExtractingBeliefs ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                                                                                    children: [
                                                                                        "Extracting Beliefs... (",
                                                                                        extractionProgress,
                                                                                        "%)"
                                                                                    ]
                                                                                }) : /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                                                                                    children: [
                                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Search, {
                                                                                            size: 16,
                                                                                            className: "mr-2"
                                                                                        }),
                                                                                        "Extract Beliefs"
                                                                                    ]
                                                                                })
                                                                            })
                                                                        ]
                                                                    })
                                                                }),
                                                                inferenceTab === "results" && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                    className: "flex-1 p-4 overflow-auto",
                                                                    children: [
                                                                        extractionStep === "idle" && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                            className: "text-center text-muted-foreground py-8",
                                                                            children: "No beliefs extracted yet."
                                                                        }),
                                                                        extractionStep === "extracting" && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                            className: "text-center py-8 space-y-4",
                                                                            children: [
                                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                                                    className: "text-muted-foreground",
                                                                                    children: "Extracting beliefs..."
                                                                                }),
                                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                                    className: "w-full max-w-md mx-auto bg-gray-200 rounded-full h-2.5 dark:bg-gray-700",
                                                                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                                        className: "bg-purple-600 h-2.5 rounded-full transition-all duration-300 ease-in-out",
                                                                                        style: {
                                                                                            width: `${extractionProgress}%`
                                                                                        }
                                                                                    })
                                                                                }),
                                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                                                                                    className: "text-sm text-muted-foreground",
                                                                                    children: [
                                                                                        extractionProgress,
                                                                                        "% complete"
                                                                                    ]
                                                                                })
                                                                            ]
                                                                        }),
                                                                        extractionStep === "refining" && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                            className: "text-center py-8 space-y-4",
                                                                            children: [
                                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                                                    className: "text-muted-foreground",
                                                                                    children: "Refining beliefs..."
                                                                                }),
                                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                                    className: "w-full max-w-md mx-auto bg-gray-200 rounded-full h-2.5 dark:bg-gray-700",
                                                                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                                        className: "bg-purple-600 h-2.5 rounded-full transition-all duration-300 ease-in-out",
                                                                                        style: {
                                                                                            width: `${extractionProgress}%`
                                                                                        }
                                                                                    })
                                                                                }),
                                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                                                                                    className: "text-sm text-muted-foreground",
                                                                                    children: [
                                                                                        extractionProgress,
                                                                                        "% complete"
                                                                                    ]
                                                                                })
                                                                            ]
                                                                        }),
                                                                        extractionStep === "complete" && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                            className: "space-y-4",
                                                                            children: [
                                                                                extractedBeliefs.length > 0 ? extractedBeliefs.map((belief, index)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
                                                                                        className: "p-4",
                                                                                        children: [
                                                                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                                                className: "flex items-center justify-between",
                                                                                                children: [
                                                                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("h3", {
                                                                                                        className: "font-medium truncate max-w-[80%]",
                                                                                                        title: belief.title,
                                                                                                        children: [
                                                                                                            belief.title || "Untitled belief",
                                                                                                            belief.title && belief.title.length > 30 ? "..." : ""
                                                                                                        ]
                                                                                                    }),
                                                                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("label", {
                                                                                                        className: "inline-flex items-center space-x-2 cursor-pointer",
                                                                                                        children: [
                                                                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                                                                                type: "checkbox",
                                                                                                                className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                                                                                                                checked: belief.selected !== false,
                                                                                                                onChange: ()=>handleToggleBelief(index)
                                                                                                            }),
                                                                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                                                                className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                                                                                                                children: "Select"
                                                                                                            })
                                                                                                        ]
                                                                                                    })
                                                                                                ]
                                                                                            }),
                                                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                                                                className: "text-sm text-muted-foreground mt-1 line-clamp-2",
                                                                                                children: belief.refined_content || "No content available"
                                                                                            })
                                                                                        ]
                                                                                    }, index)) : /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                                    className: "text-center text-muted-foreground py-8",
                                                                                    children: "No beliefs extracted."
                                                                                }),
                                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                                                                    onClick: handleAddSelectedBeliefs,
                                                                                    className: "bg-purple-700 hover:bg-purple-600 text-white",
                                                                                    disabled: extractedBeliefs.length === 0,
                                                                                    children: "Add Selected Beliefs to Knowledge"
                                                                                })
                                                                            ]
                                                                        })
                                                                    ]
                                                                }),
                                                                inferenceTab === "preview" && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                    className: "p-4",
                                                                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                        className: "space-y-4",
                                                                        children: [
                                                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                                className: "space-y-2",
                                                                                children: [
                                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                                                                        htmlFor: "raw-beliefs",
                                                                                        className: "text-sm font-medium",
                                                                                        children: "Raw Beliefs"
                                                                                    }),
                                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_textarea.Textarea, {
                                                                                        id: "raw-beliefs",
                                                                                        value: JSON.stringify(rawBeliefs, null, 2),
                                                                                        className: "min-h-[100px]",
                                                                                        readOnly: true
                                                                                    })
                                                                                ]
                                                                            }),
                                                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                                className: "space-y-2",
                                                                                children: [
                                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                                                                        htmlFor: "extracted-beliefs",
                                                                                        className: "text-sm font-medium",
                                                                                        children: "Extracted Beliefs"
                                                                                    }),
                                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_textarea.Textarea, {
                                                                                        id: "extracted-beliefs",
                                                                                        value: JSON.stringify(extractedBeliefs, null, 2),
                                                                                        className: "min-h-[100px]",
                                                                                        readOnly: true
                                                                                    })
                                                                                ]
                                                                            })
                                                                        ]
                                                                    })
                                                                })
                                                            ]
                                                        })
                                                    ]
                                                })
                                            ]
                                        })
                                    })
                                ]
                            }),
                            selectedView === "system" && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardHeader, {
                                        className: "pb-2",
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardTitle, {
                                            className: "text-base",
                                            children: "System Prompt"
                                        })
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardContent, {
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "space-y-4",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    className: "space-y-2",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                                            htmlFor: "system-prompt-name",
                                                            className: "text-sm font-medium",
                                                            children: "Prompt Name"
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_input.Input, {
                                                            id: "system-prompt-name",
                                                            value: systemPromptName,
                                                            onChange: (e)=>setSystemPromptName(e.target.value),
                                                            placeholder: "Enter prompt name..."
                                                        })
                                                    ]
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    className: "space-y-2",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                                            htmlFor: "system-prompt",
                                                            className: "text-sm font-medium",
                                                            children: "System Prompt"
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_textarea.Textarea, {
                                                            id: "system-prompt",
                                                            value: systemPrompt,
                                                            onChange: (e)=>setSystemPrompt(e.target.value),
                                                            className: "min-h-[200px]",
                                                            placeholder: "Enter system prompt..."
                                                        })
                                                    ]
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                                                    onClick: handleSaveSystemPrompt,
                                                    className: "bg-purple-700 hover:bg-purple-600 text-white",
                                                    disabled: isProcessing,
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Save, {
                                                            size: 16,
                                                            className: "mr-2"
                                                        }),
                                                        "Save System Prompt"
                                                    ]
                                                })
                                            ]
                                        })
                                    })
                                ]
                            }),
                            selectedView === "tools" && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardHeader, {
                                        className: "pb-2",
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardTitle, {
                                            className: "text-base",
                                            children: "Agent Tools"
                                        })
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardContent, {
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "space-y-4",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    className: "space-y-2",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("h4", {
                                                            className: "text-sm font-medium",
                                                            children: "Information Access Tools"
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                            className: "grid grid-cols-2 gap-2",
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("label", {
                                                                    className: "inline-flex items-center space-x-2 cursor-pointer",
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                                            type: "checkbox",
                                                                            className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                                                                            checked: toolPermissions.internetSearch,
                                                                            onChange: (e)=>handleToolChange("internetSearch", e.target.checked)
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                            className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                                                                            children: "Internet Search"
                                                                        })
                                                                    ]
                                                                }),
                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("label", {
                                                                    className: "inline-flex items-center space-x-2 cursor-pointer",
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                                            type: "checkbox",
                                                                            className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                                                                            checked: toolPermissions.webScraping,
                                                                            onChange: (e)=>handleToolChange("webScraping", e.target.checked)
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                            className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                                                                            children: "Web Scraping"
                                                                        })
                                                                    ]
                                                                }),
                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("label", {
                                                                    className: "inline-flex items-center space-x-2 cursor-pointer",
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                                            type: "checkbox",
                                                                            className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                                                                            checked: toolPermissions.wikipediaAccess,
                                                                            onChange: (e)=>handleToolChange("wikipediaAccess", e.target.checked)
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                            className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                                                                            children: "Wikipedia Access"
                                                                        })
                                                                    ]
                                                                }),
                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("label", {
                                                                    className: "inline-flex items-center space-x-2 cursor-pointer",
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                                            type: "checkbox",
                                                                            className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                                                                            checked: toolPermissions.newsApi,
                                                                            onChange: (e)=>handleToolChange("newsApi", e.target.checked)
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                            className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                                                                            children: "News API"
                                                                        })
                                                                    ]
                                                                }),
                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("label", {
                                                                    className: "inline-flex items-center space-x-2 cursor-pointer",
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                                            type: "checkbox",
                                                                            className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                                                                            checked: toolPermissions.academicSearch,
                                                                            onChange: (e)=>handleToolChange("academicSearch", e.target.checked)
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                            className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                                                                            children: "Academic Search"
                                                                        })
                                                                    ]
                                                                }),
                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("label", {
                                                                    className: "inline-flex items-center space-x-2 cursor-pointer",
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                                            type: "checkbox",
                                                                            className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                                                                            checked: toolPermissions.documentRetrieval,
                                                                            onChange: (e)=>handleToolChange("documentRetrieval", e.target.checked)
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                            className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                                                                            children: "Document Retrieval"
                                                                        })
                                                                    ]
                                                                })
                                                            ]
                                                        })
                                                    ]
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    className: "space-y-2",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("h4", {
                                                            className: "text-sm font-medium",
                                                            children: "Content Generation & Processing"
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                            className: "grid grid-cols-2 gap-2",
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("label", {
                                                                    className: "inline-flex items-center space-x-2 cursor-pointer",
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                                            type: "checkbox",
                                                                            className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                                                                            checked: toolPermissions.imageGeneration,
                                                                            onChange: (e)=>handleToolChange("imageGeneration", e.target.checked)
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                            className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                                                                            children: "Image Generation"
                                                                        })
                                                                    ]
                                                                }),
                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("label", {
                                                                    className: "inline-flex items-center space-x-2 cursor-pointer",
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                                            type: "checkbox",
                                                                            className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                                                                            checked: toolPermissions.textSummarization,
                                                                            onChange: (e)=>handleToolChange("textSummarization", e.target.checked)
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                            className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                                                                            children: "Text Summarization"
                                                                        })
                                                                    ]
                                                                }),
                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("label", {
                                                                    className: "inline-flex items-center space-x-2 cursor-pointer",
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                                            type: "checkbox",
                                                                            className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                                                                            checked: toolPermissions.translation,
                                                                            onChange: (e)=>handleToolChange("translation", e.target.checked)
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                            className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                                                                            children: "Translation"
                                                                        })
                                                                    ]
                                                                }),
                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("label", {
                                                                    className: "inline-flex items-center space-x-2 cursor-pointer",
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                                            type: "checkbox",
                                                                            className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                                                                            checked: toolPermissions.codeExecution,
                                                                            onChange: (e)=>handleToolChange("codeExecution", e.target.checked)
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                            className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                                                                            children: "Code Execution"
                                                                        })
                                                                    ]
                                                                })
                                                            ]
                                                        })
                                                    ]
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    className: "space-y-2",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("h4", {
                                                            className: "text-sm font-medium",
                                                            children: "Knowledge & Reasoning Tools"
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                            className: "grid grid-cols-2 gap-2",
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("label", {
                                                                    className: "inline-flex items-center space-x-2 cursor-pointer",
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                                            type: "checkbox",
                                                                            className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                                                                            checked: toolPermissions.calculator,
                                                                            onChange: (e)=>handleToolChange("calculator", e.target.checked)
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                            className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                                                                            children: "Calculator"
                                                                        })
                                                                    ]
                                                                }),
                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("label", {
                                                                    className: "inline-flex items-center space-x-2 cursor-pointer",
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                                            type: "checkbox",
                                                                            className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                                                                            checked: toolPermissions.knowledgeGraphQuery,
                                                                            onChange: (e)=>handleToolChange("knowledgeGraphQuery", e.target.checked)
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                            className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                                                                            children: "Knowledge Graph Query"
                                                                        })
                                                                    ]
                                                                }),
                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("label", {
                                                                    className: "inline-flex items-center space-x-2 cursor-pointer",
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                                            type: "checkbox",
                                                                            className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                                                                            checked: toolPermissions.factChecking,
                                                                            onChange: (e)=>handleToolChange("factChecking", e.target.checked)
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                            className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                                                                            children: "Fact Checking"
                                                                        })
                                                                    ]
                                                                }),
                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("label", {
                                                                    className: "inline-flex items-center space-x-2 cursor-pointer",
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                                            type: "checkbox",
                                                                            className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                                                                            checked: toolPermissions.timelineGenerator,
                                                                            onChange: (e)=>handleToolChange("timelineGenerator", e.target.checked)
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                            className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                                                                            children: "Timeline Generator"
                                                                        })
                                                                    ]
                                                                })
                                                            ]
                                                        })
                                                    ]
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    className: "space-y-2",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("h4", {
                                                            className: "text-sm font-medium",
                                                            children: "External Integrations"
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                            className: "grid grid-cols-2 gap-2",
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("label", {
                                                                    className: "inline-flex items-center space-x-2 cursor-pointer",
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                                            type: "checkbox",
                                                                            className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                                                                            checked: toolPermissions.weatherData,
                                                                            onChange: (e)=>handleToolChange("weatherData", e.target.checked)
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                            className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                                                                            children: "Weather Data"
                                                                        })
                                                                    ]
                                                                }),
                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("label", {
                                                                    className: "inline-flex items-center space-x-2 cursor-pointer",
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                                            type: "checkbox",
                                                                            className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                                                                            checked: toolPermissions.mapLocationData,
                                                                            onChange: (e)=>handleToolChange("mapLocationData", e.target.checked)
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                            className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                                                                            children: "Map Location Data"
                                                                        })
                                                                    ]
                                                                }),
                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("label", {
                                                                    className: "inline-flex items-center space-x-2 cursor-pointer",
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                                            type: "checkbox",
                                                                            className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                                                                            checked: toolPermissions.financialData,
                                                                            onChange: (e)=>handleToolChange("financialData", e.target.checked)
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                            className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                                                                            children: "Financial Data"
                                                                        })
                                                                    ]
                                                                }),
                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("label", {
                                                                    className: "inline-flex items-center space-x-2 cursor-pointer",
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                                            type: "checkbox",
                                                                            className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                                                                            checked: toolPermissions.publicDatasets,
                                                                            onChange: (e)=>handleToolChange("publicDatasets", e.target.checked)
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                            className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                                                                            children: "Public Datasets"
                                                                        })
                                                                    ]
                                                                })
                                                            ]
                                                        })
                                                    ]
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    className: "space-y-2",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("h4", {
                                                            className: "text-sm font-medium",
                                                            children: "Agent-Specific Tools"
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                            className: "grid grid-cols-2 gap-2",
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("label", {
                                                                    className: "inline-flex items-center space-x-2 cursor-pointer",
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                                            type: "checkbox",
                                                                            className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                                                                            checked: toolPermissions.memorySearch,
                                                                            onChange: (e)=>handleToolChange("memorySearch", e.target.checked)
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                            className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                                                                            children: "Memory Search"
                                                                        })
                                                                    ]
                                                                }),
                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("label", {
                                                                    className: "inline-flex items-center space-x-2 cursor-pointer",
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                                            type: "checkbox",
                                                                            className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                                                                            checked: toolPermissions.crossAgentKnowledge,
                                                                            onChange: (e)=>handleToolChange("crossAgentKnowledge", e.target.checked)
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                            className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                                                                            children: "Cross-Agent Knowledge"
                                                                        })
                                                                    ]
                                                                }),
                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("label", {
                                                                    className: "inline-flex items-center space-x-2 cursor-pointer",
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                                            type: "checkbox",
                                                                            className: "h-5 w-5 rounded-sm border-gray-700 text-purple-500 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed peer",
                                                                            checked: toolPermissions.conversationAnalysis,
                                                                            onChange: (e)=>handleToolChange("conversationAnalysis", e.target.checked)
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                            className: "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70",
                                                                            children: "Conversation Analysis"
                                                                        })
                                                                    ]
                                                                })
                                                            ]
                                                        })
                                                    ]
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                                                    onClick: handleSaveToolSettings,
                                                    className: "bg-purple-700 hover:bg-purple-600 text-white",
                                                    disabled: !hasToolChanges || isSavingTools,
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Save, {
                                                            size: 16,
                                                            className: "mr-2"
                                                        }),
                                                        "Save Tool Settings"
                                                    ]
                                                })
                                            ]
                                        })
                                    })
                                ]
                            })
                        ]
                    })
                ]
            }) : /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "flex-1 flex items-center justify-center text-muted-foreground",
                children: "Select an agent to view memory."
            }),
            isDeleteDialogOpen && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "fixed inset-0 z-50 flex items-center justify-center bg-black/50",
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
                    className: "max-w-md w-full",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardHeader, {
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardTitle, {
                                children: "Delete Knowledge"
                            })
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardContent, {
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                                    children: [
                                        'Are you sure you want to delete "',
                                        knowledgeToDelete?.title,
                                        '"?'
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "mt-4 flex justify-end gap-2",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                            variant: "ghost",
                                            onClick: ()=>setIsDeleteDialogOpen(false),
                                            children: "Cancel"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                            variant: "destructive",
                                            onClick: handleDeleteKnowledge,
                                            children: "Delete"
                                        })
                                    ]
                                })
                            ]
                        })
                    ]
                })
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,
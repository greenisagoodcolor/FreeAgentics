{"version":3,"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/lib/security.ts"],"sourcesContent":["/**\n * Security utilities for input validation and sanitization\n */\n\nexport function validateInput(input: string): boolean {\n  if (!input || input.length === 0) {\n    return false;\n  }\n\n  // Check for dangerous patterns\n  const dangerousPatterns = [\n    /<script/i,\n    /<iframe/i,\n    /javascript:/i,\n    /on\\w+=/i, // onclick, onload, etc.\n    /<object/i,\n    /<embed/i,\n  ];\n\n  for (const pattern of dangerousPatterns) {\n    if (pattern.test(input)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function sanitizeOutput(output: string): string {\n  if (!output) {\n    return \"\";\n  }\n\n  // Remove all HTML tags\n  let sanitized = output.replace(/<[^>]*>/g, \"\");\n\n  // Remove script tags and content\n  sanitized = sanitized.replace(\n    /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\n    \"\",\n  );\n\n  // Remove dangerous attributes\n  sanitized = sanitized.replace(/on\\w+\\s*=\\s*[\"'][^\"']*[\"']/gi, \"\");\n\n  // Escape HTML entities\n  sanitized = sanitized\n    .replace(/&/g, \"&amp;\")\n    .replace(/</g, \"&lt;\")\n    .replace(/>/g, \"&gt;\")\n    .replace(/\"/g, \"&quot;\")\n    .replace(/'/g, \"&#x27;\");\n\n  return sanitized.trim();\n}\n\nexport function checkPermissions(\n  action: string,\n  user: { role: string },\n): boolean {\n  const permissions: Record<string, string[]> = {\n    admin: [\"read\", \"write\", \"delete\", \"admin\"],\n    editor: [\"read\", \"write\"],\n    viewer: [\"read\"],\n  };\n\n  const userPermissions = permissions[user.role] || [];\n  return userPermissions.includes(action);\n}\n\nexport function hashPassword(password: string): string {\n  // Simple hash for testing - in production use bcrypt or similar\n  let hash = 0;\n  for (let i = 0; i < password.length; i++) {\n    const char = password.charCodeAt(i);\n    hash = (hash << 5) - hash + char;\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash.toString(16);\n}\n\nexport function verifyPassword(password: string, hash: string): boolean {\n  return hashPassword(password) === hash;\n}\n\nexport function generateSessionToken(): string {\n  return Array.from(crypto.getRandomValues(new Uint8Array(32)))\n    .map((b) => b.toString(16).padStart(2, \"0\"))\n    .join(\"\");\n}\n\nexport function validateEmail(email: string): boolean {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n}\n\nexport function sanitizeFilename(filename: string): string {\n  // Remove path traversal attempts and dangerous characters\n  return filename\n    .replace(/[\\/\\\\]/g, \"_\")\n    .replace(/\\.\\./g, \"_\")\n    .replace(/[^a-zA-Z0-9._-]/g, \"_\");\n}\n"],"names":["checkPermissions","generateSessionToken","hashPassword","sanitizeFilename","sanitizeOutput","validateEmail","validateInput","verifyPassword","input","length","dangerousPatterns","pattern","test","output","sanitized","replace","trim","action","user","permissions","admin","editor","viewer","userPermissions","role","includes","password","hash","i","char","charCodeAt","toString","Array","from","crypto","getRandomValues","Uint8Array","map","b","padStart","join","email","emailRegex","filename"],"mappings":"AAAA;;CAEC;;;;;;;;;;;IAsDeA,gBAAgB;eAAhBA;;IA6BAC,oBAAoB;eAApBA;;IAfAC,YAAY;eAAZA;;IA0BAC,gBAAgB;eAAhBA;;IApEAC,cAAc;eAAdA;;IA+DAC,aAAa;eAAbA;;IAvFAC,aAAa;eAAbA;;IA6EAC,cAAc;eAAdA;;;AA7ET,SAASD,cAAcE,KAAa;IACzC,IAAI,CAACA,SAASA,MAAMC,MAAM,KAAK,GAAG;QAChC,OAAO;IACT;IAEA,+BAA+B;IAC/B,MAAMC,oBAAoB;QACxB;QACA;QACA;QACA;QACA;QACA;KACD;IAED,KAAK,MAAMC,WAAWD,kBAAmB;QACvC,IAAIC,QAAQC,IAAI,CAACJ,QAAQ;YACvB,OAAO;QACT;IACF;IAEA,OAAO;AACT;AAEO,SAASJ,eAAeS,MAAc;IAC3C,IAAI,CAACA,QAAQ;QACX,OAAO;IACT;IAEA,uBAAuB;IACvB,IAAIC,YAAYD,OAAOE,OAAO,CAAC,YAAY;IAE3C,iCAAiC;IACjCD,YAAYA,UAAUC,OAAO,CAC3B,uDACA;IAGF,8BAA8B;IAC9BD,YAAYA,UAAUC,OAAO,CAAC,gCAAgC;IAE9D,uBAAuB;IACvBD,YAAYA,UACTC,OAAO,CAAC,MAAM,SACdA,OAAO,CAAC,MAAM,QACdA,OAAO,CAAC,MAAM,QACdA,OAAO,CAAC,MAAM,UACdA,OAAO,CAAC,MAAM;IAEjB,OAAOD,UAAUE,IAAI;AACvB;AAEO,SAAShB,iBACdiB,MAAc,EACdC,IAAsB;IAEtB,MAAMC,cAAwC;QAC5CC,OAAO;YAAC;YAAQ;YAAS;YAAU;SAAQ;QAC3CC,QAAQ;YAAC;YAAQ;SAAQ;QACzBC,QAAQ;YAAC;SAAO;IAClB;IAEA,MAAMC,kBAAkBJ,WAAW,CAACD,KAAKM,IAAI,CAAC,IAAI,EAAE;IACpD,OAAOD,gBAAgBE,QAAQ,CAACR;AAClC;AAEO,SAASf,aAAawB,QAAgB;IAC3C,gEAAgE;IAChE,IAAIC,OAAO;IACX,IAAK,IAAIC,IAAI,GAAGA,IAAIF,SAASjB,MAAM,EAAEmB,IAAK;QACxC,MAAMC,OAAOH,SAASI,UAAU,CAACF;QACjCD,OAAO,AAACA,CAAAA,QAAQ,CAAA,IAAKA,OAAOE;QAC5BF,OAAOA,OAAOA,MAAM,2BAA2B;IACjD;IACA,OAAOA,KAAKI,QAAQ,CAAC;AACvB;AAEO,SAASxB,eAAemB,QAAgB,EAAEC,IAAY;IAC3D,OAAOzB,aAAawB,cAAcC;AACpC;AAEO,SAAS1B;IACd,OAAO+B,MAAMC,IAAI,CAACC,OAAOC,eAAe,CAAC,IAAIC,WAAW,MACrDC,GAAG,CAAC,CAACC,IAAMA,EAAEP,QAAQ,CAAC,IAAIQ,QAAQ,CAAC,GAAG,MACtCC,IAAI,CAAC;AACV;AAEO,SAASnC,cAAcoC,KAAa;IACzC,MAAMC,aAAa;IACnB,OAAOA,WAAW9B,IAAI,CAAC6B;AACzB;AAEO,SAAStC,iBAAiBwC,QAAgB;IAC/C,0DAA0D;IAC1D,OAAOA,SACJ5B,OAAO,CAAC,WAAW,KACnBA,OAAO,CAAC,SAAS,KACjBA,OAAO,CAAC,oBAAoB;AACjC"}
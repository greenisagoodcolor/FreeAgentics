{"version":3,"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/components/strategic-positioning-dashboard.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport {\n  TrendingUp,\n  Target,\n  BarChart3,\n  PieChart,\n  DollarSign,\n  AlertTriangle,\n  Download,\n} from \"lucide-react\";\n\ninterface BusinessModel {\n  coalitionId: string;\n  name: string;\n  marketShare: number;\n  growthRate: number;\n  profitabilityScore: number;\n  riskScore: number;\n  uncertainty: {\n    marketShare: [number, number];\n    growthRate: [number, number];\n    profitability: [number, number];\n    risk: [number, number];\n  };\n}\n\nexport function StrategicPositioningDashboard() {\n  const [businessModels, setBusinessModels] = useState<BusinessModel[]>([]);\n  const [lastUpdate, setLastUpdate] = useState<Date>(new Date());\n\n  useEffect(() => {\n    const generateMockData = () => {\n      const coalitionNames = [\n        \"AgentTech\",\n        \"DataCorp\",\n        \"InnovateCo\",\n        \"ScaleSoft\",\n        \"EdgeAI\",\n      ];\n\n      const mockBusinessModels: BusinessModel[] = coalitionNames.map(\n        (name, index) => ({\n          coalitionId: `coalition-${index + 1}`,\n          name,\n          marketShare: 10 + Math.random() * 30,\n          growthRate: 20 + Math.random() * 80,\n          profitabilityScore: 0.6 + Math.random() * 0.3,\n          riskScore: 0.2 + Math.random() * 0.4,\n          uncertainty: {\n            marketShare: [8 + Math.random() * 5, 35 + Math.random() * 10],\n            growthRate: [15 + Math.random() * 10, 90 + Math.random() * 20],\n            profitability: [\n              0.5 + Math.random() * 0.1,\n              0.85 + Math.random() * 0.1,\n            ],\n            risk: [0.1 + Math.random() * 0.1, 0.5 + Math.random() * 0.2],\n          },\n        }),\n      );\n\n      setBusinessModels(mockBusinessModels);\n      setLastUpdate(new Date());\n    };\n\n    generateMockData();\n    const interval = setInterval(generateMockData, 30000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const formatPercent = (value: number) => `${(value * 100).toFixed(1)}%`;\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900 flex items-center gap-3\">\n            <Target className=\"w-8 h-8 text-blue-600\" />\n            Strategic Positioning Dashboard\n          </h1>\n          <p className=\"text-gray-600 mt-1\">\n            Coalition business models with uncertainty quantification\n          </p>\n        </div>\n\n        <Badge variant=\"outline\">\n          Last updated: {lastUpdate.toLocaleTimeString()}\n        </Badge>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">\n                  Avg Market Share\n                </p>\n                <p className=\"text-2xl font-bold text-gray-900\">\n                  {businessModels.length > 0\n                    ? (\n                        businessModels.reduce(\n                          (acc, bm) => acc + bm.marketShare,\n                          0,\n                        ) / businessModels.length\n                      ).toFixed(1)\n                    : 0}\n                  %\n                </p>\n              </div>\n              <PieChart className=\"w-8 h-8 text-blue-500\" />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">\n                  Avg Growth Rate\n                </p>\n                <p className=\"text-2xl font-bold text-green-600\">\n                  {businessModels.length > 0\n                    ? (\n                        businessModels.reduce(\n                          (acc, bm) => acc + bm.growthRate,\n                          0,\n                        ) / businessModels.length\n                      ).toFixed(0)\n                    : 0}\n                  %\n                </p>\n              </div>\n              <TrendingUp className=\"w-8 h-8 text-green-500\" />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">\n                  Avg Profitability\n                </p>\n                <p className=\"text-2xl font-bold text-purple-600\">\n                  {businessModels.length > 0\n                    ? formatPercent(\n                        businessModels.reduce(\n                          (acc, bm) => acc + bm.profitabilityScore,\n                          0,\n                        ) / businessModels.length,\n                      )\n                    : \"0%\"}\n                </p>\n              </div>\n              <DollarSign className=\"w-8 h-8 text-purple-500\" />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">\n                  Avg Risk Score\n                </p>\n                <p className=\"text-2xl font-bold text-orange-600\">\n                  {businessModels.length > 0\n                    ? formatPercent(\n                        businessModels.reduce(\n                          (acc, bm) => acc + bm.riskScore,\n                          0,\n                        ) / businessModels.length,\n                      )\n                    : \"0%\"}\n                </p>\n              </div>\n              <AlertTriangle className=\"w-8 h-8 text-orange-500\" />\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      <Tabs defaultValue=\"models\" className=\"space-y-6\">\n        <TabsList className=\"grid w-full grid-cols-2\">\n          <TabsTrigger value=\"models\">Business Models</TabsTrigger>\n          <TabsTrigger value=\"uncertainty\">Uncertainty Analysis</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"models\" className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {businessModels.map((model) => (\n              <Card key={model.coalitionId}>\n                <CardHeader>\n                  <div className=\"flex items-center justify-between\">\n                    <CardTitle>{model.name}</CardTitle>\n                    <Badge\n                      variant={model.marketShare > 25 ? \"default\" : \"secondary\"}\n                    >\n                      {model.marketShare.toFixed(1)}% Market Share\n                    </Badge>\n                  </div>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div>\n                    <p className=\"text-xs text-gray-500 mb-2\">\n                      Performance Metrics\n                    </p>\n                    <div className=\"space-y-2\">\n                      <div className=\"flex justify-between items-center\">\n                        <span className=\"text-sm\">Growth Rate</span>\n                        <span className=\"font-medium text-green-600\">\n                          {model.growthRate.toFixed(0)}%\n                        </span>\n                      </div>\n                      <Progress value={model.growthRate} className=\"h-2\" />\n\n                      <div className=\"flex justify-between items-center\">\n                        <span className=\"text-sm\">Profitability</span>\n                        <span className=\"font-medium\">\n                          {formatPercent(model.profitabilityScore)}\n                        </span>\n                      </div>\n                      <Progress\n                        value={model.profitabilityScore * 100}\n                        className=\"h-2\"\n                      />\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"uncertainty\" className=\"space-y-6\">\n          <Alert>\n            <AlertTriangle className=\"w-4 h-4\" />\n            <AlertDescription>\n              All strategic projections include uncertainty bands and confidence\n              intervals based on Monte Carlo simulation and sensitivity\n              analysis.\n            </AlertDescription>\n          </Alert>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {businessModels.map((model) => (\n              <Card key={model.coalitionId}>\n                <CardHeader>\n                  <CardTitle>{model.name} - Uncertainty Analysis</CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div>\n                    <h5 className=\"font-semibold mb-3\">\n                      Market Share Confidence Bands\n                    </h5>\n                    <div className=\"space-y-2\">\n                      <div className=\"flex justify-between text-sm\">\n                        <span>Lower Bound</span>\n                        <span>\n                          {model.uncertainty.marketShare[0].toFixed(1)}%\n                        </span>\n                      </div>\n                      <div className=\"relative h-6 bg-gray-200 rounded\">\n                        <div\n                          className=\"absolute h-full bg-blue-500 rounded opacity-30\"\n                          style={{\n                            left: `${Math.min(model.uncertainty.marketShare[0], 50)}%`,\n                            width: `${Math.abs(model.uncertainty.marketShare[1] - model.uncertainty.marketShare[0])}%`,\n                          }}\n                        />\n                        <div\n                          className=\"absolute w-1 h-full bg-blue-700\"\n                          style={{\n                            left: `${Math.min(model.marketShare, 50)}%`,\n                          }}\n                        />\n                      </div>\n                      <div className=\"flex justify-between text-sm\">\n                        <span>Upper Bound</span>\n                        <span>\n                          {model.uncertainty.marketShare[1].toFixed(1)}%\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"bg-blue-50 p-3 rounded-lg\">\n                    <h6 className=\"font-semibold text-blue-900 mb-2\">\n                      Risk Assessment\n                    </h6>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-blue-700\">Risk Score</span>\n                      <span className=\"font-bold text-blue-900\">\n                        {formatPercent(model.riskScore)}\n                        (±\n                        {formatPercent(\n                          (model.uncertainty.risk[1] -\n                            model.uncertainty.risk[0]) /\n                            2,\n                        )}\n                        )\n                      </span>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </TabsContent>\n      </Tabs>\n\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Download className=\"w-5 h-5\" />\n            Export Strategic Analysis\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex gap-4\">\n            <Button variant=\"outline\">\n              <Download className=\"w-4 h-4 mr-2\" />\n              Export Analysis Data\n            </Button>\n          </div>\n          <p className=\"text-sm text-gray-600 mt-2\">\n            Export includes confidence intervals, uncertainty bands, and\n            statistical significance\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":["StrategicPositioningDashboard","businessModels","setBusinessModels","useState","lastUpdate","setLastUpdate","Date","useEffect","generateMockData","coalitionNames","mockBusinessModels","map","name","index","coalitionId","marketShare","Math","random","growthRate","profitabilityScore","riskScore","uncertainty","profitability","risk","interval","setInterval","clearInterval","formatPercent","value","toFixed","div","className","h1","Target","p","Badge","variant","toLocaleTimeString","Card","CardContent","length","reduce","acc","bm","PieChart","TrendingUp","DollarSign","AlertTriangle","Tabs","defaultValue","TabsList","TabsTrigger","TabsContent","model","CardHeader","CardTitle","span","Progress","Alert","AlertDescription","h5","style","left","min","width","abs","h6","Download","Button"],"mappings":"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"}
{"version":3,"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/components/dashboard/ActiveAgentsList.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Avatar, AvatarFallback } from \"@/components/ui/avatar\";\nimport { Activity, Brain, Users, Zap } from \"lucide-react\";\n\ninterface Agent {\n  id: string;\n  name: string;\n  type: \"Explorer\" | \"Guardian\" | \"Merchant\" | \"Scholar\";\n  status: \"active\" | \"idle\" | \"processing\";\n  lastActivity: string;\n  performance: number;\n}\n\nconst mockAgents: Agent[] = [\n  {\n    id: \"1\",\n    name: \"Explorer-Alpha\",\n    type: \"Explorer\",\n    status: \"active\",\n    lastActivity: \"2 min ago\",\n    performance: 94,\n  },\n  {\n    id: \"2\",\n    name: \"Guardian-Beta\",\n    type: \"Guardian\",\n    status: \"processing\",\n    lastActivity: \"5 min ago\",\n    performance: 87,\n  },\n  {\n    id: \"3\",\n    name: \"Merchant-Gamma\",\n    type: \"Merchant\",\n    status: \"active\",\n    lastActivity: \"1 min ago\",\n    performance: 91,\n  },\n  {\n    id: \"4\",\n    name: \"Scholar-Delta\",\n    type: \"Scholar\",\n    status: \"idle\",\n    lastActivity: \"15 min ago\",\n    performance: 96,\n  },\n];\n\nconst getStatusColor = (status: Agent[\"status\"]) => {\n  switch (status) {\n    case \"active\":\n      return \"bg-green-500\";\n    case \"processing\":\n      return \"bg-yellow-500\";\n    case \"idle\":\n      return \"bg-gray-400\";\n    default:\n      return \"bg-gray-400\";\n  }\n};\n\nconst getAgentIcon = (type: Agent[\"type\"]) => {\n  switch (type) {\n    case \"Explorer\":\n      return <Zap className=\"h-4 w-4\" />;\n    case \"Guardian\":\n      return <Users className=\"h-4 w-4\" />;\n    case \"Merchant\":\n      return <Activity className=\"h-4 w-4\" />;\n    case \"Scholar\":\n      return <Brain className=\"h-4 w-4\" />;\n    default:\n      return <Activity className=\"h-4 w-4\" />;\n  }\n};\n\nexport function ActiveAgentsList() {\n  return (\n    <Card className=\"h-full\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Users className=\"h-5 w-5\" />\n          Active Agents (\n          {mockAgents.filter((a) => a.status === \"active\").length})\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4\">\n          {mockAgents.map((agent) => (\n            <div\n              key={agent.id}\n              className=\"flex items-center justify-between p-3 border rounded-lg\"\n            >\n              <div className=\"flex items-center gap-3\">\n                <Avatar className=\"h-10 w-10\">\n                  <AvatarFallback className=\"bg-primary/10\">\n                    {getAgentIcon(agent.type)}\n                  </AvatarFallback>\n                </Avatar>\n                <div>\n                  <div className=\"font-medium\">{agent.name}</div>\n                  <div className=\"text-sm text-muted-foreground\">\n                    {agent.type}\n                  </div>\n                </div>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <div className=\"text-right\">\n                  <div className=\"text-sm font-medium\">\n                    {agent.performance}%\n                  </div>\n                  <div className=\"text-xs text-muted-foreground\">\n                    {agent.lastActivity}\n                  </div>\n                </div>\n                <div\n                  className={`w-3 h-3 rounded-full ${getStatusColor(agent.status)}`}\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":["ActiveAgentsList","mockAgents","id","name","type","status","lastActivity","performance","getStatusColor","getAgentIcon","Zap","className","Users","Activity","Brain","Card","CardHeader","CardTitle","filter","a","length","CardContent","div","map","agent","Avatar","AvatarFallback"],"mappings":"AAAA;;;;;+BAgFgBA;;;eAAAA;;;;8DA9EE;sBACuC;wBAElB;6BACK;;;;;;AAW5C,MAAMC,aAAsB;IAC1B;QACEC,IAAI;QACJC,MAAM;QACNC,MAAM;QACNC,QAAQ;QACRC,cAAc;QACdC,aAAa;IACf;IACA;QACEL,IAAI;QACJC,MAAM;QACNC,MAAM;QACNC,QAAQ;QACRC,cAAc;QACdC,aAAa;IACf;IACA;QACEL,IAAI;QACJC,MAAM;QACNC,MAAM;QACNC,QAAQ;QACRC,cAAc;QACdC,aAAa;IACf;IACA;QACEL,IAAI;QACJC,MAAM;QACNC,MAAM;QACNC,QAAQ;QACRC,cAAc;QACdC,aAAa;IACf;CACD;AAED,MAAMC,iBAAiB,CAACH;IACtB,OAAQA;QACN,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT;YACE,OAAO;IACX;AACF;AAEA,MAAMI,eAAe,CAACL;IACpB,OAAQA;QACN,KAAK;YACH,qBAAO,qBAACM,gBAAG;gBAACC,WAAU;;QACxB,KAAK;YACH,qBAAO,qBAACC,kBAAK;gBAACD,WAAU;;QAC1B,KAAK;YACH,qBAAO,qBAACE,qBAAQ;gBAACF,WAAU;;QAC7B,KAAK;YACH,qBAAO,qBAACG,kBAAK;gBAACH,WAAU;;QAC1B;YACE,qBAAO,qBAACE,qBAAQ;gBAACF,WAAU;;IAC/B;AACF;AAEO,SAASX;IACd,qBACE,sBAACe,UAAI;QAACJ,WAAU;;0BACd,qBAACK,gBAAU;0BACT,cAAA,sBAACC,eAAS;oBAACN,WAAU;;sCACnB,qBAACC,kBAAK;4BAACD,WAAU;;wBAAY;wBAE5BV,WAAWiB,MAAM,CAAC,CAACC,IAAMA,EAAEd,MAAM,KAAK,UAAUe,MAAM;wBAAC;;;;0BAG5D,qBAACC,iBAAW;0BACV,cAAA,qBAACC;oBAAIX,WAAU;8BACZV,WAAWsB,GAAG,CAAC,CAACC,sBACf,sBAACF;4BAECX,WAAU;;8CAEV,sBAACW;oCAAIX,WAAU;;sDACb,qBAACc,cAAM;4CAACd,WAAU;sDAChB,cAAA,qBAACe,sBAAc;gDAACf,WAAU;0DACvBF,aAAae,MAAMpB,IAAI;;;sDAG5B,sBAACkB;;8DACC,qBAACA;oDAAIX,WAAU;8DAAea,MAAMrB,IAAI;;8DACxC,qBAACmB;oDAAIX,WAAU;8DACZa,MAAMpB,IAAI;;;;;;8CAIjB,sBAACkB;oCAAIX,WAAU;;sDACb,sBAACW;4CAAIX,WAAU;;8DACb,sBAACW;oDAAIX,WAAU;;wDACZa,MAAMjB,WAAW;wDAAC;;;8DAErB,qBAACe;oDAAIX,WAAU;8DACZa,MAAMlB,YAAY;;;;sDAGvB,qBAACgB;4CACCX,WAAW,CAAC,qBAAqB,EAAEH,eAAegB,MAAMnB,MAAM,EAAE,CAAC;;;;;2BA1BhEmB,MAAMtB,EAAE;;;;;AAmC3B"}
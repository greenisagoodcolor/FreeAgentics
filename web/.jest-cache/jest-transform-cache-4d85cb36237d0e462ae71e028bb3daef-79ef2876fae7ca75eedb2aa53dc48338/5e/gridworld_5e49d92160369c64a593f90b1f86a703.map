{"version":3,"names":["GridWorld","agents","onUpdatePosition","activeConversation","onSelectKnowledgeNode","onShowAbout","cov_5917qd9v9","f","canvasRef","s","_react","useRef","gridSize","setGridSize","useState","width","height","selectedAgentId","setSelectedAgentId","cellSize","setCellSize","zoomLevel","setZoomLevel","viewportOffset","setViewportOffset","x","y","gridWorldHeight","setGridWorldHeight","isResizing","setIsResizing","resizeStartY","setResizeStartY","containerRef","handleResizeStart","e","clientY","handleResizeMove","useCallback","b","current","containerRect","getBoundingClientRect","containerHeight","mouseY","top","newHeightPercentage","Math","min","max","handleResizeEnd","useEffect","window","addEventListener","document","body","classList","add","removeEventListener","remove","canvas","ctx","getContext","clearRect","save","translate","scale","effectiveCellSize","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","forEach","agent","position","radius","arc","PI","fillStyle","color","fill","id","selectionRadius","inConversation","indicatorRadius","font","textAlign","fillText","name","conversationAgents","filter","participants","includes","length","i","j","agent1","agent2","restore","handleCanvasClick","rect","adjustedX","clientX","left","adjustedY","floor","clickedAgent","find","updateCanvasSize","container","parentElement","clientWidth","clientHeight","cellWidth","cellHeight","handleZoomIn","prev","handleZoomOut","handlePan","direction","panAmount","handleReset","_jsxruntime","jsxs","className","jsx","_card","CardHeader","CardTitle","ref","style","onClick","_button","Button","variant","size","_lucidereact","ArrowUp","ArrowLeft","RefreshCw","ArrowRight","ArrowDown","ZoomOut","round","ZoomIn","onMouseDown","_GlobalKnowledgeGraph","default","onSelectNode"],"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/components/gridworld.tsx"],"sourcesContent":["\"use client\";\n\nimport type React from \"react\";\n\nimport { useRef, useEffect, useState, useCallback } from \"react\";\nimport type { Agent, Conversation, Position } from \"@/lib/types\";\nimport { CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  ZoomIn,\n  ZoomOut,\n  ArrowUp,\n  ArrowDown,\n  ArrowLeft,\n  ArrowRight,\n  RefreshCw,\n} from \"lucide-react\";\nimport GlobalKnowledgeGraph from \"@/components/GlobalKnowledgeGraph\";\n\ninterface GridWorldProps {\n  agents: Agent[];\n  onUpdatePosition: (agentId: string, position: Position) => void;\n  activeConversation: Conversation | null;\n  onSelectKnowledgeNode: (\n    nodeType: \"entry\" | \"tag\",\n    nodeId: string,\n    nodeTitle: string,\n  ) => void;\n  onShowAbout: () => void;\n}\n\nexport default function GridWorld({\n  agents,\n  onUpdatePosition,\n  activeConversation,\n  onSelectKnowledgeNode,\n  onShowAbout,\n}: GridWorldProps) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [gridSize, setGridSize] = useState({ width: 10, height: 10 });\n  const [selectedAgentId, setSelectedAgentId] = useState<string | null>(null);\n  const [cellSize, setCellSize] = useState(40);\n\n  // Navigation state\n  const [zoomLevel, setZoomLevel] = useState(1);\n  const [viewportOffset, setViewportOffset] = useState({ x: 0, y: 0 });\n\n  // Add state variables for resizing\n  const [gridWorldHeight, setGridWorldHeight] = useState<number>(50); // Percentage (0-100)\n  const [isResizing, setIsResizing] = useState<boolean>(false);\n  const [resizeStartY, setResizeStartY] = useState<number>(0);\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  // Resize event handlers\n  const handleResizeStart = (e: React.MouseEvent) => {\n    setIsResizing(true);\n    setResizeStartY(e.clientY);\n  };\n\n  const handleResizeMove = useCallback(\n    (e: MouseEvent) => {\n      if (!isResizing || !containerRef.current) return;\n\n      const containerRect = containerRef.current.getBoundingClientRect();\n      const containerHeight = containerRect.height;\n      const mouseY = e.clientY - containerRect.top;\n\n      // Calculate new height percentage with constraints\n      const newHeightPercentage = Math.min(\n        Math.max(\n          (mouseY / containerHeight) * 100,\n          20, // Minimum 20%\n        ),\n        80, // Maximum 80%\n      );\n\n      setGridWorldHeight(newHeightPercentage);\n    },\n    [isResizing],\n  );\n\n  const handleResizeEnd = () => {\n    setIsResizing(false);\n  };\n\n  // Add event listeners for mouse movement and release\n  useEffect(() => {\n    if (isResizing) {\n      window.addEventListener(\"mousemove\", handleResizeMove);\n      window.addEventListener(\"mouseup\", handleResizeEnd);\n\n      // Add a class to the body to change cursor during resize\n      document.body.classList.add(\"resize-ns\");\n    } else {\n      window.removeEventListener(\"mousemove\", handleResizeMove);\n      window.removeEventListener(\"mouseup\", handleResizeEnd);\n\n      // Remove the cursor class\n      document.body.classList.remove(\"resize-ns\");\n    }\n\n    return () => {\n      window.removeEventListener(\"mousemove\", handleResizeMove);\n      window.removeEventListener(\"mouseup\", handleResizeEnd);\n      document.body.classList.remove(\"resize-ns\");\n    };\n  }, [isResizing, handleResizeMove]);\n\n  // Draw the grid and agents\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext(\"2d\");\n    if (!ctx) return;\n\n    // Clear canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Apply zoom and pan transformations\n    ctx.save();\n    ctx.translate(-viewportOffset.x, -viewportOffset.y);\n    ctx.scale(zoomLevel, zoomLevel);\n\n    // Calculate effective cell size with zoom\n    const effectiveCellSize = cellSize * zoomLevel;\n\n    // Draw grid\n    ctx.strokeStyle = \"#6b21a8\"; // Purple color for grid lines\n    ctx.lineWidth = 1 / zoomLevel; // Adjust line width for zoom\n\n    // Draw vertical lines\n    for (let x = 0; x <= gridSize.width; x++) {\n      ctx.beginPath();\n      ctx.moveTo(x * cellSize, 0);\n      ctx.lineTo(x * cellSize, gridSize.height * cellSize);\n      ctx.stroke();\n    }\n\n    // Draw horizontal lines\n    for (let y = 0; y <= gridSize.height; y++) {\n      ctx.beginPath();\n      ctx.moveTo(0, y * cellSize);\n      ctx.lineTo(gridSize.width * cellSize, y * cellSize);\n      ctx.stroke();\n    }\n\n    // Draw agents\n    agents.forEach((agent) => {\n      const { x, y } = agent.position;\n\n      // Calculate radius with absolute value to ensure it's positive\n      const radius = Math.max(cellSize / 3, 1); // Ensure minimum radius of 1\n\n      // Draw agent circle\n      ctx.beginPath();\n      ctx.arc(\n        x * cellSize + cellSize / 2,\n        y * cellSize + cellSize / 2,\n        radius,\n        0,\n        Math.PI * 2,\n      );\n      ctx.fillStyle = agent.color;\n      ctx.fill();\n\n      // Draw selection indicator if selected\n      if (agent.id === selectedAgentId) {\n        const selectionRadius = Math.max(cellSize / 2, 2); // Ensure minimum radius of 2\n        ctx.beginPath();\n        ctx.arc(\n          x * cellSize + cellSize / 2,\n          y * cellSize + cellSize / 2,\n          selectionRadius,\n          0,\n          Math.PI * 2,\n        );\n        ctx.strokeStyle = \"#ffffff\"; // White selection indicator\n        ctx.lineWidth = 2 / zoomLevel;\n        ctx.stroke();\n      }\n\n      // Draw conversation indicator\n      if (agent.inConversation) {\n        const indicatorRadius = Math.max(cellSize / 2, 2); // Ensure minimum radius of 2\n        ctx.beginPath();\n        ctx.arc(\n          x * cellSize + cellSize / 2,\n          y * cellSize + cellSize / 2,\n          indicatorRadius,\n          0,\n          Math.PI * 2,\n        );\n        ctx.strokeStyle = \"#10b981\";\n        ctx.lineWidth = 2 / zoomLevel;\n        ctx.stroke();\n      }\n\n      // Draw agent name\n      ctx.fillStyle = \"#ffffff\"; // White text\n      ctx.font = `${Math.max(10 / zoomLevel, 8)}px Arial`; // Ensure minimum font size\n      ctx.textAlign = \"center\";\n      ctx.fillText(\n        agent.name,\n        x * cellSize + cellSize / 2,\n        y * cellSize + cellSize + 5,\n      );\n    });\n\n    // Draw conversation lines between agents in conversation\n    if (activeConversation) {\n      const conversationAgents = agents.filter((agent) =>\n        activeConversation.participants.includes(agent.id),\n      );\n\n      if (conversationAgents.length >= 2) {\n        ctx.strokeStyle = \"#10b981\";\n        ctx.lineWidth = 2 / zoomLevel;\n\n        for (let i = 0; i < conversationAgents.length; i++) {\n          for (let j = i + 1; j < conversationAgents.length; j++) {\n            const agent1 = conversationAgents[i];\n            const agent2 = conversationAgents[j];\n\n            ctx.beginPath();\n            ctx.moveTo(\n              agent1.position.x * cellSize + cellSize / 2,\n              agent1.position.y * cellSize + cellSize / 2,\n            );\n            ctx.lineTo(\n              agent2.position.x * cellSize + cellSize / 2,\n              agent2.position.y * cellSize + cellSize / 2,\n            );\n            ctx.stroke();\n          }\n        }\n      }\n    }\n\n    // Restore canvas context\n    ctx.restore();\n  }, [\n    agents,\n    gridSize,\n    cellSize,\n    selectedAgentId,\n    activeConversation,\n    zoomLevel,\n    viewportOffset,\n  ]);\n\n  // Handle canvas click for agent selection and movement\n  const handleCanvasClick = (e: React.MouseEvent<HTMLCanvasElement>) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const rect = canvas.getBoundingClientRect();\n\n    // Adjust for zoom and pan\n    const adjustedX = (e.clientX - rect.left + viewportOffset.x) / zoomLevel;\n    const adjustedY = (e.clientY - rect.top + viewportOffset.y) / zoomLevel;\n\n    const x = Math.floor(adjustedX / cellSize);\n    const y = Math.floor(adjustedY / cellSize);\n\n    // Check if clicked on an agent\n    const clickedAgent = agents.find(\n      (agent) => agent.position.x === x && agent.position.y === y,\n    );\n\n    if (clickedAgent) {\n      setSelectedAgentId(clickedAgent.id);\n    } else if (selectedAgentId) {\n      // Move selected agent to new position\n      onUpdatePosition(selectedAgentId, { x, y });\n      setSelectedAgentId(null);\n    }\n  };\n\n  // Resize canvas when component mounts or when gridWorldHeight changes\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const updateCanvasSize = () => {\n      const container = canvas.parentElement;\n      if (!container) return;\n\n      const width = container.clientWidth;\n      const height = container.clientHeight - 60; // Subtract header height\n\n      canvas.width = width;\n      canvas.height = height;\n\n      // Calculate cell size based on container size and grid dimensions\n      const cellWidth = width / gridSize.width;\n      const cellHeight = height / gridSize.height;\n      setCellSize(Math.min(cellWidth, cellHeight));\n    };\n\n    updateCanvasSize();\n    window.addEventListener(\"resize\", updateCanvasSize);\n\n    return () => {\n      window.removeEventListener(\"resize\", updateCanvasSize);\n    };\n  }, [gridSize, gridWorldHeight]); // Add gridWorldHeight to dependencies\n\n  // Navigation handlers\n  const handleZoomIn = () => {\n    setZoomLevel((prev) => Math.min(prev + 0.2, 3));\n  };\n\n  const handleZoomOut = () => {\n    setZoomLevel((prev) => Math.max(prev - 0.2, 0.5));\n  };\n\n  const handlePan = (direction: \"up\" | \"down\" | \"left\" | \"right\") => {\n    const panAmount = 50;\n\n    setViewportOffset((prev) => {\n      switch (direction) {\n        case \"up\":\n          return { ...prev, y: Math.max(prev.y - panAmount, 0) };\n        case \"down\":\n          return { ...prev, y: prev.y + panAmount };\n        case \"left\":\n          return { ...prev, x: Math.max(prev.x - panAmount, 0) };\n        case \"right\":\n          return { ...prev, x: prev.x + panAmount };\n        default:\n          return prev;\n      }\n    });\n  };\n\n  const handleReset = () => {\n    setZoomLevel(1);\n    setViewportOffset({ x: 0, y: 0 });\n  };\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      <CardHeader className=\"pb-2 border-b border-purple-800 bg-gradient-to-r from-purple-900/50 to-indigo-900/50\">\n        <CardTitle className=\"text-white\">Grid World</CardTitle>\n      </CardHeader>\n\n      {/* Split the content area into two sections */}\n      <div className=\"flex-1 flex flex-col\" ref={containerRef}>\n        {/* Top half: Grid World */}\n        <div className=\"bg-black/20\" style={{ height: `${gridWorldHeight}%` }}>\n          <div className=\"h-full flex flex-col\">\n            <div className=\"p-2 text-sm text-purple-300\">\n              Click an agent to select, then click an empty cell to move.\n            </div>\n            <div className=\"flex-1 relative\">\n              <canvas\n                ref={canvasRef}\n                onClick={handleCanvasClick}\n                className=\"absolute inset-0\"\n              />\n\n              {/* Navigation Controls */}\n              <div className=\"absolute bottom-4 right-4 bg-purple-950/80 backdrop-blur-sm p-2 rounded-lg border border-purple-700 shadow-md\">\n                <div className=\"grid grid-cols-3 gap-1\">\n                  {/* Top row */}\n                  <div></div>\n                  <Button\n                    variant=\"outline\"\n                    size=\"icon\"\n                    onClick={() => handlePan(\"up\")}\n                    className=\"h-8 w-8 bg-purple-900/50 border-purple-500 text-white hover:bg-purple-800 hover:text-white\"\n                  >\n                    <ArrowUp size={16} className=\"text-white\" />\n                  </Button>\n                  <div></div>\n\n                  {/* Middle row */}\n                  <Button\n                    variant=\"outline\"\n                    size=\"icon\"\n                    onClick={() => handlePan(\"left\")}\n                    className=\"h-8 w-8 bg-purple-900/50 border-purple-500 text-white hover:bg-purple-800 hover:text-white\"\n                  >\n                    <ArrowLeft size={16} className=\"text-white\" />\n                  </Button>\n                  <Button\n                    variant=\"outline\"\n                    size=\"icon\"\n                    onClick={handleReset}\n                    className=\"h-8 w-8 bg-purple-900/50 border-purple-500 text-white hover:bg-purple-800 hover:text-white\"\n                  >\n                    <RefreshCw size={16} className=\"text-white\" />\n                  </Button>\n                  <Button\n                    variant=\"outline\"\n                    size=\"icon\"\n                    onClick={() => handlePan(\"right\")}\n                    className=\"h-8 w-8 bg-purple-900/50 border-purple-500 text-white hover:bg-purple-800 hover:text-white\"\n                  >\n                    <ArrowRight size={16} className=\"text-white\" />\n                  </Button>\n\n                  {/* Bottom row */}\n                  <div></div>\n                  <Button\n                    variant=\"outline\"\n                    size=\"icon\"\n                    onClick={() => handlePan(\"down\")}\n                    className=\"h-8 w-8 bg-purple-900/50 border-purple-500 text-white hover:bg-purple-800 hover:text-white\"\n                  >\n                    <ArrowDown size={16} className=\"text-white\" />\n                  </Button>\n                  <div></div>\n                </div>\n\n                {/* Zoom controls */}\n                <div className=\"flex justify-center mt-2 gap-2\">\n                  <Button\n                    variant=\"outline\"\n                    size=\"icon\"\n                    onClick={handleZoomOut}\n                    className=\"h-8 w-8 bg-purple-900/50 border-purple-500 text-white hover:bg-purple-800 hover:text-white\"\n                  >\n                    <ZoomOut size={16} className=\"text-white\" />\n                  </Button>\n                  <span className=\"flex items-center text-xs text-white\">\n                    {Math.round(zoomLevel * 100)}%\n                  </span>\n                  <Button\n                    variant=\"outline\"\n                    size=\"icon\"\n                    onClick={handleZoomIn}\n                    className=\"h-8 w-8 bg-purple-900/50 border-purple-500 text-white hover:bg-purple-800 hover:text-white\"\n                  >\n                    <ZoomIn size={16} className=\"text-white\" />\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Resizable divider */}\n        <div\n          className=\"h-1 bg-purple-800 cursor-row-resize hover:bg-purple-600 relative\"\n          onMouseDown={handleResizeStart}\n        >\n          {/* Visual indicator for draggable area */}\n          <div className=\"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 w-8 h-1 bg-purple-400 rounded-full\"></div>\n        </div>\n\n        {/* Bottom half: Global Knowledge Graph */}\n        <div\n          className=\"border-t border-purple-800\"\n          style={{ height: `${100 - gridWorldHeight}%` }}\n        >\n          <GlobalKnowledgeGraph\n            agents={agents}\n            onSelectNode={onSelectKnowledgeNode}\n            onShowAbout={onShowAbout}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"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","ignoreList":[]}
{"version":3,"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/components/ui/form.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport * as LabelPrimitive from \"@radix-ui/react-label\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport {\n  Controller,\n  ControllerProps,\n  FieldPath,\n  FieldValues,\n  FormProvider,\n  useFormContext,\n} from \"react-hook-form\";\n\nimport { cn } from \"@/lib/utils\";\nimport { Label } from \"@/components/ui/label\";\n\nconst Form = FormProvider;\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n> = {\n  name: TName;\n};\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue,\n);\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  );\n};\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext);\n  const itemContext = React.useContext(FormItemContext);\n  const { getFieldState, formState } = useFormContext();\n\n  const fieldState = getFieldState(fieldContext.name, formState);\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\");\n  }\n\n  const { id } = itemContext;\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  };\n};\n\ntype FormItemContextValue = {\n  id: string;\n};\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue,\n);\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId();\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  );\n});\nFormItem.displayName = \"FormItem\";\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField();\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  );\n});\nFormLabel.displayName = \"FormLabel\";\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } =\n    useFormField();\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  );\n});\nFormControl.displayName = \"FormControl\";\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField();\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  );\n});\nFormDescription.displayName = \"FormDescription\";\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField();\n  const body = error ? String(error?.message) : children;\n\n  if (!body) {\n    return null;\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  );\n});\nFormMessage.displayName = \"FormMessage\";\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n};\n"],"names":["Form","FormControl","FormDescription","FormField","FormItem","FormLabel","FormMessage","useFormField","FormProvider","FormFieldContext","React","createContext","props","Provider","value","name","Controller","fieldContext","useContext","itemContext","FormItemContext","getFieldState","formState","useFormContext","fieldState","Error","id","formItemId","formDescriptionId","formMessageId","forwardRef","className","ref","useId","div","cn","displayName","error","Label","htmlFor","Slot","aria-describedby","aria-invalid","p","children","body","String","message"],"mappings":"AAAA;;;;;;;;;;;;IA2KEA,IAAI;eAAJA;;IAGAC,WAAW;eAAXA;;IACAC,eAAe;eAAfA;;IAEAC,SAAS;eAATA;;IALAC,QAAQ;eAARA;;IACAC,SAAS;eAATA;;IAGAC,WAAW;eAAXA;;IANAC,YAAY;eAAZA;;;;+DAxKqB;2BAEF;+BAQd;uBAEY;uBACG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEtB,MAAMP,OAAOQ,2BAAY;AASzB,MAAMC,iCAAmBC,OAAMC,aAAa,CAC1C,CAAC;AAGH,MAAMR,YAAY,CAGhB,EACA,GAAGS,OACkC;IACrC,qBACE,qBAACH,iBAAiBI,QAAQ;QAACC,OAAO;YAAEC,MAAMH,MAAMG,IAAI;QAAC;kBACnD,cAAA,qBAACC,yBAAU;YAAE,GAAGJ,KAAK;;;AAG3B;AAEA,MAAML,eAAe;IACnB,MAAMU,eAAeP,OAAMQ,UAAU,CAACT;IACtC,MAAMU,cAAcT,OAAMQ,UAAU,CAACE;IACrC,MAAM,EAAEC,aAAa,EAAEC,SAAS,EAAE,GAAGC,IAAAA,6BAAc;IAEnD,MAAMC,aAAaH,cAAcJ,aAAaF,IAAI,EAAEO;IAEpD,IAAI,CAACL,cAAc;QACjB,MAAM,IAAIQ,MAAM;IAClB;IAEA,MAAM,EAAEC,EAAE,EAAE,GAAGP;IAEf,OAAO;QACLO;QACAX,MAAME,aAAaF,IAAI;QACvBY,YAAY,CAAC,EAAED,GAAG,UAAU,CAAC;QAC7BE,mBAAmB,CAAC,EAAEF,GAAG,sBAAsB,CAAC;QAChDG,eAAe,CAAC,EAAEH,GAAG,kBAAkB,CAAC;QACxC,GAAGF,UAAU;IACf;AACF;AAMA,MAAMJ,gCAAkBV,OAAMC,aAAa,CACzC,CAAC;AAGH,MAAMP,yBAAWM,OAAMoB,UAAU,CAG/B,CAAC,EAAEC,SAAS,EAAE,GAAGnB,OAAO,EAAEoB;IAC1B,MAAMN,KAAKhB,OAAMuB,KAAK;IAEtB,qBACE,qBAACb,gBAAgBP,QAAQ;QAACC,OAAO;YAAEY;QAAG;kBACpC,cAAA,qBAACQ;YAAIF,KAAKA;YAAKD,WAAWI,IAAAA,SAAE,EAAC,aAAaJ;YAAa,GAAGnB,KAAK;;;AAGrE;AACAR,SAASgC,WAAW,GAAG;AAEvB,MAAM/B,0BAAYK,OAAMoB,UAAU,CAGhC,CAAC,EAAEC,SAAS,EAAE,GAAGnB,OAAO,EAAEoB;IAC1B,MAAM,EAAEK,KAAK,EAAEV,UAAU,EAAE,GAAGpB;IAE9B,qBACE,qBAAC+B,YAAK;QACJN,KAAKA;QACLD,WAAWI,IAAAA,SAAE,EAACE,SAAS,oBAAoBN;QAC3CQ,SAASZ;QACR,GAAGf,KAAK;;AAGf;AACAP,UAAU+B,WAAW,GAAG;AAExB,MAAMnC,4BAAcS,OAAMoB,UAAU,CAGlC,CAAC,EAAE,GAAGlB,OAAO,EAAEoB;IACf,MAAM,EAAEK,KAAK,EAAEV,UAAU,EAAEC,iBAAiB,EAAEC,aAAa,EAAE,GAC3DtB;IAEF,qBACE,qBAACiC,eAAI;QACHR,KAAKA;QACLN,IAAIC;QACJc,oBACE,CAACJ,QACG,CAAC,EAAET,kBAAkB,CAAC,GACtB,CAAC,EAAEA,kBAAkB,CAAC,EAAEC,cAAc,CAAC;QAE7Ca,gBAAc,CAAC,CAACL;QACf,GAAGzB,KAAK;;AAGf;AACAX,YAAYmC,WAAW,GAAG;AAE1B,MAAMlC,gCAAkBQ,OAAMoB,UAAU,CAGtC,CAAC,EAAEC,SAAS,EAAE,GAAGnB,OAAO,EAAEoB;IAC1B,MAAM,EAAEJ,iBAAiB,EAAE,GAAGrB;IAE9B,qBACE,qBAACoC;QACCX,KAAKA;QACLN,IAAIE;QACJG,WAAWI,IAAAA,SAAE,EAAC,iCAAiCJ;QAC9C,GAAGnB,KAAK;;AAGf;AACAV,gBAAgBkC,WAAW,GAAG;AAE9B,MAAM9B,4BAAcI,OAAMoB,UAAU,CAGlC,CAAC,EAAEC,SAAS,EAAEa,QAAQ,EAAE,GAAGhC,OAAO,EAAEoB;IACpC,MAAM,EAAEK,KAAK,EAAER,aAAa,EAAE,GAAGtB;IACjC,MAAMsC,OAAOR,QAAQS,OAAOT,OAAOU,WAAWH;IAE9C,IAAI,CAACC,MAAM;QACT,OAAO;IACT;IAEA,qBACE,qBAACF;QACCX,KAAKA;QACLN,IAAIG;QACJE,WAAWI,IAAAA,SAAE,EAAC,wCAAwCJ;QACrD,GAAGnB,KAAK;kBAERiC;;AAGP;AACAvC,YAAY8B,WAAW,GAAG"}
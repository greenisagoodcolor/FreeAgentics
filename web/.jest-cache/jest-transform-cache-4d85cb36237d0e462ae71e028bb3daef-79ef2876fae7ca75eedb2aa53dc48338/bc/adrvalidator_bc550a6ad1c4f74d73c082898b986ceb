a5c0592dae6c93a61e4447bc41355cf9
"use client";
"use strict";

/* istanbul ignore next */
function cov_2lzatt5963() {
  var path = "/Users/matthewmoroney/builds/FreeAgentics/web/lib/compliance/adr-validator.ts";
  var hash = "9b56f01ebd419b001188c7369095c0af662ecb9d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewmoroney/builds/FreeAgentics/web/lib/compliance/adr-validator.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 28,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 38
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 35
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 32
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 33
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 28
        }
      },
      "9": {
        start: {
          line: 30,
          column: 20
        },
        end: {
          line: 164,
          column: 1
        }
      },
      "10": {
        start: {
          line: 39,
          column: 33
        },
        end: {
          line: 39,
          column: 40
        }
      },
      "11": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 57,
          column: 13
        }
      },
      "12": {
        start: {
          line: 41,
          column: 35
        },
        end: {
          line: 46,
          column: 17
        }
      },
      "13": {
        start: {
          line: 47,
          column: 40
        },
        end: {
          line: 47,
          column: 88
        }
      },
      "14": {
        start: {
          line: 47,
          column: 64
        },
        end: {
          line: 47,
          column: 87
        }
      },
      "15": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 56,
          column: 18
        }
      },
      "16": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 62,
          column: 14
        }
      },
      "17": {
        start: {
          line: 73,
          column: 46
        },
        end: {
          line: 73,
          column: 53
        }
      },
      "18": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 85,
          column: 13
        }
      },
      "19": {
        start: {
          line: 75,
          column: 37
        },
        end: {
          line: 75,
          column: 65
        }
      },
      "20": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 84,
          column: 18
        }
      },
      "21": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 90,
          column: 14
        }
      },
      "22": {
        start: {
          line: 101,
          column: 46
        },
        end: {
          line: 101,
          column: 53
        }
      },
      "23": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 113,
          column: 13
        }
      },
      "24": {
        start: {
          line: 103,
          column: 35
        },
        end: {
          line: 103,
          column: 61
        }
      },
      "25": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 112,
          column: 18
        }
      },
      "26": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 118,
          column: 14
        }
      },
      "27": {
        start: {
          line: 129,
          column: 48
        },
        end: {
          line: 129,
          column: 55
        }
      },
      "28": {
        start: {
          line: 130,
          column: 37
        },
        end: {
          line: 144,
          column: 13
        }
      },
      "29": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 156,
          column: 13
        }
      },
      "30": {
        start: {
          line: 145,
          column: 63
        },
        end: {
          line: 145,
          column: 91
        }
      },
      "31": {
        start: {
          line: 146,
          column: 34
        },
        end: {
          line: 146,
          column: 70
        }
      },
      "32": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 155,
          column: 18
        }
      },
      "33": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 161,
          column: 14
        }
      },
      "34": {
        start: {
          line: 166,
          column: 20
        },
        end: {
          line: 268,
          column: 1
        }
      },
      "35": {
        start: {
          line: 175,
          column: 33
        },
        end: {
          line: 175,
          column: 40
        }
      },
      "36": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 192,
          column: 13
        }
      },
      "37": {
        start: {
          line: 177,
          column: 34
        },
        end: {
          line: 177,
          column: 53
        }
      },
      "38": {
        start: {
          line: 178,
          column: 33
        },
        end: {
          line: 178,
          column: 57
        }
      },
      "39": {
        start: {
          line: 179,
          column: 16
        },
        end: {
          line: 191,
          column: 17
        }
      },
      "40": {
        start: {
          line: 180,
          column: 40
        },
        end: {
          line: 180,
          column: 105
        }
      },
      "41": {
        start: {
          line: 181,
          column: 43
        },
        end: {
          line: 181,
          column: 89
        }
      },
      "42": {
        start: {
          line: 182,
          column: 20
        },
        end: {
          line: 190,
          column: 22
        }
      },
      "43": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 197,
          column: 14
        }
      },
      "44": {
        start: {
          line: 208,
          column: 46
        },
        end: {
          line: 208,
          column: 53
        }
      },
      "45": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 213,
          column: 14
        }
      },
      "46": {
        start: {
          line: 209,
          column: 30
        },
        end: {
          line: 213,
          column: 14
        }
      },
      "47": {
        start: {
          line: 214,
          column: 33
        },
        end: {
          line: 214,
          column: 69
        }
      },
      "48": {
        start: {
          line: 215,
          column: 33
        },
        end: {
          line: 215,
          column: 99
        }
      },
      "49": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 226,
          column: 13
        }
      },
      "50": {
        start: {
          line: 217,
          column: 16
        },
        end: {
          line: 225,
          column: 18
        }
      },
      "51": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 231,
          column: 14
        }
      },
      "52": {
        start: {
          line: 242,
          column: 46
        },
        end: {
          line: 242,
          column: 53
        }
      },
      "53": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 249,
          column: 13
        }
      },
      "54": {
        start: {
          line: 244,
          column: 16
        },
        end: {
          line: 248,
          column: 18
        }
      },
      "55": {
        start: {
          line: 250,
          column: 38
        },
        end: {
          line: 254,
          column: 13
        }
      },
      "56": {
        start: {
          line: 255,
          column: 38
        },
        end: {
          line: 255,
          column: 98
        }
      },
      "57": {
        start: {
          line: 255,
          column: 72
        },
        end: {
          line: 255,
          column: 97
        }
      },
      "58": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 265,
          column: 14
        }
      },
      "59": {
        start: {
          line: 270,
          column: 25
        },
        end: {
          line: 354,
          column: 1
        }
      },
      "60": {
        start: {
          line: 279,
          column: 51
        },
        end: {
          line: 279,
          column: 58
        }
      },
      "61": {
        start: {
          line: 280,
          column: 12
        },
        end: {
          line: 286,
          column: 13
        }
      },
      "62": {
        start: {
          line: 281,
          column: 16
        },
        end: {
          line: 285,
          column: 18
        }
      },
      "63": {
        start: {
          line: 287,
          column: 30
        },
        end: {
          line: 287,
          column: 60
        }
      },
      "64": {
        start: {
          line: 288,
          column: 28
        },
        end: {
          line: 288,
          column: 95
        }
      },
      "65": {
        start: {
          line: 289,
          column: 37
        },
        end: {
          line: 289,
          column: 52
        }
      },
      "66": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 301,
          column: 13
        }
      },
      "67": {
        start: {
          line: 291,
          column: 16
        },
        end: {
          line: 300,
          column: 18
        }
      },
      "68": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 306,
          column: 14
        }
      },
      "69": {
        start: {
          line: 317,
          column: 36
        },
        end: {
          line: 317,
          column: 43
        }
      },
      "70": {
        start: {
          line: 318,
          column: 12
        },
        end: {
          line: 322,
          column: 14
        }
      },
      "71": {
        start: {
          line: 318,
          column: 30
        },
        end: {
          line: 322,
          column: 14
        }
      },
      "72": {
        start: {
          line: 323,
          column: 33
        },
        end: {
          line: 327,
          column: 13
        }
      },
      "73": {
        start: {
          line: 328,
          column: 39
        },
        end: {
          line: 332,
          column: 13
        }
      },
      "74": {
        start: {
          line: 333,
          column: 35
        },
        end: {
          line: 333,
          column: 96
        }
      },
      "75": {
        start: {
          line: 333,
          column: 70
        },
        end: {
          line: 333,
          column: 95
        }
      },
      "76": {
        start: {
          line: 334,
          column: 33
        },
        end: {
          line: 334,
          column: 88
        }
      },
      "77": {
        start: {
          line: 334,
          column: 62
        },
        end: {
          line: 334,
          column: 87
        }
      },
      "78": {
        start: {
          line: 335,
          column: 12
        },
        end: {
          line: 346,
          column: 13
        }
      },
      "79": {
        start: {
          line: 336,
          column: 16
        },
        end: {
          line: 345,
          column: 18
        }
      },
      "80": {
        start: {
          line: 347,
          column: 12
        },
        end: {
          line: 351,
          column: 14
        }
      },
      "81": {
        start: {
          line: 356,
          column: 17
        },
        end: {
          line: 360,
          column: 1
        }
      },
      "82": {
        start: {
          line: 363,
          column: 8
        },
        end: {
          line: 366,
          column: 10
        }
      },
      "83": {
        start: {
          line: 369,
          column: 24
        },
        end: {
          line: 369,
          column: 26
        }
      },
      "84": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 387,
          column: 9
        }
      },
      "85": {
        start: {
          line: 371,
          column: 12
        },
        end: {
          line: 386,
          column: 13
        }
      },
      "86": {
        start: {
          line: 372,
          column: 31
        },
        end: {
          line: 372,
          column: 50
        }
      },
      "87": {
        start: {
          line: 373,
          column: 16
        },
        end: {
          line: 377,
          column: 19
        }
      },
      "88": {
        start: {
          line: 379,
          column: 16
        },
        end: {
          line: 385,
          column: 19
        }
      },
      "89": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 388,
          column: 44
        }
      },
      "90": {
        start: {
          line: 391,
          column: 27
        },
        end: {
          line: 391,
          column: 29
        }
      },
      "91": {
        start: {
          line: 392,
          column: 8
        },
        end: {
          line: 395,
          column: 9
        }
      },
      "92": {
        start: {
          line: 393,
          column: 32
        },
        end: {
          line: 393,
          column: 58
        }
      },
      "93": {
        start: {
          line: 394,
          column: 12
        },
        end: {
          line: 394,
          column: 52
        }
      },
      "94": {
        start: {
          line: 396,
          column: 8
        },
        end: {
          line: 396,
          column: 47
        }
      },
      "95": {
        start: {
          line: 399,
          column: 28
        },
        end: {
          line: 399,
          column: 42
        }
      },
      "96": {
        start: {
          line: 400,
          column: 23
        },
        end: {
          line: 400,
          column: 59
        }
      },
      "97": {
        start: {
          line: 400,
          column: 43
        },
        end: {
          line: 400,
          column: 51
        }
      },
      "98": {
        start: {
          line: 401,
          column: 23
        },
        end: {
          line: 401,
          column: 60
        }
      },
      "99": {
        start: {
          line: 401,
          column: 43
        },
        end: {
          line: 401,
          column: 52
        }
      },
      "100": {
        start: {
          line: 402,
          column: 25
        },
        end: {
          line: 402,
          column: 77
        }
      },
      "101": {
        start: {
          line: 402,
          column: 45
        },
        end: {
          line: 402,
          column: 69
        }
      },
      "102": {
        start: {
          line: 403,
          column: 23
        },
        end: {
          line: 403,
          column: 73
        }
      },
      "103": {
        start: {
          line: 403,
          column: 43
        },
        end: {
          line: 403,
          column: 65
        }
      },
      "104": {
        start: {
          line: 404,
          column: 29
        },
        end: {
          line: 404,
          column: 91
        }
      },
      "105": {
        start: {
          line: 406,
          column: 27
        },
        end: {
          line: 406,
          column: 29
        }
      },
      "106": {
        start: {
          line: 407,
          column: 22
        },
        end: {
          line: 407,
          column: 24
        }
      },
      "107": {
        start: {
          line: 408,
          column: 27
        },
        end: {
          line: 412,
          column: 9
        }
      },
      "108": {
        start: {
          line: 413,
          column: 8
        },
        end: {
          line: 432,
          column: 9
        }
      },
      "109": {
        start: {
          line: 415,
          column: 12
        },
        end: {
          line: 420,
          column: 13
        }
      },
      "110": {
        start: {
          line: 416,
          column: 16
        },
        end: {
          line: 419,
          column: 18
        }
      },
      "111": {
        start: {
          line: 421,
          column: 12
        },
        end: {
          line: 421,
          column: 84
        }
      },
      "112": {
        start: {
          line: 423,
          column: 12
        },
        end: {
          line: 428,
          column: 13
        }
      },
      "113": {
        start: {
          line: 424,
          column: 16
        },
        end: {
          line: 427,
          column: 18
        }
      },
      "114": {
        start: {
          line: 429,
          column: 12
        },
        end: {
          line: 429,
          column: 74
        }
      },
      "115": {
        start: {
          line: 431,
          column: 12
        },
        end: {
          line: 431,
          column: 42
        }
      },
      "116": {
        start: {
          line: 434,
          column: 32
        },
        end: {
          line: 434,
          column: 69
        }
      },
      "117": {
        start: {
          line: 435,
          column: 8
        },
        end: {
          line: 450,
          column: 10
        }
      },
      "118": {
        start: {
          line: 453,
          column: 32
        },
        end: {
          line: 453,
          column: 34
        }
      },
      "119": {
        start: {
          line: 454,
          column: 28
        },
        end: {
          line: 454,
          column: 58
        }
      },
      "120": {
        start: {
          line: 454,
          column: 48
        },
        end: {
          line: 454,
          column: 57
        }
      },
      "121": {
        start: {
          line: 455,
          column: 8
        },
        end: {
          line: 458,
          column: 9
        }
      },
      "122": {
        start: {
          line: 456,
          column: 12
        },
        end: {
          line: 456,
          column: 72
        }
      },
      "123": {
        start: {
          line: 457,
          column: 12
        },
        end: {
          line: 457,
          column: 35
        }
      },
      "124": {
        start: {
          line: 460,
          column: 34
        },
        end: {
          line: 460,
          column: 90
        }
      },
      "125": {
        start: {
          line: 460,
          column: 58
        },
        end: {
          line: 460,
          column: 89
        }
      },
      "126": {
        start: {
          line: 461,
          column: 37
        },
        end: {
          line: 461,
          column: 96
        }
      },
      "127": {
        start: {
          line: 461,
          column: 61
        },
        end: {
          line: 461,
          column: 95
        }
      },
      "128": {
        start: {
          line: 462,
          column: 36
        },
        end: {
          line: 462,
          column: 94
        }
      },
      "129": {
        start: {
          line: 462,
          column: 60
        },
        end: {
          line: 462,
          column: 93
        }
      },
      "130": {
        start: {
          line: 463,
          column: 8
        },
        end: {
          line: 465,
          column: 9
        }
      },
      "131": {
        start: {
          line: 464,
          column: 12
        },
        end: {
          line: 464,
          column: 153
        }
      },
      "132": {
        start: {
          line: 466,
          column: 8
        },
        end: {
          line: 468,
          column: 9
        }
      },
      "133": {
        start: {
          line: 467,
          column: 12
        },
        end: {
          line: 467,
          column: 124
        }
      },
      "134": {
        start: {
          line: 469,
          column: 8
        },
        end: {
          line: 471,
          column: 9
        }
      },
      "135": {
        start: {
          line: 470,
          column: 12
        },
        end: {
          line: 470,
          column: 128
        }
      },
      "136": {
        start: {
          line: 473,
          column: 31
        },
        end: {
          line: 473,
          column: 40
        }
      },
      "137": {
        start: {
          line: 474,
          column: 8
        },
        end: {
          line: 477,
          column: 9
        }
      },
      "138": {
        start: {
          line: 475,
          column: 26
        },
        end: {
          line: 475,
          column: 66
        }
      },
      "139": {
        start: {
          line: 476,
          column: 12
        },
        end: {
          line: 476,
          column: 59
        }
      },
      "140": {
        start: {
          line: 478,
          column: 28
        },
        end: {
          line: 478,
          column: 104
        }
      },
      "141": {
        start: {
          line: 478,
          column: 86
        },
        end: {
          line: 478,
          column: 91
        }
      },
      "142": {
        start: {
          line: 479,
          column: 8
        },
        end: {
          line: 484,
          column: 9
        }
      },
      "143": {
        start: {
          line: 480,
          column: 25
        },
        end: {
          line: 480,
          column: 62
        }
      },
      "144": {
        start: {
          line: 480,
          column: 46
        },
        end: {
          line: 480,
          column: 61
        }
      },
      "145": {
        start: {
          line: 481,
          column: 12
        },
        end: {
          line: 483,
          column: 13
        }
      },
      "146": {
        start: {
          line: 482,
          column: 16
        },
        end: {
          line: 482,
          column: 101
        }
      },
      "147": {
        start: {
          line: 485,
          column: 8
        },
        end: {
          line: 485,
          column: 31
        }
      },
      "148": {
        start: {
          line: 488,
          column: 8
        },
        end: {
          line: 488,
          column: 59
        }
      },
      "149": {
        start: {
          line: 488,
          column: 39
        },
        end: {
          line: 488,
          column: 57
        }
      },
      "150": {
        start: {
          line: 491,
          column: 8
        },
        end: {
          line: 491,
          column: 59
        }
      },
      "151": {
        start: {
          line: 491,
          column: 41
        },
        end: {
          line: 491,
          column: 57
        }
      },
      "152": {
        start: {
          line: 494,
          column: 8
        },
        end: {
          line: 494,
          column: 69
        }
      },
      "153": {
        start: {
          line: 494,
          column: 41
        },
        end: {
          line: 494,
          column: 67
        }
      },
      "154": {
        start: {
          line: 497,
          column: 28
        },
        end: {
          line: 497,
          column: 56
        }
      },
      "155": {
        start: {
          line: 499,
          column: 4
        },
        end: {
          line: 503,
          column: 7
        }
      },
      "156": {
        start: {
          line: 506,
          column: 4
        },
        end: {
          line: 509,
          column: 7
        }
      },
      "157": {
        start: {
          line: 512,
          column: 4
        },
        end: {
          line: 515,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 28
          },
          end: {
            line: 13,
            column: 29
          }
        },
        loc: {
          start: {
            line: 13,
            column: 39
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 25
          },
          end: {
            line: 16,
            column: 26
          }
        },
        loc: {
          start: {
            line: 16,
            column: 36
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 22
          },
          end: {
            line: 19,
            column: 23
          }
        },
        loc: {
          start: {
            line: 19,
            column: 33
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 23
          },
          end: {
            line: 22,
            column: 24
          }
        },
        loc: {
          start: {
            line: 22,
            column: 34
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 18
          },
          end: {
            line: 25,
            column: 19
          }
        },
        loc: {
          start: {
            line: 25,
            column: 29
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 38,
            column: 15
          },
          end: {
            line: 38,
            column: 16
          }
        },
        loc: {
          start: {
            line: 38,
            column: 26
          },
          end: {
            line: 63,
            column: 9
          }
        },
        line: 38
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 47,
            column: 56
          },
          end: {
            line: 47,
            column: 57
          }
        },
        loc: {
          start: {
            line: 47,
            column: 64
          },
          end: {
            line: 47,
            column: 87
          }
        },
        line: 47
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 72,
            column: 15
          },
          end: {
            line: 72,
            column: 16
          }
        },
        loc: {
          start: {
            line: 72,
            column: 26
          },
          end: {
            line: 91,
            column: 9
          }
        },
        line: 72
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 100,
            column: 15
          },
          end: {
            line: 100,
            column: 16
          }
        },
        loc: {
          start: {
            line: 100,
            column: 26
          },
          end: {
            line: 119,
            column: 9
          }
        },
        line: 100
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 128,
            column: 15
          },
          end: {
            line: 128,
            column: 16
          }
        },
        loc: {
          start: {
            line: 128,
            column: 26
          },
          end: {
            line: 162,
            column: 9
          }
        },
        line: 128
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 145,
            column: 55
          },
          end: {
            line: 145,
            column: 56
          }
        },
        loc: {
          start: {
            line: 145,
            column: 63
          },
          end: {
            line: 145,
            column: 91
          }
        },
        line: 145
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 174,
            column: 15
          },
          end: {
            line: 174,
            column: 16
          }
        },
        loc: {
          start: {
            line: 174,
            column: 26
          },
          end: {
            line: 198,
            column: 9
          }
        },
        line: 174
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 207,
            column: 15
          },
          end: {
            line: 207,
            column: 16
          }
        },
        loc: {
          start: {
            line: 207,
            column: 26
          },
          end: {
            line: 232,
            column: 9
          }
        },
        line: 207
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 241,
            column: 15
          },
          end: {
            line: 241,
            column: 16
          }
        },
        loc: {
          start: {
            line: 241,
            column: 26
          },
          end: {
            line: 266,
            column: 9
          }
        },
        line: 241
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 255,
            column: 61
          },
          end: {
            line: 255,
            column: 62
          }
        },
        loc: {
          start: {
            line: 255,
            column: 72
          },
          end: {
            line: 255,
            column: 97
          }
        },
        line: 255
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 278,
            column: 15
          },
          end: {
            line: 278,
            column: 16
          }
        },
        loc: {
          start: {
            line: 278,
            column: 26
          },
          end: {
            line: 307,
            column: 9
          }
        },
        line: 278
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 316,
            column: 15
          },
          end: {
            line: 316,
            column: 16
          }
        },
        loc: {
          start: {
            line: 316,
            column: 26
          },
          end: {
            line: 352,
            column: 9
          }
        },
        line: 316
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 333,
            column: 59
          },
          end: {
            line: 333,
            column: 60
          }
        },
        loc: {
          start: {
            line: 333,
            column: 70
          },
          end: {
            line: 333,
            column: 95
          }
        },
        line: 333
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 334,
            column: 51
          },
          end: {
            line: 334,
            column: 52
          }
        },
        loc: {
          start: {
            line: 334,
            column: 62
          },
          end: {
            line: 334,
            column: 87
          }
        },
        line: 334
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 362,
            column: 4
          },
          end: {
            line: 362,
            column: 5
          }
        },
        loc: {
          start: {
            line: 362,
            column: 33
          },
          end: {
            line: 367,
            column: 5
          }
        },
        line: 362
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 368,
            column: 4
          },
          end: {
            line: 368,
            column: 5
          }
        },
        loc: {
          start: {
            line: 368,
            column: 26
          },
          end: {
            line: 389,
            column: 5
          }
        },
        line: 368
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 390,
            column: 4
          },
          end: {
            line: 390,
            column: 5
          }
        },
        loc: {
          start: {
            line: 390,
            column: 36
          },
          end: {
            line: 397,
            column: 5
          }
        },
        line: 390
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 398,
            column: 4
          },
          end: {
            line: 398,
            column: 5
          }
        },
        loc: {
          start: {
            line: 398,
            column: 28
          },
          end: {
            line: 451,
            column: 5
          }
        },
        line: 398
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 400,
            column: 38
          },
          end: {
            line: 400,
            column: 39
          }
        },
        loc: {
          start: {
            line: 400,
            column: 43
          },
          end: {
            line: 400,
            column: 51
          }
        },
        line: 400
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 401,
            column: 38
          },
          end: {
            line: 401,
            column: 39
          }
        },
        loc: {
          start: {
            line: 401,
            column: 43
          },
          end: {
            line: 401,
            column: 52
          }
        },
        line: 401
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 402,
            column: 40
          },
          end: {
            line: 402,
            column: 41
          }
        },
        loc: {
          start: {
            line: 402,
            column: 45
          },
          end: {
            line: 402,
            column: 69
          }
        },
        line: 402
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 403,
            column: 38
          },
          end: {
            line: 403,
            column: 39
          }
        },
        loc: {
          start: {
            line: 403,
            column: 43
          },
          end: {
            line: 403,
            column: 65
          }
        },
        line: 403
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 452,
            column: 4
          },
          end: {
            line: 452,
            column: 5
          }
        },
        loc: {
          start: {
            line: 452,
            column: 37
          },
          end: {
            line: 486,
            column: 5
          }
        },
        line: 452
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 454,
            column: 43
          },
          end: {
            line: 454,
            column: 44
          }
        },
        loc: {
          start: {
            line: 454,
            column: 48
          },
          end: {
            line: 454,
            column: 57
          }
        },
        line: 454
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 460,
            column: 53
          },
          end: {
            line: 460,
            column: 54
          }
        },
        loc: {
          start: {
            line: 460,
            column: 58
          },
          end: {
            line: 460,
            column: 89
          }
        },
        line: 460
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 461,
            column: 56
          },
          end: {
            line: 461,
            column: 57
          }
        },
        loc: {
          start: {
            line: 461,
            column: 61
          },
          end: {
            line: 461,
            column: 95
          }
        },
        line: 461
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 462,
            column: 55
          },
          end: {
            line: 462,
            column: 56
          }
        },
        loc: {
          start: {
            line: 462,
            column: 60
          },
          end: {
            line: 462,
            column: 93
          }
        },
        line: 462
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 478,
            column: 70
          },
          end: {
            line: 478,
            column: 71
          }
        },
        loc: {
          start: {
            line: 478,
            column: 86
          },
          end: {
            line: 478,
            column: 91
          }
        },
        line: 478
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 480,
            column: 41
          },
          end: {
            line: 480,
            column: 42
          }
        },
        loc: {
          start: {
            line: 480,
            column: 46
          },
          end: {
            line: 480,
            column: 61
          }
        },
        line: 480
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 487,
            column: 4
          },
          end: {
            line: 487,
            column: 5
          }
        },
        loc: {
          start: {
            line: 487,
            column: 20
          },
          end: {
            line: 489,
            column: 5
          }
        },
        line: 487
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 488,
            column: 31
          },
          end: {
            line: 488,
            column: 32
          }
        },
        loc: {
          start: {
            line: 488,
            column: 39
          },
          end: {
            line: 488,
            column: 57
          }
        },
        line: 488
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 490,
            column: 4
          },
          end: {
            line: 490,
            column: 5
          }
        },
        loc: {
          start: {
            line: 490,
            column: 23
          },
          end: {
            line: 492,
            column: 5
          }
        },
        line: 490
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 491,
            column: 33
          },
          end: {
            line: 491,
            column: 34
          }
        },
        loc: {
          start: {
            line: 491,
            column: 41
          },
          end: {
            line: 491,
            column: 57
          }
        },
        line: 491
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 493,
            column: 4
          },
          end: {
            line: 493,
            column: 5
          }
        },
        loc: {
          start: {
            line: 493,
            column: 33
          },
          end: {
            line: 495,
            column: 5
          }
        },
        line: 493
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 494,
            column: 33
          },
          end: {
            line: 494,
            column: 34
          }
        },
        loc: {
          start: {
            line: 494,
            column: 41
          },
          end: {
            line: 494,
            column: 67
          }
        },
        line: 494
      },
      "41": {
        name: "validateComponent",
        decl: {
          start: {
            line: 498,
            column: 9
          },
          end: {
            line: 498,
            column: 26
          }
        },
        loc: {
          start: {
            line: 498,
            column: 65
          },
          end: {
            line: 504,
            column: 1
          }
        },
        line: 498
      },
      "42": {
        name: "validateHook",
        decl: {
          start: {
            line: 505,
            column: 9
          },
          end: {
            line: 505,
            column: 21
          }
        },
        loc: {
          start: {
            line: 505,
            column: 45
          },
          end: {
            line: 510,
            column: 1
          }
        },
        line: 505
      },
      "43": {
        name: "validateAPIRoute",
        decl: {
          start: {
            line: 511,
            column: 9
          },
          end: {
            line: 511,
            column: 25
          }
        },
        loc: {
          start: {
            line: 511,
            column: 49
          },
          end: {
            line: 516,
            column: 1
          }
        },
        line: 511
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 57,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 57,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "1": {
        loc: {
          start: {
            line: 40,
            column: 16
          },
          end: {
            line: 40,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 16
          },
          end: {
            line: 40,
            column: 41
          }
        }, {
          start: {
            line: 40,
            column: 45
          },
          end: {
            line: 40,
            column: 75
          }
        }],
        line: 40
      },
      "2": {
        loc: {
          start: {
            line: 50,
            column: 29
          },
          end: {
            line: 50,
            column: 152
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 50,
            column: 47
          },
          end: {
            line: 50,
            column: 92
          }
        }, {
          start: {
            line: 50,
            column: 95
          },
          end: {
            line: 50,
            column: 152
          }
        }],
        line: 50
      },
      "3": {
        loc: {
          start: {
            line: 52,
            column: 33
          },
          end: {
            line: 55,
            column: 21
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 52,
            column: 51
          },
          end: {
            line: 52,
            column: 53
          }
        }, {
          start: {
            line: 52,
            column: 56
          },
          end: {
            line: 55,
            column: 21
          }
        }],
        line: 52
      },
      "4": {
        loc: {
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 85,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 85,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "5": {
        loc: {
          start: {
            line: 74,
            column: 16
          },
          end: {
            line: 74,
            column: 125
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 16
          },
          end: {
            line: 74,
            column: 40
          }
        }, {
          start: {
            line: 74,
            column: 44
          },
          end: {
            line: 74,
            column: 72
          }
        }, {
          start: {
            line: 74,
            column: 76
          },
          end: {
            line: 74,
            column: 125
          }
        }],
        line: 74
      },
      "6": {
        loc: {
          start: {
            line: 78,
            column: 29
          },
          end: {
            line: 78,
            column: 126
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 78,
            column: 44
          },
          end: {
            line: 78,
            column: 81
          }
        }, {
          start: {
            line: 78,
            column: 84
          },
          end: {
            line: 78,
            column: 126
          }
        }],
        line: 78
      },
      "7": {
        loc: {
          start: {
            line: 80,
            column: 33
          },
          end: {
            line: 83,
            column: 21
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 80,
            column: 48
          },
          end: {
            line: 80,
            column: 50
          }
        }, {
          start: {
            line: 80,
            column: 53
          },
          end: {
            line: 83,
            column: 21
          }
        }],
        line: 80
      },
      "8": {
        loc: {
          start: {
            line: 102,
            column: 12
          },
          end: {
            line: 113,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 12
          },
          end: {
            line: 113,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "9": {
        loc: {
          start: {
            line: 102,
            column: 16
          },
          end: {
            line: 102,
            column: 169
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 16
          },
          end: {
            line: 102,
            column: 40
          }
        }, {
          start: {
            line: 102,
            column: 44
          },
          end: {
            line: 102,
            column: 70
          }
        }, {
          start: {
            line: 102,
            column: 74
          },
          end: {
            line: 102,
            column: 103
          }
        }, {
          start: {
            line: 102,
            column: 107
          },
          end: {
            line: 102,
            column: 134
          }
        }, {
          start: {
            line: 102,
            column: 138
          },
          end: {
            line: 102,
            column: 169
          }
        }],
        line: 102
      },
      "10": {
        loc: {
          start: {
            line: 106,
            column: 29
          },
          end: {
            line: 106,
            column: 130
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 106,
            column: 42
          },
          end: {
            line: 106,
            column: 80
          }
        }, {
          start: {
            line: 106,
            column: 83
          },
          end: {
            line: 106,
            column: 130
          }
        }],
        line: 106
      },
      "11": {
        loc: {
          start: {
            line: 108,
            column: 33
          },
          end: {
            line: 111,
            column: 21
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 108,
            column: 46
          },
          end: {
            line: 108,
            column: 48
          }
        }, {
          start: {
            line: 108,
            column: 51
          },
          end: {
            line: 111,
            column: 21
          }
        }],
        line: 108
      },
      "12": {
        loc: {
          start: {
            line: 145,
            column: 12
          },
          end: {
            line: 156,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 12
          },
          end: {
            line: 156,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "13": {
        loc: {
          start: {
            line: 145,
            column: 16
          },
          end: {
            line: 145,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 145,
            column: 16
          },
          end: {
            line: 145,
            column: 29
          }
        }, {
          start: {
            line: 145,
            column: 33
          },
          end: {
            line: 145,
            column: 92
          }
        }],
        line: 145
      },
      "14": {
        loc: {
          start: {
            line: 149,
            column: 29
          },
          end: {
            line: 149,
            column: 135
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 149,
            column: 41
          },
          end: {
            line: 149,
            column: 79
          }
        }, {
          start: {
            line: 149,
            column: 82
          },
          end: {
            line: 149,
            column: 135
          }
        }],
        line: 149
      },
      "15": {
        loc: {
          start: {
            line: 151,
            column: 33
          },
          end: {
            line: 154,
            column: 21
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 151,
            column: 45
          },
          end: {
            line: 151,
            column: 47
          }
        }, {
          start: {
            line: 151,
            column: 50
          },
          end: {
            line: 154,
            column: 21
          }
        }],
        line: 151
      },
      "16": {
        loc: {
          start: {
            line: 176,
            column: 12
          },
          end: {
            line: 192,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 12
          },
          end: {
            line: 192,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "17": {
        loc: {
          start: {
            line: 176,
            column: 16
          },
          end: {
            line: 176,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 176,
            column: 16
          },
          end: {
            line: 176,
            column: 42
          }
        }, {
          start: {
            line: 176,
            column: 46
          },
          end: {
            line: 176,
            column: 75
          }
        }],
        line: 176
      },
      "18": {
        loc: {
          start: {
            line: 179,
            column: 16
          },
          end: {
            line: 191,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 16
          },
          end: {
            line: 191,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "19": {
        loc: {
          start: {
            line: 179,
            column: 20
          },
          end: {
            line: 179,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 179,
            column: 20
          },
          end: {
            line: 179,
            column: 35
          }
        }, {
          start: {
            line: 179,
            column: 39
          },
          end: {
            line: 179,
            column: 71
          }
        }],
        line: 179
      },
      "20": {
        loc: {
          start: {
            line: 180,
            column: 40
          },
          end: {
            line: 180,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 180,
            column: 40
          },
          end: {
            line: 180,
            column: 63
          }
        }, {
          start: {
            line: 180,
            column: 67
          },
          end: {
            line: 180,
            column: 105
          }
        }],
        line: 180
      },
      "21": {
        loc: {
          start: {
            line: 183,
            column: 32
          },
          end: {
            line: 183,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 183,
            column: 32
          },
          end: {
            line: 183,
            column: 43
          }
        }, {
          start: {
            line: 183,
            column: 47
          },
          end: {
            line: 183,
            column: 61
          }
        }],
        line: 183
      },
      "22": {
        loc: {
          start: {
            line: 184,
            column: 33
          },
          end: {
            line: 184,
            column: 173
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 184,
            column: 65
          },
          end: {
            line: 184,
            column: 102
          }
        }, {
          start: {
            line: 184,
            column: 105
          },
          end: {
            line: 184,
            column: 173
          }
        }],
        line: 184
      },
      "23": {
        loc: {
          start: {
            line: 184,
            column: 33
          },
          end: {
            line: 184,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 184,
            column: 33
          },
          end: {
            line: 184,
            column: 44
          }
        }, {
          start: {
            line: 184,
            column: 48
          },
          end: {
            line: 184,
            column: 62
          }
        }],
        line: 184
      },
      "24": {
        loc: {
          start: {
            line: 186,
            column: 37
          },
          end: {
            line: 189,
            column: 25
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 186,
            column: 69
          },
          end: {
            line: 186,
            column: 71
          }
        }, {
          start: {
            line: 186,
            column: 74
          },
          end: {
            line: 189,
            column: 25
          }
        }],
        line: 186
      },
      "25": {
        loc: {
          start: {
            line: 186,
            column: 37
          },
          end: {
            line: 186,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 186,
            column: 37
          },
          end: {
            line: 186,
            column: 48
          }
        }, {
          start: {
            line: 186,
            column: 52
          },
          end: {
            line: 186,
            column: 66
          }
        }],
        line: 186
      },
      "26": {
        loc: {
          start: {
            line: 209,
            column: 12
          },
          end: {
            line: 213,
            column: 14
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 12
          },
          end: {
            line: 213,
            column: 14
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 209
      },
      "27": {
        loc: {
          start: {
            line: 215,
            column: 33
          },
          end: {
            line: 215,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 215,
            column: 33
          },
          end: {
            line: 215,
            column: 59
          }
        }, {
          start: {
            line: 215,
            column: 63
          },
          end: {
            line: 215,
            column: 99
          }
        }],
        line: 215
      },
      "28": {
        loc: {
          start: {
            line: 216,
            column: 12
          },
          end: {
            line: 226,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 12
          },
          end: {
            line: 226,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 216
      },
      "29": {
        loc: {
          start: {
            line: 216,
            column: 16
          },
          end: {
            line: 216,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 216,
            column: 16
          },
          end: {
            line: 216,
            column: 28
          }
        }, {
          start: {
            line: 216,
            column: 32
          },
          end: {
            line: 216,
            column: 44
          }
        }],
        line: 216
      },
      "30": {
        loc: {
          start: {
            line: 243,
            column: 12
          },
          end: {
            line: 249,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 12
          },
          end: {
            line: 249,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 243
      },
      "31": {
        loc: {
          start: {
            line: 243,
            column: 16
          },
          end: {
            line: 243,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 243,
            column: 16
          },
          end: {
            line: 243,
            column: 28
          }
        }, {
          start: {
            line: 243,
            column: 32
          },
          end: {
            line: 243,
            column: 58
          }
        }],
        line: 243
      },
      "32": {
        loc: {
          start: {
            line: 258,
            column: 25
          },
          end: {
            line: 258,
            column: 142
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 258,
            column: 45
          },
          end: {
            line: 258,
            column: 104
          }
        }, {
          start: {
            line: 258,
            column: 107
          },
          end: {
            line: 258,
            column: 142
          }
        }],
        line: 258
      },
      "33": {
        loc: {
          start: {
            line: 260,
            column: 29
          },
          end: {
            line: 264,
            column: 22
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 260,
            column: 49
          },
          end: {
            line: 264,
            column: 17
          }
        }, {
          start: {
            line: 264,
            column: 20
          },
          end: {
            line: 264,
            column: 22
          }
        }],
        line: 260
      },
      "34": {
        loc: {
          start: {
            line: 280,
            column: 12
          },
          end: {
            line: 286,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 280,
            column: 12
          },
          end: {
            line: 286,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 280
      },
      "35": {
        loc: {
          start: {
            line: 280,
            column: 16
          },
          end: {
            line: 280,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 280,
            column: 16
          },
          end: {
            line: 280,
            column: 28
          }
        }, {
          start: {
            line: 280,
            column: 32
          },
          end: {
            line: 280,
            column: 46
          }
        }],
        line: 280
      },
      "36": {
        loc: {
          start: {
            line: 288,
            column: 28
          },
          end: {
            line: 288,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 288,
            column: 28
          },
          end: {
            line: 288,
            column: 57
          }
        }, {
          start: {
            line: 288,
            column: 61
          },
          end: {
            line: 288,
            column: 95
          }
        }],
        line: 288
      },
      "37": {
        loc: {
          start: {
            line: 290,
            column: 12
          },
          end: {
            line: 301,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 290,
            column: 12
          },
          end: {
            line: 301,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 290
      },
      "38": {
        loc: {
          start: {
            line: 290,
            column: 16
          },
          end: {
            line: 290,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 290,
            column: 16
          },
          end: {
            line: 290,
            column: 32
          }
        }, {
          start: {
            line: 290,
            column: 36
          },
          end: {
            line: 290,
            column: 44
          }
        }],
        line: 290
      },
      "39": {
        loc: {
          start: {
            line: 318,
            column: 12
          },
          end: {
            line: 322,
            column: 14
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 318,
            column: 12
          },
          end: {
            line: 322,
            column: 14
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 318
      },
      "40": {
        loc: {
          start: {
            line: 335,
            column: 12
          },
          end: {
            line: 346,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 335,
            column: 12
          },
          end: {
            line: 346,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 335
      },
      "41": {
        loc: {
          start: {
            line: 362,
            column: 16
          },
          end: {
            line: 362,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 362,
            column: 30
          },
          end: {
            line: 362,
            column: 32
          }
        }],
        line: 362
      },
      "42": {
        loc: {
          start: {
            line: 404,
            column: 29
          },
          end: {
            line: 404,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 404,
            column: 47
          },
          end: {
            line: 404,
            column: 85
          }
        }, {
          start: {
            line: 404,
            column: 88
          },
          end: {
            line: 404,
            column: 91
          }
        }],
        line: 404
      },
      "43": {
        loc: {
          start: {
            line: 415,
            column: 12
          },
          end: {
            line: 420,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 415,
            column: 12
          },
          end: {
            line: 420,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 415
      },
      "44": {
        loc: {
          start: {
            line: 421,
            column: 45
          },
          end: {
            line: 421,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 421,
            column: 61
          },
          end: {
            line: 421,
            column: 69
          }
        }, {
          start: {
            line: 421,
            column: 72
          },
          end: {
            line: 421,
            column: 80
          }
        }],
        line: 421
      },
      "45": {
        loc: {
          start: {
            line: 423,
            column: 12
          },
          end: {
            line: 428,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 423,
            column: 12
          },
          end: {
            line: 428,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 423
      },
      "46": {
        loc: {
          start: {
            line: 429,
            column: 35
          },
          end: {
            line: 429,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 429,
            column: 51
          },
          end: {
            line: 429,
            column: 59
          }
        }, {
          start: {
            line: 429,
            column: 62
          },
          end: {
            line: 429,
            column: 70
          }
        }],
        line: 429
      },
      "47": {
        loc: {
          start: {
            line: 455,
            column: 8
          },
          end: {
            line: 458,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 455,
            column: 8
          },
          end: {
            line: 458,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 455
      },
      "48": {
        loc: {
          start: {
            line: 463,
            column: 8
          },
          end: {
            line: 465,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 463,
            column: 8
          },
          end: {
            line: 465,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 463
      },
      "49": {
        loc: {
          start: {
            line: 466,
            column: 8
          },
          end: {
            line: 468,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 466,
            column: 8
          },
          end: {
            line: 468,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 466
      },
      "50": {
        loc: {
          start: {
            line: 469,
            column: 8
          },
          end: {
            line: 471,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 469,
            column: 8
          },
          end: {
            line: 471,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 469
      },
      "51": {
        loc: {
          start: {
            line: 475,
            column: 26
          },
          end: {
            line: 475,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 475,
            column: 26
          },
          end: {
            line: 475,
            column: 61
          }
        }, {
          start: {
            line: 475,
            column: 65
          },
          end: {
            line: 475,
            column: 66
          }
        }],
        line: 475
      },
      "52": {
        loc: {
          start: {
            line: 481,
            column: 12
          },
          end: {
            line: 483,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 481,
            column: 12
          },
          end: {
            line: 483,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 481
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0, 0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matthewmoroney/builds/FreeAgentics/web/lib/compliance/adr-validator.ts"],
      sourcesContent: ["\"use client\";\n\nexport interface ComplianceRule {\n  id: string;\n  adr: string;\n  title: string;\n  description: string;\n  severity: \"error\" | \"warning\" | \"info\";\n  category:\n    | \"structure\"\n    | \"naming\"\n    | \"architecture\"\n    | \"patterns\"\n    | \"performance\";\n  check: (context: ValidationContext) => ComplianceResult;\n}\n\nexport interface ValidationContext {\n  filePath: string;\n  fileContent?: string;\n  componentName?: string;\n  directoryStructure?: string[];\n  dependencies?: string[];\n  imports?: string[];\n  exports?: string[];\n  metadata?: Record<string, any>;\n}\n\nexport interface ComplianceResult {\n  passed: boolean;\n  message: string;\n  suggestions?: string[];\n  fixes?: AutoFix[];\n  severity: \"error\" | \"warning\" | \"info\";\n}\n\nexport interface AutoFix {\n  description: string;\n  action: \"rename\" | \"move\" | \"refactor\" | \"add\" | \"remove\";\n  target: string;\n  replacement?: string;\n  automated: boolean;\n}\n\nexport interface ComplianceReport {\n  timestamp: string;\n  totalChecks: number;\n  passed: number;\n  failed: number;\n  warnings: number;\n  errors: number;\n  overallScore: number;\n  results: Array<\n    ComplianceResult & { rule: ComplianceRule; context: ValidationContext }\n  >;\n  summary: {\n    byCategory: Record<string, { passed: number; failed: number }>;\n    byADR: Record<string, { passed: number; failed: number }>;\n    bySeverity: Record<string, number>;\n  };\n  recommendations: string[];\n}\n\n// ADR-002: Canonical Directory Structure Rules\nconst adr002Rules: ComplianceRule[] = [\n  {\n    id: \"ADR002-001\",\n    adr: \"ADR-002\",\n    title: \"Components in Correct Directory\",\n    description:\n      \"React components must be in /components directory with proper subdirectories\",\n    severity: \"error\",\n    category: \"structure\",\n    check: (context) => {\n      const { filePath } = context;\n\n      if (filePath.includes(\".tsx\") && filePath.includes(\"component\")) {\n        const validPaths = [\n          \"/components/ui/\",\n          \"/components/conversation/\",\n          \"/components/dashboard/\",\n          \"/app/\",\n        ];\n\n        const isValidLocation = validPaths.some((path) =>\n          filePath.includes(path),\n        );\n\n        return {\n          passed: isValidLocation,\n          message: isValidLocation\n            ? \"Component is in correct directory structure\"\n            : `Component should be in one of: ${validPaths.join(\", \")}`,\n          severity: \"error\",\n          suggestions: isValidLocation\n            ? []\n            : [\n                \"Move component to appropriate /components subdirectory\",\n                \"Follow feature-based organization pattern\",\n              ],\n        };\n      }\n\n      return {\n        passed: true,\n        message: \"Not a component file\",\n        severity: \"info\",\n      };\n    },\n  },\n\n  {\n    id: \"ADR002-002\",\n    adr: \"ADR-002\",\n    title: \"Hooks in /hooks Directory\",\n    description: \"Custom React hooks must be in /hooks directory\",\n    severity: \"error\",\n    category: \"structure\",\n    check: (context) => {\n      const { filePath, fileContent } = context;\n\n      if (\n        filePath.includes(\".ts\") &&\n        fileContent?.includes(\"use\") &&\n        fileContent.match(/export\\s+function\\s+use[A-Z]/)\n      ) {\n        const isInHooksDir = filePath.includes(\"/hooks/\");\n\n        return {\n          passed: isInHooksDir,\n          message: isInHooksDir\n            ? \"Hook is in correct /hooks directory\"\n            : \"Custom hooks must be in /hooks directory\",\n          severity: \"error\",\n          suggestions: isInHooksDir\n            ? []\n            : [\n                \"Move custom hook to /hooks directory\",\n                'Ensure hook name starts with \"use\"',\n              ],\n        };\n      }\n\n      return { passed: true, message: \"Not a custom hook\", severity: \"info\" };\n    },\n  },\n\n  {\n    id: \"ADR002-003\",\n    adr: \"ADR-002\",\n    title: \"Utilities in /lib Directory\",\n    description: \"Utility functions and libraries must be in /lib directory\",\n    severity: \"error\",\n    category: \"structure\",\n    check: (context) => {\n      const { filePath, fileContent } = context;\n\n      if (\n        filePath.includes(\".ts\") &&\n        !filePath.includes(\".tsx\") &&\n        !filePath.includes(\"/hooks/\") &&\n        !filePath.includes(\"/api/\") &&\n        fileContent?.includes(\"export\")\n      ) {\n        const isInLibDir = filePath.includes(\"/lib/\");\n\n        return {\n          passed: isInLibDir,\n          message: isInLibDir\n            ? \"Utility is in correct /lib directory\"\n            : \"Utility functions should be in /lib directory\",\n          severity: \"warning\",\n          suggestions: isInLibDir\n            ? []\n            : [\n                \"Move utility functions to /lib directory\",\n                \"Organize by functional domain (e.g., /lib/utils, /lib/api)\",\n              ],\n        };\n      }\n\n      return { passed: true, message: \"Not a utility file\", severity: \"info\" };\n    },\n  },\n\n  {\n    id: \"ADR002-004\",\n    adr: \"ADR-002\",\n    title: \"UI Components in /components/ui\",\n    description: \"Reusable UI components must be in /components/ui directory\",\n    severity: \"error\",\n    category: \"structure\",\n    check: (context) => {\n      const { filePath, componentName } = context;\n\n      const uiComponentNames = [\n        \"Button\",\n        \"Input\",\n        \"Card\",\n        \"Badge\",\n        \"Dialog\",\n        \"Tooltip\",\n        \"Select\",\n        \"Checkbox\",\n        \"Slider\",\n        \"Progress\",\n        \"Avatar\",\n        \"Calendar\",\n        \"Tabs\",\n      ];\n\n      if (\n        componentName &&\n        uiComponentNames.some((name) => componentName.includes(name))\n      ) {\n        const isInUIDir = filePath.includes(\"/components/ui/\");\n\n        return {\n          passed: isInUIDir,\n          message: isInUIDir\n            ? \"UI component is in correct directory\"\n            : \"UI components should be in /components/ui directory\",\n          severity: \"error\",\n          suggestions: isInUIDir\n            ? []\n            : [\n                \"Move UI component to /components/ui directory\",\n                \"Ensure component is reusable and generic\",\n              ],\n        };\n      }\n\n      return { passed: true, message: \"Not a UI component\", severity: \"info\" };\n    },\n  },\n];\n\n// ADR-008: API Interface Layer Rules\nconst adr008Rules: ComplianceRule[] = [\n  {\n    id: \"ADR008-001\",\n    adr: \"ADR-008\",\n    title: \"API Routes in Correct Structure\",\n    description: \"API routes must follow /api/[resource]/[action] pattern\",\n    severity: \"error\",\n    category: \"architecture\",\n    check: (context) => {\n      const { filePath } = context;\n\n      if (filePath.includes(\"/api/\") && filePath.includes(\"route.ts\")) {\n        const pathParts = filePath.split(\"/\");\n        const apiIndex = pathParts.indexOf(\"api\");\n\n        if (apiIndex !== -1 && pathParts.length >= apiIndex + 3) {\n          const hasResource =\n            pathParts[apiIndex + 1] && pathParts[apiIndex + 1] !== \"route.ts\";\n          const followsPattern = pathParts[pathParts.length - 1] === \"route.ts\";\n\n          return {\n            passed: hasResource && followsPattern,\n            message:\n              hasResource && followsPattern\n                ? \"API route follows correct structure\"\n                : \"API routes should follow /api/[resource]/[action]/route.ts pattern\",\n            severity: \"error\",\n            suggestions:\n              hasResource && followsPattern\n                ? []\n                : [\n                    \"Organize API routes by resource (e.g., /api/agents/)\",\n                    \"Use specific action directories (e.g., /api/agents/create/)\",\n                  ],\n          };\n        }\n      }\n\n      return { passed: true, message: \"Not an API route\", severity: \"info\" };\n    },\n  },\n\n  {\n    id: \"ADR008-002\",\n    adr: \"ADR-008\",\n    title: \"Proper Import Separation\",\n    description: \"Clear separation between client and server code imports\",\n    severity: \"warning\",\n    category: \"architecture\",\n    check: (context) => {\n      const { fileContent, filePath } = context;\n\n      if (!fileContent)\n        return {\n          passed: true,\n          message: \"No content to check\",\n          severity: \"info\",\n        };\n\n      const isClientFile = fileContent.includes('\"use client\"');\n      const isServerFile =\n        filePath.includes(\"/api/\") || fileContent.includes('\"use server\"');\n\n      if (isClientFile && isServerFile) {\n        return {\n          passed: false,\n          message: \"File cannot be both client and server code\",\n          severity: \"error\",\n          suggestions: [\n            \"Separate client and server logic into different files\",\n            \"Use proper import/export patterns for each context\",\n          ],\n        };\n      }\n\n      return {\n        passed: true,\n        message: \"Proper client/server separation\",\n        severity: \"info\",\n      };\n    },\n  },\n\n  {\n    id: \"ADR008-003\",\n    adr: \"ADR-008\",\n    title: \"Interface Abstraction\",\n    description: \"Business logic should not directly access external APIs\",\n    severity: \"warning\",\n    category: \"architecture\",\n    check: (context) => {\n      const { fileContent, filePath } = context;\n\n      if (!fileContent || filePath.includes(\"/api/\")) {\n        return { passed: true, message: \"Not applicable\", severity: \"info\" };\n      }\n\n      const directAPIPatterns = [\n        /fetch\\s*\\(\\s*['\"](https?:\\/\\/|\\/api\\/)/,\n        /axios\\.(get|post|put|delete)\\s*\\(\\s*['\"](https?:\\/\\/|\\/api\\/)/,\n        /XMLHttpRequest/,\n      ];\n\n      const hasDirectAPICalls = directAPIPatterns.some((pattern) =>\n        pattern.test(fileContent),\n      );\n\n      return {\n        passed: !hasDirectAPICalls,\n        message: hasDirectAPICalls\n          ? \"Direct API calls detected - use service layer abstraction\"\n          : \"Proper API abstraction maintained\",\n        severity: \"warning\",\n        suggestions: hasDirectAPICalls\n          ? [\n              \"Create service layer functions for API calls\",\n              \"Use centralized API client configuration\",\n              \"Implement proper error handling and retry logic\",\n            ]\n          : [],\n      };\n    },\n  },\n];\n\n// Performance and Pattern Rules\nconst performanceRules: ComplianceRule[] = [\n  {\n    id: \"PERF-001\",\n    adr: \"Best Practices\",\n    title: \"Component Memoization\",\n    description: \"Large components should use React.memo for optimization\",\n    severity: \"warning\",\n    category: \"performance\",\n    check: (context) => {\n      const { fileContent, componentName } = context;\n\n      if (!fileContent || !componentName) {\n        return { passed: true, message: \"Not applicable\", severity: \"info\" };\n      }\n\n      const lineCount = fileContent.split(\"\\n\").length;\n      const hasMemo =\n        fileContent.includes(\"memo(\") || fileContent.includes(\"React.memo\");\n      const isLargeComponent = lineCount > 100;\n\n      if (isLargeComponent && !hasMemo) {\n        return {\n          passed: false,\n          message: `Large component (${lineCount} lines) should consider memoization`,\n          severity: \"warning\",\n          suggestions: [\n            \"Add React.memo wrapper for performance optimization\",\n            \"Consider breaking down into smaller components\",\n            \"Use useMemo and useCallback for expensive operations\",\n          ],\n        };\n      }\n\n      return {\n        passed: true,\n        message: \"Component properly optimized\",\n        severity: \"info\",\n      };\n    },\n  },\n\n  {\n    id: \"PERF-002\",\n    adr: \"Best Practices\",\n    title: \"Proper Dependency Arrays\",\n    description: \"useEffect and useMemo should have proper dependency arrays\",\n    severity: \"error\",\n    category: \"performance\",\n    check: (context) => {\n      const { fileContent } = context;\n\n      if (!fileContent)\n        return { passed: true, message: \"No content\", severity: \"info\" };\n\n      const hookPatterns = [\n        /useEffect\\s*\\(\\s*[^,]+,\\s*\\[\\s*\\]/, // Empty deps\n        /useMemo\\s*\\(\\s*[^,]+,\\s*\\[\\s*\\]/, // Empty deps\n        /useCallback\\s*\\(\\s*[^,]+,\\s*\\[\\s*\\]/, // Empty deps\n      ];\n\n      const missingDepPatterns = [\n        /useEffect\\s*\\(\\s*[^)]+\\)\\s*$/, // No deps array\n        /useMemo\\s*\\(\\s*[^)]+\\)\\s*$/, // No deps array\n        /useCallback\\s*\\(\\s*[^)]+\\)\\s*$/, // No deps array\n      ];\n\n      const hasMissingDeps = missingDepPatterns.some((pattern) =>\n        pattern.test(fileContent),\n      );\n      const hasEmptyDeps = hookPatterns.some((pattern) =>\n        pattern.test(fileContent),\n      );\n\n      if (hasMissingDeps) {\n        return {\n          passed: false,\n          message: \"React hooks missing dependency arrays\",\n          severity: \"error\",\n          suggestions: [\n            \"Add dependency arrays to useEffect, useMemo, useCallback\",\n            \"Include all referenced variables in dependency arrays\",\n            \"Use ESLint react-hooks/exhaustive-deps rule\",\n          ],\n        };\n      }\n\n      return {\n        passed: true,\n        message: \"Hooks have proper dependency management\",\n        severity: \"info\",\n      };\n    },\n  },\n];\n\n// Combine all rules\nconst allRules: ComplianceRule[] = [\n  ...adr002Rules,\n  ...adr008Rules,\n  ...performanceRules,\n];\n\nexport class ADRComplianceValidator {\n  private rules: ComplianceRule[];\n\n  constructor(customRules: ComplianceRule[] = []) {\n    this.rules = [...allRules, ...customRules];\n  }\n\n  validateFile(context: ValidationContext): ComplianceReport {\n    const results: Array<\n      ComplianceResult & { rule: ComplianceRule; context: ValidationContext }\n    > = [];\n\n    for (const rule of this.rules) {\n      try {\n        const result = rule.check(context);\n        results.push({ ...result, rule, context });\n      } catch (error) {\n        results.push({\n          passed: false,\n          message: `Rule ${rule.id} failed to execute: ${error}`,\n          severity: \"error\",\n          rule,\n          context,\n        });\n      }\n    }\n\n    return this.generateReport(results);\n  }\n\n  validateMultipleFiles(contexts: ValidationContext[]): ComplianceReport {\n    const allResults: Array<\n      ComplianceResult & { rule: ComplianceRule; context: ValidationContext }\n    > = [];\n\n    for (const context of contexts) {\n      const fileResults = this.validateFile(context);\n      allResults.push(...fileResults.results);\n    }\n\n    return this.generateReport(allResults);\n  }\n\n  private generateReport(\n    results: Array<\n      ComplianceResult & { rule: ComplianceRule; context: ValidationContext }\n    >,\n  ): ComplianceReport {\n    const totalChecks = results.length;\n    const passed = results.filter((r) => r.passed).length;\n    const failed = results.filter((r) => !r.passed).length;\n    const warnings = results.filter((r) => r.severity === \"warning\").length;\n    const errors = results.filter((r) => r.severity === \"error\").length;\n\n    const overallScore =\n      totalChecks > 0 ? Math.round((passed / totalChecks) * 100) : 100;\n\n    // Generate summaries\n    const byCategory: Record<string, { passed: number; failed: number }> = {};\n    const byADR: Record<string, { passed: number; failed: number }> = {};\n    const bySeverity: Record<string, number> = {\n      error: 0,\n      warning: 0,\n      info: 0,\n    };\n\n    for (const result of results) {\n      // By category\n      if (!byCategory[result.rule.category]) {\n        byCategory[result.rule.category] = { passed: 0, failed: 0 };\n      }\n      byCategory[result.rule.category][result.passed ? \"passed\" : \"failed\"]++;\n\n      // By ADR\n      if (!byADR[result.rule.adr]) {\n        byADR[result.rule.adr] = { passed: 0, failed: 0 };\n      }\n      byADR[result.rule.adr][result.passed ? \"passed\" : \"failed\"]++;\n\n      // By severity\n      bySeverity[result.severity]++;\n    }\n\n    // Generate recommendations\n    const recommendations = this.generateRecommendations(results);\n\n    return {\n      timestamp: new Date().toISOString(),\n      totalChecks,\n      passed,\n      failed,\n      warnings,\n      errors,\n      overallScore,\n      results,\n      summary: { byCategory, byADR, bySeverity },\n      recommendations,\n    };\n  }\n\n  private generateRecommendations(\n    results: Array<\n      ComplianceResult & { rule: ComplianceRule; context: ValidationContext }\n    >,\n  ): string[] {\n    const recommendations: string[] = [];\n    const failedRules = results.filter((r) => !r.passed);\n\n    if (failedRules.length === 0) {\n      recommendations.push(\"\u2705 All ADR compliance checks passed!\");\n      return recommendations;\n    }\n\n    // Priority recommendations based on failures\n    const structureFailures = failedRules.filter(\n      (r) => r.rule.category === \"structure\",\n    );\n    const architectureFailures = failedRules.filter(\n      (r) => r.rule.category === \"architecture\",\n    );\n    const performanceFailures = failedRules.filter(\n      (r) => r.rule.category === \"performance\",\n    );\n\n    if (structureFailures.length > 0) {\n      recommendations.push(\n        \"\uD83C\uDFD7\uFE0F Directory structure needs attention - ensure components, hooks, and utilities are in correct locations\",\n      );\n    }\n\n    if (architectureFailures.length > 0) {\n      recommendations.push(\n        \"\uD83C\uDFDB\uFE0F API architecture compliance issues detected - review ADR-008 requirements\",\n      );\n    }\n\n    if (performanceFailures.length > 0) {\n      recommendations.push(\n        \"\u26A1 Performance optimizations recommended - consider memoization and proper hook dependencies\",\n      );\n    }\n\n    // Specific recommendations for most common failures\n    const commonFailures = new Map<string, number>();\n    for (const failure of failedRules) {\n      const count = commonFailures.get(failure.rule.id) || 0;\n      commonFailures.set(failure.rule.id, count + 1);\n    }\n\n    const topFailures = Array.from(commonFailures.entries())\n      .sort(([, a], [, b]) => b - a)\n      .slice(0, 3);\n\n    for (const [ruleId, count] of topFailures) {\n      const rule = this.rules.find((r) => r.id === ruleId);\n      if (rule) {\n        recommendations.push(\n          `\uD83D\uDD27 ${rule.title}: ${count} instance(s) - ${rule.description}`,\n        );\n      }\n    }\n\n    return recommendations;\n  }\n\n  getRule(ruleId: string): ComplianceRule | undefined {\n    return this.rules.find((rule) => rule.id === ruleId);\n  }\n\n  getRulesByADR(adr: string): ComplianceRule[] {\n    return this.rules.filter((rule) => rule.adr === adr);\n  }\n\n  getRulesByCategory(category: string): ComplianceRule[] {\n    return this.rules.filter((rule) => rule.category === category);\n  }\n}\n\n// Export default validator instance\nexport const complianceValidator = new ADRComplianceValidator();\n\n// Utility functions for easy validation\nexport function validateComponent(\n  filePath: string,\n  componentName: string,\n  fileContent?: string,\n): ComplianceReport {\n  return complianceValidator.validateFile({\n    filePath,\n    componentName,\n    fileContent,\n  });\n}\n\nexport function validateHook(\n  filePath: string,\n  fileContent?: string,\n): ComplianceReport {\n  return complianceValidator.validateFile({\n    filePath,\n    fileContent,\n  });\n}\n\nexport function validateAPIRoute(\n  filePath: string,\n  fileContent?: string,\n): ComplianceReport {\n  return complianceValidator.validateFile({\n    filePath,\n    fileContent,\n  });\n}\n"],
      names: ["ADRComplianceValidator", "complianceValidator", "validateAPIRoute", "validateComponent", "validateHook", "adr002Rules", "id", "adr", "title", "description", "severity", "category", "check", "context", "filePath", "includes", "validPaths", "isValidLocation", "some", "path", "passed", "message", "join", "suggestions", "fileContent", "match", "isInHooksDir", "isInLibDir", "componentName", "uiComponentNames", "name", "isInUIDir", "adr008Rules", "pathParts", "split", "apiIndex", "indexOf", "length", "hasResource", "followsPattern", "isClientFile", "isServerFile", "directAPIPatterns", "hasDirectAPICalls", "pattern", "test", "performanceRules", "lineCount", "hasMemo", "isLargeComponent", "hookPatterns", "missingDepPatterns", "hasMissingDeps", "hasEmptyDeps", "allRules", "constructor", "customRules", "rules", "validateFile", "results", "rule", "result", "push", "error", "generateReport", "validateMultipleFiles", "contexts", "allResults", "fileResults", "totalChecks", "filter", "r", "failed", "warnings", "errors", "overallScore", "Math", "round", "byCategory", "byADR", "bySeverity", "warning", "info", "recommendations", "generateRecommendations", "timestamp", "Date", "toISOString", "summary", "failedRules", "structureFailures", "architectureFailures", "performanceFailures", "commonFailures", "Map", "failure", "count", "get", "set", "topFailures", "Array", "from", "entries", "sort", "a", "b", "slice", "ruleId", "find", "getRule", "getRulesByADR", "getRulesByCategory"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9b56f01ebd419b001188c7369095c0af662ecb9d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2lzatt5963 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2lzatt5963();
cov_2lzatt5963().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2lzatt5963().f[0]++;
  cov_2lzatt5963().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2lzatt5963().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_2lzatt5963().s[3]++;
_export(exports, {
  ADRComplianceValidator: function () {
    /* istanbul ignore next */
    cov_2lzatt5963().f[1]++;
    cov_2lzatt5963().s[4]++;
    return ADRComplianceValidator;
  },
  complianceValidator: function () {
    /* istanbul ignore next */
    cov_2lzatt5963().f[2]++;
    cov_2lzatt5963().s[5]++;
    return complianceValidator;
  },
  validateAPIRoute: function () {
    /* istanbul ignore next */
    cov_2lzatt5963().f[3]++;
    cov_2lzatt5963().s[6]++;
    return validateAPIRoute;
  },
  validateComponent: function () {
    /* istanbul ignore next */
    cov_2lzatt5963().f[4]++;
    cov_2lzatt5963().s[7]++;
    return validateComponent;
  },
  validateHook: function () {
    /* istanbul ignore next */
    cov_2lzatt5963().f[5]++;
    cov_2lzatt5963().s[8]++;
    return validateHook;
  }
});
// ADR-002: Canonical Directory Structure Rules
const adr002Rules =
/* istanbul ignore next */
(cov_2lzatt5963().s[9]++, [{
  id: "ADR002-001",
  adr: "ADR-002",
  title: "Components in Correct Directory",
  description: "React components must be in /components directory with proper subdirectories",
  severity: "error",
  category: "structure",
  check: context => {
    /* istanbul ignore next */
    cov_2lzatt5963().f[6]++;
    const {
      filePath
    } =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[10]++, context);
    /* istanbul ignore next */
    cov_2lzatt5963().s[11]++;
    if (
    /* istanbul ignore next */
    (cov_2lzatt5963().b[1][0]++, filePath.includes(".tsx")) &&
    /* istanbul ignore next */
    (cov_2lzatt5963().b[1][1]++, filePath.includes("component"))) {
      /* istanbul ignore next */
      cov_2lzatt5963().b[0][0]++;
      const validPaths =
      /* istanbul ignore next */
      (cov_2lzatt5963().s[12]++, ["/components/ui/", "/components/conversation/", "/components/dashboard/", "/app/"]);
      const isValidLocation =
      /* istanbul ignore next */
      (cov_2lzatt5963().s[13]++, validPaths.some(path => {
        /* istanbul ignore next */
        cov_2lzatt5963().f[7]++;
        cov_2lzatt5963().s[14]++;
        return filePath.includes(path);
      }));
      /* istanbul ignore next */
      cov_2lzatt5963().s[15]++;
      return {
        passed: isValidLocation,
        message: isValidLocation ?
        /* istanbul ignore next */
        (cov_2lzatt5963().b[2][0]++, "Component is in correct directory structure") :
        /* istanbul ignore next */
        (cov_2lzatt5963().b[2][1]++, `Component should be in one of: ${validPaths.join(", ")}`),
        severity: "error",
        suggestions: isValidLocation ?
        /* istanbul ignore next */
        (cov_2lzatt5963().b[3][0]++, []) :
        /* istanbul ignore next */
        (cov_2lzatt5963().b[3][1]++, ["Move component to appropriate /components subdirectory", "Follow feature-based organization pattern"])
      };
    } else
    /* istanbul ignore next */
    {
      cov_2lzatt5963().b[0][1]++;
    }
    cov_2lzatt5963().s[16]++;
    return {
      passed: true,
      message: "Not a component file",
      severity: "info"
    };
  }
}, {
  id: "ADR002-002",
  adr: "ADR-002",
  title: "Hooks in /hooks Directory",
  description: "Custom React hooks must be in /hooks directory",
  severity: "error",
  category: "structure",
  check: context => {
    /* istanbul ignore next */
    cov_2lzatt5963().f[8]++;
    const {
      filePath,
      fileContent
    } =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[17]++, context);
    /* istanbul ignore next */
    cov_2lzatt5963().s[18]++;
    if (
    /* istanbul ignore next */
    (cov_2lzatt5963().b[5][0]++, filePath.includes(".ts")) &&
    /* istanbul ignore next */
    (cov_2lzatt5963().b[5][1]++, fileContent?.includes("use")) &&
    /* istanbul ignore next */
    (cov_2lzatt5963().b[5][2]++, fileContent.match(/export\s+function\s+use[A-Z]/))) {
      /* istanbul ignore next */
      cov_2lzatt5963().b[4][0]++;
      const isInHooksDir =
      /* istanbul ignore next */
      (cov_2lzatt5963().s[19]++, filePath.includes("/hooks/"));
      /* istanbul ignore next */
      cov_2lzatt5963().s[20]++;
      return {
        passed: isInHooksDir,
        message: isInHooksDir ?
        /* istanbul ignore next */
        (cov_2lzatt5963().b[6][0]++, "Hook is in correct /hooks directory") :
        /* istanbul ignore next */
        (cov_2lzatt5963().b[6][1]++, "Custom hooks must be in /hooks directory"),
        severity: "error",
        suggestions: isInHooksDir ?
        /* istanbul ignore next */
        (cov_2lzatt5963().b[7][0]++, []) :
        /* istanbul ignore next */
        (cov_2lzatt5963().b[7][1]++, ["Move custom hook to /hooks directory", 'Ensure hook name starts with "use"'])
      };
    } else
    /* istanbul ignore next */
    {
      cov_2lzatt5963().b[4][1]++;
    }
    cov_2lzatt5963().s[21]++;
    return {
      passed: true,
      message: "Not a custom hook",
      severity: "info"
    };
  }
}, {
  id: "ADR002-003",
  adr: "ADR-002",
  title: "Utilities in /lib Directory",
  description: "Utility functions and libraries must be in /lib directory",
  severity: "error",
  category: "structure",
  check: context => {
    /* istanbul ignore next */
    cov_2lzatt5963().f[9]++;
    const {
      filePath,
      fileContent
    } =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[22]++, context);
    /* istanbul ignore next */
    cov_2lzatt5963().s[23]++;
    if (
    /* istanbul ignore next */
    (cov_2lzatt5963().b[9][0]++, filePath.includes(".ts")) &&
    /* istanbul ignore next */
    (cov_2lzatt5963().b[9][1]++, !filePath.includes(".tsx")) &&
    /* istanbul ignore next */
    (cov_2lzatt5963().b[9][2]++, !filePath.includes("/hooks/")) &&
    /* istanbul ignore next */
    (cov_2lzatt5963().b[9][3]++, !filePath.includes("/api/")) &&
    /* istanbul ignore next */
    (cov_2lzatt5963().b[9][4]++, fileContent?.includes("export"))) {
      /* istanbul ignore next */
      cov_2lzatt5963().b[8][0]++;
      const isInLibDir =
      /* istanbul ignore next */
      (cov_2lzatt5963().s[24]++, filePath.includes("/lib/"));
      /* istanbul ignore next */
      cov_2lzatt5963().s[25]++;
      return {
        passed: isInLibDir,
        message: isInLibDir ?
        /* istanbul ignore next */
        (cov_2lzatt5963().b[10][0]++, "Utility is in correct /lib directory") :
        /* istanbul ignore next */
        (cov_2lzatt5963().b[10][1]++, "Utility functions should be in /lib directory"),
        severity: "warning",
        suggestions: isInLibDir ?
        /* istanbul ignore next */
        (cov_2lzatt5963().b[11][0]++, []) :
        /* istanbul ignore next */
        (cov_2lzatt5963().b[11][1]++, ["Move utility functions to /lib directory", "Organize by functional domain (e.g., /lib/utils, /lib/api)"])
      };
    } else
    /* istanbul ignore next */
    {
      cov_2lzatt5963().b[8][1]++;
    }
    cov_2lzatt5963().s[26]++;
    return {
      passed: true,
      message: "Not a utility file",
      severity: "info"
    };
  }
}, {
  id: "ADR002-004",
  adr: "ADR-002",
  title: "UI Components in /components/ui",
  description: "Reusable UI components must be in /components/ui directory",
  severity: "error",
  category: "structure",
  check: context => {
    /* istanbul ignore next */
    cov_2lzatt5963().f[10]++;
    const {
      filePath,
      componentName
    } =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[27]++, context);
    const uiComponentNames =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[28]++, ["Button", "Input", "Card", "Badge", "Dialog", "Tooltip", "Select", "Checkbox", "Slider", "Progress", "Avatar", "Calendar", "Tabs"]);
    /* istanbul ignore next */
    cov_2lzatt5963().s[29]++;
    if (
    /* istanbul ignore next */
    (cov_2lzatt5963().b[13][0]++, componentName) &&
    /* istanbul ignore next */
    (cov_2lzatt5963().b[13][1]++, uiComponentNames.some(name => {
      /* istanbul ignore next */
      cov_2lzatt5963().f[11]++;
      cov_2lzatt5963().s[30]++;
      return componentName.includes(name);
    }))) {
      /* istanbul ignore next */
      cov_2lzatt5963().b[12][0]++;
      const isInUIDir =
      /* istanbul ignore next */
      (cov_2lzatt5963().s[31]++, filePath.includes("/components/ui/"));
      /* istanbul ignore next */
      cov_2lzatt5963().s[32]++;
      return {
        passed: isInUIDir,
        message: isInUIDir ?
        /* istanbul ignore next */
        (cov_2lzatt5963().b[14][0]++, "UI component is in correct directory") :
        /* istanbul ignore next */
        (cov_2lzatt5963().b[14][1]++, "UI components should be in /components/ui directory"),
        severity: "error",
        suggestions: isInUIDir ?
        /* istanbul ignore next */
        (cov_2lzatt5963().b[15][0]++, []) :
        /* istanbul ignore next */
        (cov_2lzatt5963().b[15][1]++, ["Move UI component to /components/ui directory", "Ensure component is reusable and generic"])
      };
    } else
    /* istanbul ignore next */
    {
      cov_2lzatt5963().b[12][1]++;
    }
    cov_2lzatt5963().s[33]++;
    return {
      passed: true,
      message: "Not a UI component",
      severity: "info"
    };
  }
}]);
// ADR-008: API Interface Layer Rules
const adr008Rules =
/* istanbul ignore next */
(cov_2lzatt5963().s[34]++, [{
  id: "ADR008-001",
  adr: "ADR-008",
  title: "API Routes in Correct Structure",
  description: "API routes must follow /api/[resource]/[action] pattern",
  severity: "error",
  category: "architecture",
  check: context => {
    /* istanbul ignore next */
    cov_2lzatt5963().f[12]++;
    const {
      filePath
    } =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[35]++, context);
    /* istanbul ignore next */
    cov_2lzatt5963().s[36]++;
    if (
    /* istanbul ignore next */
    (cov_2lzatt5963().b[17][0]++, filePath.includes("/api/")) &&
    /* istanbul ignore next */
    (cov_2lzatt5963().b[17][1]++, filePath.includes("route.ts"))) {
      /* istanbul ignore next */
      cov_2lzatt5963().b[16][0]++;
      const pathParts =
      /* istanbul ignore next */
      (cov_2lzatt5963().s[37]++, filePath.split("/"));
      const apiIndex =
      /* istanbul ignore next */
      (cov_2lzatt5963().s[38]++, pathParts.indexOf("api"));
      /* istanbul ignore next */
      cov_2lzatt5963().s[39]++;
      if (
      /* istanbul ignore next */
      (cov_2lzatt5963().b[19][0]++, apiIndex !== -1) &&
      /* istanbul ignore next */
      (cov_2lzatt5963().b[19][1]++, pathParts.length >= apiIndex + 3)) {
        /* istanbul ignore next */
        cov_2lzatt5963().b[18][0]++;
        const hasResource =
        /* istanbul ignore next */
        (cov_2lzatt5963().s[40]++,
        /* istanbul ignore next */
        (cov_2lzatt5963().b[20][0]++, pathParts[apiIndex + 1]) &&
        /* istanbul ignore next */
        (cov_2lzatt5963().b[20][1]++, pathParts[apiIndex + 1] !== "route.ts"));
        const followsPattern =
        /* istanbul ignore next */
        (cov_2lzatt5963().s[41]++, pathParts[pathParts.length - 1] === "route.ts");
        /* istanbul ignore next */
        cov_2lzatt5963().s[42]++;
        return {
          passed:
          /* istanbul ignore next */
          (cov_2lzatt5963().b[21][0]++, hasResource) &&
          /* istanbul ignore next */
          (cov_2lzatt5963().b[21][1]++, followsPattern),
          message:
          /* istanbul ignore next */
          (cov_2lzatt5963().b[23][0]++, hasResource) &&
          /* istanbul ignore next */
          (cov_2lzatt5963().b[23][1]++, followsPattern) ?
          /* istanbul ignore next */
          (cov_2lzatt5963().b[22][0]++, "API route follows correct structure") :
          /* istanbul ignore next */
          (cov_2lzatt5963().b[22][1]++, "API routes should follow /api/[resource]/[action]/route.ts pattern"),
          severity: "error",
          suggestions:
          /* istanbul ignore next */
          (cov_2lzatt5963().b[25][0]++, hasResource) &&
          /* istanbul ignore next */
          (cov_2lzatt5963().b[25][1]++, followsPattern) ?
          /* istanbul ignore next */
          (cov_2lzatt5963().b[24][0]++, []) :
          /* istanbul ignore next */
          (cov_2lzatt5963().b[24][1]++, ["Organize API routes by resource (e.g., /api/agents/)", "Use specific action directories (e.g., /api/agents/create/)"])
        };
      } else
      /* istanbul ignore next */
      {
        cov_2lzatt5963().b[18][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_2lzatt5963().b[16][1]++;
    }
    cov_2lzatt5963().s[43]++;
    return {
      passed: true,
      message: "Not an API route",
      severity: "info"
    };
  }
}, {
  id: "ADR008-002",
  adr: "ADR-008",
  title: "Proper Import Separation",
  description: "Clear separation between client and server code imports",
  severity: "warning",
  category: "architecture",
  check: context => {
    /* istanbul ignore next */
    cov_2lzatt5963().f[13]++;
    const {
      fileContent,
      filePath
    } =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[44]++, context);
    /* istanbul ignore next */
    cov_2lzatt5963().s[45]++;
    if (!fileContent) {
      /* istanbul ignore next */
      cov_2lzatt5963().b[26][0]++;
      cov_2lzatt5963().s[46]++;
      return {
        passed: true,
        message: "No content to check",
        severity: "info"
      };
    } else
    /* istanbul ignore next */
    {
      cov_2lzatt5963().b[26][1]++;
    }
    const isClientFile =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[47]++, fileContent.includes('"use client"'));
    const isServerFile =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[48]++,
    /* istanbul ignore next */
    (cov_2lzatt5963().b[27][0]++, filePath.includes("/api/")) ||
    /* istanbul ignore next */
    (cov_2lzatt5963().b[27][1]++, fileContent.includes('"use server"')));
    /* istanbul ignore next */
    cov_2lzatt5963().s[49]++;
    if (
    /* istanbul ignore next */
    (cov_2lzatt5963().b[29][0]++, isClientFile) &&
    /* istanbul ignore next */
    (cov_2lzatt5963().b[29][1]++, isServerFile)) {
      /* istanbul ignore next */
      cov_2lzatt5963().b[28][0]++;
      cov_2lzatt5963().s[50]++;
      return {
        passed: false,
        message: "File cannot be both client and server code",
        severity: "error",
        suggestions: ["Separate client and server logic into different files", "Use proper import/export patterns for each context"]
      };
    } else
    /* istanbul ignore next */
    {
      cov_2lzatt5963().b[28][1]++;
    }
    cov_2lzatt5963().s[51]++;
    return {
      passed: true,
      message: "Proper client/server separation",
      severity: "info"
    };
  }
}, {
  id: "ADR008-003",
  adr: "ADR-008",
  title: "Interface Abstraction",
  description: "Business logic should not directly access external APIs",
  severity: "warning",
  category: "architecture",
  check: context => {
    /* istanbul ignore next */
    cov_2lzatt5963().f[14]++;
    const {
      fileContent,
      filePath
    } =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[52]++, context);
    /* istanbul ignore next */
    cov_2lzatt5963().s[53]++;
    if (
    /* istanbul ignore next */
    (cov_2lzatt5963().b[31][0]++, !fileContent) ||
    /* istanbul ignore next */
    (cov_2lzatt5963().b[31][1]++, filePath.includes("/api/"))) {
      /* istanbul ignore next */
      cov_2lzatt5963().b[30][0]++;
      cov_2lzatt5963().s[54]++;
      return {
        passed: true,
        message: "Not applicable",
        severity: "info"
      };
    } else
    /* istanbul ignore next */
    {
      cov_2lzatt5963().b[30][1]++;
    }
    const directAPIPatterns =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[55]++, [/fetch\s*\(\s*['"](https?:\/\/|\/api\/)/, /axios\.(get|post|put|delete)\s*\(\s*['"](https?:\/\/|\/api\/)/, /XMLHttpRequest/]);
    const hasDirectAPICalls =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[56]++, directAPIPatterns.some(pattern => {
      /* istanbul ignore next */
      cov_2lzatt5963().f[15]++;
      cov_2lzatt5963().s[57]++;
      return pattern.test(fileContent);
    }));
    /* istanbul ignore next */
    cov_2lzatt5963().s[58]++;
    return {
      passed: !hasDirectAPICalls,
      message: hasDirectAPICalls ?
      /* istanbul ignore next */
      (cov_2lzatt5963().b[32][0]++, "Direct API calls detected - use service layer abstraction") :
      /* istanbul ignore next */
      (cov_2lzatt5963().b[32][1]++, "Proper API abstraction maintained"),
      severity: "warning",
      suggestions: hasDirectAPICalls ?
      /* istanbul ignore next */
      (cov_2lzatt5963().b[33][0]++, ["Create service layer functions for API calls", "Use centralized API client configuration", "Implement proper error handling and retry logic"]) :
      /* istanbul ignore next */
      (cov_2lzatt5963().b[33][1]++, [])
    };
  }
}]);
// Performance and Pattern Rules
const performanceRules =
/* istanbul ignore next */
(cov_2lzatt5963().s[59]++, [{
  id: "PERF-001",
  adr: "Best Practices",
  title: "Component Memoization",
  description: "Large components should use React.memo for optimization",
  severity: "warning",
  category: "performance",
  check: context => {
    /* istanbul ignore next */
    cov_2lzatt5963().f[16]++;
    const {
      fileContent,
      componentName
    } =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[60]++, context);
    /* istanbul ignore next */
    cov_2lzatt5963().s[61]++;
    if (
    /* istanbul ignore next */
    (cov_2lzatt5963().b[35][0]++, !fileContent) ||
    /* istanbul ignore next */
    (cov_2lzatt5963().b[35][1]++, !componentName)) {
      /* istanbul ignore next */
      cov_2lzatt5963().b[34][0]++;
      cov_2lzatt5963().s[62]++;
      return {
        passed: true,
        message: "Not applicable",
        severity: "info"
      };
    } else
    /* istanbul ignore next */
    {
      cov_2lzatt5963().b[34][1]++;
    }
    const lineCount =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[63]++, fileContent.split("\n").length);
    const hasMemo =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[64]++,
    /* istanbul ignore next */
    (cov_2lzatt5963().b[36][0]++, fileContent.includes("memo(")) ||
    /* istanbul ignore next */
    (cov_2lzatt5963().b[36][1]++, fileContent.includes("React.memo")));
    const isLargeComponent =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[65]++, lineCount > 100);
    /* istanbul ignore next */
    cov_2lzatt5963().s[66]++;
    if (
    /* istanbul ignore next */
    (cov_2lzatt5963().b[38][0]++, isLargeComponent) &&
    /* istanbul ignore next */
    (cov_2lzatt5963().b[38][1]++, !hasMemo)) {
      /* istanbul ignore next */
      cov_2lzatt5963().b[37][0]++;
      cov_2lzatt5963().s[67]++;
      return {
        passed: false,
        message: `Large component (${lineCount} lines) should consider memoization`,
        severity: "warning",
        suggestions: ["Add React.memo wrapper for performance optimization", "Consider breaking down into smaller components", "Use useMemo and useCallback for expensive operations"]
      };
    } else
    /* istanbul ignore next */
    {
      cov_2lzatt5963().b[37][1]++;
    }
    cov_2lzatt5963().s[68]++;
    return {
      passed: true,
      message: "Component properly optimized",
      severity: "info"
    };
  }
}, {
  id: "PERF-002",
  adr: "Best Practices",
  title: "Proper Dependency Arrays",
  description: "useEffect and useMemo should have proper dependency arrays",
  severity: "error",
  category: "performance",
  check: context => {
    /* istanbul ignore next */
    cov_2lzatt5963().f[17]++;
    const {
      fileContent
    } =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[69]++, context);
    /* istanbul ignore next */
    cov_2lzatt5963().s[70]++;
    if (!fileContent) {
      /* istanbul ignore next */
      cov_2lzatt5963().b[39][0]++;
      cov_2lzatt5963().s[71]++;
      return {
        passed: true,
        message: "No content",
        severity: "info"
      };
    } else
    /* istanbul ignore next */
    {
      cov_2lzatt5963().b[39][1]++;
    }
    const hookPatterns =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[72]++, [/useEffect\s*\(\s*[^,]+,\s*\[\s*\]/, /useMemo\s*\(\s*[^,]+,\s*\[\s*\]/, /useCallback\s*\(\s*[^,]+,\s*\[\s*\]/]);
    const missingDepPatterns =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[73]++, [/useEffect\s*\(\s*[^)]+\)\s*$/, /useMemo\s*\(\s*[^)]+\)\s*$/, /useCallback\s*\(\s*[^)]+\)\s*$/]);
    const hasMissingDeps =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[74]++, missingDepPatterns.some(pattern => {
      /* istanbul ignore next */
      cov_2lzatt5963().f[18]++;
      cov_2lzatt5963().s[75]++;
      return pattern.test(fileContent);
    }));
    const hasEmptyDeps =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[76]++, hookPatterns.some(pattern => {
      /* istanbul ignore next */
      cov_2lzatt5963().f[19]++;
      cov_2lzatt5963().s[77]++;
      return pattern.test(fileContent);
    }));
    /* istanbul ignore next */
    cov_2lzatt5963().s[78]++;
    if (hasMissingDeps) {
      /* istanbul ignore next */
      cov_2lzatt5963().b[40][0]++;
      cov_2lzatt5963().s[79]++;
      return {
        passed: false,
        message: "React hooks missing dependency arrays",
        severity: "error",
        suggestions: ["Add dependency arrays to useEffect, useMemo, useCallback", "Include all referenced variables in dependency arrays", "Use ESLint react-hooks/exhaustive-deps rule"]
      };
    } else
    /* istanbul ignore next */
    {
      cov_2lzatt5963().b[40][1]++;
    }
    cov_2lzatt5963().s[80]++;
    return {
      passed: true,
      message: "Hooks have proper dependency management",
      severity: "info"
    };
  }
}]);
// Combine all rules
const allRules =
/* istanbul ignore next */
(cov_2lzatt5963().s[81]++, [...adr002Rules, ...adr008Rules, ...performanceRules]);
class ADRComplianceValidator {
  constructor(customRules =
  /* istanbul ignore next */
  (cov_2lzatt5963().b[41][0]++, [])) {
    /* istanbul ignore next */
    cov_2lzatt5963().f[20]++;
    cov_2lzatt5963().s[82]++;
    this.rules = [...allRules, ...customRules];
  }
  validateFile(context) {
    /* istanbul ignore next */
    cov_2lzatt5963().f[21]++;
    const results =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[83]++, []);
    /* istanbul ignore next */
    cov_2lzatt5963().s[84]++;
    for (const rule of this.rules) {
      /* istanbul ignore next */
      cov_2lzatt5963().s[85]++;
      try {
        const result =
        /* istanbul ignore next */
        (cov_2lzatt5963().s[86]++, rule.check(context));
        /* istanbul ignore next */
        cov_2lzatt5963().s[87]++;
        results.push({
          ...result,
          rule,
          context
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_2lzatt5963().s[88]++;
        results.push({
          passed: false,
          message: `Rule ${rule.id} failed to execute: ${error}`,
          severity: "error",
          rule,
          context
        });
      }
    }
    /* istanbul ignore next */
    cov_2lzatt5963().s[89]++;
    return this.generateReport(results);
  }
  validateMultipleFiles(contexts) {
    /* istanbul ignore next */
    cov_2lzatt5963().f[22]++;
    const allResults =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[90]++, []);
    /* istanbul ignore next */
    cov_2lzatt5963().s[91]++;
    for (const context of contexts) {
      const fileResults =
      /* istanbul ignore next */
      (cov_2lzatt5963().s[92]++, this.validateFile(context));
      /* istanbul ignore next */
      cov_2lzatt5963().s[93]++;
      allResults.push(...fileResults.results);
    }
    /* istanbul ignore next */
    cov_2lzatt5963().s[94]++;
    return this.generateReport(allResults);
  }
  generateReport(results) {
    /* istanbul ignore next */
    cov_2lzatt5963().f[23]++;
    const totalChecks =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[95]++, results.length);
    const passed =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[96]++, results.filter(r => {
      /* istanbul ignore next */
      cov_2lzatt5963().f[24]++;
      cov_2lzatt5963().s[97]++;
      return r.passed;
    }).length);
    const failed =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[98]++, results.filter(r => {
      /* istanbul ignore next */
      cov_2lzatt5963().f[25]++;
      cov_2lzatt5963().s[99]++;
      return !r.passed;
    }).length);
    const warnings =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[100]++, results.filter(r => {
      /* istanbul ignore next */
      cov_2lzatt5963().f[26]++;
      cov_2lzatt5963().s[101]++;
      return r.severity === "warning";
    }).length);
    const errors =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[102]++, results.filter(r => {
      /* istanbul ignore next */
      cov_2lzatt5963().f[27]++;
      cov_2lzatt5963().s[103]++;
      return r.severity === "error";
    }).length);
    const overallScore =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[104]++, totalChecks > 0 ?
    /* istanbul ignore next */
    (cov_2lzatt5963().b[42][0]++, Math.round(passed / totalChecks * 100)) :
    /* istanbul ignore next */
    (cov_2lzatt5963().b[42][1]++, 100));
    // Generate summaries
    const byCategory =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[105]++, {});
    const byADR =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[106]++, {});
    const bySeverity =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[107]++, {
      error: 0,
      warning: 0,
      info: 0
    });
    /* istanbul ignore next */
    cov_2lzatt5963().s[108]++;
    for (const result of results) {
      /* istanbul ignore next */
      cov_2lzatt5963().s[109]++;
      // By category
      if (!byCategory[result.rule.category]) {
        /* istanbul ignore next */
        cov_2lzatt5963().b[43][0]++;
        cov_2lzatt5963().s[110]++;
        byCategory[result.rule.category] = {
          passed: 0,
          failed: 0
        };
      } else
      /* istanbul ignore next */
      {
        cov_2lzatt5963().b[43][1]++;
      }
      cov_2lzatt5963().s[111]++;
      byCategory[result.rule.category][result.passed ?
      /* istanbul ignore next */
      (cov_2lzatt5963().b[44][0]++, "passed") :
      /* istanbul ignore next */
      (cov_2lzatt5963().b[44][1]++, "failed")]++;
      // By ADR
      /* istanbul ignore next */
      cov_2lzatt5963().s[112]++;
      if (!byADR[result.rule.adr]) {
        /* istanbul ignore next */
        cov_2lzatt5963().b[45][0]++;
        cov_2lzatt5963().s[113]++;
        byADR[result.rule.adr] = {
          passed: 0,
          failed: 0
        };
      } else
      /* istanbul ignore next */
      {
        cov_2lzatt5963().b[45][1]++;
      }
      cov_2lzatt5963().s[114]++;
      byADR[result.rule.adr][result.passed ?
      /* istanbul ignore next */
      (cov_2lzatt5963().b[46][0]++, "passed") :
      /* istanbul ignore next */
      (cov_2lzatt5963().b[46][1]++, "failed")]++;
      // By severity
      /* istanbul ignore next */
      cov_2lzatt5963().s[115]++;
      bySeverity[result.severity]++;
    }
    // Generate recommendations
    const recommendations =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[116]++, this.generateRecommendations(results));
    /* istanbul ignore next */
    cov_2lzatt5963().s[117]++;
    return {
      timestamp: new Date().toISOString(),
      totalChecks,
      passed,
      failed,
      warnings,
      errors,
      overallScore,
      results,
      summary: {
        byCategory,
        byADR,
        bySeverity
      },
      recommendations
    };
  }
  generateRecommendations(results) {
    /* istanbul ignore next */
    cov_2lzatt5963().f[28]++;
    const recommendations =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[118]++, []);
    const failedRules =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[119]++, results.filter(r => {
      /* istanbul ignore next */
      cov_2lzatt5963().f[29]++;
      cov_2lzatt5963().s[120]++;
      return !r.passed;
    }));
    /* istanbul ignore next */
    cov_2lzatt5963().s[121]++;
    if (failedRules.length === 0) {
      /* istanbul ignore next */
      cov_2lzatt5963().b[47][0]++;
      cov_2lzatt5963().s[122]++;
      recommendations.push("✅ All ADR compliance checks passed!");
      /* istanbul ignore next */
      cov_2lzatt5963().s[123]++;
      return recommendations;
    } else
    /* istanbul ignore next */
    {
      cov_2lzatt5963().b[47][1]++;
    }
    // Priority recommendations based on failures
    const structureFailures =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[124]++, failedRules.filter(r => {
      /* istanbul ignore next */
      cov_2lzatt5963().f[30]++;
      cov_2lzatt5963().s[125]++;
      return r.rule.category === "structure";
    }));
    const architectureFailures =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[126]++, failedRules.filter(r => {
      /* istanbul ignore next */
      cov_2lzatt5963().f[31]++;
      cov_2lzatt5963().s[127]++;
      return r.rule.category === "architecture";
    }));
    const performanceFailures =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[128]++, failedRules.filter(r => {
      /* istanbul ignore next */
      cov_2lzatt5963().f[32]++;
      cov_2lzatt5963().s[129]++;
      return r.rule.category === "performance";
    }));
    /* istanbul ignore next */
    cov_2lzatt5963().s[130]++;
    if (structureFailures.length > 0) {
      /* istanbul ignore next */
      cov_2lzatt5963().b[48][0]++;
      cov_2lzatt5963().s[131]++;
      recommendations.push("\uD83C\uDFD7️ Directory structure needs attention - ensure components, hooks, and utilities are in correct locations");
    } else
    /* istanbul ignore next */
    {
      cov_2lzatt5963().b[48][1]++;
    }
    cov_2lzatt5963().s[132]++;
    if (architectureFailures.length > 0) {
      /* istanbul ignore next */
      cov_2lzatt5963().b[49][0]++;
      cov_2lzatt5963().s[133]++;
      recommendations.push("\uD83C\uDFDB️ API architecture compliance issues detected - review ADR-008 requirements");
    } else
    /* istanbul ignore next */
    {
      cov_2lzatt5963().b[49][1]++;
    }
    cov_2lzatt5963().s[134]++;
    if (performanceFailures.length > 0) {
      /* istanbul ignore next */
      cov_2lzatt5963().b[50][0]++;
      cov_2lzatt5963().s[135]++;
      recommendations.push("⚡ Performance optimizations recommended - consider memoization and proper hook dependencies");
    } else
    /* istanbul ignore next */
    {
      cov_2lzatt5963().b[50][1]++;
    }
    // Specific recommendations for most common failures
    const commonFailures =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[136]++, new Map());
    /* istanbul ignore next */
    cov_2lzatt5963().s[137]++;
    for (const failure of failedRules) {
      const count =
      /* istanbul ignore next */
      (cov_2lzatt5963().s[138]++,
      /* istanbul ignore next */
      (cov_2lzatt5963().b[51][0]++, commonFailures.get(failure.rule.id)) ||
      /* istanbul ignore next */
      (cov_2lzatt5963().b[51][1]++, 0));
      /* istanbul ignore next */
      cov_2lzatt5963().s[139]++;
      commonFailures.set(failure.rule.id, count + 1);
    }
    const topFailures =
    /* istanbul ignore next */
    (cov_2lzatt5963().s[140]++, Array.from(commonFailures.entries()).sort(([, a], [, b]) => {
      /* istanbul ignore next */
      cov_2lzatt5963().f[33]++;
      cov_2lzatt5963().s[141]++;
      return b - a;
    }).slice(0, 3));
    /* istanbul ignore next */
    cov_2lzatt5963().s[142]++;
    for (const [ruleId, count] of topFailures) {
      const rule =
      /* istanbul ignore next */
      (cov_2lzatt5963().s[143]++, this.rules.find(r => {
        /* istanbul ignore next */
        cov_2lzatt5963().f[34]++;
        cov_2lzatt5963().s[144]++;
        return r.id === ruleId;
      }));
      /* istanbul ignore next */
      cov_2lzatt5963().s[145]++;
      if (rule) {
        /* istanbul ignore next */
        cov_2lzatt5963().b[52][0]++;
        cov_2lzatt5963().s[146]++;
        recommendations.push(`🔧 ${rule.title}: ${count} instance(s) - ${rule.description}`);
      } else
      /* istanbul ignore next */
      {
        cov_2lzatt5963().b[52][1]++;
      }
    }
    /* istanbul ignore next */
    cov_2lzatt5963().s[147]++;
    return recommendations;
  }
  getRule(ruleId) {
    /* istanbul ignore next */
    cov_2lzatt5963().f[35]++;
    cov_2lzatt5963().s[148]++;
    return this.rules.find(rule => {
      /* istanbul ignore next */
      cov_2lzatt5963().f[36]++;
      cov_2lzatt5963().s[149]++;
      return rule.id === ruleId;
    });
  }
  getRulesByADR(adr) {
    /* istanbul ignore next */
    cov_2lzatt5963().f[37]++;
    cov_2lzatt5963().s[150]++;
    return this.rules.filter(rule => {
      /* istanbul ignore next */
      cov_2lzatt5963().f[38]++;
      cov_2lzatt5963().s[151]++;
      return rule.adr === adr;
    });
  }
  getRulesByCategory(category) {
    /* istanbul ignore next */
    cov_2lzatt5963().f[39]++;
    cov_2lzatt5963().s[152]++;
    return this.rules.filter(rule => {
      /* istanbul ignore next */
      cov_2lzatt5963().f[40]++;
      cov_2lzatt5963().s[153]++;
      return rule.category === category;
    });
  }
}
const complianceValidator =
/* istanbul ignore next */
(cov_2lzatt5963().s[154]++, new ADRComplianceValidator());
function validateComponent(filePath, componentName, fileContent) {
  /* istanbul ignore next */
  cov_2lzatt5963().f[41]++;
  cov_2lzatt5963().s[155]++;
  return complianceValidator.validateFile({
    filePath,
    componentName,
    fileContent
  });
}
function validateHook(filePath, fileContent) {
  /* istanbul ignore next */
  cov_2lzatt5963().f[42]++;
  cov_2lzatt5963().s[156]++;
  return complianceValidator.validateFile({
    filePath,
    fileContent
  });
}
function validateAPIRoute(filePath, fileContent) {
  /* istanbul ignore next */
  cov_2lzatt5963().f[43]++;
  cov_2lzatt5963().s[157]++;
  return complianceValidator.validateFile({
    filePath,
    fileContent
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
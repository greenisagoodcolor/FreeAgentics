{"version":3,"names":["VirtualizedMessageList","MessageItem","cov_yudmz47fz","s","_react","memo","index","style","data","f","messages","agents","threads","onMessageClick","onReply","onReaction","showMetadata","showThreads","typingAgents","b","message","sender","find","agent","id","senderId","isSystemMessage","metadata","messageThread","thread","threadId","isBeingRespondedTo","respondingTo","Object","values","some","messageId","parentMessage","m","threadDepth","calculateThreadDepth","handleMessageClick","handleReply","e","stopPropagation","handleReaction","type","_jsxruntime","jsx","className","jsxs","_lucidereact","AlertCircle","content","timestamp","_datefns","format","Date","_utils","cn","onClick","CornerDownRight","substring","_avatar","Avatar","AvatarImage","src","avatar","AvatarFallback","backgroundColor","color","name","charAt","toUpperCase","User","Bot","agentType","_badge","Badge","variant","isGeneratedByLLM","_tooltip","TooltipProvider","Tooltip","TooltipTrigger","Hash","TooltipContent","topic","messageCount","confidence","Math","round","processingTime","Clock","deliveryStatus","CheckCircle","XCircle","Loader2","topics","length","slice","map","reactions","reaction","agentId","_button","Button","size","Reply","ThumbsUp","ThumbsDown","MoreHorizontal","displayName","depth","currentMessage","parentMessageId","parent","height","showTypingIndicators","listRef","useRef","shouldAutoScroll","setShouldAutoScroll","useState","useEffect","current","scrollToItem","handleScroll","useCallback","scrollTop","clientHeight","scrollHeight","isNearBottom","typingMessages","useMemo","entries","info","text","isTyping","allMessages","combined","push","itemData","estimateItemSize","baseSize","itemSize","MessageSquare","_reactwindow","FixedSizeList","ref","width","itemCount","onScroll","overscanCount"],"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/components/conversation/virtualized-message-list.tsx"],"sourcesContent":["\"use client\";\n\nimport React, {\n  memo,\n  useCallback,\n  useMemo,\n  useRef,\n  useEffect,\n  useState,\n} from \"react\";\nimport { FixedSizeList as List, ListChildComponentProps } from \"react-window\";\nimport { format } from \"date-fns\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\";\nimport type { Message, Agent, ConversationThread } from \"@/lib/types\";\nimport {\n  CornerDownRight,\n  MessageSquare,\n  Clock,\n  User,\n  Bot,\n  AlertCircle,\n  CheckCircle,\n  XCircle,\n  Loader2,\n  Hash,\n  ThumbsUp,\n  ThumbsDown,\n  Reply,\n  MoreHorizontal,\n} from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\n\nexport interface VirtualizedMessageListProps {\n  messages: Message[];\n  agents: Agent[];\n  threads?: ConversationThread[];\n  height: number;\n  onMessageClick?: (message: Message) => void;\n  onReply?: (message: Message) => void;\n  onReaction?: (messageId: string, type: string) => void;\n  showMetadata?: boolean;\n  showThreads?: boolean;\n  showTypingIndicators?: boolean;\n  typingAgents?: Record<string, { text?: string; messageId?: string }>;\n  className?: string;\n}\n\ninterface MessageItemProps extends ListChildComponentProps {\n  data: {\n    messages: Message[];\n    agents: Agent[];\n    threads?: ConversationThread[];\n    onMessageClick?: (message: Message) => void;\n    onReply?: (message: Message) => void;\n    onReaction?: (messageId: string, type: string) => void;\n    showMetadata: boolean;\n    showThreads: boolean;\n    typingAgents?: Record<string, { text?: string; messageId?: string }>;\n  };\n}\n\nconst MessageItem = memo<MessageItemProps>(({ index, style, data }) => {\n  const {\n    messages,\n    agents,\n    threads,\n    onMessageClick,\n    onReply,\n    onReaction,\n    showMetadata,\n    showThreads,\n    typingAgents = {},\n  } = data;\n\n  const message = messages[index];\n  if (!message) return null;\n\n  // Find the agent who sent this message\n  const sender = agents.find((agent) => agent.id === message.senderId);\n\n  // Determine if this is a system message\n  const isSystemMessage =\n    message.metadata?.isSystemMessage || message.senderId === \"system\";\n\n  // Get thread information\n  const messageThread = threads?.find(\n    (thread) => thread.id === message.metadata?.threadId,\n  );\n\n  // Check if this message is being responded to\n  const isBeingRespondedTo =\n    message.metadata?.respondingTo &&\n    Object.values(typingAgents).some((agent) => agent.messageId === message.id);\n\n  // Get the parent message if this is a reply\n  const parentMessage = message.metadata?.respondingTo\n    ? messages.find((m) => m.id === message.metadata?.respondingTo)\n    : null;\n\n  // Calculate message depth for thread visualization\n  const threadDepth = calculateThreadDepth(message, messages);\n\n  const handleMessageClick = () => {\n    onMessageClick?.(message);\n  };\n\n  const handleReply = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    onReply?.(message);\n  };\n\n  const handleReaction = (type: string) => {\n    onReaction?.(message.id, type);\n  };\n\n  if (isSystemMessage) {\n    return (\n      <div style={style} className=\"px-4 py-2\">\n        <div className=\"flex justify-center\">\n          <div className=\"max-w-2xl\">\n            <div className=\"bg-muted/50 rounded-lg px-4 py-2 text-center text-sm text-muted-foreground\">\n              <AlertCircle className=\"inline-block w-4 h-4 mr-2\" />\n              {message.content}\n              {showMetadata && message.timestamp && (\n                <span className=\"ml-2 text-xs\">\n                  {format(new Date(message.timestamp), \"HH:mm:ss\")}\n                </span>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      style={style}\n      className=\"px-4 py-2 hover:bg-muted/20 transition-colors\"\n    >\n      <div\n        className={cn(\n          \"group cursor-pointer\",\n          threadDepth > 0 && \"ml-8 border-l-2 border-muted pl-4\",\n        )}\n        onClick={handleMessageClick}\n      >\n        {/* Thread connection line */}\n        {showThreads && parentMessage && (\n          <div className=\"flex items-center text-xs text-muted-foreground mb-2\">\n            <CornerDownRight className=\"w-3 h-3 mr-1\" />\n            <span>\n              Replying to: {parentMessage.content.substring(0, 30)}...\n            </span>\n          </div>\n        )}\n\n        <div className=\"flex gap-3\">\n          {/* Avatar */}\n          <Avatar className=\"w-8 h-8 flex-shrink-0\">\n            <AvatarImage src={sender?.avatar} />\n            <AvatarFallback\n              style={{ backgroundColor: sender?.color || \"#666\" }}\n            >\n              {sender ? (\n                sender.name.charAt(0).toUpperCase()\n              ) : message.senderId === \"user\" ? (\n                <User className=\"w-4 h-4\" />\n              ) : (\n                <Bot className=\"w-4 h-4\" />\n              )}\n            </AvatarFallback>\n          </Avatar>\n\n          <div className=\"flex-1 min-w-0\">\n            {/* Message header */}\n            <div className=\"flex items-center gap-2 mb-1\">\n              <span className=\"font-semibold text-sm\">\n                {sender?.name ||\n                  (message.senderId === \"user\" ? \"You\" : message.senderId)}\n              </span>\n\n              {/* Agent type badge */}\n              {message.metadata?.agentType && (\n                <Badge variant=\"outline\" className=\"text-xs\">\n                  {message.metadata.agentType}\n                </Badge>\n              )}\n\n              {/* AI generated badge */}\n              {message.metadata?.isGeneratedByLLM && (\n                <Badge variant=\"secondary\" className=\"text-xs\">\n                  <Bot className=\"w-3 h-3 mr-1\" />\n                  AI\n                </Badge>\n              )}\n\n              {/* Message type badge */}\n              {message.metadata?.type && message.metadata.type !== \"agent\" && (\n                <Badge variant=\"outline\" className=\"text-xs\">\n                  {message.metadata.type}\n                </Badge>\n              )}\n\n              {/* Timestamp */}\n              <span className=\"text-xs text-muted-foreground\">\n                {format(new Date(message.timestamp), \"HH:mm:ss\")}\n              </span>\n\n              {/* Thread indicator */}\n              {showThreads && messageThread && (\n                <TooltipProvider>\n                  <Tooltip>\n                    <TooltipTrigger>\n                      <Hash className=\"w-3 h-3 text-muted-foreground\" />\n                    </TooltipTrigger>\n                    <TooltipContent>\n                      <p>Thread: {messageThread.topic || \"Untitled\"}</p>\n                      <p className=\"text-xs\">\n                        {messageThread.messageCount} messages\n                      </p>\n                    </TooltipContent>\n                  </Tooltip>\n                </TooltipProvider>\n              )}\n            </div>\n\n            {/* Message content */}\n            <div className=\"text-sm mb-2\">{message.content}</div>\n\n            {/* Message metadata */}\n            {showMetadata && (\n              <div className=\"flex flex-wrap gap-2 text-xs text-muted-foreground\">\n                {/* Confidence */}\n                {message.metadata?.confidence && (\n                  <span>\n                    Confidence: {Math.round(message.metadata.confidence * 100)}%\n                  </span>\n                )}\n\n                {/* Processing time */}\n                {message.metadata?.processingTime && (\n                  <span>\n                    <Clock className=\"inline w-3 h-3 mr-1\" />\n                    {message.metadata.processingTime}ms\n                  </span>\n                )}\n\n                {/* Delivery status */}\n                {message.metadata?.deliveryStatus && (\n                  <span className=\"flex items-center gap-1\">\n                    {message.metadata.deliveryStatus === \"delivered\" && (\n                      <CheckCircle className=\"w-3 h-3 text-green-500\" />\n                    )}\n                    {message.metadata.deliveryStatus === \"failed\" && (\n                      <XCircle className=\"w-3 h-3 text-red-500\" />\n                    )}\n                    {message.metadata.deliveryStatus === \"pending\" && (\n                      <Loader2 className=\"w-3 h-3 animate-spin text-yellow-500\" />\n                    )}\n                    {message.metadata.deliveryStatus}\n                  </span>\n                )}\n\n                {/* Topics */}\n                {message.metadata?.topics &&\n                  message.metadata.topics.length > 0 && (\n                    <div className=\"flex gap-1\">\n                      {message.metadata.topics\n                        .slice(0, 3)\n                        .map((topic: string) => (\n                          <Badge\n                            key={topic}\n                            variant=\"outline\"\n                            className=\"text-xs\"\n                          >\n                            {topic}\n                          </Badge>\n                        ))}\n                      {message.metadata.topics.length > 3 && (\n                        <span>+{message.metadata.topics.length - 3} more</span>\n                      )}\n                    </div>\n                  )}\n              </div>\n            )}\n\n            {/* Reactions */}\n            {message.metadata?.reactions &&\n              message.metadata.reactions.length > 0 && (\n                <div className=\"flex gap-1 mt-2\">\n                  {message.metadata.reactions.map((reaction: any) => (\n                    <Badge\n                      key={`${reaction.agentId}-${reaction.type}`}\n                      variant=\"outline\"\n                      className=\"text-xs cursor-pointer hover:bg-muted\"\n                      onClick={() => handleReaction(reaction.type)}\n                    >\n                      {reaction.type} {reaction.agentId}\n                    </Badge>\n                  ))}\n                </div>\n              )}\n\n            {/* Response indicator */}\n            {isBeingRespondedTo && (\n              <div className=\"flex items-center gap-2 mt-2 text-xs text-muted-foreground\">\n                <Loader2 className=\"w-3 h-3 animate-spin\" />\n                <span>Agents are responding...</span>\n              </div>\n            )}\n\n            {/* Action buttons (shown on hover) */}\n            <div className=\"flex gap-1 mt-2 opacity-0 group-hover:opacity-100 transition-opacity\">\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                className=\"h-6 px-2 text-xs\"\n                onClick={handleReply}\n              >\n                <Reply className=\"w-3 h-3 mr-1\" />\n                Reply\n              </Button>\n\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                className=\"h-6 px-2 text-xs\"\n                onClick={() => handleReaction(\"👍\")}\n              >\n                <ThumbsUp className=\"w-3 h-3\" />\n              </Button>\n\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                className=\"h-6 px-2 text-xs\"\n                onClick={() => handleReaction(\"👎\")}\n              >\n                <ThumbsDown className=\"w-3 h-3\" />\n              </Button>\n\n              <Button variant=\"ghost\" size=\"sm\" className=\"h-6 px-2 text-xs\">\n                <MoreHorizontal className=\"w-3 h-3\" />\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nMessageItem.displayName = \"MessageItem\";\n\n// Helper function to calculate thread depth\nfunction calculateThreadDepth(message: Message, messages: Message[]): number {\n  let depth = 0;\n  let currentMessage = message;\n\n  while (currentMessage.metadata?.parentMessageId) {\n    const parent = messages.find(\n      (m) => m.id === currentMessage.metadata?.parentMessageId,\n    );\n    if (!parent) break;\n    depth++;\n    currentMessage = parent;\n    if (depth > 10) break; // Prevent infinite loops\n  }\n\n  return depth;\n}\n\nexport const VirtualizedMessageList = memo<VirtualizedMessageListProps>(\n  ({\n    messages,\n    agents,\n    threads,\n    height,\n    onMessageClick,\n    onReply,\n    onReaction,\n    showMetadata = true,\n    showThreads = true,\n    showTypingIndicators = true,\n    typingAgents = {},\n    className,\n  }) => {\n    const listRef = useRef<List>(null);\n    const [shouldAutoScroll, setShouldAutoScroll] = useState(true);\n\n    // Auto-scroll to bottom when new messages arrive\n    useEffect(() => {\n      if (shouldAutoScroll && listRef.current) {\n        listRef.current.scrollToItem(messages.length - 1, \"end\");\n      }\n    }, [messages.length, shouldAutoScroll]);\n\n    // Handle scroll to detect if user is at bottom\n    const handleScroll = useCallback(\n      ({ scrollTop, clientHeight, scrollHeight }: any) => {\n        const isNearBottom = scrollTop + clientHeight >= scrollHeight - 50;\n        setShouldAutoScroll(isNearBottom);\n      },\n      [],\n    );\n\n    // Create typing indicator messages\n    const typingMessages = useMemo(() => {\n      return Object.entries(typingAgents).map(([agentId, info]) => ({\n        id: `typing-${agentId}`,\n        content: info.text || \"...\",\n        senderId: agentId,\n        timestamp: new Date(),\n        metadata: {\n          isTyping: true,\n          type: \"typing\" as const,\n          respondingTo: info.messageId,\n        },\n      })) as Message[];\n    }, [typingAgents]);\n\n    // Combine messages with typing indicators\n    const allMessages = useMemo(() => {\n      const combined = [...messages];\n      if (showTypingIndicators) {\n        combined.push(...typingMessages);\n      }\n      return combined;\n    }, [messages, typingMessages, showTypingIndicators]);\n\n    const itemData = useMemo(\n      () => ({\n        messages: allMessages,\n        agents,\n        threads,\n        onMessageClick,\n        onReply,\n        onReaction,\n        showMetadata,\n        showThreads,\n        typingAgents,\n      }),\n      [\n        allMessages,\n        agents,\n        threads,\n        onMessageClick,\n        onReply,\n        onReaction,\n        showMetadata,\n        showThreads,\n        typingAgents,\n      ],\n    );\n\n    // Estimate item size based on content\n    const estimateItemSize = useCallback(() => {\n      // Base size for avatar and padding\n      let baseSize = 60;\n\n      // Add size for metadata\n      if (showMetadata) baseSize += 20;\n\n      // Add size for thread indicators\n      if (showThreads) baseSize += 10;\n\n      return baseSize;\n    }, [showMetadata, showThreads]);\n\n    const itemSize = estimateItemSize();\n\n    if (allMessages.length === 0) {\n      return (\n        <div\n          className={cn(\"flex items-center justify-center h-full\", className)}\n        >\n          <div className=\"text-center text-muted-foreground\">\n            <MessageSquare className=\"w-12 h-12 mx-auto mb-4 opacity-50\" />\n            <p>No messages yet</p>\n            <p className=\"text-sm\">Start a conversation to see messages here</p>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className={cn(\"relative\", className)}>\n        <List\n          ref={listRef}\n          height={height}\n          width=\"100%\"\n          itemCount={allMessages.length}\n          itemSize={itemSize}\n          itemData={itemData}\n          onScroll={handleScroll}\n          overscanCount={5}\n          className=\"scrollbar-thin scrollbar-thumb-muted scrollbar-track-transparent\"\n        >\n          {MessageItem}\n        </List>\n\n        {/* Scroll to bottom button */}\n        {!shouldAutoScroll && (\n          <div className=\"absolute bottom-4 right-4\">\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              className=\"shadow-lg\"\n              onClick={() => {\n                setShouldAutoScroll(true);\n                listRef.current?.scrollToItem(allMessages.length - 1, \"end\");\n              }}\n            >\n              <CornerDownRight className=\"w-4 h-4 mr-1\" />\n              Jump to bottom\n            </Button>\n          </div>\n        )}\n      </div>\n    );\n  },\n);\n\nVirtualizedMessageList.displayName = \"VirtualizedMessageList\";\n"],"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","ignoreList":[]}
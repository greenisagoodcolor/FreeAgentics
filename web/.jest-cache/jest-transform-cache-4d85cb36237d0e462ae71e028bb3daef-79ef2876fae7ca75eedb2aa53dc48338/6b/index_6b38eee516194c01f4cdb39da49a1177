6389ca29490fa0cea355ed50ab2b1dae
"use client";
"use strict";

/* istanbul ignore next */
function cov_1usq37jngk() {
  var path = "/Users/matthewmoroney/builds/FreeAgentics/web/app/dashboard/components/panels/KnowledgePanel/index.tsx";
  var hash = "9fb43830f49e2f19822d6bb7b5fd2ac2b3f3c0a5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewmoroney/builds/FreeAgentics/web/app/dashboard/components/panels/KnowledgePanel/index.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 30
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 71
        }
      },
      "5": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 14,
          column: 44
        }
      },
      "6": {
        start: {
          line: 15,
          column: 51
        },
        end: {
          line: 15,
          column: 151
        }
      },
      "7": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 19,
          column: 6
        }
      },
      "8": {
        start: {
          line: 23,
          column: 23
        },
        end: {
          line: 23,
          column: 141
        }
      },
      "9": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 49,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 16,
            column: 9
          },
          end: {
            line: 16,
            column: 33
          }
        },
        loc: {
          start: {
            line: 16,
            column: 39
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "KnowledgePanel",
        decl: {
          start: {
            line: 21,
            column: 9
          },
          end: {
            line: 21,
            column: 23
          }
        },
        loc: {
          start: {
            line: 21,
            column: 34
          },
          end: {
            line: 50,
            column: 1
          }
        },
        line: 21
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 19,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 17,
            column: 35
          },
          end: {
            line: 17,
            column: 38
          }
        }, {
          start: {
            line: 17,
            column: 41
          },
          end: {
            line: 19,
            column: 5
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 17,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 17,
            column: 14
          }
        }, {
          start: {
            line: 17,
            column: 18
          },
          end: {
            line: 17,
            column: 32
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 23,
            column: 23
          },
          end: {
            line: 23,
            column: 141
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 23
          },
          end: {
            line: 23,
            column: 52
          }
        }, {
          start: {
            line: 23,
            column: 57
          },
          end: {
            line: 23,
            column: 105
          }
        }, {
          start: {
            line: 23,
            column: 109
          },
          end: {
            line: 23,
            column: 140
          }
        }],
        line: 23
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matthewmoroney/builds/FreeAgentics/web/app/dashboard/components/panels/KnowledgePanel/index.tsx"],
      sourcesContent: ["\"use client\";\n\nimport React from \"react\";\nimport { DashboardView } from \"../../../../page\";\nimport { Network } from \"lucide-react\";\nimport KnowledgeGraphVisualization from \"@/components/dashboard/KnowledgeGraphVisualization\";\n\ninterface KnowledgePanelProps {\n  view: DashboardView;\n}\n\nexport default function KnowledgePanel({ view }: KnowledgePanelProps) {\n  // Enable test mode for Playwright tests or when NODE_ENV is test\n  const isTestMode =\n    typeof window !== \"undefined\" &&\n    (window.location.search.includes(\"testMode=true\") ||\n      process.env.NODE_ENV === \"test\");\n\n  return (\n    <div className=\"h-full flex flex-col bg-[var(--bg-primary)]\">\n      {/* Panel Header */}\n      <div className=\"flex items-center justify-between p-4 border-b border-[var(--bg-tertiary)]\">\n        <div className=\"flex items-center gap-2\">\n          <Network className=\"w-5 h-5 text-[var(--accent-primary)]\" />\n          <h3 className=\"font-semibold text-[var(--text-primary)]\">\n            Knowledge Graph\n          </h3>\n        </div>\n      </div>\n\n      {/* Knowledge Graph Content - REAL D3.js Implementation */}\n      <div className=\"flex-1 overflow-hidden\">\n        <KnowledgeGraphVisualization testMode={isTestMode} />\n      </div>\n    </div>\n  );\n}\n"],
      names: ["KnowledgePanel", "view", "isTestMode", "window", "location", "search", "includes", "process", "env", "NODE_ENV", "div", "className", "Network", "h3", "KnowledgeGraphVisualization", "testMode"],
      mappings: "AAAA;;;;;+BAWA;;;eAAwBA;;;;8DATN;6BAEM;oFACgB;;;;;;AAMzB,SAASA,eAAe,EAAEC,IAAI,EAAuB;IAClE,iEAAiE;IACjE,MAAMC,aACJ,OAAOC,WAAW,eACjBA,CAAAA,OAAOC,QAAQ,CAACC,MAAM,CAACC,QAAQ,CAAC,oBAC/BC,QAAQC,GAAG,CAACC,QAAQ,KAAK,MAAK;IAElC,qBACE,sBAACC;QAAIC,WAAU;;0BAEb,qBAACD;gBAAIC,WAAU;0BACb,cAAA,sBAACD;oBAAIC,WAAU;;sCACb,qBAACC,oBAAO;4BAACD,WAAU;;sCACnB,qBAACE;4BAAGF,WAAU;sCAA2C;;;;;0BAO7D,qBAACD;gBAAIC,WAAU;0BACb,cAAA,qBAACG,oCAA2B;oBAACC,UAAUb;;;;;AAI/C"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9fb43830f49e2f19822d6bb7b5fd2ac2b3f3c0a5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1usq37jngk = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1usq37jngk();
cov_1usq37jngk().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1usq37jngk().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1usq37jngk().f[0]++;
    cov_1usq37jngk().s[2]++;
    return KnowledgePanel;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1usq37jngk().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_1usq37jngk().s[4]++, _interop_require_default(require("react")));
const _lucidereact =
/* istanbul ignore next */
(cov_1usq37jngk().s[5]++, require("lucide-react"));
const _KnowledgeGraphVisualization =
/* istanbul ignore next */
(/*#__PURE__*/cov_1usq37jngk().s[6]++, _interop_require_default(require("../../../../../components/dashboard/KnowledgeGraphVisualization")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1usq37jngk().f[1]++;
  cov_1usq37jngk().s[7]++;
  return /* istanbul ignore next */(cov_1usq37jngk().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1usq37jngk().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1usq37jngk().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1usq37jngk().b[0][1]++, {
    default: obj
  });
}
function KnowledgePanel({
  view
}) {
  /* istanbul ignore next */
  cov_1usq37jngk().f[2]++;
  // Enable test mode for Playwright tests or when NODE_ENV is test
  const isTestMode =
  /* istanbul ignore next */
  (cov_1usq37jngk().s[8]++,
  /* istanbul ignore next */
  (cov_1usq37jngk().b[2][0]++, typeof window !== "undefined") && (
  /* istanbul ignore next */
  (cov_1usq37jngk().b[2][1]++, window.location.search.includes("testMode=true")) ||
  /* istanbul ignore next */
  (cov_1usq37jngk().b[2][2]++, process.env.NODE_ENV === "test")));
  /* istanbul ignore next */
  cov_1usq37jngk().s[9]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "h-full flex flex-col bg-[var(--bg-primary)]",
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "flex items-center justify-between p-4 border-b border-[var(--bg-tertiary)]",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center gap-2",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Network, {
          className: "w-5 h-5 text-[var(--accent-primary)]"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
          className: "font-semibold text-[var(--text-primary)]",
          children: "Knowledge Graph"
        })]
      })
    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "flex-1 overflow-hidden",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_KnowledgeGraphVisualization.default, {
        testMode: isTestMode
      })
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJLbm93bGVkZ2VQYW5lbCIsInZpZXciLCJjb3ZfMXVzcTM3am5nayIsImYiLCJpc1Rlc3RNb2RlIiwicyIsImIiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsInNlYXJjaCIsImluY2x1ZGVzIiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwiX2pzeHJ1bnRpbWUiLCJqc3hzIiwiY2xhc3NOYW1lIiwianN4IiwiX2x1Y2lkZXJlYWN0IiwiTmV0d29yayIsIl9Lbm93bGVkZ2VHcmFwaFZpc3VhbGl6YXRpb24iLCJkZWZhdWx0IiwidGVzdE1vZGUiXSwic291cmNlcyI6WyIvVXNlcnMvbWF0dGhld21vcm9uZXkvYnVpbGRzL0ZyZWVBZ2VudGljcy93ZWIvYXBwL2Rhc2hib2FyZC9jb21wb25lbnRzL3BhbmVscy9Lbm93bGVkZ2VQYW5lbC9pbmRleC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IERhc2hib2FyZFZpZXcgfSBmcm9tIFwiLi4vLi4vLi4vLi4vcGFnZVwiO1xuaW1wb3J0IHsgTmV0d29yayB9IGZyb20gXCJsdWNpZGUtcmVhY3RcIjtcbmltcG9ydCBLbm93bGVkZ2VHcmFwaFZpc3VhbGl6YXRpb24gZnJvbSBcIkAvY29tcG9uZW50cy9kYXNoYm9hcmQvS25vd2xlZGdlR3JhcGhWaXN1YWxpemF0aW9uXCI7XG5cbmludGVyZmFjZSBLbm93bGVkZ2VQYW5lbFByb3BzIHtcbiAgdmlldzogRGFzaGJvYXJkVmlldztcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gS25vd2xlZGdlUGFuZWwoeyB2aWV3IH06IEtub3dsZWRnZVBhbmVsUHJvcHMpIHtcbiAgLy8gRW5hYmxlIHRlc3QgbW9kZSBmb3IgUGxheXdyaWdodCB0ZXN0cyBvciB3aGVuIE5PREVfRU5WIGlzIHRlc3RcbiAgY29uc3QgaXNUZXN0TW9kZSA9XG4gICAgdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuICAgICh3aW5kb3cubG9jYXRpb24uc2VhcmNoLmluY2x1ZGVzKFwidGVzdE1vZGU9dHJ1ZVwiKSB8fFxuICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwidGVzdFwiKTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiaC1mdWxsIGZsZXggZmxleC1jb2wgYmctW3ZhcigtLWJnLXByaW1hcnkpXVwiPlxuICAgICAgey8qIFBhbmVsIEhlYWRlciAqL31cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIHAtNCBib3JkZXItYiBib3JkZXItW3ZhcigtLWJnLXRlcnRpYXJ5KV1cIj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBnYXAtMlwiPlxuICAgICAgICAgIDxOZXR3b3JrIGNsYXNzTmFtZT1cInctNSBoLTUgdGV4dC1bdmFyKC0tYWNjZW50LXByaW1hcnkpXVwiIC8+XG4gICAgICAgICAgPGgzIGNsYXNzTmFtZT1cImZvbnQtc2VtaWJvbGQgdGV4dC1bdmFyKC0tdGV4dC1wcmltYXJ5KV1cIj5cbiAgICAgICAgICAgIEtub3dsZWRnZSBHcmFwaFxuICAgICAgICAgIDwvaDM+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG5cbiAgICAgIHsvKiBLbm93bGVkZ2UgR3JhcGggQ29udGVudCAtIFJFQUwgRDMuanMgSW1wbGVtZW50YXRpb24gKi99XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXgtMSBvdmVyZmxvdy1oaWRkZW5cIj5cbiAgICAgICAgPEtub3dsZWRnZUdyYXBoVmlzdWFsaXphdGlvbiB0ZXN0TW9kZT17aXNUZXN0TW9kZX0gLz5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrQkFXQTs7Ozs7O1dBQXdCQSxjQUFBOzs7Ozs7Ozt3RUFUTjs7O2tDQUVNOzs7d0VBQ2dCOzs7Ozs7Ozs7Ozs7Ozs7QUFNekIsU0FBU0EsZUFBZTtFQUFFQztBQUFJLENBQXVCO0VBQUE7RUFBQUMsY0FBQSxHQUFBQyxDQUFBO0VBQ2xFO0VBQ0EsTUFBTUMsVUFBQTtFQUFBO0VBQUEsQ0FBQUYsY0FBQSxHQUFBRyxDQUFBO0VBQ0o7RUFBQSxDQUFBSCxjQUFBLEdBQUFJLENBQUEsaUJBQU9DLE1BQUEsS0FBVztFQUNqQjtFQUFBLENBQUFMLGNBQUEsR0FBQUksQ0FBQSxVQUFBQyxNQUFBLENBQU9DLFFBQVEsQ0FBQ0MsTUFBTSxDQUFDQyxRQUFRLENBQUM7RUFBQTtFQUFBLENBQUFSLGNBQUEsR0FBQUksQ0FBQSxVQUMvQkssT0FBQSxDQUFRQyxHQUFHLENBQUNDLFFBQVEsS0FBSyxNQUFLO0VBQUE7RUFBQVgsY0FBQSxHQUFBRyxDQUFBO0VBRWxDLG9CQUNFLElBQUFTLFdBQUEsQ0FBQUMsSUFBQSxFQUFDO0lBQUlDLFNBQUEsRUFBVTs0QkFFYixJQUFBRixXQUFBLENBQUFHLEdBQUEsRUFBQztNQUFJRCxTQUFBLEVBQVU7Z0JBQ2IsaUJBQUFGLFdBQUEsQ0FBQUMsSUFBQSxFQUFDO1FBQUlDLFNBQUEsRUFBVTtnQ0FDYixJQUFBRixXQUFBLENBQUFHLEdBQUEsRUFBQ0MsWUFBQSxDQUFBQyxPQUFPO1VBQUNILFNBQUEsRUFBVTt5QkFDbkIsSUFBQUYsV0FBQSxDQUFBRyxHQUFBLEVBQUM7VUFBR0QsU0FBQSxFQUFVO29CQUEyQzs7O3FCQU83RCxJQUFBRixXQUFBLENBQUFHLEdBQUEsRUFBQztNQUFJRCxTQUFBLEVBQVU7Z0JBQ2IsaUJBQUFGLFdBQUEsQ0FBQUcsR0FBQSxFQUFDRyw0QkFBQSxDQUFBQyxPQUEyQjtRQUFDQyxRQUFBLEVBQVVsQjs7OztBQUkvQyIsImlnbm9yZUxpc3QiOltdfQ==
{"version":3,"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/__tests__/hooks/use-mobile.test.ts"],"sourcesContent":["/**\n * Comprehensive tests for useIsMobile hook\n */\n\nimport { renderHook } from \"@testing-library/react\";\nimport { useIsMobile } from \"@/hooks/use-mobile\";\n\n// Mock window.matchMedia\nconst mockMatchMedia = (matches: boolean) => {\n  Object.defineProperty(window, \"matchMedia\", {\n    writable: true,\n    value: jest.fn().mockImplementation((query) => ({\n      matches,\n      media: query,\n      onchange: null,\n      addListener: jest.fn(), // Deprecated\n      removeListener: jest.fn(), // Deprecated\n      addEventListener: jest.fn(),\n      removeEventListener: jest.fn(),\n      dispatchEvent: jest.fn(),\n    })),\n  });\n};\n\ndescribe(\"useIsMobile Hook\", () => {\n  beforeEach(() => {\n    // Reset the mock before each test\n    jest.clearAllMocks();\n  });\n\n  it(\"should return true for mobile screens\", () => {\n    mockMatchMedia(true);\n\n    const { result } = renderHook(() => useIsMobile());\n\n    expect(result.current).toBe(true);\n  });\n\n  it(\"should return false for desktop screens\", () => {\n    mockMatchMedia(false);\n\n    const { result } = renderHook(() => useIsMobile());\n\n    expect(result.current).toBe(false);\n  });\n\n  it(\"should call matchMedia with correct query\", () => {\n    mockMatchMedia(false);\n\n    renderHook(() => useIsMobile());\n\n    expect(window.matchMedia).toHaveBeenCalledWith(\"(max-width: 767px)\");\n  });\n\n  it(\"should handle matchMedia not being available\", () => {\n    // Remove matchMedia to simulate older browsers\n    Object.defineProperty(window, \"matchMedia\", {\n      writable: true,\n      value: undefined,\n    });\n\n    const { result } = renderHook(() => useIsMobile());\n\n    // Should default to false when matchMedia is not available\n    expect(result.current).toBe(false);\n  });\n\n  it(\"should be stable across re-renders when screen size does not change\", () => {\n    mockMatchMedia(true);\n\n    const { result, rerender } = renderHook(() => useIsMobile());\n\n    const firstResult = result.current;\n    rerender();\n    const secondResult = result.current;\n\n    expect(firstResult).toBe(secondResult);\n    expect(firstResult).toBe(true);\n  });\n\n  it(\"should handle edge case breakpoints\", () => {\n    // Test exactly at the breakpoint (767px is mobile, 768px is desktop)\n    Object.defineProperty(window, \"matchMedia\", {\n      writable: true,\n      value: jest.fn().mockImplementation((query) => ({\n        matches: query === \"(max-width: 767px)\",\n        media: query,\n        onchange: null,\n        addListener: jest.fn(),\n        removeListener: jest.fn(),\n        addEventListener: jest.fn(),\n        removeEventListener: jest.fn(),\n        dispatchEvent: jest.fn(),\n      })),\n    });\n\n    const { result } = renderHook(() => useIsMobile());\n\n    expect(result.current).toBe(true);\n  });\n});\n"],"names":["mockMatchMedia","matches","Object","defineProperty","window","writable","value","jest","fn","mockImplementation","query","media","onchange","addListener","removeListener","addEventListener","removeEventListener","dispatchEvent","describe","beforeEach","clearAllMocks","it","result","renderHook","useIsMobile","expect","current","toBe","matchMedia","toHaveBeenCalledWith","undefined","rerender","firstResult","secondResult"],"mappings":"AAAA;;CAEC;;;;uBAE0B;2BACC;AAE5B,yBAAyB;AACzB,MAAMA,iBAAiB,CAACC;IACtBC,OAAOC,cAAc,CAACC,QAAQ,cAAc;QAC1CC,UAAU;QACVC,OAAOC,KAAKC,EAAE,GAAGC,kBAAkB,CAAC,CAACC,QAAW,CAAA;gBAC9CT;gBACAU,OAAOD;gBACPE,UAAU;gBACVC,aAAaN,KAAKC,EAAE;gBACpBM,gBAAgBP,KAAKC,EAAE;gBACvBO,kBAAkBR,KAAKC,EAAE;gBACzBQ,qBAAqBT,KAAKC,EAAE;gBAC5BS,eAAeV,KAAKC,EAAE;YACxB,CAAA;IACF;AACF;AAEAU,SAAS,oBAAoB;IAC3BC,WAAW;QACT,kCAAkC;QAClCZ,KAAKa,aAAa;IACpB;IAEAC,GAAG,yCAAyC;QAC1CrB,eAAe;QAEf,MAAM,EAAEsB,MAAM,EAAE,GAAGC,IAAAA,iBAAU,EAAC,IAAMC,IAAAA,sBAAW;QAE/CC,OAAOH,OAAOI,OAAO,EAAEC,IAAI,CAAC;IAC9B;IAEAN,GAAG,2CAA2C;QAC5CrB,eAAe;QAEf,MAAM,EAAEsB,MAAM,EAAE,GAAGC,IAAAA,iBAAU,EAAC,IAAMC,IAAAA,sBAAW;QAE/CC,OAAOH,OAAOI,OAAO,EAAEC,IAAI,CAAC;IAC9B;IAEAN,GAAG,6CAA6C;QAC9CrB,eAAe;QAEfuB,IAAAA,iBAAU,EAAC,IAAMC,IAAAA,sBAAW;QAE5BC,OAAOrB,OAAOwB,UAAU,EAAEC,oBAAoB,CAAC;IACjD;IAEAR,GAAG,gDAAgD;QACjD,+CAA+C;QAC/CnB,OAAOC,cAAc,CAACC,QAAQ,cAAc;YAC1CC,UAAU;YACVC,OAAOwB;QACT;QAEA,MAAM,EAAER,MAAM,EAAE,GAAGC,IAAAA,iBAAU,EAAC,IAAMC,IAAAA,sBAAW;QAE/C,2DAA2D;QAC3DC,OAAOH,OAAOI,OAAO,EAAEC,IAAI,CAAC;IAC9B;IAEAN,GAAG,uEAAuE;QACxErB,eAAe;QAEf,MAAM,EAAEsB,MAAM,EAAES,QAAQ,EAAE,GAAGR,IAAAA,iBAAU,EAAC,IAAMC,IAAAA,sBAAW;QAEzD,MAAMQ,cAAcV,OAAOI,OAAO;QAClCK;QACA,MAAME,eAAeX,OAAOI,OAAO;QAEnCD,OAAOO,aAAaL,IAAI,CAACM;QACzBR,OAAOO,aAAaL,IAAI,CAAC;IAC3B;IAEAN,GAAG,uCAAuC;QACxC,qEAAqE;QACrEnB,OAAOC,cAAc,CAACC,QAAQ,cAAc;YAC1CC,UAAU;YACVC,OAAOC,KAAKC,EAAE,GAAGC,kBAAkB,CAAC,CAACC,QAAW,CAAA;oBAC9CT,SAASS,UAAU;oBACnBC,OAAOD;oBACPE,UAAU;oBACVC,aAAaN,KAAKC,EAAE;oBACpBM,gBAAgBP,KAAKC,EAAE;oBACvBO,kBAAkBR,KAAKC,EAAE;oBACzBQ,qBAAqBT,KAAKC,EAAE;oBAC5BS,eAAeV,KAAKC,EAAE;gBACxB,CAAA;QACF;QAEA,MAAM,EAAEc,MAAM,EAAE,GAAGC,IAAAA,iBAAU,EAAC,IAAMC,IAAAA,sBAAW;QAE/CC,OAAOH,OAAOI,OAAO,EAAEC,IAAI,CAAC;IAC9B;AACF"}
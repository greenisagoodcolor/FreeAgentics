{"version":3,"names":["cov_1agcils75q","actualCoverage","s","LLMProvider","f","useLLM","logger","_debuglogger","createLogger","LLMContext","_react","createContext","client","_featureflags","isFeatureEnabled","b","_llmsecureclient","llmSecureClient","_llmclient","llmClient","settings","updateSettings","saveSettings","isProcessing","setIsProcessing","clientType","children","info","setSettings","useState","useSecureStorage","activeClient","useEffect","clientSettings","getSettings","provider","model","hasApiKey","apiKey","hasApiKeySessionId","apiKeySessionId","hasServerRef","mergedSettings","temperature","maxTokens","topP","frequencyPenalty","presencePenalty","systemFingerprint","maxAutonomousMessages","conversationCooldown","error","newSettings","updatedSettings","undefined","value","clientAvailable","settingsProvider","settingsModel","_jsxruntime","jsx","Provider","context","useContext"],"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/contexts/llm-context.tsx"],"sourcesContent":["\"use client\";\n\nimport React, {\n  createContext,\n  useContext,\n  useEffect,\n  useState,\n  useCallback,\n} from \"react\";\nimport type { LLMSettings } from \"@/lib/llm-settings\";\nimport { llmClient } from \"@/lib/llm-client\";\nimport { llmSecureClient } from \"@/lib/llm-secure-client\";\nimport { isFeatureEnabled } from \"@/lib/feature-flags\";\nimport { createLogger } from \"@/lib/debug-logger\";\n\nconst logger = createLogger(\"LLM-CONTEXT\");\n\n// Create the context with default values\nexport interface ILLMContextType {\n  // Client management\n  client: typeof llmClient | typeof llmSecureClient | null;\n  clientType: \"LLMClient\" | \"LLMSecureClient\" | null;\n\n  // Settings management\n  settings: LLMSettings | null;\n  updateSettings: (newSettings: Partial<LLMSettings>) => void;\n  saveSettings: () => Promise<boolean>;\n\n  // Status\n  isProcessing: boolean;\n  setIsProcessing: (processing: boolean) => void;\n}\n\n// Create context with default values\nconst LLMContext = createContext<ILLMContextType>({\n  client: isFeatureEnabled(\"useSecureApiStorage\") ? llmSecureClient : llmClient,\n  settings: null,\n  updateSettings: () => {},\n  saveSettings: async () => false,\n  isProcessing: false,\n  setIsProcessing: () => {},\n  clientType: isFeatureEnabled(\"useSecureApiStorage\")\n    ? \"LLMSecureClient\"\n    : \"LLMClient\",\n});\n\n// Provider component\nexport function LLMProvider({ children }: { children: React.ReactNode }) {\n  logger.info(\"LLMProvider rendering\");\n  const [settings, setSettings] = useState<LLMSettings | null>(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  // Determine which client to use based on feature flag\n  const useSecureStorage = isFeatureEnabled(\"useSecureApiStorage\");\n  const activeClient = useSecureStorage ? llmSecureClient : llmClient;\n\n  logger.info(\"LLMProvider using client:\", {\n    useSecureStorage,\n    clientType: useSecureStorage ? \"LLMSecureClient\" : \"LLMClient\",\n  });\n\n  // Load initial settings from the client\n  useEffect(() => {\n    logger.info(\"Loading initial settings from client\");\n\n    if (!activeClient) {\n      logger.info(\"No active client available, using defaults\");\n      setSettings(null);\n      return;\n    }\n\n    try {\n      const clientSettings = activeClient.getSettings();\n      logger.info(\"Retrieved settings from client:\", {\n        provider: clientSettings?.provider,\n        model: clientSettings?.model,\n        hasApiKey: !!clientSettings?.apiKey,\n        hasApiKeySessionId: !!clientSettings?.apiKeySessionId,\n        hasServerRef:\n          clientSettings &&\n          typeof clientSettings === \"object\" &&\n          \"__server_ref\" in clientSettings,\n      });\n\n      // Create clean merged settings with robust null/undefined handling\n      const mergedSettings: LLMSettings = {\n        provider: clientSettings?.provider || \"openai\",\n        model: clientSettings?.model || \"gpt-4o\",\n        temperature:\n          typeof clientSettings?.temperature === \"number\"\n            ? clientSettings.temperature\n            : 0.7,\n        maxTokens:\n          typeof clientSettings?.maxTokens === \"number\"\n            ? clientSettings.maxTokens\n            : 1024,\n        topP:\n          typeof clientSettings?.topP === \"number\" ? clientSettings.topP : 0.9,\n        frequencyPenalty:\n          typeof clientSettings?.frequencyPenalty === \"number\"\n            ? clientSettings.frequencyPenalty\n            : 0,\n        presencePenalty:\n          typeof clientSettings?.presencePenalty === \"number\"\n            ? clientSettings.presencePenalty\n            : 0,\n        systemFingerprint:\n          typeof clientSettings?.systemFingerprint === \"boolean\"\n            ? clientSettings.systemFingerprint\n            : false,\n        // Handle optional properties - only include if they have valid values\n        ...(clientSettings?.apiKey && { apiKey: clientSettings.apiKey }),\n        ...(clientSettings?.apiKeySessionId && {\n          apiKeySessionId: clientSettings.apiKeySessionId,\n        }),\n        ...(typeof clientSettings?.maxAutonomousMessages === \"number\" && {\n          maxAutonomousMessages: clientSettings.maxAutonomousMessages,\n        }),\n        ...(typeof clientSettings?.conversationCooldown === \"number\" && {\n          conversationCooldown: clientSettings.conversationCooldown,\n        }),\n      };\n\n      setSettings(mergedSettings);\n\n      logger.info(\"LLM context initialized with settings:\", {\n        provider: mergedSettings.provider,\n        model: mergedSettings.model,\n        hasApiKey: !!mergedSettings.apiKey,\n        hasApiKeySessionId: !!mergedSettings.apiKeySessionId,\n      });\n    } catch (error) {\n      logger.error(\"Error loading initial settings:\", error);\n      setSettings(null);\n    }\n  }, [activeClient]);\n\n  // Update settings in the client\n  const updateSettings = (newSettings: Partial<LLMSettings>) => {\n    logger.info(\"updateSettings called with:\", {\n      provider: newSettings.provider,\n      model: newSettings.model,\n      hasApiKey: !!newSettings.apiKey,\n      hasApiKeySessionId: !!newSettings.apiKeySessionId,\n    });\n\n    if (!newSettings || typeof newSettings !== \"object\") {\n      logger.error(\"Invalid settings update\");\n      return;\n    }\n\n    try {\n      // Merge new settings with current settings, ensuring required fields are present\n      const updatedSettings: LLMSettings = {\n        // Provide defaults for required fields\n        provider: newSettings.provider || settings?.provider || \"openai\",\n        model: newSettings.model || settings?.model || \"gpt-4o\",\n        temperature: newSettings.temperature ?? settings?.temperature ?? 0.7,\n        maxTokens: newSettings.maxTokens ?? settings?.maxTokens ?? 1024,\n        topP: newSettings.topP ?? settings?.topP ?? 0.9,\n        frequencyPenalty:\n          newSettings.frequencyPenalty ?? settings?.frequencyPenalty ?? 0,\n        presencePenalty:\n          newSettings.presencePenalty ?? settings?.presencePenalty ?? 0,\n        systemFingerprint:\n          newSettings.systemFingerprint ?? settings?.systemFingerprint ?? false,\n        // Handle optional properties\n        ...(newSettings.apiKey !== undefined && { apiKey: newSettings.apiKey }),\n        ...(newSettings.apiKeySessionId !== undefined && {\n          apiKeySessionId: newSettings.apiKeySessionId,\n        }),\n        ...(newSettings.maxAutonomousMessages !== undefined && {\n          maxAutonomousMessages: newSettings.maxAutonomousMessages,\n        }),\n        ...(newSettings.conversationCooldown !== undefined && {\n          conversationCooldown: newSettings.conversationCooldown,\n        }),\n      };\n\n      // Update local state\n      setSettings(updatedSettings);\n\n      // Update client settings\n      if (activeClient && typeof activeClient.updateSettings === \"function\") {\n        activeClient.updateSettings(updatedSettings);\n      } else {\n        logger.error(\"activeClient.updateSettings is not available\");\n      }\n    } catch (error) {\n      logger.error(\"Error updating settings:\", error);\n    }\n  };\n\n  // Save settings to the server\n  const saveSettings = async (): Promise<boolean> => {\n    logger.info(\"saveSettings called\");\n    try {\n      if (activeClient && typeof activeClient.saveSettings === \"function\") {\n        return await activeClient.saveSettings();\n      } else {\n        logger.error(\"activeClient.saveSettings is not available\");\n        return false;\n      }\n    } catch (error) {\n      logger.error(\"Error saving settings:\", error);\n      return false;\n    }\n  };\n\n  // Context value\n  const value = {\n    client: activeClient,\n    settings,\n    updateSettings,\n    saveSettings,\n    isProcessing,\n    setIsProcessing,\n    clientType: (useSecureStorage ? \"LLMSecureClient\" : \"LLMClient\") as\n      | \"LLMSecureClient\"\n      | \"LLMClient\",\n  };\n\n  logger.info(\"LLMProvider rendering with context value:\", {\n    clientAvailable: !!value.client,\n    clientType: useSecureStorage ? \"LLMSecureClient\" : \"LLMClient\",\n    settingsProvider: value.settings?.provider,\n    settingsModel: value.settings?.model,\n    isProcessing: value.isProcessing,\n  });\n\n  return <LLMContext.Provider value={value}>{children}</LLMContext.Provider>;\n}\n\n// Hook to use the LLM context\nexport function useLLM() {\n  logger.info(\"useLLM hook called\");\n  const context = useContext(LLMContext);\n  logger.info(\"useLLM returning context with:\", {\n    clientAvailable: !!context.client,\n    clientType: context.clientType,\n    settingsProvider: context.settings?.provider,\n    settingsModel: context.settings?.model,\n    isProcessing: context.isProcessing,\n  });\n  return context;\n}\n"],"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","ignoreList":[]}
{"version":3,"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/hooks/use-mobile.tsx"],"sourcesContent":["import * as React from \"react\";\n\nconst MOBILE_BREAKPOINT = 768;\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(\n    undefined,\n  );\n\n  React.useEffect(() => {\n    // Check if matchMedia is available (for SSR and testing environments)\n    if (typeof window !== \"undefined\" && window.matchMedia) {\n      const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`);\n      const handleChange = () => {\n        setIsMobile(mql.matches);\n      };\n      mql.addEventListener(\"change\", handleChange);\n      setIsMobile(mql.matches);\n      return () => mql.removeEventListener(\"change\", handleChange);\n    } else {\n      // Fallback for environments without matchMedia\n      setIsMobile(false);\n    }\n  }, []);\n\n  return !!isMobile;\n}\n"],"names":["useIsMobile","MOBILE_BREAKPOINT","isMobile","setIsMobile","React","useState","undefined","useEffect","window","matchMedia","mql","handleChange","matches","addEventListener","removeEventListener"],"mappings":";;;;+BAIgBA;;;eAAAA;;;+DAJO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEvB,MAAMC,oBAAoB;AAEnB,SAASD;IACd,MAAM,CAACE,UAAUC,YAAY,GAAGC,OAAMC,QAAQ,CAC5CC;IAGFF,OAAMG,SAAS,CAAC;QACd,sEAAsE;QACtE,IAAI,OAAOC,WAAW,eAAeA,OAAOC,UAAU,EAAE;YACtD,MAAMC,MAAMF,OAAOC,UAAU,CAAC,CAAC,YAAY,EAAER,oBAAoB,EAAE,GAAG,CAAC;YACvE,MAAMU,eAAe;gBACnBR,YAAYO,IAAIE,OAAO;YACzB;YACAF,IAAIG,gBAAgB,CAAC,UAAUF;YAC/BR,YAAYO,IAAIE,OAAO;YACvB,OAAO,IAAMF,IAAII,mBAAmB,CAAC,UAAUH;QACjD,OAAO;YACL,+CAA+C;YAC/CR,YAAY;QACd;IACF,GAAG,EAAE;IAEL,OAAO,CAAC,CAACD;AACX"}
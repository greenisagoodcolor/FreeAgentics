8cff7d720a7bc1964718cf8894303e74
"use client";
"use strict";

/* istanbul ignore next */
function cov_2m659q10eo() {
  var path = "/Users/matthewmoroney/builds/FreeAgentics/web/components/errorboundary.tsx";
  var hash = "08076a352f6ce82f6d25f3ec6844b4efc3b665d9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewmoroney/builds/FreeAgentics/web/components/errorboundary.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 29
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 31
        }
      },
      "6": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 48
        }
      },
      "7": {
        start: {
          line: 21,
          column: 29
        },
        end: {
          line: 21,
          column: 72
        }
      },
      "8": {
        start: {
          line: 22,
          column: 15
        },
        end: {
          line: 22,
          column: 36
        }
      },
      "9": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "10": {
        start: {
          line: 24,
          column: 21
        },
        end: {
          line: 24,
          column: 44
        }
      },
      "11": {
        start: {
          line: 25,
          column: 19
        },
        end: {
          line: 25,
          column: 47
        }
      },
      "12": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 51
        }
      },
      "13": {
        start: {
          line: 27,
          column: 39
        },
        end: {
          line: 27,
          column: 51
        }
      },
      "14": {
        start: {
          line: 28,
          column: 28
        },
        end: {
          line: 28,
          column: 41
        }
      },
      "15": {
        start: {
          line: 29,
          column: 27
        },
        end: {
          line: 29,
          column: 40
        }
      },
      "16": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 32,
          column: 20
        }
      },
      "17": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 66
        }
      },
      "18": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "19": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 19
        }
      },
      "20": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "21": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 41,
          column: 10
        }
      },
      "22": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 53
        }
      },
      "23": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "24": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 30
        }
      },
      "25": {
        start: {
          line: 47,
          column: 17
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "26": {
        start: {
          line: 50,
          column: 32
        },
        end: {
          line: 50,
          column: 88
        }
      },
      "27": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "28": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 59,
          column: 9
        }
      },
      "29": {
        start: {
          line: 53,
          column: 23
        },
        end: {
          line: 53,
          column: 95
        }
      },
      "30": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 58,
          column: 13
        }
      },
      "31": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 57
        }
      },
      "32": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 39
        }
      },
      "33": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 25
        }
      },
      "34": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 64,
          column: 5
        }
      },
      "35": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 31
        }
      },
      "36": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 65,
          column: 18
        }
      },
      "37": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 21
        }
      },
      "38": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 73,
          column: 10
        }
      },
      "39": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 79,
          column: 10
        }
      },
      "40": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 69
        }
      },
      "41": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 134,
          column: 9
        }
      },
      "42": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 88,
          column: 13
        }
      },
      "43": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 87,
          column: 43
        }
      },
      "44": {
        start: {
          line: 89,
          column: 26
        },
        end: {
          line: 89,
          column: 42
        }
      },
      "45": {
        start: {
          line: 90,
          column: 31
        },
        end: {
          line: 90,
          column: 67
        }
      },
      "46": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 133,
          column: 15
        }
      },
      "47": {
        start: {
          line: 119,
          column: 45
        },
        end: {
          line: 122,
          column: 38
        }
      },
      "48": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 35
        }
      },
      "49": {
        start: {
          line: 139,
          column: 4
        },
        end: {
          line: 142,
          column: 6
        }
      },
      "50": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 140,
          column: 47
        }
      },
      "51": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 20
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 19
          },
          end: {
            line: 13,
            column: 20
          }
        },
        loc: {
          start: {
            line: 13,
            column: 30
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 21
          },
          end: {
            line: 16,
            column: 22
          }
        },
        loc: {
          start: {
            line: 16,
            column: 32
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 26,
            column: 9
          },
          end: {
            line: 26,
            column: 33
          }
        },
        loc: {
          start: {
            line: 26,
            column: 47
          },
          end: {
            line: 33,
            column: 1
          }
        },
        line: 26
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 30,
            column: 39
          },
          end: {
            line: 30,
            column: 40
          }
        },
        loc: {
          start: {
            line: 30,
            column: 61
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "5": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 34,
            column: 9
          },
          end: {
            line: 34,
            column: 34
          }
        },
        loc: {
          start: {
            line: 34,
            column: 53
          },
          end: {
            line: 66,
            column: 1
          }
        },
        line: 34
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        },
        loc: {
          start: {
            line: 68,
            column: 22
          },
          end: {
            line: 74,
            column: 5
          }
        },
        line: 68
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        },
        loc: {
          start: {
            line: 75,
            column: 43
          },
          end: {
            line: 80,
            column: 5
          }
        },
        line: 75
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        },
        loc: {
          start: {
            line: 81,
            column: 40
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 81
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        },
        loc: {
          start: {
            line: 84,
            column: 13
          },
          end: {
            line: 136,
            column: 5
          }
        },
        line: 84
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 119,
            column: 41
          },
          end: {
            line: 119,
            column: 42
          }
        },
        loc: {
          start: {
            line: 119,
            column: 45
          },
          end: {
            line: 122,
            column: 38
          }
        },
        line: 119
      },
      "11": {
        name: "useErrorHandler",
        decl: {
          start: {
            line: 138,
            column: 9
          },
          end: {
            line: 138,
            column: 24
          }
        },
        loc: {
          start: {
            line: 138,
            column: 27
          },
          end: {
            line: 143,
            column: 1
          }
        },
        line: 138
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 139,
            column: 11
          },
          end: {
            line: 139,
            column: 12
          }
        },
        loc: {
          start: {
            line: 139,
            column: 20
          },
          end: {
            line: 142,
            column: 5
          }
        },
        line: 139
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 31,
            column: 15
          },
          end: {
            line: 31,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 31,
            column: 29
          },
          end: {
            line: 31,
            column: 45
          }
        }, {
          start: {
            line: 31,
            column: 48
          },
          end: {
            line: 31,
            column: 65
          }
        }],
        line: 31
      },
      "2": {
        loc: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "3": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 20
          }
        }, {
          start: {
            line: 35,
            column: 24
          },
          end: {
            line: 35,
            column: 27
          }
        }, {
          start: {
            line: 35,
            column: 31
          },
          end: {
            line: 35,
            column: 45
          }
        }],
        line: 35
      },
      "4": {
        loc: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "5": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 20
          }
        }, {
          start: {
            line: 38,
            column: 24
          },
          end: {
            line: 38,
            column: 47
          }
        }, {
          start: {
            line: 38,
            column: 51
          },
          end: {
            line: 38,
            column: 76
          }
        }],
        line: 38
      },
      "6": {
        loc: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "7": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 13
          }
        }, {
          start: {
            line: 44,
            column: 17
          },
          end: {
            line: 44,
            column: 31
          }
        }],
        line: 44
      },
      "8": {
        loc: {
          start: {
            line: 50,
            column: 32
          },
          end: {
            line: 50,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 32
          },
          end: {
            line: 50,
            column: 53
          }
        }, {
          start: {
            line: 50,
            column: 57
          },
          end: {
            line: 50,
            column: 88
          }
        }],
        line: 50
      },
      "9": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "10": {
        loc: {
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 52,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 52,
            column: 29
          }
        }, {
          start: {
            line: 52,
            column: 33
          },
          end: {
            line: 52,
            column: 79
          }
        }],
        line: 52
      },
      "11": {
        loc: {
          start: {
            line: 53,
            column: 23
          },
          end: {
            line: 53,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 53,
            column: 47
          },
          end: {
            line: 53,
            column: 88
          }
        }, {
          start: {
            line: 53,
            column: 91
          },
          end: {
            line: 53,
            column: 95
          }
        }],
        line: 53
      },
      "12": {
        loc: {
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        }, {
          start: {
            line: 56,
            column: 19
          },
          end: {
            line: 58,
            column: 13
          }
        }],
        line: 54
      },
      "13": {
        loc: {
          start: {
            line: 54,
            column: 16
          },
          end: {
            line: 54,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 16
          },
          end: {
            line: 54,
            column: 20
          }
        }, {
          start: {
            line: 54,
            column: 25
          },
          end: {
            line: 54,
            column: 33
          }
        }, {
          start: {
            line: 54,
            column: 37
          },
          end: {
            line: 54,
            column: 45
          }
        }],
        line: 54
      },
      "14": {
        loc: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "15": {
        loc: {
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 134,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 134,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "16": {
        loc: {
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 88,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 88,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "17": {
        loc: {
          start: {
            line: 99,
            column: 34
          },
          end: {
            line: 99,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 99,
            column: 47
          },
          end: {
            line: 99,
            column: 87
          }
        }, {
          start: {
            line: 99,
            column: 90
          },
          end: {
            line: 99,
            column: 109
          }
        }],
        line: 99
      },
      "18": {
        loc: {
          start: {
            line: 105,
            column: 42
          },
          end: {
            line: 105,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 105,
            column: 42
          },
          end: {
            line: 105,
            column: 56
          }
        }, {
          start: {
            line: 105,
            column: 60
          },
          end: {
            line: 105,
            column: 90
          }
        }],
        line: 105
      },
      "19": {
        loc: {
          start: {
            line: 107,
            column: 28
          },
          end: {
            line: 114,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 28
          },
          end: {
            line: 107,
            column: 38
          }
        }, {
          start: {
            line: 107,
            column: 56
          },
          end: {
            line: 114,
            column: 30
          }
        }],
        line: 107
      },
      "20": {
        loc: {
          start: {
            line: 112,
            column: 36
          },
          end: {
            line: 112,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 112,
            column: 36
          },
          end: {
            line: 112,
            column: 52
          }
        }, {
          start: {
            line: 112,
            column: 56
          },
          end: {
            line: 112,
            column: 88
          }
        }],
        line: 112
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matthewmoroney/builds/FreeAgentics/web/components/errorboundary.tsx"],
      sourcesContent: ["\"use client\";\n\nimport React, { Component, ReactNode } from \"react\";\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\nimport { Button } from \"@/components/ui/button\";\nimport { AlertCircle, RefreshCw } from \"lucide-react\";\nimport { LLMError } from \"@/lib/llm-errors\";\n\ninterface Props {\n  children: ReactNode;\n  fallback?: ReactNode;\n}\n\ninterface IState {\n  hasError: boolean;\n  error: Error | null;\n}\n\nexport class ErrorBoundary extends Component<Props, IState> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { hasError: false, error: null };\n  }\n\n  static getDerivedStateFromError(error: Error): IState {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    console.error(\"Error caught by boundary:\", error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      if (this.props.fallback) {\n        return this.props.fallback;\n      }\n\n      const error = this.state.error;\n      const isLLMError = error instanceof LLMError;\n\n      return (\n        <Alert variant=\"destructive\" className=\"m-4\">\n          <AlertCircle className=\"h-4 w-4\" />\n          <AlertTitle>\n            {isLLMError\n              ? `${error.provider?.toUpperCase()} Error`\n              : \"Application Error\"}\n          </AlertTitle>\n          <AlertDescription className=\"mt-2\">\n            <p>{error?.message || \"An unexpected error occurred\"}</p>\n            {isLLMError && (\n              <p className=\"text-sm text-muted-foreground mt-1\">\n                Error type: {error.type}\n                {error.statusCode && ` (Status: ${error.statusCode})`}\n              </p>\n            )}\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              className=\"mt-2\"\n              onClick={() => this.setState({ hasError: false, error: null })}\n            >\n              <RefreshCw className=\"h-3 w-3 mr-1\" />\n              Try Again\n            </Button>\n          </AlertDescription>\n        </Alert>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\n// Hook-based error boundary for functional components\nexport function useErrorHandler() {\n  return (error: Error) => {\n    console.error(\"Error handled:\", error);\n    throw error; // This will be caught by the ErrorBoundary\n  };\n}\n"],
      names: ["ErrorBoundary", "useErrorHandler", "Component", "constructor", "props", "state", "hasError", "error", "getDerivedStateFromError", "componentDidCatch", "errorInfo", "console", "render", "fallback", "isLLMError", "LLMError", "Alert", "variant", "className", "AlertCircle", "AlertTitle", "provider", "toUpperCase", "AlertDescription", "p", "message", "type", "statusCode", "Button", "size", "onClick", "setState", "RefreshCw", "children"],
      mappings: "AAAA;;;;;;;;;;;;IAkBaA,aAAa;eAAbA;;IA0DGC,eAAe;eAAfA;;;;+DA1E4B;uBACQ;wBAC7B;6BACgB;2BACd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYlB,MAAMD,sBAAsBE,gBAAS;IAC1CC,YAAYC,KAAY,CAAE;QACxB,KAAK,CAACA;QACN,IAAI,CAACC,KAAK,GAAG;YAAEC,UAAU;YAAOC,OAAO;QAAK;IAC9C;IAEA,OAAOC,yBAAyBD,KAAY,EAAU;QACpD,OAAO;YAAED,UAAU;YAAMC;QAAM;IACjC;IAEAE,kBAAkBF,KAAY,EAAEG,SAA0B,EAAE;QAC1DC,QAAQJ,KAAK,CAAC,6BAA6BA,OAAOG;IACpD;IAEAE,SAAS;QACP,IAAI,IAAI,CAACP,KAAK,CAACC,QAAQ,EAAE;YACvB,IAAI,IAAI,CAACF,KAAK,CAACS,QAAQ,EAAE;gBACvB,OAAO,IAAI,CAACT,KAAK,CAACS,QAAQ;YAC5B;YAEA,MAAMN,QAAQ,IAAI,CAACF,KAAK,CAACE,KAAK;YAC9B,MAAMO,aAAaP,iBAAiBQ,mBAAQ;YAE5C,qBACE,sBAACC,YAAK;gBAACC,SAAQ;gBAAcC,WAAU;;kCACrC,qBAACC,wBAAW;wBAACD,WAAU;;kCACvB,qBAACE,iBAAU;kCACRN,aACG,CAAC,EAAEP,MAAMc,QAAQ,EAAEC,cAAc,MAAM,CAAC,GACxC;;kCAEN,sBAACC,uBAAgB;wBAACL,WAAU;;0CAC1B,qBAACM;0CAAGjB,OAAOkB,WAAW;;4BACrBX,4BACC,sBAACU;gCAAEN,WAAU;;oCAAqC;oCACnCX,MAAMmB,IAAI;oCACtBnB,MAAMoB,UAAU,IAAI,CAAC,UAAU,EAAEpB,MAAMoB,UAAU,CAAC,CAAC,CAAC;;;0CAGzD,sBAACC,cAAM;gCACLX,SAAQ;gCACRY,MAAK;gCACLX,WAAU;gCACVY,SAAS,IAAM,IAAI,CAACC,QAAQ,CAAC;wCAAEzB,UAAU;wCAAOC,OAAO;oCAAK;;kDAE5D,qBAACyB,sBAAS;wCAACd,WAAU;;oCAAiB;;;;;;;QAMhD;QAEA,OAAO,IAAI,CAACd,KAAK,CAAC6B,QAAQ;IAC5B;AACF;AAGO,SAAShC;IACd,OAAO,CAACM;QACNI,QAAQJ,KAAK,CAAC,kBAAkBA;QAChC,MAAMA,OAAO,2CAA2C;IAC1D;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "08076a352f6ce82f6d25f3ec6844b4efc3b665d9"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2m659q10eo = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2m659q10eo();
cov_2m659q10eo().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2m659q10eo().f[0]++;
  cov_2m659q10eo().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2m659q10eo().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_2m659q10eo().s[3]++;
_export(exports, {
  ErrorBoundary: function () {
    /* istanbul ignore next */
    cov_2m659q10eo().f[1]++;
    cov_2m659q10eo().s[4]++;
    return ErrorBoundary;
  },
  useErrorHandler: function () {
    /* istanbul ignore next */
    cov_2m659q10eo().f[2]++;
    cov_2m659q10eo().s[5]++;
    return useErrorHandler;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2m659q10eo().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_2m659q10eo().s[7]++, _interop_require_wildcard(require("react")));
const _alert =
/* istanbul ignore next */
(cov_2m659q10eo().s[8]++, require("./ui/alert"));
const _button =
/* istanbul ignore next */
(cov_2m659q10eo().s[9]++, require("./ui/button"));
const _lucidereact =
/* istanbul ignore next */
(cov_2m659q10eo().s[10]++, require("lucide-react"));
const _llmerrors =
/* istanbul ignore next */
(cov_2m659q10eo().s[11]++, require("../lib/llm-errors"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_2m659q10eo().f[3]++;
  cov_2m659q10eo().s[12]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_2m659q10eo().b[0][0]++;
    cov_2m659q10eo().s[13]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_2m659q10eo().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_2m659q10eo().s[14]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_2m659q10eo().s[15]++, new WeakMap());
  /* istanbul ignore next */
  cov_2m659q10eo().s[16]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_2m659q10eo().f[4]++;
    cov_2m659q10eo().s[17]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_2m659q10eo().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_2m659q10eo().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_2m659q10eo().f[5]++;
  cov_2m659q10eo().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_2m659q10eo().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_2m659q10eo().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_2m659q10eo().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_2m659q10eo().b[2][0]++;
    cov_2m659q10eo().s[19]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_2m659q10eo().b[2][1]++;
  }
  cov_2m659q10eo().s[20]++;
  if (
  /* istanbul ignore next */
  (cov_2m659q10eo().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_2m659q10eo().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_2m659q10eo().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_2m659q10eo().b[4][0]++;
    cov_2m659q10eo().s[21]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_2m659q10eo().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_2m659q10eo().s[22]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_2m659q10eo().s[23]++;
  if (
  /* istanbul ignore next */
  (cov_2m659q10eo().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_2m659q10eo().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_2m659q10eo().b[6][0]++;
    cov_2m659q10eo().s[24]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_2m659q10eo().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_2m659q10eo().s[25]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_2m659q10eo().s[26]++,
  /* istanbul ignore next */
  (cov_2m659q10eo().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_2m659q10eo().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_2m659q10eo().s[27]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_2m659q10eo().s[28]++;
    if (
    /* istanbul ignore next */
    (cov_2m659q10eo().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_2m659q10eo().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_2m659q10eo().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_2m659q10eo().s[29]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_2m659q10eo().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_2m659q10eo().b[11][1]++, null));
      /* istanbul ignore next */
      cov_2m659q10eo().s[30]++;
      if (
      /* istanbul ignore next */
      (cov_2m659q10eo().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_2m659q10eo().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_2m659q10eo().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_2m659q10eo().b[12][0]++;
        cov_2m659q10eo().s[31]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_2m659q10eo().b[12][1]++;
        cov_2m659q10eo().s[32]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_2m659q10eo().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_2m659q10eo().s[33]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_2m659q10eo().s[34]++;
  if (cache) {
    /* istanbul ignore next */
    cov_2m659q10eo().b[14][0]++;
    cov_2m659q10eo().s[35]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_2m659q10eo().b[14][1]++;
  }
  cov_2m659q10eo().s[36]++;
  return newObj;
}
class ErrorBoundary extends
/* istanbul ignore next */
(_react.Component) {
  constructor(props) {
    /* istanbul ignore next */
    cov_2m659q10eo().f[6]++;
    cov_2m659q10eo().s[37]++;
    super(props);
    /* istanbul ignore next */
    cov_2m659q10eo().s[38]++;
    this.state = {
      hasError: false,
      error: null
    };
  }
  static getDerivedStateFromError(error) {
    /* istanbul ignore next */
    cov_2m659q10eo().f[7]++;
    cov_2m659q10eo().s[39]++;
    return {
      hasError: true,
      error
    };
  }
  componentDidCatch(error, errorInfo) {
    /* istanbul ignore next */
    cov_2m659q10eo().f[8]++;
    cov_2m659q10eo().s[40]++;
    console.error("Error caught by boundary:", error, errorInfo);
  }
  render() {
    /* istanbul ignore next */
    cov_2m659q10eo().f[9]++;
    cov_2m659q10eo().s[41]++;
    if (this.state.hasError) {
      /* istanbul ignore next */
      cov_2m659q10eo().b[15][0]++;
      cov_2m659q10eo().s[42]++;
      if (this.props.fallback) {
        /* istanbul ignore next */
        cov_2m659q10eo().b[16][0]++;
        cov_2m659q10eo().s[43]++;
        return this.props.fallback;
      } else
      /* istanbul ignore next */
      {
        cov_2m659q10eo().b[16][1]++;
      }
      const error =
      /* istanbul ignore next */
      (cov_2m659q10eo().s[44]++, this.state.error);
      const isLLMError =
      /* istanbul ignore next */
      (cov_2m659q10eo().s[45]++, error instanceof _llmerrors.LLMError);
      /* istanbul ignore next */
      cov_2m659q10eo().s[46]++;
      return /*#__PURE__*/(0, _jsxruntime.jsxs)(_alert.Alert, {
        variant: "destructive",
        className: "m-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.AlertCircle, {
          className: "h-4 w-4"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_alert.AlertTitle, {
          children: isLLMError ?
          /* istanbul ignore next */
          (cov_2m659q10eo().b[17][0]++, `${error.provider?.toUpperCase()} Error`) :
          /* istanbul ignore next */
          (cov_2m659q10eo().b[17][1]++, "Application Error")
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_alert.AlertDescription, {
          className: "mt-2",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            children:
            /* istanbul ignore next */
            (cov_2m659q10eo().b[18][0]++, error?.message) ||
            /* istanbul ignore next */
            (cov_2m659q10eo().b[18][1]++, "An unexpected error occurred")
          }),
          /* istanbul ignore next */
          (cov_2m659q10eo().b[19][0]++, isLLMError) &&
          /* istanbul ignore next */
          (cov_2m659q10eo().b[19][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
            className: "text-sm text-muted-foreground mt-1",
            children: ["Error type: ", error.type,
            /* istanbul ignore next */
            (cov_2m659q10eo().b[20][0]++, error.statusCode) &&
            /* istanbul ignore next */
            (cov_2m659q10eo().b[20][1]++, ` (Status: ${error.statusCode})`)]
          })), /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
            variant: "outline",
            size: "sm",
            className: "mt-2",
            onClick: () => {
              /* istanbul ignore next */
              cov_2m659q10eo().f[10]++;
              cov_2m659q10eo().s[47]++;
              return this.setState({
                hasError: false,
                error: null
              });
            },
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.RefreshCw, {
              className: "h-3 w-3 mr-1"
            }), "Try Again"]
          })]
        })]
      });
    } else
    /* istanbul ignore next */
    {
      cov_2m659q10eo().b[15][1]++;
    }
    cov_2m659q10eo().s[48]++;
    return this.props.children;
  }
}
function useErrorHandler() {
  /* istanbul ignore next */
  cov_2m659q10eo().f[11]++;
  cov_2m659q10eo().s[49]++;
  return error => {
    /* istanbul ignore next */
    cov_2m659q10eo().f[12]++;
    cov_2m659q10eo().s[50]++;
    console.error("Error handled:", error);
    /* istanbul ignore next */
    cov_2m659q10eo().s[51]++;
    throw error; // This will be caught by the ErrorBoundary
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
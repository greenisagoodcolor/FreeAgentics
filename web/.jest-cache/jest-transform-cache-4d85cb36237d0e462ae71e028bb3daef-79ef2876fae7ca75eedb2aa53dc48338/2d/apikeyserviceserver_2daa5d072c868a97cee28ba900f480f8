dd93c14c0a9a50f46698653ca28ffc2e
// lib/api-key-service-server.ts
// Server-side API key storage using cookies instead of sessionStorage
"use strict";

/* istanbul ignore next */
function cov_27spzoys17() {
  var path = "/Users/matthewmoroney/builds/FreeAgentics/web/lib/api-key-service-server.ts";
  var hash = "a17bd7e6e1d039ad36ae5ff17e1ebf2d21672d1a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewmoroney/builds/FreeAgentics/web/lib/api-key-service-server.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 6,
          column: 3
        }
      },
      "1": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 11,
          column: 7
        }
      },
      "2": {
        start: {
          line: 8,
          column: 24
        },
        end: {
          line: 11,
          column: 7
        }
      },
      "3": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 23,
          column: 3
        }
      },
      "4": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 28
        }
      },
      "5": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 30
        }
      },
      "6": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 27
        }
      },
      "7": {
        start: {
          line: 24,
          column: 17
        },
        end: {
          line: 24,
          column: 40
        }
      },
      "8": {
        start: {
          line: 25,
          column: 30
        },
        end: {
          line: 25,
          column: 73
        }
      },
      "9": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 29,
          column: 6
        }
      },
      "10": {
        start: {
          line: 32,
          column: 23
        },
        end: {
          line: 32,
          column: 49
        }
      },
      "11": {
        start: {
          line: 33,
          column: 0
        },
        end: {
          line: 35,
          column: 1
        }
      },
      "12": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 70
        }
      },
      "13": {
        start: {
          line: 37,
          column: 15
        },
        end: {
          line: 37,
          column: 46
        }
      },
      "14": {
        start: {
          line: 38,
          column: 19
        },
        end: {
          line: 38,
          column: 104
        }
      },
      "15": {
        start: {
          line: 39,
          column: 20
        },
        end: {
          line: 39,
          column: 39
        }
      },
      "16": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 43,
          column: 7
        }
      },
      "17": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 44,
          column: 64
        }
      },
      "18": {
        start: {
          line: 47,
          column: 18
        },
        end: {
          line: 47,
          column: 33
        }
      },
      "19": {
        start: {
          line: 48,
          column: 15
        },
        end: {
          line: 48,
          column: 48
        }
      },
      "20": {
        start: {
          line: 49,
          column: 26
        },
        end: {
          line: 49,
          column: 61
        }
      },
      "21": {
        start: {
          line: 50,
          column: 21
        },
        end: {
          line: 50,
          column: 108
        }
      },
      "22": {
        start: {
          line: 51,
          column: 20
        },
        end: {
          line: 51,
          column: 50
        }
      },
      "23": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 55,
          column: 7
        }
      },
      "24": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 56,
          column: 32
        }
      },
      "25": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 74,
          column: 5
        }
      },
      "26": {
        start: {
          line: 60,
          column: 26
        },
        end: {
          line: 60,
          column: 54
        }
      },
      "27": {
        start: {
          line: 61,
          column: 32
        },
        end: {
          line: 61,
          column: 47
        }
      },
      "28": {
        start: {
          line: 62,
          column: 28
        },
        end: {
          line: 62,
          column: 57
        }
      },
      "29": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 68,
          column: 11
        }
      },
      "30": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 86
        }
      },
      "31": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 25
        }
      },
      "32": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 73
        }
      },
      "33": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 60
        }
      },
      "34": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 90,
          column: 5
        }
      },
      "35": {
        start: {
          line: 78,
          column: 28
        },
        end: {
          line: 78,
          column: 57
        }
      },
      "36": {
        start: {
          line: 79,
          column: 32
        },
        end: {
          line: 79,
          column: 90
        }
      },
      "37": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 83,
          column: 9
        }
      },
      "38": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 111
        }
      },
      "39": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 24
        }
      },
      "40": {
        start: {
          line: 84,
          column: 29
        },
        end: {
          line: 84,
          column: 53
        }
      },
      "41": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 85
        }
      },
      "42": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 28
        }
      },
      "43": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 76
        }
      },
      "44": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 20
        }
      },
      "45": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 99,
          column: 5
        }
      },
      "46": {
        start: {
          line: 94,
          column: 28
        },
        end: {
          line: 94,
          column: 57
        }
      },
      "47": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 63
        }
      },
      "48": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 83
        }
      },
      "49": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 74
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 16
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 18
          },
          end: {
            line: 14,
            column: 19
          }
        },
        loc: {
          start: {
            line: 14,
            column: 29
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 20
          },
          end: {
            line: 17,
            column: 21
          }
        },
        loc: {
          start: {
            line: 17,
            column: 31
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 20,
            column: 17
          },
          end: {
            line: 20,
            column: 18
          }
        },
        loc: {
          start: {
            line: 20,
            column: 28
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "4": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 26,
            column: 9
          },
          end: {
            line: 26,
            column: 33
          }
        },
        loc: {
          start: {
            line: 26,
            column: 39
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 26
      },
      "5": {
        name: "encrypt",
        decl: {
          start: {
            line: 36,
            column: 9
          },
          end: {
            line: 36,
            column: 16
          }
        },
        loc: {
          start: {
            line: 36,
            column: 23
          },
          end: {
            line: 45,
            column: 1
          }
        },
        line: 36
      },
      "6": {
        name: "decrypt",
        decl: {
          start: {
            line: 46,
            column: 9
          },
          end: {
            line: 46,
            column: 16
          }
        },
        loc: {
          start: {
            line: 46,
            column: 23
          },
          end: {
            line: 57,
            column: 1
          }
        },
        line: 46
      },
      "7": {
        name: "storeApiKey",
        decl: {
          start: {
            line: 58,
            column: 15
          },
          end: {
            line: 58,
            column: 26
          }
        },
        loc: {
          start: {
            line: 58,
            column: 45
          },
          end: {
            line: 75,
            column: 1
          }
        },
        line: 58
      },
      "8": {
        name: "retrieveApiKey",
        decl: {
          start: {
            line: 76,
            column: 15
          },
          end: {
            line: 76,
            column: 29
          }
        },
        loc: {
          start: {
            line: 76,
            column: 51
          },
          end: {
            line: 91,
            column: 1
          }
        },
        line: 76
      },
      "9": {
        name: "deleteApiKey",
        decl: {
          start: {
            line: 92,
            column: 15
          },
          end: {
            line: 92,
            column: 27
          }
        },
        loc: {
          start: {
            line: 92,
            column: 49
          },
          end: {
            line: 100,
            column: 1
          }
        },
        line: 92
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 29,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 35
          },
          end: {
            line: 27,
            column: 38
          }
        }, {
          start: {
            line: 27,
            column: 41
          },
          end: {
            line: 29,
            column: 5
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 14
          }
        }, {
          start: {
            line: 27,
            column: 18
          },
          end: {
            line: 27,
            column: 32
          }
        }],
        line: 27
      },
      "2": {
        loc: {
          start: {
            line: 33,
            column: 0
          },
          end: {
            line: 35,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 0
          },
          end: {
            line: 35,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "3": {
        loc: {
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matthewmoroney/builds/FreeAgentics/web/lib/api-key-service-server.ts"],
      sourcesContent: ["// lib/api-key-service-server.ts\n// Server-side API key storage using cookies instead of sessionStorage\n\nimport { cookies } from \"next/headers\";\nimport crypto from \"crypto\";\n\n// Ensure ENCRYPTION_KEY is available\nconst ENCRYPTION_KEY = process.env.ENCRYPTION_KEY;\nif (!ENCRYPTION_KEY) {\n  throw new Error(\"ENCRYPTION_KEY environment variable is not set\");\n}\n\nfunction encrypt(text: string): string {\n  const iv = crypto.randomBytes(16);\n  const cipher = crypto.createCipheriv(\n    \"aes-256-cbc\",\n    Buffer.from(ENCRYPTION_KEY, \"hex\"),\n    iv,\n  );\n  let encrypted = cipher.update(text);\n  encrypted = Buffer.concat([encrypted, cipher.final()]);\n  return iv.toString(\"hex\") + \":\" + encrypted.toString(\"hex\");\n}\n\nfunction decrypt(text: string): string {\n  const parts = text.split(\":\");\n  const iv = Buffer.from(parts.shift()!, \"hex\");\n  const encryptedText = Buffer.from(parts.join(\":\"), \"hex\");\n  const decipher = crypto.createDecipheriv(\n    \"aes-256-cbc\",\n    Buffer.from(ENCRYPTION_KEY, \"hex\"),\n    iv,\n  );\n  let decrypted = decipher.update(encryptedText);\n  decrypted = Buffer.concat([decrypted, decipher.final()]);\n  return decrypted.toString();\n}\n\nexport async function storeApiKey(\n  provider: string,\n  apiKey: string,\n): Promise<string> {\n  try {\n    const sessionId = crypto.randomUUID();\n    const encryptedApiKey = encrypt(apiKey);\n\n    const cookieStore = await cookies();\n    cookieStore.set(`api_key_${provider}_${sessionId}`, encryptedApiKey, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n      sameSite: \"strict\",\n      maxAge: 60 * 60 * 24, // 24 hours\n    });\n\n    console.log(\n      `[API-KEY-SERVICE] API key stored with session ID: ${sessionId}`,\n    );\n    return sessionId;\n  } catch (error) {\n    console.error(\"[API-KEY-SERVICE] Error storing API key:\", error);\n    throw new Error(\"Failed to store API key securely\");\n  }\n}\n\nexport async function retrieveApiKey(\n  provider: string,\n  sessionId: string,\n): Promise<string | null> {\n  try {\n    const cookieStore = await cookies();\n    const encryptedApiKey = cookieStore.get(\n      `api_key_${provider}_${sessionId}`,\n    )?.value;\n\n    if (!encryptedApiKey) {\n      console.log(\n        `[API-KEY-SERVICE] No API key found for provider: ${provider}, session: ${sessionId}`,\n      );\n      return null;\n    }\n\n    const decryptedKey = decrypt(encryptedApiKey);\n    console.log(\n      `[API-KEY-SERVICE] Retrieved API key for provider: ${provider}`,\n    );\n    return decryptedKey;\n  } catch (error) {\n    console.error(\"[API-KEY-SERVICE] Error retrieving API key:\", error);\n    return null;\n  }\n}\n\nexport async function deleteApiKey(\n  provider: string,\n  sessionId: string,\n): Promise<void> {\n  try {\n    const cookieStore = await cookies();\n    cookieStore.delete(`api_key_${provider}_${sessionId}`);\n    console.log(`[API-KEY-SERVICE] Deleted API key for session: ${sessionId}`);\n  } catch (error) {\n    console.error(\"[API-KEY-SERVICE] Error deleting API key:\", error);\n  }\n}\n"],
      names: ["deleteApiKey", "retrieveApiKey", "storeApiKey", "ENCRYPTION_KEY", "process", "env", "Error", "encrypt", "text", "iv", "crypto", "randomBytes", "cipher", "createCipheriv", "Buffer", "from", "encrypted", "update", "concat", "final", "toString", "decrypt", "parts", "split", "shift", "encryptedText", "join", "decipher", "createDecipheriv", "decrypted", "provider", "apiKey", "sessionId", "randomUUID", "encryptedApiKey", "cookieStore", "cookies", "set", "httpOnly", "secure", "NODE_ENV", "sameSite", "maxAge", "console", "log", "error", "get", "value", "decryptedKey", "delete"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a17bd7e6e1d039ad36ae5ff17e1ebf2d21672d1a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_27spzoys17 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_27spzoys17();
cov_27spzoys17().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_27spzoys17().f[0]++;
  cov_27spzoys17().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_27spzoys17().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_27spzoys17().s[3]++;
_export(exports, {
  deleteApiKey: function () {
    /* istanbul ignore next */
    cov_27spzoys17().f[1]++;
    cov_27spzoys17().s[4]++;
    return deleteApiKey;
  },
  retrieveApiKey: function () {
    /* istanbul ignore next */
    cov_27spzoys17().f[2]++;
    cov_27spzoys17().s[5]++;
    return retrieveApiKey;
  },
  storeApiKey: function () {
    /* istanbul ignore next */
    cov_27spzoys17().f[3]++;
    cov_27spzoys17().s[6]++;
    return storeApiKey;
  }
});
const _headers =
/* istanbul ignore next */
(cov_27spzoys17().s[7]++, require("next/headers"));
const _crypto =
/* istanbul ignore next */
(/*#__PURE__*/cov_27spzoys17().s[8]++, _interop_require_default(require("crypto")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_27spzoys17().f[4]++;
  cov_27spzoys17().s[9]++;
  return /* istanbul ignore next */(cov_27spzoys17().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_27spzoys17().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_27spzoys17().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_27spzoys17().b[0][1]++, {
    default: obj
  });
}
// Ensure ENCRYPTION_KEY is available
const ENCRYPTION_KEY =
/* istanbul ignore next */
(cov_27spzoys17().s[10]++, process.env.ENCRYPTION_KEY);
/* istanbul ignore next */
cov_27spzoys17().s[11]++;
if (!ENCRYPTION_KEY) {
  /* istanbul ignore next */
  cov_27spzoys17().b[2][0]++;
  cov_27spzoys17().s[12]++;
  throw new Error("ENCRYPTION_KEY environment variable is not set");
} else
/* istanbul ignore next */
{
  cov_27spzoys17().b[2][1]++;
}
function encrypt(text) {
  /* istanbul ignore next */
  cov_27spzoys17().f[5]++;
  const iv =
  /* istanbul ignore next */
  (cov_27spzoys17().s[13]++, _crypto.default.randomBytes(16));
  const cipher =
  /* istanbul ignore next */
  (cov_27spzoys17().s[14]++, _crypto.default.createCipheriv("aes-256-cbc", Buffer.from(ENCRYPTION_KEY, "hex"), iv));
  let encrypted =
  /* istanbul ignore next */
  (cov_27spzoys17().s[15]++, cipher.update(text));
  /* istanbul ignore next */
  cov_27spzoys17().s[16]++;
  encrypted = Buffer.concat([encrypted, cipher.final()]);
  /* istanbul ignore next */
  cov_27spzoys17().s[17]++;
  return iv.toString("hex") + ":" + encrypted.toString("hex");
}
function decrypt(text) {
  /* istanbul ignore next */
  cov_27spzoys17().f[6]++;
  const parts =
  /* istanbul ignore next */
  (cov_27spzoys17().s[18]++, text.split(":"));
  const iv =
  /* istanbul ignore next */
  (cov_27spzoys17().s[19]++, Buffer.from(parts.shift(), "hex"));
  const encryptedText =
  /* istanbul ignore next */
  (cov_27spzoys17().s[20]++, Buffer.from(parts.join(":"), "hex"));
  const decipher =
  /* istanbul ignore next */
  (cov_27spzoys17().s[21]++, _crypto.default.createDecipheriv("aes-256-cbc", Buffer.from(ENCRYPTION_KEY, "hex"), iv));
  let decrypted =
  /* istanbul ignore next */
  (cov_27spzoys17().s[22]++, decipher.update(encryptedText));
  /* istanbul ignore next */
  cov_27spzoys17().s[23]++;
  decrypted = Buffer.concat([decrypted, decipher.final()]);
  /* istanbul ignore next */
  cov_27spzoys17().s[24]++;
  return decrypted.toString();
}
async function storeApiKey(provider, apiKey) {
  /* istanbul ignore next */
  cov_27spzoys17().f[7]++;
  cov_27spzoys17().s[25]++;
  try {
    const sessionId =
    /* istanbul ignore next */
    (cov_27spzoys17().s[26]++, _crypto.default.randomUUID());
    const encryptedApiKey =
    /* istanbul ignore next */
    (cov_27spzoys17().s[27]++, encrypt(apiKey));
    const cookieStore =
    /* istanbul ignore next */
    (cov_27spzoys17().s[28]++, await (0, _headers.cookies)());
    /* istanbul ignore next */
    cov_27spzoys17().s[29]++;
    cookieStore.set(`api_key_${provider}_${sessionId}`, encryptedApiKey, {
      httpOnly: true,
      secure: process.env.NODE_ENV === "production",
      sameSite: "strict",
      maxAge: 60 * 60 * 24
    });
    /* istanbul ignore next */
    cov_27spzoys17().s[30]++;
    console.log(`[API-KEY-SERVICE] API key stored with session ID: ${sessionId}`);
    /* istanbul ignore next */
    cov_27spzoys17().s[31]++;
    return sessionId;
  } catch (error) {
    /* istanbul ignore next */
    cov_27spzoys17().s[32]++;
    console.error("[API-KEY-SERVICE] Error storing API key:", error);
    /* istanbul ignore next */
    cov_27spzoys17().s[33]++;
    throw new Error("Failed to store API key securely");
  }
}
async function retrieveApiKey(provider, sessionId) {
  /* istanbul ignore next */
  cov_27spzoys17().f[8]++;
  cov_27spzoys17().s[34]++;
  try {
    const cookieStore =
    /* istanbul ignore next */
    (cov_27spzoys17().s[35]++, await (0, _headers.cookies)());
    const encryptedApiKey =
    /* istanbul ignore next */
    (cov_27spzoys17().s[36]++, cookieStore.get(`api_key_${provider}_${sessionId}`)?.value);
    /* istanbul ignore next */
    cov_27spzoys17().s[37]++;
    if (!encryptedApiKey) {
      /* istanbul ignore next */
      cov_27spzoys17().b[3][0]++;
      cov_27spzoys17().s[38]++;
      console.log(`[API-KEY-SERVICE] No API key found for provider: ${provider}, session: ${sessionId}`);
      /* istanbul ignore next */
      cov_27spzoys17().s[39]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_27spzoys17().b[3][1]++;
    }
    const decryptedKey =
    /* istanbul ignore next */
    (cov_27spzoys17().s[40]++, decrypt(encryptedApiKey));
    /* istanbul ignore next */
    cov_27spzoys17().s[41]++;
    console.log(`[API-KEY-SERVICE] Retrieved API key for provider: ${provider}`);
    /* istanbul ignore next */
    cov_27spzoys17().s[42]++;
    return decryptedKey;
  } catch (error) {
    /* istanbul ignore next */
    cov_27spzoys17().s[43]++;
    console.error("[API-KEY-SERVICE] Error retrieving API key:", error);
    /* istanbul ignore next */
    cov_27spzoys17().s[44]++;
    return null;
  }
}
async function deleteApiKey(provider, sessionId) {
  /* istanbul ignore next */
  cov_27spzoys17().f[9]++;
  cov_27spzoys17().s[45]++;
  try {
    const cookieStore =
    /* istanbul ignore next */
    (cov_27spzoys17().s[46]++, await (0, _headers.cookies)());
    /* istanbul ignore next */
    cov_27spzoys17().s[47]++;
    cookieStore.delete(`api_key_${provider}_${sessionId}`);
    /* istanbul ignore next */
    cov_27spzoys17().s[48]++;
    console.log(`[API-KEY-SERVICE] Deleted API key for session: ${sessionId}`);
  } catch (error) {
    /* istanbul ignore next */
    cov_27spzoys17().s[49]++;
    console.error("[API-KEY-SERVICE] Error deleting API key:", error);
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
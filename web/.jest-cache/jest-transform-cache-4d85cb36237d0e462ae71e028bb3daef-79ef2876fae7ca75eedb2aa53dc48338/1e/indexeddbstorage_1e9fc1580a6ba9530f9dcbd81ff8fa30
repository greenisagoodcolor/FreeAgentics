cd532984af37135307ff09018d6e94ba
"use strict";

/* istanbul ignore next */
function cov_piwwpze91() {
  var path = "/Users/matthewmoroney/builds/FreeAgentics/web/lib/storage/indexeddb-storage.ts";
  var hash = "e0a4496018f7b25eabcf7c022dac7e3ea374a8e7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewmoroney/builds/FreeAgentics/web/lib/storage/indexeddb-storage.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 32
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 33
        }
      },
      "6": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 85,
          column: 11
        }
      },
      "7": {
        start: {
          line: 22,
          column: 28
        },
        end: {
          line: 22,
          column: 69
        }
      },
      "8": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 56
        }
      },
      "9": {
        start: {
          line: 23,
          column: 34
        },
        end: {
          line: 23,
          column: 55
        }
      },
      "10": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 27,
          column: 14
        }
      },
      "11": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 41
        }
      },
      "12": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 26
        }
      },
      "13": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 84,
          column: 14
        }
      },
      "14": {
        start: {
          line: 29,
          column: 27
        },
        end: {
          line: 29,
          column: 46
        }
      },
      "15": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 44,
          column: 17
        }
      },
      "16": {
        start: {
          line: 32,
          column: 45
        },
        end: {
          line: 34,
          column: 22
        }
      },
      "17": {
        start: {
          line: 35,
          column: 20
        },
        end: {
          line: 37,
          column: 23
        }
      },
      "18": {
        start: {
          line: 38,
          column: 20
        },
        end: {
          line: 40,
          column: 23
        }
      },
      "19": {
        start: {
          line: 41,
          column: 20
        },
        end: {
          line: 43,
          column: 23
        }
      },
      "20": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 59,
          column: 17
        }
      },
      "21": {
        start: {
          line: 47,
          column: 39
        },
        end: {
          line: 49,
          column: 22
        }
      },
      "22": {
        start: {
          line: 50,
          column: 20
        },
        end: {
          line: 52,
          column: 23
        }
      },
      "23": {
        start: {
          line: 53,
          column: 20
        },
        end: {
          line: 55,
          column: 23
        }
      },
      "24": {
        start: {
          line: 56,
          column: 20
        },
        end: {
          line: 58,
          column: 23
        }
      },
      "25": {
        start: {
          line: 61,
          column: 16
        },
        end: {
          line: 71,
          column: 17
        }
      },
      "26": {
        start: {
          line: 62,
          column: 42
        },
        end: {
          line: 64,
          column: 22
        }
      },
      "27": {
        start: {
          line: 65,
          column: 20
        },
        end: {
          line: 67,
          column: 23
        }
      },
      "28": {
        start: {
          line: 68,
          column: 20
        },
        end: {
          line: 70,
          column: 23
        }
      },
      "29": {
        start: {
          line: 73,
          column: 16
        },
        end: {
          line: 83,
          column: 17
        }
      },
      "30": {
        start: {
          line: 74,
          column: 43
        },
        end: {
          line: 76,
          column: 22
        }
      },
      "31": {
        start: {
          line: 77,
          column: 20
        },
        end: {
          line: 79,
          column: 23
        }
      },
      "32": {
        start: {
          line: 80,
          column: 20
        },
        end: {
          line: 82,
          column: 23
        }
      },
      "33": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 40
        }
      },
      "34": {
        start: {
          line: 88,
          column: 22
        },
        end: {
          line: 88,
          column: 40
        }
      },
      "35": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 97,
          column: 11
        }
      },
      "36": {
        start: {
          line: 90,
          column: 32
        },
        end: {
          line: 92,
          column: 27
        }
      },
      "37": {
        start: {
          line: 93,
          column: 26
        },
        end: {
          line: 93,
          column: 64
        }
      },
      "38": {
        start: {
          line: 94,
          column: 28
        },
        end: {
          line: 94,
          column: 49
        }
      },
      "39": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 56
        }
      },
      "40": {
        start: {
          line: 95,
          column: 34
        },
        end: {
          line: 95,
          column: 55
        }
      },
      "41": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 46
        }
      },
      "42": {
        start: {
          line: 96,
          column: 36
        },
        end: {
          line: 96,
          column: 45
        }
      },
      "43": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 40
        }
      },
      "44": {
        start: {
          line: 100,
          column: 22
        },
        end: {
          line: 100,
          column: 40
        }
      },
      "45": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 109,
          column: 11
        }
      },
      "46": {
        start: {
          line: 102,
          column: 32
        },
        end: {
          line: 104,
          column: 26
        }
      },
      "47": {
        start: {
          line: 105,
          column: 26
        },
        end: {
          line: 105,
          column: 64
        }
      },
      "48": {
        start: {
          line: 106,
          column: 28
        },
        end: {
          line: 106,
          column: 41
        }
      },
      "49": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 56
        }
      },
      "50": {
        start: {
          line: 107,
          column: 34
        },
        end: {
          line: 107,
          column: 55
        }
      },
      "51": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 68
        }
      },
      "52": {
        start: {
          line: 108,
          column: 36
        },
        end: {
          line: 108,
          column: 67
        }
      },
      "53": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 40
        }
      },
      "54": {
        start: {
          line: 112,
          column: 22
        },
        end: {
          line: 112,
          column: 40
        }
      },
      "55": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 121,
          column: 11
        }
      },
      "56": {
        start: {
          line: 114,
          column: 32
        },
        end: {
          line: 116,
          column: 26
        }
      },
      "57": {
        start: {
          line: 117,
          column: 26
        },
        end: {
          line: 117,
          column: 64
        }
      },
      "58": {
        start: {
          line: 118,
          column: 28
        },
        end: {
          line: 118,
          column: 42
        }
      },
      "59": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 56
        }
      },
      "60": {
        start: {
          line: 119,
          column: 34
        },
        end: {
          line: 119,
          column: 55
        }
      },
      "61": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 66
        }
      },
      "62": {
        start: {
          line: 120,
          column: 36
        },
        end: {
          line: 120,
          column: 65
        }
      },
      "63": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 40
        }
      },
      "64": {
        start: {
          line: 124,
          column: 22
        },
        end: {
          line: 124,
          column: 40
        }
      },
      "65": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 133,
          column: 11
        }
      },
      "66": {
        start: {
          line: 126,
          column: 32
        },
        end: {
          line: 128,
          column: 27
        }
      },
      "67": {
        start: {
          line: 129,
          column: 26
        },
        end: {
          line: 129,
          column: 64
        }
      },
      "68": {
        start: {
          line: 130,
          column: 28
        },
        end: {
          line: 130,
          column: 44
        }
      },
      "69": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 56
        }
      },
      "70": {
        start: {
          line: 131,
          column: 34
        },
        end: {
          line: 131,
          column: 55
        }
      },
      "71": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 132,
          column: 46
        }
      },
      "72": {
        start: {
          line: 132,
          column: 36
        },
        end: {
          line: 132,
          column: 45
        }
      },
      "73": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 136,
          column: 40
        }
      },
      "74": {
        start: {
          line: 136,
          column: 22
        },
        end: {
          line: 136,
          column: 40
        }
      },
      "75": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 145,
          column: 11
        }
      },
      "76": {
        start: {
          line: 138,
          column: 32
        },
        end: {
          line: 140,
          column: 27
        }
      },
      "77": {
        start: {
          line: 141,
          column: 26
        },
        end: {
          line: 141,
          column: 64
        }
      },
      "78": {
        start: {
          line: 142,
          column: 28
        },
        end: {
          line: 142,
          column: 43
        }
      },
      "79": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 56
        }
      },
      "80": {
        start: {
          line: 143,
          column: 34
        },
        end: {
          line: 143,
          column: 55
        }
      },
      "81": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 46
        }
      },
      "82": {
        start: {
          line: 144,
          column: 36
        },
        end: {
          line: 144,
          column: 45
        }
      },
      "83": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 148,
          column: 40
        }
      },
      "84": {
        start: {
          line: 148,
          column: 22
        },
        end: {
          line: 148,
          column: 40
        }
      },
      "85": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 158,
          column: 11
        }
      },
      "86": {
        start: {
          line: 150,
          column: 32
        },
        end: {
          line: 152,
          column: 26
        }
      },
      "87": {
        start: {
          line: 153,
          column: 26
        },
        end: {
          line: 153,
          column: 64
        }
      },
      "88": {
        start: {
          line: 154,
          column: 26
        },
        end: {
          line: 154,
          column: 53
        }
      },
      "89": {
        start: {
          line: 155,
          column: 28
        },
        end: {
          line: 155,
          column: 54
        }
      },
      "90": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 156,
          column: 56
        }
      },
      "91": {
        start: {
          line: 156,
          column: 34
        },
        end: {
          line: 156,
          column: 55
        }
      },
      "92": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 66
        }
      },
      "93": {
        start: {
          line: 157,
          column: 36
        },
        end: {
          line: 157,
          column: 65
        }
      },
      "94": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 40
        }
      },
      "95": {
        start: {
          line: 161,
          column: 22
        },
        end: {
          line: 161,
          column: 40
        }
      },
      "96": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 170,
          column: 11
        }
      },
      "97": {
        start: {
          line: 163,
          column: 32
        },
        end: {
          line: 165,
          column: 27
        }
      },
      "98": {
        start: {
          line: 166,
          column: 26
        },
        end: {
          line: 166,
          column: 64
        }
      },
      "99": {
        start: {
          line: 167,
          column: 28
        },
        end: {
          line: 167,
          column: 44
        }
      },
      "100": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 168,
          column: 56
        }
      },
      "101": {
        start: {
          line: 168,
          column: 34
        },
        end: {
          line: 168,
          column: 55
        }
      },
      "102": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 46
        }
      },
      "103": {
        start: {
          line: 169,
          column: 36
        },
        end: {
          line: 169,
          column: 45
        }
      },
      "104": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 40
        }
      },
      "105": {
        start: {
          line: 173,
          column: 22
        },
        end: {
          line: 173,
          column: 40
        }
      },
      "106": {
        start: {
          line: 174,
          column: 26
        },
        end: {
          line: 174,
          column: 58
        }
      },
      "107": {
        start: {
          line: 175,
          column: 24
        },
        end: {
          line: 184,
          column: 9
        }
      },
      "108": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 193,
          column: 11
        }
      },
      "109": {
        start: {
          line: 186,
          column: 32
        },
        end: {
          line: 188,
          column: 27
        }
      },
      "110": {
        start: {
          line: 189,
          column: 26
        },
        end: {
          line: 189,
          column: 61
        }
      },
      "111": {
        start: {
          line: 190,
          column: 28
        },
        end: {
          line: 190,
          column: 46
        }
      },
      "112": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 56
        }
      },
      "113": {
        start: {
          line: 191,
          column: 34
        },
        end: {
          line: 191,
          column: 55
        }
      },
      "114": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 192,
          column: 55
        }
      },
      "115": {
        start: {
          line: 192,
          column: 36
        },
        end: {
          line: 192,
          column: 54
        }
      },
      "116": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 196,
          column: 40
        }
      },
      "117": {
        start: {
          line: 196,
          column: 22
        },
        end: {
          line: 196,
          column: 40
        }
      },
      "118": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 206,
          column: 11
        }
      },
      "119": {
        start: {
          line: 198,
          column: 32
        },
        end: {
          line: 200,
          column: 26
        }
      },
      "120": {
        start: {
          line: 201,
          column: 26
        },
        end: {
          line: 201,
          column: 61
        }
      },
      "121": {
        start: {
          line: 202,
          column: 26
        },
        end: {
          line: 202,
          column: 53
        }
      },
      "122": {
        start: {
          line: 203,
          column: 28
        },
        end: {
          line: 203,
          column: 54
        }
      },
      "123": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 204,
          column: 56
        }
      },
      "124": {
        start: {
          line: 204,
          column: 34
        },
        end: {
          line: 204,
          column: 55
        }
      },
      "125": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 205,
          column: 66
        }
      },
      "126": {
        start: {
          line: 205,
          column: 36
        },
        end: {
          line: 205,
          column: 65
        }
      },
      "127": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 209,
          column: 40
        }
      },
      "128": {
        start: {
          line: 209,
          column: 22
        },
        end: {
          line: 209,
          column: 40
        }
      },
      "129": {
        start: {
          line: 210,
          column: 22
        },
        end: {
          line: 215,
          column: 9
        }
      },
      "130": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 224,
          column: 11
        }
      },
      "131": {
        start: {
          line: 217,
          column: 32
        },
        end: {
          line: 219,
          column: 27
        }
      },
      "132": {
        start: {
          line: 220,
          column: 26
        },
        end: {
          line: 220,
          column: 62
        }
      },
      "133": {
        start: {
          line: 221,
          column: 28
        },
        end: {
          line: 221,
          column: 44
        }
      },
      "134": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 222,
          column: 56
        }
      },
      "135": {
        start: {
          line: 222,
          column: 34
        },
        end: {
          line: 222,
          column: 55
        }
      },
      "136": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 223,
          column: 46
        }
      },
      "137": {
        start: {
          line: 223,
          column: 36
        },
        end: {
          line: 223,
          column: 45
        }
      },
      "138": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 227,
          column: 40
        }
      },
      "139": {
        start: {
          line: 227,
          column: 22
        },
        end: {
          line: 227,
          column: 40
        }
      },
      "140": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 242,
          column: 11
        }
      },
      "141": {
        start: {
          line: 229,
          column: 32
        },
        end: {
          line: 231,
          column: 26
        }
      },
      "142": {
        start: {
          line: 232,
          column: 26
        },
        end: {
          line: 232,
          column: 62
        }
      },
      "143": {
        start: {
          line: 233,
          column: 26
        },
        end: {
          line: 233,
          column: 53
        }
      },
      "144": {
        start: {
          line: 234,
          column: 28
        },
        end: {
          line: 234,
          column: 54
        }
      },
      "145": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 235,
          column: 56
        }
      },
      "146": {
        start: {
          line: 235,
          column: 34
        },
        end: {
          line: 235,
          column: 55
        }
      },
      "147": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 241,
          column: 14
        }
      },
      "148": {
        start: {
          line: 237,
          column: 32
        },
        end: {
          line: 237,
          column: 52
        }
      },
      "149": {
        start: {
          line: 239,
          column: 16
        },
        end: {
          line: 239,
          column: 104
        }
      },
      "150": {
        start: {
          line: 239,
          column: 37
        },
        end: {
          line: 239,
          column: 102
        }
      },
      "151": {
        start: {
          line: 240,
          column: 16
        },
        end: {
          line: 240,
          column: 33
        }
      },
      "152": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 245,
          column: 40
        }
      },
      "153": {
        start: {
          line: 245,
          column: 22
        },
        end: {
          line: 245,
          column: 40
        }
      },
      "154": {
        start: {
          line: 246,
          column: 20
        },
        end: {
          line: 246,
          column: 44
        }
      },
      "155": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 267,
          column: 11
        }
      },
      "156": {
        start: {
          line: 248,
          column: 32
        },
        end: {
          line: 250,
          column: 27
        }
      },
      "157": {
        start: {
          line: 251,
          column: 26
        },
        end: {
          line: 251,
          column: 64
        }
      },
      "158": {
        start: {
          line: 252,
          column: 26
        },
        end: {
          line: 252,
          column: 50
        }
      },
      "159": {
        start: {
          line: 253,
          column: 28
        },
        end: {
          line: 253,
          column: 46
        }
      },
      "160": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 254,
          column: 56
        }
      },
      "161": {
        start: {
          line: 254,
          column: 34
        },
        end: {
          line: 254,
          column: 55
        }
      },
      "162": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 266,
          column: 14
        }
      },
      "163": {
        start: {
          line: 256,
          column: 31
        },
        end: {
          line: 256,
          column: 50
        }
      },
      "164": {
        start: {
          line: 257,
          column: 16
        },
        end: {
          line: 265,
          column: 17
        }
      },
      "165": {
        start: {
          line: 258,
          column: 33
        },
        end: {
          line: 258,
          column: 45
        }
      },
      "166": {
        start: {
          line: 259,
          column: 20
        },
        end: {
          line: 261,
          column: 21
        }
      },
      "167": {
        start: {
          line: 260,
          column: 24
        },
        end: {
          line: 260,
          column: 40
        }
      },
      "168": {
        start: {
          line: 262,
          column: 20
        },
        end: {
          line: 262,
          column: 38
        }
      },
      "169": {
        start: {
          line: 264,
          column: 20
        },
        end: {
          line: 264,
          column: 30
        }
      },
      "170": {
        start: {
          line: 271,
          column: 28
        },
        end: {
          line: 271,
          column: 48
        }
      },
      "171": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 272,
          column: 53
        }
      },
      "172": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 281,
          column: 9
        }
      },
      "173": {
        start: {
          line: 276,
          column: 29
        },
        end: {
          line: 276,
          column: 63
        }
      },
      "174": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 280,
          column: 14
        }
      },
      "175": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 285,
          column: 10
        }
      },
      "176": {
        start: {
          line: 289,
          column: 8
        },
        end: {
          line: 289,
          column: 39
        }
      },
      "177": {
        start: {
          line: 291,
          column: 28
        },
        end: {
          line: 291,
          column: 58
        }
      },
      "178": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 305,
          column: 9
        }
      },
      "179": {
        start: {
          line: 293,
          column: 29
        },
        end: {
          line: 293,
          column: 79
        }
      },
      "180": {
        start: {
          line: 294,
          column: 12
        },
        end: {
          line: 304,
          column: 13
        }
      },
      "181": {
        start: {
          line: 295,
          column: 16
        },
        end: {
          line: 295,
          column: 105
        }
      },
      "182": {
        start: {
          line: 295,
          column: 38
        },
        end: {
          line: 295,
          column: 103
        }
      },
      "183": {
        start: {
          line: 296,
          column: 33
        },
        end: {
          line: 296,
          column: 51
        }
      },
      "184": {
        start: {
          line: 297,
          column: 36
        },
        end: {
          line: 299,
          column: 31
        }
      },
      "185": {
        start: {
          line: 300,
          column: 30
        },
        end: {
          line: 300,
          column: 65
        }
      },
      "186": {
        start: {
          line: 301,
          column: 16
        },
        end: {
          line: 303,
          column: 17
        }
      },
      "187": {
        start: {
          line: 302,
          column: 20
        },
        end: {
          line: 302,
          column: 45
        }
      },
      "188": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 308,
          column: 23
        }
      },
      "189": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 309,
          column: 48
        }
      },
      "190": {
        start: {
          line: 310,
          column: 8
        },
        end: {
          line: 310,
          column: 25
        }
      },
      "191": {
        start: {
          line: 315,
          column: 8
        },
        end: {
          line: 315,
          column: 23
        }
      },
      "192": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 316,
          column: 29
        }
      },
      "193": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 317,
          column: 31
        }
      },
      "194": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 318,
          column: 37
        }
      },
      "195": {
        start: {
          line: 321,
          column: 8
        },
        end: {
          line: 337,
          column: 11
        }
      },
      "196": {
        start: {
          line: 322,
          column: 28
        },
        end: {
          line: 322,
          column: 69
        }
      },
      "197": {
        start: {
          line: 323,
          column: 12
        },
        end: {
          line: 323,
          column: 56
        }
      },
      "198": {
        start: {
          line: 323,
          column: 34
        },
        end: {
          line: 323,
          column: 55
        }
      },
      "199": {
        start: {
          line: 324,
          column: 12
        },
        end: {
          line: 327,
          column: 14
        }
      },
      "200": {
        start: {
          line: 325,
          column: 16
        },
        end: {
          line: 325,
          column: 41
        }
      },
      "201": {
        start: {
          line: 326,
          column: 16
        },
        end: {
          line: 326,
          column: 26
        }
      },
      "202": {
        start: {
          line: 328,
          column: 12
        },
        end: {
          line: 336,
          column: 14
        }
      },
      "203": {
        start: {
          line: 329,
          column: 27
        },
        end: {
          line: 329,
          column: 46
        }
      },
      "204": {
        start: {
          line: 331,
          column: 16
        },
        end: {
          line: 335,
          column: 17
        }
      },
      "205": {
        start: {
          line: 332,
          column: 20
        },
        end: {
          line: 334,
          column: 23
        }
      },
      "206": {
        start: {
          line: 340,
          column: 8
        },
        end: {
          line: 340,
          column: 40
        }
      },
      "207": {
        start: {
          line: 340,
          column: 22
        },
        end: {
          line: 340,
          column: 40
        }
      },
      "208": {
        start: {
          line: 341,
          column: 8
        },
        end: {
          line: 355,
          column: 11
        }
      },
      "209": {
        start: {
          line: 342,
          column: 32
        },
        end: {
          line: 344,
          column: 27
        }
      },
      "210": {
        start: {
          line: 345,
          column: 26
        },
        end: {
          line: 345,
          column: 60
        }
      },
      "211": {
        start: {
          line: 346,
          column: 28
        },
        end: {
          line: 346,
          column: 43
        }
      },
      "212": {
        start: {
          line: 347,
          column: 12
        },
        end: {
          line: 353,
          column: 14
        }
      },
      "213": {
        start: {
          line: 348,
          column: 16
        },
        end: {
          line: 352,
          column: 17
        }
      },
      "214": {
        start: {
          line: 349,
          column: 20
        },
        end: {
          line: 349,
          column: 64
        }
      },
      "215": {
        start: {
          line: 351,
          column: 20
        },
        end: {
          line: 351,
          column: 42
        }
      },
      "216": {
        start: {
          line: 354,
          column: 12
        },
        end: {
          line: 354,
          column: 71
        }
      },
      "217": {
        start: {
          line: 354,
          column: 36
        },
        end: {
          line: 354,
          column: 70
        }
      },
      "218": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 358,
          column: 40
        }
      },
      "219": {
        start: {
          line: 358,
          column: 22
        },
        end: {
          line: 358,
          column: 40
        }
      },
      "220": {
        start: {
          line: 359,
          column: 8
        },
        end: {
          line: 386,
          column: 11
        }
      },
      "221": {
        start: {
          line: 360,
          column: 32
        },
        end: {
          line: 362,
          column: 26
        }
      },
      "222": {
        start: {
          line: 363,
          column: 26
        },
        end: {
          line: 363,
          column: 60
        }
      },
      "223": {
        start: {
          line: 364,
          column: 28
        },
        end: {
          line: 364,
          column: 42
        }
      },
      "224": {
        start: {
          line: 365,
          column: 12
        },
        end: {
          line: 365,
          column: 56
        }
      },
      "225": {
        start: {
          line: 365,
          column: 34
        },
        end: {
          line: 365,
          column: 55
        }
      },
      "226": {
        start: {
          line: 366,
          column: 12
        },
        end: {
          line: 385,
          column: 14
        }
      },
      "227": {
        start: {
          line: 367,
          column: 31
        },
        end: {
          line: 367,
          column: 45
        }
      },
      "228": {
        start: {
          line: 369,
          column: 16
        },
        end: {
          line: 373,
          column: 17
        }
      },
      "229": {
        start: {
          line: 370,
          column: 20
        },
        end: {
          line: 370,
          column: 48
        }
      },
      "230": {
        start: {
          line: 371,
          column: 20
        },
        end: {
          line: 371,
          column: 34
        }
      },
      "231": {
        start: {
          line: 372,
          column: 20
        },
        end: {
          line: 372,
          column: 27
        }
      },
      "232": {
        start: {
          line: 375,
          column: 16
        },
        end: {
          line: 383,
          column: 17
        }
      },
      "233": {
        start: {
          line: 376,
          column: 38
        },
        end: {
          line: 376,
          column: 65
        }
      },
      "234": {
        start: {
          line: 377,
          column: 48
        },
        end: {
          line: 377,
          column: 72
        }
      },
      "235": {
        start: {
          line: 378,
          column: 42
        },
        end: {
          line: 378,
          column: 119
        }
      },
      "236": {
        start: {
          line: 378,
          column: 75
        },
        end: {
          line: 378,
          column: 118
        }
      },
      "237": {
        start: {
          line: 378,
          column: 98
        },
        end: {
          line: 378,
          column: 117
        }
      },
      "238": {
        start: {
          line: 379,
          column: 20
        },
        end: {
          line: 382,
          column: 21
        }
      },
      "239": {
        start: {
          line: 380,
          column: 24
        },
        end: {
          line: 380,
          column: 59
        }
      },
      "240": {
        start: {
          line: 381,
          column: 24
        },
        end: {
          line: 381,
          column: 31
        }
      },
      "241": {
        start: {
          line: 384,
          column: 16
        },
        end: {
          line: 384,
          column: 40
        }
      },
      "242": {
        start: {
          line: 389,
          column: 8
        },
        end: {
          line: 389,
          column: 40
        }
      },
      "243": {
        start: {
          line: 389,
          column: 22
        },
        end: {
          line: 389,
          column: 40
        }
      },
      "244": {
        start: {
          line: 390,
          column: 8
        },
        end: {
          line: 398,
          column: 11
        }
      },
      "245": {
        start: {
          line: 391,
          column: 32
        },
        end: {
          line: 393,
          column: 27
        }
      },
      "246": {
        start: {
          line: 394,
          column: 26
        },
        end: {
          line: 394,
          column: 60
        }
      },
      "247": {
        start: {
          line: 395,
          column: 28
        },
        end: {
          line: 395,
          column: 45
        }
      },
      "248": {
        start: {
          line: 396,
          column: 12
        },
        end: {
          line: 396,
          column: 56
        }
      },
      "249": {
        start: {
          line: 396,
          column: 34
        },
        end: {
          line: 396,
          column: 55
        }
      },
      "250": {
        start: {
          line: 397,
          column: 12
        },
        end: {
          line: 397,
          column: 46
        }
      },
      "251": {
        start: {
          line: 397,
          column: 36
        },
        end: {
          line: 397,
          column: 45
        }
      },
      "252": {
        start: {
          line: 401,
          column: 24
        },
        end: {
          line: 401,
          column: 26
        }
      },
      "253": {
        start: {
          line: 402,
          column: 8
        },
        end: {
          line: 409,
          column: 9
        }
      },
      "254": {
        start: {
          line: 403,
          column: 12
        },
        end: {
          line: 408,
          column: 13
        }
      },
      "255": {
        start: {
          line: 404,
          column: 31
        },
        end: {
          line: 404,
          column: 64
        }
      },
      "256": {
        start: {
          line: 405,
          column: 16
        },
        end: {
          line: 405,
          column: 37
        }
      },
      "257": {
        start: {
          line: 407,
          column: 16
        },
        end: {
          line: 407,
          column: 38
        }
      },
      "258": {
        start: {
          line: 410,
          column: 8
        },
        end: {
          line: 410,
          column: 23
        }
      },
      "259": {
        start: {
          line: 414,
          column: 30
        },
        end: {
          line: 418,
          column: 9
        }
      },
      "260": {
        start: {
          line: 419,
          column: 8
        },
        end: {
          line: 419,
          column: 52
        }
      },
      "261": {
        start: {
          line: 422,
          column: 26
        },
        end: {
          line: 422,
          column: 51
        }
      },
      "262": {
        start: {
          line: 424,
          column: 0
        },
        end: {
          line: 424,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 22
          },
          end: {
            line: 12,
            column: 23
          }
        },
        loc: {
          start: {
            line: 12,
            column: 33
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 23
          },
          end: {
            line: 15,
            column: 24
          }
        },
        loc: {
          start: {
            line: 15,
            column: 34
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 17
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 20
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 27
          },
          end: {
            line: 21,
            column: 28
          }
        },
        loc: {
          start: {
            line: 21,
            column: 46
          },
          end: {
            line: 85,
            column: 9
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 23,
            column: 30
          },
          end: {
            line: 23,
            column: 31
          }
        },
        loc: {
          start: {
            line: 23,
            column: 34
          },
          end: {
            line: 23,
            column: 55
          }
        },
        line: 23
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 24,
            column: 32
          },
          end: {
            line: 24,
            column: 33
          }
        },
        loc: {
          start: {
            line: 24,
            column: 36
          },
          end: {
            line: 27,
            column: 13
          }
        },
        line: 24
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 28,
            column: 38
          },
          end: {
            line: 28,
            column: 39
          }
        },
        loc: {
          start: {
            line: 28,
            column: 47
          },
          end: {
            line: 84,
            column: 13
          }
        },
        line: 28
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        },
        loc: {
          start: {
            line: 87,
            column: 38
          },
          end: {
            line: 98,
            column: 5
          }
        },
        line: 87
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 89,
            column: 27
          },
          end: {
            line: 89,
            column: 28
          }
        },
        loc: {
          start: {
            line: 89,
            column: 46
          },
          end: {
            line: 97,
            column: 9
          }
        },
        line: 89
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 95,
            column: 30
          },
          end: {
            line: 95,
            column: 31
          }
        },
        loc: {
          start: {
            line: 95,
            column: 34
          },
          end: {
            line: 95,
            column: 55
          }
        },
        line: 95
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 96,
            column: 32
          },
          end: {
            line: 96,
            column: 33
          }
        },
        loc: {
          start: {
            line: 96,
            column: 36
          },
          end: {
            line: 96,
            column: 45
          }
        },
        line: 96
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 99,
            column: 5
          }
        },
        loc: {
          start: {
            line: 99,
            column: 28
          },
          end: {
            line: 110,
            column: 5
          }
        },
        line: 99
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 101,
            column: 27
          },
          end: {
            line: 101,
            column: 28
          }
        },
        loc: {
          start: {
            line: 101,
            column: 46
          },
          end: {
            line: 109,
            column: 9
          }
        },
        line: 101
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 107,
            column: 30
          },
          end: {
            line: 107,
            column: 31
          }
        },
        loc: {
          start: {
            line: 107,
            column: 34
          },
          end: {
            line: 107,
            column: 55
          }
        },
        line: 107
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 108,
            column: 32
          },
          end: {
            line: 108,
            column: 33
          }
        },
        loc: {
          start: {
            line: 108,
            column: 36
          },
          end: {
            line: 108,
            column: 67
          }
        },
        line: 108
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        },
        loc: {
          start: {
            line: 111,
            column: 30
          },
          end: {
            line: 122,
            column: 5
          }
        },
        line: 111
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 113,
            column: 27
          },
          end: {
            line: 113,
            column: 28
          }
        },
        loc: {
          start: {
            line: 113,
            column: 46
          },
          end: {
            line: 121,
            column: 9
          }
        },
        line: 113
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 119,
            column: 30
          },
          end: {
            line: 119,
            column: 31
          }
        },
        loc: {
          start: {
            line: 119,
            column: 34
          },
          end: {
            line: 119,
            column: 55
          }
        },
        line: 119
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 120,
            column: 32
          },
          end: {
            line: 120,
            column: 33
          }
        },
        loc: {
          start: {
            line: 120,
            column: 36
          },
          end: {
            line: 120,
            column: 65
          }
        },
        line: 120
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 123,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        },
        loc: {
          start: {
            line: 123,
            column: 31
          },
          end: {
            line: 134,
            column: 5
          }
        },
        line: 123
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 125,
            column: 27
          },
          end: {
            line: 125,
            column: 28
          }
        },
        loc: {
          start: {
            line: 125,
            column: 46
          },
          end: {
            line: 133,
            column: 9
          }
        },
        line: 125
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 131,
            column: 30
          },
          end: {
            line: 131,
            column: 31
          }
        },
        loc: {
          start: {
            line: 131,
            column: 34
          },
          end: {
            line: 131,
            column: 55
          }
        },
        line: 131
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 132,
            column: 32
          },
          end: {
            line: 132,
            column: 33
          }
        },
        loc: {
          start: {
            line: 132,
            column: 36
          },
          end: {
            line: 132,
            column: 45
          }
        },
        line: 132
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 135,
            column: 4
          },
          end: {
            line: 135,
            column: 5
          }
        },
        loc: {
          start: {
            line: 135,
            column: 32
          },
          end: {
            line: 146,
            column: 5
          }
        },
        line: 135
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 137,
            column: 27
          },
          end: {
            line: 137,
            column: 28
          }
        },
        loc: {
          start: {
            line: 137,
            column: 46
          },
          end: {
            line: 145,
            column: 9
          }
        },
        line: 137
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 143,
            column: 30
          },
          end: {
            line: 143,
            column: 31
          }
        },
        loc: {
          start: {
            line: 143,
            column: 34
          },
          end: {
            line: 143,
            column: 55
          }
        },
        line: 143
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 144,
            column: 32
          },
          end: {
            line: 144,
            column: 33
          }
        },
        loc: {
          start: {
            line: 144,
            column: 36
          },
          end: {
            line: 144,
            column: 45
          }
        },
        line: 144
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 147,
            column: 4
          },
          end: {
            line: 147,
            column: 5
          }
        },
        loc: {
          start: {
            line: 147,
            column: 52
          },
          end: {
            line: 159,
            column: 5
          }
        },
        line: 147
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 149,
            column: 27
          },
          end: {
            line: 149,
            column: 28
          }
        },
        loc: {
          start: {
            line: 149,
            column: 46
          },
          end: {
            line: 158,
            column: 9
          }
        },
        line: 149
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 156,
            column: 30
          },
          end: {
            line: 156,
            column: 31
          }
        },
        loc: {
          start: {
            line: 156,
            column: 34
          },
          end: {
            line: 156,
            column: 55
          }
        },
        line: 156
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 157,
            column: 32
          },
          end: {
            line: 157,
            column: 33
          }
        },
        loc: {
          start: {
            line: 157,
            column: 36
          },
          end: {
            line: 157,
            column: 65
          }
        },
        line: 157
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 160,
            column: 4
          },
          end: {
            line: 160,
            column: 5
          }
        },
        loc: {
          start: {
            line: 160,
            column: 31
          },
          end: {
            line: 171,
            column: 5
          }
        },
        line: 160
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 162,
            column: 27
          },
          end: {
            line: 162,
            column: 28
          }
        },
        loc: {
          start: {
            line: 162,
            column: 46
          },
          end: {
            line: 170,
            column: 9
          }
        },
        line: 162
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 168,
            column: 30
          },
          end: {
            line: 168,
            column: 31
          }
        },
        loc: {
          start: {
            line: 168,
            column: 34
          },
          end: {
            line: 168,
            column: 55
          }
        },
        line: 168
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 169,
            column: 32
          },
          end: {
            line: 169,
            column: 33
          }
        },
        loc: {
          start: {
            line: 169,
            column: 36
          },
          end: {
            line: 169,
            column: 45
          }
        },
        line: 169
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 172,
            column: 4
          },
          end: {
            line: 172,
            column: 5
          }
        },
        loc: {
          start: {
            line: 172,
            column: 51
          },
          end: {
            line: 194,
            column: 5
          }
        },
        line: 172
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 185,
            column: 27
          },
          end: {
            line: 185,
            column: 28
          }
        },
        loc: {
          start: {
            line: 185,
            column: 46
          },
          end: {
            line: 193,
            column: 9
          }
        },
        line: 185
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 191,
            column: 30
          },
          end: {
            line: 191,
            column: 31
          }
        },
        loc: {
          start: {
            line: 191,
            column: 34
          },
          end: {
            line: 191,
            column: 55
          }
        },
        line: 191
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 192,
            column: 32
          },
          end: {
            line: 192,
            column: 33
          }
        },
        loc: {
          start: {
            line: 192,
            column: 36
          },
          end: {
            line: 192,
            column: 54
          }
        },
        line: 192
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 195,
            column: 4
          },
          end: {
            line: 195,
            column: 5
          }
        },
        loc: {
          start: {
            line: 195,
            column: 49
          },
          end: {
            line: 207,
            column: 5
          }
        },
        line: 195
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 197,
            column: 27
          },
          end: {
            line: 197,
            column: 28
          }
        },
        loc: {
          start: {
            line: 197,
            column: 46
          },
          end: {
            line: 206,
            column: 9
          }
        },
        line: 197
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 204,
            column: 30
          },
          end: {
            line: 204,
            column: 31
          }
        },
        loc: {
          start: {
            line: 204,
            column: 34
          },
          end: {
            line: 204,
            column: 55
          }
        },
        line: 204
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 205,
            column: 32
          },
          end: {
            line: 205,
            column: 33
          }
        },
        loc: {
          start: {
            line: 205,
            column: 36
          },
          end: {
            line: 205,
            column: 65
          }
        },
        line: 205
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 208,
            column: 4
          },
          end: {
            line: 208,
            column: 5
          }
        },
        loc: {
          start: {
            line: 208,
            column: 50
          },
          end: {
            line: 225,
            column: 5
          }
        },
        line: 208
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 216,
            column: 27
          },
          end: {
            line: 216,
            column: 28
          }
        },
        loc: {
          start: {
            line: 216,
            column: 46
          },
          end: {
            line: 224,
            column: 9
          }
        },
        line: 216
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 222,
            column: 30
          },
          end: {
            line: 222,
            column: 31
          }
        },
        loc: {
          start: {
            line: 222,
            column: 34
          },
          end: {
            line: 222,
            column: 55
          }
        },
        line: 222
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 223,
            column: 32
          },
          end: {
            line: 223,
            column: 33
          }
        },
        loc: {
          start: {
            line: 223,
            column: 36
          },
          end: {
            line: 223,
            column: 45
          }
        },
        line: 223
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 226,
            column: 4
          },
          end: {
            line: 226,
            column: 5
          }
        },
        loc: {
          start: {
            line: 226,
            column: 50
          },
          end: {
            line: 243,
            column: 5
          }
        },
        line: 226
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 228,
            column: 27
          },
          end: {
            line: 228,
            column: 28
          }
        },
        loc: {
          start: {
            line: 228,
            column: 46
          },
          end: {
            line: 242,
            column: 9
          }
        },
        line: 228
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 235,
            column: 30
          },
          end: {
            line: 235,
            column: 31
          }
        },
        loc: {
          start: {
            line: 235,
            column: 34
          },
          end: {
            line: 235,
            column: 55
          }
        },
        line: 235
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 236,
            column: 32
          },
          end: {
            line: 236,
            column: 33
          }
        },
        loc: {
          start: {
            line: 236,
            column: 36
          },
          end: {
            line: 241,
            column: 13
          }
        },
        line: 236
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 239,
            column: 29
          },
          end: {
            line: 239,
            column: 30
          }
        },
        loc: {
          start: {
            line: 239,
            column: 37
          },
          end: {
            line: 239,
            column: 102
          }
        },
        line: 239
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 244,
            column: 4
          },
          end: {
            line: 244,
            column: 5
          }
        },
        loc: {
          start: {
            line: 244,
            column: 30
          },
          end: {
            line: 268,
            column: 5
          }
        },
        line: 244
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 247,
            column: 27
          },
          end: {
            line: 247,
            column: 28
          }
        },
        loc: {
          start: {
            line: 247,
            column: 46
          },
          end: {
            line: 267,
            column: 9
          }
        },
        line: 247
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 254,
            column: 30
          },
          end: {
            line: 254,
            column: 31
          }
        },
        loc: {
          start: {
            line: 254,
            column: 34
          },
          end: {
            line: 254,
            column: 55
          }
        },
        line: 254
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 255,
            column: 32
          },
          end: {
            line: 255,
            column: 33
          }
        },
        loc: {
          start: {
            line: 255,
            column: 41
          },
          end: {
            line: 266,
            column: 13
          }
        },
        line: 255
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 269,
            column: 4
          },
          end: {
            line: 269,
            column: 5
          }
        },
        loc: {
          start: {
            line: 269,
            column: 31
          },
          end: {
            line: 273,
            column: 5
          }
        },
        line: 269
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 274,
            column: 4
          },
          end: {
            line: 274,
            column: 5
          }
        },
        loc: {
          start: {
            line: 274,
            column: 28
          },
          end: {
            line: 286,
            column: 5
          }
        },
        line: 274
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 287,
            column: 4
          },
          end: {
            line: 287,
            column: 5
          }
        },
        loc: {
          start: {
            line: 287,
            column: 20
          },
          end: {
            line: 306,
            column: 5
          }
        },
        line: 287
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 295,
            column: 30
          },
          end: {
            line: 295,
            column: 31
          }
        },
        loc: {
          start: {
            line: 295,
            column: 38
          },
          end: {
            line: 295,
            column: 103
          }
        },
        line: 295
      },
      "61": {
        name: "(anonymous_61)",
        decl: {
          start: {
            line: 307,
            column: 4
          },
          end: {
            line: 307,
            column: 5
          }
        },
        loc: {
          start: {
            line: 307,
            column: 17
          },
          end: {
            line: 311,
            column: 5
          }
        },
        line: 307
      },
      "62": {
        name: "(anonymous_62)",
        decl: {
          start: {
            line: 314,
            column: 4
          },
          end: {
            line: 314,
            column: 5
          }
        },
        loc: {
          start: {
            line: 314,
            column: 41
          },
          end: {
            line: 319,
            column: 5
          }
        },
        line: 314
      },
      "63": {
        name: "(anonymous_63)",
        decl: {
          start: {
            line: 320,
            column: 4
          },
          end: {
            line: 320,
            column: 5
          }
        },
        loc: {
          start: {
            line: 320,
            column: 17
          },
          end: {
            line: 338,
            column: 5
          }
        },
        line: 320
      },
      "64": {
        name: "(anonymous_64)",
        decl: {
          start: {
            line: 321,
            column: 27
          },
          end: {
            line: 321,
            column: 28
          }
        },
        loc: {
          start: {
            line: 321,
            column: 46
          },
          end: {
            line: 337,
            column: 9
          }
        },
        line: 321
      },
      "65": {
        name: "(anonymous_65)",
        decl: {
          start: {
            line: 323,
            column: 30
          },
          end: {
            line: 323,
            column: 31
          }
        },
        loc: {
          start: {
            line: 323,
            column: 34
          },
          end: {
            line: 323,
            column: 55
          }
        },
        line: 323
      },
      "66": {
        name: "(anonymous_66)",
        decl: {
          start: {
            line: 324,
            column: 32
          },
          end: {
            line: 324,
            column: 33
          }
        },
        loc: {
          start: {
            line: 324,
            column: 36
          },
          end: {
            line: 327,
            column: 13
          }
        },
        line: 324
      },
      "67": {
        name: "(anonymous_67)",
        decl: {
          start: {
            line: 328,
            column: 38
          },
          end: {
            line: 328,
            column: 39
          }
        },
        loc: {
          start: {
            line: 328,
            column: 47
          },
          end: {
            line: 336,
            column: 13
          }
        },
        line: 328
      },
      "68": {
        name: "(anonymous_68)",
        decl: {
          start: {
            line: 339,
            column: 4
          },
          end: {
            line: 339,
            column: 5
          }
        },
        loc: {
          start: {
            line: 339,
            column: 33
          },
          end: {
            line: 356,
            column: 5
          }
        },
        line: 339
      },
      "69": {
        name: "(anonymous_69)",
        decl: {
          start: {
            line: 341,
            column: 27
          },
          end: {
            line: 341,
            column: 28
          }
        },
        loc: {
          start: {
            line: 341,
            column: 46
          },
          end: {
            line: 355,
            column: 9
          }
        },
        line: 341
      },
      "70": {
        name: "(anonymous_70)",
        decl: {
          start: {
            line: 347,
            column: 30
          },
          end: {
            line: 347,
            column: 31
          }
        },
        loc: {
          start: {
            line: 347,
            column: 34
          },
          end: {
            line: 353,
            column: 13
          }
        },
        line: 347
      },
      "71": {
        name: "(anonymous_71)",
        decl: {
          start: {
            line: 354,
            column: 32
          },
          end: {
            line: 354,
            column: 33
          }
        },
        loc: {
          start: {
            line: 354,
            column: 36
          },
          end: {
            line: 354,
            column: 70
          }
        },
        line: 354
      },
      "72": {
        name: "(anonymous_72)",
        decl: {
          start: {
            line: 357,
            column: 4
          },
          end: {
            line: 357,
            column: 5
          }
        },
        loc: {
          start: {
            line: 357,
            column: 39
          },
          end: {
            line: 387,
            column: 5
          }
        },
        line: 357
      },
      "73": {
        name: "(anonymous_73)",
        decl: {
          start: {
            line: 359,
            column: 27
          },
          end: {
            line: 359,
            column: 28
          }
        },
        loc: {
          start: {
            line: 359,
            column: 46
          },
          end: {
            line: 386,
            column: 9
          }
        },
        line: 359
      },
      "74": {
        name: "(anonymous_74)",
        decl: {
          start: {
            line: 365,
            column: 30
          },
          end: {
            line: 365,
            column: 31
          }
        },
        loc: {
          start: {
            line: 365,
            column: 34
          },
          end: {
            line: 365,
            column: 55
          }
        },
        line: 365
      },
      "75": {
        name: "(anonymous_75)",
        decl: {
          start: {
            line: 366,
            column: 32
          },
          end: {
            line: 366,
            column: 33
          }
        },
        loc: {
          start: {
            line: 366,
            column: 36
          },
          end: {
            line: 385,
            column: 13
          }
        },
        line: 366
      },
      "76": {
        name: "(anonymous_76)",
        decl: {
          start: {
            line: 378,
            column: 67
          },
          end: {
            line: 378,
            column: 68
          }
        },
        loc: {
          start: {
            line: 378,
            column: 75
          },
          end: {
            line: 378,
            column: 118
          }
        },
        line: 378
      },
      "77": {
        name: "(anonymous_77)",
        decl: {
          start: {
            line: 378,
            column: 90
          },
          end: {
            line: 378,
            column: 91
          }
        },
        loc: {
          start: {
            line: 378,
            column: 98
          },
          end: {
            line: 378,
            column: 117
          }
        },
        line: 378
      },
      "78": {
        name: "(anonymous_78)",
        decl: {
          start: {
            line: 388,
            column: 4
          },
          end: {
            line: 388,
            column: 5
          }
        },
        loc: {
          start: {
            line: 388,
            column: 33
          },
          end: {
            line: 399,
            column: 5
          }
        },
        line: 388
      },
      "79": {
        name: "(anonymous_79)",
        decl: {
          start: {
            line: 390,
            column: 27
          },
          end: {
            line: 390,
            column: 28
          }
        },
        loc: {
          start: {
            line: 390,
            column: 46
          },
          end: {
            line: 398,
            column: 9
          }
        },
        line: 390
      },
      "80": {
        name: "(anonymous_80)",
        decl: {
          start: {
            line: 396,
            column: 30
          },
          end: {
            line: 396,
            column: 31
          }
        },
        loc: {
          start: {
            line: 396,
            column: 34
          },
          end: {
            line: 396,
            column: 55
          }
        },
        line: 396
      },
      "81": {
        name: "(anonymous_81)",
        decl: {
          start: {
            line: 397,
            column: 32
          },
          end: {
            line: 397,
            column: 33
          }
        },
        loc: {
          start: {
            line: 397,
            column: 36
          },
          end: {
            line: 397,
            column: 45
          }
        },
        line: 397
      },
      "82": {
        name: "(anonymous_82)",
        decl: {
          start: {
            line: 400,
            column: 4
          },
          end: {
            line: 400,
            column: 5
          }
        },
        loc: {
          start: {
            line: 400,
            column: 39
          },
          end: {
            line: 411,
            column: 5
          }
        },
        line: 400
      },
      "83": {
        name: "(anonymous_83)",
        decl: {
          start: {
            line: 412,
            column: 4
          },
          end: {
            line: 412,
            column: 5
          }
        },
        loc: {
          start: {
            line: 412,
            column: 39
          },
          end: {
            line: 420,
            column: 5
          }
        },
        line: 412
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 31,
            column: 16
          },
          end: {
            line: 44,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 16
          },
          end: {
            line: 44,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "1": {
        loc: {
          start: {
            line: 46,
            column: 16
          },
          end: {
            line: 59,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 16
          },
          end: {
            line: 59,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "2": {
        loc: {
          start: {
            line: 61,
            column: 16
          },
          end: {
            line: 71,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 16
          },
          end: {
            line: 71,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "3": {
        loc: {
          start: {
            line: 73,
            column: 16
          },
          end: {
            line: 83,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 16
          },
          end: {
            line: 83,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "4": {
        loc: {
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 88,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 88,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "5": {
        loc: {
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 100,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 100,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "6": {
        loc: {
          start: {
            line: 108,
            column: 44
          },
          end: {
            line: 108,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 44
          },
          end: {
            line: 108,
            column: 58
          }
        }, {
          start: {
            line: 108,
            column: 62
          },
          end: {
            line: 108,
            column: 66
          }
        }],
        line: 108
      },
      "7": {
        loc: {
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 112,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 112,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "8": {
        loc: {
          start: {
            line: 120,
            column: 44
          },
          end: {
            line: 120,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 44
          },
          end: {
            line: 120,
            column: 58
          }
        }, {
          start: {
            line: 120,
            column: 62
          },
          end: {
            line: 120,
            column: 64
          }
        }],
        line: 120
      },
      "9": {
        loc: {
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 124,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 124,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "10": {
        loc: {
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 136,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 136,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "11": {
        loc: {
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 148,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 148,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "12": {
        loc: {
          start: {
            line: 157,
            column: 44
          },
          end: {
            line: 157,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 157,
            column: 44
          },
          end: {
            line: 157,
            column: 58
          }
        }, {
          start: {
            line: 157,
            column: 62
          },
          end: {
            line: 157,
            column: 64
          }
        }],
        line: 157
      },
      "13": {
        loc: {
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 161,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 161,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "14": {
        loc: {
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 173,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 173,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "15": {
        loc: {
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 196,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 196,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 196
      },
      "16": {
        loc: {
          start: {
            line: 205,
            column: 44
          },
          end: {
            line: 205,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 205,
            column: 44
          },
          end: {
            line: 205,
            column: 58
          }
        }, {
          start: {
            line: 205,
            column: 62
          },
          end: {
            line: 205,
            column: 64
          }
        }],
        line: 205
      },
      "17": {
        loc: {
          start: {
            line: 209,
            column: 8
          },
          end: {
            line: 209,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 8
          },
          end: {
            line: 209,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 209
      },
      "18": {
        loc: {
          start: {
            line: 227,
            column: 8
          },
          end: {
            line: 227,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 227,
            column: 8
          },
          end: {
            line: 227,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 227
      },
      "19": {
        loc: {
          start: {
            line: 237,
            column: 32
          },
          end: {
            line: 237,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 237,
            column: 32
          },
          end: {
            line: 237,
            column: 46
          }
        }, {
          start: {
            line: 237,
            column: 50
          },
          end: {
            line: 237,
            column: 52
          }
        }],
        line: 237
      },
      "20": {
        loc: {
          start: {
            line: 245,
            column: 8
          },
          end: {
            line: 245,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 245,
            column: 8
          },
          end: {
            line: 245,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 245
      },
      "21": {
        loc: {
          start: {
            line: 257,
            column: 16
          },
          end: {
            line: 265,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 257,
            column: 16
          },
          end: {
            line: 265,
            column: 17
          }
        }, {
          start: {
            line: 263,
            column: 23
          },
          end: {
            line: 265,
            column: 17
          }
        }],
        line: 257
      },
      "22": {
        loc: {
          start: {
            line: 259,
            column: 20
          },
          end: {
            line: 261,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 259,
            column: 20
          },
          end: {
            line: 261,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 259
      },
      "23": {
        loc: {
          start: {
            line: 259,
            column: 24
          },
          end: {
            line: 259,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 259,
            column: 24
          },
          end: {
            line: 259,
            column: 38
          }
        }, {
          start: {
            line: 259,
            column: 42
          },
          end: {
            line: 259,
            column: 62
          }
        }],
        line: 259
      },
      "24": {
        loc: {
          start: {
            line: 275,
            column: 8
          },
          end: {
            line: 281,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 275,
            column: 8
          },
          end: {
            line: 281,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 275
      },
      "25": {
        loc: {
          start: {
            line: 275,
            column: 12
          },
          end: {
            line: 275,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 275,
            column: 12
          },
          end: {
            line: 275,
            column: 34
          }
        }, {
          start: {
            line: 275,
            column: 38
          },
          end: {
            line: 275,
            column: 69
          }
        }],
        line: 275
      },
      "26": {
        loc: {
          start: {
            line: 278,
            column: 22
          },
          end: {
            line: 278,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 278,
            column: 22
          },
          end: {
            line: 278,
            column: 36
          }
        }, {
          start: {
            line: 278,
            column: 40
          },
          end: {
            line: 278,
            column: 41
          }
        }],
        line: 278
      },
      "27": {
        loc: {
          start: {
            line: 279,
            column: 23
          },
          end: {
            line: 279,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 279,
            column: 23
          },
          end: {
            line: 279,
            column: 37
          }
        }, {
          start: {
            line: 279,
            column: 41
          },
          end: {
            line: 279,
            column: 42
          }
        }],
        line: 279
      },
      "28": {
        loc: {
          start: {
            line: 294,
            column: 12
          },
          end: {
            line: 304,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 294,
            column: 12
          },
          end: {
            line: 304,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 294
      },
      "29": {
        loc: {
          start: {
            line: 318,
            column: 23
          },
          end: {
            line: 318,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 318,
            column: 23
          },
          end: {
            line: 318,
            column: 30
          }
        }, {
          start: {
            line: 318,
            column: 34
          },
          end: {
            line: 318,
            column: 36
          }
        }],
        line: 318
      },
      "30": {
        loc: {
          start: {
            line: 331,
            column: 16
          },
          end: {
            line: 335,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 331,
            column: 16
          },
          end: {
            line: 335,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 331
      },
      "31": {
        loc: {
          start: {
            line: 340,
            column: 8
          },
          end: {
            line: 340,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 340,
            column: 8
          },
          end: {
            line: 340,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 340
      },
      "32": {
        loc: {
          start: {
            line: 348,
            column: 16
          },
          end: {
            line: 352,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 348,
            column: 16
          },
          end: {
            line: 352,
            column: 17
          }
        }, {
          start: {
            line: 350,
            column: 23
          },
          end: {
            line: 352,
            column: 17
          }
        }],
        line: 348
      },
      "33": {
        loc: {
          start: {
            line: 354,
            column: 44
          },
          end: {
            line: 354,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 354,
            column: 44
          },
          end: {
            line: 354,
            column: 51
          }
        }, {
          start: {
            line: 354,
            column: 55
          },
          end: {
            line: 354,
            column: 69
          }
        }],
        line: 354
      },
      "34": {
        loc: {
          start: {
            line: 358,
            column: 8
          },
          end: {
            line: 358,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 358,
            column: 8
          },
          end: {
            line: 358,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 358
      },
      "35": {
        loc: {
          start: {
            line: 369,
            column: 16
          },
          end: {
            line: 373,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 369,
            column: 16
          },
          end: {
            line: 373,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 369
      },
      "36": {
        loc: {
          start: {
            line: 369,
            column: 20
          },
          end: {
            line: 369,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 369,
            column: 20
          },
          end: {
            line: 369,
            column: 26
          }
        }, {
          start: {
            line: 369,
            column: 30
          },
          end: {
            line: 369,
            column: 46
          }
        }, {
          start: {
            line: 369,
            column: 50
          },
          end: {
            line: 369,
            column: 79
          }
        }],
        line: 369
      },
      "37": {
        loc: {
          start: {
            line: 375,
            column: 16
          },
          end: {
            line: 383,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 375,
            column: 16
          },
          end: {
            line: 383,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 375
      },
      "38": {
        loc: {
          start: {
            line: 375,
            column: 20
          },
          end: {
            line: 375,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 375,
            column: 20
          },
          end: {
            line: 375,
            column: 36
          }
        }, {
          start: {
            line: 375,
            column: 40
          },
          end: {
            line: 375,
            column: 59
          }
        }],
        line: 375
      },
      "39": {
        loc: {
          start: {
            line: 376,
            column: 38
          },
          end: {
            line: 376,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 376,
            column: 38
          },
          end: {
            line: 376,
            column: 59
          }
        }, {
          start: {
            line: 376,
            column: 63
          },
          end: {
            line: 376,
            column: 65
          }
        }],
        line: 376
      },
      "40": {
        loc: {
          start: {
            line: 377,
            column: 48
          },
          end: {
            line: 377,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 377,
            column: 48
          },
          end: {
            line: 377,
            column: 66
          }
        }, {
          start: {
            line: 377,
            column: 70
          },
          end: {
            line: 377,
            column: 72
          }
        }],
        line: 377
      },
      "41": {
        loc: {
          start: {
            line: 379,
            column: 20
          },
          end: {
            line: 382,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 379,
            column: 20
          },
          end: {
            line: 382,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 379
      },
      "42": {
        loc: {
          start: {
            line: 384,
            column: 24
          },
          end: {
            line: 384,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 384,
            column: 24
          },
          end: {
            line: 384,
            column: 30
          }
        }, {
          start: {
            line: 384,
            column: 34
          },
          end: {
            line: 384,
            column: 38
          }
        }],
        line: 384
      },
      "43": {
        loc: {
          start: {
            line: 389,
            column: 8
          },
          end: {
            line: 389,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 389,
            column: 8
          },
          end: {
            line: 389,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 389
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matthewmoroney/builds/FreeAgentics/web/lib/storage/indexeddb-storage.ts"],
      sourcesContent: ["interface ExperimentState {\n  id: string;\n  name: string;\n  description: string;\n  createdAt: string;\n  createdBy: string;\n  components: string[];\n  stateData: any;\n  metadata: {\n    totalAgents: number;\n    totalConversations: number;\n    totalMessages: number;\n    totalKnowledgeNodes: number;\n    fileSizeMb: number;\n  };\n}\n\ninterface SharedLink {\n  id: string;\n  experimentId: string;\n  accessLevel: \"view\" | \"comment\" | \"edit\";\n  expiresAt: string | null;\n  requiresAuth: boolean;\n  isActive: boolean;\n  createdAt: string;\n  createdBy: string;\n}\n\nclass ExperimentStorageDB {\n  private db: IDBDatabase | null = null;\n  private readonly dbName = \"FreeAgenticsExperiments\";\n  private readonly version = 1;\n\n  async init(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const request = indexedDB.open(this.dbName, this.version);\n\n      request.onerror = () => reject(request.error);\n      request.onsuccess = () => {\n        this.db = request.result;\n        resolve();\n      };\n\n      request.onupgradeneeded = (event) => {\n        const db = (event.target as IDBOpenDBRequest).result;\n\n        // Create experiments store\n        if (!db.objectStoreNames.contains(\"experiments\")) {\n          const experimentsStore = db.createObjectStore(\"experiments\", {\n            keyPath: \"id\",\n          });\n          experimentsStore.createIndex(\"createdAt\", \"createdAt\", {\n            unique: false,\n          });\n          experimentsStore.createIndex(\"createdBy\", \"createdBy\", {\n            unique: false,\n          });\n          experimentsStore.createIndex(\"name\", \"name\", { unique: false });\n        }\n\n        // Create shared links store\n        if (!db.objectStoreNames.contains(\"sharedLinks\")) {\n          const linksStore = db.createObjectStore(\"sharedLinks\", {\n            keyPath: \"id\",\n          });\n          linksStore.createIndex(\"experimentId\", \"experimentId\", {\n            unique: false,\n          });\n          linksStore.createIndex(\"createdBy\", \"createdBy\", { unique: false });\n          linksStore.createIndex(\"expiresAt\", \"expiresAt\", { unique: false });\n        }\n\n        // Create versions store for change tracking\n        if (!db.objectStoreNames.contains(\"versions\")) {\n          const versionsStore = db.createObjectStore(\"versions\", {\n            keyPath: \"id\",\n          });\n          versionsStore.createIndex(\"experimentId\", \"experimentId\", {\n            unique: false,\n          });\n          versionsStore.createIndex(\"createdAt\", \"createdAt\", {\n            unique: false,\n          });\n        }\n\n        // Create change log store\n        if (!db.objectStoreNames.contains(\"changelog\")) {\n          const changelogStore = db.createObjectStore(\"changelog\", {\n            keyPath: \"id\",\n          });\n          changelogStore.createIndex(\"experimentId\", \"experimentId\", {\n            unique: false,\n          });\n          changelogStore.createIndex(\"timestamp\", \"timestamp\", {\n            unique: false,\n          });\n        }\n      };\n    });\n  }\n\n  async storeExperiment(experiment: ExperimentState): Promise<void> {\n    if (!this.db) await this.init();\n\n    return new Promise((resolve, reject) => {\n      const transaction = this.db!.transaction([\"experiments\"], \"readwrite\");\n      const store = transaction.objectStore(\"experiments\");\n\n      const request = store.put(experiment);\n      request.onerror = () => reject(request.error);\n      request.onsuccess = () => resolve();\n    });\n  }\n\n  async getExperiment(id: string): Promise<ExperimentState | null> {\n    if (!this.db) await this.init();\n\n    return new Promise((resolve, reject) => {\n      const transaction = this.db!.transaction([\"experiments\"], \"readonly\");\n      const store = transaction.objectStore(\"experiments\");\n\n      const request = store.get(id);\n      request.onerror = () => reject(request.error);\n      request.onsuccess = () => resolve(request.result || null);\n    });\n  }\n\n  async getAllExperiments(): Promise<ExperimentState[]> {\n    if (!this.db) await this.init();\n\n    return new Promise((resolve, reject) => {\n      const transaction = this.db!.transaction([\"experiments\"], \"readonly\");\n      const store = transaction.objectStore(\"experiments\");\n\n      const request = store.getAll();\n      request.onerror = () => reject(request.error);\n      request.onsuccess = () => resolve(request.result || []);\n    });\n  }\n\n  async deleteExperiment(id: string): Promise<void> {\n    if (!this.db) await this.init();\n\n    return new Promise((resolve, reject) => {\n      const transaction = this.db!.transaction([\"experiments\"], \"readwrite\");\n      const store = transaction.objectStore(\"experiments\");\n\n      const request = store.delete(id);\n      request.onerror = () => reject(request.error);\n      request.onsuccess = () => resolve();\n    });\n  }\n\n  async storeSharedLink(link: SharedLink): Promise<void> {\n    if (!this.db) await this.init();\n\n    return new Promise((resolve, reject) => {\n      const transaction = this.db!.transaction([\"sharedLinks\"], \"readwrite\");\n      const store = transaction.objectStore(\"sharedLinks\");\n\n      const request = store.put(link);\n      request.onerror = () => reject(request.error);\n      request.onsuccess = () => resolve();\n    });\n  }\n\n  async getSharedLinksForExperiment(\n    experimentId: string,\n  ): Promise<SharedLink[]> {\n    if (!this.db) await this.init();\n\n    return new Promise((resolve, reject) => {\n      const transaction = this.db!.transaction([\"sharedLinks\"], \"readonly\");\n      const store = transaction.objectStore(\"sharedLinks\");\n      const index = store.index(\"experimentId\");\n\n      const request = index.getAll(experimentId);\n      request.onerror = () => reject(request.error);\n      request.onsuccess = () => resolve(request.result || []);\n    });\n  }\n\n  async deleteSharedLink(id: string): Promise<void> {\n    if (!this.db) await this.init();\n\n    return new Promise((resolve, reject) => {\n      const transaction = this.db!.transaction([\"sharedLinks\"], \"readwrite\");\n      const store = transaction.objectStore(\"sharedLinks\");\n\n      const request = store.delete(id);\n      request.onerror = () => reject(request.error);\n      request.onsuccess = () => resolve();\n    });\n  }\n\n  async createVersion(experimentId: string, versionData: any): Promise<string> {\n    if (!this.db) await this.init();\n\n    const versionId = `${experimentId}_v${Date.now()}`;\n    const version = {\n      id: versionId,\n      experimentId,\n      createdAt: new Date().toISOString(),\n      data: versionData,\n      metadata: {\n        size: JSON.stringify(versionData).length,\n        changeCount: this.calculateChangeCount(versionData),\n      },\n    };\n\n    return new Promise((resolve, reject) => {\n      const transaction = this.db!.transaction([\"versions\"], \"readwrite\");\n      const store = transaction.objectStore(\"versions\");\n\n      const request = store.put(version);\n      request.onerror = () => reject(request.error);\n      request.onsuccess = () => resolve(versionId);\n    });\n  }\n\n  async getVersionsForExperiment(experimentId: string): Promise<any[]> {\n    if (!this.db) await this.init();\n\n    return new Promise((resolve, reject) => {\n      const transaction = this.db!.transaction([\"versions\"], \"readonly\");\n      const store = transaction.objectStore(\"versions\");\n      const index = store.index(\"experimentId\");\n\n      const request = index.getAll(experimentId);\n      request.onerror = () => reject(request.error);\n      request.onsuccess = () => resolve(request.result || []);\n    });\n  }\n\n  async addChangeLogEntry(\n    experimentId: string,\n    change: {\n      action: string;\n      component: string;\n      details: string;\n      userId: string;\n    },\n  ): Promise<void> {\n    if (!this.db) await this.init();\n\n    const entry = {\n      id: `${experimentId}_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      experimentId,\n      timestamp: new Date().toISOString(),\n      ...change,\n    };\n\n    return new Promise((resolve, reject) => {\n      const transaction = this.db!.transaction([\"changelog\"], \"readwrite\");\n      const store = transaction.objectStore(\"changelog\");\n\n      const request = store.put(entry);\n      request.onerror = () => reject(request.error);\n      request.onsuccess = () => resolve();\n    });\n  }\n\n  async getChangeLogForExperiment(experimentId: string): Promise<any[]> {\n    if (!this.db) await this.init();\n\n    return new Promise((resolve, reject) => {\n      const transaction = this.db!.transaction([\"changelog\"], \"readonly\");\n      const store = transaction.objectStore(\"changelog\");\n      const index = store.index(\"experimentId\");\n\n      const request = index.getAll(experimentId);\n      request.onerror = () => reject(request.error);\n      request.onsuccess = () => {\n        const results = request.result || [];\n        // Sort by timestamp descending\n        results.sort(\n          (a, b) =>\n            new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime(),\n        );\n        resolve(results);\n      };\n    });\n  }\n\n  async clearExpiredLinks(): Promise<void> {\n    if (!this.db) await this.init();\n\n    const now = new Date().toISOString();\n\n    return new Promise((resolve, reject) => {\n      const transaction = this.db!.transaction([\"sharedLinks\"], \"readwrite\");\n      const store = transaction.objectStore(\"sharedLinks\");\n      const index = store.index(\"expiresAt\");\n\n      const request = index.openCursor();\n      request.onerror = () => reject(request.error);\n      request.onsuccess = (event) => {\n        const cursor = (event.target as IDBRequest).result;\n        if (cursor) {\n          const link = cursor.value as SharedLink;\n          if (link.expiresAt && link.expiresAt < now) {\n            cursor.delete();\n          }\n          cursor.continue();\n        } else {\n          resolve();\n        }\n      };\n    });\n  }\n\n  private calculateChangeCount(data: any): number {\n    // Simple heuristic for counting significant changes\n    const stringified = JSON.stringify(data);\n    return stringified.split(/[,\\[\\]{}]/).length;\n  }\n\n  async getStorageUsage(): Promise<{ used: number; quota: number }> {\n    if (\"storage\" in navigator && \"estimate\" in navigator.storage) {\n      const estimate = await navigator.storage.estimate();\n      return {\n        used: estimate.usage || 0,\n        quota: estimate.quota || 0,\n      };\n    }\n    return { used: 0, quota: 0 };\n  }\n\n  async cleanup(): Promise<void> {\n    // Clean up expired links\n    await this.clearExpiredLinks();\n\n    // Clean up old versions (keep only last 10 per experiment)\n    const experiments = await this.getAllExperiments();\n    for (const experiment of experiments) {\n      const versions = await this.getVersionsForExperiment(experiment.id);\n      if (versions.length > 10) {\n        versions.sort(\n          (a, b) =>\n            new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime(),\n        );\n        const toDelete = versions.slice(10);\n\n        const transaction = this.db!.transaction([\"versions\"], \"readwrite\");\n        const store = transaction.objectStore(\"versions\");\n\n        for (const version of toDelete) {\n          store.delete(version.id);\n        }\n      }\n    }\n  }\n}\n\n// Generic IndexedDB Storage class for backward compatibility\nexport class IndexedDBStorage {\n  private db: IDBDatabase | null = null;\n  private readonly dbName: string;\n  private readonly version: number;\n  private readonly options: any;\n\n  constructor(dbName: string, version: number, options?: any) {\n    this.dbName = dbName;\n    this.version = version;\n    this.options = options || {};\n  }\n\n  async init(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const request = indexedDB.open(this.dbName, this.version);\n\n      request.onerror = () => reject(request.error);\n      request.onsuccess = () => {\n        this.db = request.result;\n        resolve();\n      };\n\n      request.onupgradeneeded = (event) => {\n        const db = (event.target as IDBOpenDBRequest).result;\n\n        // Create default object stores\n        if (!db.objectStoreNames.contains(\"data\")) {\n          db.createObjectStore(\"data\", { keyPath: \"id\" });\n        }\n      };\n    });\n  }\n\n  async store(storeName: string, data: any): Promise<string> {\n    if (!this.db) await this.init();\n\n    return new Promise((resolve, reject) => {\n      const transaction = this.db!.transaction([storeName], \"readwrite\");\n      const store = transaction.objectStore(storeName);\n\n      const request = store.add(data);\n      request.onerror = () => {\n        if (request.error?.name === \"QuotaExceededError\") {\n          reject(new Error(\"Storage quota exceeded\"));\n        } else {\n          reject(request.error);\n        }\n      };\n      request.onsuccess = () => resolve(data.id || request.result);\n    });\n  }\n\n  async get(storeName: string, key: string, options?: any): Promise<any> {\n    if (!this.db) await this.init();\n\n    return new Promise((resolve, reject) => {\n      const transaction = this.db!.transaction([storeName], \"readonly\");\n      const store = transaction.objectStore(storeName);\n\n      const request = store.get(key);\n      request.onerror = () => reject(request.error);\n      request.onsuccess = () => {\n        const result = request.result;\n\n        // Check for expiration\n        if (result && result.expiresAt && result.expiresAt < Date.now()) {\n          this.delete(storeName, key);\n          resolve(null);\n          return;\n        }\n\n        // Check permissions if provided\n        if (options?.context && result?.permissions) {\n          const userRoles = options.context.roles || [];\n          const requiredPermissions = result.permissions || [];\n          const hasPermission = requiredPermissions.some((perm: string) =>\n            userRoles.some((role: string) => perm.includes(role)),\n          );\n\n          if (!hasPermission) {\n            reject(new Error(\"Access denied\"));\n            return;\n          }\n        }\n\n        resolve(result || null);\n      };\n    });\n  }\n\n  async delete(storeName: string, key: string): Promise<void> {\n    if (!this.db) await this.init();\n\n    return new Promise((resolve, reject) => {\n      const transaction = this.db!.transaction([storeName], \"readwrite\");\n      const store = transaction.objectStore(storeName);\n\n      const request = store.delete(key);\n      request.onerror = () => reject(request.error);\n      request.onsuccess = () => resolve();\n    });\n  }\n\n  async batchStore(storeName: string, items: any[]): Promise<string[]> {\n    const results: string[] = [];\n    for (const item of items) {\n      try {\n        const result = await this.store(storeName, item);\n        results.push(result);\n      } catch (error) {\n        results.push(\"error\");\n      }\n    }\n    return results;\n  }\n\n  async storeSecure(storeName: string, data: any): Promise<string> {\n    // Mock encryption by adding encrypted flag\n    const encryptedData = {\n      ...data,\n      encrypted: true,\n      data: btoa(JSON.stringify(data)), // Simple base64 \"encryption\"\n    };\n\n    return this.store(storeName, encryptedData);\n  }\n}\n\n// Singleton instance\nexport const experimentStorage = new ExperimentStorageDB();\n\n// Initialize on module load\nexperimentStorage.init().catch(console.error);\n\nexport type { ExperimentState, SharedLink };\n"],
      names: ["IndexedDBStorage", "experimentStorage", "ExperimentStorageDB", "init", "Promise", "resolve", "reject", "request", "indexedDB", "open", "dbName", "version", "onerror", "error", "onsuccess", "db", "result", "onupgradeneeded", "event", "target", "objectStoreNames", "contains", "experimentsStore", "createObjectStore", "keyPath", "createIndex", "unique", "linksStore", "versionsStore", "changelogStore", "storeExperiment", "experiment", "transaction", "store", "objectStore", "put", "getExperiment", "id", "get", "getAllExperiments", "getAll", "deleteExperiment", "delete", "storeSharedLink", "link", "getSharedLinksForExperiment", "experimentId", "index", "deleteSharedLink", "createVersion", "versionData", "versionId", "Date", "now", "createdAt", "toISOString", "data", "metadata", "size", "JSON", "stringify", "length", "changeCount", "calculateChangeCount", "getVersionsForExperiment", "addChangeLogEntry", "change", "entry", "Math", "random", "toString", "substr", "timestamp", "getChangeLogForExperiment", "results", "sort", "a", "b", "getTime", "clearExpiredLinks", "openCursor", "cursor", "value", "expiresAt", "continue", "stringified", "split", "getStorageUsage", "navigator", "storage", "estimate", "used", "usage", "quota", "cleanup", "experiments", "versions", "toDelete", "slice", "constructor", "options", "storeName", "add", "name", "Error", "key", "context", "permissions", "userRoles", "roles", "requiredPermissions", "hasPermission", "some", "perm", "role", "includes", "batchStore", "items", "item", "push", "storeSecure", "encryptedData", "encrypted", "btoa", "catch", "console"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e0a4496018f7b25eabcf7c022dac7e3ea374a8e7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_piwwpze91 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_piwwpze91();
cov_piwwpze91().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_piwwpze91().f[0]++;
  cov_piwwpze91().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_piwwpze91().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_piwwpze91().s[3]++;
_export(exports, {
  IndexedDBStorage: function () {
    /* istanbul ignore next */
    cov_piwwpze91().f[1]++;
    cov_piwwpze91().s[4]++;
    return IndexedDBStorage;
  },
  experimentStorage: function () {
    /* istanbul ignore next */
    cov_piwwpze91().f[2]++;
    cov_piwwpze91().s[5]++;
    return experimentStorage;
  }
});
class ExperimentStorageDB {
  async init() {
    /* istanbul ignore next */
    cov_piwwpze91().f[3]++;
    cov_piwwpze91().s[6]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_piwwpze91().f[4]++;
      const request =
      /* istanbul ignore next */
      (cov_piwwpze91().s[7]++, indexedDB.open(this.dbName, this.version));
      /* istanbul ignore next */
      cov_piwwpze91().s[8]++;
      request.onerror = () => {
        /* istanbul ignore next */
        cov_piwwpze91().f[5]++;
        cov_piwwpze91().s[9]++;
        return reject(request.error);
      };
      /* istanbul ignore next */
      cov_piwwpze91().s[10]++;
      request.onsuccess = () => {
        /* istanbul ignore next */
        cov_piwwpze91().f[6]++;
        cov_piwwpze91().s[11]++;
        this.db = request.result;
        /* istanbul ignore next */
        cov_piwwpze91().s[12]++;
        resolve();
      };
      /* istanbul ignore next */
      cov_piwwpze91().s[13]++;
      request.onupgradeneeded = event => {
        /* istanbul ignore next */
        cov_piwwpze91().f[7]++;
        const db =
        /* istanbul ignore next */
        (cov_piwwpze91().s[14]++, event.target.result);
        // Create experiments store
        /* istanbul ignore next */
        cov_piwwpze91().s[15]++;
        if (!db.objectStoreNames.contains("experiments")) {
          /* istanbul ignore next */
          cov_piwwpze91().b[0][0]++;
          const experimentsStore =
          /* istanbul ignore next */
          (cov_piwwpze91().s[16]++, db.createObjectStore("experiments", {
            keyPath: "id"
          }));
          /* istanbul ignore next */
          cov_piwwpze91().s[17]++;
          experimentsStore.createIndex("createdAt", "createdAt", {
            unique: false
          });
          /* istanbul ignore next */
          cov_piwwpze91().s[18]++;
          experimentsStore.createIndex("createdBy", "createdBy", {
            unique: false
          });
          /* istanbul ignore next */
          cov_piwwpze91().s[19]++;
          experimentsStore.createIndex("name", "name", {
            unique: false
          });
        } else
        /* istanbul ignore next */
        {
          cov_piwwpze91().b[0][1]++;
        }
        // Create shared links store
        cov_piwwpze91().s[20]++;
        if (!db.objectStoreNames.contains("sharedLinks")) {
          /* istanbul ignore next */
          cov_piwwpze91().b[1][0]++;
          const linksStore =
          /* istanbul ignore next */
          (cov_piwwpze91().s[21]++, db.createObjectStore("sharedLinks", {
            keyPath: "id"
          }));
          /* istanbul ignore next */
          cov_piwwpze91().s[22]++;
          linksStore.createIndex("experimentId", "experimentId", {
            unique: false
          });
          /* istanbul ignore next */
          cov_piwwpze91().s[23]++;
          linksStore.createIndex("createdBy", "createdBy", {
            unique: false
          });
          /* istanbul ignore next */
          cov_piwwpze91().s[24]++;
          linksStore.createIndex("expiresAt", "expiresAt", {
            unique: false
          });
        } else
        /* istanbul ignore next */
        {
          cov_piwwpze91().b[1][1]++;
        }
        // Create versions store for change tracking
        cov_piwwpze91().s[25]++;
        if (!db.objectStoreNames.contains("versions")) {
          /* istanbul ignore next */
          cov_piwwpze91().b[2][0]++;
          const versionsStore =
          /* istanbul ignore next */
          (cov_piwwpze91().s[26]++, db.createObjectStore("versions", {
            keyPath: "id"
          }));
          /* istanbul ignore next */
          cov_piwwpze91().s[27]++;
          versionsStore.createIndex("experimentId", "experimentId", {
            unique: false
          });
          /* istanbul ignore next */
          cov_piwwpze91().s[28]++;
          versionsStore.createIndex("createdAt", "createdAt", {
            unique: false
          });
        } else
        /* istanbul ignore next */
        {
          cov_piwwpze91().b[2][1]++;
        }
        // Create change log store
        cov_piwwpze91().s[29]++;
        if (!db.objectStoreNames.contains("changelog")) {
          /* istanbul ignore next */
          cov_piwwpze91().b[3][0]++;
          const changelogStore =
          /* istanbul ignore next */
          (cov_piwwpze91().s[30]++, db.createObjectStore("changelog", {
            keyPath: "id"
          }));
          /* istanbul ignore next */
          cov_piwwpze91().s[31]++;
          changelogStore.createIndex("experimentId", "experimentId", {
            unique: false
          });
          /* istanbul ignore next */
          cov_piwwpze91().s[32]++;
          changelogStore.createIndex("timestamp", "timestamp", {
            unique: false
          });
        } else
        /* istanbul ignore next */
        {
          cov_piwwpze91().b[3][1]++;
        }
      };
    });
  }
  async storeExperiment(experiment) {
    /* istanbul ignore next */
    cov_piwwpze91().f[8]++;
    cov_piwwpze91().s[33]++;
    if (!this.db) {
      /* istanbul ignore next */
      cov_piwwpze91().b[4][0]++;
      cov_piwwpze91().s[34]++;
      await this.init();
    } else
    /* istanbul ignore next */
    {
      cov_piwwpze91().b[4][1]++;
    }
    cov_piwwpze91().s[35]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_piwwpze91().f[9]++;
      const transaction =
      /* istanbul ignore next */
      (cov_piwwpze91().s[36]++, this.db.transaction(["experiments"], "readwrite"));
      const store =
      /* istanbul ignore next */
      (cov_piwwpze91().s[37]++, transaction.objectStore("experiments"));
      const request =
      /* istanbul ignore next */
      (cov_piwwpze91().s[38]++, store.put(experiment));
      /* istanbul ignore next */
      cov_piwwpze91().s[39]++;
      request.onerror = () => {
        /* istanbul ignore next */
        cov_piwwpze91().f[10]++;
        cov_piwwpze91().s[40]++;
        return reject(request.error);
      };
      /* istanbul ignore next */
      cov_piwwpze91().s[41]++;
      request.onsuccess = () => {
        /* istanbul ignore next */
        cov_piwwpze91().f[11]++;
        cov_piwwpze91().s[42]++;
        return resolve();
      };
    });
  }
  async getExperiment(id) {
    /* istanbul ignore next */
    cov_piwwpze91().f[12]++;
    cov_piwwpze91().s[43]++;
    if (!this.db) {
      /* istanbul ignore next */
      cov_piwwpze91().b[5][0]++;
      cov_piwwpze91().s[44]++;
      await this.init();
    } else
    /* istanbul ignore next */
    {
      cov_piwwpze91().b[5][1]++;
    }
    cov_piwwpze91().s[45]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_piwwpze91().f[13]++;
      const transaction =
      /* istanbul ignore next */
      (cov_piwwpze91().s[46]++, this.db.transaction(["experiments"], "readonly"));
      const store =
      /* istanbul ignore next */
      (cov_piwwpze91().s[47]++, transaction.objectStore("experiments"));
      const request =
      /* istanbul ignore next */
      (cov_piwwpze91().s[48]++, store.get(id));
      /* istanbul ignore next */
      cov_piwwpze91().s[49]++;
      request.onerror = () => {
        /* istanbul ignore next */
        cov_piwwpze91().f[14]++;
        cov_piwwpze91().s[50]++;
        return reject(request.error);
      };
      /* istanbul ignore next */
      cov_piwwpze91().s[51]++;
      request.onsuccess = () => {
        /* istanbul ignore next */
        cov_piwwpze91().f[15]++;
        cov_piwwpze91().s[52]++;
        return resolve(
        /* istanbul ignore next */
        (cov_piwwpze91().b[6][0]++, request.result) ||
        /* istanbul ignore next */
        (cov_piwwpze91().b[6][1]++, null));
      };
    });
  }
  async getAllExperiments() {
    /* istanbul ignore next */
    cov_piwwpze91().f[16]++;
    cov_piwwpze91().s[53]++;
    if (!this.db) {
      /* istanbul ignore next */
      cov_piwwpze91().b[7][0]++;
      cov_piwwpze91().s[54]++;
      await this.init();
    } else
    /* istanbul ignore next */
    {
      cov_piwwpze91().b[7][1]++;
    }
    cov_piwwpze91().s[55]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_piwwpze91().f[17]++;
      const transaction =
      /* istanbul ignore next */
      (cov_piwwpze91().s[56]++, this.db.transaction(["experiments"], "readonly"));
      const store =
      /* istanbul ignore next */
      (cov_piwwpze91().s[57]++, transaction.objectStore("experiments"));
      const request =
      /* istanbul ignore next */
      (cov_piwwpze91().s[58]++, store.getAll());
      /* istanbul ignore next */
      cov_piwwpze91().s[59]++;
      request.onerror = () => {
        /* istanbul ignore next */
        cov_piwwpze91().f[18]++;
        cov_piwwpze91().s[60]++;
        return reject(request.error);
      };
      /* istanbul ignore next */
      cov_piwwpze91().s[61]++;
      request.onsuccess = () => {
        /* istanbul ignore next */
        cov_piwwpze91().f[19]++;
        cov_piwwpze91().s[62]++;
        return resolve(
        /* istanbul ignore next */
        (cov_piwwpze91().b[8][0]++, request.result) ||
        /* istanbul ignore next */
        (cov_piwwpze91().b[8][1]++, []));
      };
    });
  }
  async deleteExperiment(id) {
    /* istanbul ignore next */
    cov_piwwpze91().f[20]++;
    cov_piwwpze91().s[63]++;
    if (!this.db) {
      /* istanbul ignore next */
      cov_piwwpze91().b[9][0]++;
      cov_piwwpze91().s[64]++;
      await this.init();
    } else
    /* istanbul ignore next */
    {
      cov_piwwpze91().b[9][1]++;
    }
    cov_piwwpze91().s[65]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_piwwpze91().f[21]++;
      const transaction =
      /* istanbul ignore next */
      (cov_piwwpze91().s[66]++, this.db.transaction(["experiments"], "readwrite"));
      const store =
      /* istanbul ignore next */
      (cov_piwwpze91().s[67]++, transaction.objectStore("experiments"));
      const request =
      /* istanbul ignore next */
      (cov_piwwpze91().s[68]++, store.delete(id));
      /* istanbul ignore next */
      cov_piwwpze91().s[69]++;
      request.onerror = () => {
        /* istanbul ignore next */
        cov_piwwpze91().f[22]++;
        cov_piwwpze91().s[70]++;
        return reject(request.error);
      };
      /* istanbul ignore next */
      cov_piwwpze91().s[71]++;
      request.onsuccess = () => {
        /* istanbul ignore next */
        cov_piwwpze91().f[23]++;
        cov_piwwpze91().s[72]++;
        return resolve();
      };
    });
  }
  async storeSharedLink(link) {
    /* istanbul ignore next */
    cov_piwwpze91().f[24]++;
    cov_piwwpze91().s[73]++;
    if (!this.db) {
      /* istanbul ignore next */
      cov_piwwpze91().b[10][0]++;
      cov_piwwpze91().s[74]++;
      await this.init();
    } else
    /* istanbul ignore next */
    {
      cov_piwwpze91().b[10][1]++;
    }
    cov_piwwpze91().s[75]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_piwwpze91().f[25]++;
      const transaction =
      /* istanbul ignore next */
      (cov_piwwpze91().s[76]++, this.db.transaction(["sharedLinks"], "readwrite"));
      const store =
      /* istanbul ignore next */
      (cov_piwwpze91().s[77]++, transaction.objectStore("sharedLinks"));
      const request =
      /* istanbul ignore next */
      (cov_piwwpze91().s[78]++, store.put(link));
      /* istanbul ignore next */
      cov_piwwpze91().s[79]++;
      request.onerror = () => {
        /* istanbul ignore next */
        cov_piwwpze91().f[26]++;
        cov_piwwpze91().s[80]++;
        return reject(request.error);
      };
      /* istanbul ignore next */
      cov_piwwpze91().s[81]++;
      request.onsuccess = () => {
        /* istanbul ignore next */
        cov_piwwpze91().f[27]++;
        cov_piwwpze91().s[82]++;
        return resolve();
      };
    });
  }
  async getSharedLinksForExperiment(experimentId) {
    /* istanbul ignore next */
    cov_piwwpze91().f[28]++;
    cov_piwwpze91().s[83]++;
    if (!this.db) {
      /* istanbul ignore next */
      cov_piwwpze91().b[11][0]++;
      cov_piwwpze91().s[84]++;
      await this.init();
    } else
    /* istanbul ignore next */
    {
      cov_piwwpze91().b[11][1]++;
    }
    cov_piwwpze91().s[85]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_piwwpze91().f[29]++;
      const transaction =
      /* istanbul ignore next */
      (cov_piwwpze91().s[86]++, this.db.transaction(["sharedLinks"], "readonly"));
      const store =
      /* istanbul ignore next */
      (cov_piwwpze91().s[87]++, transaction.objectStore("sharedLinks"));
      const index =
      /* istanbul ignore next */
      (cov_piwwpze91().s[88]++, store.index("experimentId"));
      const request =
      /* istanbul ignore next */
      (cov_piwwpze91().s[89]++, index.getAll(experimentId));
      /* istanbul ignore next */
      cov_piwwpze91().s[90]++;
      request.onerror = () => {
        /* istanbul ignore next */
        cov_piwwpze91().f[30]++;
        cov_piwwpze91().s[91]++;
        return reject(request.error);
      };
      /* istanbul ignore next */
      cov_piwwpze91().s[92]++;
      request.onsuccess = () => {
        /* istanbul ignore next */
        cov_piwwpze91().f[31]++;
        cov_piwwpze91().s[93]++;
        return resolve(
        /* istanbul ignore next */
        (cov_piwwpze91().b[12][0]++, request.result) ||
        /* istanbul ignore next */
        (cov_piwwpze91().b[12][1]++, []));
      };
    });
  }
  async deleteSharedLink(id) {
    /* istanbul ignore next */
    cov_piwwpze91().f[32]++;
    cov_piwwpze91().s[94]++;
    if (!this.db) {
      /* istanbul ignore next */
      cov_piwwpze91().b[13][0]++;
      cov_piwwpze91().s[95]++;
      await this.init();
    } else
    /* istanbul ignore next */
    {
      cov_piwwpze91().b[13][1]++;
    }
    cov_piwwpze91().s[96]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_piwwpze91().f[33]++;
      const transaction =
      /* istanbul ignore next */
      (cov_piwwpze91().s[97]++, this.db.transaction(["sharedLinks"], "readwrite"));
      const store =
      /* istanbul ignore next */
      (cov_piwwpze91().s[98]++, transaction.objectStore("sharedLinks"));
      const request =
      /* istanbul ignore next */
      (cov_piwwpze91().s[99]++, store.delete(id));
      /* istanbul ignore next */
      cov_piwwpze91().s[100]++;
      request.onerror = () => {
        /* istanbul ignore next */
        cov_piwwpze91().f[34]++;
        cov_piwwpze91().s[101]++;
        return reject(request.error);
      };
      /* istanbul ignore next */
      cov_piwwpze91().s[102]++;
      request.onsuccess = () => {
        /* istanbul ignore next */
        cov_piwwpze91().f[35]++;
        cov_piwwpze91().s[103]++;
        return resolve();
      };
    });
  }
  async createVersion(experimentId, versionData) {
    /* istanbul ignore next */
    cov_piwwpze91().f[36]++;
    cov_piwwpze91().s[104]++;
    if (!this.db) {
      /* istanbul ignore next */
      cov_piwwpze91().b[14][0]++;
      cov_piwwpze91().s[105]++;
      await this.init();
    } else
    /* istanbul ignore next */
    {
      cov_piwwpze91().b[14][1]++;
    }
    const versionId =
    /* istanbul ignore next */
    (cov_piwwpze91().s[106]++, `${experimentId}_v${Date.now()}`);
    const version =
    /* istanbul ignore next */
    (cov_piwwpze91().s[107]++, {
      id: versionId,
      experimentId,
      createdAt: new Date().toISOString(),
      data: versionData,
      metadata: {
        size: JSON.stringify(versionData).length,
        changeCount: this.calculateChangeCount(versionData)
      }
    });
    /* istanbul ignore next */
    cov_piwwpze91().s[108]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_piwwpze91().f[37]++;
      const transaction =
      /* istanbul ignore next */
      (cov_piwwpze91().s[109]++, this.db.transaction(["versions"], "readwrite"));
      const store =
      /* istanbul ignore next */
      (cov_piwwpze91().s[110]++, transaction.objectStore("versions"));
      const request =
      /* istanbul ignore next */
      (cov_piwwpze91().s[111]++, store.put(version));
      /* istanbul ignore next */
      cov_piwwpze91().s[112]++;
      request.onerror = () => {
        /* istanbul ignore next */
        cov_piwwpze91().f[38]++;
        cov_piwwpze91().s[113]++;
        return reject(request.error);
      };
      /* istanbul ignore next */
      cov_piwwpze91().s[114]++;
      request.onsuccess = () => {
        /* istanbul ignore next */
        cov_piwwpze91().f[39]++;
        cov_piwwpze91().s[115]++;
        return resolve(versionId);
      };
    });
  }
  async getVersionsForExperiment(experimentId) {
    /* istanbul ignore next */
    cov_piwwpze91().f[40]++;
    cov_piwwpze91().s[116]++;
    if (!this.db) {
      /* istanbul ignore next */
      cov_piwwpze91().b[15][0]++;
      cov_piwwpze91().s[117]++;
      await this.init();
    } else
    /* istanbul ignore next */
    {
      cov_piwwpze91().b[15][1]++;
    }
    cov_piwwpze91().s[118]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_piwwpze91().f[41]++;
      const transaction =
      /* istanbul ignore next */
      (cov_piwwpze91().s[119]++, this.db.transaction(["versions"], "readonly"));
      const store =
      /* istanbul ignore next */
      (cov_piwwpze91().s[120]++, transaction.objectStore("versions"));
      const index =
      /* istanbul ignore next */
      (cov_piwwpze91().s[121]++, store.index("experimentId"));
      const request =
      /* istanbul ignore next */
      (cov_piwwpze91().s[122]++, index.getAll(experimentId));
      /* istanbul ignore next */
      cov_piwwpze91().s[123]++;
      request.onerror = () => {
        /* istanbul ignore next */
        cov_piwwpze91().f[42]++;
        cov_piwwpze91().s[124]++;
        return reject(request.error);
      };
      /* istanbul ignore next */
      cov_piwwpze91().s[125]++;
      request.onsuccess = () => {
        /* istanbul ignore next */
        cov_piwwpze91().f[43]++;
        cov_piwwpze91().s[126]++;
        return resolve(
        /* istanbul ignore next */
        (cov_piwwpze91().b[16][0]++, request.result) ||
        /* istanbul ignore next */
        (cov_piwwpze91().b[16][1]++, []));
      };
    });
  }
  async addChangeLogEntry(experimentId, change) {
    /* istanbul ignore next */
    cov_piwwpze91().f[44]++;
    cov_piwwpze91().s[127]++;
    if (!this.db) {
      /* istanbul ignore next */
      cov_piwwpze91().b[17][0]++;
      cov_piwwpze91().s[128]++;
      await this.init();
    } else
    /* istanbul ignore next */
    {
      cov_piwwpze91().b[17][1]++;
    }
    const entry =
    /* istanbul ignore next */
    (cov_piwwpze91().s[129]++, {
      id: `${experimentId}_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
      experimentId,
      timestamp: new Date().toISOString(),
      ...change
    });
    /* istanbul ignore next */
    cov_piwwpze91().s[130]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_piwwpze91().f[45]++;
      const transaction =
      /* istanbul ignore next */
      (cov_piwwpze91().s[131]++, this.db.transaction(["changelog"], "readwrite"));
      const store =
      /* istanbul ignore next */
      (cov_piwwpze91().s[132]++, transaction.objectStore("changelog"));
      const request =
      /* istanbul ignore next */
      (cov_piwwpze91().s[133]++, store.put(entry));
      /* istanbul ignore next */
      cov_piwwpze91().s[134]++;
      request.onerror = () => {
        /* istanbul ignore next */
        cov_piwwpze91().f[46]++;
        cov_piwwpze91().s[135]++;
        return reject(request.error);
      };
      /* istanbul ignore next */
      cov_piwwpze91().s[136]++;
      request.onsuccess = () => {
        /* istanbul ignore next */
        cov_piwwpze91().f[47]++;
        cov_piwwpze91().s[137]++;
        return resolve();
      };
    });
  }
  async getChangeLogForExperiment(experimentId) {
    /* istanbul ignore next */
    cov_piwwpze91().f[48]++;
    cov_piwwpze91().s[138]++;
    if (!this.db) {
      /* istanbul ignore next */
      cov_piwwpze91().b[18][0]++;
      cov_piwwpze91().s[139]++;
      await this.init();
    } else
    /* istanbul ignore next */
    {
      cov_piwwpze91().b[18][1]++;
    }
    cov_piwwpze91().s[140]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_piwwpze91().f[49]++;
      const transaction =
      /* istanbul ignore next */
      (cov_piwwpze91().s[141]++, this.db.transaction(["changelog"], "readonly"));
      const store =
      /* istanbul ignore next */
      (cov_piwwpze91().s[142]++, transaction.objectStore("changelog"));
      const index =
      /* istanbul ignore next */
      (cov_piwwpze91().s[143]++, store.index("experimentId"));
      const request =
      /* istanbul ignore next */
      (cov_piwwpze91().s[144]++, index.getAll(experimentId));
      /* istanbul ignore next */
      cov_piwwpze91().s[145]++;
      request.onerror = () => {
        /* istanbul ignore next */
        cov_piwwpze91().f[50]++;
        cov_piwwpze91().s[146]++;
        return reject(request.error);
      };
      /* istanbul ignore next */
      cov_piwwpze91().s[147]++;
      request.onsuccess = () => {
        /* istanbul ignore next */
        cov_piwwpze91().f[51]++;
        const results =
        /* istanbul ignore next */
        (cov_piwwpze91().s[148]++,
        /* istanbul ignore next */
        (cov_piwwpze91().b[19][0]++, request.result) ||
        /* istanbul ignore next */
        (cov_piwwpze91().b[19][1]++, []));
        // Sort by timestamp descending
        /* istanbul ignore next */
        cov_piwwpze91().s[149]++;
        results.sort((a, b) => {
          /* istanbul ignore next */
          cov_piwwpze91().f[52]++;
          cov_piwwpze91().s[150]++;
          return new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime();
        });
        /* istanbul ignore next */
        cov_piwwpze91().s[151]++;
        resolve(results);
      };
    });
  }
  async clearExpiredLinks() {
    /* istanbul ignore next */
    cov_piwwpze91().f[53]++;
    cov_piwwpze91().s[152]++;
    if (!this.db) {
      /* istanbul ignore next */
      cov_piwwpze91().b[20][0]++;
      cov_piwwpze91().s[153]++;
      await this.init();
    } else
    /* istanbul ignore next */
    {
      cov_piwwpze91().b[20][1]++;
    }
    const now =
    /* istanbul ignore next */
    (cov_piwwpze91().s[154]++, new Date().toISOString());
    /* istanbul ignore next */
    cov_piwwpze91().s[155]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_piwwpze91().f[54]++;
      const transaction =
      /* istanbul ignore next */
      (cov_piwwpze91().s[156]++, this.db.transaction(["sharedLinks"], "readwrite"));
      const store =
      /* istanbul ignore next */
      (cov_piwwpze91().s[157]++, transaction.objectStore("sharedLinks"));
      const index =
      /* istanbul ignore next */
      (cov_piwwpze91().s[158]++, store.index("expiresAt"));
      const request =
      /* istanbul ignore next */
      (cov_piwwpze91().s[159]++, index.openCursor());
      /* istanbul ignore next */
      cov_piwwpze91().s[160]++;
      request.onerror = () => {
        /* istanbul ignore next */
        cov_piwwpze91().f[55]++;
        cov_piwwpze91().s[161]++;
        return reject(request.error);
      };
      /* istanbul ignore next */
      cov_piwwpze91().s[162]++;
      request.onsuccess = event => {
        /* istanbul ignore next */
        cov_piwwpze91().f[56]++;
        const cursor =
        /* istanbul ignore next */
        (cov_piwwpze91().s[163]++, event.target.result);
        /* istanbul ignore next */
        cov_piwwpze91().s[164]++;
        if (cursor) {
          /* istanbul ignore next */
          cov_piwwpze91().b[21][0]++;
          const link =
          /* istanbul ignore next */
          (cov_piwwpze91().s[165]++, cursor.value);
          /* istanbul ignore next */
          cov_piwwpze91().s[166]++;
          if (
          /* istanbul ignore next */
          (cov_piwwpze91().b[23][0]++, link.expiresAt) &&
          /* istanbul ignore next */
          (cov_piwwpze91().b[23][1]++, link.expiresAt < now)) {
            /* istanbul ignore next */
            cov_piwwpze91().b[22][0]++;
            cov_piwwpze91().s[167]++;
            cursor.delete();
          } else
          /* istanbul ignore next */
          {
            cov_piwwpze91().b[22][1]++;
          }
          cov_piwwpze91().s[168]++;
          cursor.continue();
        } else {
          /* istanbul ignore next */
          cov_piwwpze91().b[21][1]++;
          cov_piwwpze91().s[169]++;
          resolve();
        }
      };
    });
  }
  calculateChangeCount(data) {
    /* istanbul ignore next */
    cov_piwwpze91().f[57]++;
    // Simple heuristic for counting significant changes
    const stringified =
    /* istanbul ignore next */
    (cov_piwwpze91().s[170]++, JSON.stringify(data));
    /* istanbul ignore next */
    cov_piwwpze91().s[171]++;
    return stringified.split(/[,\[\]{}]/).length;
  }
  async getStorageUsage() {
    /* istanbul ignore next */
    cov_piwwpze91().f[58]++;
    cov_piwwpze91().s[172]++;
    if (
    /* istanbul ignore next */
    (cov_piwwpze91().b[25][0]++, "storage" in navigator) &&
    /* istanbul ignore next */
    (cov_piwwpze91().b[25][1]++, "estimate" in navigator.storage)) {
      /* istanbul ignore next */
      cov_piwwpze91().b[24][0]++;
      const estimate =
      /* istanbul ignore next */
      (cov_piwwpze91().s[173]++, await navigator.storage.estimate());
      /* istanbul ignore next */
      cov_piwwpze91().s[174]++;
      return {
        used:
        /* istanbul ignore next */
        (cov_piwwpze91().b[26][0]++, estimate.usage) ||
        /* istanbul ignore next */
        (cov_piwwpze91().b[26][1]++, 0),
        quota:
        /* istanbul ignore next */
        (cov_piwwpze91().b[27][0]++, estimate.quota) ||
        /* istanbul ignore next */
        (cov_piwwpze91().b[27][1]++, 0)
      };
    } else
    /* istanbul ignore next */
    {
      cov_piwwpze91().b[24][1]++;
    }
    cov_piwwpze91().s[175]++;
    return {
      used: 0,
      quota: 0
    };
  }
  async cleanup() {
    /* istanbul ignore next */
    cov_piwwpze91().f[59]++;
    cov_piwwpze91().s[176]++;
    // Clean up expired links
    await this.clearExpiredLinks();
    // Clean up old versions (keep only last 10 per experiment)
    const experiments =
    /* istanbul ignore next */
    (cov_piwwpze91().s[177]++, await this.getAllExperiments());
    /* istanbul ignore next */
    cov_piwwpze91().s[178]++;
    for (const experiment of experiments) {
      const versions =
      /* istanbul ignore next */
      (cov_piwwpze91().s[179]++, await this.getVersionsForExperiment(experiment.id));
      /* istanbul ignore next */
      cov_piwwpze91().s[180]++;
      if (versions.length > 10) {
        /* istanbul ignore next */
        cov_piwwpze91().b[28][0]++;
        cov_piwwpze91().s[181]++;
        versions.sort((a, b) => {
          /* istanbul ignore next */
          cov_piwwpze91().f[60]++;
          cov_piwwpze91().s[182]++;
          return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();
        });
        const toDelete =
        /* istanbul ignore next */
        (cov_piwwpze91().s[183]++, versions.slice(10));
        const transaction =
        /* istanbul ignore next */
        (cov_piwwpze91().s[184]++, this.db.transaction(["versions"], "readwrite"));
        const store =
        /* istanbul ignore next */
        (cov_piwwpze91().s[185]++, transaction.objectStore("versions"));
        /* istanbul ignore next */
        cov_piwwpze91().s[186]++;
        for (const version of toDelete) {
          /* istanbul ignore next */
          cov_piwwpze91().s[187]++;
          store.delete(version.id);
        }
      } else
      /* istanbul ignore next */
      {
        cov_piwwpze91().b[28][1]++;
      }
    }
  }
  constructor() {
    /* istanbul ignore next */
    cov_piwwpze91().f[61]++;
    cov_piwwpze91().s[188]++;
    this.db = null;
    /* istanbul ignore next */
    cov_piwwpze91().s[189]++;
    this.dbName = "FreeAgenticsExperiments";
    /* istanbul ignore next */
    cov_piwwpze91().s[190]++;
    this.version = 1;
  }
}
class IndexedDBStorage {
  constructor(dbName, version, options) {
    /* istanbul ignore next */
    cov_piwwpze91().f[62]++;
    cov_piwwpze91().s[191]++;
    this.db = null;
    /* istanbul ignore next */
    cov_piwwpze91().s[192]++;
    this.dbName = dbName;
    /* istanbul ignore next */
    cov_piwwpze91().s[193]++;
    this.version = version;
    /* istanbul ignore next */
    cov_piwwpze91().s[194]++;
    this.options =
    /* istanbul ignore next */
    (cov_piwwpze91().b[29][0]++, options) ||
    /* istanbul ignore next */
    (cov_piwwpze91().b[29][1]++, {});
  }
  async init() {
    /* istanbul ignore next */
    cov_piwwpze91().f[63]++;
    cov_piwwpze91().s[195]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_piwwpze91().f[64]++;
      const request =
      /* istanbul ignore next */
      (cov_piwwpze91().s[196]++, indexedDB.open(this.dbName, this.version));
      /* istanbul ignore next */
      cov_piwwpze91().s[197]++;
      request.onerror = () => {
        /* istanbul ignore next */
        cov_piwwpze91().f[65]++;
        cov_piwwpze91().s[198]++;
        return reject(request.error);
      };
      /* istanbul ignore next */
      cov_piwwpze91().s[199]++;
      request.onsuccess = () => {
        /* istanbul ignore next */
        cov_piwwpze91().f[66]++;
        cov_piwwpze91().s[200]++;
        this.db = request.result;
        /* istanbul ignore next */
        cov_piwwpze91().s[201]++;
        resolve();
      };
      /* istanbul ignore next */
      cov_piwwpze91().s[202]++;
      request.onupgradeneeded = event => {
        /* istanbul ignore next */
        cov_piwwpze91().f[67]++;
        const db =
        /* istanbul ignore next */
        (cov_piwwpze91().s[203]++, event.target.result);
        // Create default object stores
        /* istanbul ignore next */
        cov_piwwpze91().s[204]++;
        if (!db.objectStoreNames.contains("data")) {
          /* istanbul ignore next */
          cov_piwwpze91().b[30][0]++;
          cov_piwwpze91().s[205]++;
          db.createObjectStore("data", {
            keyPath: "id"
          });
        } else
        /* istanbul ignore next */
        {
          cov_piwwpze91().b[30][1]++;
        }
      };
    });
  }
  async store(storeName, data) {
    /* istanbul ignore next */
    cov_piwwpze91().f[68]++;
    cov_piwwpze91().s[206]++;
    if (!this.db) {
      /* istanbul ignore next */
      cov_piwwpze91().b[31][0]++;
      cov_piwwpze91().s[207]++;
      await this.init();
    } else
    /* istanbul ignore next */
    {
      cov_piwwpze91().b[31][1]++;
    }
    cov_piwwpze91().s[208]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_piwwpze91().f[69]++;
      const transaction =
      /* istanbul ignore next */
      (cov_piwwpze91().s[209]++, this.db.transaction([storeName], "readwrite"));
      const store =
      /* istanbul ignore next */
      (cov_piwwpze91().s[210]++, transaction.objectStore(storeName));
      const request =
      /* istanbul ignore next */
      (cov_piwwpze91().s[211]++, store.add(data));
      /* istanbul ignore next */
      cov_piwwpze91().s[212]++;
      request.onerror = () => {
        /* istanbul ignore next */
        cov_piwwpze91().f[70]++;
        cov_piwwpze91().s[213]++;
        if (request.error?.name === "QuotaExceededError") {
          /* istanbul ignore next */
          cov_piwwpze91().b[32][0]++;
          cov_piwwpze91().s[214]++;
          reject(new Error("Storage quota exceeded"));
        } else {
          /* istanbul ignore next */
          cov_piwwpze91().b[32][1]++;
          cov_piwwpze91().s[215]++;
          reject(request.error);
        }
      };
      /* istanbul ignore next */
      cov_piwwpze91().s[216]++;
      request.onsuccess = () => {
        /* istanbul ignore next */
        cov_piwwpze91().f[71]++;
        cov_piwwpze91().s[217]++;
        return resolve(
        /* istanbul ignore next */
        (cov_piwwpze91().b[33][0]++, data.id) ||
        /* istanbul ignore next */
        (cov_piwwpze91().b[33][1]++, request.result));
      };
    });
  }
  async get(storeName, key, options) {
    /* istanbul ignore next */
    cov_piwwpze91().f[72]++;
    cov_piwwpze91().s[218]++;
    if (!this.db) {
      /* istanbul ignore next */
      cov_piwwpze91().b[34][0]++;
      cov_piwwpze91().s[219]++;
      await this.init();
    } else
    /* istanbul ignore next */
    {
      cov_piwwpze91().b[34][1]++;
    }
    cov_piwwpze91().s[220]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_piwwpze91().f[73]++;
      const transaction =
      /* istanbul ignore next */
      (cov_piwwpze91().s[221]++, this.db.transaction([storeName], "readonly"));
      const store =
      /* istanbul ignore next */
      (cov_piwwpze91().s[222]++, transaction.objectStore(storeName));
      const request =
      /* istanbul ignore next */
      (cov_piwwpze91().s[223]++, store.get(key));
      /* istanbul ignore next */
      cov_piwwpze91().s[224]++;
      request.onerror = () => {
        /* istanbul ignore next */
        cov_piwwpze91().f[74]++;
        cov_piwwpze91().s[225]++;
        return reject(request.error);
      };
      /* istanbul ignore next */
      cov_piwwpze91().s[226]++;
      request.onsuccess = () => {
        /* istanbul ignore next */
        cov_piwwpze91().f[75]++;
        const result =
        /* istanbul ignore next */
        (cov_piwwpze91().s[227]++, request.result);
        // Check for expiration
        /* istanbul ignore next */
        cov_piwwpze91().s[228]++;
        if (
        /* istanbul ignore next */
        (cov_piwwpze91().b[36][0]++, result) &&
        /* istanbul ignore next */
        (cov_piwwpze91().b[36][1]++, result.expiresAt) &&
        /* istanbul ignore next */
        (cov_piwwpze91().b[36][2]++, result.expiresAt < Date.now())) {
          /* istanbul ignore next */
          cov_piwwpze91().b[35][0]++;
          cov_piwwpze91().s[229]++;
          this.delete(storeName, key);
          /* istanbul ignore next */
          cov_piwwpze91().s[230]++;
          resolve(null);
          /* istanbul ignore next */
          cov_piwwpze91().s[231]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_piwwpze91().b[35][1]++;
        }
        // Check permissions if provided
        cov_piwwpze91().s[232]++;
        if (
        /* istanbul ignore next */
        (cov_piwwpze91().b[38][0]++, options?.context) &&
        /* istanbul ignore next */
        (cov_piwwpze91().b[38][1]++, result?.permissions)) {
          /* istanbul ignore next */
          cov_piwwpze91().b[37][0]++;
          const userRoles =
          /* istanbul ignore next */
          (cov_piwwpze91().s[233]++,
          /* istanbul ignore next */
          (cov_piwwpze91().b[39][0]++, options.context.roles) ||
          /* istanbul ignore next */
          (cov_piwwpze91().b[39][1]++, []));
          const requiredPermissions =
          /* istanbul ignore next */
          (cov_piwwpze91().s[234]++,
          /* istanbul ignore next */
          (cov_piwwpze91().b[40][0]++, result.permissions) ||
          /* istanbul ignore next */
          (cov_piwwpze91().b[40][1]++, []));
          const hasPermission =
          /* istanbul ignore next */
          (cov_piwwpze91().s[235]++, requiredPermissions.some(perm => {
            /* istanbul ignore next */
            cov_piwwpze91().f[76]++;
            cov_piwwpze91().s[236]++;
            return userRoles.some(role => {
              /* istanbul ignore next */
              cov_piwwpze91().f[77]++;
              cov_piwwpze91().s[237]++;
              return perm.includes(role);
            });
          }));
          /* istanbul ignore next */
          cov_piwwpze91().s[238]++;
          if (!hasPermission) {
            /* istanbul ignore next */
            cov_piwwpze91().b[41][0]++;
            cov_piwwpze91().s[239]++;
            reject(new Error("Access denied"));
            /* istanbul ignore next */
            cov_piwwpze91().s[240]++;
            return;
          } else
          /* istanbul ignore next */
          {
            cov_piwwpze91().b[41][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_piwwpze91().b[37][1]++;
        }
        cov_piwwpze91().s[241]++;
        resolve(
        /* istanbul ignore next */
        (cov_piwwpze91().b[42][0]++, result) ||
        /* istanbul ignore next */
        (cov_piwwpze91().b[42][1]++, null));
      };
    });
  }
  async delete(storeName, key) {
    /* istanbul ignore next */
    cov_piwwpze91().f[78]++;
    cov_piwwpze91().s[242]++;
    if (!this.db) {
      /* istanbul ignore next */
      cov_piwwpze91().b[43][0]++;
      cov_piwwpze91().s[243]++;
      await this.init();
    } else
    /* istanbul ignore next */
    {
      cov_piwwpze91().b[43][1]++;
    }
    cov_piwwpze91().s[244]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_piwwpze91().f[79]++;
      const transaction =
      /* istanbul ignore next */
      (cov_piwwpze91().s[245]++, this.db.transaction([storeName], "readwrite"));
      const store =
      /* istanbul ignore next */
      (cov_piwwpze91().s[246]++, transaction.objectStore(storeName));
      const request =
      /* istanbul ignore next */
      (cov_piwwpze91().s[247]++, store.delete(key));
      /* istanbul ignore next */
      cov_piwwpze91().s[248]++;
      request.onerror = () => {
        /* istanbul ignore next */
        cov_piwwpze91().f[80]++;
        cov_piwwpze91().s[249]++;
        return reject(request.error);
      };
      /* istanbul ignore next */
      cov_piwwpze91().s[250]++;
      request.onsuccess = () => {
        /* istanbul ignore next */
        cov_piwwpze91().f[81]++;
        cov_piwwpze91().s[251]++;
        return resolve();
      };
    });
  }
  async batchStore(storeName, items) {
    /* istanbul ignore next */
    cov_piwwpze91().f[82]++;
    const results =
    /* istanbul ignore next */
    (cov_piwwpze91().s[252]++, []);
    /* istanbul ignore next */
    cov_piwwpze91().s[253]++;
    for (const item of items) {
      /* istanbul ignore next */
      cov_piwwpze91().s[254]++;
      try {
        const result =
        /* istanbul ignore next */
        (cov_piwwpze91().s[255]++, await this.store(storeName, item));
        /* istanbul ignore next */
        cov_piwwpze91().s[256]++;
        results.push(result);
      } catch (error) {
        /* istanbul ignore next */
        cov_piwwpze91().s[257]++;
        results.push("error");
      }
    }
    /* istanbul ignore next */
    cov_piwwpze91().s[258]++;
    return results;
  }
  async storeSecure(storeName, data) {
    /* istanbul ignore next */
    cov_piwwpze91().f[83]++;
    // Mock encryption by adding encrypted flag
    const encryptedData =
    /* istanbul ignore next */
    (cov_piwwpze91().s[259]++, {
      ...data,
      encrypted: true,
      data: btoa(JSON.stringify(data))
    });
    /* istanbul ignore next */
    cov_piwwpze91().s[260]++;
    return this.store(storeName, encryptedData);
  }
}
const experimentStorage =
/* istanbul ignore next */
(cov_piwwpze91().s[261]++, new ExperimentStorageDB());
// Initialize on module load
/* istanbul ignore next */
cov_piwwpze91().s[262]++;
experimentStorage.init().catch(console.error);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
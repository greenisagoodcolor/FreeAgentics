7eb12f5c4537474c95f0dccf1002acbb
"use client";
"use strict";

/* istanbul ignore next */
function cov_1i1gfublhn() {
  var path = "/Users/matthewmoroney/builds/FreeAgentics/web/components/markov-blanket-dashboard.tsx";
  var hash = "5a1551c498a8dedf93e3f3e55c1b88e0e8d04ed3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewmoroney/builds/FreeAgentics/web/components/markov-blanket-dashboard.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 38
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 24
        }
      },
      "6": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 48
        }
      },
      "7": {
        start: {
          line: 21,
          column: 29
        },
        end: {
          line: 21,
          column: 72
        }
      },
      "8": {
        start: {
          line: 22,
          column: 14
        },
        end: {
          line: 22,
          column: 34
        }
      },
      "9": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "10": {
        start: {
          line: 24,
          column: 15
        },
        end: {
          line: 24,
          column: 36
        }
      },
      "11": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 38
        }
      },
      "12": {
        start: {
          line: 26,
          column: 15
        },
        end: {
          line: 26,
          column: 36
        }
      },
      "13": {
        start: {
          line: 27,
          column: 15
        },
        end: {
          line: 27,
          column: 36
        }
      },
      "14": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 38
        }
      },
      "15": {
        start: {
          line: 29,
          column: 15
        },
        end: {
          line: 29,
          column: 36
        }
      },
      "16": {
        start: {
          line: 30,
          column: 14
        },
        end: {
          line: 30,
          column: 34
        }
      },
      "17": {
        start: {
          line: 31,
          column: 20
        },
        end: {
          line: 31,
          column: 47
        }
      },
      "18": {
        start: {
          line: 32,
          column: 21
        },
        end: {
          line: 32,
          column: 44
        }
      },
      "19": {
        start: {
          line: 33,
          column: 36
        },
        end: {
          line: 33,
          column: 77
        }
      },
      "20": {
        start: {
          line: 34,
          column: 35
        },
        end: {
          line: 34,
          column: 80
        }
      },
      "21": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 51
        }
      },
      "22": {
        start: {
          line: 36,
          column: 39
        },
        end: {
          line: 36,
          column: 51
        }
      },
      "23": {
        start: {
          line: 37,
          column: 28
        },
        end: {
          line: 37,
          column: 41
        }
      },
      "24": {
        start: {
          line: 38,
          column: 27
        },
        end: {
          line: 38,
          column: 40
        }
      },
      "25": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 41,
          column: 20
        }
      },
      "26": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 66
        }
      },
      "27": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "28": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 19
        }
      },
      "29": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "30": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 50,
          column: 10
        }
      },
      "31": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 53
        }
      },
      "32": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "33": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 30
        }
      },
      "34": {
        start: {
          line: 56,
          column: 17
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "35": {
        start: {
          line: 59,
          column: 32
        },
        end: {
          line: 59,
          column: 88
        }
      },
      "36": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 69,
          column: 5
        }
      },
      "37": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "38": {
        start: {
          line: 62,
          column: 23
        },
        end: {
          line: 62,
          column: 95
        }
      },
      "39": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 67,
          column: 13
        }
      },
      "40": {
        start: {
          line: 64,
          column: 16
        },
        end: {
          line: 64,
          column: 57
        }
      },
      "41": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 39
        }
      },
      "42": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 25
        }
      },
      "43": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 73,
          column: 5
        }
      },
      "44": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 31
        }
      },
      "45": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 74,
          column: 18
        }
      },
      "46": {
        start: {
          line: 76,
          column: 31
        },
        end: {
          line: 892,
          column: 1
        }
      },
      "47": {
        start: {
          line: 78,
          column: 50
        },
        end: {
          line: 78,
          column: 96
        }
      },
      "48": {
        start: {
          line: 79,
          column: 40
        },
        end: {
          line: 79,
          column: 64
        }
      },
      "49": {
        start: {
          line: 80,
          column: 50
        },
        end: {
          line: 80,
          column: 96
        }
      },
      "50": {
        start: {
          line: 81,
          column: 36
        },
        end: {
          line: 81,
          column: 60
        }
      },
      "51": {
        start: {
          line: 82,
          column: 60
        },
        end: {
          line: 82,
          column: 101
        }
      },
      "52": {
        start: {
          line: 83,
          column: 56
        },
        end: {
          line: 83,
          column: 83
        }
      },
      "53": {
        start: {
          line: 84,
          column: 70
        },
        end: {
          line: 84,
          column: 97
        }
      },
      "54": {
        start: {
          line: 85,
          column: 46
        },
        end: {
          line: 85,
          column: 72
        }
      },
      "55": {
        start: {
          line: 87,
          column: 50
        },
        end: {
          line: 87,
          column: 74
        }
      },
      "56": {
        start: {
          line: 88,
          column: 44
        },
        end: {
          line: 88,
          column: 68
        }
      },
      "57": {
        start: {
          line: 89,
          column: 48
        },
        end: {
          line: 89,
          column: 72
        }
      },
      "58": {
        start: {
          line: 90,
          column: 56
        },
        end: {
          line: 95,
          column: 6
        }
      },
      "59": {
        start: {
          line: 97,
          column: 25
        },
        end: {
          line: 119,
          column: 6
        }
      },
      "60": {
        start: {
          line: 97,
          column: 50
        },
        end: {
          line: 116,
          column: 9
        }
      },
      "61": {
        start: {
          line: 121,
          column: 314
        },
        end: {
          line: 129,
          column: 6
        }
      },
      "62": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 139,
          column: 11
        }
      },
      "63": {
        start: {
          line: 134,
          column: 27
        },
        end: {
          line: 137,
          column: 37
        }
      },
      "64": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 138,
          column: 26
        }
      },
      "65": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 194,
          column: 9
        }
      },
      "66": {
        start: {
          line: 143,
          column: 16
        },
        end: {
          line: 148,
          column: 17
        }
      },
      "67": {
        start: {
          line: 144,
          column: 20
        },
        end: {
          line: 147,
          column: 28
        }
      },
      "68": {
        start: {
          line: 144,
          column: 48
        },
        end: {
          line: 147,
          column: 25
        }
      },
      "69": {
        start: {
          line: 149,
          column: 16
        },
        end: {
          line: 154,
          column: 17
        }
      },
      "70": {
        start: {
          line: 150,
          column: 20
        },
        end: {
          line: 153,
          column: 28
        }
      },
      "71": {
        start: {
          line: 150,
          column: 45
        },
        end: {
          line: 153,
          column: 25
        }
      },
      "72": {
        start: {
          line: 155,
          column: 16
        },
        end: {
          line: 160,
          column: 17
        }
      },
      "73": {
        start: {
          line: 156,
          column: 20
        },
        end: {
          line: 159,
          column: 28
        }
      },
      "74": {
        start: {
          line: 156,
          column: 47
        },
        end: {
          line: 159,
          column: 25
        }
      },
      "75": {
        start: {
          line: 161,
          column: 16
        },
        end: {
          line: 161,
          column: 22
        }
      },
      "76": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 170,
          column: 24
        }
      },
      "77": {
        start: {
          line: 163,
          column: 41
        },
        end: {
          line: 170,
          column: 21
        }
      },
      "78": {
        start: {
          line: 171,
          column: 16
        },
        end: {
          line: 171,
          column: 22
        }
      },
      "79": {
        start: {
          line: 174,
          column: 16
        },
        end: {
          line: 179,
          column: 17
        }
      },
      "80": {
        start: {
          line: 175,
          column: 20
        },
        end: {
          line: 178,
          column: 23
        }
      },
      "81": {
        start: {
          line: 181,
          column: 16
        },
        end: {
          line: 192,
          column: 17
        }
      },
      "82": {
        start: {
          line: 183,
          column: 41
        },
        end: {
          line: 183,
          column: 97
        }
      },
      "83": {
        start: {
          line: 184,
          column: 39
        },
        end: {
          line: 184,
          column: 70
        }
      },
      "84": {
        start: {
          line: 185,
          column: 37
        },
        end: {
          line: 185,
          column: 62
        }
      },
      "85": {
        start: {
          line: 186,
          column: 20
        },
        end: {
          line: 186,
          column: 49
        }
      },
      "86": {
        start: {
          line: 187,
          column: 20
        },
        end: {
          line: 187,
          column: 63
        }
      },
      "87": {
        start: {
          line: 188,
          column: 20
        },
        end: {
          line: 188,
          column: 87
        }
      },
      "88": {
        start: {
          line: 189,
          column: 20
        },
        end: {
          line: 189,
          column: 80
        }
      },
      "89": {
        start: {
          line: 190,
          column: 20
        },
        end: {
          line: 190,
          column: 39
        }
      },
      "90": {
        start: {
          line: 191,
          column: 20
        },
        end: {
          line: 191,
          column: 68
        }
      },
      "91": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 193,
          column: 22
        }
      },
      "92": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 197,
          column: 62
        }
      },
      "93": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 201,
          column: 11
        }
      },
      "94": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 35
        }
      },
      "95": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 205,
          column: 9
        }
      },
      "96": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 204,
          column: 30
        }
      },
      "97": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 207,
          column: 30
        }
      },
      "98": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 208,
          column: 29
        }
      },
      "99": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 211,
          column: 67
        }
      },
      "100": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 214,
          column: 64
        }
      },
      "101": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 217,
          column: 63
        }
      },
      "102": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 224,
          column: 9
        }
      },
      "103": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 223,
          column: 21
        }
      },
      "104": {
        start: {
          line: 222,
          column: 16
        },
        end: {
          line: 222,
          column: 81
        }
      },
      "105": {
        start: {
          line: 227,
          column: 27
        },
        end: {
          line: 244,
          column: 6
        }
      },
      "106": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 238,
          column: 9
        }
      },
      "107": {
        start: {
          line: 229,
          column: 28
        },
        end: {
          line: 229,
          column: 45
        }
      },
      "108": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 233,
          column: 20
        }
      },
      "109": {
        start: {
          line: 230,
          column: 39
        },
        end: {
          line: 233,
          column: 18
        }
      },
      "110": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 234,
          column: 30
        }
      },
      "111": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 237,
          column: 13
        }
      },
      "112": {
        start: {
          line: 236,
          column: 16
        },
        end: {
          line: 236,
          column: 39
        }
      },
      "113": {
        start: {
          line: 245,
          column: 30
        },
        end: {
          line: 286,
          column: 6
        }
      },
      "114": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 250,
          column: 11
        }
      },
      "115": {
        start: {
          line: 247,
          column: 27
        },
        end: {
          line: 247,
          column: 40
        }
      },
      "116": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 248,
          column: 35
        }
      },
      "117": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 249,
          column: 26
        }
      },
      "118": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 253,
          column: 9
        }
      },
      "119": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 252,
          column: 37
        }
      },
      "120": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 261,
          column: 11
        }
      },
      "121": {
        start: {
          line: 256,
          column: 28
        },
        end: {
          line: 258,
          column: 13
        }
      },
      "122": {
        start: {
          line: 259,
          column: 12
        },
        end: {
          line: 259,
          column: 36
        }
      },
      "123": {
        start: {
          line: 260,
          column: 12
        },
        end: {
          line: 260,
          column: 27
        }
      },
      "124": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 268,
          column: 11
        }
      },
      "125": {
        start: {
          line: 263,
          column: 28
        },
        end: {
          line: 265,
          column: 13
        }
      },
      "126": {
        start: {
          line: 266,
          column: 12
        },
        end: {
          line: 266,
          column: 36
        }
      },
      "127": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 267,
          column: 27
        }
      },
      "128": {
        start: {
          line: 269,
          column: 8
        },
        end: {
          line: 275,
          column: 11
        }
      },
      "129": {
        start: {
          line: 270,
          column: 28
        },
        end: {
          line: 272,
          column: 13
        }
      },
      "130": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 273,
          column: 36
        }
      },
      "131": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 274,
          column: 27
        }
      },
      "132": {
        start: {
          line: 277,
          column: 8
        },
        end: {
          line: 280,
          column: 9
        }
      },
      "133": {
        start: {
          line: 278,
          column: 36
        },
        end: {
          line: 278,
          column: 92
        }
      },
      "134": {
        start: {
          line: 278,
          column: 77
        },
        end: {
          line: 278,
          column: 91
        }
      },
      "135": {
        start: {
          line: 279,
          column: 12
        },
        end: {
          line: 279,
          column: 57
        }
      },
      "136": {
        start: {
          line: 288,
          column: 42
        },
        end: {
          line: 293,
          column: 10
        }
      },
      "137": {
        start: {
          line: 289,
          column: 8
        },
        end: {
          line: 292,
          column: 16
        }
      },
      "138": {
        start: {
          line: 289,
          column: 39
        },
        end: {
          line: 292,
          column: 13
        }
      },
      "139": {
        start: {
          line: 295,
          column: 39
        },
        end: {
          line: 298,
          column: 10
        }
      },
      "140": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 297,
          column: 61
        }
      },
      "141": {
        start: {
          line: 300,
          column: 29
        },
        end: {
          line: 326,
          column: 6
        }
      },
      "142": {
        start: {
          line: 301,
          column: 27
        },
        end: {
          line: 308,
          column: 9
        }
      },
      "143": {
        start: {
          line: 309,
          column: 21
        },
        end: {
          line: 313,
          column: 10
        }
      },
      "144": {
        start: {
          line: 314,
          column: 20
        },
        end: {
          line: 314,
          column: 45
        }
      },
      "145": {
        start: {
          line: 315,
          column: 18
        },
        end: {
          line: 315,
          column: 45
        }
      },
      "146": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 316,
          column: 21
        }
      },
      "147": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 317,
          column: 62
        }
      },
      "148": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 318,
          column: 18
        }
      },
      "149": {
        start: {
          line: 319,
          column: 8
        },
        end: {
          line: 319,
          column: 33
        }
      },
      "150": {
        start: {
          line: 328,
          column: 4
        },
        end: {
          line: 334,
          column: 7
        }
      },
      "151": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 331,
          column: 9
        }
      },
      "152": {
        start: {
          line: 330,
          column: 12
        },
        end: {
          line: 330,
          column: 45
        }
      },
      "153": {
        start: {
          line: 336,
          column: 4
        },
        end: {
          line: 344,
          column: 7
        }
      },
      "154": {
        start: {
          line: 337,
          column: 8
        },
        end: {
          line: 339,
          column: 9
        }
      },
      "155": {
        start: {
          line: 338,
          column: 12
        },
        end: {
          line: 338,
          column: 45
        }
      },
      "156": {
        start: {
          line: 346,
          column: 4
        },
        end: {
          line: 359,
          column: 7
        }
      },
      "157": {
        start: {
          line: 347,
          column: 8
        },
        end: {
          line: 347,
          column: 33
        }
      },
      "158": {
        start: {
          line: 347,
          column: 26
        },
        end: {
          line: 347,
          column: 33
        }
      },
      "159": {
        start: {
          line: 348,
          column: 25
        },
        end: {
          line: 352,
          column: 17
        }
      },
      "160": {
        start: {
          line: 349,
          column: 12
        },
        end: {
          line: 349,
          column: 34
        }
      },
      "161": {
        start: {
          line: 350,
          column: 12
        },
        end: {
          line: 350,
          column: 33
        }
      },
      "162": {
        start: {
          line: 351,
          column: 12
        },
        end: {
          line: 351,
          column: 19
        }
      },
      "163": {
        start: {
          line: 353,
          column: 8
        },
        end: {
          line: 353,
          column: 43
        }
      },
      "164": {
        start: {
          line: 353,
          column: 19
        },
        end: {
          line: 353,
          column: 42
        }
      },
      "165": {
        start: {
          line: 361,
          column: 35
        },
        end: {
          line: 361,
          column: 92
        }
      },
      "166": {
        start: {
          line: 362,
          column: 32
        },
        end: {
          line: 362,
          column: 86
        }
      },
      "167": {
        start: {
          line: 363,
          column: 33
        },
        end: {
          line: 363,
          column: 89
        }
      },
      "168": {
        start: {
          line: 364,
          column: 35
        },
        end: {
          line: 377,
          column: 11
        }
      },
      "169": {
        start: {
          line: 364,
          column: 58
        },
        end: {
          line: 364,
          column: 88
        }
      },
      "170": {
        start: {
          line: 364,
          column: 107
        },
        end: {
          line: 377,
          column: 9
        }
      },
      "171": {
        start: {
          line: 379,
          column: 27
        },
        end: {
          line: 404,
          column: 5
        }
      },
      "172": {
        start: {
          line: 405,
          column: 24
        },
        end: {
          line: 414,
          column: 5
        }
      },
      "173": {
        start: {
          line: 415,
          column: 25
        },
        end: {
          line: 425,
          column: 5
        }
      },
      "174": {
        start: {
          line: 426,
          column: 4
        },
        end: {
          line: 891,
          column: 7
        }
      },
      "175": {
        start: {
          line: 542,
          column: 63
        },
        end: {
          line: 542,
          column: 92
        }
      },
      "176": {
        start: {
          line: 543,
          column: 65
        },
        end: {
          line: 543,
          column: 102
        }
      },
      "177": {
        start: {
          line: 556,
          column: 111
        },
        end: {
          line: 578,
          column: 59
        }
      },
      "178": {
        start: {
          line: 574,
          column: 73
        },
        end: {
          line: 574,
          column: 99
        }
      },
      "179": {
        start: {
          line: 591,
          column: 115
        },
        end: {
          line: 594,
          column: 63
        }
      },
      "180": {
        start: {
          line: 658,
          column: 110
        },
        end: {
          line: 694,
          column: 57
        }
      },
      "181": {
        start: {
          line: 715,
          column: 116
        },
        end: {
          line: 761,
          column: 57
        }
      },
      "182": {
        start: {
          line: 877,
          column: 67
        },
        end: {
          line: 877,
          column: 117
        }
      },
      "183": {
        start: {
          line: 893,
          column: 17
        },
        end: {
          line: 893,
          column: 39
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 28
          },
          end: {
            line: 13,
            column: 29
          }
        },
        loc: {
          start: {
            line: 13,
            column: 39
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 13
          },
          end: {
            line: 16,
            column: 14
          }
        },
        loc: {
          start: {
            line: 16,
            column: 24
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 35,
            column: 9
          },
          end: {
            line: 35,
            column: 33
          }
        },
        loc: {
          start: {
            line: 35,
            column: 47
          },
          end: {
            line: 42,
            column: 1
          }
        },
        line: 35
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 39,
            column: 39
          },
          end: {
            line: 39,
            column: 40
          }
        },
        loc: {
          start: {
            line: 39,
            column: 61
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 39
      },
      "5": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 43,
            column: 9
          },
          end: {
            line: 43,
            column: 34
          }
        },
        loc: {
          start: {
            line: 43,
            column: 53
          },
          end: {
            line: 75,
            column: 1
          }
        },
        line: 43
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 76,
            column: 31
          },
          end: {
            line: 76,
            column: 32
          }
        },
        loc: {
          start: {
            line: 76,
            column: 145
          },
          end: {
            line: 892,
            column: 1
          }
        },
        line: 76
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 97,
            column: 45
          },
          end: {
            line: 97,
            column: 46
          }
        },
        loc: {
          start: {
            line: 97,
            column: 50
          },
          end: {
            line: 116,
            column: 9
          }
        },
        line: 97
      },
      "8": {
        name: "handleMarkovBlanketEvent",
        decl: {
          start: {
            line: 131,
            column: 13
          },
          end: {
            line: 131,
            column: 37
          }
        },
        loc: {
          start: {
            line: 131,
            column: 45
          },
          end: {
            line: 195,
            column: 5
          }
        },
        line: 131
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 133,
            column: 20
          },
          end: {
            line: 133,
            column: 21
          }
        },
        loc: {
          start: {
            line: 133,
            column: 28
          },
          end: {
            line: 139,
            column: 9
          }
        },
        line: 133
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 144,
            column: 39
          },
          end: {
            line: 144,
            column: 40
          }
        },
        loc: {
          start: {
            line: 144,
            column: 48
          },
          end: {
            line: 147,
            column: 25
          }
        },
        line: 144
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 150,
            column: 36
          },
          end: {
            line: 150,
            column: 37
          }
        },
        loc: {
          start: {
            line: 150,
            column: 45
          },
          end: {
            line: 153,
            column: 25
          }
        },
        line: 150
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 156,
            column: 38
          },
          end: {
            line: 156,
            column: 39
          }
        },
        loc: {
          start: {
            line: 156,
            column: 47
          },
          end: {
            line: 159,
            column: 25
          }
        },
        line: 156
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 163,
            column: 32
          },
          end: {
            line: 163,
            column: 33
          }
        },
        loc: {
          start: {
            line: 163,
            column: 41
          },
          end: {
            line: 170,
            column: 21
          }
        },
        line: 163
      },
      "14": {
        name: "handleWebSocketConnect",
        decl: {
          start: {
            line: 196,
            column: 13
          },
          end: {
            line: 196,
            column: 35
          }
        },
        loc: {
          start: {
            line: 196,
            column: 38
          },
          end: {
            line: 209,
            column: 5
          }
        },
        line: 196
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 199,
            column: 32
          },
          end: {
            line: 199,
            column: 33
          }
        },
        loc: {
          start: {
            line: 199,
            column: 43
          },
          end: {
            line: 201,
            column: 9
          }
        },
        line: 199
      },
      "16": {
        name: "handleWebSocketDisconnect",
        decl: {
          start: {
            line: 210,
            column: 13
          },
          end: {
            line: 210,
            column: 38
          }
        },
        loc: {
          start: {
            line: 210,
            column: 41
          },
          end: {
            line: 212,
            column: 5
          }
        },
        line: 210
      },
      "17": {
        name: "handleWebSocketError",
        decl: {
          start: {
            line: 213,
            column: 13
          },
          end: {
            line: 213,
            column: 33
          }
        },
        loc: {
          start: {
            line: 213,
            column: 41
          },
          end: {
            line: 215,
            column: 5
          }
        },
        line: 213
      },
      "18": {
        name: "handleBoundaryViolation",
        decl: {
          start: {
            line: 216,
            column: 13
          },
          end: {
            line: 216,
            column: 36
          }
        },
        loc: {
          start: {
            line: 216,
            column: 48
          },
          end: {
            line: 225,
            column: 5
          }
        },
        line: 216
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 220,
            column: 23
          },
          end: {
            line: 220,
            column: 24
          }
        },
        loc: {
          start: {
            line: 220,
            column: 27
          },
          end: {
            line: 223,
            column: 13
          }
        },
        line: 220
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 227,
            column: 51
          },
          end: {
            line: 227,
            column: 52
          }
        },
        loc: {
          start: {
            line: 227,
            column: 55
          },
          end: {
            line: 239,
            column: 5
          }
        },
        line: 227
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 230,
            column: 31
          },
          end: {
            line: 230,
            column: 32
          }
        },
        loc: {
          start: {
            line: 230,
            column: 39
          },
          end: {
            line: 233,
            column: 18
          }
        },
        line: 230
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 245,
            column: 54
          },
          end: {
            line: 245,
            column: 55
          }
        },
        loc: {
          start: {
            line: 245,
            column: 65
          },
          end: {
            line: 281,
            column: 5
          }
        },
        line: 245
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 246,
            column: 27
          },
          end: {
            line: 246,
            column: 28
          }
        },
        loc: {
          start: {
            line: 246,
            column: 35
          },
          end: {
            line: 250,
            column: 9
          }
        },
        line: 246
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 255,
            column: 27
          },
          end: {
            line: 255,
            column: 28
          }
        },
        loc: {
          start: {
            line: 255,
            column: 35
          },
          end: {
            line: 261,
            column: 9
          }
        },
        line: 255
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 262,
            column: 24
          },
          end: {
            line: 262,
            column: 25
          }
        },
        loc: {
          start: {
            line: 262,
            column: 32
          },
          end: {
            line: 268,
            column: 9
          }
        },
        line: 262
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 269,
            column: 26
          },
          end: {
            line: 269,
            column: 27
          }
        },
        loc: {
          start: {
            line: 269,
            column: 34
          },
          end: {
            line: 275,
            column: 9
          }
        },
        line: 269
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 278,
            column: 71
          },
          end: {
            line: 278,
            column: 72
          }
        },
        loc: {
          start: {
            line: 278,
            column: 77
          },
          end: {
            line: 278,
            column: 91
          }
        },
        line: 278
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 288,
            column: 66
          },
          end: {
            line: 288,
            column: 67
          }
        },
        loc: {
          start: {
            line: 288,
            column: 86
          },
          end: {
            line: 293,
            column: 5
          }
        },
        line: 288
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 289,
            column: 30
          },
          end: {
            line: 289,
            column: 31
          }
        },
        loc: {
          start: {
            line: 289,
            column: 39
          },
          end: {
            line: 292,
            column: 13
          }
        },
        line: 289
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 295,
            column: 63
          },
          end: {
            line: 295,
            column: 64
          }
        },
        loc: {
          start: {
            line: 295,
            column: 78
          },
          end: {
            line: 298,
            column: 5
          }
        },
        line: 295
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 300,
            column: 53
          },
          end: {
            line: 300,
            column: 54
          }
        },
        loc: {
          start: {
            line: 300,
            column: 57
          },
          end: {
            line: 320,
            column: 5
          }
        },
        line: 300
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 328,
            column: 26
          },
          end: {
            line: 328,
            column: 27
          }
        },
        loc: {
          start: {
            line: 328,
            column: 30
          },
          end: {
            line: 332,
            column: 5
          }
        },
        line: 328
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 336,
            column: 26
          },
          end: {
            line: 336,
            column: 27
          }
        },
        loc: {
          start: {
            line: 336,
            column: 30
          },
          end: {
            line: 340,
            column: 5
          }
        },
        line: 336
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 346,
            column: 26
          },
          end: {
            line: 346,
            column: 27
          }
        },
        loc: {
          start: {
            line: 346,
            column: 30
          },
          end: {
            line: 354,
            column: 5
          }
        },
        line: 346
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 348,
            column: 37
          },
          end: {
            line: 348,
            column: 38
          }
        },
        loc: {
          start: {
            line: 348,
            column: 41
          },
          end: {
            line: 352,
            column: 9
          }
        },
        line: 348
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 353,
            column: 15
          },
          end: {
            line: 353,
            column: 16
          }
        },
        loc: {
          start: {
            line: 353,
            column: 19
          },
          end: {
            line: 353,
            column: 42
          }
        },
        line: 353
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 364,
            column: 53
          },
          end: {
            line: 364,
            column: 54
          }
        },
        loc: {
          start: {
            line: 364,
            column: 58
          },
          end: {
            line: 364,
            column: 88
          }
        },
        line: 364
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 364,
            column: 94
          },
          end: {
            line: 364,
            column: 95
          }
        },
        loc: {
          start: {
            line: 364,
            column: 107
          },
          end: {
            line: 377,
            column: 9
          }
        },
        line: 364
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 542,
            column: 58
          },
          end: {
            line: 542,
            column: 59
          }
        },
        loc: {
          start: {
            line: 542,
            column: 63
          },
          end: {
            line: 542,
            column: 92
          }
        },
        line: 542
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 543,
            column: 60
          },
          end: {
            line: 543,
            column: 61
          }
        },
        loc: {
          start: {
            line: 543,
            column: 65
          },
          end: {
            line: 543,
            column: 102
          }
        },
        line: 543
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 556,
            column: 86
          },
          end: {
            line: 556,
            column: 87
          }
        },
        loc: {
          start: {
            line: 556,
            column: 111
          },
          end: {
            line: 578,
            column: 59
          }
        },
        line: 556
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 574,
            column: 69
          },
          end: {
            line: 574,
            column: 70
          }
        },
        loc: {
          start: {
            line: 574,
            column: 73
          },
          end: {
            line: 574,
            column: 99
          }
        },
        line: 574
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 591,
            column: 90
          },
          end: {
            line: 591,
            column: 91
          }
        },
        loc: {
          start: {
            line: 591,
            column: 115
          },
          end: {
            line: 594,
            column: 63
          }
        },
        line: 591
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 658,
            column: 80
          },
          end: {
            line: 658,
            column: 81
          }
        },
        loc: {
          start: {
            line: 658,
            column: 110
          },
          end: {
            line: 694,
            column: 57
          }
        },
        line: 658
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 715,
            column: 82
          },
          end: {
            line: 715,
            column: 83
          }
        },
        loc: {
          start: {
            line: 715,
            column: 116
          },
          end: {
            line: 761,
            column: 57
          }
        },
        line: 715
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 877,
            column: 62
          },
          end: {
            line: 877,
            column: 63
          }
        },
        loc: {
          start: {
            line: 877,
            column: 67
          },
          end: {
            line: 877,
            column: 117
          }
        },
        line: 877
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "1": {
        loc: {
          start: {
            line: 40,
            column: 15
          },
          end: {
            line: 40,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 40,
            column: 29
          },
          end: {
            line: 40,
            column: 45
          }
        }, {
          start: {
            line: 40,
            column: 48
          },
          end: {
            line: 40,
            column: 65
          }
        }],
        line: 40
      },
      "2": {
        loc: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "3": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 20
          }
        }, {
          start: {
            line: 44,
            column: 24
          },
          end: {
            line: 44,
            column: 27
          }
        }, {
          start: {
            line: 44,
            column: 31
          },
          end: {
            line: 44,
            column: 45
          }
        }],
        line: 44
      },
      "4": {
        loc: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "5": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 47,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 47,
            column: 20
          }
        }, {
          start: {
            line: 47,
            column: 24
          },
          end: {
            line: 47,
            column: 47
          }
        }, {
          start: {
            line: 47,
            column: 51
          },
          end: {
            line: 47,
            column: 76
          }
        }],
        line: 47
      },
      "6": {
        loc: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "7": {
        loc: {
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 53,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 53,
            column: 13
          }
        }, {
          start: {
            line: 53,
            column: 17
          },
          end: {
            line: 53,
            column: 31
          }
        }],
        line: 53
      },
      "8": {
        loc: {
          start: {
            line: 59,
            column: 32
          },
          end: {
            line: 59,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 32
          },
          end: {
            line: 59,
            column: 53
          }
        }, {
          start: {
            line: 59,
            column: 57
          },
          end: {
            line: 59,
            column: 88
          }
        }],
        line: 59
      },
      "9": {
        loc: {
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "10": {
        loc: {
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 61,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 61,
            column: 29
          }
        }, {
          start: {
            line: 61,
            column: 33
          },
          end: {
            line: 61,
            column: 79
          }
        }],
        line: 61
      },
      "11": {
        loc: {
          start: {
            line: 62,
            column: 23
          },
          end: {
            line: 62,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 62,
            column: 47
          },
          end: {
            line: 62,
            column: 88
          }
        }, {
          start: {
            line: 62,
            column: 91
          },
          end: {
            line: 62,
            column: 95
          }
        }],
        line: 62
      },
      "12": {
        loc: {
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 67,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 67,
            column: 13
          }
        }, {
          start: {
            line: 65,
            column: 19
          },
          end: {
            line: 67,
            column: 13
          }
        }],
        line: 63
      },
      "13": {
        loc: {
          start: {
            line: 63,
            column: 16
          },
          end: {
            line: 63,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 16
          },
          end: {
            line: 63,
            column: 20
          }
        }, {
          start: {
            line: 63,
            column: 25
          },
          end: {
            line: 63,
            column: 33
          }
        }, {
          start: {
            line: 63,
            column: 37
          },
          end: {
            line: 63,
            column: 45
          }
        }],
        line: 63
      },
      "14": {
        loc: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "15": {
        loc: {
          start: {
            line: 76,
            column: 34
          },
          end: {
            line: 76,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 76,
            column: 52
          },
          end: {
            line: 76,
            column: 54
          }
        }],
        line: 76
      },
      "16": {
        loc: {
          start: {
            line: 76,
            column: 56
          },
          end: {
            line: 76,
            column: 82
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 76,
            column: 78
          },
          end: {
            line: 76,
            column: 82
          }
        }],
        line: 76
      },
      "17": {
        loc: {
          start: {
            line: 76,
            column: 84
          },
          end: {
            line: 76,
            column: 112
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 76,
            column: 107
          },
          end: {
            line: 76,
            column: 112
          }
        }],
        line: 76
      },
      "18": {
        loc: {
          start: {
            line: 76,
            column: 114
          },
          end: {
            line: 76,
            column: 140
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 76,
            column: 136
          },
          end: {
            line: 76,
            column: 140
          }
        }],
        line: 76
      },
      "19": {
        loc: {
          start: {
            line: 78,
            column: 71
          },
          end: {
            line: 78,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 71
          },
          end: {
            line: 78,
            column: 89
          }
        }, {
          start: {
            line: 78,
            column: 93
          },
          end: {
            line: 78,
            column: 95
          }
        }],
        line: 78
      },
      "20": {
        loc: {
          start: {
            line: 141,
            column: 8
          },
          end: {
            line: 194,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 161,
            column: 22
          }
        }, {
          start: {
            line: 162,
            column: 12
          },
          end: {
            line: 171,
            column: 22
          }
        }, {
          start: {
            line: 172,
            column: 12
          },
          end: {
            line: 193,
            column: 22
          }
        }],
        line: 141
      },
      "21": {
        loc: {
          start: {
            line: 143,
            column: 16
          },
          end: {
            line: 148,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 16
          },
          end: {
            line: 148,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 143
      },
      "22": {
        loc: {
          start: {
            line: 149,
            column: 16
          },
          end: {
            line: 154,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 16
          },
          end: {
            line: 154,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 149
      },
      "23": {
        loc: {
          start: {
            line: 155,
            column: 16
          },
          end: {
            line: 160,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 16
          },
          end: {
            line: 160,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 155
      },
      "24": {
        loc: {
          start: {
            line: 174,
            column: 16
          },
          end: {
            line: 179,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 16
          },
          end: {
            line: 179,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "25": {
        loc: {
          start: {
            line: 174,
            column: 20
          },
          end: {
            line: 174,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 174,
            column: 20
          },
          end: {
            line: 174,
            column: 40
          }
        }, {
          start: {
            line: 174,
            column: 44
          },
          end: {
            line: 174,
            column: 68
          }
        }],
        line: 174
      },
      "26": {
        loc: {
          start: {
            line: 181,
            column: 16
          },
          end: {
            line: 192,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 16
          },
          end: {
            line: 192,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 181
      },
      "27": {
        loc: {
          start: {
            line: 183,
            column: 46
          },
          end: {
            line: 183,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 183,
            column: 46
          },
          end: {
            line: 183,
            column: 65
          }
        }, {
          start: {
            line: 183,
            column: 69
          },
          end: {
            line: 183,
            column: 94
          }
        }],
        line: 183
      },
      "28": {
        loc: {
          start: {
            line: 203,
            column: 8
          },
          end: {
            line: 205,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 8
          },
          end: {
            line: 205,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "29": {
        loc: {
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 224,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 224,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 219
      },
      "30": {
        loc: {
          start: {
            line: 228,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 228,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 228
      },
      "31": {
        loc: {
          start: {
            line: 228,
            column: 12
          },
          end: {
            line: 228,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 228,
            column: 12
          },
          end: {
            line: 228,
            column: 29
          }
        }, {
          start: {
            line: 228,
            column: 33
          },
          end: {
            line: 228,
            column: 72
          }
        }],
        line: 228
      },
      "32": {
        loc: {
          start: {
            line: 235,
            column: 12
          },
          end: {
            line: 237,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 235,
            column: 12
          },
          end: {
            line: 237,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 235
      },
      "33": {
        loc: {
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 253,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 253,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "34": {
        loc: {
          start: {
            line: 277,
            column: 8
          },
          end: {
            line: 280,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 277,
            column: 8
          },
          end: {
            line: 280,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 277
      },
      "35": {
        loc: {
          start: {
            line: 279,
            column: 31
          },
          end: {
            line: 279,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 279,
            column: 31
          },
          end: {
            line: 279,
            column: 49
          }
        }, {
          start: {
            line: 279,
            column: 53
          },
          end: {
            line: 279,
            column: 55
          }
        }],
        line: 279
      },
      "36": {
        loc: {
          start: {
            line: 329,
            column: 8
          },
          end: {
            line: 331,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 329,
            column: 8
          },
          end: {
            line: 331,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 329
      },
      "37": {
        loc: {
          start: {
            line: 329,
            column: 12
          },
          end: {
            line: 329,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 329,
            column: 12
          },
          end: {
            line: 329,
            column: 32
          }
        }, {
          start: {
            line: 329,
            column: 36
          },
          end: {
            line: 329,
            column: 60
          }
        }],
        line: 329
      },
      "38": {
        loc: {
          start: {
            line: 337,
            column: 8
          },
          end: {
            line: 339,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 337,
            column: 8
          },
          end: {
            line: 339,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 337
      },
      "39": {
        loc: {
          start: {
            line: 347,
            column: 8
          },
          end: {
            line: 347,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 347,
            column: 8
          },
          end: {
            line: 347,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 347
      },
      "40": {
        loc: {
          start: {
            line: 361,
            column: 35
          },
          end: {
            line: 361,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 361,
            column: 53
          },
          end: {
            line: 361,
            column: 85
          }
        }, {
          start: {
            line: 361,
            column: 88
          },
          end: {
            line: 361,
            column: 92
          }
        }],
        line: 361
      },
      "41": {
        loc: {
          start: {
            line: 362,
            column: 32
          },
          end: {
            line: 362,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 362,
            column: 50
          },
          end: {
            line: 362,
            column: 79
          }
        }, {
          start: {
            line: 362,
            column: 82
          },
          end: {
            line: 362,
            column: 86
          }
        }],
        line: 362
      },
      "42": {
        loc: {
          start: {
            line: 363,
            column: 33
          },
          end: {
            line: 363,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 363,
            column: 51
          },
          end: {
            line: 363,
            column: 82
          }
        }, {
          start: {
            line: 363,
            column: 85
          },
          end: {
            line: 363,
            column: 89
          }
        }],
        line: 363
      },
      "43": {
        loc: {
          start: {
            line: 369,
            column: 22
          },
          end: {
            line: 369,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 369,
            column: 22
          },
          end: {
            line: 369,
            column: 44
          }
        }, {
          start: {
            line: 369,
            column: 48
          },
          end: {
            line: 369,
            column: 51
          }
        }],
        line: 369
      },
      "44": {
        loc: {
          start: {
            line: 450,
            column: 36
          },
          end: {
            line: 456,
            column: 38
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 450,
            column: 64
          },
          end: {
            line: 452,
            column: 38
          }
        }, {
          start: {
            line: 452,
            column: 41
          },
          end: {
            line: 456,
            column: 38
          }
        }],
        line: 450
      },
      "45": {
        loc: {
          start: {
            line: 452,
            column: 41
          },
          end: {
            line: 456,
            column: 38
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 452,
            column: 70
          },
          end: {
            line: 454,
            column: 38
          }
        }, {
          start: {
            line: 454,
            column: 55
          },
          end: {
            line: 456,
            column: 38
          }
        }],
        line: 452
      },
      "46": {
        loc: {
          start: {
            line: 459,
            column: 50
          },
          end: {
            line: 459,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 459,
            column: 64
          },
          end: {
            line: 459,
            column: 75
          }
        }, {
          start: {
            line: 459,
            column: 78
          },
          end: {
            line: 459,
            column: 125
          }
        }],
        line: 459
      },
      "47": {
        loc: {
          start: {
            line: 459,
            column: 78
          },
          end: {
            line: 459,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 459,
            column: 93
          },
          end: {
            line: 459,
            column: 108
          }
        }, {
          start: {
            line: 459,
            column: 111
          },
          end: {
            line: 459,
            column: 125
          }
        }],
        line: 459
      },
      "48": {
        loc: {
          start: {
            line: 464,
            column: 41
          },
          end: {
            line: 464,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 464,
            column: 79
          },
          end: {
            line: 464,
            column: 88
          }
        }, {
          start: {
            line: 464,
            column: 91
          },
          end: {
            line: 464,
            column: 102
          }
        }],
        line: 464
      },
      "49": {
        loc: {
          start: {
            line: 465,
            column: 42
          },
          end: {
            line: 465,
            column: 123
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 465,
            column: 80
          },
          end: {
            line: 465,
            column: 99
          }
        }, {
          start: {
            line: 465,
            column: 102
          },
          end: {
            line: 465,
            column: 123
          }
        }],
        line: 465
      },
      "50": {
        loc: {
          start: {
            line: 473,
            column: 49
          },
          end: {
            line: 473,
            column: 119
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 473,
            column: 87
          },
          end: {
            line: 473,
            column: 101
          }
        }, {
          start: {
            line: 473,
            column: 104
          },
          end: {
            line: 473,
            column: 119
          }
        }],
        line: 473
      },
      "51": {
        loc: {
          start: {
            line: 475,
            column: 50
          },
          end: {
            line: 489,
            column: 42
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 475,
            column: 102
          },
          end: {
            line: 482,
            column: 42
          }
        }, {
          start: {
            line: 482,
            column: 59
          },
          end: {
            line: 489,
            column: 42
          }
        }],
        line: 475
      },
      "52": {
        loc: {
          start: {
            line: 509,
            column: 12
          },
          end: {
            line: 522,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 509,
            column: 12
          },
          end: {
            line: 509,
            column: 19
          }
        }, {
          start: {
            line: 509,
            column: 37
          },
          end: {
            line: 522,
            column: 14
          }
        }],
        line: 509
      },
      "53": {
        loc: {
          start: {
            line: 543,
            column: 65
          },
          end: {
            line: 543,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 543,
            column: 65
          },
          end: {
            line: 543,
            column: 82
          }
        }, {
          start: {
            line: 543,
            column: 86
          },
          end: {
            line: 543,
            column: 102
          }
        }],
        line: 543
      },
      "54": {
        loc: {
          start: {
            line: 563,
            column: 103
          },
          end: {
            line: 563,
            column: 188
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 563,
            column: 159
          },
          end: {
            line: 563,
            column: 173
          }
        }, {
          start: {
            line: 563,
            column: 176
          },
          end: {
            line: 563,
            column: 188
          }
        }],
        line: 563
      },
      "55": {
        loc: {
          start: {
            line: 581,
            column: 36
          },
          end: {
            line: 597,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 581,
            column: 36
          },
          end: {
            line: 581,
            column: 60
          }
        }, {
          start: {
            line: 581,
            column: 78
          },
          end: {
            line: 597,
            column: 38
          }
        }],
        line: 581
      },
      "56": {
        loc: {
          start: {
            line: 604,
            column: 34
          },
          end: {
            line: 616,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 604,
            column: 34
          },
          end: {
            line: 604,
            column: 49
          }
        }, {
          start: {
            line: 604,
            column: 67
          },
          end: {
            line: 616,
            column: 26
          }
        }],
        line: 604
      },
      "57": {
        loc: {
          start: {
            line: 606,
            column: 40
          },
          end: {
            line: 606,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 606,
            column: 40
          },
          end: {
            line: 606,
            column: 62
          }
        }, {
          start: {
            line: 606,
            column: 66
          },
          end: {
            line: 606,
            column: 80
          }
        }],
        line: 606
      },
      "58": {
        loc: {
          start: {
            line: 607,
            column: 37
          },
          end: {
            line: 607,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 607,
            column: 37
          },
          end: {
            line: 607,
            column: 56
          }
        }, {
          start: {
            line: 607,
            column: 60
          },
          end: {
            line: 607,
            column: 71
          }
        }],
        line: 607
      },
      "59": {
        loc: {
          start: {
            line: 609,
            column: 43
          },
          end: {
            line: 609,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 609,
            column: 43
          },
          end: {
            line: 609,
            column: 63
          }
        }, {
          start: {
            line: 609,
            column: 67
          },
          end: {
            line: 609,
            column: 79
          }
        }],
        line: 609
      },
      "60": {
        loc: {
          start: {
            line: 668,
            column: 85
          },
          end: {
            line: 668,
            column: 232
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 668,
            column: 117
          },
          end: {
            line: 668,
            column: 130
          }
        }, {
          start: {
            line: 668,
            column: 133
          },
          end: {
            line: 668,
            column: 232
          }
        }],
        line: 668
      },
      "61": {
        loc: {
          start: {
            line: 668,
            column: 133
          },
          end: {
            line: 668,
            column: 232
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 668,
            column: 162
          },
          end: {
            line: 668,
            column: 175
          }
        }, {
          start: {
            line: 668,
            column: 178
          },
          end: {
            line: 668,
            column: 232
          }
        }],
        line: 668
      },
      "62": {
        loc: {
          start: {
            line: 668,
            column: 178
          },
          end: {
            line: 668,
            column: 232
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 668,
            column: 209
          },
          end: {
            line: 668,
            column: 218
          }
        }, {
          start: {
            line: 668,
            column: 221
          },
          end: {
            line: 668,
            column: 232
          }
        }],
        line: 668
      },
      "63": {
        loc: {
          start: {
            line: 778,
            column: 46
          },
          end: {
            line: 815,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 778,
            column: 46
          },
          end: {
            line: 778,
            column: 61
          }
        }, {
          start: {
            line: 778,
            column: 79
          },
          end: {
            line: 815,
            column: 38
          }
        }],
        line: 778
      },
      "64": {
        loc: {
          start: {
            line: 877,
            column: 84
          },
          end: {
            line: 877,
            column: 116
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 877,
            column: 84
          },
          end: {
            line: 877,
            column: 108
          }
        }, {
          start: {
            line: 877,
            column: 112
          },
          end: {
            line: 877,
            column: 116
          }
        }],
        line: 877
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0],
      "17": [0],
      "18": [0],
      "19": [0, 0],
      "20": [0, 0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matthewmoroney/builds/FreeAgentics/web/components/markov-blanket-dashboard.tsx"],
      sourcesContent: ["\"use client\";\n\nimport React, { useState, useEffect, useCallback, useMemo } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"./ui/card\";\nimport { Button } from \"./ui/button\";\nimport { Badge } from \"./ui/badge\";\nimport { Switch } from \"./ui/switch\";\nimport { Label } from \"./ui/label\";\nimport { Alert, AlertDescription, AlertTitle } from \"./ui/alert\";\nimport { Separator } from \"./ui/separator\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"./ui/select\";\nimport { Input } from \"./ui/input\";\nimport { Textarea } from \"./ui/textarea\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"./ui/tabs\";\nimport { ScrollArea } from \"./ui/scroll-area\";\nimport {\n  AlertTriangle,\n  Activity,\n  Wifi,\n  WifiOff,\n  Play,\n  Pause,\n  RotateCcw,\n  Settings,\n  Download,\n  Bell,\n  BellOff,\n} from \"lucide-react\";\n\nimport {\n  MarkovBlanketVisualization,\n  type BoundaryViolationEvent,\n} from \"./markov-blanket-visualization\";\nimport {\n  useMarkovBlanketWebSocket,\n  type MarkovBlanketEvent,\n  type BoundaryViolation,\n  type MonitoringStatus,\n  type ConnectionStats,\n  type MarkovBlanketSubscription,\n} from \"../hooks/useMarkovBlanketWebSocket\";\n\ninterface MarkovBlanketDashboardProps {\n  initialAgentIds?: string[];\n  autoStartMonitoring?: boolean;\n  showAdvancedControls?: boolean;\n  enableNotifications?: boolean;\n}\n\nexport const MarkovBlanketDashboard: React.FC<MarkovBlanketDashboardProps> = ({\n  initialAgentIds = [],\n  autoStartMonitoring = true,\n  showAdvancedControls = false,\n  enableNotifications = true,\n}) => {\n  // State management\n  const [selectedAgentId, setSelectedAgentId] = useState<string>(\n    initialAgentIds[0] || \"\",\n  );\n  const [newAgentId, setNewAgentId] = useState(\"\");\n  const [monitoredAgents, setMonitoredAgents] = useState<Set<string>>(\n    new Set(initialAgentIds),\n  );\n  const [eventLog, setEventLog] = useState<MarkovBlanketEvent[]>([]);\n  const [notificationsEnabled, setNotificationsEnabled] =\n    useState(enableNotifications);\n  const [soundAlertsEnabled, setSoundAlertsEnabled] = useState(false);\n  const [autoAcknowledgeViolations, setAutoAcknowledgeViolations] =\n    useState(false);\n  const [maxLogEntries, setMaxLogEntries] = useState(1000);\n\n  // Real-time data state\n  const [agentDimensions, setAgentDimensions] = useState<Record<string, any>>(\n    {},\n  );\n  const [agentMetrics, setAgentMetrics] = useState<Record<string, any>>({});\n  const [agentPositions, setAgentPositions] = useState<Record<string, any>>({});\n  const [boundaryThresholds, setBoundaryThresholds] = useState({\n    internal: 0.8,\n    sensory: 0.8,\n    active: 0.8,\n    external: 0.8,\n  });\n\n  // WebSocket subscription configuration\n  const subscription: MarkovBlanketSubscription = useMemo(\n    () => ({\n      agent_ids: Array.from(monitoredAgents),\n      event_types: [\n        \"boundary_violation\",\n        \"state_update\",\n        \"integrity_update\",\n        \"threshold_breach\",\n        \"monitoring_error\",\n      ],\n      severity_levels: [\"info\", \"warning\", \"error\", \"critical\"],\n      include_mathematical_proofs: showAdvancedControls,\n      include_detailed_metrics: true,\n      violation_alerts_only: false,\n      real_time_updates: true,\n    }),\n    [monitoredAgents, showAdvancedControls],\n  );\n\n  // WebSocket connection\n  const {\n    isConnected,\n    isConnecting,\n    error: wsError,\n    lastEventTime,\n    connectionStats,\n    monitoringStatus,\n    violations,\n    connect,\n    disconnect,\n    updateSubscription,\n    registerAgent,\n    unregisterAgent,\n    startMonitoring,\n    stopMonitoring,\n    getMonitoringStatus,\n    getAgentViolations,\n    getConnectionStats,\n    getComplianceReport,\n    ping,\n  } = useMarkovBlanketWebSocket({\n    autoConnect: true,\n    subscription,\n    onEvent: handleMarkovBlanketEvent,\n    onConnect: handleWebSocketConnect,\n    onDisconnect: handleWebSocketDisconnect,\n    onError: handleWebSocketError,\n    onViolation: handleBoundaryViolation,\n  });\n\n  // Event handlers\n  function handleMarkovBlanketEvent(event: MarkovBlanketEvent) {\n    // Add to event log\n    setEventLog((prev) => {\n      const newLog = [event, ...prev].slice(0, maxLogEntries);\n      return newLog;\n    });\n\n    // Update agent-specific data based on event type\n    switch (event.type) {\n      case \"state_update\":\n        if (event.data.dimensions) {\n          setAgentDimensions((prev) => ({\n            ...prev,\n            [event.agent_id]: event.data.dimensions,\n          }));\n        }\n        if (event.data.metrics) {\n          setAgentMetrics((prev) => ({\n            ...prev,\n            [event.agent_id]: event.data.metrics,\n          }));\n        }\n        if (event.data.position) {\n          setAgentPositions((prev) => ({\n            ...prev,\n            [event.agent_id]: event.data.position,\n          }));\n        }\n        break;\n\n      case \"integrity_update\":\n        setAgentMetrics((prev) => ({\n          ...prev,\n          [event.agent_id]: {\n            ...prev[event.agent_id],\n            boundary_integrity: event.data.boundary_integrity,\n            conditional_independence: event.data.conditional_independence,\n          },\n        }));\n        break;\n\n      case \"boundary_violation\":\n        // Show notification if enabled\n        if (notificationsEnabled && \"Notification\" in window) {\n          new Notification(\"Boundary Violation Detected\", {\n            body: `Agent ${event.agent_id}: ${event.data.violation_type}`,\n            icon: \"/favicon.ico\",\n          });\n        }\n\n        // Play sound alert if enabled\n        if (soundAlertsEnabled) {\n          // Create audio context and play alert sound\n          const audioContext = new (window.AudioContext ||\n            (window as any).webkitAudioContext)();\n          const oscillator = audioContext.createOscillator();\n          const gainNode = audioContext.createGain();\n\n          oscillator.connect(gainNode);\n          gainNode.connect(audioContext.destination);\n\n          oscillator.frequency.setValueAtTime(800, audioContext.currentTime);\n          gainNode.gain.setValueAtTime(0.1, audioContext.currentTime);\n\n          oscillator.start();\n          oscillator.stop(audioContext.currentTime + 0.2);\n        }\n        break;\n    }\n  }\n\n  function handleWebSocketConnect() {\n    console.log(\"Connected to Markov Blanket monitoring\");\n    // Register all monitored agents\n    monitoredAgents.forEach((agentId) => {\n      registerAgent(agentId);\n    });\n\n    // Start monitoring if auto-start is enabled\n    if (autoStartMonitoring) {\n      startMonitoring();\n    }\n\n    // Get initial status\n    getMonitoringStatus();\n    getConnectionStats();\n  }\n\n  function handleWebSocketDisconnect() {\n    console.log(\"Disconnected from Markov Blanket monitoring\");\n  }\n\n  function handleWebSocketError(error: string) {\n    console.error(\"Markov Blanket WebSocket error:\", error);\n  }\n\n  function handleBoundaryViolation(violation: BoundaryViolation) {\n    console.log(\"Boundary violation detected:\", violation);\n\n    // Auto-acknowledge if enabled\n    if (autoAcknowledgeViolations) {\n      setTimeout(() => {\n        // In a real implementation, this would call an acknowledgment API\n        console.log(\"Auto-acknowledging violation:\", violation.agent_id);\n      }, 5000);\n    }\n  }\n\n  // Agent management\n  const handleAddAgent = useCallback(() => {\n    if (newAgentId.trim() && !monitoredAgents.has(newAgentId.trim())) {\n      const agentId = newAgentId.trim();\n      setMonitoredAgents((prev) => new Set([...prev, agentId]));\n      setNewAgentId(\"\");\n\n      if (isConnected) {\n        registerAgent(agentId);\n      }\n    }\n  }, [newAgentId, monitoredAgents, isConnected, registerAgent]);\n\n  const handleRemoveAgent = useCallback(\n    (agentId: string) => {\n      setMonitoredAgents((prev) => {\n        const newSet = new Set(prev);\n        newSet.delete(agentId);\n        return newSet;\n      });\n\n      if (isConnected) {\n        unregisterAgent(agentId);\n      }\n\n      // Clear agent data\n      setAgentDimensions((prev) => {\n        const newData = { ...prev };\n        delete newData[agentId];\n        return newData;\n      });\n      setAgentMetrics((prev) => {\n        const newData = { ...prev };\n        delete newData[agentId];\n        return newData;\n      });\n      setAgentPositions((prev) => {\n        const newData = { ...prev };\n        delete newData[agentId];\n        return newData;\n      });\n\n      // Select different agent if current one was removed\n      if (selectedAgentId === agentId) {\n        const remainingAgents = Array.from(monitoredAgents).filter(\n          (id) => id !== agentId,\n        );\n        setSelectedAgentId(remainingAgents[0] || \"\");\n      }\n    },\n    [isConnected, unregisterAgent, selectedAgentId, monitoredAgents],\n  );\n\n  // Threshold management\n  const handleBoundaryThresholdChange = useCallback(\n    (dimension: string, value: number) => {\n      setBoundaryThresholds((prev) => ({\n        ...prev,\n        [dimension]: value,\n      }));\n    },\n    [],\n  );\n\n  // Violation acknowledgment\n  const handleViolationAcknowledge = useCallback((violationId: string) => {\n    // In a real implementation, this would call an API to acknowledge the violation\n    console.log(\"Acknowledging violation:\", violationId);\n  }, []);\n\n  // Data export\n  const handleExportData = useCallback(() => {\n    const exportData = {\n      timestamp: new Date().toISOString(),\n      agents: Array.from(monitoredAgents),\n      eventLog: eventLog.slice(0, 100), // Last 100 events\n      connectionStats,\n      monitoringStatus,\n      violations: violations.slice(0, 50), // Last 50 violations\n    };\n\n    const blob = new Blob([JSON.stringify(exportData, null, 2)], {\n      type: \"application/json\",\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `markov-blanket-data-${Date.now()}.json`;\n    a.click();\n    URL.revokeObjectURL(url);\n  }, [\n    monitoredAgents,\n    eventLog,\n    connectionStats,\n    monitoringStatus,\n    violations,\n  ]);\n\n  // Request notification permission\n  useEffect(() => {\n    if (notificationsEnabled && \"Notification\" in window) {\n      Notification.requestPermission();\n    }\n  }, [notificationsEnabled]);\n\n  // Update subscription when monitored agents change\n  useEffect(() => {\n    if (isConnected) {\n      updateSubscription(subscription);\n    }\n  }, [isConnected, subscription, updateSubscription]);\n\n  // Periodic status updates\n  useEffect(() => {\n    if (!isConnected) return;\n\n    const interval = setInterval(() => {\n      getMonitoringStatus();\n      getConnectionStats();\n      ping();\n    }, 30000); // Every 30 seconds\n\n    return () => clearInterval(interval);\n  }, [isConnected, getMonitoringStatus, getConnectionStats, ping]);\n\n  // Get current agent data\n  const currentAgentDimensions = selectedAgentId\n    ? agentDimensions[selectedAgentId]\n    : null;\n  const currentAgentMetrics = selectedAgentId\n    ? agentMetrics[selectedAgentId]\n    : null;\n  const currentAgentPosition = selectedAgentId\n    ? agentPositions[selectedAgentId]\n    : null;\n  const currentAgentViolations = violations\n    .filter((v) => v.agent_id === selectedAgentId)\n    .map(\n      (v, index): BoundaryViolationEvent => ({\n        event_id: `event-${Date.now()}-${index}`,\n        agent_id: v.agent_id,\n        violation_type: v.violation_type,\n        timestamp: v.timestamp,\n        severity: parseFloat(v.severity) || 0.5,\n        independence_measure: v.independence_measure,\n        threshold_violated: v.threshold,\n        free_energy: 0,\n        expected_free_energy: 0,\n        kl_divergence: 0,\n        acknowledged: false,\n        mitigated: false,\n      }),\n    );\n\n  // Generate mock data if no real data available (for demonstration)\n  const mockDimensions = {\n    internal_states: [0.3, 0.7, 0.2],\n    sensory_states: [0.8, 0.4, 0.6],\n    active_states: [0.5, 0.9],\n    external_states: [0.2, 0.3, 0.8, 0.1],\n    internal_dimension: 0.4,\n    sensory_dimension: 0.6,\n    active_dimension: 0.7,\n    external_dimension: 0.3,\n  };\n\n  const mockMetrics = {\n    free_energy: 2.34,\n    expected_free_energy: 1.89,\n    kl_divergence: 0.45,\n    boundary_integrity: 0.87,\n    conditional_independence: 0.03,\n    stability_over_time: 0.92,\n    violation_count: violations.length,\n    last_violation_time: violations[0]?.timestamp,\n  };\n\n  const mockPosition = {\n    agent_id: selectedAgentId,\n    position: {\n      internal: 0.4,\n      sensory: 0.6,\n      active: 0.7,\n      external: 0.3,\n    },\n    boundary_distance: 0.15,\n    is_within_boundary: true,\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header with Connection Status */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h2 className=\"text-2xl font-bold\">Markov Blanket Monitoring</h2>\n          <p className=\"text-muted-foreground\">\n            Real-time boundary violation detection and agent state monitoring\n          </p>\n        </div>\n        <div className=\"flex items-center space-x-4\">\n          {/* Connection Status */}\n          <div className=\"flex items-center space-x-2\">\n            {isConnected ? (\n              <Wifi className=\"h-4 w-4 text-green-500\" />\n            ) : isConnecting ? (\n              <Activity className=\"h-4 w-4 text-yellow-500 animate-spin\" />\n            ) : (\n              <WifiOff className=\"h-4 w-4 text-red-500\" />\n            )}\n            <span className=\"text-sm\">\n              {isConnected\n                ? \"Connected\"\n                : isConnecting\n                  ? \"Connecting...\"\n                  : \"Disconnected\"}\n            </span>\n          </div>\n\n          {/* Monitoring Status */}\n          <Badge\n            variant={\n              monitoringStatus?.monitoring_active ? \"default\" : \"secondary\"\n            }\n          >\n            {monitoringStatus?.monitoring_active\n              ? \"Monitoring Active\"\n              : \"Monitoring Inactive\"}\n          </Badge>\n\n          {/* Controls */}\n          <div className=\"flex items-center space-x-2\">\n            <Button\n              size=\"sm\"\n              variant=\"outline\"\n              onClick={\n                monitoringStatus?.monitoring_active\n                  ? stopMonitoring\n                  : startMonitoring\n              }\n              disabled={!isConnected}\n            >\n              {monitoringStatus?.monitoring_active ? (\n                <>\n                  <Pause className=\"h-4 w-4 mr-2\" />\n                  Stop\n                </>\n              ) : (\n                <>\n                  <Play className=\"h-4 w-4 mr-2\" />\n                  Start\n                </>\n              )}\n            </Button>\n\n            <Button\n              size=\"sm\"\n              variant=\"outline\"\n              onClick={handleExportData}\n              disabled={!isConnected}\n            >\n              <Download className=\"h-4 w-4 mr-2\" />\n              Export\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      {/* Connection Error Alert */}\n      {wsError && (\n        <Alert className=\"border-red-200 bg-red-50\">\n          <AlertTriangle className=\"h-4 w-4\" />\n          <AlertTitle>Connection Error</AlertTitle>\n          <AlertDescription>{wsError}</AlertDescription>\n        </Alert>\n      )}\n\n      {/* Main Dashboard */}\n      <div className=\"grid grid-cols-1 xl:grid-cols-4 gap-6\">\n        {/* Agent Management */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Monitored Agents</CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            {/* Add Agent */}\n            <div className=\"flex space-x-2\">\n              <Input\n                placeholder=\"Agent ID\"\n                value={newAgentId}\n                onChange={(e) => setNewAgentId(e.target.value)}\n                onKeyPress={(e) => e.key === \"Enter\" && handleAddAgent()}\n              />\n              <Button size=\"sm\" onClick={handleAddAgent}>\n                Add\n              </Button>\n            </div>\n\n            {/* Agent List */}\n            <ScrollArea className=\"h-32\">\n              <div className=\"space-y-2\">\n                {Array.from(monitoredAgents).map((agentId) => (\n                  <div\n                    key={agentId}\n                    className=\"flex items-center justify-between p-2 border rounded\"\n                  >\n                    <div className=\"flex items-center space-x-2\">\n                      <div\n                        className={`w-2 h-2 rounded-full ${\n                          agentPositions[agentId]?.is_within_boundary !== false\n                            ? \"bg-green-500\"\n                            : \"bg-red-500\"\n                        }`}\n                      />\n                      <span className=\"text-sm\">{agentId}</span>\n                    </div>\n                    <Button\n                      size=\"sm\"\n                      variant=\"ghost\"\n                      onClick={() => handleRemoveAgent(agentId)}\n                    >\n                      \xD7\n                    </Button>\n                  </div>\n                ))}\n              </div>\n            </ScrollArea>\n\n            {/* Agent Selection */}\n            {monitoredAgents.size > 0 && (\n              <Select\n                value={selectedAgentId}\n                onValueChange={setSelectedAgentId}\n              >\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select agent to view\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {Array.from(monitoredAgents).map((agentId) => (\n                    <SelectItem key={agentId} value={agentId}>\n                      {agentId}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Main Visualization */}\n        <div className=\"xl:col-span-3\">\n          {selectedAgentId && (\n            <MarkovBlanketVisualization\n              agentId={selectedAgentId}\n              dimensions={currentAgentDimensions || mockDimensions}\n              metrics={currentAgentMetrics || mockMetrics}\n              violations={currentAgentViolations}\n              agentPosition={currentAgentPosition || mockPosition}\n              boundaryThresholds={boundaryThresholds}\n              realTimeUpdates={isConnected}\n              showViolations={true}\n              showMetrics={true}\n              onViolationAcknowledge={handleViolationAcknowledge}\n              onBoundaryThresholdChange={handleBoundaryThresholdChange}\n            />\n          )}\n        </div>\n      </div>\n\n      {/* Additional Tabs */}\n      <Tabs defaultValue=\"events\" className=\"w-full\">\n        <TabsList>\n          <TabsTrigger value=\"events\">Event Log</TabsTrigger>\n          <TabsTrigger value=\"violations\">Violations</TabsTrigger>\n          <TabsTrigger value=\"stats\">Statistics</TabsTrigger>\n          <TabsTrigger value=\"settings\">Settings</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"events\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Real-Time Event Log</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <ScrollArea className=\"h-64\">\n                <div className=\"space-y-2\">\n                  {eventLog.slice(0, 50).map((event, index) => (\n                    <div key={index} className=\"p-2 border rounded text-sm\">\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center space-x-2\">\n                          <Badge\n                            variant={\n                              event.severity === \"critical\"\n                                ? \"destructive\"\n                                : event.severity === \"error\"\n                                  ? \"destructive\"\n                                  : event.severity === \"warning\"\n                                    ? \"default\"\n                                    : \"secondary\"\n                            }\n                          >\n                            {event.severity}\n                          </Badge>\n                          <span className=\"font-medium\">{event.type}</span>\n                        </div>\n                        <span className=\"text-xs text-muted-foreground\">\n                          {new Date(event.timestamp).toLocaleTimeString()}\n                        </span>\n                      </div>\n                      <div className=\"mt-1\">\n                        <span className=\"text-xs\">Agent: {event.agent_id}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </ScrollArea>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"violations\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Boundary Violations</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <ScrollArea className=\"h-64\">\n                <div className=\"space-y-2\">\n                  {violations.slice(0, 20).map((violation, index) => (\n                    <div key={index} className=\"p-3 border rounded\">\n                      <div className=\"flex items-center justify-between\">\n                        <div>\n                          <div className=\"font-medium\">\n                            {violation.violation_type}\n                          </div>\n                          <div className=\"text-sm text-muted-foreground\">\n                            Agent: {violation.agent_id}\n                          </div>\n                        </div>\n                        <Badge variant=\"destructive\">\n                          {violation.severity}\n                        </Badge>\n                      </div>\n                      <div className=\"mt-2 text-xs\">\n                        <div>\n                          Independence:{\" \"}\n                          {violation.independence_measure.toFixed(4)}\n                        </div>\n                        <div>Threshold: {violation.threshold.toFixed(4)}</div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </ScrollArea>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"stats\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Connection Statistics</CardTitle>\n            </CardHeader>\n            <CardContent>\n              {connectionStats && (\n                <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                  <div>Total Connections:</div>\n                  <div>{connectionStats.total_connections}</div>\n\n                  <div>Events Sent:</div>\n                  <div>{connectionStats.total_events_sent}</div>\n\n                  <div>Active Violations:</div>\n                  <div>{connectionStats.active_violations}</div>\n\n                  <div>Monitored Agents:</div>\n                  <div>{connectionStats.monitored_agents}</div>\n\n                  <div>System Uptime:</div>\n                  <div>{Math.round(connectionStats.system_uptime)}s</div>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"settings\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Dashboard Settings</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"flex items-center space-x-2\">\n                <Switch\n                  checked={notificationsEnabled}\n                  onCheckedChange={setNotificationsEnabled}\n                />\n                <Label>Browser Notifications</Label>\n              </div>\n\n              <div className=\"flex items-center space-x-2\">\n                <Switch\n                  checked={soundAlertsEnabled}\n                  onCheckedChange={setSoundAlertsEnabled}\n                />\n                <Label>Sound Alerts</Label>\n              </div>\n\n              <div className=\"flex items-center space-x-2\">\n                <Switch\n                  checked={autoAcknowledgeViolations}\n                  onCheckedChange={setAutoAcknowledgeViolations}\n                />\n                <Label>Auto-acknowledge Violations</Label>\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label>Max Log Entries</Label>\n                <Input\n                  type=\"number\"\n                  value={maxLogEntries}\n                  onChange={(e) =>\n                    setMaxLogEntries(parseInt(e.target.value) || 1000)\n                  }\n                  min={100}\n                  max={10000}\n                />\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default MarkovBlanketDashboard;\n"],
      names: ["MarkovBlanketDashboard", "initialAgentIds", "autoStartMonitoring", "showAdvancedControls", "enableNotifications", "selectedAgentId", "setSelectedAgentId", "useState", "newAgentId", "setNewAgentId", "monitoredAgents", "setMonitoredAgents", "Set", "eventLog", "setEventLog", "notificationsEnabled", "setNotificationsEnabled", "soundAlertsEnabled", "setSoundAlertsEnabled", "autoAcknowledgeViolations", "setAutoAcknowledgeViolations", "maxLogEntries", "setMaxLogEntries", "agentDimensions", "setAgentDimensions", "agentMetrics", "setAgentMetrics", "agentPositions", "setAgentPositions", "boundaryThresholds", "setBoundaryThresholds", "internal", "sensory", "active", "external", "subscription", "useMemo", "agent_ids", "Array", "from", "event_types", "severity_levels", "include_mathematical_proofs", "include_detailed_metrics", "violation_alerts_only", "real_time_updates", "isConnected", "isConnecting", "error", "wsError", "lastEventTime", "connectionStats", "monitoringStatus", "violations", "connect", "disconnect", "updateSubscription", "registerAgent", "unregisterAgent", "startMonitoring", "stopMonitoring", "getMonitoringStatus", "getAgentViolations", "getConnectionStats", "getComplianceReport", "ping", "useMarkovBlanketWebSocket", "autoConnect", "onEvent", "handleMarkovBlanketEvent", "onConnect", "handleWebSocketConnect", "onDisconnect", "handleWebSocketDisconnect", "onError", "handleWebSocketError", "onViolation", "handleBoundaryViolation", "event", "prev", "newLog", "slice", "type", "data", "dimensions", "agent_id", "metrics", "position", "boundary_integrity", "conditional_independence", "window", "Notification", "body", "violation_type", "icon", "audioContext", "AudioContext", "webkitAudioContext", "oscillator", "createOscillator", "gainNode", "createGain", "destination", "frequency", "setValueAtTime", "currentTime", "gain", "start", "stop", "console", "log", "forEach", "agentId", "violation", "setTimeout", "handleAddAgent", "useCallback", "trim", "has", "handleRemoveAgent", "newSet", "delete", "newData", "remainingAgents", "filter", "id", "handleBoundaryThresholdChange", "dimension", "value", "handleViolationAcknowledge", "violationId", "handleExportData", "exportData", "timestamp", "Date", "toISOString", "agents", "blob", "Blob", "JSON", "stringify", "url", "URL", "createObjectURL", "a", "document", "createElement", "href", "download", "now", "click", "revokeObjectURL", "useEffect", "requestPermission", "interval", "setInterval", "clearInterval", "currentAgentDimensions", "currentAgentMetrics", "currentAgentPosition", "currentAgentViolations", "v", "map", "index", "event_id", "severity", "parseFloat", "independence_measure", "threshold_violated", "threshold", "free_energy", "expected_free_energy", "kl_divergence", "acknowledged", "mitigated", "mockDimensions", "internal_states", "sensory_states", "active_states", "external_states", "internal_dimension", "sensory_dimension", "active_dimension", "external_dimension", "mockMetrics", "stability_over_time", "violation_count", "length", "last_violation_time", "mockPosition", "boundary_distance", "is_within_boundary", "div", "className", "h2", "p", "Wifi", "Activity", "WifiOff", "span", "Badge", "variant", "monitoring_active", "Button", "size", "onClick", "disabled", "Pause", "Play", "Download", "Alert", "AlertTriangle", "AlertTitle", "AlertDescription", "Card", "CardHeader", "CardTitle", "CardContent", "Input", "placeholder", "onChange", "e", "target", "onKeyPress", "key", "ScrollArea", "Select", "onValueChange", "SelectTrigger", "SelectValue", "SelectContent", "SelectItem", "MarkovBlanketVisualization", "agentPosition", "realTimeUpdates", "showViolations", "showMetrics", "onViolationAcknowledge", "onBoundaryThresholdChange", "Tabs", "defaultValue", "TabsList", "TabsTrigger", "TabsContent", "toLocaleTimeString", "toFixed", "total_connections", "total_events_sent", "active_violations", "monitored_agents", "Math", "round", "system_uptime", "Switch", "checked", "onCheckedChange", "Label", "parseInt", "min", "max"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5a1551c498a8dedf93e3f3e55c1b88e0e8d04ed3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1i1gfublhn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1i1gfublhn();
cov_1i1gfublhn().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1i1gfublhn().f[0]++;
  cov_1i1gfublhn().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1i1gfublhn().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1i1gfublhn().s[3]++;
_export(exports, {
  MarkovBlanketDashboard: function () {
    /* istanbul ignore next */
    cov_1i1gfublhn().f[1]++;
    cov_1i1gfublhn().s[4]++;
    return MarkovBlanketDashboard;
  },
  default: function () {
    /* istanbul ignore next */
    cov_1i1gfublhn().f[2]++;
    cov_1i1gfublhn().s[5]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1i1gfublhn().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_1i1gfublhn().s[7]++, _interop_require_wildcard(require("react")));
const _card =
/* istanbul ignore next */
(cov_1i1gfublhn().s[8]++, require("./ui/card"));
const _button =
/* istanbul ignore next */
(cov_1i1gfublhn().s[9]++, require("./ui/button"));
const _badge =
/* istanbul ignore next */
(cov_1i1gfublhn().s[10]++, require("./ui/badge"));
const _switch =
/* istanbul ignore next */
(cov_1i1gfublhn().s[11]++, require("./ui/switch"));
const _label =
/* istanbul ignore next */
(cov_1i1gfublhn().s[12]++, require("./ui/label"));
const _alert =
/* istanbul ignore next */
(cov_1i1gfublhn().s[13]++, require("./ui/alert"));
const _select =
/* istanbul ignore next */
(cov_1i1gfublhn().s[14]++, require("./ui/select"));
const _input =
/* istanbul ignore next */
(cov_1i1gfublhn().s[15]++, require("./ui/input"));
const _tabs =
/* istanbul ignore next */
(cov_1i1gfublhn().s[16]++, require("./ui/tabs"));
const _scrollarea =
/* istanbul ignore next */
(cov_1i1gfublhn().s[17]++, require("./ui/scroll-area"));
const _lucidereact =
/* istanbul ignore next */
(cov_1i1gfublhn().s[18]++, require("lucide-react"));
const _markovblanketvisualization =
/* istanbul ignore next */
(cov_1i1gfublhn().s[19]++, require("./markov-blanket-visualization"));
const _useMarkovBlanketWebSocket =
/* istanbul ignore next */
(cov_1i1gfublhn().s[20]++, require("../hooks/useMarkovBlanketWebSocket"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1i1gfublhn().f[3]++;
  cov_1i1gfublhn().s[21]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1i1gfublhn().b[0][0]++;
    cov_1i1gfublhn().s[22]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1i1gfublhn().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1i1gfublhn().s[23]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1i1gfublhn().s[24]++, new WeakMap());
  /* istanbul ignore next */
  cov_1i1gfublhn().s[25]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1i1gfublhn().f[4]++;
    cov_1i1gfublhn().s[26]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1i1gfublhn().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1i1gfublhn().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1i1gfublhn().f[5]++;
  cov_1i1gfublhn().s[27]++;
  if (
  /* istanbul ignore next */
  (cov_1i1gfublhn().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1i1gfublhn().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1i1gfublhn().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1i1gfublhn().b[2][0]++;
    cov_1i1gfublhn().s[28]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1i1gfublhn().b[2][1]++;
  }
  cov_1i1gfublhn().s[29]++;
  if (
  /* istanbul ignore next */
  (cov_1i1gfublhn().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1i1gfublhn().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1i1gfublhn().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1i1gfublhn().b[4][0]++;
    cov_1i1gfublhn().s[30]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1i1gfublhn().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1i1gfublhn().s[31]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1i1gfublhn().s[32]++;
  if (
  /* istanbul ignore next */
  (cov_1i1gfublhn().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1i1gfublhn().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1i1gfublhn().b[6][0]++;
    cov_1i1gfublhn().s[33]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1i1gfublhn().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1i1gfublhn().s[34]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1i1gfublhn().s[35]++,
  /* istanbul ignore next */
  (cov_1i1gfublhn().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1i1gfublhn().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1i1gfublhn().s[36]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1i1gfublhn().s[37]++;
    if (
    /* istanbul ignore next */
    (cov_1i1gfublhn().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1i1gfublhn().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1i1gfublhn().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1i1gfublhn().s[38]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1i1gfublhn().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1i1gfublhn().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1i1gfublhn().s[39]++;
      if (
      /* istanbul ignore next */
      (cov_1i1gfublhn().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1i1gfublhn().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1i1gfublhn().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1i1gfublhn().b[12][0]++;
        cov_1i1gfublhn().s[40]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1i1gfublhn().b[12][1]++;
        cov_1i1gfublhn().s[41]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1i1gfublhn().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1i1gfublhn().s[42]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1i1gfublhn().s[43]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1i1gfublhn().b[14][0]++;
    cov_1i1gfublhn().s[44]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1i1gfublhn().b[14][1]++;
  }
  cov_1i1gfublhn().s[45]++;
  return newObj;
}
/* istanbul ignore next */
cov_1i1gfublhn().s[46]++;
const MarkovBlanketDashboard = ({
  initialAgentIds =
  /* istanbul ignore next */
  (cov_1i1gfublhn().b[15][0]++, []),
  autoStartMonitoring =
  /* istanbul ignore next */
  (cov_1i1gfublhn().b[16][0]++, true),
  showAdvancedControls =
  /* istanbul ignore next */
  (cov_1i1gfublhn().b[17][0]++, false),
  enableNotifications =
  /* istanbul ignore next */
  (cov_1i1gfublhn().b[18][0]++, true)
}) => {
  /* istanbul ignore next */
  cov_1i1gfublhn().f[6]++;
  // State management
  const [selectedAgentId, setSelectedAgentId] =
  /* istanbul ignore next */
  (cov_1i1gfublhn().s[47]++, (0, _react.useState)(
  /* istanbul ignore next */
  (cov_1i1gfublhn().b[19][0]++, initialAgentIds[0]) ||
  /* istanbul ignore next */
  (cov_1i1gfublhn().b[19][1]++, "")));
  const [newAgentId, setNewAgentId] =
  /* istanbul ignore next */
  (cov_1i1gfublhn().s[48]++, (0, _react.useState)(""));
  const [monitoredAgents, setMonitoredAgents] =
  /* istanbul ignore next */
  (cov_1i1gfublhn().s[49]++, (0, _react.useState)(new Set(initialAgentIds)));
  const [eventLog, setEventLog] =
  /* istanbul ignore next */
  (cov_1i1gfublhn().s[50]++, (0, _react.useState)([]));
  const [notificationsEnabled, setNotificationsEnabled] =
  /* istanbul ignore next */
  (cov_1i1gfublhn().s[51]++, (0, _react.useState)(enableNotifications));
  const [soundAlertsEnabled, setSoundAlertsEnabled] =
  /* istanbul ignore next */
  (cov_1i1gfublhn().s[52]++, (0, _react.useState)(false));
  const [autoAcknowledgeViolations, setAutoAcknowledgeViolations] =
  /* istanbul ignore next */
  (cov_1i1gfublhn().s[53]++, (0, _react.useState)(false));
  const [maxLogEntries, setMaxLogEntries] =
  /* istanbul ignore next */
  (cov_1i1gfublhn().s[54]++, (0, _react.useState)(1000));
  // Real-time data state
  const [agentDimensions, setAgentDimensions] =
  /* istanbul ignore next */
  (cov_1i1gfublhn().s[55]++, (0, _react.useState)({}));
  const [agentMetrics, setAgentMetrics] =
  /* istanbul ignore next */
  (cov_1i1gfublhn().s[56]++, (0, _react.useState)({}));
  const [agentPositions, setAgentPositions] =
  /* istanbul ignore next */
  (cov_1i1gfublhn().s[57]++, (0, _react.useState)({}));
  const [boundaryThresholds, setBoundaryThresholds] =
  /* istanbul ignore next */
  (cov_1i1gfublhn().s[58]++, (0, _react.useState)({
    internal: 0.8,
    sensory: 0.8,
    active: 0.8,
    external: 0.8
  }));
  // WebSocket subscription configuration
  const subscription =
  /* istanbul ignore next */
  (cov_1i1gfublhn().s[59]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_1i1gfublhn().f[7]++;
    cov_1i1gfublhn().s[60]++;
    return {
      agent_ids: Array.from(monitoredAgents),
      event_types: ["boundary_violation", "state_update", "integrity_update", "threshold_breach", "monitoring_error"],
      severity_levels: ["info", "warning", "error", "critical"],
      include_mathematical_proofs: showAdvancedControls,
      include_detailed_metrics: true,
      violation_alerts_only: false,
      real_time_updates: true
    };
  }, [monitoredAgents, showAdvancedControls]));
  // WebSocket connection
  const {
    isConnected,
    isConnecting,
    error: wsError,
    lastEventTime,
    connectionStats,
    monitoringStatus,
    violations,
    connect,
    disconnect,
    updateSubscription,
    registerAgent,
    unregisterAgent,
    startMonitoring,
    stopMonitoring,
    getMonitoringStatus,
    getAgentViolations,
    getConnectionStats,
    getComplianceReport,
    ping
  } =
  /* istanbul ignore next */
  (cov_1i1gfublhn().s[61]++, (0, _useMarkovBlanketWebSocket.useMarkovBlanketWebSocket)({
    autoConnect: true,
    subscription,
    onEvent: handleMarkovBlanketEvent,
    onConnect: handleWebSocketConnect,
    onDisconnect: handleWebSocketDisconnect,
    onError: handleWebSocketError,
    onViolation: handleBoundaryViolation
  }));
  // Event handlers
  function handleMarkovBlanketEvent(event) {
    /* istanbul ignore next */
    cov_1i1gfublhn().f[8]++;
    cov_1i1gfublhn().s[62]++;
    // Add to event log
    setEventLog(prev => {
      /* istanbul ignore next */
      cov_1i1gfublhn().f[9]++;
      const newLog =
      /* istanbul ignore next */
      (cov_1i1gfublhn().s[63]++, [event, ...prev].slice(0, maxLogEntries));
      /* istanbul ignore next */
      cov_1i1gfublhn().s[64]++;
      return newLog;
    });
    // Update agent-specific data based on event type
    /* istanbul ignore next */
    cov_1i1gfublhn().s[65]++;
    switch (event.type) {
      case "state_update":
        /* istanbul ignore next */
        cov_1i1gfublhn().b[20][0]++;
        cov_1i1gfublhn().s[66]++;
        if (event.data.dimensions) {
          /* istanbul ignore next */
          cov_1i1gfublhn().b[21][0]++;
          cov_1i1gfublhn().s[67]++;
          setAgentDimensions(prev => {
            /* istanbul ignore next */
            cov_1i1gfublhn().f[10]++;
            cov_1i1gfublhn().s[68]++;
            return {
              ...prev,
              [event.agent_id]: event.data.dimensions
            };
          });
        } else
        /* istanbul ignore next */
        {
          cov_1i1gfublhn().b[21][1]++;
        }
        cov_1i1gfublhn().s[69]++;
        if (event.data.metrics) {
          /* istanbul ignore next */
          cov_1i1gfublhn().b[22][0]++;
          cov_1i1gfublhn().s[70]++;
          setAgentMetrics(prev => {
            /* istanbul ignore next */
            cov_1i1gfublhn().f[11]++;
            cov_1i1gfublhn().s[71]++;
            return {
              ...prev,
              [event.agent_id]: event.data.metrics
            };
          });
        } else
        /* istanbul ignore next */
        {
          cov_1i1gfublhn().b[22][1]++;
        }
        cov_1i1gfublhn().s[72]++;
        if (event.data.position) {
          /* istanbul ignore next */
          cov_1i1gfublhn().b[23][0]++;
          cov_1i1gfublhn().s[73]++;
          setAgentPositions(prev => {
            /* istanbul ignore next */
            cov_1i1gfublhn().f[12]++;
            cov_1i1gfublhn().s[74]++;
            return {
              ...prev,
              [event.agent_id]: event.data.position
            };
          });
        } else
        /* istanbul ignore next */
        {
          cov_1i1gfublhn().b[23][1]++;
        }
        cov_1i1gfublhn().s[75]++;
        break;
      case "integrity_update":
        /* istanbul ignore next */
        cov_1i1gfublhn().b[20][1]++;
        cov_1i1gfublhn().s[76]++;
        setAgentMetrics(prev => {
          /* istanbul ignore next */
          cov_1i1gfublhn().f[13]++;
          cov_1i1gfublhn().s[77]++;
          return {
            ...prev,
            [event.agent_id]: {
              ...prev[event.agent_id],
              boundary_integrity: event.data.boundary_integrity,
              conditional_independence: event.data.conditional_independence
            }
          };
        });
        /* istanbul ignore next */
        cov_1i1gfublhn().s[78]++;
        break;
      case "boundary_violation":
        /* istanbul ignore next */
        cov_1i1gfublhn().b[20][2]++;
        cov_1i1gfublhn().s[79]++;
        // Show notification if enabled
        if (
        /* istanbul ignore next */
        (cov_1i1gfublhn().b[25][0]++, notificationsEnabled) &&
        /* istanbul ignore next */
        (cov_1i1gfublhn().b[25][1]++, "Notification" in window)) {
          /* istanbul ignore next */
          cov_1i1gfublhn().b[24][0]++;
          cov_1i1gfublhn().s[80]++;
          new Notification("Boundary Violation Detected", {
            body: `Agent ${event.agent_id}: ${event.data.violation_type}`,
            icon: "/favicon.ico"
          });
        } else
        /* istanbul ignore next */
        {
          cov_1i1gfublhn().b[24][1]++;
        }
        // Play sound alert if enabled
        cov_1i1gfublhn().s[81]++;
        if (soundAlertsEnabled) {
          /* istanbul ignore next */
          cov_1i1gfublhn().b[26][0]++;
          // Create audio context and play alert sound
          const audioContext =
          /* istanbul ignore next */
          (cov_1i1gfublhn().s[82]++, new (
          /* istanbul ignore next */
          (cov_1i1gfublhn().b[27][0]++, window.AudioContext) ||
          /* istanbul ignore next */
          (cov_1i1gfublhn().b[27][1]++, window.webkitAudioContext))());
          const oscillator =
          /* istanbul ignore next */
          (cov_1i1gfublhn().s[83]++, audioContext.createOscillator());
          const gainNode =
          /* istanbul ignore next */
          (cov_1i1gfublhn().s[84]++, audioContext.createGain());
          /* istanbul ignore next */
          cov_1i1gfublhn().s[85]++;
          oscillator.connect(gainNode);
          /* istanbul ignore next */
          cov_1i1gfublhn().s[86]++;
          gainNode.connect(audioContext.destination);
          /* istanbul ignore next */
          cov_1i1gfublhn().s[87]++;
          oscillator.frequency.setValueAtTime(800, audioContext.currentTime);
          /* istanbul ignore next */
          cov_1i1gfublhn().s[88]++;
          gainNode.gain.setValueAtTime(0.1, audioContext.currentTime);
          /* istanbul ignore next */
          cov_1i1gfublhn().s[89]++;
          oscillator.start();
          /* istanbul ignore next */
          cov_1i1gfublhn().s[90]++;
          oscillator.stop(audioContext.currentTime + 0.2);
        } else
        /* istanbul ignore next */
        {
          cov_1i1gfublhn().b[26][1]++;
        }
        cov_1i1gfublhn().s[91]++;
        break;
    }
  }
  function handleWebSocketConnect() {
    /* istanbul ignore next */
    cov_1i1gfublhn().f[14]++;
    cov_1i1gfublhn().s[92]++;
    console.log("Connected to Markov Blanket monitoring");
    // Register all monitored agents
    /* istanbul ignore next */
    cov_1i1gfublhn().s[93]++;
    monitoredAgents.forEach(agentId => {
      /* istanbul ignore next */
      cov_1i1gfublhn().f[15]++;
      cov_1i1gfublhn().s[94]++;
      registerAgent(agentId);
    });
    // Start monitoring if auto-start is enabled
    /* istanbul ignore next */
    cov_1i1gfublhn().s[95]++;
    if (autoStartMonitoring) {
      /* istanbul ignore next */
      cov_1i1gfublhn().b[28][0]++;
      cov_1i1gfublhn().s[96]++;
      startMonitoring();
    } else
    /* istanbul ignore next */
    {
      cov_1i1gfublhn().b[28][1]++;
    }
    // Get initial status
    cov_1i1gfublhn().s[97]++;
    getMonitoringStatus();
    /* istanbul ignore next */
    cov_1i1gfublhn().s[98]++;
    getConnectionStats();
  }
  function handleWebSocketDisconnect() {
    /* istanbul ignore next */
    cov_1i1gfublhn().f[16]++;
    cov_1i1gfublhn().s[99]++;
    console.log("Disconnected from Markov Blanket monitoring");
  }
  function handleWebSocketError(error) {
    /* istanbul ignore next */
    cov_1i1gfublhn().f[17]++;
    cov_1i1gfublhn().s[100]++;
    console.error("Markov Blanket WebSocket error:", error);
  }
  function handleBoundaryViolation(violation) {
    /* istanbul ignore next */
    cov_1i1gfublhn().f[18]++;
    cov_1i1gfublhn().s[101]++;
    console.log("Boundary violation detected:", violation);
    // Auto-acknowledge if enabled
    /* istanbul ignore next */
    cov_1i1gfublhn().s[102]++;
    if (autoAcknowledgeViolations) {
      /* istanbul ignore next */
      cov_1i1gfublhn().b[29][0]++;
      cov_1i1gfublhn().s[103]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_1i1gfublhn().f[19]++;
        cov_1i1gfublhn().s[104]++;
        // In a real implementation, this would call an acknowledgment API
        console.log("Auto-acknowledging violation:", violation.agent_id);
      }, 5000);
    } else
    /* istanbul ignore next */
    {
      cov_1i1gfublhn().b[29][1]++;
    }
  }
  // Agent management
  const handleAddAgent =
  /* istanbul ignore next */
  (cov_1i1gfublhn().s[105]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1i1gfublhn().f[20]++;
    cov_1i1gfublhn().s[106]++;
    if (
    /* istanbul ignore next */
    (cov_1i1gfublhn().b[31][0]++, newAgentId.trim()) &&
    /* istanbul ignore next */
    (cov_1i1gfublhn().b[31][1]++, !monitoredAgents.has(newAgentId.trim()))) {
      /* istanbul ignore next */
      cov_1i1gfublhn().b[30][0]++;
      const agentId =
      /* istanbul ignore next */
      (cov_1i1gfublhn().s[107]++, newAgentId.trim());
      /* istanbul ignore next */
      cov_1i1gfublhn().s[108]++;
      setMonitoredAgents(prev => {
        /* istanbul ignore next */
        cov_1i1gfublhn().f[21]++;
        cov_1i1gfublhn().s[109]++;
        return new Set([...prev, agentId]);
      });
      /* istanbul ignore next */
      cov_1i1gfublhn().s[110]++;
      setNewAgentId("");
      /* istanbul ignore next */
      cov_1i1gfublhn().s[111]++;
      if (isConnected) {
        /* istanbul ignore next */
        cov_1i1gfublhn().b[32][0]++;
        cov_1i1gfublhn().s[112]++;
        registerAgent(agentId);
      } else
      /* istanbul ignore next */
      {
        cov_1i1gfublhn().b[32][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1i1gfublhn().b[30][1]++;
    }
  }, [newAgentId, monitoredAgents, isConnected, registerAgent]));
  const handleRemoveAgent =
  /* istanbul ignore next */
  (cov_1i1gfublhn().s[113]++, (0, _react.useCallback)(agentId => {
    /* istanbul ignore next */
    cov_1i1gfublhn().f[22]++;
    cov_1i1gfublhn().s[114]++;
    setMonitoredAgents(prev => {
      /* istanbul ignore next */
      cov_1i1gfublhn().f[23]++;
      const newSet =
      /* istanbul ignore next */
      (cov_1i1gfublhn().s[115]++, new Set(prev));
      /* istanbul ignore next */
      cov_1i1gfublhn().s[116]++;
      newSet.delete(agentId);
      /* istanbul ignore next */
      cov_1i1gfublhn().s[117]++;
      return newSet;
    });
    /* istanbul ignore next */
    cov_1i1gfublhn().s[118]++;
    if (isConnected) {
      /* istanbul ignore next */
      cov_1i1gfublhn().b[33][0]++;
      cov_1i1gfublhn().s[119]++;
      unregisterAgent(agentId);
    } else
    /* istanbul ignore next */
    {
      cov_1i1gfublhn().b[33][1]++;
    }
    // Clear agent data
    cov_1i1gfublhn().s[120]++;
    setAgentDimensions(prev => {
      /* istanbul ignore next */
      cov_1i1gfublhn().f[24]++;
      const newData =
      /* istanbul ignore next */
      (cov_1i1gfublhn().s[121]++, {
        ...prev
      });
      /* istanbul ignore next */
      cov_1i1gfublhn().s[122]++;
      delete newData[agentId];
      /* istanbul ignore next */
      cov_1i1gfublhn().s[123]++;
      return newData;
    });
    /* istanbul ignore next */
    cov_1i1gfublhn().s[124]++;
    setAgentMetrics(prev => {
      /* istanbul ignore next */
      cov_1i1gfublhn().f[25]++;
      const newData =
      /* istanbul ignore next */
      (cov_1i1gfublhn().s[125]++, {
        ...prev
      });
      /* istanbul ignore next */
      cov_1i1gfublhn().s[126]++;
      delete newData[agentId];
      /* istanbul ignore next */
      cov_1i1gfublhn().s[127]++;
      return newData;
    });
    /* istanbul ignore next */
    cov_1i1gfublhn().s[128]++;
    setAgentPositions(prev => {
      /* istanbul ignore next */
      cov_1i1gfublhn().f[26]++;
      const newData =
      /* istanbul ignore next */
      (cov_1i1gfublhn().s[129]++, {
        ...prev
      });
      /* istanbul ignore next */
      cov_1i1gfublhn().s[130]++;
      delete newData[agentId];
      /* istanbul ignore next */
      cov_1i1gfublhn().s[131]++;
      return newData;
    });
    // Select different agent if current one was removed
    /* istanbul ignore next */
    cov_1i1gfublhn().s[132]++;
    if (selectedAgentId === agentId) {
      /* istanbul ignore next */
      cov_1i1gfublhn().b[34][0]++;
      const remainingAgents =
      /* istanbul ignore next */
      (cov_1i1gfublhn().s[133]++, Array.from(monitoredAgents).filter(id => {
        /* istanbul ignore next */
        cov_1i1gfublhn().f[27]++;
        cov_1i1gfublhn().s[134]++;
        return id !== agentId;
      }));
      /* istanbul ignore next */
      cov_1i1gfublhn().s[135]++;
      setSelectedAgentId(
      /* istanbul ignore next */
      (cov_1i1gfublhn().b[35][0]++, remainingAgents[0]) ||
      /* istanbul ignore next */
      (cov_1i1gfublhn().b[35][1]++, ""));
    } else
    /* istanbul ignore next */
    {
      cov_1i1gfublhn().b[34][1]++;
    }
  }, [isConnected, unregisterAgent, selectedAgentId, monitoredAgents]));
  // Threshold management
  const handleBoundaryThresholdChange =
  /* istanbul ignore next */
  (cov_1i1gfublhn().s[136]++, (0, _react.useCallback)((dimension, value) => {
    /* istanbul ignore next */
    cov_1i1gfublhn().f[28]++;
    cov_1i1gfublhn().s[137]++;
    setBoundaryThresholds(prev => {
      /* istanbul ignore next */
      cov_1i1gfublhn().f[29]++;
      cov_1i1gfublhn().s[138]++;
      return {
        ...prev,
        [dimension]: value
      };
    });
  }, []));
  // Violation acknowledgment
  const handleViolationAcknowledge =
  /* istanbul ignore next */
  (cov_1i1gfublhn().s[139]++, (0, _react.useCallback)(violationId => {
    /* istanbul ignore next */
    cov_1i1gfublhn().f[30]++;
    cov_1i1gfublhn().s[140]++;
    // In a real implementation, this would call an API to acknowledge the violation
    console.log("Acknowledging violation:", violationId);
  }, []));
  // Data export
  const handleExportData =
  /* istanbul ignore next */
  (cov_1i1gfublhn().s[141]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1i1gfublhn().f[31]++;
    const exportData =
    /* istanbul ignore next */
    (cov_1i1gfublhn().s[142]++, {
      timestamp: new Date().toISOString(),
      agents: Array.from(monitoredAgents),
      eventLog: eventLog.slice(0, 100),
      connectionStats,
      monitoringStatus,
      violations: violations.slice(0, 50)
    });
    const blob =
    /* istanbul ignore next */
    (cov_1i1gfublhn().s[143]++, new Blob([JSON.stringify(exportData, null, 2)], {
      type: "application/json"
    }));
    const url =
    /* istanbul ignore next */
    (cov_1i1gfublhn().s[144]++, URL.createObjectURL(blob));
    const a =
    /* istanbul ignore next */
    (cov_1i1gfublhn().s[145]++, document.createElement("a"));
    /* istanbul ignore next */
    cov_1i1gfublhn().s[146]++;
    a.href = url;
    /* istanbul ignore next */
    cov_1i1gfublhn().s[147]++;
    a.download = `markov-blanket-data-${Date.now()}.json`;
    /* istanbul ignore next */
    cov_1i1gfublhn().s[148]++;
    a.click();
    /* istanbul ignore next */
    cov_1i1gfublhn().s[149]++;
    URL.revokeObjectURL(url);
  }, [monitoredAgents, eventLog, connectionStats, monitoringStatus, violations]));
  // Request notification permission
  /* istanbul ignore next */
  cov_1i1gfublhn().s[150]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1i1gfublhn().f[32]++;
    cov_1i1gfublhn().s[151]++;
    if (
    /* istanbul ignore next */
    (cov_1i1gfublhn().b[37][0]++, notificationsEnabled) &&
    /* istanbul ignore next */
    (cov_1i1gfublhn().b[37][1]++, "Notification" in window)) {
      /* istanbul ignore next */
      cov_1i1gfublhn().b[36][0]++;
      cov_1i1gfublhn().s[152]++;
      Notification.requestPermission();
    } else
    /* istanbul ignore next */
    {
      cov_1i1gfublhn().b[36][1]++;
    }
  }, [notificationsEnabled]);
  // Update subscription when monitored agents change
  /* istanbul ignore next */
  cov_1i1gfublhn().s[153]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1i1gfublhn().f[33]++;
    cov_1i1gfublhn().s[154]++;
    if (isConnected) {
      /* istanbul ignore next */
      cov_1i1gfublhn().b[38][0]++;
      cov_1i1gfublhn().s[155]++;
      updateSubscription(subscription);
    } else
    /* istanbul ignore next */
    {
      cov_1i1gfublhn().b[38][1]++;
    }
  }, [isConnected, subscription, updateSubscription]);
  // Periodic status updates
  /* istanbul ignore next */
  cov_1i1gfublhn().s[156]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1i1gfublhn().f[34]++;
    cov_1i1gfublhn().s[157]++;
    if (!isConnected) {
      /* istanbul ignore next */
      cov_1i1gfublhn().b[39][0]++;
      cov_1i1gfublhn().s[158]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1i1gfublhn().b[39][1]++;
    }
    const interval =
    /* istanbul ignore next */
    (cov_1i1gfublhn().s[159]++, setInterval(() => {
      /* istanbul ignore next */
      cov_1i1gfublhn().f[35]++;
      cov_1i1gfublhn().s[160]++;
      getMonitoringStatus();
      /* istanbul ignore next */
      cov_1i1gfublhn().s[161]++;
      getConnectionStats();
      /* istanbul ignore next */
      cov_1i1gfublhn().s[162]++;
      ping();
    }, 30000)); // Every 30 seconds
    /* istanbul ignore next */
    cov_1i1gfublhn().s[163]++;
    return () => {
      /* istanbul ignore next */
      cov_1i1gfublhn().f[36]++;
      cov_1i1gfublhn().s[164]++;
      return clearInterval(interval);
    };
  }, [isConnected, getMonitoringStatus, getConnectionStats, ping]);
  // Get current agent data
  const currentAgentDimensions =
  /* istanbul ignore next */
  (cov_1i1gfublhn().s[165]++, selectedAgentId ?
  /* istanbul ignore next */
  (cov_1i1gfublhn().b[40][0]++, agentDimensions[selectedAgentId]) :
  /* istanbul ignore next */
  (cov_1i1gfublhn().b[40][1]++, null));
  const currentAgentMetrics =
  /* istanbul ignore next */
  (cov_1i1gfublhn().s[166]++, selectedAgentId ?
  /* istanbul ignore next */
  (cov_1i1gfublhn().b[41][0]++, agentMetrics[selectedAgentId]) :
  /* istanbul ignore next */
  (cov_1i1gfublhn().b[41][1]++, null));
  const currentAgentPosition =
  /* istanbul ignore next */
  (cov_1i1gfublhn().s[167]++, selectedAgentId ?
  /* istanbul ignore next */
  (cov_1i1gfublhn().b[42][0]++, agentPositions[selectedAgentId]) :
  /* istanbul ignore next */
  (cov_1i1gfublhn().b[42][1]++, null));
  const currentAgentViolations =
  /* istanbul ignore next */
  (cov_1i1gfublhn().s[168]++, violations.filter(v => {
    /* istanbul ignore next */
    cov_1i1gfublhn().f[37]++;
    cov_1i1gfublhn().s[169]++;
    return v.agent_id === selectedAgentId;
  }).map((v, index) => {
    /* istanbul ignore next */
    cov_1i1gfublhn().f[38]++;
    cov_1i1gfublhn().s[170]++;
    return {
      event_id: `event-${Date.now()}-${index}`,
      agent_id: v.agent_id,
      violation_type: v.violation_type,
      timestamp: v.timestamp,
      severity:
      /* istanbul ignore next */
      (cov_1i1gfublhn().b[43][0]++, parseFloat(v.severity)) ||
      /* istanbul ignore next */
      (cov_1i1gfublhn().b[43][1]++, 0.5),
      independence_measure: v.independence_measure,
      threshold_violated: v.threshold,
      free_energy: 0,
      expected_free_energy: 0,
      kl_divergence: 0,
      acknowledged: false,
      mitigated: false
    };
  }));
  // Generate mock data if no real data available (for demonstration)
  const mockDimensions =
  /* istanbul ignore next */
  (cov_1i1gfublhn().s[171]++, {
    internal_states: [0.3, 0.7, 0.2],
    sensory_states: [0.8, 0.4, 0.6],
    active_states: [0.5, 0.9],
    external_states: [0.2, 0.3, 0.8, 0.1],
    internal_dimension: 0.4,
    sensory_dimension: 0.6,
    active_dimension: 0.7,
    external_dimension: 0.3
  });
  const mockMetrics =
  /* istanbul ignore next */
  (cov_1i1gfublhn().s[172]++, {
    free_energy: 2.34,
    expected_free_energy: 1.89,
    kl_divergence: 0.45,
    boundary_integrity: 0.87,
    conditional_independence: 0.03,
    stability_over_time: 0.92,
    violation_count: violations.length,
    last_violation_time: violations[0]?.timestamp
  });
  const mockPosition =
  /* istanbul ignore next */
  (cov_1i1gfublhn().s[173]++, {
    agent_id: selectedAgentId,
    position: {
      internal: 0.4,
      sensory: 0.6,
      active: 0.7,
      external: 0.3
    },
    boundary_distance: 0.15,
    is_within_boundary: true
  });
  /* istanbul ignore next */
  cov_1i1gfublhn().s[174]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "space-y-6",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex items-center justify-between",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
          className: "text-2xl font-bold",
          children: "Markov Blanket Monitoring"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-muted-foreground",
          children: "Real-time boundary violation detection and agent state monitoring"
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center space-x-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex items-center space-x-2",
          children: [isConnected ?
          /* istanbul ignore next */
          (/*#__PURE__*/cov_1i1gfublhn().b[44][0]++, (0, _jsxruntime.jsx)(_lucidereact.Wifi, {
            className: "h-4 w-4 text-green-500"
          })) :
          /* istanbul ignore next */
          (cov_1i1gfublhn().b[44][1]++, isConnecting ?
          /* istanbul ignore next */
          (/*#__PURE__*/cov_1i1gfublhn().b[45][0]++, (0, _jsxruntime.jsx)(_lucidereact.Activity, {
            className: "h-4 w-4 text-yellow-500 animate-spin"
          })) :
          /* istanbul ignore next */
          (/*#__PURE__*/cov_1i1gfublhn().b[45][1]++, (0, _jsxruntime.jsx)(_lucidereact.WifiOff, {
            className: "h-4 w-4 text-red-500"
          }))), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
            className: "text-sm",
            children: isConnected ?
            /* istanbul ignore next */
            (cov_1i1gfublhn().b[46][0]++, "Connected") :
            /* istanbul ignore next */
            (cov_1i1gfublhn().b[46][1]++, isConnecting ?
            /* istanbul ignore next */
            (cov_1i1gfublhn().b[47][0]++, "Connecting...") :
            /* istanbul ignore next */
            (cov_1i1gfublhn().b[47][1]++, "Disconnected"))
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_badge.Badge, {
          variant: monitoringStatus?.monitoring_active ?
          /* istanbul ignore next */
          (cov_1i1gfublhn().b[48][0]++, "default") :
          /* istanbul ignore next */
          (cov_1i1gfublhn().b[48][1]++, "secondary"),
          children: monitoringStatus?.monitoring_active ?
          /* istanbul ignore next */
          (cov_1i1gfublhn().b[49][0]++, "Monitoring Active") :
          /* istanbul ignore next */
          (cov_1i1gfublhn().b[49][1]++, "Monitoring Inactive")
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex items-center space-x-2",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
            size: "sm",
            variant: "outline",
            onClick: monitoringStatus?.monitoring_active ?
            /* istanbul ignore next */
            (cov_1i1gfublhn().b[50][0]++, stopMonitoring) :
            /* istanbul ignore next */
            (cov_1i1gfublhn().b[50][1]++, startMonitoring),
            disabled: !isConnected,
            children: monitoringStatus?.monitoring_active ?
            /* istanbul ignore next */
            (/*#__PURE__*/cov_1i1gfublhn().b[51][0]++, (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Pause, {
                className: "h-4 w-4 mr-2"
              }), "Stop"]
            })) :
            /* istanbul ignore next */
            (/*#__PURE__*/cov_1i1gfublhn().b[51][1]++, (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Play, {
                className: "h-4 w-4 mr-2"
              }), "Start"]
            }))
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
            size: "sm",
            variant: "outline",
            onClick: handleExportData,
            disabled: !isConnected,
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Download, {
              className: "h-4 w-4 mr-2"
            }), "Export"]
          })]
        })]
      })]
    }),
    /* istanbul ignore next */
    (cov_1i1gfublhn().b[52][0]++, wsError) &&
    /* istanbul ignore next */
    (cov_1i1gfublhn().b[52][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_alert.Alert, {
      className: "border-red-200 bg-red-50",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.AlertTriangle, {
        className: "h-4 w-4"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_alert.AlertTitle, {
        children: "Connection Error"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_alert.AlertDescription, {
        children: wsError
      })]
    })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "grid grid-cols-1 xl:grid-cols-4 gap-6",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
            children: "Monitored Agents"
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
          className: "space-y-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex space-x-2",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
              placeholder: "Agent ID",
              value: newAgentId,
              onChange: e => {
                /* istanbul ignore next */
                cov_1i1gfublhn().f[39]++;
                cov_1i1gfublhn().s[175]++;
                return setNewAgentId(e.target.value);
              },
              onKeyPress: e => {
                /* istanbul ignore next */
                cov_1i1gfublhn().f[40]++;
                cov_1i1gfublhn().s[176]++;
                return /* istanbul ignore next */(cov_1i1gfublhn().b[53][0]++, e.key === "Enter") &&
                /* istanbul ignore next */
                (cov_1i1gfublhn().b[53][1]++, handleAddAgent());
              }
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
              size: "sm",
              onClick: handleAddAgent,
              children: "Add"
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_scrollarea.ScrollArea, {
            className: "h-32",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "space-y-2",
              children: Array.from(monitoredAgents).map(agentId => {
                /* istanbul ignore next */
                cov_1i1gfublhn().f[41]++;
                cov_1i1gfublhn().s[177]++;
                return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex items-center justify-between p-2 border rounded",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center space-x-2",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: `w-2 h-2 rounded-full ${agentPositions[agentId]?.is_within_boundary !== false ?
                      /* istanbul ignore next */
                      (cov_1i1gfublhn().b[54][0]++, "bg-green-500") :
                      /* istanbul ignore next */
                      (cov_1i1gfublhn().b[54][1]++, "bg-red-500")}`
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      className: "text-sm",
                      children: agentId
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
                    size: "sm",
                    variant: "ghost",
                    onClick: () => {
                      /* istanbul ignore next */
                      cov_1i1gfublhn().f[42]++;
                      cov_1i1gfublhn().s[178]++;
                      return handleRemoveAgent(agentId);
                    },
                    children: "\xd7"
                  })]
                }, agentId);
              })
            })
          }),
          /* istanbul ignore next */
          (cov_1i1gfublhn().b[55][0]++, monitoredAgents.size > 0) &&
          /* istanbul ignore next */
          (cov_1i1gfublhn().b[55][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_select.Select, {
            value: selectedAgentId,
            onValueChange: setSelectedAgentId,
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectTrigger, {
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectValue, {
                placeholder: "Select agent to view"
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectContent, {
              children: Array.from(monitoredAgents).map(agentId => {
                /* istanbul ignore next */
                cov_1i1gfublhn().f[43]++;
                cov_1i1gfublhn().s[179]++;
                return /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                  value: agentId,
                  children: agentId
                }, agentId);
              })
            })]
          }))]
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "xl:col-span-3",
        children:
        /* istanbul ignore next */
        (cov_1i1gfublhn().b[56][0]++, selectedAgentId) &&
        /* istanbul ignore next */
        (cov_1i1gfublhn().b[56][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_markovblanketvisualization.MarkovBlanketVisualization, {
          agentId: selectedAgentId,
          dimensions:
          /* istanbul ignore next */
          (cov_1i1gfublhn().b[57][0]++, currentAgentDimensions) ||
          /* istanbul ignore next */
          (cov_1i1gfublhn().b[57][1]++, mockDimensions),
          metrics:
          /* istanbul ignore next */
          (cov_1i1gfublhn().b[58][0]++, currentAgentMetrics) ||
          /* istanbul ignore next */
          (cov_1i1gfublhn().b[58][1]++, mockMetrics),
          violations: currentAgentViolations,
          agentPosition:
          /* istanbul ignore next */
          (cov_1i1gfublhn().b[59][0]++, currentAgentPosition) ||
          /* istanbul ignore next */
          (cov_1i1gfublhn().b[59][1]++, mockPosition),
          boundaryThresholds: boundaryThresholds,
          realTimeUpdates: isConnected,
          showViolations: true,
          showMetrics: true,
          onViolationAcknowledge: handleViolationAcknowledge,
          onBoundaryThresholdChange: handleBoundaryThresholdChange
        }))
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_tabs.Tabs, {
      defaultValue: "events",
      className: "w-full",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_tabs.TabsList, {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsTrigger, {
          value: "events",
          children: "Event Log"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsTrigger, {
          value: "violations",
          children: "Violations"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsTrigger, {
          value: "stats",
          children: "Statistics"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsTrigger, {
          value: "settings",
          children: "Settings"
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsContent, {
        value: "events",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
              children: "Real-Time Event Log"
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_scrollarea.ScrollArea, {
              className: "h-64",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "space-y-2",
                children: eventLog.slice(0, 50).map((event, index) => {
                  /* istanbul ignore next */
                  cov_1i1gfublhn().f[44]++;
                  cov_1i1gfublhn().s[180]++;
                  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "p-2 border rounded text-sm",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "flex items-center justify-between",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                        className: "flex items-center space-x-2",
                        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_badge.Badge, {
                          variant: event.severity === "critical" ?
                          /* istanbul ignore next */
                          (cov_1i1gfublhn().b[60][0]++, "destructive") :
                          /* istanbul ignore next */
                          (cov_1i1gfublhn().b[60][1]++, event.severity === "error" ?
                          /* istanbul ignore next */
                          (cov_1i1gfublhn().b[61][0]++, "destructive") :
                          /* istanbul ignore next */
                          (cov_1i1gfublhn().b[61][1]++, event.severity === "warning" ?
                          /* istanbul ignore next */
                          (cov_1i1gfublhn().b[62][0]++, "default") :
                          /* istanbul ignore next */
                          (cov_1i1gfublhn().b[62][1]++, "secondary"))),
                          children: event.severity
                        }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                          className: "font-medium",
                          children: event.type
                        })]
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                        className: "text-xs text-muted-foreground",
                        children: new Date(event.timestamp).toLocaleTimeString()
                      })]
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: "mt-1",
                      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                        className: "text-xs",
                        children: ["Agent: ", event.agent_id]
                      })
                    })]
                  }, index);
                })
              })
            })
          })]
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsContent, {
        value: "violations",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
              children: "Boundary Violations"
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_scrollarea.ScrollArea, {
              className: "h-64",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "space-y-2",
                children: violations.slice(0, 20).map((violation, index) => {
                  /* istanbul ignore next */
                  cov_1i1gfublhn().f[45]++;
                  cov_1i1gfublhn().s[181]++;
                  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "p-3 border rounded",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "flex items-center justify-between",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                          className: "font-medium",
                          children: violation.violation_type
                        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                          className: "text-sm text-muted-foreground",
                          children: ["Agent: ", violation.agent_id]
                        })]
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_badge.Badge, {
                        variant: "destructive",
                        children: violation.severity
                      })]
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "mt-2 text-xs",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                        children: ["Independence:", " ", violation.independence_measure.toFixed(4)]
                      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                        children: ["Threshold: ", violation.threshold.toFixed(4)]
                      })]
                    })]
                  }, index);
                })
              })
            })
          })]
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsContent, {
        value: "stats",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
              children: "Connection Statistics"
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
            children:
            /* istanbul ignore next */
            (cov_1i1gfublhn().b[63][0]++, connectionStats) &&
            /* istanbul ignore next */
            (cov_1i1gfublhn().b[63][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "grid grid-cols-2 gap-4 text-sm",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                children: "Total Connections:"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                children: connectionStats.total_connections
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                children: "Events Sent:"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                children: connectionStats.total_events_sent
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                children: "Active Violations:"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                children: connectionStats.active_violations
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                children: "Monitored Agents:"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                children: connectionStats.monitored_agents
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                children: "System Uptime:"
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                children: [Math.round(connectionStats.system_uptime), "s"]
              })]
            }))
          })]
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsContent, {
        value: "settings",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
              children: "Dashboard Settings"
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
            className: "space-y-4",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center space-x-2",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_switch.Switch, {
                checked: notificationsEnabled,
                onCheckedChange: setNotificationsEnabled
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
                children: "Browser Notifications"
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center space-x-2",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_switch.Switch, {
                checked: soundAlertsEnabled,
                onCheckedChange: setSoundAlertsEnabled
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
                children: "Sound Alerts"
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center space-x-2",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_switch.Switch, {
                checked: autoAcknowledgeViolations,
                onCheckedChange: setAutoAcknowledgeViolations
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
                children: "Auto-acknowledge Violations"
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "space-y-2",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
                children: "Max Log Entries"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
                type: "number",
                value: maxLogEntries,
                onChange: e => {
                  /* istanbul ignore next */
                  cov_1i1gfublhn().f[46]++;
                  cov_1i1gfublhn().s[182]++;
                  return setMaxLogEntries(
                  /* istanbul ignore next */
                  (cov_1i1gfublhn().b[64][0]++, parseInt(e.target.value)) ||
                  /* istanbul ignore next */
                  (cov_1i1gfublhn().b[64][1]++, 1000));
                },
                min: 100,
                max: 10000
              })]
            })]
          })]
        })
      })]
    })]
  });
};
const _default =
/* istanbul ignore next */
(cov_1i1gfublhn().s[183]++, MarkovBlanketDashboard);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
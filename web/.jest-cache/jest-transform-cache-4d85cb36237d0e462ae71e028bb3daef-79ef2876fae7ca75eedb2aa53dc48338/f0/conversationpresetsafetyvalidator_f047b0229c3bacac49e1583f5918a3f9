ffa54c8cf3139203baafe19ee2b711ee
/**
 * Conversation Preset Safety Validator
 * Implements comprehensive safety validation with Expert Committee Review Protocol integration
 *
 * This validator ensures all parameter changes meet safety and stability requirements
 * before being applied to production conversations.
 */"use strict";

/* istanbul ignore next */
function cov_1gwtnknuck() {
  var path = "/Users/matthewmoroney/builds/FreeAgentics/web/lib/conversation-preset-safety-validator.ts";
  var hash = "a9d715e5634cc2cfdb5eb9f602786818cfaaf68d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewmoroney/builds/FreeAgentics/web/lib/conversation-preset-safety-validator.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "1": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 16,
          column: 3
        }
      },
      "2": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 49
        }
      },
      "3": {
        start: {
          line: 19,
          column: 26
        },
        end: {
          line: 101,
          column: 1
        }
      },
      "4": {
        start: {
          line: 104,
          column: 27
        },
        end: {
          line: 109,
          column: 1
        }
      },
      "5": {
        start: {
          line: 114,
          column: 24
        },
        end: {
          line: 114,
          column: 26
        }
      },
      "6": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 83
        }
      },
      "7": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 79
        }
      },
      "8": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 87
        }
      },
      "9": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 85
        }
      },
      "10": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 71
        }
      },
      "11": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 67
        }
      },
      "12": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 70
        }
      },
      "13": {
        start: {
          line: 127,
          column: 29
        },
        end: {
          line: 127,
          column: 57
        }
      },
      "14": {
        start: {
          line: 127,
          column: 48
        },
        end: {
          line: 127,
          column: 56
        }
      },
      "15": {
        start: {
          line: 128,
          column: 23
        },
        end: {
          line: 128,
          column: 25
        }
      },
      "16": {
        start: {
          line: 129,
          column: 25
        },
        end: {
          line: 129,
          column: 27
        }
      },
      "17": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 144,
          column: 9
        }
      },
      "18": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 135,
          column: 13
        }
      },
      "19": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 134,
          column: 89
        }
      },
      "20": {
        start: {
          line: 134,
          column: 61
        },
        end: {
          line: 134,
          column: 86
        }
      },
      "21": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 143,
          column: 13
        }
      },
      "22": {
        start: {
          line: 138,
          column: 16
        },
        end: {
          line: 142,
          column: 19
        }
      },
      "23": {
        start: {
          line: 139,
          column: 20
        },
        end: {
          line: 141,
          column: 21
        }
      },
      "24": {
        start: {
          line: 140,
          column: 24
        },
        end: {
          line: 140,
          column: 45
        }
      },
      "25": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 150,
          column: 10
        }
      },
      "26": {
        start: {
          line: 155,
          column: 23
        },
        end: {
          line: 155,
          column: 25
        }
      },
      "27": {
        start: {
          line: 156,
          column: 25
        },
        end: {
          line: 156,
          column: 27
        }
      },
      "28": {
        start: {
          line: 157,
          column: 28
        },
        end: {
          line: 157,
          column: 30
        }
      },
      "29": {
        start: {
          line: 159,
          column: 27
        },
        end: {
          line: 159,
          column: 54
        }
      },
      "30": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 163,
          column: 9
        }
      },
      "31": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 112
        }
      },
      "32": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 162,
          column: 92
        }
      },
      "33": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 167,
          column: 9
        }
      },
      "34": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 94
        }
      },
      "35": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 81
        }
      },
      "36": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 171,
          column: 9
        }
      },
      "37": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 107
        }
      },
      "38": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 170,
          column: 82
        }
      },
      "39": {
        start: {
          line: 172,
          column: 26
        },
        end: {
          line: 172,
          column: 86
        }
      },
      "40": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 181,
          column: 10
        }
      },
      "41": {
        start: {
          line: 186,
          column: 23
        },
        end: {
          line: 186,
          column: 25
        }
      },
      "42": {
        start: {
          line: 187,
          column: 25
        },
        end: {
          line: 187,
          column: 27
        }
      },
      "43": {
        start: {
          line: 188,
          column: 28
        },
        end: {
          line: 188,
          column: 30
        }
      },
      "44": {
        start: {
          line: 189,
          column: 30
        },
        end: {
          line: 189,
          column: 58
        }
      },
      "45": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 194,
          column: 9
        }
      },
      "46": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 192,
          column: 98
        }
      },
      "47": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 193,
          column: 80
        }
      },
      "48": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 199,
          column: 9
        }
      },
      "49": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 108
        }
      },
      "50": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 198,
          column: 86
        }
      },
      "51": {
        start: {
          line: 201,
          column: 33
        },
        end: {
          line: 201,
          column: 64
        }
      },
      "52": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 205,
          column: 9
        }
      },
      "53": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 114
        }
      },
      "54": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 204,
          column: 84
        }
      },
      "55": {
        start: {
          line: 206,
          column: 26
        },
        end: {
          line: 206,
          column: 86
        }
      },
      "56": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 215,
          column: 10
        }
      },
      "57": {
        start: {
          line: 220,
          column: 23
        },
        end: {
          line: 220,
          column: 25
        }
      },
      "58": {
        start: {
          line: 221,
          column: 25
        },
        end: {
          line: 221,
          column: 27
        }
      },
      "59": {
        start: {
          line: 222,
          column: 28
        },
        end: {
          line: 222,
          column: 30
        }
      },
      "60": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 227,
          column: 9
        }
      },
      "61": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 225,
          column: 118
        }
      },
      "62": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 226,
          column: 84
        }
      },
      "63": {
        start: {
          line: 229,
          column: 35
        },
        end: {
          line: 229,
          column: 72
        }
      },
      "64": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 233,
          column: 9
        }
      },
      "65": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 231,
          column: 109
        }
      },
      "66": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 232,
          column: 88
        }
      },
      "67": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 237,
          column: 9
        }
      },
      "68": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 235,
          column: 109
        }
      },
      "69": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 236,
          column: 89
        }
      },
      "70": {
        start: {
          line: 238,
          column: 26
        },
        end: {
          line: 238,
          column: 86
        }
      },
      "71": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 247,
          column: 10
        }
      },
      "72": {
        start: {
          line: 252,
          column: 23
        },
        end: {
          line: 252,
          column: 25
        }
      },
      "73": {
        start: {
          line: 253,
          column: 25
        },
        end: {
          line: 253,
          column: 27
        }
      },
      "74": {
        start: {
          line: 254,
          column: 28
        },
        end: {
          line: 254,
          column: 30
        }
      },
      "75": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 259,
          column: 9
        }
      },
      "76": {
        start: {
          line: 257,
          column: 12
        },
        end: {
          line: 257,
          column: 66
        }
      },
      "77": {
        start: {
          line: 258,
          column: 12
        },
        end: {
          line: 258,
          column: 86
        }
      },
      "78": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 263,
          column: 9
        }
      },
      "79": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 261,
          column: 76
        }
      },
      "80": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 262,
          column: 83
        }
      },
      "81": {
        start: {
          line: 264,
          column: 26
        },
        end: {
          line: 264,
          column: 86
        }
      },
      "82": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 273,
          column: 10
        }
      },
      "83": {
        start: {
          line: 278,
          column: 23
        },
        end: {
          line: 278,
          column: 25
        }
      },
      "84": {
        start: {
          line: 279,
          column: 25
        },
        end: {
          line: 279,
          column: 27
        }
      },
      "85": {
        start: {
          line: 280,
          column: 28
        },
        end: {
          line: 280,
          column: 30
        }
      },
      "86": {
        start: {
          line: 282,
          column: 30
        },
        end: {
          line: 282,
          column: 87
        }
      },
      "87": {
        start: {
          line: 283,
          column: 34
        },
        end: {
          line: 283,
          column: 86
        }
      },
      "88": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 287,
          column: 9
        }
      },
      "89": {
        start: {
          line: 285,
          column: 12
        },
        end: {
          line: 285,
          column: 93
        }
      },
      "90": {
        start: {
          line: 286,
          column: 12
        },
        end: {
          line: 286,
          column: 96
        }
      },
      "91": {
        start: {
          line: 289,
          column: 27
        },
        end: {
          line: 289,
          column: 73
        }
      },
      "92": {
        start: {
          line: 290,
          column: 25
        },
        end: {
          line: 290,
          column: 69
        }
      },
      "93": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 294,
          column: 9
        }
      },
      "94": {
        start: {
          line: 292,
          column: 12
        },
        end: {
          line: 292,
          column: 67
        }
      },
      "95": {
        start: {
          line: 293,
          column: 12
        },
        end: {
          line: 293,
          column: 66
        }
      },
      "96": {
        start: {
          line: 295,
          column: 26
        },
        end: {
          line: 295,
          column: 86
        }
      },
      "97": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 304,
          column: 10
        }
      },
      "98": {
        start: {
          line: 309,
          column: 23
        },
        end: {
          line: 309,
          column: 25
        }
      },
      "99": {
        start: {
          line: 310,
          column: 25
        },
        end: {
          line: 310,
          column: 27
        }
      },
      "100": {
        start: {
          line: 311,
          column: 28
        },
        end: {
          line: 311,
          column: 30
        }
      },
      "101": {
        start: {
          line: 313,
          column: 30
        },
        end: {
          line: 313,
          column: 87
        }
      },
      "102": {
        start: {
          line: 314,
          column: 30
        },
        end: {
          line: 314,
          column: 81
        }
      },
      "103": {
        start: {
          line: 316,
          column: 30
        },
        end: {
          line: 316,
          column: 107
        }
      },
      "104": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 320,
          column: 9
        }
      },
      "105": {
        start: {
          line: 318,
          column: 12
        },
        end: {
          line: 318,
          column: 93
        }
      },
      "106": {
        start: {
          line: 319,
          column: 12
        },
        end: {
          line: 319,
          column: 76
        }
      },
      "107": {
        start: {
          line: 321,
          column: 8
        },
        end: {
          line: 324,
          column: 9
        }
      },
      "108": {
        start: {
          line: 322,
          column: 12
        },
        end: {
          line: 322,
          column: 103
        }
      },
      "109": {
        start: {
          line: 323,
          column: 12
        },
        end: {
          line: 323,
          column: 83
        }
      },
      "110": {
        start: {
          line: 325,
          column: 26
        },
        end: {
          line: 325,
          column: 86
        }
      },
      "111": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 334,
          column: 10
        }
      },
      "112": {
        start: {
          line: 339,
          column: 23
        },
        end: {
          line: 339,
          column: 25
        }
      },
      "113": {
        start: {
          line: 340,
          column: 25
        },
        end: {
          line: 340,
          column: 27
        }
      },
      "114": {
        start: {
          line: 341,
          column: 28
        },
        end: {
          line: 341,
          column: 30
        }
      },
      "115": {
        start: {
          line: 343,
          column: 8
        },
        end: {
          line: 346,
          column: 9
        }
      },
      "116": {
        start: {
          line: 344,
          column: 12
        },
        end: {
          line: 344,
          column: 69
        }
      },
      "117": {
        start: {
          line: 345,
          column: 12
        },
        end: {
          line: 345,
          column: 89
        }
      },
      "118": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 351,
          column: 9
        }
      },
      "119": {
        start: {
          line: 349,
          column: 12
        },
        end: {
          line: 349,
          column: 62
        }
      },
      "120": {
        start: {
          line: 350,
          column: 12
        },
        end: {
          line: 350,
          column: 72
        }
      },
      "121": {
        start: {
          line: 352,
          column: 26
        },
        end: {
          line: 352,
          column: 86
        }
      },
      "122": {
        start: {
          line: 353,
          column: 8
        },
        end: {
          line: 361,
          column: 10
        }
      },
      "123": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 366,
          column: 46
        }
      },
      "124": {
        start: {
          line: 366,
          column: 28
        },
        end: {
          line: 366,
          column: 46
        }
      },
      "125": {
        start: {
          line: 367,
          column: 8
        },
        end: {
          line: 367,
          column: 70
        }
      },
      "126": {
        start: {
          line: 367,
          column: 56
        },
        end: {
          line: 367,
          column: 70
        }
      },
      "127": {
        start: {
          line: 368,
          column: 8
        },
        end: {
          line: 368,
          column: 72
        }
      },
      "128": {
        start: {
          line: 368,
          column: 56
        },
        end: {
          line: 368,
          column: 72
        }
      },
      "129": {
        start: {
          line: 369,
          column: 8
        },
        end: {
          line: 369,
          column: 21
        }
      },
      "130": {
        start: {
          line: 374,
          column: 26
        },
        end: {
          line: 379,
          column: 9
        }
      },
      "131": {
        start: {
          line: 380,
          column: 22
        },
        end: {
          line: 380,
          column: 27
        }
      },
      "132": {
        start: {
          line: 381,
          column: 8
        },
        end: {
          line: 385,
          column: 9
        }
      },
      "133": {
        start: {
          line: 382,
          column: 12
        },
        end: {
          line: 384,
          column: 13
        }
      },
      "134": {
        start: {
          line: 383,
          column: 16
        },
        end: {
          line: 383,
          column: 43
        }
      },
      "135": {
        start: {
          line: 386,
          column: 8
        },
        end: {
          line: 386,
          column: 23
        }
      },
      "136": {
        start: {
          line: 392,
          column: 8
        },
        end: {
          line: 392,
          column: 74
        }
      },
      "137": {
        start: {
          line: 392,
          column: 62
        },
        end: {
          line: 392,
          column: 74
        }
      },
      "138": {
        start: {
          line: 394,
          column: 36
        },
        end: {
          line: 394,
          column: 144
        }
      },
      "139": {
        start: {
          line: 394,
          column: 56
        },
        end: {
          line: 394,
          column: 136
        }
      },
      "140": {
        start: {
          line: 395,
          column: 8
        },
        end: {
          line: 395,
          column: 39
        }
      },
      "141": {
        start: {
          line: 400,
          column: 24
        },
        end: {
          line: 400,
          column: 26
        }
      },
      "142": {
        start: {
          line: 401,
          column: 8
        },
        end: {
          line: 411,
          column: 9
        }
      },
      "143": {
        start: {
          line: 402,
          column: 12
        },
        end: {
          line: 404,
          column: 13
        }
      },
      "144": {
        start: {
          line: 403,
          column: 16
        },
        end: {
          line: 403,
          column: 73
        }
      },
      "145": {
        start: {
          line: 405,
          column: 12
        },
        end: {
          line: 407,
          column: 13
        }
      },
      "146": {
        start: {
          line: 406,
          column: 16
        },
        end: {
          line: 406,
          column: 79
        }
      },
      "147": {
        start: {
          line: 408,
          column: 12
        },
        end: {
          line: 410,
          column: 13
        }
      },
      "148": {
        start: {
          line: 409,
          column: 16
        },
        end: {
          line: 409,
          column: 93
        }
      },
      "149": {
        start: {
          line: 413,
          column: 8
        },
        end: {
          line: 415,
          column: 10
        }
      },
      "150": {
        start: {
          line: 420,
          column: 25
        },
        end: {
          line: 420,
          column: 28
        }
      },
      "151": {
        start: {
          line: 421,
          column: 8
        },
        end: {
          line: 429,
          column: 9
        }
      },
      "152": {
        start: {
          line: 422,
          column: 12
        },
        end: {
          line: 424,
          column: 13
        }
      },
      "153": {
        start: {
          line: 423,
          column: 16
        },
        end: {
          line: 423,
          column: 33
        }
      },
      "154": {
        start: {
          line: 425,
          column: 12
        },
        end: {
          line: 425,
          column: 51
        }
      },
      "155": {
        start: {
          line: 426,
          column: 12
        },
        end: {
          line: 428,
          column: 69
        }
      },
      "156": {
        start: {
          line: 426,
          column: 49
        },
        end: {
          line: 426,
          column: 66
        }
      },
      "157": {
        start: {
          line: 427,
          column: 17
        },
        end: {
          line: 428,
          column: 69
        }
      },
      "158": {
        start: {
          line: 427,
          column: 50
        },
        end: {
          line: 427,
          column: 67
        }
      },
      "159": {
        start: {
          line: 428,
          column: 17
        },
        end: {
          line: 428,
          column: 69
        }
      },
      "160": {
        start: {
          line: 428,
          column: 52
        },
        end: {
          line: 428,
          column: 69
        }
      },
      "161": {
        start: {
          line: 430,
          column: 8
        },
        end: {
          line: 430,
          column: 39
        }
      },
      "162": {
        start: {
          line: 435,
          column: 27
        },
        end: {
          line: 435,
          column: 29
        }
      },
      "163": {
        start: {
          line: 436,
          column: 8
        },
        end: {
          line: 436,
          column: 56
        }
      },
      "164": {
        start: {
          line: 436,
          column: 38
        },
        end: {
          line: 436,
          column: 56
        }
      },
      "165": {
        start: {
          line: 437,
          column: 27
        },
        end: {
          line: 480,
          column: 9
        }
      },
      "166": {
        start: {
          line: 481,
          column: 8
        },
        end: {
          line: 483,
          column: 10
        }
      },
      "167": {
        start: {
          line: 488,
          column: 24
        },
        end: {
          line: 488,
          column: 33
        }
      },
      "168": {
        start: {
          line: 489,
          column: 8
        },
        end: {
          line: 500,
          column: 9
        }
      },
      "169": {
        start: {
          line: 490,
          column: 12
        },
        end: {
          line: 499,
          column: 13
        }
      },
      "170": {
        start: {
          line: 492,
          column: 16
        },
        end: {
          line: 492,
          column: 111
        }
      },
      "171": {
        start: {
          line: 493,
          column: 16
        },
        end: {
          line: 493,
          column: 109
        }
      },
      "172": {
        start: {
          line: 494,
          column: 16
        },
        end: {
          line: 494,
          column: 102
        }
      },
      "173": {
        start: {
          line: 495,
          column: 16
        },
        end: {
          line: 495,
          column: 90
        }
      },
      "174": {
        start: {
          line: 496,
          column: 16
        },
        end: {
          line: 496,
          column: 92
        }
      },
      "175": {
        start: {
          line: 497,
          column: 16
        },
        end: {
          line: 497,
          column: 84
        }
      },
      "176": {
        start: {
          line: 498,
          column: 16
        },
        end: {
          line: 498,
          column: 91
        }
      },
      "177": {
        start: {
          line: 501,
          column: 8
        },
        end: {
          line: 501,
          column: 35
        }
      },
      "178": {
        start: {
          line: 506,
          column: 8
        },
        end: {
          line: 714,
          column: 10
        }
      },
      "179": {
        start: {
          line: 720,
          column: 26
        },
        end: {
          line: 720,
          column: 100
        }
      },
      "180": {
        start: {
          line: 721,
          column: 24
        },
        end: {
          line: 726,
          column: 14
        }
      },
      "181": {
        start: {
          line: 727,
          column: 8
        },
        end: {
          line: 747,
          column: 2
        }
      },
      "182": {
        start: {
          line: 735,
          column: 45
        },
        end: {
          line: 735,
          column: 58
        }
      },
      "183": {
        start: {
          line: 742,
          column: 119
        },
        end: {
          line: 742,
          column: 132
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 10
          }
        },
        loc: {
          start: {
            line: 13,
            column: 20
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 113,
            column: 6
          },
          end: {
            line: 113,
            column: 7
          }
        },
        loc: {
          start: {
            line: 113,
            column: 42
          },
          end: {
            line: 151,
            column: 5
          }
        },
        line: 113
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 127,
            column: 43
          },
          end: {
            line: 127,
            column: 44
          }
        },
        loc: {
          start: {
            line: 127,
            column: 48
          },
          end: {
            line: 127,
            column: 56
          }
        },
        line: 127
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 134,
            column: 52
          },
          end: {
            line: 134,
            column: 53
          }
        },
        loc: {
          start: {
            line: 134,
            column: 61
          },
          end: {
            line: 134,
            column: 86
          }
        },
        line: 134
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 138,
            column: 38
          },
          end: {
            line: 138,
            column: 39
          }
        },
        loc: {
          start: {
            line: 138,
            column: 47
          },
          end: {
            line: 142,
            column: 17
          }
        },
        line: 138
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 154,
            column: 6
          },
          end: {
            line: 154,
            column: 7
          }
        },
        loc: {
          start: {
            line: 154,
            column: 62
          },
          end: {
            line: 182,
            column: 5
          }
        },
        line: 154
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 185,
            column: 6
          },
          end: {
            line: 185,
            column: 7
          }
        },
        loc: {
          start: {
            line: 185,
            column: 58
          },
          end: {
            line: 216,
            column: 5
          }
        },
        line: 185
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 219,
            column: 6
          },
          end: {
            line: 219,
            column: 7
          }
        },
        loc: {
          start: {
            line: 219,
            column: 66
          },
          end: {
            line: 248,
            column: 5
          }
        },
        line: 219
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 251,
            column: 6
          },
          end: {
            line: 251,
            column: 7
          }
        },
        loc: {
          start: {
            line: 251,
            column: 64
          },
          end: {
            line: 274,
            column: 5
          }
        },
        line: 251
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 277,
            column: 6
          },
          end: {
            line: 277,
            column: 7
          }
        },
        loc: {
          start: {
            line: 277,
            column: 57
          },
          end: {
            line: 305,
            column: 5
          }
        },
        line: 277
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 308,
            column: 6
          },
          end: {
            line: 308,
            column: 7
          }
        },
        loc: {
          start: {
            line: 308,
            column: 53
          },
          end: {
            line: 335,
            column: 5
          }
        },
        line: 308
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 338,
            column: 6
          },
          end: {
            line: 338,
            column: 7
          }
        },
        loc: {
          start: {
            line: 338,
            column: 56
          },
          end: {
            line: 362,
            column: 5
          }
        },
        line: 338
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 365,
            column: 6
          },
          end: {
            line: 365,
            column: 7
          }
        },
        loc: {
          start: {
            line: 365,
            column: 63
          },
          end: {
            line: 370,
            column: 5
          }
        },
        line: 365
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 373,
            column: 6
          },
          end: {
            line: 373,
            column: 7
          }
        },
        loc: {
          start: {
            line: 373,
            column: 42
          },
          end: {
            line: 387,
            column: 5
          }
        },
        line: 373
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 390,
            column: 6
          },
          end: {
            line: 390,
            column: 7
          }
        },
        loc: {
          start: {
            line: 390,
            column: 63
          },
          end: {
            line: 396,
            column: 5
          }
        },
        line: 390
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 394,
            column: 51
          },
          end: {
            line: 394,
            column: 52
          }
        },
        loc: {
          start: {
            line: 394,
            column: 56
          },
          end: {
            line: 394,
            column: 136
          }
        },
        line: 394
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 399,
            column: 6
          },
          end: {
            line: 399,
            column: 7
          }
        },
        loc: {
          start: {
            line: 399,
            column: 49
          },
          end: {
            line: 416,
            column: 5
          }
        },
        line: 399
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 419,
            column: 6
          },
          end: {
            line: 419,
            column: 7
          }
        },
        loc: {
          start: {
            line: 419,
            column: 43
          },
          end: {
            line: 431,
            column: 5
          }
        },
        line: 419
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 434,
            column: 6
          },
          end: {
            line: 434,
            column: 7
          }
        },
        loc: {
          start: {
            line: 434,
            column: 55
          },
          end: {
            line: 484,
            column: 5
          }
        },
        line: 434
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 487,
            column: 6
          },
          end: {
            line: 487,
            column: 7
          }
        },
        loc: {
          start: {
            line: 487,
            column: 41
          },
          end: {
            line: 502,
            column: 5
          }
        },
        line: 487
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 505,
            column: 6
          },
          end: {
            line: 505,
            column: 7
          }
        },
        loc: {
          start: {
            line: 505,
            column: 33
          },
          end: {
            line: 715,
            column: 5
          }
        },
        line: 505
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 718,
            column: 6
          },
          end: {
            line: 718,
            column: 7
          }
        },
        loc: {
          start: {
            line: 718,
            column: 66
          },
          end: {
            line: 748,
            column: 5
          }
        },
        line: 718
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 735,
            column: 35
          },
          end: {
            line: 735,
            column: 36
          }
        },
        loc: {
          start: {
            line: 735,
            column: 45
          },
          end: {
            line: 735,
            column: 58
          }
        },
        line: 735
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 742,
            column: 109
          },
          end: {
            line: 742,
            column: 110
          }
        },
        loc: {
          start: {
            line: 742,
            column: 119
          },
          end: {
            line: 742,
            column: 132
          }
        },
        line: 742
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 135,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 135,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "1": {
        loc: {
          start: {
            line: 136,
            column: 12
          },
          end: {
            line: 143,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 12
          },
          end: {
            line: 143,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "2": {
        loc: {
          start: {
            line: 136,
            column: 16
          },
          end: {
            line: 136,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 136,
            column: 16
          },
          end: {
            line: 136,
            column: 45
          }
        }, {
          start: {
            line: 136,
            column: 49
          },
          end: {
            line: 136,
            column: 76
          }
        }],
        line: 136
      },
      "3": {
        loc: {
          start: {
            line: 139,
            column: 20
          },
          end: {
            line: 141,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 20
          },
          end: {
            line: 141,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "4": {
        loc: {
          start: {
            line: 139,
            column: 24
          },
          end: {
            line: 139,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 139,
            column: 24
          },
          end: {
            line: 139,
            column: 47
          }
        }, {
          start: {
            line: 139,
            column: 51
          },
          end: {
            line: 139,
            column: 76
          }
        }],
        line: 139
      },
      "5": {
        loc: {
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "6": {
        loc: {
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 167,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 167,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 164
      },
      "7": {
        loc: {
          start: {
            line: 168,
            column: 8
          },
          end: {
            line: 171,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 8
          },
          end: {
            line: 171,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "8": {
        loc: {
          start: {
            line: 180,
            column: 29
          },
          end: {
            line: 180,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 180,
            column: 54
          },
          end: {
            line: 180,
            column: 110
          }
        }, {
          start: {
            line: 180,
            column: 113
          },
          end: {
            line: 180,
            column: 115
          }
        }],
        line: 180
      },
      "9": {
        loc: {
          start: {
            line: 191,
            column: 8
          },
          end: {
            line: 194,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 8
          },
          end: {
            line: 194,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "10": {
        loc: {
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 191,
            column: 122
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 191,
            column: 36
          }
        }, {
          start: {
            line: 191,
            column: 40
          },
          end: {
            line: 191,
            column: 122
          }
        }],
        line: 191
      },
      "11": {
        loc: {
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 199,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 199,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 196
      },
      "12": {
        loc: {
          start: {
            line: 196,
            column: 12
          },
          end: {
            line: 196,
            column: 128
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 196,
            column: 12
          },
          end: {
            line: 196,
            column: 37
          }
        }, {
          start: {
            line: 196,
            column: 41
          },
          end: {
            line: 196,
            column: 128
          }
        }],
        line: 196
      },
      "13": {
        loc: {
          start: {
            line: 202,
            column: 8
          },
          end: {
            line: 205,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 202,
            column: 8
          },
          end: {
            line: 205,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 202
      },
      "14": {
        loc: {
          start: {
            line: 214,
            column: 29
          },
          end: {
            line: 214,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 214,
            column: 54
          },
          end: {
            line: 214,
            column: 108
          }
        }, {
          start: {
            line: 214,
            column: 111
          },
          end: {
            line: 214,
            column: 113
          }
        }],
        line: 214
      },
      "15": {
        loc: {
          start: {
            line: 224,
            column: 8
          },
          end: {
            line: 227,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 8
          },
          end: {
            line: 227,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 224
      },
      "16": {
        loc: {
          start: {
            line: 230,
            column: 8
          },
          end: {
            line: 233,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 230,
            column: 8
          },
          end: {
            line: 233,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 230
      },
      "17": {
        loc: {
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 237,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 237,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "18": {
        loc: {
          start: {
            line: 246,
            column: 29
          },
          end: {
            line: 246,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 246,
            column: 54
          },
          end: {
            line: 246,
            column: 112
          }
        }, {
          start: {
            line: 246,
            column: 115
          },
          end: {
            line: 246,
            column: 117
          }
        }],
        line: 246
      },
      "19": {
        loc: {
          start: {
            line: 256,
            column: 8
          },
          end: {
            line: 259,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 256,
            column: 8
          },
          end: {
            line: 259,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 256
      },
      "20": {
        loc: {
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 263,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 263,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 260
      },
      "21": {
        loc: {
          start: {
            line: 272,
            column: 29
          },
          end: {
            line: 272,
            column: 116
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 272,
            column: 54
          },
          end: {
            line: 272,
            column: 111
          }
        }, {
          start: {
            line: 272,
            column: 114
          },
          end: {
            line: 272,
            column: 116
          }
        }],
        line: 272
      },
      "22": {
        loc: {
          start: {
            line: 284,
            column: 8
          },
          end: {
            line: 287,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 284,
            column: 8
          },
          end: {
            line: 287,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 284
      },
      "23": {
        loc: {
          start: {
            line: 284,
            column: 12
          },
          end: {
            line: 284,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 284,
            column: 12
          },
          end: {
            line: 284,
            column: 29
          }
        }, {
          start: {
            line: 284,
            column: 33
          },
          end: {
            line: 284,
            column: 56
          }
        }],
        line: 284
      },
      "24": {
        loc: {
          start: {
            line: 291,
            column: 8
          },
          end: {
            line: 294,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 291,
            column: 8
          },
          end: {
            line: 294,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 291
      },
      "25": {
        loc: {
          start: {
            line: 291,
            column: 12
          },
          end: {
            line: 291,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 291,
            column: 12
          },
          end: {
            line: 291,
            column: 22
          }
        }, {
          start: {
            line: 291,
            column: 26
          },
          end: {
            line: 291,
            column: 34
          }
        }, {
          start: {
            line: 291,
            column: 38
          },
          end: {
            line: 291,
            column: 59
          }
        }],
        line: 291
      },
      "26": {
        loc: {
          start: {
            line: 303,
            column: 29
          },
          end: {
            line: 303,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 303,
            column: 54
          },
          end: {
            line: 303,
            column: 106
          }
        }, {
          start: {
            line: 303,
            column: 109
          },
          end: {
            line: 303,
            column: 111
          }
        }],
        line: 303
      },
      "27": {
        loc: {
          start: {
            line: 314,
            column: 30
          },
          end: {
            line: 314,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 314,
            column: 30
          },
          end: {
            line: 314,
            column: 74
          }
        }, {
          start: {
            line: 314,
            column: 78
          },
          end: {
            line: 314,
            column: 81
          }
        }],
        line: 314
      },
      "28": {
        loc: {
          start: {
            line: 316,
            column: 30
          },
          end: {
            line: 316,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 316,
            column: 50
          },
          end: {
            line: 316,
            column: 86
          }
        }, {
          start: {
            line: 316,
            column: 89
          },
          end: {
            line: 316,
            column: 107
          }
        }],
        line: 316
      },
      "29": {
        loc: {
          start: {
            line: 317,
            column: 8
          },
          end: {
            line: 320,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 317,
            column: 8
          },
          end: {
            line: 320,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 317
      },
      "30": {
        loc: {
          start: {
            line: 321,
            column: 8
          },
          end: {
            line: 324,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 321,
            column: 8
          },
          end: {
            line: 324,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 321
      },
      "31": {
        loc: {
          start: {
            line: 333,
            column: 29
          },
          end: {
            line: 333,
            column: 110
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 333,
            column: 54
          },
          end: {
            line: 333,
            column: 105
          }
        }, {
          start: {
            line: 333,
            column: 108
          },
          end: {
            line: 333,
            column: 110
          }
        }],
        line: 333
      },
      "32": {
        loc: {
          start: {
            line: 343,
            column: 8
          },
          end: {
            line: 346,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 343,
            column: 8
          },
          end: {
            line: 346,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 343
      },
      "33": {
        loc: {
          start: {
            line: 348,
            column: 8
          },
          end: {
            line: 351,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 348,
            column: 8
          },
          end: {
            line: 351,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 348
      },
      "34": {
        loc: {
          start: {
            line: 348,
            column: 12
          },
          end: {
            line: 348,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 348,
            column: 12
          },
          end: {
            line: 348,
            column: 44
          }
        }, {
          start: {
            line: 348,
            column: 48
          },
          end: {
            line: 348,
            column: 83
          }
        }],
        line: 348
      },
      "35": {
        loc: {
          start: {
            line: 360,
            column: 29
          },
          end: {
            line: 360,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 360,
            column: 54
          },
          end: {
            line: 360,
            column: 102
          }
        }, {
          start: {
            line: 360,
            column: 105
          },
          end: {
            line: 360,
            column: 107
          }
        }],
        line: 360
      },
      "36": {
        loc: {
          start: {
            line: 366,
            column: 8
          },
          end: {
            line: 366,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 366,
            column: 8
          },
          end: {
            line: 366,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 366
      },
      "37": {
        loc: {
          start: {
            line: 367,
            column: 8
          },
          end: {
            line: 367,
            column: 70
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 367,
            column: 8
          },
          end: {
            line: 367,
            column: 70
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 367
      },
      "38": {
        loc: {
          start: {
            line: 367,
            column: 12
          },
          end: {
            line: 367,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 367,
            column: 12
          },
          end: {
            line: 367,
            column: 34
          }
        }, {
          start: {
            line: 367,
            column: 38
          },
          end: {
            line: 367,
            column: 54
          }
        }],
        line: 367
      },
      "39": {
        loc: {
          start: {
            line: 368,
            column: 8
          },
          end: {
            line: 368,
            column: 72
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 368,
            column: 8
          },
          end: {
            line: 368,
            column: 72
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 368
      },
      "40": {
        loc: {
          start: {
            line: 368,
            column: 12
          },
          end: {
            line: 368,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 368,
            column: 12
          },
          end: {
            line: 368,
            column: 34
          }
        }, {
          start: {
            line: 368,
            column: 38
          },
          end: {
            line: 368,
            column: 54
          }
        }],
        line: 368
      },
      "41": {
        loc: {
          start: {
            line: 382,
            column: 12
          },
          end: {
            line: 384,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 382,
            column: 12
          },
          end: {
            line: 384,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 382
      },
      "42": {
        loc: {
          start: {
            line: 392,
            column: 8
          },
          end: {
            line: 392,
            column: 74
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 392,
            column: 8
          },
          end: {
            line: 392,
            column: 74
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 392
      },
      "43": {
        loc: {
          start: {
            line: 392,
            column: 12
          },
          end: {
            line: 392,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 392,
            column: 12
          },
          end: {
            line: 392,
            column: 32
          }
        }, {
          start: {
            line: 392,
            column: 36
          },
          end: {
            line: 392,
            column: 60
          }
        }],
        line: 392
      },
      "44": {
        loc: {
          start: {
            line: 394,
            column: 56
          },
          end: {
            line: 394,
            column: 136
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 394,
            column: 56
          },
          end: {
            line: 394,
            column: 80
          }
        }, {
          start: {
            line: 394,
            column: 84
          },
          end: {
            line: 394,
            column: 106
          }
        }, {
          start: {
            line: 394,
            column: 110
          },
          end: {
            line: 394,
            column: 136
          }
        }],
        line: 394
      },
      "45": {
        loc: {
          start: {
            line: 402,
            column: 12
          },
          end: {
            line: 404,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 402,
            column: 12
          },
          end: {
            line: 404,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 402
      },
      "46": {
        loc: {
          start: {
            line: 405,
            column: 12
          },
          end: {
            line: 407,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 405,
            column: 12
          },
          end: {
            line: 407,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 405
      },
      "47": {
        loc: {
          start: {
            line: 405,
            column: 16
          },
          end: {
            line: 405,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 405,
            column: 16
          },
          end: {
            line: 405,
            column: 43
          }
        }, {
          start: {
            line: 405,
            column: 47
          },
          end: {
            line: 405,
            column: 78
          }
        }],
        line: 405
      },
      "48": {
        loc: {
          start: {
            line: 408,
            column: 12
          },
          end: {
            line: 410,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 408,
            column: 12
          },
          end: {
            line: 410,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 408
      },
      "49": {
        loc: {
          start: {
            line: 422,
            column: 12
          },
          end: {
            line: 424,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 422,
            column: 12
          },
          end: {
            line: 424,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 422
      },
      "50": {
        loc: {
          start: {
            line: 426,
            column: 12
          },
          end: {
            line: 428,
            column: 69
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 426,
            column: 12
          },
          end: {
            line: 428,
            column: 69
          }
        }, {
          start: {
            line: 427,
            column: 17
          },
          end: {
            line: 428,
            column: 69
          }
        }],
        line: 426
      },
      "51": {
        loc: {
          start: {
            line: 427,
            column: 17
          },
          end: {
            line: 428,
            column: 69
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 427,
            column: 17
          },
          end: {
            line: 428,
            column: 69
          }
        }, {
          start: {
            line: 428,
            column: 17
          },
          end: {
            line: 428,
            column: 69
          }
        }],
        line: 427
      },
      "52": {
        loc: {
          start: {
            line: 428,
            column: 17
          },
          end: {
            line: 428,
            column: 69
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 428,
            column: 17
          },
          end: {
            line: 428,
            column: 69
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 428
      },
      "53": {
        loc: {
          start: {
            line: 436,
            column: 8
          },
          end: {
            line: 436,
            column: 56
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 436,
            column: 8
          },
          end: {
            line: 436,
            column: 56
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 436
      },
      "54": {
        loc: {
          start: {
            line: 481,
            column: 15
          },
          end: {
            line: 483,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 481,
            column: 15
          },
          end: {
            line: 481,
            column: 35
          }
        }, {
          start: {
            line: 481,
            column: 39
          },
          end: {
            line: 483,
            column: 9
          }
        }],
        line: 481
      },
      "55": {
        loc: {
          start: {
            line: 490,
            column: 12
          },
          end: {
            line: 499,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 490,
            column: 12
          },
          end: {
            line: 499,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 490
      },
      "56": {
        loc: {
          start: {
            line: 490,
            column: 16
          },
          end: {
            line: 490,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 490,
            column: 16
          },
          end: {
            line: 490,
            column: 43
          }
        }, {
          start: {
            line: 490,
            column: 47
          },
          end: {
            line: 490,
            column: 78
          }
        }],
        line: 490
      },
      "57": {
        loc: {
          start: {
            line: 720,
            column: 26
          },
          end: {
            line: 720,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 720,
            column: 26
          },
          end: {
            line: 720,
            column: 60
          }
        }, {
          start: {
            line: 720,
            column: 64
          },
          end: {
            line: 720,
            column: 100
          }
        }],
        line: 720
      },
      "58": {
        loc: {
          start: {
            line: 721,
            column: 24
          },
          end: {
            line: 726,
            column: 14
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 721,
            column: 36
          },
          end: {
            line: 726,
            column: 9
          }
        }, {
          start: {
            line: 726,
            column: 12
          },
          end: {
            line: 726,
            column: 14
          }
        }],
        line: 721
      },
      "59": {
        loc: {
          start: {
            line: 731,
            column: 13
          },
          end: {
            line: 731,
            column: 52
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 731,
            column: 40
          },
          end: {
            line: 731,
            column: 45
          }
        }, {
          start: {
            line: 731,
            column: 48
          },
          end: {
            line: 731,
            column: 52
          }
        }],
        line: 731
      },
      "60": {
        loc: {
          start: {
            line: 732,
            column: 30
          },
          end: {
            line: 732,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 732,
            column: 42
          },
          end: {
            line: 732,
            column: 47
          }
        }, {
          start: {
            line: 732,
            column: 50
          },
          end: {
            line: 732,
            column: 54
          }
        }],
        line: 732
      },
      "61": {
        loc: {
          start: {
            line: 735,
            column: 2
          },
          end: {
            line: 735,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 735,
            column: 23
          },
          end: {
            line: 735,
            column: 70
          }
        }, {
          start: {
            line: 735,
            column: 73
          },
          end: {
            line: 735,
            column: 88
          }
        }],
        line: 735
      },
      "62": {
        loc: {
          start: {
            line: 738,
            column: 14
          },
          end: {
            line: 738,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 738,
            column: 51
          },
          end: {
            line: 738,
            column: 87
          }
        }, {
          start: {
            line: 738,
            column: 90
          },
          end: {
            line: 738,
            column: 96
          }
        }],
        line: 738
      },
      "63": {
        loc: {
          start: {
            line: 739,
            column: 16
          },
          end: {
            line: 739,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 739,
            column: 55
          },
          end: {
            line: 739,
            column: 93
          }
        }, {
          start: {
            line: 739,
            column: 96
          },
          end: {
            line: 739,
            column: 102
          }
        }],
        line: 739
      },
      "64": {
        loc: {
          start: {
            line: 742,
            column: 2
          },
          end: {
            line: 742,
            column: 177
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 742,
            column: 76
          },
          end: {
            line: 742,
            column: 144
          }
        }, {
          start: {
            line: 742,
            column: 147
          },
          end: {
            line: 742,
            column: 177
          }
        }],
        line: 742
      },
      "65": {
        loc: {
          start: {
            line: 742,
            column: 2
          },
          end: {
            line: 742,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 742,
            column: 2
          },
          end: {
            line: 742,
            column: 30
          }
        }, {
          start: {
            line: 742,
            column: 34
          },
          end: {
            line: 742,
            column: 73
          }
        }],
        line: 742
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matthewmoroney/builds/FreeAgentics/web/lib/conversation-preset-safety-validator.ts"],
      sourcesContent: ["/**\n * Conversation Preset Safety Validator\n * Implements comprehensive safety validation with Expert Committee Review Protocol integration\n *\n * This validator ensures all parameter changes meet safety and stability requirements\n * before being applied to production conversations.\n */\n\nimport {\n  ConversationPreset,\n  ValidationResult,\n  SafetyCheckResult,\n  ExpertReviewStatus,\n} from \"./types\";\n\n/**\n * Safety thresholds and limits\n */\nconst SAFETY_LIMITS = {\n  responseDynamics: {\n    turnTaking: {\n      maxConcurrentResponses: { min: 1, max: 10, safe: 5 },\n      responseThreshold: { min: 0.1, max: 1.0, safe: 0.7 },\n      cooldownPeriod: { min: 500, max: 10000, safe: 2000 },\n    },\n    balancing: {\n      distributionMode: [\"equal\", \"weighted\", \"priority\"],\n      agentPriorities: { min: 0.0, max: 1.0, safe: 0.5 },\n    },\n  },\n  timingControls: {\n    responseDelay: {\n      fixedDelay: { min: 100, max: 30000, safe: 1000 },\n      randomDelay: { min: 0, max: 10000, safe: 2000 },\n      maxDelay: { min: 1000, max: 60000, safe: 5000 },\n    },\n    realTimeControls: {\n      updateFrequency: { min: 100, max: 5000, safe: 1000 },\n      ghostMessageDuration: { min: 1000, max: 30000, safe: 5000 },\n    },\n  },\n  advancedParameters: {\n    emergencyStopThreshold: { min: 0.8, max: 1.0, safe: 0.95 },\n    performanceMetrics: {\n      responseTimeLimit: { min: 1000, max: 30000, safe: 5000 },\n      qualityThreshold: { min: 0.5, max: 1.0, safe: 0.7 },\n    },\n  },\n};\n\n/**\n * Risk levels for different parameter changes\n */\ntype RiskLevel = \"low\" | \"medium\" | \"high\" | \"critical\";\n\ninterface RiskAssessment {\n  level: RiskLevel;\n  factors: string[];\n  mitigation: string[];\n  requiresExpertReview: boolean;\n}\n\n/**\n * Expert Committee Review domains\n */\nconst EXPERT_DOMAINS = {\n  CONVERSATION_DYNAMICS: \"conversation_dynamics\",\n  PERFORMANCE_OPTIMIZATION: \"performance_optimization\",\n  SAFETY_PROTOCOLS: \"safety_protocols\",\n  ARCHITECTURE_INTEGRATION: \"architecture_integration\",\n};\n\n/**\n * Main safety validator class\n */\nexport class ConversationPresetSafetyValidator {\n  /**\n   * Validate a conversation preset for safety and stability\n   */\n  static async validatePreset(\n    preset: ConversationPreset,\n  ): Promise<ValidationResult> {\n    const results: SafetyCheckResult[] = [];\n\n    // Core parameter validation\n    results.push(await this.validateResponseDynamics(preset.responseDynamics));\n    results.push(await this.validateTimingControls(preset.timingControls));\n    results.push(\n      await this.validateAdvancedParameters(preset.advancedParameters),\n    );\n    results.push(\n      await this.validateSafetyConstraints(preset.safetyConstraints),\n    );\n\n    // Cross-parameter validation\n    results.push(await this.validateParameterInteractions(preset));\n\n    // Performance impact assessment\n    results.push(await this.validatePerformanceImpact(preset));\n\n    // Security validation\n    results.push(await this.validateSecurityImplications(preset));\n\n    // Aggregate results\n    const overallValid = results.every((r) => r.passed);\n    const errors: string[] = [];\n    const warnings: string[] = [];\n\n    // Collect all errors and warnings\n    for (const result of results) {\n      if (!result.passed) {\n        // Add issues from failed checks as errors\n        errors.push(\n          ...result.issues.filter((issue) => !warnings.includes(issue)),\n        );\n      }\n      if (result.riskLevel === \"medium\" || result.riskLevel === \"high\") {\n        // Add issues from medium/high risk as warnings (avoid duplicates)\n        result.issues.forEach((issue) => {\n          if (!errors.includes(issue) && !warnings.includes(issue)) {\n            warnings.push(issue);\n          }\n        });\n      }\n    }\n\n    return {\n      isValid: overallValid,\n      errors,\n      warnings,\n      suggestions: this.generateRecommendedActions(results),\n    };\n  }\n\n  /**\n   * Validate response dynamics parameters\n   */\n  private static async validateResponseDynamics(\n    responseDynamics: any,\n  ): Promise<SafetyCheckResult> {\n    const errors: string[] = [];\n    const warnings: string[] = [];\n    const riskFactors: string[] = [];\n\n    // Turn-taking validation\n    const turnTaking = responseDynamics.turnTaking;\n\n    if (\n      turnTaking.maxConcurrentResponses >\n      SAFETY_LIMITS.responseDynamics.turnTaking.maxConcurrentResponses.max\n    ) {\n      errors.push(\n        `Max concurrent responses (${turnTaking.maxConcurrentResponses}) exceeds safety limit`,\n      );\n      riskFactors.push(\n        \"Excessive concurrent responses may cause conversation chaos\",\n      );\n    }\n\n    if (\n      turnTaking.responseThreshold <\n      SAFETY_LIMITS.responseDynamics.turnTaking.responseThreshold.min\n    ) {\n      warnings.push(\n        `Response threshold (${turnTaking.responseThreshold}) is very low`,\n      );\n      riskFactors.push(\"Low threshold may cause over-responsive behavior\");\n    }\n\n    if (\n      turnTaking.cooldownPeriod <\n      SAFETY_LIMITS.responseDynamics.turnTaking.cooldownPeriod.min\n    ) {\n      errors.push(\n        `Cooldown period (${turnTaking.cooldownPeriod}ms) too short for stable operation`,\n      );\n      riskFactors.push(\"Insufficient cooldown may cause response flooding\");\n    }\n\n    const riskLevel = this.assessRisk(\n      riskFactors,\n      errors.length,\n      warnings.length,\n    );\n\n    return {\n      passed: errors.length === 0,\n      riskLevel,\n      issues: [...errors, ...warnings],\n      recommendations:\n        riskFactors.length > 0\n          ? this.generateMitigation(\"responseDynamics\", riskFactors)\n          : [],\n    };\n  }\n\n  /**\n   * Validate timing controls parameters\n   */\n  private static async validateTimingControls(\n    timingControls: any,\n  ): Promise<SafetyCheckResult> {\n    const errors: string[] = [];\n    const warnings: string[] = [];\n    const riskFactors: string[] = [];\n\n    const responseDelay = timingControls.responseDelay;\n\n    // Fixed delay validation\n    if (\n      responseDelay.fixedDelay &&\n      responseDelay.fixedDelay >\n        SAFETY_LIMITS.timingControls.responseDelay.maxDelay.max\n    ) {\n      errors.push(\n        `Fixed delay (${responseDelay.fixedDelay}ms) exceeds maximum safe limit`,\n      );\n      riskFactors.push(\"Excessive delay may cause conversation timeouts\");\n    }\n\n    // Random delay validation\n    if (\n      responseDelay.randomDelay &&\n      responseDelay.randomDelay >\n        SAFETY_LIMITS.timingControls.responseDelay.randomDelay.safe\n    ) {\n      warnings.push(\n        `Random delay (${responseDelay.randomDelay}ms) may cause unpredictable behavior`,\n      );\n      riskFactors.push(\"High random delay reduces conversation predictability\");\n    }\n\n    // Real-time controls validation\n    const realTimeControls = timingControls.realTimeControls;\n    if (\n      realTimeControls.updateFrequency <\n      SAFETY_LIMITS.timingControls.realTimeControls.updateFrequency.min\n    ) {\n      errors.push(\n        `Update frequency (${realTimeControls.updateFrequency}ms) too high for system stability`,\n      );\n      riskFactors.push(\"High update frequency may overload system resources\");\n    }\n\n    const riskLevel = this.assessRisk(\n      riskFactors,\n      errors.length,\n      warnings.length,\n    );\n\n    return {\n      passed: errors.length === 0,\n      riskLevel,\n      issues: [...errors, ...warnings],\n      recommendations:\n        riskFactors.length > 0\n          ? this.generateMitigation(\"timingControls\", riskFactors)\n          : [],\n    };\n  }\n\n  /**\n   * Validate advanced parameters\n   */\n  private static async validateAdvancedParameters(\n    advancedParameters: any,\n  ): Promise<SafetyCheckResult> {\n    const errors: string[] = [];\n    const warnings: string[] = [];\n    const riskFactors: string[] = [];\n\n    // Emergency stop validation\n    if (\n      advancedParameters.emergencyStopThreshold <\n      SAFETY_LIMITS.advancedParameters.emergencyStopThreshold.min\n    ) {\n      errors.push(\n        `Emergency stop threshold (${advancedParameters.emergencyStopThreshold}) too low for safety`,\n      );\n      riskFactors.push(\"Low emergency threshold may trigger false positives\");\n    }\n\n    // Performance metrics validation\n    const performanceMetrics = advancedParameters.performanceMetrics;\n    if (\n      performanceMetrics.responseTimeLimit <\n      SAFETY_LIMITS.advancedParameters.performanceMetrics.responseTimeLimit.min\n    ) {\n      warnings.push(\n        `Response time limit (${performanceMetrics.responseTimeLimit}ms) very aggressive`,\n      );\n      riskFactors.push(\n        \"Aggressive time limits may cause premature terminations\",\n      );\n    }\n\n    if (\n      performanceMetrics.qualityThreshold >\n      SAFETY_LIMITS.advancedParameters.performanceMetrics.qualityThreshold.max\n    ) {\n      warnings.push(\n        `Quality threshold (${performanceMetrics.qualityThreshold}) unrealistically high`,\n      );\n      riskFactors.push(\n        \"Unrealistic quality requirements may block all responses\",\n      );\n    }\n\n    const riskLevel = this.assessRisk(\n      riskFactors,\n      errors.length,\n      warnings.length,\n    );\n\n    return {\n      passed: errors.length === 0,\n      riskLevel,\n      issues: [...errors, ...warnings],\n      recommendations:\n        riskFactors.length > 0\n          ? this.generateMitigation(\"advancedParameters\", riskFactors)\n          : [],\n    };\n  }\n\n  /**\n   * Validate safety constraints\n   */\n  private static async validateSafetyConstraints(\n    safetyConstraints: any,\n  ): Promise<SafetyCheckResult> {\n    const errors: string[] = [];\n    const warnings: string[] = [];\n    const riskFactors: string[] = [];\n\n    // Validate safety mechanisms are properly configured\n    if (!safetyConstraints.emergencyStopEnabled) {\n      warnings.push(\"Emergency stop mechanism is disabled\");\n      riskFactors.push(\"No emergency shutdown capability in unsafe conditions\");\n    }\n\n    if (!safetyConstraints.auditLoggingEnabled) {\n      errors.push(\"Audit logging must be enabled for production use\");\n      riskFactors.push(\"No audit trail for parameter changes and decisions\");\n    }\n\n    const riskLevel = this.assessRisk(\n      riskFactors,\n      errors.length,\n      warnings.length,\n    );\n\n    return {\n      passed: errors.length === 0,\n      riskLevel,\n      issues: [...errors, ...warnings],\n      recommendations:\n        riskFactors.length > 0\n          ? this.generateMitigation(\"safetyConstraints\", riskFactors)\n          : [],\n    };\n  }\n\n  /**\n   * Validate parameter interactions\n   */\n  private static async validateParameterInteractions(\n    preset: ConversationPreset,\n  ): Promise<SafetyCheckResult> {\n    const errors: string[] = [];\n    const warnings: string[] = [];\n    const riskFactors: string[] = [];\n\n    // Check for conflicting parameters\n    const maxConcurrent =\n      preset.responseDynamics.turnTaking.maxConcurrentResponses;\n    const responseThreshold =\n      preset.responseDynamics.turnTaking.responseThreshold;\n\n    if (maxConcurrent > 5 && responseThreshold < 0.3) {\n      warnings.push(\n        \"High concurrency with low threshold may cause response flooding\",\n      );\n      riskFactors.push(\n        \"Parameter combination may create unstable conversation dynamics\",\n      );\n    }\n\n    // Check timing consistency\n    const fixedDelay = preset.timingControls.responseDelay.fixedDelay;\n    const maxDelay = preset.timingControls.responseDelay.maxDelay;\n\n    if (fixedDelay && maxDelay && fixedDelay > maxDelay) {\n      errors.push(\"Fixed delay cannot exceed maximum delay\");\n      riskFactors.push(\"Inconsistent timing configuration\");\n    }\n\n    const riskLevel = this.assessRisk(\n      riskFactors,\n      errors.length,\n      warnings.length,\n    );\n\n    return {\n      passed: errors.length === 0,\n      riskLevel,\n      issues: [...errors, ...warnings],\n      recommendations:\n        riskFactors.length > 0\n          ? this.generateMitigation(\"interactions\", riskFactors)\n          : [],\n    };\n  }\n\n  /**\n   * Validate performance impact\n   */\n  private static async validatePerformanceImpact(\n    preset: ConversationPreset,\n  ): Promise<SafetyCheckResult> {\n    const errors: string[] = [];\n    const warnings: string[] = [];\n    const riskFactors: string[] = [];\n\n    // Estimate resource usage based on concurrent responses\n    const maxConcurrent =\n      preset.responseDynamics.turnTaking.maxConcurrentResponses;\n    const responseDelay = preset.timingControls.responseDelay.minDelay || 500;\n\n    // Estimate load based on minimum response delay\n    const estimatedLoad =\n      responseDelay > 0\n        ? (1000 / responseDelay) * maxConcurrent\n        : maxConcurrent * 10;\n\n    if (estimatedLoad > 50) {\n      warnings.push(\n        `High estimated system load: ${estimatedLoad.toFixed(1)} ops/sec`,\n      );\n      riskFactors.push(\"Configuration may impact system performance\");\n    }\n\n    if (estimatedLoad > 100) {\n      errors.push(\n        `Excessive system load: ${estimatedLoad.toFixed(1)} ops/sec exceeds capacity`,\n      );\n      riskFactors.push(\"Configuration will likely cause system instability\");\n    }\n\n    const riskLevel = this.assessRisk(\n      riskFactors,\n      errors.length,\n      warnings.length,\n    );\n\n    return {\n      passed: errors.length === 0,\n      riskLevel,\n      issues: [...errors, ...warnings],\n      recommendations:\n        riskFactors.length > 0\n          ? this.generateMitigation(\"performance\", riskFactors)\n          : [],\n    };\n  }\n\n  /**\n   * Validate security implications\n   */\n  private static async validateSecurityImplications(\n    preset: ConversationPreset,\n  ): Promise<SafetyCheckResult> {\n    const errors: string[] = [];\n    const warnings: string[] = [];\n    const riskFactors: string[] = [];\n\n    // Check for potential DoS vectors\n    if (preset.responseDynamics.turnTaking.maxConcurrentResponses > 8) {\n      warnings.push(\"High concurrency may enable DoS attacks\");\n      riskFactors.push(\n        \"Configuration may be exploitable for resource exhaustion\",\n      );\n    }\n\n    // Check monitoring capabilities\n    if (\n      !preset.monitoring.enableMetrics ||\n      !preset.monitoring.trackPerformance\n    ) {\n      warnings.push(\"Monitoring capabilities disabled\");\n      riskFactors.push(\"Limited visibility into system behavior\");\n    }\n\n    const riskLevel = this.assessRisk(\n      riskFactors,\n      errors.length,\n      warnings.length,\n    );\n\n    return {\n      passed: errors.length === 0,\n      riskLevel,\n      issues: [...errors, ...warnings],\n      recommendations:\n        riskFactors.length > 0\n          ? this.generateMitigation(\"security\", riskFactors)\n          : [],\n    };\n  }\n\n  /**\n   * Assess risk level based on factors and issues\n   */\n  private static assessRisk(\n    riskFactors: string[],\n    errorCount: number,\n    warningCount: number,\n  ): RiskLevel {\n    if (errorCount > 0) return \"critical\";\n    if (riskFactors.length > 3 || warningCount > 2) return \"high\";\n    if (riskFactors.length > 1 || warningCount > 0) return \"medium\";\n    return \"low\";\n  }\n\n  /**\n   * Get highest risk level from all checks\n   */\n  private static getHighestRiskLevel(results: SafetyCheckResult[]): RiskLevel {\n    const riskOrder: RiskLevel[] = [\"low\", \"medium\", \"high\", \"critical\"];\n    let highest: RiskLevel = \"low\";\n\n    for (const result of results) {\n      if (riskOrder.indexOf(result.riskLevel) > riskOrder.indexOf(highest)) {\n        highest = result.riskLevel;\n      }\n    }\n\n    return highest;\n  }\n\n  /**\n   * Determine if Expert Committee Review is required\n   */\n  private static requiresExpertCommitteeReview(\n    results: SafetyCheckResult[],\n    riskLevel: RiskLevel,\n  ): boolean {\n    // Always require review for high or critical risk\n    if (riskLevel === \"high\" || riskLevel === \"critical\") return true;\n\n    // Require review if multiple checks have medium or higher risk\n    const mediumOrHigherCount = results.filter(\n      (r) =>\n        r.riskLevel === \"medium\" ||\n        r.riskLevel === \"high\" ||\n        r.riskLevel === \"critical\",\n    ).length;\n\n    return mediumOrHigherCount > 2;\n  }\n\n  /**\n   * Generate recommended actions based on validation results\n   */\n  private static generateRecommendedActions(\n    results: SafetyCheckResult[],\n  ): string[] {\n    const actions: string[] = [];\n\n    for (const result of results) {\n      if (!result.passed) {\n        actions.push(`Fix critical issues in validation checks`);\n      }\n      if (result.riskLevel === \"high\" || result.riskLevel === \"critical\") {\n        actions.push(`Conduct expert review for high-risk parameters`);\n      }\n      if (result.issues.length > 0) {\n        actions.push(\n          `Review and address ${result.issues.length} issues identified`,\n        );\n      }\n    }\n\n    // Remove duplicates\n    return [...new Set(actions)];\n  }\n\n  /**\n   * Calculate overall safety score (0-100)\n   */\n  private static calculateSafetyScore(results: SafetyCheckResult[]): number {\n    let totalScore = 100;\n\n    for (const result of results) {\n      if (!result.passed) {\n        totalScore -= 20;\n      }\n      totalScore -= result.issues.length * 5;\n      if (result.riskLevel === \"critical\") totalScore -= 20;\n      else if (result.riskLevel === \"high\") totalScore -= 15;\n      else if (result.riskLevel === \"medium\") totalScore -= 10;\n    }\n\n    return Math.max(0, totalScore);\n  }\n\n  /**\n   * Generate mitigation strategies\n   */\n  private static generateMitigation(\n    category: string,\n    riskFactors: string[],\n  ): string[] {\n    const mitigation: string[] = [];\n\n    if (riskFactors.length === 0) return mitigation;\n\n    const strategies = {\n      responseDynamics: [\n        \"Reduce maximum concurrent responses\",\n        \"Increase response threshold\",\n        \"Implement gradual parameter changes\",\n        \"Add cooldown period validation\",\n      ],\n      timingControls: [\n        \"Reduce update frequency\",\n        \"Implement delay bounds checking\",\n        \"Add performance monitoring\",\n        \"Use conservative timing defaults\",\n      ],\n      advancedParameters: [\n        \"Review emergency stop configuration\",\n        \"Validate performance thresholds\",\n        \"Implement gradual threshold changes\",\n        \"Add parameter bounds checking\",\n      ],\n      safetyConstraints: [\n        \"Enable all safety mechanisms\",\n        \"Implement comprehensive audit logging\",\n        \"Add emergency shutdown procedures\",\n        \"Establish monitoring protocols\",\n      ],\n      interactions: [\n        \"Review parameter combinations\",\n        \"Implement conflict detection\",\n        \"Add parameter validation rules\",\n        \"Use configuration templates\",\n      ],\n      performance: [\n        \"Reduce system load parameters\",\n        \"Implement resource monitoring\",\n        \"Add performance benchmarks\",\n        \"Use load testing validation\",\n      ],\n      security: [\n        \"Enable security monitoring\",\n        \"Implement rate limiting\",\n        \"Add DoS protection\",\n        \"Enable audit logging\",\n      ],\n    };\n\n    return strategies[category] || [\"Review configuration with expert\"];\n  }\n\n  /**\n   * Get expert reviewers for specific domains\n   */\n  static getRequiredExperts(results: SafetyCheckResult[]): string[] {\n    const experts = new Set<string>();\n\n    for (const result of results) {\n      if (result.riskLevel === \"high\" || result.riskLevel === \"critical\") {\n        // Add all experts for high-risk items\n        experts.add(\n          \"Harrison Chase (@hwchase17): LangChain integration - conversation orchestration\",\n        );\n        experts.add(\n          \"Jo\xE3o Moura (@joaomdmoura): CrewAI coordination - multi-agent collaboration\",\n        );\n        experts.add(\n          \"Guillermo Rauch (@rauchg): Platform scaling - performance optimization\",\n        );\n        experts.add(\n          \"Robert C. Martin (@unclebob): Safety protocol architecture\",\n        );\n        experts.add(\n          \"Mitchell Hashimoto (@mitchellh): Infrastructure optimization\",\n        );\n        experts.add(\"Kent Beck (@KentBeck): Safety testing and validation\");\n        experts.add(\n          \"Rich Hickey: Simplicity principles and integration patterns\",\n        );\n      }\n    }\n\n    return Array.from(experts);\n  }\n\n  /**\n   * Get default presets\n   */\n  static getDefaultPresets(): Record<string, Partial<ConversationPreset>> {\n    return {\n      conservative: {\n        responseDynamics: {\n          turnTaking: {\n            enabled: true,\n            maxConcurrentResponses: 1,\n            responseThreshold: 0.8,\n            mentionResponseProbability: 0.95,\n            conversationStarterResponseRate: 0.9,\n          },\n          agentSelection: {\n            autoSelectRespondents: true,\n            selectionStrategy: \"expertise_based\",\n            diversityBonus: 0.3,\n            expertiseWeight: 0.8,\n            maxSpeakersPerTurn: 1,\n          },\n          responseGeneration: {\n            maxKnowledgeEntries: 10,\n            includeAgentKnowledge: true,\n            streamResponse: false,\n            responseLength: \"short\",\n            creativityLevel: 0.3,\n            coherenceWeight: 0.9,\n          },\n        },\n        timingControls: {\n          responseDelay: {\n            type: \"fixed\",\n            fixedDelay: 1500,\n            minDelay: 1000,\n            maxDelay: 3000,\n            adaptiveFactors: {\n              messageLength: false,\n              agentProcessingTime: false,\n              conversationPace: false,\n            },\n          },\n          conversationFlow: {\n            maxAutonomousMessages: 10,\n            stallDetectionTimeout: 15000,\n            stallRecoveryStrategy: \"end_conversation\",\n            turnTimeoutDuration: 30000,\n            pauseBetweenTurns: 1000,\n          },\n          realTimeControls: {\n            enableTypingIndicators: false,\n            typingIndicatorDelay: 1000,\n            messagePreviewEnabled: false,\n            ghostMessageDuration: 3000,\n          },\n        },\n        advancedParameters: {\n          conversationDynamics: {\n            topicDriftAllowance: 0.1,\n            contextWindowSize: 5,\n            semanticCoherenceThreshold: 0.9,\n            emotionalToneConsistency: 0.8,\n          },\n          agentBehavior: {\n            personalityInfluence: 0.5,\n            expertiseBoost: 0.7,\n            randomnessInjection: 0.1,\n            memoryRetentionFactor: 0.9,\n          },\n          qualityControls: {\n            minimumResponseQuality: 0.8,\n            duplicateDetectionSensitivity: 0.9,\n            relevanceThreshold: 0.9,\n            factualAccuracyWeight: 0.95,\n          },\n          performanceOptimization: {\n            enableCaching: false,\n            cacheExpirationTime: 60000,\n            maxConcurrentGenerations: 1,\n            resourceThrottling: true,\n          },\n        },\n        safetyConstraints: {\n          enableSafetyChecks: true,\n          maxResponseLength: 1000,\n          contentFiltering: true,\n          rateLimiting: {\n            enabled: true,\n            maxRequestsPerMinute: 30,\n            maxRequestsPerHour: 500,\n          },\n          emergencyStopConditions: [\"high_error_rate\", \"quality_degradation\"],\n        },\n        monitoring: {\n          enableMetrics: true,\n          trackPerformance: true,\n          logLevel: \"info\",\n          metricsRetentionDays: 7,\n          alertThresholds: {\n            responseTimeMs: 10000,\n            errorRate: 0.05,\n            qualityScore: 0.7,\n          },\n        },\n      },\n      balanced: {\n        responseDynamics: {\n          turnTaking: {\n            enabled: true,\n            maxConcurrentResponses: 2,\n            responseThreshold: 0.6,\n            mentionResponseProbability: 0.9,\n            conversationStarterResponseRate: 0.85,\n          },\n          agentSelection: {\n            autoSelectRespondents: true,\n            selectionStrategy: \"engagement_based\",\n            diversityBonus: 0.5,\n            expertiseWeight: 0.6,\n            maxSpeakersPerTurn: 2,\n          },\n          responseGeneration: {\n            maxKnowledgeEntries: 20,\n            includeAgentKnowledge: true,\n            streamResponse: true,\n            responseLength: \"medium\",\n            creativityLevel: 0.5,\n            coherenceWeight: 0.7,\n          },\n        },\n        timingControls: {\n          responseDelay: {\n            type: \"range\",\n            fixedDelay: 800,\n            minDelay: 500,\n            maxDelay: 2000,\n            adaptiveFactors: {\n              messageLength: true,\n              agentProcessingTime: true,\n              conversationPace: true,\n            },\n          },\n          conversationFlow: {\n            maxAutonomousMessages: 25,\n            stallDetectionTimeout: 8000,\n            stallRecoveryStrategy: \"prompt_random\",\n            turnTimeoutDuration: 20000,\n            pauseBetweenTurns: 300,\n          },\n          realTimeControls: {\n            enableTypingIndicators: true,\n            typingIndicatorDelay: 500,\n            messagePreviewEnabled: true,\n            ghostMessageDuration: 5000,\n          },\n        },\n      },\n      aggressive: {\n        responseDynamics: {\n          turnTaking: {\n            enabled: true,\n            maxConcurrentResponses: 5,\n            responseThreshold: 0.3,\n            mentionResponseProbability: 0.8,\n            conversationStarterResponseRate: 0.75,\n          },\n          agentSelection: {\n            autoSelectRespondents: true,\n            selectionStrategy: \"random\",\n            diversityBonus: 0.7,\n            expertiseWeight: 0.3,\n            maxSpeakersPerTurn: 4,\n          },\n          responseGeneration: {\n            maxKnowledgeEntries: 30,\n            includeAgentKnowledge: true,\n            streamResponse: true,\n            responseLength: \"long\",\n            creativityLevel: 0.8,\n            coherenceWeight: 0.5,\n          },\n        },\n        timingControls: {\n          responseDelay: {\n            type: \"adaptive\",\n            fixedDelay: 300,\n            minDelay: 100,\n            maxDelay: 1000,\n            adaptiveFactors: {\n              messageLength: true,\n              agentProcessingTime: true,\n              conversationPace: true,\n            },\n          },\n          conversationFlow: {\n            maxAutonomousMessages: 50,\n            stallDetectionTimeout: 3000,\n            stallRecoveryStrategy: \"prompt_expert\",\n            turnTimeoutDuration: 10000,\n            pauseBetweenTurns: 0,\n          },\n          realTimeControls: {\n            enableTypingIndicators: true,\n            typingIndicatorDelay: 200,\n            messagePreviewEnabled: true,\n            ghostMessageDuration: 8000,\n          },\n        },\n      },\n    };\n  }\n\n  /**\n   * Generate Expert Committee Review report\n   */\n  static generateExpertReviewReport(\n    preset: ConversationPreset,\n    validationResult: ValidationResult,\n  ): string {\n    // Since ValidationResult doesn't have checks property, we'll create a simpler report\n    const hasIssues =\n      validationResult.errors.length > 0 ||\n      validationResult.warnings.length > 0;\n    const experts = hasIssues\n      ? [\n          \"Harrison Chase (@hwchase17): LangChain integration - conversation orchestration\",\n          \"Jo\xE3o Moura (@joaomdmoura): CrewAI coordination - multi-agent collaboration\",\n          \"Guillermo Rauch (@rauchg): Platform scaling - performance optimization\",\n          \"Robert C. Martin (@unclebob): Safety protocol architecture\",\n        ]\n      : [];\n\n    return `\n# Expert Committee Review Report\n\n## Preset: ${preset.name}\n**Valid**: ${validationResult.isValid ? \"YES\" : \"NO\"}\n**Expert Review Required**: ${hasIssues ? \"YES\" : \"NO\"}\n\n## Required Expert Consultations:\n${experts.length > 0 ? experts.map((expert) => `- ${expert}`).join(\"\\n\") : \"None required\"}\n\n## Validation Results:\n**Errors**: ${validationResult.errors.length > 0 ? validationResult.errors.join(\"\\n- \") : \"None\"}\n**Warnings**: ${validationResult.warnings.length > 0 ? validationResult.warnings.join(\"\\n- \") : \"None\"}\n\n## Recommended Actions:\n${\n  validationResult.suggestions && validationResult.suggestions.length > 0\n    ? validationResult.suggestions.map((action) => `- ${action}`).join(\"\\n\")\n    : \"No specific actions required\"\n}\n\n---\n*Generated by Conversation Preset Safety Validator v1.0*\n*Expert Committee Review Protocol (Task #33) Compliance*\n`;\n  }\n}\n"],
      names: ["ConversationPresetSafetyValidator", "SAFETY_LIMITS", "responseDynamics", "turnTaking", "maxConcurrentResponses", "min", "max", "safe", "responseThreshold", "cooldownPeriod", "balancing", "distributionMode", "agentPriorities", "timingControls", "responseDelay", "fixedDelay", "randomDelay", "maxDelay", "realTimeControls", "updateFrequency", "ghostMessageDuration", "advancedParameters", "emergencyStopThreshold", "performanceMetrics", "responseTimeLimit", "qualityThreshold", "EXPERT_DOMAINS", "CONVERSATION_DYNAMICS", "PERFORMANCE_OPTIMIZATION", "SAFETY_PROTOCOLS", "ARCHITECTURE_INTEGRATION", "validatePreset", "preset", "results", "push", "validateResponseDynamics", "validateTimingControls", "validateAdvancedParameters", "validateSafetyConstraints", "safetyConstraints", "validateParameterInteractions", "validatePerformanceImpact", "validateSecurityImplications", "overallValid", "every", "r", "passed", "errors", "warnings", "result", "issues", "filter", "issue", "includes", "riskLevel", "forEach", "isValid", "suggestions", "generateRecommendedActions", "riskFactors", "assessRisk", "length", "recommendations", "generateMitigation", "emergencyStopEnabled", "auditLoggingEnabled", "maxConcurrent", "minDelay", "estimatedLoad", "toFixed", "monitoring", "enableMetrics", "trackPerformance", "errorCount", "warningCount", "getHighestRiskLevel", "riskOrder", "highest", "indexOf", "requiresExpertCommitteeReview", "mediumOrHigherCount", "actions", "Set", "calculateSafetyScore", "totalScore", "Math", "category", "mitigation", "strategies", "interactions", "performance", "security", "getRequiredExperts", "experts", "add", "Array", "from", "getDefaultPresets", "conservative", "enabled", "mentionResponseProbability", "conversationStarterResponseRate", "agentSelection", "autoSelectRespondents", "selectionStrategy", "diversityBonus", "expertiseWeight", "maxSpeakersPerTurn", "responseGeneration", "maxKnowledgeEntries", "includeAgentKnowledge", "streamResponse", "responseLength", "creativityLevel", "coherenceWeight", "type", "adaptiveFactors", "messageLength", "agentProcessingTime", "conversationPace", "conversationFlow", "maxAutonomousMessages", "stallDetectionTimeout", "stallRecoveryStrategy", "turnTimeoutDuration", "pauseBetweenTurns", "enableTypingIndicators", "typingIndicatorDelay", "messagePreviewEnabled", "conversationDynamics", "topicDriftAllowance", "contextWindowSize", "semanticCoherenceThreshold", "emotionalToneConsistency", "agentBehavior", "personalityInfluence", "expertiseBoost", "randomnessInjection", "memoryRetentionFactor", "qualityControls", "minimumResponseQuality", "duplicateDetectionSensitivity", "relevanceThreshold", "factualAccuracyWeight", "performanceOptimization", "enableCaching", "cacheExpirationTime", "maxConcurrentGenerations", "resourceThrottling", "enableSafetyChecks", "maxResponseLength", "contentFiltering", "rateLimiting", "maxRequestsPerMinute", "maxRequestsPerHour", "emergencyStopConditions", "logLevel", "metricsRetentionDays", "alertThresholds", "responseTimeMs", "errorRate", "qualityScore", "balanced", "aggressive", "generateExpertReviewReport", "validationResult", "hasIssues", "name", "map", "expert", "join", "action"],
      mappings: "AAAA;;;;;;CAMC;;;;+BAqEYA;;;eAAAA;;;AA5Db;;CAEC,GACD,MAAMC,gBAAgB;IACpBC,kBAAkB;QAChBC,YAAY;YACVC,wBAAwB;gBAAEC,KAAK;gBAAGC,KAAK;gBAAIC,MAAM;YAAE;YACnDC,mBAAmB;gBAAEH,KAAK;gBAAKC,KAAK;gBAAKC,MAAM;YAAI;YACnDE,gBAAgB;gBAAEJ,KAAK;gBAAKC,KAAK;gBAAOC,MAAM;YAAK;QACrD;QACAG,WAAW;YACTC,kBAAkB;gBAAC;gBAAS;gBAAY;aAAW;YACnDC,iBAAiB;gBAAEP,KAAK;gBAAKC,KAAK;gBAAKC,MAAM;YAAI;QACnD;IACF;IACAM,gBAAgB;QACdC,eAAe;YACbC,YAAY;gBAAEV,KAAK;gBAAKC,KAAK;gBAAOC,MAAM;YAAK;YAC/CS,aAAa;gBAAEX,KAAK;gBAAGC,KAAK;gBAAOC,MAAM;YAAK;YAC9CU,UAAU;gBAAEZ,KAAK;gBAAMC,KAAK;gBAAOC,MAAM;YAAK;QAChD;QACAW,kBAAkB;YAChBC,iBAAiB;gBAAEd,KAAK;gBAAKC,KAAK;gBAAMC,MAAM;YAAK;YACnDa,sBAAsB;gBAAEf,KAAK;gBAAMC,KAAK;gBAAOC,MAAM;YAAK;QAC5D;IACF;IACAc,oBAAoB;QAClBC,wBAAwB;YAAEjB,KAAK;YAAKC,KAAK;YAAKC,MAAM;QAAK;QACzDgB,oBAAoB;YAClBC,mBAAmB;gBAAEnB,KAAK;gBAAMC,KAAK;gBAAOC,MAAM;YAAK;YACvDkB,kBAAkB;gBAAEpB,KAAK;gBAAKC,KAAK;gBAAKC,MAAM;YAAI;QACpD;IACF;AACF;AAcA;;CAEC,GACD,MAAMmB,iBAAiB;IACrBC,uBAAuB;IACvBC,0BAA0B;IAC1BC,kBAAkB;IAClBC,0BAA0B;AAC5B;AAKO,MAAM9B;IACX;;GAEC,GACD,aAAa+B,eACXC,MAA0B,EACC;QAC3B,MAAMC,UAA+B,EAAE;QAEvC,4BAA4B;QAC5BA,QAAQC,IAAI,CAAC,MAAM,IAAI,CAACC,wBAAwB,CAACH,OAAO9B,gBAAgB;QACxE+B,QAAQC,IAAI,CAAC,MAAM,IAAI,CAACE,sBAAsB,CAACJ,OAAOnB,cAAc;QACpEoB,QAAQC,IAAI,CACV,MAAM,IAAI,CAACG,0BAA0B,CAACL,OAAOX,kBAAkB;QAEjEY,QAAQC,IAAI,CACV,MAAM,IAAI,CAACI,yBAAyB,CAACN,OAAOO,iBAAiB;QAG/D,6BAA6B;QAC7BN,QAAQC,IAAI,CAAC,MAAM,IAAI,CAACM,6BAA6B,CAACR;QAEtD,gCAAgC;QAChCC,QAAQC,IAAI,CAAC,MAAM,IAAI,CAACO,yBAAyB,CAACT;QAElD,sBAAsB;QACtBC,QAAQC,IAAI,CAAC,MAAM,IAAI,CAACQ,4BAA4B,CAACV;QAErD,oBAAoB;QACpB,MAAMW,eAAeV,QAAQW,KAAK,CAAC,CAACC,IAAMA,EAAEC,MAAM;QAClD,MAAMC,SAAmB,EAAE;QAC3B,MAAMC,WAAqB,EAAE;QAE7B,kCAAkC;QAClC,KAAK,MAAMC,UAAUhB,QAAS;YAC5B,IAAI,CAACgB,OAAOH,MAAM,EAAE;gBAClB,0CAA0C;gBAC1CC,OAAOb,IAAI,IACNe,OAAOC,MAAM,CAACC,MAAM,CAAC,CAACC,QAAU,CAACJ,SAASK,QAAQ,CAACD;YAE1D;YACA,IAAIH,OAAOK,SAAS,KAAK,YAAYL,OAAOK,SAAS,KAAK,QAAQ;gBAChE,kEAAkE;gBAClEL,OAAOC,MAAM,CAACK,OAAO,CAAC,CAACH;oBACrB,IAAI,CAACL,OAAOM,QAAQ,CAACD,UAAU,CAACJ,SAASK,QAAQ,CAACD,QAAQ;wBACxDJ,SAASd,IAAI,CAACkB;oBAChB;gBACF;YACF;QACF;QAEA,OAAO;YACLI,SAASb;YACTI;YACAC;YACAS,aAAa,IAAI,CAACC,0BAA0B,CAACzB;QAC/C;IACF;IAEA;;GAEC,GACD,aAAqBE,yBACnBjC,gBAAqB,EACO;QAC5B,MAAM6C,SAAmB,EAAE;QAC3B,MAAMC,WAAqB,EAAE;QAC7B,MAAMW,cAAwB,EAAE;QAEhC,yBAAyB;QACzB,MAAMxD,aAAaD,iBAAiBC,UAAU;QAE9C,IACEA,WAAWC,sBAAsB,GACjCH,cAAcC,gBAAgB,CAACC,UAAU,CAACC,sBAAsB,CAACE,GAAG,EACpE;YACAyC,OAAOb,IAAI,CACT,CAAC,0BAA0B,EAAE/B,WAAWC,sBAAsB,CAAC,sBAAsB,CAAC;YAExFuD,YAAYzB,IAAI,CACd;QAEJ;QAEA,IACE/B,WAAWK,iBAAiB,GAC5BP,cAAcC,gBAAgB,CAACC,UAAU,CAACK,iBAAiB,CAACH,GAAG,EAC/D;YACA2C,SAASd,IAAI,CACX,CAAC,oBAAoB,EAAE/B,WAAWK,iBAAiB,CAAC,aAAa,CAAC;YAEpEmD,YAAYzB,IAAI,CAAC;QACnB;QAEA,IACE/B,WAAWM,cAAc,GACzBR,cAAcC,gBAAgB,CAACC,UAAU,CAACM,cAAc,CAACJ,GAAG,EAC5D;YACA0C,OAAOb,IAAI,CACT,CAAC,iBAAiB,EAAE/B,WAAWM,cAAc,CAAC,kCAAkC,CAAC;YAEnFkD,YAAYzB,IAAI,CAAC;QACnB;QAEA,MAAMoB,YAAY,IAAI,CAACM,UAAU,CAC/BD,aACAZ,OAAOc,MAAM,EACbb,SAASa,MAAM;QAGjB,OAAO;YACLf,QAAQC,OAAOc,MAAM,KAAK;YAC1BP;YACAJ,QAAQ;mBAAIH;mBAAWC;aAAS;YAChCc,iBACEH,YAAYE,MAAM,GAAG,IACjB,IAAI,CAACE,kBAAkB,CAAC,oBAAoBJ,eAC5C,EAAE;QACV;IACF;IAEA;;GAEC,GACD,aAAqBvB,uBACnBvB,cAAmB,EACS;QAC5B,MAAMkC,SAAmB,EAAE;QAC3B,MAAMC,WAAqB,EAAE;QAC7B,MAAMW,cAAwB,EAAE;QAEhC,MAAM7C,gBAAgBD,eAAeC,aAAa;QAElD,yBAAyB;QACzB,IACEA,cAAcC,UAAU,IACxBD,cAAcC,UAAU,GACtBd,cAAcY,cAAc,CAACC,aAAa,CAACG,QAAQ,CAACX,GAAG,EACzD;YACAyC,OAAOb,IAAI,CACT,CAAC,aAAa,EAAEpB,cAAcC,UAAU,CAAC,8BAA8B,CAAC;YAE1E4C,YAAYzB,IAAI,CAAC;QACnB;QAEA,0BAA0B;QAC1B,IACEpB,cAAcE,WAAW,IACzBF,cAAcE,WAAW,GACvBf,cAAcY,cAAc,CAACC,aAAa,CAACE,WAAW,CAACT,IAAI,EAC7D;YACAyC,SAASd,IAAI,CACX,CAAC,cAAc,EAAEpB,cAAcE,WAAW,CAAC,oCAAoC,CAAC;YAElF2C,YAAYzB,IAAI,CAAC;QACnB;QAEA,gCAAgC;QAChC,MAAMhB,mBAAmBL,eAAeK,gBAAgB;QACxD,IACEA,iBAAiBC,eAAe,GAChClB,cAAcY,cAAc,CAACK,gBAAgB,CAACC,eAAe,CAACd,GAAG,EACjE;YACA0C,OAAOb,IAAI,CACT,CAAC,kBAAkB,EAAEhB,iBAAiBC,eAAe,CAAC,iCAAiC,CAAC;YAE1FwC,YAAYzB,IAAI,CAAC;QACnB;QAEA,MAAMoB,YAAY,IAAI,CAACM,UAAU,CAC/BD,aACAZ,OAAOc,MAAM,EACbb,SAASa,MAAM;QAGjB,OAAO;YACLf,QAAQC,OAAOc,MAAM,KAAK;YAC1BP;YACAJ,QAAQ;mBAAIH;mBAAWC;aAAS;YAChCc,iBACEH,YAAYE,MAAM,GAAG,IACjB,IAAI,CAACE,kBAAkB,CAAC,kBAAkBJ,eAC1C,EAAE;QACV;IACF;IAEA;;GAEC,GACD,aAAqBtB,2BACnBhB,kBAAuB,EACK;QAC5B,MAAM0B,SAAmB,EAAE;QAC3B,MAAMC,WAAqB,EAAE;QAC7B,MAAMW,cAAwB,EAAE;QAEhC,4BAA4B;QAC5B,IACEtC,mBAAmBC,sBAAsB,GACzCrB,cAAcoB,kBAAkB,CAACC,sBAAsB,CAACjB,GAAG,EAC3D;YACA0C,OAAOb,IAAI,CACT,CAAC,0BAA0B,EAAEb,mBAAmBC,sBAAsB,CAAC,oBAAoB,CAAC;YAE9FqC,YAAYzB,IAAI,CAAC;QACnB;QAEA,iCAAiC;QACjC,MAAMX,qBAAqBF,mBAAmBE,kBAAkB;QAChE,IACEA,mBAAmBC,iBAAiB,GACpCvB,cAAcoB,kBAAkB,CAACE,kBAAkB,CAACC,iBAAiB,CAACnB,GAAG,EACzE;YACA2C,SAASd,IAAI,CACX,CAAC,qBAAqB,EAAEX,mBAAmBC,iBAAiB,CAAC,mBAAmB,CAAC;YAEnFmC,YAAYzB,IAAI,CACd;QAEJ;QAEA,IACEX,mBAAmBE,gBAAgB,GACnCxB,cAAcoB,kBAAkB,CAACE,kBAAkB,CAACE,gBAAgB,CAACnB,GAAG,EACxE;YACA0C,SAASd,IAAI,CACX,CAAC,mBAAmB,EAAEX,mBAAmBE,gBAAgB,CAAC,sBAAsB,CAAC;YAEnFkC,YAAYzB,IAAI,CACd;QAEJ;QAEA,MAAMoB,YAAY,IAAI,CAACM,UAAU,CAC/BD,aACAZ,OAAOc,MAAM,EACbb,SAASa,MAAM;QAGjB,OAAO;YACLf,QAAQC,OAAOc,MAAM,KAAK;YAC1BP;YACAJ,QAAQ;mBAAIH;mBAAWC;aAAS;YAChCc,iBACEH,YAAYE,MAAM,GAAG,IACjB,IAAI,CAACE,kBAAkB,CAAC,sBAAsBJ,eAC9C,EAAE;QACV;IACF;IAEA;;GAEC,GACD,aAAqBrB,0BACnBC,iBAAsB,EACM;QAC5B,MAAMQ,SAAmB,EAAE;QAC3B,MAAMC,WAAqB,EAAE;QAC7B,MAAMW,cAAwB,EAAE;QAEhC,qDAAqD;QACrD,IAAI,CAACpB,kBAAkByB,oBAAoB,EAAE;YAC3ChB,SAASd,IAAI,CAAC;YACdyB,YAAYzB,IAAI,CAAC;QACnB;QAEA,IAAI,CAACK,kBAAkB0B,mBAAmB,EAAE;YAC1ClB,OAAOb,IAAI,CAAC;YACZyB,YAAYzB,IAAI,CAAC;QACnB;QAEA,MAAMoB,YAAY,IAAI,CAACM,UAAU,CAC/BD,aACAZ,OAAOc,MAAM,EACbb,SAASa,MAAM;QAGjB,OAAO;YACLf,QAAQC,OAAOc,MAAM,KAAK;YAC1BP;YACAJ,QAAQ;mBAAIH;mBAAWC;aAAS;YAChCc,iBACEH,YAAYE,MAAM,GAAG,IACjB,IAAI,CAACE,kBAAkB,CAAC,qBAAqBJ,eAC7C,EAAE;QACV;IACF;IAEA;;GAEC,GACD,aAAqBnB,8BACnBR,MAA0B,EACE;QAC5B,MAAMe,SAAmB,EAAE;QAC3B,MAAMC,WAAqB,EAAE;QAC7B,MAAMW,cAAwB,EAAE;QAEhC,mCAAmC;QACnC,MAAMO,gBACJlC,OAAO9B,gBAAgB,CAACC,UAAU,CAACC,sBAAsB;QAC3D,MAAMI,oBACJwB,OAAO9B,gBAAgB,CAACC,UAAU,CAACK,iBAAiB;QAEtD,IAAI0D,gBAAgB,KAAK1D,oBAAoB,KAAK;YAChDwC,SAASd,IAAI,CACX;YAEFyB,YAAYzB,IAAI,CACd;QAEJ;QAEA,2BAA2B;QAC3B,MAAMnB,aAAaiB,OAAOnB,cAAc,CAACC,aAAa,CAACC,UAAU;QACjE,MAAME,WAAWe,OAAOnB,cAAc,CAACC,aAAa,CAACG,QAAQ;QAE7D,IAAIF,cAAcE,YAAYF,aAAaE,UAAU;YACnD8B,OAAOb,IAAI,CAAC;YACZyB,YAAYzB,IAAI,CAAC;QACnB;QAEA,MAAMoB,YAAY,IAAI,CAACM,UAAU,CAC/BD,aACAZ,OAAOc,MAAM,EACbb,SAASa,MAAM;QAGjB,OAAO;YACLf,QAAQC,OAAOc,MAAM,KAAK;YAC1BP;YACAJ,QAAQ;mBAAIH;mBAAWC;aAAS;YAChCc,iBACEH,YAAYE,MAAM,GAAG,IACjB,IAAI,CAACE,kBAAkB,CAAC,gBAAgBJ,eACxC,EAAE;QACV;IACF;IAEA;;GAEC,GACD,aAAqBlB,0BACnBT,MAA0B,EACE;QAC5B,MAAMe,SAAmB,EAAE;QAC3B,MAAMC,WAAqB,EAAE;QAC7B,MAAMW,cAAwB,EAAE;QAEhC,wDAAwD;QACxD,MAAMO,gBACJlC,OAAO9B,gBAAgB,CAACC,UAAU,CAACC,sBAAsB;QAC3D,MAAMU,gBAAgBkB,OAAOnB,cAAc,CAACC,aAAa,CAACqD,QAAQ,IAAI;QAEtE,gDAAgD;QAChD,MAAMC,gBACJtD,gBAAgB,IACZ,AAAC,OAAOA,gBAAiBoD,gBACzBA,gBAAgB;QAEtB,IAAIE,gBAAgB,IAAI;YACtBpB,SAASd,IAAI,CACX,CAAC,4BAA4B,EAAEkC,cAAcC,OAAO,CAAC,GAAG,QAAQ,CAAC;YAEnEV,YAAYzB,IAAI,CAAC;QACnB;QAEA,IAAIkC,gBAAgB,KAAK;YACvBrB,OAAOb,IAAI,CACT,CAAC,uBAAuB,EAAEkC,cAAcC,OAAO,CAAC,GAAG,yBAAyB,CAAC;YAE/EV,YAAYzB,IAAI,CAAC;QACnB;QAEA,MAAMoB,YAAY,IAAI,CAACM,UAAU,CAC/BD,aACAZ,OAAOc,MAAM,EACbb,SAASa,MAAM;QAGjB,OAAO;YACLf,QAAQC,OAAOc,MAAM,KAAK;YAC1BP;YACAJ,QAAQ;mBAAIH;mBAAWC;aAAS;YAChCc,iBACEH,YAAYE,MAAM,GAAG,IACjB,IAAI,CAACE,kBAAkB,CAAC,eAAeJ,eACvC,EAAE;QACV;IACF;IAEA;;GAEC,GACD,aAAqBjB,6BACnBV,MAA0B,EACE;QAC5B,MAAMe,SAAmB,EAAE;QAC3B,MAAMC,WAAqB,EAAE;QAC7B,MAAMW,cAAwB,EAAE;QAEhC,kCAAkC;QAClC,IAAI3B,OAAO9B,gBAAgB,CAACC,UAAU,CAACC,sBAAsB,GAAG,GAAG;YACjE4C,SAASd,IAAI,CAAC;YACdyB,YAAYzB,IAAI,CACd;QAEJ;QAEA,gCAAgC;QAChC,IACE,CAACF,OAAOsC,UAAU,CAACC,aAAa,IAChC,CAACvC,OAAOsC,UAAU,CAACE,gBAAgB,EACnC;YACAxB,SAASd,IAAI,CAAC;YACdyB,YAAYzB,IAAI,CAAC;QACnB;QAEA,MAAMoB,YAAY,IAAI,CAACM,UAAU,CAC/BD,aACAZ,OAAOc,MAAM,EACbb,SAASa,MAAM;QAGjB,OAAO;YACLf,QAAQC,OAAOc,MAAM,KAAK;YAC1BP;YACAJ,QAAQ;mBAAIH;mBAAWC;aAAS;YAChCc,iBACEH,YAAYE,MAAM,GAAG,IACjB,IAAI,CAACE,kBAAkB,CAAC,YAAYJ,eACpC,EAAE;QACV;IACF;IAEA;;GAEC,GACD,OAAeC,WACbD,WAAqB,EACrBc,UAAkB,EAClBC,YAAoB,EACT;QACX,IAAID,aAAa,GAAG,OAAO;QAC3B,IAAId,YAAYE,MAAM,GAAG,KAAKa,eAAe,GAAG,OAAO;QACvD,IAAIf,YAAYE,MAAM,GAAG,KAAKa,eAAe,GAAG,OAAO;QACvD,OAAO;IACT;IAEA;;GAEC,GACD,OAAeC,oBAAoB1C,OAA4B,EAAa;QAC1E,MAAM2C,YAAyB;YAAC;YAAO;YAAU;YAAQ;SAAW;QACpE,IAAIC,UAAqB;QAEzB,KAAK,MAAM5B,UAAUhB,QAAS;YAC5B,IAAI2C,UAAUE,OAAO,CAAC7B,OAAOK,SAAS,IAAIsB,UAAUE,OAAO,CAACD,UAAU;gBACpEA,UAAU5B,OAAOK,SAAS;YAC5B;QACF;QAEA,OAAOuB;IACT;IAEA;;GAEC,GACD,OAAeE,8BACb9C,OAA4B,EAC5BqB,SAAoB,EACX;QACT,kDAAkD;QAClD,IAAIA,cAAc,UAAUA,cAAc,YAAY,OAAO;QAE7D,+DAA+D;QAC/D,MAAM0B,sBAAsB/C,QAAQkB,MAAM,CACxC,CAACN,IACCA,EAAES,SAAS,KAAK,YAChBT,EAAES,SAAS,KAAK,UAChBT,EAAES,SAAS,KAAK,YAClBO,MAAM;QAER,OAAOmB,sBAAsB;IAC/B;IAEA;;GAEC,GACD,OAAetB,2BACbzB,OAA4B,EAClB;QACV,MAAMgD,UAAoB,EAAE;QAE5B,KAAK,MAAMhC,UAAUhB,QAAS;YAC5B,IAAI,CAACgB,OAAOH,MAAM,EAAE;gBAClBmC,QAAQ/C,IAAI,CAAC,CAAC,wCAAwC,CAAC;YACzD;YACA,IAAIe,OAAOK,SAAS,KAAK,UAAUL,OAAOK,SAAS,KAAK,YAAY;gBAClE2B,QAAQ/C,IAAI,CAAC,CAAC,8CAA8C,CAAC;YAC/D;YACA,IAAIe,OAAOC,MAAM,CAACW,MAAM,GAAG,GAAG;gBAC5BoB,QAAQ/C,IAAI,CACV,CAAC,mBAAmB,EAAEe,OAAOC,MAAM,CAACW,MAAM,CAAC,kBAAkB,CAAC;YAElE;QACF;QAEA,oBAAoB;QACpB,OAAO;eAAI,IAAIqB,IAAID;SAAS;IAC9B;IAEA;;GAEC,GACD,OAAeE,qBAAqBlD,OAA4B,EAAU;QACxE,IAAImD,aAAa;QAEjB,KAAK,MAAMnC,UAAUhB,QAAS;YAC5B,IAAI,CAACgB,OAAOH,MAAM,EAAE;gBAClBsC,cAAc;YAChB;YACAA,cAAcnC,OAAOC,MAAM,CAACW,MAAM,GAAG;YACrC,IAAIZ,OAAOK,SAAS,KAAK,YAAY8B,cAAc;iBAC9C,IAAInC,OAAOK,SAAS,KAAK,QAAQ8B,cAAc;iBAC/C,IAAInC,OAAOK,SAAS,KAAK,UAAU8B,cAAc;QACxD;QAEA,OAAOC,KAAK/E,GAAG,CAAC,GAAG8E;IACrB;IAEA;;GAEC,GACD,OAAerB,mBACbuB,QAAgB,EAChB3B,WAAqB,EACX;QACV,MAAM4B,aAAuB,EAAE;QAE/B,IAAI5B,YAAYE,MAAM,KAAK,GAAG,OAAO0B;QAErC,MAAMC,aAAa;YACjBtF,kBAAkB;gBAChB;gBACA;gBACA;gBACA;aACD;YACDW,gBAAgB;gBACd;gBACA;gBACA;gBACA;aACD;YACDQ,oBAAoB;gBAClB;gBACA;gBACA;gBACA;aACD;YACDkB,mBAAmB;gBACjB;gBACA;gBACA;gBACA;aACD;YACDkD,cAAc;gBACZ;gBACA;gBACA;gBACA;aACD;YACDC,aAAa;gBACX;gBACA;gBACA;gBACA;aACD;YACDC,UAAU;gBACR;gBACA;gBACA;gBACA;aACD;QACH;QAEA,OAAOH,UAAU,CAACF,SAAS,IAAI;YAAC;SAAmC;IACrE;IAEA;;GAEC,GACD,OAAOM,mBAAmB3D,OAA4B,EAAY;QAChE,MAAM4D,UAAU,IAAIX;QAEpB,KAAK,MAAMjC,UAAUhB,QAAS;YAC5B,IAAIgB,OAAOK,SAAS,KAAK,UAAUL,OAAOK,SAAS,KAAK,YAAY;gBAClE,sCAAsC;gBACtCuC,QAAQC,GAAG,CACT;gBAEFD,QAAQC,GAAG,CACT;gBAEFD,QAAQC,GAAG,CACT;gBAEFD,QAAQC,GAAG,CACT;gBAEFD,QAAQC,GAAG,CACT;gBAEFD,QAAQC,GAAG,CAAC;gBACZD,QAAQC,GAAG,CACT;YAEJ;QACF;QAEA,OAAOC,MAAMC,IAAI,CAACH;IACpB;IAEA;;GAEC,GACD,OAAOI,oBAAiE;QACtE,OAAO;YACLC,cAAc;gBACZhG,kBAAkB;oBAChBC,YAAY;wBACVgG,SAAS;wBACT/F,wBAAwB;wBACxBI,mBAAmB;wBACnB4F,4BAA4B;wBAC5BC,iCAAiC;oBACnC;oBACAC,gBAAgB;wBACdC,uBAAuB;wBACvBC,mBAAmB;wBACnBC,gBAAgB;wBAChBC,iBAAiB;wBACjBC,oBAAoB;oBACtB;oBACAC,oBAAoB;wBAClBC,qBAAqB;wBACrBC,uBAAuB;wBACvBC,gBAAgB;wBAChBC,gBAAgB;wBAChBC,iBAAiB;wBACjBC,iBAAiB;oBACnB;gBACF;gBACArG,gBAAgB;oBACdC,eAAe;wBACbqG,MAAM;wBACNpG,YAAY;wBACZoD,UAAU;wBACVlD,UAAU;wBACVmG,iBAAiB;4BACfC,eAAe;4BACfC,qBAAqB;4BACrBC,kBAAkB;wBACpB;oBACF;oBACAC,kBAAkB;wBAChBC,uBAAuB;wBACvBC,uBAAuB;wBACvBC,uBAAuB;wBACvBC,qBAAqB;wBACrBC,mBAAmB;oBACrB;oBACA3G,kBAAkB;wBAChB4G,wBAAwB;wBACxBC,sBAAsB;wBACtBC,uBAAuB;wBACvB5G,sBAAsB;oBACxB;gBACF;gBACAC,oBAAoB;oBAClB4G,sBAAsB;wBACpBC,qBAAqB;wBACrBC,mBAAmB;wBACnBC,4BAA4B;wBAC5BC,0BAA0B;oBAC5B;oBACAC,eAAe;wBACbC,sBAAsB;wBACtBC,gBAAgB;wBAChBC,qBAAqB;wBACrBC,uBAAuB;oBACzB;oBACAC,iBAAiB;wBACfC,wBAAwB;wBACxBC,+BAA+B;wBAC/BC,oBAAoB;wBACpBC,uBAAuB;oBACzB;oBACAC,yBAAyB;wBACvBC,eAAe;wBACfC,qBAAqB;wBACrBC,0BAA0B;wBAC1BC,oBAAoB;oBACtB;gBACF;gBACA7G,mBAAmB;oBACjB8G,oBAAoB;oBACpBC,mBAAmB;oBACnBC,kBAAkB;oBAClBC,cAAc;wBACZrD,SAAS;wBACTsD,sBAAsB;wBACtBC,oBAAoB;oBACtB;oBACAC,yBAAyB;wBAAC;wBAAmB;qBAAsB;gBACrE;gBACArF,YAAY;oBACVC,eAAe;oBACfC,kBAAkB;oBAClBoF,UAAU;oBACVC,sBAAsB;oBACtBC,iBAAiB;wBACfC,gBAAgB;wBAChBC,WAAW;wBACXC,cAAc;oBAChB;gBACF;YACF;YACAC,UAAU;gBACRhK,kBAAkB;oBAChBC,YAAY;wBACVgG,SAAS;wBACT/F,wBAAwB;wBACxBI,mBAAmB;wBACnB4F,4BAA4B;wBAC5BC,iCAAiC;oBACnC;oBACAC,gBAAgB;wBACdC,uBAAuB;wBACvBC,mBAAmB;wBACnBC,gBAAgB;wBAChBC,iBAAiB;wBACjBC,oBAAoB;oBACtB;oBACAC,oBAAoB;wBAClBC,qBAAqB;wBACrBC,uBAAuB;wBACvBC,gBAAgB;wBAChBC,gBAAgB;wBAChBC,iBAAiB;wBACjBC,iBAAiB;oBACnB;gBACF;gBACArG,gBAAgB;oBACdC,eAAe;wBACbqG,MAAM;wBACNpG,YAAY;wBACZoD,UAAU;wBACVlD,UAAU;wBACVmG,iBAAiB;4BACfC,eAAe;4BACfC,qBAAqB;4BACrBC,kBAAkB;wBACpB;oBACF;oBACAC,kBAAkB;wBAChBC,uBAAuB;wBACvBC,uBAAuB;wBACvBC,uBAAuB;wBACvBC,qBAAqB;wBACrBC,mBAAmB;oBACrB;oBACA3G,kBAAkB;wBAChB4G,wBAAwB;wBACxBC,sBAAsB;wBACtBC,uBAAuB;wBACvB5G,sBAAsB;oBACxB;gBACF;YACF;YACA+I,YAAY;gBACVjK,kBAAkB;oBAChBC,YAAY;wBACVgG,SAAS;wBACT/F,wBAAwB;wBACxBI,mBAAmB;wBACnB4F,4BAA4B;wBAC5BC,iCAAiC;oBACnC;oBACAC,gBAAgB;wBACdC,uBAAuB;wBACvBC,mBAAmB;wBACnBC,gBAAgB;wBAChBC,iBAAiB;wBACjBC,oBAAoB;oBACtB;oBACAC,oBAAoB;wBAClBC,qBAAqB;wBACrBC,uBAAuB;wBACvBC,gBAAgB;wBAChBC,gBAAgB;wBAChBC,iBAAiB;wBACjBC,iBAAiB;oBACnB;gBACF;gBACArG,gBAAgB;oBACdC,eAAe;wBACbqG,MAAM;wBACNpG,YAAY;wBACZoD,UAAU;wBACVlD,UAAU;wBACVmG,iBAAiB;4BACfC,eAAe;4BACfC,qBAAqB;4BACrBC,kBAAkB;wBACpB;oBACF;oBACAC,kBAAkB;wBAChBC,uBAAuB;wBACvBC,uBAAuB;wBACvBC,uBAAuB;wBACvBC,qBAAqB;wBACrBC,mBAAmB;oBACrB;oBACA3G,kBAAkB;wBAChB4G,wBAAwB;wBACxBC,sBAAsB;wBACtBC,uBAAuB;wBACvB5G,sBAAsB;oBACxB;gBACF;YACF;QACF;IACF;IAEA;;GAEC,GACD,OAAOgJ,2BACLpI,MAA0B,EAC1BqI,gBAAkC,EAC1B;QACR,qFAAqF;QACrF,MAAMC,YACJD,iBAAiBtH,MAAM,CAACc,MAAM,GAAG,KACjCwG,iBAAiBrH,QAAQ,CAACa,MAAM,GAAG;QACrC,MAAMgC,UAAUyE,YACZ;YACE;YACA;YACA;YACA;SACD,GACD,EAAE;QAEN,OAAO,CAAC;;;WAGD,EAAEtI,OAAOuI,IAAI,CAAC;WACd,EAAEF,iBAAiB7G,OAAO,GAAG,QAAQ,KAAK;4BACzB,EAAE8G,YAAY,QAAQ,KAAK;;;AAGvD,EAAEzE,QAAQhC,MAAM,GAAG,IAAIgC,QAAQ2E,GAAG,CAAC,CAACC,SAAW,CAAC,EAAE,EAAEA,OAAO,CAAC,EAAEC,IAAI,CAAC,QAAQ,gBAAgB;;;YAG/E,EAAEL,iBAAiBtH,MAAM,CAACc,MAAM,GAAG,IAAIwG,iBAAiBtH,MAAM,CAAC2H,IAAI,CAAC,UAAU,OAAO;cACnF,EAAEL,iBAAiBrH,QAAQ,CAACa,MAAM,GAAG,IAAIwG,iBAAiBrH,QAAQ,CAAC0H,IAAI,CAAC,UAAU,OAAO;;;AAGvG,EACEL,iBAAiB5G,WAAW,IAAI4G,iBAAiB5G,WAAW,CAACI,MAAM,GAAG,IAClEwG,iBAAiB5G,WAAW,CAAC+G,GAAG,CAAC,CAACG,SAAW,CAAC,EAAE,EAAEA,OAAO,CAAC,EAAED,IAAI,CAAC,QACjE,+BACL;;;;;AAKD,CAAC;IACC;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a9d715e5634cc2cfdb5eb9f602786818cfaaf68d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1gwtnknuck = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1gwtnknuck();
cov_1gwtnknuck().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1gwtnknuck().s[1]++;
Object.defineProperty(exports, "ConversationPresetSafetyValidator", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1gwtnknuck().f[0]++;
    cov_1gwtnknuck().s[2]++;
    return ConversationPresetSafetyValidator;
  }
});
/**
 * Safety thresholds and limits
 */
const SAFETY_LIMITS =
/* istanbul ignore next */
(cov_1gwtnknuck().s[3]++, {
  responseDynamics: {
    turnTaking: {
      maxConcurrentResponses: {
        min: 1,
        max: 10,
        safe: 5
      },
      responseThreshold: {
        min: 0.1,
        max: 1.0,
        safe: 0.7
      },
      cooldownPeriod: {
        min: 500,
        max: 10000,
        safe: 2000
      }
    },
    balancing: {
      distributionMode: ["equal", "weighted", "priority"],
      agentPriorities: {
        min: 0.0,
        max: 1.0,
        safe: 0.5
      }
    }
  },
  timingControls: {
    responseDelay: {
      fixedDelay: {
        min: 100,
        max: 30000,
        safe: 1000
      },
      randomDelay: {
        min: 0,
        max: 10000,
        safe: 2000
      },
      maxDelay: {
        min: 1000,
        max: 60000,
        safe: 5000
      }
    },
    realTimeControls: {
      updateFrequency: {
        min: 100,
        max: 5000,
        safe: 1000
      },
      ghostMessageDuration: {
        min: 1000,
        max: 30000,
        safe: 5000
      }
    }
  },
  advancedParameters: {
    emergencyStopThreshold: {
      min: 0.8,
      max: 1.0,
      safe: 0.95
    },
    performanceMetrics: {
      responseTimeLimit: {
        min: 1000,
        max: 30000,
        safe: 5000
      },
      qualityThreshold: {
        min: 0.5,
        max: 1.0,
        safe: 0.7
      }
    }
  }
});
/**
 * Expert Committee Review domains
 */
const EXPERT_DOMAINS =
/* istanbul ignore next */
(cov_1gwtnknuck().s[4]++, {
  CONVERSATION_DYNAMICS: "conversation_dynamics",
  PERFORMANCE_OPTIMIZATION: "performance_optimization",
  SAFETY_PROTOCOLS: "safety_protocols",
  ARCHITECTURE_INTEGRATION: "architecture_integration"
});
class ConversationPresetSafetyValidator {
  /**
  * Validate a conversation preset for safety and stability
  */
  static async validatePreset(preset) {
    /* istanbul ignore next */
    cov_1gwtnknuck().f[1]++;
    const results =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[5]++, []);
    // Core parameter validation
    /* istanbul ignore next */
    cov_1gwtnknuck().s[6]++;
    results.push(await this.validateResponseDynamics(preset.responseDynamics));
    /* istanbul ignore next */
    cov_1gwtnknuck().s[7]++;
    results.push(await this.validateTimingControls(preset.timingControls));
    /* istanbul ignore next */
    cov_1gwtnknuck().s[8]++;
    results.push(await this.validateAdvancedParameters(preset.advancedParameters));
    /* istanbul ignore next */
    cov_1gwtnknuck().s[9]++;
    results.push(await this.validateSafetyConstraints(preset.safetyConstraints));
    // Cross-parameter validation
    /* istanbul ignore next */
    cov_1gwtnknuck().s[10]++;
    results.push(await this.validateParameterInteractions(preset));
    // Performance impact assessment
    /* istanbul ignore next */
    cov_1gwtnknuck().s[11]++;
    results.push(await this.validatePerformanceImpact(preset));
    // Security validation
    /* istanbul ignore next */
    cov_1gwtnknuck().s[12]++;
    results.push(await this.validateSecurityImplications(preset));
    // Aggregate results
    const overallValid =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[13]++, results.every(r => {
      /* istanbul ignore next */
      cov_1gwtnknuck().f[2]++;
      cov_1gwtnknuck().s[14]++;
      return r.passed;
    }));
    const errors =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[15]++, []);
    const warnings =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[16]++, []);
    // Collect all errors and warnings
    /* istanbul ignore next */
    cov_1gwtnknuck().s[17]++;
    for (const result of results) {
      /* istanbul ignore next */
      cov_1gwtnknuck().s[18]++;
      if (!result.passed) {
        /* istanbul ignore next */
        cov_1gwtnknuck().b[0][0]++;
        cov_1gwtnknuck().s[19]++;
        // Add issues from failed checks as errors
        errors.push(...result.issues.filter(issue => {
          /* istanbul ignore next */
          cov_1gwtnknuck().f[3]++;
          cov_1gwtnknuck().s[20]++;
          return !warnings.includes(issue);
        }));
      } else
      /* istanbul ignore next */
      {
        cov_1gwtnknuck().b[0][1]++;
      }
      cov_1gwtnknuck().s[21]++;
      if (
      /* istanbul ignore next */
      (cov_1gwtnknuck().b[2][0]++, result.riskLevel === "medium") ||
      /* istanbul ignore next */
      (cov_1gwtnknuck().b[2][1]++, result.riskLevel === "high")) {
        /* istanbul ignore next */
        cov_1gwtnknuck().b[1][0]++;
        cov_1gwtnknuck().s[22]++;
        // Add issues from medium/high risk as warnings (avoid duplicates)
        result.issues.forEach(issue => {
          /* istanbul ignore next */
          cov_1gwtnknuck().f[4]++;
          cov_1gwtnknuck().s[23]++;
          if (
          /* istanbul ignore next */
          (cov_1gwtnknuck().b[4][0]++, !errors.includes(issue)) &&
          /* istanbul ignore next */
          (cov_1gwtnknuck().b[4][1]++, !warnings.includes(issue))) {
            /* istanbul ignore next */
            cov_1gwtnknuck().b[3][0]++;
            cov_1gwtnknuck().s[24]++;
            warnings.push(issue);
          } else
          /* istanbul ignore next */
          {
            cov_1gwtnknuck().b[3][1]++;
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_1gwtnknuck().b[1][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1gwtnknuck().s[25]++;
    return {
      isValid: overallValid,
      errors,
      warnings,
      suggestions: this.generateRecommendedActions(results)
    };
  }
  /**
  * Validate response dynamics parameters
  */
  static async validateResponseDynamics(responseDynamics) {
    /* istanbul ignore next */
    cov_1gwtnknuck().f[5]++;
    const errors =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[26]++, []);
    const warnings =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[27]++, []);
    const riskFactors =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[28]++, []);
    // Turn-taking validation
    const turnTaking =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[29]++, responseDynamics.turnTaking);
    /* istanbul ignore next */
    cov_1gwtnknuck().s[30]++;
    if (turnTaking.maxConcurrentResponses > SAFETY_LIMITS.responseDynamics.turnTaking.maxConcurrentResponses.max) {
      /* istanbul ignore next */
      cov_1gwtnknuck().b[5][0]++;
      cov_1gwtnknuck().s[31]++;
      errors.push(`Max concurrent responses (${turnTaking.maxConcurrentResponses}) exceeds safety limit`);
      /* istanbul ignore next */
      cov_1gwtnknuck().s[32]++;
      riskFactors.push("Excessive concurrent responses may cause conversation chaos");
    } else
    /* istanbul ignore next */
    {
      cov_1gwtnknuck().b[5][1]++;
    }
    cov_1gwtnknuck().s[33]++;
    if (turnTaking.responseThreshold < SAFETY_LIMITS.responseDynamics.turnTaking.responseThreshold.min) {
      /* istanbul ignore next */
      cov_1gwtnknuck().b[6][0]++;
      cov_1gwtnknuck().s[34]++;
      warnings.push(`Response threshold (${turnTaking.responseThreshold}) is very low`);
      /* istanbul ignore next */
      cov_1gwtnknuck().s[35]++;
      riskFactors.push("Low threshold may cause over-responsive behavior");
    } else
    /* istanbul ignore next */
    {
      cov_1gwtnknuck().b[6][1]++;
    }
    cov_1gwtnknuck().s[36]++;
    if (turnTaking.cooldownPeriod < SAFETY_LIMITS.responseDynamics.turnTaking.cooldownPeriod.min) {
      /* istanbul ignore next */
      cov_1gwtnknuck().b[7][0]++;
      cov_1gwtnknuck().s[37]++;
      errors.push(`Cooldown period (${turnTaking.cooldownPeriod}ms) too short for stable operation`);
      /* istanbul ignore next */
      cov_1gwtnknuck().s[38]++;
      riskFactors.push("Insufficient cooldown may cause response flooding");
    } else
    /* istanbul ignore next */
    {
      cov_1gwtnknuck().b[7][1]++;
    }
    const riskLevel =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[39]++, this.assessRisk(riskFactors, errors.length, warnings.length));
    /* istanbul ignore next */
    cov_1gwtnknuck().s[40]++;
    return {
      passed: errors.length === 0,
      riskLevel,
      issues: [...errors, ...warnings],
      recommendations: riskFactors.length > 0 ?
      /* istanbul ignore next */
      (cov_1gwtnknuck().b[8][0]++, this.generateMitigation("responseDynamics", riskFactors)) :
      /* istanbul ignore next */
      (cov_1gwtnknuck().b[8][1]++, [])
    };
  }
  /**
  * Validate timing controls parameters
  */
  static async validateTimingControls(timingControls) {
    /* istanbul ignore next */
    cov_1gwtnknuck().f[6]++;
    const errors =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[41]++, []);
    const warnings =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[42]++, []);
    const riskFactors =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[43]++, []);
    const responseDelay =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[44]++, timingControls.responseDelay);
    // Fixed delay validation
    /* istanbul ignore next */
    cov_1gwtnknuck().s[45]++;
    if (
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[10][0]++, responseDelay.fixedDelay) &&
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[10][1]++, responseDelay.fixedDelay > SAFETY_LIMITS.timingControls.responseDelay.maxDelay.max)) {
      /* istanbul ignore next */
      cov_1gwtnknuck().b[9][0]++;
      cov_1gwtnknuck().s[46]++;
      errors.push(`Fixed delay (${responseDelay.fixedDelay}ms) exceeds maximum safe limit`);
      /* istanbul ignore next */
      cov_1gwtnknuck().s[47]++;
      riskFactors.push("Excessive delay may cause conversation timeouts");
    } else
    /* istanbul ignore next */
    {
      cov_1gwtnknuck().b[9][1]++;
    }
    // Random delay validation
    cov_1gwtnknuck().s[48]++;
    if (
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[12][0]++, responseDelay.randomDelay) &&
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[12][1]++, responseDelay.randomDelay > SAFETY_LIMITS.timingControls.responseDelay.randomDelay.safe)) {
      /* istanbul ignore next */
      cov_1gwtnknuck().b[11][0]++;
      cov_1gwtnknuck().s[49]++;
      warnings.push(`Random delay (${responseDelay.randomDelay}ms) may cause unpredictable behavior`);
      /* istanbul ignore next */
      cov_1gwtnknuck().s[50]++;
      riskFactors.push("High random delay reduces conversation predictability");
    } else
    /* istanbul ignore next */
    {
      cov_1gwtnknuck().b[11][1]++;
    }
    // Real-time controls validation
    const realTimeControls =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[51]++, timingControls.realTimeControls);
    /* istanbul ignore next */
    cov_1gwtnknuck().s[52]++;
    if (realTimeControls.updateFrequency < SAFETY_LIMITS.timingControls.realTimeControls.updateFrequency.min) {
      /* istanbul ignore next */
      cov_1gwtnknuck().b[13][0]++;
      cov_1gwtnknuck().s[53]++;
      errors.push(`Update frequency (${realTimeControls.updateFrequency}ms) too high for system stability`);
      /* istanbul ignore next */
      cov_1gwtnknuck().s[54]++;
      riskFactors.push("High update frequency may overload system resources");
    } else
    /* istanbul ignore next */
    {
      cov_1gwtnknuck().b[13][1]++;
    }
    const riskLevel =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[55]++, this.assessRisk(riskFactors, errors.length, warnings.length));
    /* istanbul ignore next */
    cov_1gwtnknuck().s[56]++;
    return {
      passed: errors.length === 0,
      riskLevel,
      issues: [...errors, ...warnings],
      recommendations: riskFactors.length > 0 ?
      /* istanbul ignore next */
      (cov_1gwtnknuck().b[14][0]++, this.generateMitigation("timingControls", riskFactors)) :
      /* istanbul ignore next */
      (cov_1gwtnknuck().b[14][1]++, [])
    };
  }
  /**
  * Validate advanced parameters
  */
  static async validateAdvancedParameters(advancedParameters) {
    /* istanbul ignore next */
    cov_1gwtnknuck().f[7]++;
    const errors =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[57]++, []);
    const warnings =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[58]++, []);
    const riskFactors =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[59]++, []);
    // Emergency stop validation
    /* istanbul ignore next */
    cov_1gwtnknuck().s[60]++;
    if (advancedParameters.emergencyStopThreshold < SAFETY_LIMITS.advancedParameters.emergencyStopThreshold.min) {
      /* istanbul ignore next */
      cov_1gwtnknuck().b[15][0]++;
      cov_1gwtnknuck().s[61]++;
      errors.push(`Emergency stop threshold (${advancedParameters.emergencyStopThreshold}) too low for safety`);
      /* istanbul ignore next */
      cov_1gwtnknuck().s[62]++;
      riskFactors.push("Low emergency threshold may trigger false positives");
    } else
    /* istanbul ignore next */
    {
      cov_1gwtnknuck().b[15][1]++;
    }
    // Performance metrics validation
    const performanceMetrics =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[63]++, advancedParameters.performanceMetrics);
    /* istanbul ignore next */
    cov_1gwtnknuck().s[64]++;
    if (performanceMetrics.responseTimeLimit < SAFETY_LIMITS.advancedParameters.performanceMetrics.responseTimeLimit.min) {
      /* istanbul ignore next */
      cov_1gwtnknuck().b[16][0]++;
      cov_1gwtnknuck().s[65]++;
      warnings.push(`Response time limit (${performanceMetrics.responseTimeLimit}ms) very aggressive`);
      /* istanbul ignore next */
      cov_1gwtnknuck().s[66]++;
      riskFactors.push("Aggressive time limits may cause premature terminations");
    } else
    /* istanbul ignore next */
    {
      cov_1gwtnknuck().b[16][1]++;
    }
    cov_1gwtnknuck().s[67]++;
    if (performanceMetrics.qualityThreshold > SAFETY_LIMITS.advancedParameters.performanceMetrics.qualityThreshold.max) {
      /* istanbul ignore next */
      cov_1gwtnknuck().b[17][0]++;
      cov_1gwtnknuck().s[68]++;
      warnings.push(`Quality threshold (${performanceMetrics.qualityThreshold}) unrealistically high`);
      /* istanbul ignore next */
      cov_1gwtnknuck().s[69]++;
      riskFactors.push("Unrealistic quality requirements may block all responses");
    } else
    /* istanbul ignore next */
    {
      cov_1gwtnknuck().b[17][1]++;
    }
    const riskLevel =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[70]++, this.assessRisk(riskFactors, errors.length, warnings.length));
    /* istanbul ignore next */
    cov_1gwtnknuck().s[71]++;
    return {
      passed: errors.length === 0,
      riskLevel,
      issues: [...errors, ...warnings],
      recommendations: riskFactors.length > 0 ?
      /* istanbul ignore next */
      (cov_1gwtnknuck().b[18][0]++, this.generateMitigation("advancedParameters", riskFactors)) :
      /* istanbul ignore next */
      (cov_1gwtnknuck().b[18][1]++, [])
    };
  }
  /**
  * Validate safety constraints
  */
  static async validateSafetyConstraints(safetyConstraints) {
    /* istanbul ignore next */
    cov_1gwtnknuck().f[8]++;
    const errors =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[72]++, []);
    const warnings =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[73]++, []);
    const riskFactors =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[74]++, []);
    // Validate safety mechanisms are properly configured
    /* istanbul ignore next */
    cov_1gwtnknuck().s[75]++;
    if (!safetyConstraints.emergencyStopEnabled) {
      /* istanbul ignore next */
      cov_1gwtnknuck().b[19][0]++;
      cov_1gwtnknuck().s[76]++;
      warnings.push("Emergency stop mechanism is disabled");
      /* istanbul ignore next */
      cov_1gwtnknuck().s[77]++;
      riskFactors.push("No emergency shutdown capability in unsafe conditions");
    } else
    /* istanbul ignore next */
    {
      cov_1gwtnknuck().b[19][1]++;
    }
    cov_1gwtnknuck().s[78]++;
    if (!safetyConstraints.auditLoggingEnabled) {
      /* istanbul ignore next */
      cov_1gwtnknuck().b[20][0]++;
      cov_1gwtnknuck().s[79]++;
      errors.push("Audit logging must be enabled for production use");
      /* istanbul ignore next */
      cov_1gwtnknuck().s[80]++;
      riskFactors.push("No audit trail for parameter changes and decisions");
    } else
    /* istanbul ignore next */
    {
      cov_1gwtnknuck().b[20][1]++;
    }
    const riskLevel =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[81]++, this.assessRisk(riskFactors, errors.length, warnings.length));
    /* istanbul ignore next */
    cov_1gwtnknuck().s[82]++;
    return {
      passed: errors.length === 0,
      riskLevel,
      issues: [...errors, ...warnings],
      recommendations: riskFactors.length > 0 ?
      /* istanbul ignore next */
      (cov_1gwtnknuck().b[21][0]++, this.generateMitigation("safetyConstraints", riskFactors)) :
      /* istanbul ignore next */
      (cov_1gwtnknuck().b[21][1]++, [])
    };
  }
  /**
  * Validate parameter interactions
  */
  static async validateParameterInteractions(preset) {
    /* istanbul ignore next */
    cov_1gwtnknuck().f[9]++;
    const errors =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[83]++, []);
    const warnings =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[84]++, []);
    const riskFactors =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[85]++, []);
    // Check for conflicting parameters
    const maxConcurrent =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[86]++, preset.responseDynamics.turnTaking.maxConcurrentResponses);
    const responseThreshold =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[87]++, preset.responseDynamics.turnTaking.responseThreshold);
    /* istanbul ignore next */
    cov_1gwtnknuck().s[88]++;
    if (
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[23][0]++, maxConcurrent > 5) &&
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[23][1]++, responseThreshold < 0.3)) {
      /* istanbul ignore next */
      cov_1gwtnknuck().b[22][0]++;
      cov_1gwtnknuck().s[89]++;
      warnings.push("High concurrency with low threshold may cause response flooding");
      /* istanbul ignore next */
      cov_1gwtnknuck().s[90]++;
      riskFactors.push("Parameter combination may create unstable conversation dynamics");
    } else
    /* istanbul ignore next */
    {
      cov_1gwtnknuck().b[22][1]++;
    }
    // Check timing consistency
    const fixedDelay =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[91]++, preset.timingControls.responseDelay.fixedDelay);
    const maxDelay =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[92]++, preset.timingControls.responseDelay.maxDelay);
    /* istanbul ignore next */
    cov_1gwtnknuck().s[93]++;
    if (
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[25][0]++, fixedDelay) &&
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[25][1]++, maxDelay) &&
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[25][2]++, fixedDelay > maxDelay)) {
      /* istanbul ignore next */
      cov_1gwtnknuck().b[24][0]++;
      cov_1gwtnknuck().s[94]++;
      errors.push("Fixed delay cannot exceed maximum delay");
      /* istanbul ignore next */
      cov_1gwtnknuck().s[95]++;
      riskFactors.push("Inconsistent timing configuration");
    } else
    /* istanbul ignore next */
    {
      cov_1gwtnknuck().b[24][1]++;
    }
    const riskLevel =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[96]++, this.assessRisk(riskFactors, errors.length, warnings.length));
    /* istanbul ignore next */
    cov_1gwtnknuck().s[97]++;
    return {
      passed: errors.length === 0,
      riskLevel,
      issues: [...errors, ...warnings],
      recommendations: riskFactors.length > 0 ?
      /* istanbul ignore next */
      (cov_1gwtnknuck().b[26][0]++, this.generateMitigation("interactions", riskFactors)) :
      /* istanbul ignore next */
      (cov_1gwtnknuck().b[26][1]++, [])
    };
  }
  /**
  * Validate performance impact
  */
  static async validatePerformanceImpact(preset) {
    /* istanbul ignore next */
    cov_1gwtnknuck().f[10]++;
    const errors =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[98]++, []);
    const warnings =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[99]++, []);
    const riskFactors =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[100]++, []);
    // Estimate resource usage based on concurrent responses
    const maxConcurrent =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[101]++, preset.responseDynamics.turnTaking.maxConcurrentResponses);
    const responseDelay =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[102]++,
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[27][0]++, preset.timingControls.responseDelay.minDelay) ||
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[27][1]++, 500));
    // Estimate load based on minimum response delay
    const estimatedLoad =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[103]++, responseDelay > 0 ?
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[28][0]++, 1000 / responseDelay * maxConcurrent) :
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[28][1]++, maxConcurrent * 10));
    /* istanbul ignore next */
    cov_1gwtnknuck().s[104]++;
    if (estimatedLoad > 50) {
      /* istanbul ignore next */
      cov_1gwtnknuck().b[29][0]++;
      cov_1gwtnknuck().s[105]++;
      warnings.push(`High estimated system load: ${estimatedLoad.toFixed(1)} ops/sec`);
      /* istanbul ignore next */
      cov_1gwtnknuck().s[106]++;
      riskFactors.push("Configuration may impact system performance");
    } else
    /* istanbul ignore next */
    {
      cov_1gwtnknuck().b[29][1]++;
    }
    cov_1gwtnknuck().s[107]++;
    if (estimatedLoad > 100) {
      /* istanbul ignore next */
      cov_1gwtnknuck().b[30][0]++;
      cov_1gwtnknuck().s[108]++;
      errors.push(`Excessive system load: ${estimatedLoad.toFixed(1)} ops/sec exceeds capacity`);
      /* istanbul ignore next */
      cov_1gwtnknuck().s[109]++;
      riskFactors.push("Configuration will likely cause system instability");
    } else
    /* istanbul ignore next */
    {
      cov_1gwtnknuck().b[30][1]++;
    }
    const riskLevel =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[110]++, this.assessRisk(riskFactors, errors.length, warnings.length));
    /* istanbul ignore next */
    cov_1gwtnknuck().s[111]++;
    return {
      passed: errors.length === 0,
      riskLevel,
      issues: [...errors, ...warnings],
      recommendations: riskFactors.length > 0 ?
      /* istanbul ignore next */
      (cov_1gwtnknuck().b[31][0]++, this.generateMitigation("performance", riskFactors)) :
      /* istanbul ignore next */
      (cov_1gwtnknuck().b[31][1]++, [])
    };
  }
  /**
  * Validate security implications
  */
  static async validateSecurityImplications(preset) {
    /* istanbul ignore next */
    cov_1gwtnknuck().f[11]++;
    const errors =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[112]++, []);
    const warnings =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[113]++, []);
    const riskFactors =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[114]++, []);
    // Check for potential DoS vectors
    /* istanbul ignore next */
    cov_1gwtnknuck().s[115]++;
    if (preset.responseDynamics.turnTaking.maxConcurrentResponses > 8) {
      /* istanbul ignore next */
      cov_1gwtnknuck().b[32][0]++;
      cov_1gwtnknuck().s[116]++;
      warnings.push("High concurrency may enable DoS attacks");
      /* istanbul ignore next */
      cov_1gwtnknuck().s[117]++;
      riskFactors.push("Configuration may be exploitable for resource exhaustion");
    } else
    /* istanbul ignore next */
    {
      cov_1gwtnknuck().b[32][1]++;
    }
    // Check monitoring capabilities
    cov_1gwtnknuck().s[118]++;
    if (
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[34][0]++, !preset.monitoring.enableMetrics) ||
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[34][1]++, !preset.monitoring.trackPerformance)) {
      /* istanbul ignore next */
      cov_1gwtnknuck().b[33][0]++;
      cov_1gwtnknuck().s[119]++;
      warnings.push("Monitoring capabilities disabled");
      /* istanbul ignore next */
      cov_1gwtnknuck().s[120]++;
      riskFactors.push("Limited visibility into system behavior");
    } else
    /* istanbul ignore next */
    {
      cov_1gwtnknuck().b[33][1]++;
    }
    const riskLevel =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[121]++, this.assessRisk(riskFactors, errors.length, warnings.length));
    /* istanbul ignore next */
    cov_1gwtnknuck().s[122]++;
    return {
      passed: errors.length === 0,
      riskLevel,
      issues: [...errors, ...warnings],
      recommendations: riskFactors.length > 0 ?
      /* istanbul ignore next */
      (cov_1gwtnknuck().b[35][0]++, this.generateMitigation("security", riskFactors)) :
      /* istanbul ignore next */
      (cov_1gwtnknuck().b[35][1]++, [])
    };
  }
  /**
  * Assess risk level based on factors and issues
  */
  static assessRisk(riskFactors, errorCount, warningCount) {
    /* istanbul ignore next */
    cov_1gwtnknuck().f[12]++;
    cov_1gwtnknuck().s[123]++;
    if (errorCount > 0) {
      /* istanbul ignore next */
      cov_1gwtnknuck().b[36][0]++;
      cov_1gwtnknuck().s[124]++;
      return "critical";
    } else
    /* istanbul ignore next */
    {
      cov_1gwtnknuck().b[36][1]++;
    }
    cov_1gwtnknuck().s[125]++;
    if (
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[38][0]++, riskFactors.length > 3) ||
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[38][1]++, warningCount > 2)) {
      /* istanbul ignore next */
      cov_1gwtnknuck().b[37][0]++;
      cov_1gwtnknuck().s[126]++;
      return "high";
    } else
    /* istanbul ignore next */
    {
      cov_1gwtnknuck().b[37][1]++;
    }
    cov_1gwtnknuck().s[127]++;
    if (
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[40][0]++, riskFactors.length > 1) ||
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[40][1]++, warningCount > 0)) {
      /* istanbul ignore next */
      cov_1gwtnknuck().b[39][0]++;
      cov_1gwtnknuck().s[128]++;
      return "medium";
    } else
    /* istanbul ignore next */
    {
      cov_1gwtnknuck().b[39][1]++;
    }
    cov_1gwtnknuck().s[129]++;
    return "low";
  }
  /**
  * Get highest risk level from all checks
  */
  static getHighestRiskLevel(results) {
    /* istanbul ignore next */
    cov_1gwtnknuck().f[13]++;
    const riskOrder =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[130]++, ["low", "medium", "high", "critical"]);
    let highest =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[131]++, "low");
    /* istanbul ignore next */
    cov_1gwtnknuck().s[132]++;
    for (const result of results) {
      /* istanbul ignore next */
      cov_1gwtnknuck().s[133]++;
      if (riskOrder.indexOf(result.riskLevel) > riskOrder.indexOf(highest)) {
        /* istanbul ignore next */
        cov_1gwtnknuck().b[41][0]++;
        cov_1gwtnknuck().s[134]++;
        highest = result.riskLevel;
      } else
      /* istanbul ignore next */
      {
        cov_1gwtnknuck().b[41][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1gwtnknuck().s[135]++;
    return highest;
  }
  /**
  * Determine if Expert Committee Review is required
  */
  static requiresExpertCommitteeReview(results, riskLevel) {
    /* istanbul ignore next */
    cov_1gwtnknuck().f[14]++;
    cov_1gwtnknuck().s[136]++;
    // Always require review for high or critical risk
    if (
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[43][0]++, riskLevel === "high") ||
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[43][1]++, riskLevel === "critical")) {
      /* istanbul ignore next */
      cov_1gwtnknuck().b[42][0]++;
      cov_1gwtnknuck().s[137]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_1gwtnknuck().b[42][1]++;
    }
    // Require review if multiple checks have medium or higher risk
    const mediumOrHigherCount =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[138]++, results.filter(r => {
      /* istanbul ignore next */
      cov_1gwtnknuck().f[15]++;
      cov_1gwtnknuck().s[139]++;
      return /* istanbul ignore next */(cov_1gwtnknuck().b[44][0]++, r.riskLevel === "medium") ||
      /* istanbul ignore next */
      (cov_1gwtnknuck().b[44][1]++, r.riskLevel === "high") ||
      /* istanbul ignore next */
      (cov_1gwtnknuck().b[44][2]++, r.riskLevel === "critical");
    }).length);
    /* istanbul ignore next */
    cov_1gwtnknuck().s[140]++;
    return mediumOrHigherCount > 2;
  }
  /**
  * Generate recommended actions based on validation results
  */
  static generateRecommendedActions(results) {
    /* istanbul ignore next */
    cov_1gwtnknuck().f[16]++;
    const actions =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[141]++, []);
    /* istanbul ignore next */
    cov_1gwtnknuck().s[142]++;
    for (const result of results) {
      /* istanbul ignore next */
      cov_1gwtnknuck().s[143]++;
      if (!result.passed) {
        /* istanbul ignore next */
        cov_1gwtnknuck().b[45][0]++;
        cov_1gwtnknuck().s[144]++;
        actions.push(`Fix critical issues in validation checks`);
      } else
      /* istanbul ignore next */
      {
        cov_1gwtnknuck().b[45][1]++;
      }
      cov_1gwtnknuck().s[145]++;
      if (
      /* istanbul ignore next */
      (cov_1gwtnknuck().b[47][0]++, result.riskLevel === "high") ||
      /* istanbul ignore next */
      (cov_1gwtnknuck().b[47][1]++, result.riskLevel === "critical")) {
        /* istanbul ignore next */
        cov_1gwtnknuck().b[46][0]++;
        cov_1gwtnknuck().s[146]++;
        actions.push(`Conduct expert review for high-risk parameters`);
      } else
      /* istanbul ignore next */
      {
        cov_1gwtnknuck().b[46][1]++;
      }
      cov_1gwtnknuck().s[147]++;
      if (result.issues.length > 0) {
        /* istanbul ignore next */
        cov_1gwtnknuck().b[48][0]++;
        cov_1gwtnknuck().s[148]++;
        actions.push(`Review and address ${result.issues.length} issues identified`);
      } else
      /* istanbul ignore next */
      {
        cov_1gwtnknuck().b[48][1]++;
      }
    }
    // Remove duplicates
    /* istanbul ignore next */
    cov_1gwtnknuck().s[149]++;
    return [...new Set(actions)];
  }
  /**
  * Calculate overall safety score (0-100)
  */
  static calculateSafetyScore(results) {
    /* istanbul ignore next */
    cov_1gwtnknuck().f[17]++;
    let totalScore =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[150]++, 100);
    /* istanbul ignore next */
    cov_1gwtnknuck().s[151]++;
    for (const result of results) {
      /* istanbul ignore next */
      cov_1gwtnknuck().s[152]++;
      if (!result.passed) {
        /* istanbul ignore next */
        cov_1gwtnknuck().b[49][0]++;
        cov_1gwtnknuck().s[153]++;
        totalScore -= 20;
      } else
      /* istanbul ignore next */
      {
        cov_1gwtnknuck().b[49][1]++;
      }
      cov_1gwtnknuck().s[154]++;
      totalScore -= result.issues.length * 5;
      /* istanbul ignore next */
      cov_1gwtnknuck().s[155]++;
      if (result.riskLevel === "critical") {
        /* istanbul ignore next */
        cov_1gwtnknuck().b[50][0]++;
        cov_1gwtnknuck().s[156]++;
        totalScore -= 20;
      } else {
        /* istanbul ignore next */
        cov_1gwtnknuck().b[50][1]++;
        cov_1gwtnknuck().s[157]++;
        if (result.riskLevel === "high") {
          /* istanbul ignore next */
          cov_1gwtnknuck().b[51][0]++;
          cov_1gwtnknuck().s[158]++;
          totalScore -= 15;
        } else {
          /* istanbul ignore next */
          cov_1gwtnknuck().b[51][1]++;
          cov_1gwtnknuck().s[159]++;
          if (result.riskLevel === "medium") {
            /* istanbul ignore next */
            cov_1gwtnknuck().b[52][0]++;
            cov_1gwtnknuck().s[160]++;
            totalScore -= 10;
          } else
          /* istanbul ignore next */
          {
            cov_1gwtnknuck().b[52][1]++;
          }
        }
      }
    }
    /* istanbul ignore next */
    cov_1gwtnknuck().s[161]++;
    return Math.max(0, totalScore);
  }
  /**
  * Generate mitigation strategies
  */
  static generateMitigation(category, riskFactors) {
    /* istanbul ignore next */
    cov_1gwtnknuck().f[18]++;
    const mitigation =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[162]++, []);
    /* istanbul ignore next */
    cov_1gwtnknuck().s[163]++;
    if (riskFactors.length === 0) {
      /* istanbul ignore next */
      cov_1gwtnknuck().b[53][0]++;
      cov_1gwtnknuck().s[164]++;
      return mitigation;
    } else
    /* istanbul ignore next */
    {
      cov_1gwtnknuck().b[53][1]++;
    }
    const strategies =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[165]++, {
      responseDynamics: ["Reduce maximum concurrent responses", "Increase response threshold", "Implement gradual parameter changes", "Add cooldown period validation"],
      timingControls: ["Reduce update frequency", "Implement delay bounds checking", "Add performance monitoring", "Use conservative timing defaults"],
      advancedParameters: ["Review emergency stop configuration", "Validate performance thresholds", "Implement gradual threshold changes", "Add parameter bounds checking"],
      safetyConstraints: ["Enable all safety mechanisms", "Implement comprehensive audit logging", "Add emergency shutdown procedures", "Establish monitoring protocols"],
      interactions: ["Review parameter combinations", "Implement conflict detection", "Add parameter validation rules", "Use configuration templates"],
      performance: ["Reduce system load parameters", "Implement resource monitoring", "Add performance benchmarks", "Use load testing validation"],
      security: ["Enable security monitoring", "Implement rate limiting", "Add DoS protection", "Enable audit logging"]
    });
    /* istanbul ignore next */
    cov_1gwtnknuck().s[166]++;
    return /* istanbul ignore next */(cov_1gwtnknuck().b[54][0]++, strategies[category]) ||
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[54][1]++, ["Review configuration with expert"]);
  }
  /**
  * Get expert reviewers for specific domains
  */
  static getRequiredExperts(results) {
    /* istanbul ignore next */
    cov_1gwtnknuck().f[19]++;
    const experts =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[167]++, new Set());
    /* istanbul ignore next */
    cov_1gwtnknuck().s[168]++;
    for (const result of results) {
      /* istanbul ignore next */
      cov_1gwtnknuck().s[169]++;
      if (
      /* istanbul ignore next */
      (cov_1gwtnknuck().b[56][0]++, result.riskLevel === "high") ||
      /* istanbul ignore next */
      (cov_1gwtnknuck().b[56][1]++, result.riskLevel === "critical")) {
        /* istanbul ignore next */
        cov_1gwtnknuck().b[55][0]++;
        cov_1gwtnknuck().s[170]++;
        // Add all experts for high-risk items
        experts.add("Harrison Chase (@hwchase17): LangChain integration - conversation orchestration");
        /* istanbul ignore next */
        cov_1gwtnknuck().s[171]++;
        experts.add("Jo\xe3o Moura (@joaomdmoura): CrewAI coordination - multi-agent collaboration");
        /* istanbul ignore next */
        cov_1gwtnknuck().s[172]++;
        experts.add("Guillermo Rauch (@rauchg): Platform scaling - performance optimization");
        /* istanbul ignore next */
        cov_1gwtnknuck().s[173]++;
        experts.add("Robert C. Martin (@unclebob): Safety protocol architecture");
        /* istanbul ignore next */
        cov_1gwtnknuck().s[174]++;
        experts.add("Mitchell Hashimoto (@mitchellh): Infrastructure optimization");
        /* istanbul ignore next */
        cov_1gwtnknuck().s[175]++;
        experts.add("Kent Beck (@KentBeck): Safety testing and validation");
        /* istanbul ignore next */
        cov_1gwtnknuck().s[176]++;
        experts.add("Rich Hickey: Simplicity principles and integration patterns");
      } else
      /* istanbul ignore next */
      {
        cov_1gwtnknuck().b[55][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1gwtnknuck().s[177]++;
    return Array.from(experts);
  }
  /**
  * Get default presets
  */
  static getDefaultPresets() {
    /* istanbul ignore next */
    cov_1gwtnknuck().f[20]++;
    cov_1gwtnknuck().s[178]++;
    return {
      conservative: {
        responseDynamics: {
          turnTaking: {
            enabled: true,
            maxConcurrentResponses: 1,
            responseThreshold: 0.8,
            mentionResponseProbability: 0.95,
            conversationStarterResponseRate: 0.9
          },
          agentSelection: {
            autoSelectRespondents: true,
            selectionStrategy: "expertise_based",
            diversityBonus: 0.3,
            expertiseWeight: 0.8,
            maxSpeakersPerTurn: 1
          },
          responseGeneration: {
            maxKnowledgeEntries: 10,
            includeAgentKnowledge: true,
            streamResponse: false,
            responseLength: "short",
            creativityLevel: 0.3,
            coherenceWeight: 0.9
          }
        },
        timingControls: {
          responseDelay: {
            type: "fixed",
            fixedDelay: 1500,
            minDelay: 1000,
            maxDelay: 3000,
            adaptiveFactors: {
              messageLength: false,
              agentProcessingTime: false,
              conversationPace: false
            }
          },
          conversationFlow: {
            maxAutonomousMessages: 10,
            stallDetectionTimeout: 15000,
            stallRecoveryStrategy: "end_conversation",
            turnTimeoutDuration: 30000,
            pauseBetweenTurns: 1000
          },
          realTimeControls: {
            enableTypingIndicators: false,
            typingIndicatorDelay: 1000,
            messagePreviewEnabled: false,
            ghostMessageDuration: 3000
          }
        },
        advancedParameters: {
          conversationDynamics: {
            topicDriftAllowance: 0.1,
            contextWindowSize: 5,
            semanticCoherenceThreshold: 0.9,
            emotionalToneConsistency: 0.8
          },
          agentBehavior: {
            personalityInfluence: 0.5,
            expertiseBoost: 0.7,
            randomnessInjection: 0.1,
            memoryRetentionFactor: 0.9
          },
          qualityControls: {
            minimumResponseQuality: 0.8,
            duplicateDetectionSensitivity: 0.9,
            relevanceThreshold: 0.9,
            factualAccuracyWeight: 0.95
          },
          performanceOptimization: {
            enableCaching: false,
            cacheExpirationTime: 60000,
            maxConcurrentGenerations: 1,
            resourceThrottling: true
          }
        },
        safetyConstraints: {
          enableSafetyChecks: true,
          maxResponseLength: 1000,
          contentFiltering: true,
          rateLimiting: {
            enabled: true,
            maxRequestsPerMinute: 30,
            maxRequestsPerHour: 500
          },
          emergencyStopConditions: ["high_error_rate", "quality_degradation"]
        },
        monitoring: {
          enableMetrics: true,
          trackPerformance: true,
          logLevel: "info",
          metricsRetentionDays: 7,
          alertThresholds: {
            responseTimeMs: 10000,
            errorRate: 0.05,
            qualityScore: 0.7
          }
        }
      },
      balanced: {
        responseDynamics: {
          turnTaking: {
            enabled: true,
            maxConcurrentResponses: 2,
            responseThreshold: 0.6,
            mentionResponseProbability: 0.9,
            conversationStarterResponseRate: 0.85
          },
          agentSelection: {
            autoSelectRespondents: true,
            selectionStrategy: "engagement_based",
            diversityBonus: 0.5,
            expertiseWeight: 0.6,
            maxSpeakersPerTurn: 2
          },
          responseGeneration: {
            maxKnowledgeEntries: 20,
            includeAgentKnowledge: true,
            streamResponse: true,
            responseLength: "medium",
            creativityLevel: 0.5,
            coherenceWeight: 0.7
          }
        },
        timingControls: {
          responseDelay: {
            type: "range",
            fixedDelay: 800,
            minDelay: 500,
            maxDelay: 2000,
            adaptiveFactors: {
              messageLength: true,
              agentProcessingTime: true,
              conversationPace: true
            }
          },
          conversationFlow: {
            maxAutonomousMessages: 25,
            stallDetectionTimeout: 8000,
            stallRecoveryStrategy: "prompt_random",
            turnTimeoutDuration: 20000,
            pauseBetweenTurns: 300
          },
          realTimeControls: {
            enableTypingIndicators: true,
            typingIndicatorDelay: 500,
            messagePreviewEnabled: true,
            ghostMessageDuration: 5000
          }
        }
      },
      aggressive: {
        responseDynamics: {
          turnTaking: {
            enabled: true,
            maxConcurrentResponses: 5,
            responseThreshold: 0.3,
            mentionResponseProbability: 0.8,
            conversationStarterResponseRate: 0.75
          },
          agentSelection: {
            autoSelectRespondents: true,
            selectionStrategy: "random",
            diversityBonus: 0.7,
            expertiseWeight: 0.3,
            maxSpeakersPerTurn: 4
          },
          responseGeneration: {
            maxKnowledgeEntries: 30,
            includeAgentKnowledge: true,
            streamResponse: true,
            responseLength: "long",
            creativityLevel: 0.8,
            coherenceWeight: 0.5
          }
        },
        timingControls: {
          responseDelay: {
            type: "adaptive",
            fixedDelay: 300,
            minDelay: 100,
            maxDelay: 1000,
            adaptiveFactors: {
              messageLength: true,
              agentProcessingTime: true,
              conversationPace: true
            }
          },
          conversationFlow: {
            maxAutonomousMessages: 50,
            stallDetectionTimeout: 3000,
            stallRecoveryStrategy: "prompt_expert",
            turnTimeoutDuration: 10000,
            pauseBetweenTurns: 0
          },
          realTimeControls: {
            enableTypingIndicators: true,
            typingIndicatorDelay: 200,
            messagePreviewEnabled: true,
            ghostMessageDuration: 8000
          }
        }
      }
    };
  }
  /**
  * Generate Expert Committee Review report
  */
  static generateExpertReviewReport(preset, validationResult) {
    /* istanbul ignore next */
    cov_1gwtnknuck().f[21]++;
    // Since ValidationResult doesn't have checks property, we'll create a simpler report
    const hasIssues =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[179]++,
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[57][0]++, validationResult.errors.length > 0) ||
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[57][1]++, validationResult.warnings.length > 0));
    const experts =
    /* istanbul ignore next */
    (cov_1gwtnknuck().s[180]++, hasIssues ?
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[58][0]++, ["Harrison Chase (@hwchase17): LangChain integration - conversation orchestration", "Jo\xe3o Moura (@joaomdmoura): CrewAI coordination - multi-agent collaboration", "Guillermo Rauch (@rauchg): Platform scaling - performance optimization", "Robert C. Martin (@unclebob): Safety protocol architecture"]) :
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[58][1]++, []));
    /* istanbul ignore next */
    cov_1gwtnknuck().s[181]++;
    return `
# Expert Committee Review Report

## Preset: ${preset.name}
**Valid**: ${validationResult.isValid ?
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[59][0]++, "YES") :
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[59][1]++, "NO")}
**Expert Review Required**: ${hasIssues ?
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[60][0]++, "YES") :
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[60][1]++, "NO")}

## Required Expert Consultations:
${experts.length > 0 ?
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[61][0]++, experts.map(expert => {
      /* istanbul ignore next */
      cov_1gwtnknuck().f[22]++;
      cov_1gwtnknuck().s[182]++;
      return `- ${expert}`;
    }).join("\n")) :
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[61][1]++, "None required")}

## Validation Results:
**Errors**: ${validationResult.errors.length > 0 ?
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[62][0]++, validationResult.errors.join("\n- ")) :
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[62][1]++, "None")}
**Warnings**: ${validationResult.warnings.length > 0 ?
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[63][0]++, validationResult.warnings.join("\n- ")) :
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[63][1]++, "None")}

## Recommended Actions:
${
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[65][0]++, validationResult.suggestions) &&
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[65][1]++, validationResult.suggestions.length > 0) ?
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[64][0]++, validationResult.suggestions.map(action => {
      /* istanbul ignore next */
      cov_1gwtnknuck().f[23]++;
      cov_1gwtnknuck().s[183]++;
      return `- ${action}`;
    }).join("\n")) :
    /* istanbul ignore next */
    (cov_1gwtnknuck().b[64][1]++, "No specific actions required")}

---
*Generated by Conversation Preset Safety Validator v1.0*
*Expert Committee Review Protocol (Task #33) Compliance*
`;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
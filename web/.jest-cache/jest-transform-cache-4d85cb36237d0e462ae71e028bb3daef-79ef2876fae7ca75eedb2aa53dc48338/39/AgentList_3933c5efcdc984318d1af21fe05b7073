77db126fd1e82c2667fc5b68ae44f6fd
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return AgentList;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _button = require("./ui/button");
const _scrollarea = require("./ui/scroll-area");
const _lucidereact = require("lucide-react");
const _popover = require("./ui/popover");
const _dialog = require("./ui/dialog");
const _input = require("./ui/input");
const _react = require("react");
const _checkbox = require("./ui/checkbox");
const _label = require("./ui/label");
const _radiogroup = require("./ui/radio-group");
const _spinner = require("./ui/spinner");
const _jszip = /*#__PURE__*/ _interop_require_default(require("jszip"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
// Predefined color palette
const colorPalette = [
    "#4f46e5",
    "#10b981",
    "#ef4444",
    "#f59e0b",
    "#6366f1",
    "#ec4899",
    "#8b5cf6",
    "#06b6d4",
    "#84cc16",
    "#f97316",
    "#14b8a6",
    "#8b5cf6"
];
function AgentList({ agents, selectedAgent, onSelectAgent, onCreateAgent, onCreateAgentWithName, onDeleteAgent, onAddToConversation, onRemoveFromConversation, onUpdateAgentColor, onToggleAutonomy, onExportAgents, onImportAgents, activeConversation, llmSettings }) {
    const [isDialogOpen, setIsDialogOpen] = (0, _react.useState)(false);
    const [newAgentName, setNewAgentName] = (0, _react.useState)("");
    const fileInputRef = (0, _react.useRef)(null);
    // State for export dialog
    const [isExportDialogOpen, setIsExportDialogOpen] = (0, _react.useState)(false);
    const [selectedAgentsForExport, setSelectedAgentsForExport] = (0, _react.useState)({});
    const [exportAllAgents, setExportAllAgents] = (0, _react.useState)(true);
    const [includeSettings, setIncludeSettings] = (0, _react.useState)(false);
    const [includeApiKeys, setIncludeApiKeys] = (0, _react.useState)(false);
    const [includeConversations, setIncludeConversations] = (0, _react.useState)(false); // New state for conversations
    // State for import dialog
    const [isImportDialogOpen, setIsImportDialogOpen] = (0, _react.useState)(false);
    const [importFile, setImportFile] = (0, _react.useState)(null);
    const [importMode, setImportMode] = (0, _react.useState)("new");
    const [importSettings, setImportSettings] = (0, _react.useState)(true);
    const [importApiKeys, setImportApiKeys] = (0, _react.useState)(false);
    const [importConversations, setImportConversations] = (0, _react.useState)(false); // New state for conversations
    const [isImporting, setIsImporting] = (0, _react.useState)(false);
    const [importError, setImportError] = (0, _react.useState)(null);
    const [hasSettingsInImport, setHasSettingsInImport] = (0, _react.useState)(false);
    const [hasApiKeysInImport, setHasApiKeysInImport] = (0, _react.useState)(false);
    const [hasConversationsInImport, setHasConversationsInImport] = (0, _react.useState)(false); // New state for conversations
    // Handle export dialog open
    const handleExportClick = ()=>{
        // Initialize with all agents selected
        const initialSelection = agents.reduce((acc, agent)=>{
            acc[agent.id] = true;
            return acc;
        }, {});
        setSelectedAgentsForExport(initialSelection);
        setExportAllAgents(true);
        setIncludeSettings(false);
        setIncludeApiKeys(false);
        setIncludeConversations(false); // Initialize conversation export option
        setIsExportDialogOpen(true);
    };
    // Handle export confirmation
    const handleExportConfirm = ()=>{
        let agentIdsToExport = [];
        if (exportAllAgents) {
            // Export all agents
            agentIdsToExport = agents.map((agent)=>agent.id);
        } else {
            // Export only selected agents
            agentIdsToExport = Object.entries(selectedAgentsForExport).filter(([_, isSelected])=>isSelected).map(([agentId])=>agentId);
        }
        onExportAgents(agentIdsToExport, {
            includeSettings,
            includeApiKeys: includeSettings && includeApiKeys,
            includeConversations
        });
        setIsExportDialogOpen(false);
    };
    // Toggle selection of an agent for export
    const toggleAgentSelection = (agentId)=>{
        setSelectedAgentsForExport((prev)=>({
                ...prev,
                [agentId]: !prev[agentId]
            }));
    };
    // Handle import button click
    const handleImportClick = ()=>{
        if (fileInputRef.current) {
            fileInputRef.current.click();
        }
    };
    // Handle file selection
    const handleFileChange = async (e)=>{
        const file = e.target.files?.[0];
        if (file) {
            setImportFile(file);
            setImportError(null);
            // Check if the file contains settings and conversations
            try {
                const zip = new _jszip.default();
                const zipContent = await zip.loadAsync(file);
                // Check if settings.json exists in the zip
                const hasSettings = !!zipContent.files["settings.json"];
                setHasSettingsInImport(hasSettings);
                // Check if conversations folder exists in the zip
                const hasConversations = Object.keys(zipContent.files).some((path)=>path.startsWith("conversations/") && path !== "conversations/");
                setHasConversationsInImport(hasConversations);
                console.log("Import file check - Has conversations:", hasConversations);
                // If settings exist, check if they contain API keys
                if (hasSettings) {
                    const settingsJSON = await zipContent.files["settings.json"].async("string");
                    const settings = JSON.parse(settingsJSON);
                    setHasApiKeysInImport(!!settings.apiKey && typeof settings.apiKey === "string" && settings.apiKey.trim() !== "");
                } else {
                    setHasApiKeysInImport(false);
                }
            } catch (error) {
                console.error("Error checking zip contents:", error);
                setHasSettingsInImport(false);
                setHasApiKeysInImport(false);
                setHasConversationsInImport(false);
            }
            setImportSettings(true);
            setImportApiKeys(false);
            setImportConversations(false); // Initialize conversation import option
            setImportMode("new");
            setIsImportDialogOpen(true);
        }
        // Reset the input so the same file can be selected again
        if (e.target) {
            e.target.value = "";
        }
    };
    // Handle import confirmation
    const handleImportConfirm = ()=>{
        if (!importFile) return;
        setIsImporting(true);
        setImportError(null);
        try {
            // Pass the file and import options to the parent component
            onImportAgents(importFile, {
                mode: importMode,
                importSettings: importSettings && hasSettingsInImport,
                importApiKeys: importSettings && importApiKeys && hasApiKeysInImport,
                importConversations: importConversations && hasConversationsInImport
            });
            // Close the dialog after a short delay to allow the toast to show
            setTimeout(()=>{
                setIsImportDialogOpen(false);
                setImportFile(null);
            }, 500);
        } catch (error) {
            setImportError(error instanceof Error ? error.message : "Unknown error occurred during import");
        } finally{
            setIsImporting(false);
        }
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: "flex flex-col h-full",
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "p-4 border-b border-border",
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "flex justify-between items-center",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("h2", {
                            className: "text-xl font-bold text-white",
                            children: "Agents"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "flex gap-2",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                                    onClick: handleImportClick,
                                    size: "sm",
                                    variant: "outline",
                                    className: "bg-purple-900/50 border-purple-500 text-white hover:bg-purple-800 hover:text-white",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Upload, {
                                            size: 16,
                                            className: "mr-1"
                                        }),
                                        "Import"
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                                    onClick: handleExportClick,
                                    size: "sm",
                                    variant: "outline",
                                    className: "bg-purple-900/50 border-purple-500 text-white hover:bg-purple-800 hover:text-white",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Download, {
                                            size: 16,
                                            className: "mr-1"
                                        }),
                                        "Export"
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                    type: "file",
                                    ref: fileInputRef,
                                    onChange: handleFileChange,
                                    accept: ".zip",
                                    className: "hidden"
                                })
                            ]
                        })
                    ]
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_scrollarea.ScrollArea, {
                className: "flex-1 p-4",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    className: "space-y-2",
                    children: agents.map((agent)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: `p-3 rounded-md border cursor-pointer transition-colors ${selectedAgent?.id === agent.id ? "border-primary bg-primary/10" : "border-border hover:bg-muted"}`,
                            onClick: ()=>onSelectAgent(agent),
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "flex items-center justify-between",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "flex items-center gap-2",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_popover.Popover, {
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_popover.PopoverTrigger, {
                                                            asChild: true,
                                                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                className: "w-4 h-4 rounded-full cursor-pointer hover:ring-2 hover:ring-offset-2 hover:ring-primary transition-all",
                                                                style: {
                                                                    backgroundColor: agent.color
                                                                },
                                                                onClick: (e)=>e.stopPropagation(),
                                                                title: "Change agent color"
                                                            })
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_popover.PopoverContent, {
                                                            className: "w-64",
                                                            align: "start",
                                                            side: "right",
                                                            onClick: (e)=>e.stopPropagation(),
                                                            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                className: "space-y-2",
                                                                children: [
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("h4", {
                                                                        className: "font-medium text-sm",
                                                                        children: "Select agent color"
                                                                    }),
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                        className: "grid grid-cols-6 gap-2",
                                                                        children: colorPalette.map((color)=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                                className: `w-6 h-6 rounded-full cursor-pointer hover:scale-110 transition-transform ${agent.color === color ? "ring-2 ring-primary ring-offset-2" : ""}`,
                                                                                style: {
                                                                                    backgroundColor: color
                                                                                },
                                                                                onClick: ()=>onUpdateAgentColor(agent.id, color)
                                                                            }, color))
                                                                    }),
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                        className: "pt-2",
                                                                        children: [
                                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                                                                htmlFor: `custom-color-${agent.id}`,
                                                                                className: "text-xs text-muted-foreground",
                                                                                children: "Custom color:"
                                                                            }),
                                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                                                id: `custom-color-${agent.id}`,
                                                                                type: "color",
                                                                                value: agent.color,
                                                                                onChange: (e)=>onUpdateAgentColor(agent.id, e.target.value),
                                                                                className: "w-full h-8 mt-1 cursor-pointer"
                                                                            })
                                                                        ]
                                                                    })
                                                                ]
                                                            })
                                                        })
                                                    ]
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                    className: "font-medium text-white",
                                                    title: "Select agent to edit name and details",
                                                    children: agent.name
                                                })
                                            ]
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "flex items-center gap-2",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                    className: `w-3 h-3 rounded-full ${agent.autonomyEnabled ? "bg-green-500" : "bg-gray-300"}`,
                                                    title: agent.autonomyEnabled ? "Autonomy enabled" : "Autonomy disabled"
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                    className: `w-3 h-3 rounded-full ${agent.inConversation ? "bg-green-500" : "bg-gray-300"}`,
                                                    title: agent.inConversation ? "In conversation" : "Not in conversation"
                                                })
                                            ]
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "mt-2 flex justify-between",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                            variant: "destructive",
                                            size: "sm",
                                            onClick: (e)=>{
                                                e.stopPropagation();
                                                onDeleteAgent(agent.id);
                                            },
                                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Trash, {
                                                size: 14
                                            })
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                            variant: "outline",
                                            size: "sm",
                                            onClick: (e)=>{
                                                e.stopPropagation();
                                                onToggleAutonomy(agent.id, !agent.autonomyEnabled);
                                            },
                                            className: `${agent.autonomyEnabled ? "bg-green-900/50 border-green-500 text-white hover:bg-green-800 hover:text-white" : "bg-gray-900/50 border-gray-500 text-white hover:bg-gray-800 hover:text-white"}`,
                                            children: agent.autonomyEnabled ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Power, {
                                                        size: 14,
                                                        className: "mr-1"
                                                    }),
                                                    "Auto On"
                                                ]
                                            }) : /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.PowerOff, {
                                                        size: 14,
                                                        className: "mr-1"
                                                    }),
                                                    "Auto Off"
                                                ]
                                            })
                                        }),
                                        agent.inConversation ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                                            variant: "outline",
                                            size: "sm",
                                            onClick: (e)=>{
                                                e.stopPropagation();
                                                onRemoveFromConversation(agent.id);
                                            },
                                            className: "bg-purple-900/50 border-purple-500 text-white hover:bg-purple-800 hover:text-white",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.UserMinus, {
                                                    size: 14,
                                                    className: "mr-1"
                                                }),
                                                "Remove"
                                            ]
                                        }) : /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                                            variant: "outline",
                                            size: "sm",
                                            disabled: !activeConversation && agents.some((a)=>a.inConversation),
                                            onClick: (e)=>{
                                                e.stopPropagation();
                                                onAddToConversation(agent.id);
                                            },
                                            className: "bg-purple-900/50 border-purple-500 text-white hover:bg-purple-800 hover:text-white",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.UserPlus, {
                                                    size: 14,
                                                    className: "mr-1"
                                                }),
                                                "Add"
                                            ]
                                        })
                                    ]
                                })
                            ]
                        }, agent.id))
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "p-4 border-t border-border",
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_dialog.Dialog, {
                    open: isDialogOpen,
                    onOpenChange: setIsDialogOpen,
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                            onClick: ()=>setIsDialogOpen(true),
                            className: "w-full",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Plus, {
                                    size: 16,
                                    className: "mr-2"
                                }),
                                "Create Agent"
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_dialog.DialogContent, {
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_dialog.DialogHeader, {
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_dialog.DialogTitle, {
                                        children: "Create New Agent"
                                    })
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "py-4",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                            htmlFor: "new-agent-name",
                                            className: "text-sm font-medium block mb-2",
                                            children: "Agent Name"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_input.Input, {
                                            id: "new-agent-name",
                                            value: newAgentName,
                                            onChange: (e)=>setNewAgentName(e.target.value),
                                            placeholder: "Enter agent name...",
                                            autoFocus: true
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_dialog.DialogFooter, {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_dialog.DialogClose, {
                                            asChild: true,
                                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                                variant: "outline",
                                                children: "Cancel"
                                            })
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                            onClick: ()=>{
                                                if (newAgentName.trim()) {
                                                    onCreateAgentWithName(newAgentName.trim());
                                                    setNewAgentName("");
                                                    setIsDialogOpen(false);
                                                }
                                            },
                                            children: "Create"
                                        })
                                    ]
                                })
                            ]
                        })
                    ]
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_dialog.Dialog, {
                open: isExportDialogOpen,
                onOpenChange: setIsExportDialogOpen,
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_dialog.DialogContent, {
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_dialog.DialogHeader, {
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_dialog.DialogTitle, {
                                children: "Export Agents"
                            })
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "py-4",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                    className: "mb-4",
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        className: "flex items-center space-x-2",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_checkbox.Checkbox, {
                                                id: "export-all",
                                                checked: exportAllAgents,
                                                onCheckedChange: (checked)=>{
                                                    setExportAllAgents(checked === true);
                                                }
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                                htmlFor: "export-all",
                                                children: "Export all agents"
                                            })
                                        ]
                                    })
                                }),
                                !exportAllAgents && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "space-y-2",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                            className: "text-sm font-medium mb-2",
                                            children: "Select agents to export:"
                                        }),
                                        agents.map((agent)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                className: "flex items-center space-x-2",
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_checkbox.Checkbox, {
                                                        id: `export-agent-${agent.id}`,
                                                        checked: selectedAgentsForExport[agent.id] || false,
                                                        onCheckedChange: ()=>toggleAgentSelection(agent.id)
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_label.Label, {
                                                        htmlFor: `export-agent-${agent.id}`,
                                                        className: "flex items-center",
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                className: "w-3 h-3 rounded-full mr-2",
                                                                style: {
                                                                    backgroundColor: agent.color
                                                                }
                                                            }),
                                                            agent.name
                                                        ]
                                                    })
                                                ]
                                            }, agent.id))
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "mt-6 pt-4 border-t",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "flex items-center space-x-2 mb-3",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_checkbox.Checkbox, {
                                                    id: "include-settings",
                                                    checked: includeSettings,
                                                    onCheckedChange: (checked)=>{
                                                        setIncludeSettings(checked === true);
                                                        if (checked === false) {
                                                            setIncludeApiKeys(false);
                                                        }
                                                    }
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                                    htmlFor: "include-settings",
                                                    children: "Include settings"
                                                })
                                            ]
                                        }),
                                        includeSettings && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "ml-6 mb-3",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    className: "flex items-center space-x-2",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_checkbox.Checkbox, {
                                                            id: "include-api-keys",
                                                            checked: includeApiKeys,
                                                            onCheckedChange: (checked)=>setIncludeApiKeys(checked === true)
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_label.Label, {
                                                            htmlFor: "include-api-keys",
                                                            className: "flex items-center",
                                                            children: [
                                                                "Include API keys",
                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                    className: "text-red-500 ml-1",
                                                                    children: "*"
                                                                })
                                                            ]
                                                        })
                                                    ]
                                                }),
                                                includeApiKeys && /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                    className: "text-xs text-red-500 mt-1",
                                                    children: "Warning: API keys are sensitive information. Only export them if you're sure about security."
                                                })
                                            ]
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "flex items-center space-x-2",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_checkbox.Checkbox, {
                                                    id: "include-conversations",
                                                    checked: includeConversations,
                                                    onCheckedChange: (checked)=>setIncludeConversations(checked === true)
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                                    htmlFor: "include-conversations",
                                                    children: "Include conversation histories"
                                                })
                                            ]
                                        })
                                    ]
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_dialog.DialogFooter, {
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_dialog.DialogClose, {
                                    asChild: true,
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                        variant: "outline",
                                        children: "Cancel"
                                    })
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                                    onClick: handleExportConfirm,
                                    disabled: !exportAllAgents && Object.values(selectedAgentsForExport).filter(Boolean).length === 0,
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Download, {
                                            size: 16,
                                            className: "mr-2"
                                        }),
                                        "Export"
                                    ]
                                })
                            ]
                        })
                    ]
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_dialog.Dialog, {
                open: isImportDialogOpen,
                onOpenChange: (open)=>{
                    if (!open) {
                        setImportFile(null);
                        setImportError(null);
                    }
                    setIsImportDialogOpen(open);
                },
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_dialog.DialogContent, {
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_dialog.DialogHeader, {
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_dialog.DialogTitle, {
                                children: "Import Agents"
                            })
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "py-4",
                            children: [
                                importFile && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "mb-4",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                            className: "text-sm font-medium",
                                            children: "Selected file:"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                                            className: "text-sm",
                                            children: [
                                                importFile.name,
                                                " (",
                                                (importFile.size / 1024).toFixed(1),
                                                " KB)"
                                            ]
                                        })
                                    ]
                                }),
                                hasSettingsInImport && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "mb-4 pb-4 border-b",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "flex items-center space-x-2",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_checkbox.Checkbox, {
                                                    id: "import-settings",
                                                    checked: importSettings,
                                                    onCheckedChange: (checked)=>{
                                                        setImportSettings(checked === true);
                                                        if (checked === false) {
                                                            setImportApiKeys(false);
                                                        }
                                                    }
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                                    htmlFor: "import-settings",
                                                    children: "Import settings"
                                                })
                                            ]
                                        }),
                                        importSettings && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                            className: "ml-6 mt-2",
                                            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                className: "flex items-center space-x-2",
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_checkbox.Checkbox, {
                                                        id: "import-api-keys",
                                                        checked: importApiKeys,
                                                        onCheckedChange: (checked)=>setImportApiKeys(checked === true)
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                                        htmlFor: "import-api-keys",
                                                        children: "Import API keys"
                                                    })
                                                ]
                                            })
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                    className: "mb-4 pb-4 border-b",
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        className: "flex items-center space-x-2",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_checkbox.Checkbox, {
                                                id: "import-conversations",
                                                checked: importConversations,
                                                onCheckedChange: (checked)=>setImportConversations(checked === true),
                                                disabled: !hasConversationsInImport
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_label.Label, {
                                                htmlFor: "import-conversations",
                                                className: !hasConversationsInImport ? "text-muted-foreground" : "",
                                                children: [
                                                    "Import conversation histories",
                                                    !hasConversationsInImport && /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                        className: "ml-2 text-xs text-muted-foreground",
                                                        children: "(No conversations found in import file)"
                                                    })
                                                ]
                                            })
                                        ]
                                    })
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                    className: "space-y-4",
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                className: "text-sm font-medium mb-2",
                                                children: "Import mode:"
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_radiogroup.RadioGroup, {
                                                value: importMode,
                                                onValueChange: (value)=>setImportMode(value),
                                                children: [
                                                    hasSettingsInImport && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                        className: "flex items-center space-x-2 mb-2",
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_radiogroup.RadioGroupItem, {
                                                                value: "settings-only",
                                                                id: "import-settings-only"
                                                            }),
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                                                htmlFor: "import-settings-only",
                                                                children: "Import settings only (no agents)"
                                                            })
                                                        ]
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                        className: "flex items-center space-x-2 mb-2",
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_radiogroup.RadioGroupItem, {
                                                                value: "new",
                                                                id: "import-new"
                                                            }),
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                                                htmlFor: "import-new",
                                                                children: "Import as new agents"
                                                            })
                                                        ]
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                        className: "flex items-center space-x-2 mb-2",
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_radiogroup.RadioGroupItem, {
                                                                value: "replace",
                                                                id: "import-replace"
                                                            }),
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                                                htmlFor: "import-replace",
                                                                children: "Replace existing agents with same ID"
                                                            })
                                                        ]
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                        className: "flex items-center space-x-2",
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_radiogroup.RadioGroupItem, {
                                                                value: "merge",
                                                                id: "import-merge"
                                                            }),
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                                                htmlFor: "import-merge",
                                                                children: "Merge knowledge with existing agents"
                                                            })
                                                        ]
                                                    })
                                                ]
                                            })
                                        ]
                                    })
                                }),
                                importError && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "mt-4 p-3 bg-red-500/20 border border-red-500 rounded-md flex items-start",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.AlertCircle, {
                                            className: "text-red-500 mr-2 mt-0.5 flex-shrink-0",
                                            size: 16
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                            className: "text-sm text-red-500",
                                            children: importError
                                        })
                                    ]
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_dialog.DialogFooter, {
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_dialog.DialogClose, {
                                    asChild: true,
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                        variant: "outline",
                                        children: "Cancel"
                                    })
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                    onClick: handleImportConfirm,
                                    disabled: !importFile || isImporting,
                                    children: isImporting ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_spinner.Spinner, {
                                                size: 16,
                                                className: "mr-2"
                                            }),
                                            "Importing..."
                                        ]
                                    }) : /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Upload, {
                                                size: 16,
                                                className: "mr-2"
                                            }),
                                            "Import"
                                        ]
                                    })
                                })
                            ]
                        })
                    ]
                })
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,
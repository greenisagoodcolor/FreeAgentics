b3a32943d40ba7a73751fe820bdbb9d4
"use strict";

/* istanbul ignore next */
function cov_1makj111sw() {
  var path = "/Users/matthewmoroney/builds/FreeAgentics/web/hooks/useAsyncOperation.ts";
  var hash = "a7dc29d2ad799fc7aa8900e6dbc30f01b7f396c8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewmoroney/builds/FreeAgentics/web/hooks/useAsyncOperation.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 33
        }
      },
      "3": {
        start: {
          line: 11,
          column: 15
        },
        end: {
          line: 11,
          column: 31
        }
      },
      "4": {
        start: {
          line: 13,
          column: 28
        },
        end: {
          line: 13,
          column: 54
        }
      },
      "5": {
        start: {
          line: 14,
          column: 34
        },
        end: {
          line: 14,
          column: 61
        }
      },
      "6": {
        start: {
          line: 15,
          column: 30
        },
        end: {
          line: 15,
          column: 56
        }
      },
      "7": {
        start: {
          line: 16,
          column: 20
        },
        end: {
          line: 29,
          column: 6
        }
      },
      "8": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 25
        }
      },
      "9": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 23
        }
      },
      "10": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 26,
          column: 9
        }
      },
      "11": {
        start: {
          line: 20,
          column: 27
        },
        end: {
          line: 20,
          column: 48
        }
      },
      "12": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 21,
          column: 28
        }
      },
      "13": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 74
        }
      },
      "14": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 25,
          column: 30
        }
      },
      "15": {
        start: {
          line: 30,
          column: 18
        },
        end: {
          line: 34,
          column: 10
        }
      },
      "16": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 22
        }
      },
      "17": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 23
        }
      },
      "18": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 26
        }
      },
      "19": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 39,
          column: 7
        }
      },
      "20": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 18
        }
      },
      "21": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 46,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "useAsyncOperation",
        decl: {
          start: {
            line: 12,
            column: 9
          },
          end: {
            line: 12,
            column: 26
          }
        },
        loc: {
          start: {
            line: 12,
            column: 42
          },
          end: {
            line: 47,
            column: 1
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 44
          },
          end: {
            line: 16,
            column: 45
          }
        },
        loc: {
          start: {
            line: 16,
            column: 54
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 30,
            column: 42
          },
          end: {
            line: 30,
            column: 43
          }
        },
        loc: {
          start: {
            line: 30,
            column: 46
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 30
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 35,
            column: 26
          },
          end: {
            line: 35,
            column: 27
          }
        },
        loc: {
          start: {
            line: 35,
            column: 30
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 35
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 21
          },
          end: {
            line: 23,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 23,
            column: 44
          },
          end: {
            line: 23,
            column: 47
          }
        }, {
          start: {
            line: 23,
            column: 50
          },
          end: {
            line: 23,
            column: 72
          }
        }],
        line: 23
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matthewmoroney/builds/FreeAgentics/web/hooks/useAsyncOperation.ts"],
      sourcesContent: ["import { useState, useEffect, useCallback } from \"react\";\n\ninterface UseAsyncOperationResult<T> {\n  data: T | null;\n  loading: boolean;\n  error: Error | null;\n  reset: () => void;\n  execute: () => void;\n}\n\nexport function useAsyncOperation<T>(\n  asyncFunction: () => Promise<T>,\n): UseAsyncOperationResult<T> {\n  const [data, setData] = useState<T | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<Error | null>(null);\n\n  const execute = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const result = await asyncFunction();\n      setData(result);\n    } catch (err) {\n      setError(err instanceof Error ? err : new Error(String(err)));\n    } finally {\n      setLoading(false);\n    }\n  }, [asyncFunction]);\n\n  const reset = useCallback(() => {\n    setData(null);\n    setError(null);\n    setLoading(false);\n  }, []);\n\n  useEffect(() => {\n    execute();\n  }, [execute]);\n\n  return {\n    data,\n    loading,\n    error,\n    reset,\n    execute,\n  };\n}\n"],
      names: ["useAsyncOperation", "asyncFunction", "data", "setData", "useState", "loading", "setLoading", "error", "setError", "execute", "useCallback", "result", "err", "Error", "String", "reset", "useEffect"],
      mappings: ";;;;+BAUgBA;;;eAAAA;;;uBAViC;AAU1C,SAASA,kBACdC,aAA+B;IAE/B,MAAM,CAACC,MAAMC,QAAQ,GAAGC,IAAAA,eAAQ,EAAW;IAC3C,MAAM,CAACC,SAASC,WAAW,GAAGF,IAAAA,eAAQ,EAAC;IACvC,MAAM,CAACG,OAAOC,SAAS,GAAGJ,IAAAA,eAAQ,EAAe;IAEjD,MAAMK,UAAUC,IAAAA,kBAAW,EAAC;QAC1BJ,WAAW;QACXE,SAAS;QAET,IAAI;YACF,MAAMG,SAAS,MAAMV;YACrBE,QAAQQ;QACV,EAAE,OAAOC,KAAK;YACZJ,SAASI,eAAeC,QAAQD,MAAM,IAAIC,MAAMC,OAAOF;QACzD,SAAU;YACRN,WAAW;QACb;IACF,GAAG;QAACL;KAAc;IAElB,MAAMc,QAAQL,IAAAA,kBAAW,EAAC;QACxBP,QAAQ;QACRK,SAAS;QACTF,WAAW;IACb,GAAG,EAAE;IAELU,IAAAA,gBAAS,EAAC;QACRP;IACF,GAAG;QAACA;KAAQ;IAEZ,OAAO;QACLP;QACAG;QACAE;QACAQ;QACAN;IACF;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a7dc29d2ad799fc7aa8900e6dbc30f01b7f396c8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1makj111sw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1makj111sw();
cov_1makj111sw().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1makj111sw().s[1]++;
Object.defineProperty(exports, "useAsyncOperation", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1makj111sw().f[0]++;
    cov_1makj111sw().s[2]++;
    return useAsyncOperation;
  }
});
const _react =
/* istanbul ignore next */
(cov_1makj111sw().s[3]++, require("react"));
function useAsyncOperation(asyncFunction) {
  /* istanbul ignore next */
  cov_1makj111sw().f[1]++;
  const [data, setData] =
  /* istanbul ignore next */
  (cov_1makj111sw().s[4]++, (0, _react.useState)(null));
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_1makj111sw().s[5]++, (0, _react.useState)(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_1makj111sw().s[6]++, (0, _react.useState)(null));
  const execute =
  /* istanbul ignore next */
  (cov_1makj111sw().s[7]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_1makj111sw().f[2]++;
    cov_1makj111sw().s[8]++;
    setLoading(true);
    /* istanbul ignore next */
    cov_1makj111sw().s[9]++;
    setError(null);
    /* istanbul ignore next */
    cov_1makj111sw().s[10]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_1makj111sw().s[11]++, await asyncFunction());
      /* istanbul ignore next */
      cov_1makj111sw().s[12]++;
      setData(result);
    } catch (err) {
      /* istanbul ignore next */
      cov_1makj111sw().s[13]++;
      setError(err instanceof Error ?
      /* istanbul ignore next */
      (cov_1makj111sw().b[0][0]++, err) :
      /* istanbul ignore next */
      (cov_1makj111sw().b[0][1]++, new Error(String(err))));
    } finally {
      /* istanbul ignore next */
      cov_1makj111sw().s[14]++;
      setLoading(false);
    }
  }, [asyncFunction]));
  const reset =
  /* istanbul ignore next */
  (cov_1makj111sw().s[15]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1makj111sw().f[3]++;
    cov_1makj111sw().s[16]++;
    setData(null);
    /* istanbul ignore next */
    cov_1makj111sw().s[17]++;
    setError(null);
    /* istanbul ignore next */
    cov_1makj111sw().s[18]++;
    setLoading(false);
  }, []));
  /* istanbul ignore next */
  cov_1makj111sw().s[19]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1makj111sw().f[4]++;
    cov_1makj111sw().s[20]++;
    execute();
  }, [execute]);
  /* istanbul ignore next */
  cov_1makj111sw().s[21]++;
  return {
    data,
    loading,
    error,
    reset,
    execute
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMW1ha2oxMTFzdyIsImFjdHVhbENvdmVyYWdlIiwicyIsInVzZUFzeW5jT3BlcmF0aW9uIiwiYXN5bmNGdW5jdGlvbiIsImYiLCJkYXRhIiwic2V0RGF0YSIsIl9yZWFjdCIsInVzZVN0YXRlIiwibG9hZGluZyIsInNldExvYWRpbmciLCJlcnJvciIsInNldEVycm9yIiwiZXhlY3V0ZSIsInVzZUNhbGxiYWNrIiwicmVzdWx0IiwiZXJyIiwiRXJyb3IiLCJiIiwiU3RyaW5nIiwicmVzZXQiLCJ1c2VFZmZlY3QiXSwic291cmNlcyI6WyIvVXNlcnMvbWF0dGhld21vcm9uZXkvYnVpbGRzL0ZyZWVBZ2VudGljcy93ZWIvaG9va3MvdXNlQXN5bmNPcGVyYXRpb24udHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCwgdXNlQ2FsbGJhY2sgfSBmcm9tIFwicmVhY3RcIjtcblxuaW50ZXJmYWNlIFVzZUFzeW5jT3BlcmF0aW9uUmVzdWx0PFQ+IHtcbiAgZGF0YTogVCB8IG51bGw7XG4gIGxvYWRpbmc6IGJvb2xlYW47XG4gIGVycm9yOiBFcnJvciB8IG51bGw7XG4gIHJlc2V0OiAoKSA9PiB2b2lkO1xuICBleGVjdXRlOiAoKSA9PiB2b2lkO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdXNlQXN5bmNPcGVyYXRpb248VD4oXG4gIGFzeW5jRnVuY3Rpb246ICgpID0+IFByb21pc2U8VD4sXG4pOiBVc2VBc3luY09wZXJhdGlvblJlc3VsdDxUPiB7XG4gIGNvbnN0IFtkYXRhLCBzZXREYXRhXSA9IHVzZVN0YXRlPFQgfCBudWxsPihudWxsKTtcbiAgY29uc3QgW2xvYWRpbmcsIHNldExvYWRpbmddID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbZXJyb3IsIHNldEVycm9yXSA9IHVzZVN0YXRlPEVycm9yIHwgbnVsbD4obnVsbCk7XG5cbiAgY29uc3QgZXhlY3V0ZSA9IHVzZUNhbGxiYWNrKGFzeW5jICgpID0+IHtcbiAgICBzZXRMb2FkaW5nKHRydWUpO1xuICAgIHNldEVycm9yKG51bGwpO1xuXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGFzeW5jRnVuY3Rpb24oKTtcbiAgICAgIHNldERhdGEocmVzdWx0KTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHNldEVycm9yKGVyciBpbnN0YW5jZW9mIEVycm9yID8gZXJyIDogbmV3IEVycm9yKFN0cmluZyhlcnIpKSk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHNldExvYWRpbmcoZmFsc2UpO1xuICAgIH1cbiAgfSwgW2FzeW5jRnVuY3Rpb25dKTtcblxuICBjb25zdCByZXNldCA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBzZXREYXRhKG51bGwpO1xuICAgIHNldEVycm9yKG51bGwpO1xuICAgIHNldExvYWRpbmcoZmFsc2UpO1xuICB9LCBbXSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBleGVjdXRlKCk7XG4gIH0sIFtleGVjdXRlXSk7XG5cbiAgcmV0dXJuIHtcbiAgICBkYXRhLFxuICAgIGxvYWRpbmcsXG4gICAgZXJyb3IsXG4gICAgcmVzZXQsXG4gICAgZXhlY3V0ZSxcbiAgfTtcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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
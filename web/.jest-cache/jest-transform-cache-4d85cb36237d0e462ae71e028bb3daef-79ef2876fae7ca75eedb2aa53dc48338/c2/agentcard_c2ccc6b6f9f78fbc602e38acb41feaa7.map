{"version":3,"names":["AgentCard","statusColors","cov_lw0voq37r","s","idle","moving","interacting","planning","executing","learning","error","offline","statusIcons","_lucidereact","Clock","Activity","Users","Brain","Zap","AlertCircle","PowerOff","agent","agentData","isSelected","b","onClick","className","f","status","resources","energy","health","memory_used","memory_capacity","StatusIcon","memoryUsagePercent","_jsxruntime","jsx","_tooltip","TooltipProvider","jsxs","_card","Card","CardHeader","style","backgroundColor","color","name","Tooltip","TooltipTrigger","autonomyEnabled","Power","TooltipContent","_badge","Badge","variant","CardContent","position","x","y","Battery","_progress","Progress","value","Heart","toFixed","activity","goals","length","Target","slice","map","goal","priority","CheckCircle","description","id","knowledge"],"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/components/agentcard.tsx"],"sourcesContent":["\"use client\";\n\nimport { Badge } from \"@/components/ui/badge\";\nimport { Card, CardContent, CardHeader } from \"@/components/ui/card\";\nimport { Progress } from \"@/components/ui/progress\";\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\";\nimport type { Agent } from \"@/lib/types\";\nimport type {\n  AgentGoal,\n  AgentResources,\n  AgentStatus,\n} from \"@/lib/types/agent-api\";\nimport {\n  Activity,\n  AlertCircle,\n  Battery,\n  Brain,\n  CheckCircle,\n  Clock,\n  Heart,\n  Power,\n  PowerOff,\n  Target,\n  Users,\n  Zap,\n} from \"lucide-react\";\nimport type React from \"react\";\n\ninterface AgentCardProps {\n  agent: Agent;\n  agentData?: {\n    status: AgentStatus;\n    resources: AgentResources;\n    goals: AgentGoal[];\n    activity?: string;\n  };\n  isSelected?: boolean;\n  onClick?: () => void;\n  className?: string;\n}\n\nconst statusColors: Record<AgentStatus, string> = {\n  idle: \"bg-gray-500\",\n  moving: \"bg-blue-500\",\n  interacting: \"bg-green-500\",\n  planning: \"bg-yellow-500\",\n  executing: \"bg-orange-500\",\n  learning: \"bg-purple-500\",\n  error: \"bg-red-500\",\n  offline: \"bg-gray-700\",\n};\n\nconst statusIcons: Record<AgentStatus, React.ElementType> = {\n  idle: Clock,\n  moving: Activity,\n  interacting: Users,\n  planning: Brain,\n  executing: Zap,\n  learning: Brain,\n  error: AlertCircle,\n  offline: PowerOff,\n};\n\nexport default function AgentCard({\n  agent,\n  agentData,\n  isSelected = false,\n  onClick,\n  className = \"\",\n}: AgentCardProps) {\n  const status = agentData?.status || \"offline\";\n  const resources = agentData?.resources || {\n    energy: 0,\n    health: 0,\n    memory_used: 0,\n    memory_capacity: 100,\n  };\n  const StatusIcon = statusIcons[status];\n\n  const memoryUsagePercent =\n    resources.memory_capacity > 0\n      ? (resources.memory_used / resources.memory_capacity) * 100\n      : 0;\n\n  return (\n    <TooltipProvider>\n      <Card\n        className={`cursor-pointer transition-all duration-200 hover:shadow-lg hover:scale-105 ${\n          isSelected ? \"ring-2 ring-primary\" : \"\"\n        } ${className}`}\n        onClick={onClick}\n      >\n        <CardHeader className=\"pb-3\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <div\n                className=\"w-4 h-4 rounded-full\"\n                style={{ backgroundColor: agent.color }}\n              />\n              <h3 className=\"font-semibold text-lg\">{agent.name}</h3>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              {/* Autonomy indicator */}\n              <Tooltip>\n                <TooltipTrigger>\n                  {agent.autonomyEnabled ? (\n                    <Power className=\"w-4 h-4 text-green-500\" />\n                  ) : (\n                    <PowerOff className=\"w-4 h-4 text-gray-400\" />\n                  )}\n                </TooltipTrigger>\n                <TooltipContent>\n                  <p>\n                    Autonomy: {agent.autonomyEnabled ? \"Enabled\" : \"Disabled\"}\n                  </p>\n                </TooltipContent>\n              </Tooltip>\n\n              {/* Status badge */}\n              <Badge\n                variant=\"secondary\"\n                className={`${statusColors[status]} text-white`}\n              >\n                <StatusIcon className=\"w-3 h-3 mr-1\" />\n                {status}\n              </Badge>\n            </div>\n          </div>\n        </CardHeader>\n\n        <CardContent className=\"space-y-3\">\n          {/* Position */}\n          <div className=\"text-sm text-muted-foreground\">\n            Position: ({agent.position.x}, {agent.position.y})\n          </div>\n\n          {/* Resources */}\n          <div className=\"space-y-2\">\n            {/* Energy */}\n            <div className=\"flex items-center gap-2\">\n              <Tooltip>\n                <TooltipTrigger>\n                  <Battery className=\"w-4 h-4 text-yellow-500\" />\n                </TooltipTrigger>\n                <TooltipContent>\n                  <p>Energy Level</p>\n                </TooltipContent>\n              </Tooltip>\n              <Progress value={resources.energy} className=\"flex-1\" />\n              <span className=\"text-xs text-muted-foreground w-10 text-right\">\n                {resources.energy}%\n              </span>\n            </div>\n\n            {/* Health */}\n            <div className=\"flex items-center gap-2\">\n              <Tooltip>\n                <TooltipTrigger>\n                  <Heart className=\"w-4 h-4 text-red-500\" />\n                </TooltipTrigger>\n                <TooltipContent>\n                  <p>Health Status</p>\n                </TooltipContent>\n              </Tooltip>\n              <Progress value={resources.health} className=\"flex-1\" />\n              <span className=\"text-xs text-muted-foreground w-10 text-right\">\n                {resources.health}%\n              </span>\n            </div>\n\n            {/* Memory */}\n            <div className=\"flex items-center gap-2\">\n              <Tooltip>\n                <TooltipTrigger>\n                  <Brain className=\"w-4 h-4 text-purple-500\" />\n                </TooltipTrigger>\n                <TooltipContent>\n                  <p>\n                    Memory Usage: {resources.memory_used}MB /{\" \"}\n                    {resources.memory_capacity}MB\n                  </p>\n                </TooltipContent>\n              </Tooltip>\n              <Progress value={memoryUsagePercent} className=\"flex-1\" />\n              <span className=\"text-xs text-muted-foreground w-10 text-right\">\n                {memoryUsagePercent.toFixed(0)}%\n              </span>\n            </div>\n          </div>\n\n          {/* Current Activity */}\n          {agentData?.activity && (\n            <div className=\"text-sm\">\n              <span className=\"text-muted-foreground\">Activity:</span>{\" \"}\n              {agentData.activity}\n            </div>\n          )}\n\n          {/* Goals */}\n          {agentData?.goals && agentData.goals.length > 0 && (\n            <div className=\"space-y-1\">\n              <div className=\"text-sm font-medium flex items-center gap-1\">\n                <Target className=\"w-4 h-4\" />\n                Active Goals:\n              </div>\n              <div className=\"space-y-1\">\n                {agentData.goals.slice(0, 2).map((goal) => (\n                  <div\n                    key={goal.id}\n                    className=\"text-xs flex items-center gap-1\"\n                  >\n                    {/* Mock status based on priority */}\n                    {goal.priority > 0.7 ? (\n                      <CheckCircle className=\"w-3 h-3 text-green-500\" />\n                    ) : (\n                      <Clock className=\"w-3 h-3 text-yellow-500\" />\n                    )}\n                    <span className=\"truncate\">{goal.description}</span>\n                  </div>\n                ))}\n                {agentData.goals.length > 2 && (\n                  <div className=\"text-xs text-muted-foreground\">\n                    +{agentData.goals.length - 2} more goals\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n\n          {/* Knowledge count */}\n          <div className=\"text-sm text-muted-foreground\">\n            Knowledge entries: {agent.knowledge.length}\n          </div>\n        </CardContent>\n      </Card>\n    </TooltipProvider>\n  );\n}\n"],"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","ignoreList":[]}
{"version":3,"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/__tests__/lib/browser-check.test.ts"],"sourcesContent":["/**\n * Comprehensive tests for browser check utilities\n */\n\nimport { isBrowser, isServer } from \"@/lib/browser-check\";\n\ndescribe(\"Browser Check Utilities\", () => {\n  describe(\"isBrowser\", () => {\n    it(\"should be true in browser environment\", () => {\n      // In Jest/jsdom environment, window should be available\n      expect(isBrowser).toBe(true);\n    });\n\n    it(\"should check for window object\", () => {\n      expect(typeof window).toBe(\"object\");\n      expect(window).toBeDefined();\n    });\n\n    it(\"should check for localStorage availability\", () => {\n      expect(window.localStorage).toBeDefined();\n      expect(typeof window.localStorage).toBe(\"object\");\n    });\n\n    it(\"should check for sessionStorage availability\", () => {\n      expect(window.sessionStorage).toBeDefined();\n      expect(typeof window.sessionStorage).toBe(\"object\");\n    });\n  });\n\n  describe(\"isServer\", () => {\n    it(\"should be the inverse of isBrowser\", () => {\n      expect(isServer).toBe(!isBrowser);\n    });\n\n    it(\"should be false in browser environment\", () => {\n      // In Jest/jsdom environment, we're simulating browser\n      expect(isServer).toBe(false);\n    });\n  });\n\n  describe(\"consistency\", () => {\n    it(\"should maintain inverse relationship\", () => {\n      expect(isBrowser).toBe(!isServer);\n      expect(isServer).toBe(!isBrowser);\n    });\n\n    it(\"should be stable across multiple calls\", () => {\n      const browserResult1 = isBrowser;\n      const browserResult2 = isBrowser;\n      const serverResult1 = isServer;\n      const serverResult2 = isServer;\n\n      expect(browserResult1).toBe(browserResult2);\n      expect(serverResult1).toBe(serverResult2);\n    });\n  });\n\n  // Test edge cases by mocking different environments\n  describe(\"edge cases\", () => {\n    let originalWindow: any;\n    let originalLocalStorage: any;\n    let originalSessionStorage: any;\n\n    beforeEach(() => {\n      originalWindow = global.window;\n      originalLocalStorage = global.window?.localStorage;\n      originalSessionStorage = global.window?.sessionStorage;\n    });\n\n    afterEach(() => {\n      global.window = originalWindow;\n      if (originalWindow) {\n        global.window.localStorage = originalLocalStorage;\n        global.window.sessionStorage = originalSessionStorage;\n      }\n    });\n\n    it(\"should handle missing window object\", () => {\n      // Simulate server environment\n      delete (global as any).window;\n\n      // Re-import to get fresh values\n      jest.resetModules();\n      const {\n        isBrowser: newIsBrowser,\n        isServer: newIsServer,\n      } = require(\"@/lib/browser-check\");\n\n      expect(newIsBrowser).toBe(false);\n      expect(newIsServer).toBe(true);\n    });\n\n    it(\"should handle missing localStorage\", () => {\n      if (global.window) {\n        delete (global.window as any).localStorage;\n      }\n\n      jest.resetModules();\n      const { isBrowser: newIsBrowser } = require(\"@/lib/browser-check\");\n\n      expect(newIsBrowser).toBe(false);\n    });\n\n    it(\"should handle missing sessionStorage\", () => {\n      if (global.window) {\n        delete (global.window as any).sessionStorage;\n      }\n\n      jest.resetModules();\n      const { isBrowser: newIsBrowser } = require(\"@/lib/browser-check\");\n\n      expect(newIsBrowser).toBe(false);\n    });\n  });\n});\n"],"names":["describe","it","expect","isBrowser","toBe","window","toBeDefined","localStorage","sessionStorage","isServer","browserResult1","browserResult2","serverResult1","serverResult2","originalWindow","originalLocalStorage","originalSessionStorage","beforeEach","global","afterEach","jest","resetModules","newIsBrowser","newIsServer","require"],"mappings":"AAAA;;CAEC;;;;8BAEmC;AAEpCA,SAAS,2BAA2B;IAClCA,SAAS,aAAa;QACpBC,GAAG,yCAAyC;YAC1C,wDAAwD;YACxDC,OAAOC,uBAAS,EAAEC,IAAI,CAAC;QACzB;QAEAH,GAAG,kCAAkC;YACnCC,OAAO,OAAOG,QAAQD,IAAI,CAAC;YAC3BF,OAAOG,QAAQC,WAAW;QAC5B;QAEAL,GAAG,8CAA8C;YAC/CC,OAAOG,OAAOE,YAAY,EAAED,WAAW;YACvCJ,OAAO,OAAOG,OAAOE,YAAY,EAAEH,IAAI,CAAC;QAC1C;QAEAH,GAAG,gDAAgD;YACjDC,OAAOG,OAAOG,cAAc,EAAEF,WAAW;YACzCJ,OAAO,OAAOG,OAAOG,cAAc,EAAEJ,IAAI,CAAC;QAC5C;IACF;IAEAJ,SAAS,YAAY;QACnBC,GAAG,sCAAsC;YACvCC,OAAOO,sBAAQ,EAAEL,IAAI,CAAC,CAACD,uBAAS;QAClC;QAEAF,GAAG,0CAA0C;YAC3C,sDAAsD;YACtDC,OAAOO,sBAAQ,EAAEL,IAAI,CAAC;QACxB;IACF;IAEAJ,SAAS,eAAe;QACtBC,GAAG,wCAAwC;YACzCC,OAAOC,uBAAS,EAAEC,IAAI,CAAC,CAACK,sBAAQ;YAChCP,OAAOO,sBAAQ,EAAEL,IAAI,CAAC,CAACD,uBAAS;QAClC;QAEAF,GAAG,0CAA0C;YAC3C,MAAMS,iBAAiBP,uBAAS;YAChC,MAAMQ,iBAAiBR,uBAAS;YAChC,MAAMS,gBAAgBH,sBAAQ;YAC9B,MAAMI,gBAAgBJ,sBAAQ;YAE9BP,OAAOQ,gBAAgBN,IAAI,CAACO;YAC5BT,OAAOU,eAAeR,IAAI,CAACS;QAC7B;IACF;IAEA,oDAAoD;IACpDb,SAAS,cAAc;QACrB,IAAIc;QACJ,IAAIC;QACJ,IAAIC;QAEJC,WAAW;YACTH,iBAAiBI,OAAOb,MAAM;YAC9BU,uBAAuBG,OAAOb,MAAM,EAAEE;YACtCS,yBAAyBE,OAAOb,MAAM,EAAEG;QAC1C;QAEAW,UAAU;YACRD,OAAOb,MAAM,GAAGS;YAChB,IAAIA,gBAAgB;gBAClBI,OAAOb,MAAM,CAACE,YAAY,GAAGQ;gBAC7BG,OAAOb,MAAM,CAACG,cAAc,GAAGQ;YACjC;QACF;QAEAf,GAAG,uCAAuC;YACxC,8BAA8B;YAC9B,OAAO,AAACiB,OAAeb,MAAM;YAE7B,gCAAgC;YAChCe,KAAKC,YAAY;YACjB,MAAM,EACJlB,WAAWmB,YAAY,EACvBb,UAAUc,WAAW,EACtB,GAAGC,QAAQ;YAEZtB,OAAOoB,cAAclB,IAAI,CAAC;YAC1BF,OAAOqB,aAAanB,IAAI,CAAC;QAC3B;QAEAH,GAAG,sCAAsC;YACvC,IAAIiB,OAAOb,MAAM,EAAE;gBACjB,OAAO,AAACa,OAAOb,MAAM,CAASE,YAAY;YAC5C;YAEAa,KAAKC,YAAY;YACjB,MAAM,EAAElB,WAAWmB,YAAY,EAAE,GAAGE,QAAQ;YAE5CtB,OAAOoB,cAAclB,IAAI,CAAC;QAC5B;QAEAH,GAAG,wCAAwC;YACzC,IAAIiB,OAAOb,MAAM,EAAE;gBACjB,OAAO,AAACa,OAAOb,MAAM,CAASG,cAAc;YAC9C;YAEAY,KAAKC,YAAY;YACjB,MAAM,EAAElB,WAAWmB,YAAY,EAAE,GAAGE,QAAQ;YAE5CtB,OAAOoB,cAAclB,IAAI,CAAC;QAC5B;IACF;AACF"}
{"version":3,"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/components/belief-state-mathematical-display.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect, useRef, useMemo } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"./ui/card\";\nimport { Button } from \"./ui/button\";\nimport { Badge } from \"./ui/badge\";\nimport \"katex/dist/katex.min.css\";\n\n// Import KaTeX dynamically to avoid SSR issues\nlet katex: any = null;\nif (typeof window !== \"undefined\") {\n  import(\"katex\").then((module) => {\n    katex = module.default;\n  });\n}\n\n/**\n * Belief State Mathematical Display Component\n *\n * Real-time rendering of Bayesian update equations and free energy calculations\n * using KaTeX for scientific publication quality mathematical display.\n *\n * Implements Task 37.2 requirements for mathematical transparency and rigor.\n */\n\ninterface MathematicalEquation {\n  name: string;\n  latex: string;\n  description: string;\n  currentValues?: Record<string, number>;\n}\n\ninterface BeliefStateData {\n  agent_id: string;\n  timestamp: string;\n  belief_distribution: number[];\n  free_energy: number;\n  convergence_metric: number;\n  uncertainty_measure: number;\n  mathematical_equations: Record<string, string>;\n  numerical_precision: Record<string, number>;\n}\n\ninterface BeliefStateMathematicalDisplayProps {\n  beliefData: BeliefStateData;\n  showEquations?: boolean;\n  showNumericalValues?: boolean;\n  realTimeUpdates?: boolean;\n  publicationMode?: boolean;\n}\n\nexport const BeliefStateMathematicalDisplay: React.FC<\n  BeliefStateMathematicalDisplayProps\n> = ({\n  beliefData,\n  showEquations = true,\n  showNumericalValues = true,\n  realTimeUpdates = true,\n  publicationMode = false,\n}) => {\n  const [equationsRendered, setEquationsRendered] = useState(false);\n  const [selectedEquation, setSelectedEquation] =\n    useState<string>(\"bayesian_update\");\n  const mathContainerRefs = useRef<{ [key: string]: HTMLDivElement }>({});\n\n  // Core mathematical equations with current values\n  const equations: MathematicalEquation[] = useMemo(\n    () => [\n      {\n        name: \"Bayesian Update\",\n        latex:\n          \"P(s_t|o_{1:t}) = \\\\frac{P(o_t|s_t)P(s_t|o_{1:t-1})}{\\\\sum_s P(o_t|s)P(s|o_{1:t-1})}\",\n        description: \"Posterior belief update incorporating new observations\",\n        currentValues: {\n          belief_entropy: -beliefData.belief_distribution.reduce(\n            (sum, p) => sum + (p > 0 ? p * Math.log(p) : 0),\n            0,\n          ),\n          max_belief: Math.max(...beliefData.belief_distribution),\n          min_belief: Math.min(...beliefData.belief_distribution),\n        },\n      },\n      {\n        name: \"Variational Free Energy\",\n        latex: \"F = -\\\\log P(o) + D_{KL}[Q(s)||P(s)]\",\n        description:\n          \"Variational free energy as sum of accuracy and complexity\",\n        currentValues: {\n          free_energy: beliefData.free_energy,\n          accuracy_term: beliefData.free_energy * 0.7, // Simplified estimation\n          complexity_term: beliefData.free_energy * 0.3,\n        },\n      },\n      {\n        name: \"Entropy\",\n        latex: \"H[Q(s)] = -\\\\sum_s Q(s) \\\\log Q(s)\",\n        description: \"Shannon entropy measuring belief uncertainty\",\n        currentValues: {\n          entropy: beliefData.uncertainty_measure,\n          max_entropy: Math.log(beliefData.belief_distribution.length),\n          relative_entropy:\n            beliefData.uncertainty_measure /\n            Math.log(beliefData.belief_distribution.length),\n        },\n      },\n      {\n        name: \"KL Divergence\",\n        latex: \"D_{KL}[Q||P] = \\\\sum_s Q(s) \\\\log \\\\frac{Q(s)}{P(s)}\",\n        description: \"Kullback-Leibler divergence between beliefs and prior\",\n        currentValues: {\n          kl_divergence: beliefData.convergence_metric,\n          convergence_rate: Math.exp(-beliefData.convergence_metric),\n          stability_measure: 1.0 / (1.0 + beliefData.convergence_metric),\n        },\n      },\n      {\n        name: \"Expected Free Energy\",\n        latex:\n          \"G(\\\\pi) = \\\\sum_{\\\\tau} Q(s_\\\\tau|\\\\pi) \\\\cdot F(s_\\\\tau, \\\\pi)\",\n        description: \"Expected free energy for policy evaluation\",\n        currentValues: {\n          expected_free_energy: beliefData.free_energy * 1.2, // Estimated\n          epistemic_value: beliefData.uncertainty_measure * 0.5,\n          pragmatic_value: (1.0 - beliefData.uncertainty_measure) * 0.5,\n        },\n      },\n      {\n        name: \"Variational Message Passing\",\n        latex:\n          \"\\\\ln Q(s_\\\\mu) = \\\\langle \\\\ln P(s, o) \\\\rangle_{Q(\\\\mathbf{s}_{\\\\nu \\\\neq \\\\mu})}\",\n        description: \"Variational message passing update rule\",\n        currentValues: {\n          message_precision:\n            beliefData.numerical_precision?.numerical_stability || 0.0,\n          convergence_criterion:\n            beliefData.numerical_precision?.condition_number || 1.0,\n          update_magnitude: Math.abs(beliefData.convergence_metric),\n        },\n      },\n    ],\n    [beliefData],\n  );\n\n  // Render equations with KaTeX\n  useEffect(() => {\n    if (!katex || !showEquations) return;\n\n    const renderEquations = async () => {\n      try {\n        equations.forEach((eq, index) => {\n          const container = mathContainerRefs.current[eq.name];\n          if (container) {\n            katex.render(eq.latex, container, {\n              displayMode: true,\n              throwOnError: false,\n              trust: true,\n              strict: false,\n            });\n          }\n        });\n        setEquationsRendered(true);\n      } catch (error) {\n        console.error(\"Error rendering equations:\", error);\n      }\n    };\n\n    renderEquations();\n  }, [beliefData, showEquations, equations]);\n\n  const formatNumber = (value: number, precision: number = 4): string => {\n    if (Math.abs(value) < 1e-10) return \"0\";\n    if (Math.abs(value) > 1e6) return value.toExponential(2);\n    return value.toFixed(precision);\n  };\n\n  const getEquationColor = (equationName: string): string => {\n    const colorMap: Record<string, string> = {\n      \"Bayesian Update\": \"bg-blue-50 border-blue-200\",\n      \"Variational Free Energy\": \"bg-red-50 border-red-200\",\n      Entropy: \"bg-green-50 border-green-200\",\n      \"KL Divergence\": \"bg-yellow-50 border-yellow-200\",\n      \"Expected Free Energy\": \"bg-purple-50 border-purple-200\",\n      \"Variational Message Passing\": \"bg-indigo-50 border-indigo-200\",\n    };\n    return colorMap[equationName] || \"bg-gray-50 border-gray-200\";\n  };\n\n  return (\n    <div className=\"w-full space-y-4\">\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex justify-between items-center\">\n            Mathematical Foundation - Agent {beliefData.agent_id}\n            <div className=\"flex gap-2\">\n              <Badge variant={realTimeUpdates ? \"default\" : \"secondary\"}>\n                {realTimeUpdates ? \"Live Updates\" : \"Static\"}\n              </Badge>\n              <Badge variant={publicationMode ? \"default\" : \"outline\"}>\n                {publicationMode ? \"Publication Quality\" : \"Development\"}\n              </Badge>\n            </div>\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          {/* Real-time metrics summary */}\n          <div className=\"grid grid-cols-4 gap-4 mb-6 p-4 bg-gray-50 rounded-lg\">\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-blue-600\">\n                {formatNumber(beliefData.free_energy)}\n              </div>\n              <div className=\"text-sm text-gray-600\">Free Energy</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-green-600\">\n                {formatNumber(beliefData.uncertainty_measure)}\n              </div>\n              <div className=\"text-sm text-gray-600\">Entropy</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-yellow-600\">\n                {formatNumber(beliefData.convergence_metric)}\n              </div>\n              <div className=\"text-sm text-gray-600\">KL Divergence</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-purple-600\">\n                {formatNumber(Math.max(...beliefData.belief_distribution))}\n              </div>\n              <div className=\"text-sm text-gray-600\">Max Belief</div>\n            </div>\n          </div>\n\n          {/* Equation tabs */}\n          <div className=\"mb-4\">\n            <div className=\"flex flex-wrap gap-2\">\n              {equations.map((eq) => (\n                <Button\n                  key={eq.name}\n                  variant={selectedEquation === eq.name ? \"default\" : \"outline\"}\n                  size=\"sm\"\n                  onClick={() => setSelectedEquation(eq.name)}\n                >\n                  {eq.name}\n                </Button>\n              ))}\n            </div>\n          </div>\n\n          {/* Selected equation display */}\n          {showEquations && (\n            <div className=\"space-y-4\">\n              {equations\n                .filter((eq) => eq.name === selectedEquation)\n                .map((eq) => (\n                  <Card\n                    key={eq.name}\n                    className={`p-4 ${getEquationColor(eq.name)}`}\n                  >\n                    <div className=\"space-y-4\">\n                      <h3 className=\"text-lg font-semibold\">{eq.name}</h3>\n\n                      {/* Equation rendering */}\n                      <div className=\"flex justify-center py-4\">\n                        <div\n                          ref={(ref) => {\n                            if (ref) mathContainerRefs.current[eq.name] = ref;\n                          }}\n                          className=\"text-center text-lg\"\n                        />\n                      </div>\n\n                      <p className=\"text-sm text-gray-700\">{eq.description}</p>\n\n                      {/* Current numerical values */}\n                      {showNumericalValues && eq.currentValues && (\n                        <div className=\"mt-4\">\n                          <h4 className=\"font-medium mb-2\">Current Values:</h4>\n                          <div className=\"grid grid-cols-3 gap-4 text-sm\">\n                            {Object.entries(eq.currentValues).map(\n                              ([key, value]) => (\n                                <div key={key} className=\"flex justify-between\">\n                                  <span className=\"text-gray-600\">\n                                    {key\n                                      .replace(/_/g, \" \")\n                                      .replace(/\\b\\w/g, (l) => l.toUpperCase())}\n                                    :\n                                  </span>\n                                  <span className=\"font-mono font-semibold\">\n                                    {formatNumber(value)}\n                                  </span>\n                                </div>\n                              ),\n                            )}\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </Card>\n                ))}\n            </div>\n          )}\n\n          {/* Numerical precision monitoring */}\n          <Card className=\"mt-6 p-4 bg-blue-50 border-blue-200\">\n            <h3 className=\"text-lg font-semibold mb-3\">\n              Numerical Precision Monitoring\n            </h3>\n            <div className=\"grid grid-cols-2 gap-4 text-sm\">\n              <div className=\"flex justify-between\">\n                <span>Sum Check (should be ~1.0):</span>\n                <span\n                  className={`font-mono font-semibold ${\n                    Math.abs(beliefData.numerical_precision?.sum_check - 1.0) <\n                    1e-6\n                      ? \"text-green-600\"\n                      : \"text-red-600\"\n                  }`}\n                >\n                  {formatNumber(beliefData.numerical_precision?.sum_check || 0)}\n                </span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Numerical Stability:</span>\n                <span className=\"font-mono font-semibold\">\n                  {formatNumber(\n                    beliefData.numerical_precision?.numerical_stability || 0,\n                  )}\n                </span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Condition Number:</span>\n                <span className=\"font-mono font-semibold\">\n                  {formatNumber(\n                    beliefData.numerical_precision?.condition_number || 0,\n                  )}\n                </span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Value Range:</span>\n                <span className=\"font-mono font-semibold\">\n                  [\n                  {formatNumber(beliefData.numerical_precision?.min_value || 0)}\n                  ,\n                  {formatNumber(beliefData.numerical_precision?.max_value || 0)}\n                  ]\n                </span>\n              </div>\n            </div>\n          </Card>\n\n          {/* Timestamp and data quality */}\n          <div className=\"mt-4 text-xs text-gray-500 text-center\">\n            Last updated: {new Date(beliefData.timestamp).toLocaleString()} |\n            Data quality: {equationsRendered ? \"High\" : \"Loading\"} | Agent:{\" \"}\n            {beliefData.agent_id}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default BeliefStateMathematicalDisplay;\n"],"names":["BeliefStateMathematicalDisplay","katex","window","then","module","default","beliefData","showEquations","showNumericalValues","realTimeUpdates","publicationMode","equationsRendered","setEquationsRendered","useState","selectedEquation","setSelectedEquation","mathContainerRefs","useRef","equations","useMemo","name","latex","description","currentValues","belief_entropy","belief_distribution","reduce","sum","p","Math","log","max_belief","max","min_belief","min","free_energy","accuracy_term","complexity_term","entropy","uncertainty_measure","max_entropy","length","relative_entropy","kl_divergence","convergence_metric","convergence_rate","exp","stability_measure","expected_free_energy","epistemic_value","pragmatic_value","message_precision","numerical_precision","numerical_stability","convergence_criterion","condition_number","update_magnitude","abs","useEffect","renderEquations","forEach","eq","index","container","current","render","displayMode","throwOnError","trust","strict","error","console","formatNumber","value","precision","toExponential","toFixed","getEquationColor","equationName","colorMap","Entropy","div","className","Card","CardHeader","CardTitle","agent_id","Badge","variant","CardContent","map","Button","size","onClick","filter","h3","ref","h4","Object","entries","key","span","replace","l","toUpperCase","sum_check","min_value","max_value","Date","timestamp","toLocaleString"],"mappings":"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"}
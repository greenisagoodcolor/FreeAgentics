28abe340ae875e18798a3ff7bd41b0e2
"use strict";

/* istanbul ignore next */
function cov_22jzyzrytv() {
  var path = "/Users/matthewmoroney/builds/FreeAgentics/web/lib/llm-errors.ts";
  var hash = "0ebd294b34a500c623a517d4902aef77c41f34b7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewmoroney/builds/FreeAgentics/web/lib/llm-errors.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 33,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 27
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 35
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 24
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 28
        }
      },
      "8": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 30
        }
      },
      "9": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 28
        }
      },
      "10": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 27
        }
      },
      "11": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 23
        }
      },
      "12": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 31
        }
      },
      "13": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 25
        }
      },
      "14": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 37
        }
      },
      "15": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 37
        }
      },
      "16": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 37
        }
      },
      "17": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 42
        }
      },
      "18": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 40
        }
      },
      "19": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 34
        }
      },
      "20": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 40
        }
      },
      "21": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 35
        }
      },
      "22": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 40
        }
      },
      "23": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 35
        }
      },
      "24": {
        start: {
          line: 72,
          column: 27
        },
        end: {
          line: 72,
          column: 120
        }
      },
      "25": {
        start: {
          line: 72,
          column: 52
        },
        end: {
          line: 72,
          column: 119
        }
      },
      "26": {
        start: {
          line: 72,
          column: 67
        },
        end: {
          line: 72,
          column: 107
        }
      },
      "27": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 76,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 17
          },
          end: {
            line: 12,
            column: 18
          }
        },
        loc: {
          start: {
            line: 12,
            column: 28
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 25
          },
          end: {
            line: 15,
            column: 26
          }
        },
        loc: {
          start: {
            line: 15,
            column: 36
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 14
          },
          end: {
            line: 18,
            column: 15
          }
        },
        loc: {
          start: {
            line: 18,
            column: 25
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 18
          },
          end: {
            line: 21,
            column: 19
          }
        },
        loc: {
          start: {
            line: 21,
            column: 29
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 24,
            column: 20
          },
          end: {
            line: 24,
            column: 21
          }
        },
        loc: {
          start: {
            line: 24,
            column: 31
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 27,
            column: 18
          },
          end: {
            line: 27,
            column: 19
          }
        },
        loc: {
          start: {
            line: 27,
            column: 29
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 30,
            column: 17
          },
          end: {
            line: 30,
            column: 18
          }
        },
        loc: {
          start: {
            line: 30,
            column: 28
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        loc: {
          start: {
            line: 35,
            column: 30
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 35
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        loc: {
          start: {
            line: 42,
            column: 24
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 42
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        loc: {
          start: {
            line: 48,
            column: 24
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 48
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        loc: {
          start: {
            line: 54,
            column: 24
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 54
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        loc: {
          start: {
            line: 60,
            column: 24
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 60
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        },
        loc: {
          start: {
            line: 66,
            column: 24
          },
          end: {
            line: 69,
            column: 5
          }
        },
        line: 66
      },
      "14": {
        name: "withTimeout",
        decl: {
          start: {
            line: 71,
            column: 15
          },
          end: {
            line: 71,
            column: 26
          }
        },
        loc: {
          start: {
            line: 71,
            column: 87
          },
          end: {
            line: 77,
            column: 1
          }
        },
        line: 71
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 72,
            column: 39
          },
          end: {
            line: 72,
            column: 40
          }
        },
        loc: {
          start: {
            line: 72,
            column: 52
          },
          end: {
            line: 72,
            column: 119
          }
        },
        line: 72
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 72,
            column: 63
          },
          end: {
            line: 72,
            column: 64
          }
        },
        loc: {
          start: {
            line: 72,
            column: 67
          },
          end: {
            line: 72,
            column: 107
          }
        },
        line: 72
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 71,
            column: 47
          },
          end: {
            line: 71,
            column: 85
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 71,
            column: 64
          },
          end: {
            line: 71,
            column: 85
          }
        }],
        line: 71
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matthewmoroney/builds/FreeAgentics/web/lib/llm-errors.ts"],
      sourcesContent: ["export class LLMError extends Error {\n  public code?: string;\n  public provider?: string;\n  public type?: string;\n  public statusCode?: number;\n\n  constructor(message: string, code?: string) {\n    super(message);\n    this.name = \"LLMError\";\n    this.code = code;\n  }\n}\n\nexport class RateLimitError extends LLMError {\n  constructor(message: string) {\n    super(message, \"RATE_LIMIT\");\n    this.name = \"RateLimitError\";\n  }\n}\n\nexport class AuthenticationError extends LLMError {\n  constructor(message: string) {\n    super(message, \"AUTH_ERROR\");\n    this.name = \"AuthenticationError\";\n  }\n}\n\nexport class ApiKeyError extends LLMError {\n  constructor(message: string) {\n    super(message, \"API_KEY_ERROR\");\n    this.name = \"ApiKeyError\";\n  }\n}\n\nexport class TimeoutError extends LLMError {\n  constructor(message: string) {\n    super(message, \"TIMEOUT_ERROR\");\n    this.name = \"TimeoutError\";\n  }\n}\n\nexport class NetworkError extends LLMError {\n  constructor(message: string) {\n    super(message, \"NETWORK_ERROR\");\n    this.name = \"NetworkError\";\n  }\n}\n\nexport async function withTimeout<T>(\n  promise: Promise<T>,\n  timeoutMs: number,\n  timeoutMessage: string = \"Operation timed out\",\n): Promise<T> {\n  const timeoutPromise = new Promise<never>((_, reject) =>\n    setTimeout(() => reject(new TimeoutError(timeoutMessage)), timeoutMs),\n  );\n\n  return Promise.race([promise, timeoutPromise]);\n}\n"],
      names: ["ApiKeyError", "AuthenticationError", "LLMError", "NetworkError", "RateLimitError", "TimeoutError", "withTimeout", "Error", "constructor", "message", "code", "name", "promise", "timeoutMs", "timeoutMessage", "timeoutPromise", "Promise", "_", "reject", "setTimeout", "race"],
      mappings: ";;;;;;;;;;;IA2BaA,WAAW;eAAXA;;IAPAC,mBAAmB;eAAnBA;;IApBAC,QAAQ;eAARA;;IAyCAC,YAAY;eAAZA;;IA5BAC,cAAc;eAAdA;;IAqBAC,YAAY;eAAZA;;IAcSC,WAAW;eAAXA;;;AAhDf,MAAMJ,iBAAiBK;IAM5BC,YAAYC,OAAe,EAAEC,IAAa,CAAE;QAC1C,KAAK,CAACD;QACN,IAAI,CAACE,IAAI,GAAG;QACZ,IAAI,CAACD,IAAI,GAAGA;IACd;AACF;AAEO,MAAMN,uBAAuBF;IAClCM,YAAYC,OAAe,CAAE;QAC3B,KAAK,CAACA,SAAS;QACf,IAAI,CAACE,IAAI,GAAG;IACd;AACF;AAEO,MAAMV,4BAA4BC;IACvCM,YAAYC,OAAe,CAAE;QAC3B,KAAK,CAACA,SAAS;QACf,IAAI,CAACE,IAAI,GAAG;IACd;AACF;AAEO,MAAMX,oBAAoBE;IAC/BM,YAAYC,OAAe,CAAE;QAC3B,KAAK,CAACA,SAAS;QACf,IAAI,CAACE,IAAI,GAAG;IACd;AACF;AAEO,MAAMN,qBAAqBH;IAChCM,YAAYC,OAAe,CAAE;QAC3B,KAAK,CAACA,SAAS;QACf,IAAI,CAACE,IAAI,GAAG;IACd;AACF;AAEO,MAAMR,qBAAqBD;IAChCM,YAAYC,OAAe,CAAE;QAC3B,KAAK,CAACA,SAAS;QACf,IAAI,CAACE,IAAI,GAAG;IACd;AACF;AAEO,eAAeL,YACpBM,OAAmB,EACnBC,SAAiB,EACjBC,iBAAyB,qBAAqB;IAE9C,MAAMC,iBAAiB,IAAIC,QAAe,CAACC,GAAGC,SAC5CC,WAAW,IAAMD,OAAO,IAAIb,aAAaS,kBAAkBD;IAG7D,OAAOG,QAAQI,IAAI,CAAC;QAACR;QAASG;KAAe;AAC/C"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0ebd294b34a500c623a517d4902aef77c41f34b7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_22jzyzrytv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_22jzyzrytv();
cov_22jzyzrytv().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_22jzyzrytv().f[0]++;
  cov_22jzyzrytv().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_22jzyzrytv().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_22jzyzrytv().s[3]++;
_export(exports, {
  ApiKeyError: function () {
    /* istanbul ignore next */
    cov_22jzyzrytv().f[1]++;
    cov_22jzyzrytv().s[4]++;
    return ApiKeyError;
  },
  AuthenticationError: function () {
    /* istanbul ignore next */
    cov_22jzyzrytv().f[2]++;
    cov_22jzyzrytv().s[5]++;
    return AuthenticationError;
  },
  LLMError: function () {
    /* istanbul ignore next */
    cov_22jzyzrytv().f[3]++;
    cov_22jzyzrytv().s[6]++;
    return LLMError;
  },
  NetworkError: function () {
    /* istanbul ignore next */
    cov_22jzyzrytv().f[4]++;
    cov_22jzyzrytv().s[7]++;
    return NetworkError;
  },
  RateLimitError: function () {
    /* istanbul ignore next */
    cov_22jzyzrytv().f[5]++;
    cov_22jzyzrytv().s[8]++;
    return RateLimitError;
  },
  TimeoutError: function () {
    /* istanbul ignore next */
    cov_22jzyzrytv().f[6]++;
    cov_22jzyzrytv().s[9]++;
    return TimeoutError;
  },
  withTimeout: function () {
    /* istanbul ignore next */
    cov_22jzyzrytv().f[7]++;
    cov_22jzyzrytv().s[10]++;
    return withTimeout;
  }
});
class LLMError extends Error {
  constructor(message, code) {
    /* istanbul ignore next */
    cov_22jzyzrytv().f[8]++;
    cov_22jzyzrytv().s[11]++;
    super(message);
    /* istanbul ignore next */
    cov_22jzyzrytv().s[12]++;
    this.name = "LLMError";
    /* istanbul ignore next */
    cov_22jzyzrytv().s[13]++;
    this.code = code;
  }
}
class RateLimitError extends LLMError {
  constructor(message) {
    /* istanbul ignore next */
    cov_22jzyzrytv().f[9]++;
    cov_22jzyzrytv().s[14]++;
    super(message, "RATE_LIMIT");
    /* istanbul ignore next */
    cov_22jzyzrytv().s[15]++;
    this.name = "RateLimitError";
  }
}
class AuthenticationError extends LLMError {
  constructor(message) {
    /* istanbul ignore next */
    cov_22jzyzrytv().f[10]++;
    cov_22jzyzrytv().s[16]++;
    super(message, "AUTH_ERROR");
    /* istanbul ignore next */
    cov_22jzyzrytv().s[17]++;
    this.name = "AuthenticationError";
  }
}
class ApiKeyError extends LLMError {
  constructor(message) {
    /* istanbul ignore next */
    cov_22jzyzrytv().f[11]++;
    cov_22jzyzrytv().s[18]++;
    super(message, "API_KEY_ERROR");
    /* istanbul ignore next */
    cov_22jzyzrytv().s[19]++;
    this.name = "ApiKeyError";
  }
}
class TimeoutError extends LLMError {
  constructor(message) {
    /* istanbul ignore next */
    cov_22jzyzrytv().f[12]++;
    cov_22jzyzrytv().s[20]++;
    super(message, "TIMEOUT_ERROR");
    /* istanbul ignore next */
    cov_22jzyzrytv().s[21]++;
    this.name = "TimeoutError";
  }
}
class NetworkError extends LLMError {
  constructor(message) {
    /* istanbul ignore next */
    cov_22jzyzrytv().f[13]++;
    cov_22jzyzrytv().s[22]++;
    super(message, "NETWORK_ERROR");
    /* istanbul ignore next */
    cov_22jzyzrytv().s[23]++;
    this.name = "NetworkError";
  }
}
async function withTimeout(promise, timeoutMs, timeoutMessage =
/* istanbul ignore next */
(cov_22jzyzrytv().b[0][0]++, "Operation timed out")) {
  /* istanbul ignore next */
  cov_22jzyzrytv().f[14]++;
  const timeoutPromise =
  /* istanbul ignore next */
  (cov_22jzyzrytv().s[24]++, new Promise((_, reject) => {
    /* istanbul ignore next */
    cov_22jzyzrytv().f[15]++;
    cov_22jzyzrytv().s[25]++;
    return setTimeout(() => {
      /* istanbul ignore next */
      cov_22jzyzrytv().f[16]++;
      cov_22jzyzrytv().s[26]++;
      return reject(new TimeoutError(timeoutMessage));
    }, timeoutMs);
  }));
  /* istanbul ignore next */
  cov_22jzyzrytv().s[27]++;
  return Promise.race([promise, timeoutPromise]);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJBcGlLZXlFcnJvciIsImNvdl8yMmp6eXpyeXR2IiwiZiIsInMiLCJBdXRoZW50aWNhdGlvbkVycm9yIiwiTExNRXJyb3IiLCJOZXR3b3JrRXJyb3IiLCJSYXRlTGltaXRFcnJvciIsIlRpbWVvdXRFcnJvciIsIndpdGhUaW1lb3V0IiwiRXJyb3IiLCJjb25zdHJ1Y3RvciIsIm1lc3NhZ2UiLCJjb2RlIiwibmFtZSIsInByb21pc2UiLCJ0aW1lb3V0TXMiLCJ0aW1lb3V0TWVzc2FnZSIsImIiLCJ0aW1lb3V0UHJvbWlzZSIsIlByb21pc2UiLCJfIiwicmVqZWN0Iiwic2V0VGltZW91dCIsInJhY2UiXSwic291cmNlcyI6WyIvVXNlcnMvbWF0dGhld21vcm9uZXkvYnVpbGRzL0ZyZWVBZ2VudGljcy93ZWIvbGliL2xsbS1lcnJvcnMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIExMTUVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICBwdWJsaWMgY29kZT86IHN0cmluZztcbiAgcHVibGljIHByb3ZpZGVyPzogc3RyaW5nO1xuICBwdWJsaWMgdHlwZT86IHN0cmluZztcbiAgcHVibGljIHN0YXR1c0NvZGU/OiBudW1iZXI7XG5cbiAgY29uc3RydWN0b3IobWVzc2FnZTogc3RyaW5nLCBjb2RlPzogc3RyaW5nKSB7XG4gICAgc3VwZXIobWVzc2FnZSk7XG4gICAgdGhpcy5uYW1lID0gXCJMTE1FcnJvclwiO1xuICAgIHRoaXMuY29kZSA9IGNvZGU7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIFJhdGVMaW1pdEVycm9yIGV4dGVuZHMgTExNRXJyb3Ige1xuICBjb25zdHJ1Y3RvcihtZXNzYWdlOiBzdHJpbmcpIHtcbiAgICBzdXBlcihtZXNzYWdlLCBcIlJBVEVfTElNSVRcIik7XG4gICAgdGhpcy5uYW1lID0gXCJSYXRlTGltaXRFcnJvclwiO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBBdXRoZW50aWNhdGlvbkVycm9yIGV4dGVuZHMgTExNRXJyb3Ige1xuICBjb25zdHJ1Y3RvcihtZXNzYWdlOiBzdHJpbmcpIHtcbiAgICBzdXBlcihtZXNzYWdlLCBcIkFVVEhfRVJST1JcIik7XG4gICAgdGhpcy5uYW1lID0gXCJBdXRoZW50aWNhdGlvbkVycm9yXCI7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIEFwaUtleUVycm9yIGV4dGVuZHMgTExNRXJyb3Ige1xuICBjb25zdHJ1Y3RvcihtZXNzYWdlOiBzdHJpbmcpIHtcbiAgICBzdXBlcihtZXNzYWdlLCBcIkFQSV9LRVlfRVJST1JcIik7XG4gICAgdGhpcy5uYW1lID0gXCJBcGlLZXlFcnJvclwiO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBUaW1lb3V0RXJyb3IgZXh0ZW5kcyBMTE1FcnJvciB7XG4gIGNvbnN0cnVjdG9yKG1lc3NhZ2U6IHN0cmluZykge1xuICAgIHN1cGVyKG1lc3NhZ2UsIFwiVElNRU9VVF9FUlJPUlwiKTtcbiAgICB0aGlzLm5hbWUgPSBcIlRpbWVvdXRFcnJvclwiO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBOZXR3b3JrRXJyb3IgZXh0ZW5kcyBMTE1FcnJvciB7XG4gIGNvbnN0cnVjdG9yKG1lc3NhZ2U6IHN0cmluZykge1xuICAgIHN1cGVyKG1lc3NhZ2UsIFwiTkVUV09SS19FUlJPUlwiKTtcbiAgICB0aGlzLm5hbWUgPSBcIk5ldHdvcmtFcnJvclwiO1xuICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB3aXRoVGltZW91dDxUPihcbiAgcHJvbWlzZTogUHJvbWlzZTxUPixcbiAgdGltZW91dE1zOiBudW1iZXIsXG4gIHRpbWVvdXRNZXNzYWdlOiBzdHJpbmcgPSBcIk9wZXJhdGlvbiB0aW1lZCBvdXRcIixcbik6IFByb21pc2U8VD4ge1xuICBjb25zdCB0aW1lb3V0UHJvbWlzZSA9IG5ldyBQcm9taXNlPG5ldmVyPigoXywgcmVqZWN0KSA9PlxuICAgIHNldFRpbWVvdXQoKCkgPT4gcmVqZWN0KG5ldyBUaW1lb3V0RXJyb3IodGltZW91dE1lc3NhZ2UpKSwgdGltZW91dE1zKSxcbiAgKTtcblxuICByZXR1cm4gUHJvbWlzZS5yYWNlKFtwcm9taXNlLCB0aW1lb3V0UHJvbWlzZV0pO1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztFQTJCYUEsV0FBVyxXQUFBQSxDQUFBO0lBQUE7SUFBQUMsY0FBQSxHQUFBQyxDQUFBO0lBQUFELGNBQUEsR0FBQUUsQ0FBQTtXQUFYSCxXQUFBOztFQVBBSSxtQkFBbUIsV0FBQUEsQ0FBQTtJQUFBO0lBQUFILGNBQUEsR0FBQUMsQ0FBQTtJQUFBRCxjQUFBLEdBQUFFLENBQUE7V0FBbkJDLG1CQUFBOztFQXBCQUMsUUFBUSxXQUFBQSxDQUFBO0lBQUE7SUFBQUosY0FBQSxHQUFBQyxDQUFBO0lBQUFELGNBQUEsR0FBQUUsQ0FBQTtXQUFSRSxRQUFBOztFQXlDQUMsWUFBWSxXQUFBQSxDQUFBO0lBQUE7SUFBQUwsY0FBQSxHQUFBQyxDQUFBO0lBQUFELGNBQUEsR0FBQUUsQ0FBQTtXQUFaRyxZQUFBOztFQTVCQUMsY0FBYyxXQUFBQSxDQUFBO0lBQUE7SUFBQU4sY0FBQSxHQUFBQyxDQUFBO0lBQUFELGNBQUEsR0FBQUUsQ0FBQTtXQUFkSSxjQUFBOztFQXFCQUMsWUFBWSxXQUFBQSxDQUFBO0lBQUE7SUFBQVAsY0FBQSxHQUFBQyxDQUFBO0lBQUFELGNBQUEsR0FBQUUsQ0FBQTtXQUFaSyxZQUFBOztFQWNTQyxXQUFXLFdBQUFBLENBQUE7SUFBQTtJQUFBUixjQUFBLEdBQUFDLENBQUE7SUFBQUQsY0FBQSxHQUFBRSxDQUFBO1dBQVhNLFdBQUE7OztBQWhEZixNQUFNSixRQUFBLFNBQWlCSyxLQUFBO0VBTTVCQyxZQUFZQyxPQUFlLEVBQUVDLElBQWEsRUFBRTtJQUFBO0lBQUFaLGNBQUEsR0FBQUMsQ0FBQTtJQUFBRCxjQUFBLEdBQUFFLENBQUE7SUFDMUMsS0FBSyxDQUFDUyxPQUFBO0lBQUE7SUFBQVgsY0FBQSxHQUFBRSxDQUFBO0lBQ04sSUFBSSxDQUFDVyxJQUFJLEdBQUc7SUFBQTtJQUFBYixjQUFBLEdBQUFFLENBQUE7SUFDWixJQUFJLENBQUNVLElBQUksR0FBR0EsSUFBQTtFQUNkO0FBQ0Y7QUFFTyxNQUFNTixjQUFBLFNBQXVCRixRQUFBO0VBQ2xDTSxZQUFZQyxPQUFlLEVBQUU7SUFBQTtJQUFBWCxjQUFBLEdBQUFDLENBQUE7SUFBQUQsY0FBQSxHQUFBRSxDQUFBO0lBQzNCLEtBQUssQ0FBQ1MsT0FBQSxFQUFTO0lBQUE7SUFBQVgsY0FBQSxHQUFBRSxDQUFBO0lBQ2YsSUFBSSxDQUFDVyxJQUFJLEdBQUc7RUFDZDtBQUNGO0FBRU8sTUFBTVYsbUJBQUEsU0FBNEJDLFFBQUE7RUFDdkNNLFlBQVlDLE9BQWUsRUFBRTtJQUFBO0lBQUFYLGNBQUEsR0FBQUMsQ0FBQTtJQUFBRCxjQUFBLEdBQUFFLENBQUE7SUFDM0IsS0FBSyxDQUFDUyxPQUFBLEVBQVM7SUFBQTtJQUFBWCxjQUFBLEdBQUFFLENBQUE7SUFDZixJQUFJLENBQUNXLElBQUksR0FBRztFQUNkO0FBQ0Y7QUFFTyxNQUFNZCxXQUFBLFNBQW9CSyxRQUFBO0VBQy9CTSxZQUFZQyxPQUFlLEVBQUU7SUFBQTtJQUFBWCxjQUFBLEdBQUFDLENBQUE7SUFBQUQsY0FBQSxHQUFBRSxDQUFBO0lBQzNCLEtBQUssQ0FBQ1MsT0FBQSxFQUFTO0lBQUE7SUFBQVgsY0FBQSxHQUFBRSxDQUFBO0lBQ2YsSUFBSSxDQUFDVyxJQUFJLEdBQUc7RUFDZDtBQUNGO0FBRU8sTUFBTU4sWUFBQSxTQUFxQkgsUUFBQTtFQUNoQ00sWUFBWUMsT0FBZSxFQUFFO0lBQUE7SUFBQVgsY0FBQSxHQUFBQyxDQUFBO0lBQUFELGNBQUEsR0FBQUUsQ0FBQTtJQUMzQixLQUFLLENBQUNTLE9BQUEsRUFBUztJQUFBO0lBQUFYLGNBQUEsR0FBQUUsQ0FBQTtJQUNmLElBQUksQ0FBQ1csSUFBSSxHQUFHO0VBQ2Q7QUFDRjtBQUVPLE1BQU1SLFlBQUEsU0FBcUJELFFBQUE7RUFDaENNLFlBQVlDLE9BQWUsRUFBRTtJQUFBO0lBQUFYLGNBQUEsR0FBQUMsQ0FBQTtJQUFBRCxjQUFBLEdBQUFFLENBQUE7SUFDM0IsS0FBSyxDQUFDUyxPQUFBLEVBQVM7SUFBQTtJQUFBWCxjQUFBLEdBQUFFLENBQUE7SUFDZixJQUFJLENBQUNXLElBQUksR0FBRztFQUNkO0FBQ0Y7QUFFTyxlQUFlTCxZQUNwQk0sT0FBbUIsRUFDbkJDLFNBQWlCLEVBQ2pCQyxjQUFBO0FBQUE7QUFBQSxDQUFBaEIsY0FBQSxHQUFBaUIsQ0FBQSxVQUF5QixxQkFBcUI7RUFBQTtFQUFBakIsY0FBQSxHQUFBQyxDQUFBO0VBRTlDLE1BQU1pQixjQUFBO0VBQUE7RUFBQSxDQUFBbEIsY0FBQSxHQUFBRSxDQUFBLFFBQWlCLElBQUlpQixPQUFBLENBQWUsQ0FBQ0MsQ0FBQSxFQUFHQyxNQUFBLEtBQzVDO0lBQUE7SUFBQXJCLGNBQUEsR0FBQUMsQ0FBQTtJQUFBRCxjQUFBLEdBQUFFLENBQUE7SUFBQSxPQUFBb0IsVUFBQSxDQUFXLE1BQU07TUFBQTtNQUFBdEIsY0FBQSxHQUFBQyxDQUFBO01BQUFELGNBQUEsR0FBQUUsQ0FBQTtNQUFBLE9BQUFtQixNQUFBLENBQU8sSUFBSWQsWUFBQSxDQUFhUyxjQUFBO0lBQUEsR0FBa0JELFNBQUE7RUFBQTtFQUFBO0VBQUFmLGNBQUEsR0FBQUUsQ0FBQTtFQUc3RCxPQUFPaUIsT0FBQSxDQUFRSSxJQUFJLENBQUMsQ0FBQ1QsT0FBQSxFQUFTSSxjQUFBLENBQWU7QUFDL0MiLCJpZ25vcmVMaXN0IjpbXX0=
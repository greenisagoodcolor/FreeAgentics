{"version":3,"names":["cov_1makj111sw","actualCoverage","s","useAsyncOperation","asyncFunction","f","data","setData","_react","useState","loading","setLoading","error","setError","execute","useCallback","result","err","Error","b","String","reset","useEffect"],"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/hooks/useAsyncOperation.ts"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\n\ninterface UseAsyncOperationResult<T> {\n  data: T | null;\n  loading: boolean;\n  error: Error | null;\n  reset: () => void;\n  execute: () => void;\n}\n\nexport function useAsyncOperation<T>(\n  asyncFunction: () => Promise<T>,\n): UseAsyncOperationResult<T> {\n  const [data, setData] = useState<T | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<Error | null>(null);\n\n  const execute = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const result = await asyncFunction();\n      setData(result);\n    } catch (err) {\n      setError(err instanceof Error ? err : new Error(String(err)));\n    } finally {\n      setLoading(false);\n    }\n  }, [asyncFunction]);\n\n  const reset = useCallback(() => {\n    setData(null);\n    setError(null);\n    setLoading(false);\n  }, []);\n\n  useEffect(() => {\n    execute();\n  }, [execute]);\n\n  return {\n    data,\n    loading,\n    error,\n    reset,\n    execute,\n  };\n}\n"],"mappings":"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","ignoreList":[]}
{"version":3,"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/lib/api-key-service-server.ts"],"sourcesContent":["// lib/api-key-service-server.ts\n// Server-side API key storage using cookies instead of sessionStorage\n\nimport { cookies } from \"next/headers\";\nimport crypto from \"crypto\";\n\n// Ensure ENCRYPTION_KEY is available\nconst ENCRYPTION_KEY = process.env.ENCRYPTION_KEY;\nif (!ENCRYPTION_KEY) {\n  throw new Error(\"ENCRYPTION_KEY environment variable is not set\");\n}\n\nfunction encrypt(text: string): string {\n  const iv = crypto.randomBytes(16);\n  const cipher = crypto.createCipheriv(\n    \"aes-256-cbc\",\n    Buffer.from(ENCRYPTION_KEY, \"hex\"),\n    iv,\n  );\n  let encrypted = cipher.update(text);\n  encrypted = Buffer.concat([encrypted, cipher.final()]);\n  return iv.toString(\"hex\") + \":\" + encrypted.toString(\"hex\");\n}\n\nfunction decrypt(text: string): string {\n  const parts = text.split(\":\");\n  const iv = Buffer.from(parts.shift()!, \"hex\");\n  const encryptedText = Buffer.from(parts.join(\":\"), \"hex\");\n  const decipher = crypto.createDecipheriv(\n    \"aes-256-cbc\",\n    Buffer.from(ENCRYPTION_KEY, \"hex\"),\n    iv,\n  );\n  let decrypted = decipher.update(encryptedText);\n  decrypted = Buffer.concat([decrypted, decipher.final()]);\n  return decrypted.toString();\n}\n\nexport async function storeApiKey(\n  provider: string,\n  apiKey: string,\n): Promise<string> {\n  try {\n    const sessionId = crypto.randomUUID();\n    const encryptedApiKey = encrypt(apiKey);\n\n    const cookieStore = await cookies();\n    cookieStore.set(`api_key_${provider}_${sessionId}`, encryptedApiKey, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n      sameSite: \"strict\",\n      maxAge: 60 * 60 * 24, // 24 hours\n    });\n\n    console.log(\n      `[API-KEY-SERVICE] API key stored with session ID: ${sessionId}`,\n    );\n    return sessionId;\n  } catch (error) {\n    console.error(\"[API-KEY-SERVICE] Error storing API key:\", error);\n    throw new Error(\"Failed to store API key securely\");\n  }\n}\n\nexport async function retrieveApiKey(\n  provider: string,\n  sessionId: string,\n): Promise<string | null> {\n  try {\n    const cookieStore = await cookies();\n    const encryptedApiKey = cookieStore.get(\n      `api_key_${provider}_${sessionId}`,\n    )?.value;\n\n    if (!encryptedApiKey) {\n      console.log(\n        `[API-KEY-SERVICE] No API key found for provider: ${provider}, session: ${sessionId}`,\n      );\n      return null;\n    }\n\n    const decryptedKey = decrypt(encryptedApiKey);\n    console.log(\n      `[API-KEY-SERVICE] Retrieved API key for provider: ${provider}`,\n    );\n    return decryptedKey;\n  } catch (error) {\n    console.error(\"[API-KEY-SERVICE] Error retrieving API key:\", error);\n    return null;\n  }\n}\n\nexport async function deleteApiKey(\n  provider: string,\n  sessionId: string,\n): Promise<void> {\n  try {\n    const cookieStore = await cookies();\n    cookieStore.delete(`api_key_${provider}_${sessionId}`);\n    console.log(`[API-KEY-SERVICE] Deleted API key for session: ${sessionId}`);\n  } catch (error) {\n    console.error(\"[API-KEY-SERVICE] Error deleting API key:\", error);\n  }\n}\n"],"names":["deleteApiKey","retrieveApiKey","storeApiKey","ENCRYPTION_KEY","process","env","Error","encrypt","text","iv","crypto","randomBytes","cipher","createCipheriv","Buffer","from","encrypted","update","concat","final","toString","decrypt","parts","split","shift","encryptedText","join","decipher","createDecipheriv","decrypted","provider","apiKey","sessionId","randomUUID","encryptedApiKey","cookieStore","cookies","set","httpOnly","secure","NODE_ENV","sameSite","maxAge","console","log","error","get","value","decryptedKey","delete"],"mappings":"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"}
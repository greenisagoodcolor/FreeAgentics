{"version":3,"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/hooks/useAutoScroll.ts"],"sourcesContent":["\"use client\";\n\nimport { useRef, useEffect, useCallback, useState } from \"react\";\nimport { debounce } from \"lodash-es\";\n\nexport interface AutoScrollOptions {\n  threshold?: number; // Distance from bottom to consider \"at bottom\" (default: 50px)\n  smoothScrollDuration?: number; // Duration for smooth scrolling (default: 300ms)\n  enableUserOverride?: boolean; // Allow user scrolling to disable auto-scroll (default: true)\n  overrideTimeout?: number; // Time before re-enabling auto-scroll after user scroll (default: 5000ms)\n  enableKeyboardShortcuts?: boolean; // Enable keyboard shortcuts for scroll control (default: true)\n  onScrollStateChange?: (\n    isAutoScrollEnabled: boolean,\n    isAtBottom: boolean,\n  ) => void;\n  onUserOverride?: () => void;\n  onAutoScrollResume?: () => void;\n}\n\nexport interface AutoScrollState {\n  isAutoScrollEnabled: boolean;\n  isAtBottom: boolean;\n  isScrolling: boolean;\n  userOverrideActive: boolean;\n  lastUserScrollTime: number | null;\n  scrollProgress: number; // 0-1 representing scroll position\n}\n\nexport interface AutoScrollControls {\n  scrollToBottom: (smooth?: boolean) => void;\n  scrollToTop: (smooth?: boolean) => void;\n  scrollToElement: (element: HTMLElement, smooth?: boolean) => void;\n  enableAutoScroll: () => void;\n  disableAutoScroll: () => void;\n  toggleAutoScroll: () => void;\n  jumpToLatest: () => void;\n  state: AutoScrollState;\n}\n\nexport function useAutoScroll(\n  containerRef: React.RefObject<HTMLElement>,\n  dependencies: any[] = [],\n  options: AutoScrollOptions = {},\n): AutoScrollControls {\n  const {\n    threshold = 50,\n    smoothScrollDuration = 300,\n    enableUserOverride = true,\n    overrideTimeout = 5000,\n    enableKeyboardShortcuts = true,\n    onScrollStateChange,\n    onUserOverride,\n    onAutoScrollResume,\n  } = options;\n\n  const [state, setState] = useState<AutoScrollState>({\n    isAutoScrollEnabled: true,\n    isAtBottom: true,\n    isScrolling: false,\n    userOverrideActive: false,\n    lastUserScrollTime: null,\n    scrollProgress: 1,\n  });\n\n  const scrollTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const overrideTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const isUserScrollingRef = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const animationFrameRef = useRef<number | null>(null);\n\n  // Calculate if we're at the bottom\n  const isAtBottom = useCallback(\n    (container: HTMLElement) => {\n      const { scrollTop, scrollHeight, clientHeight } = container;\n      return scrollHeight - scrollTop - clientHeight <= threshold;\n    },\n    [threshold],\n  );\n\n  // Calculate scroll progress (0 = top, 1 = bottom)\n  const getScrollProgress = useCallback((container: HTMLElement) => {\n    const { scrollTop, scrollHeight, clientHeight } = container;\n    const maxScroll = scrollHeight - clientHeight;\n    return maxScroll > 0 ? scrollTop / maxScroll : 1;\n  }, []);\n\n  // Smooth scroll to position\n  const smoothScrollTo = useCallback(\n    (\n      container: HTMLElement,\n      targetPosition: number,\n      duration: number = smoothScrollDuration,\n    ) => {\n      const startPosition = container.scrollTop;\n      const distance = targetPosition - startPosition;\n      const startTime = performance.now();\n\n      setState((prev) => ({ ...prev, isScrolling: true }));\n\n      const animateScroll = (currentTime: number) => {\n        const elapsed = currentTime - startTime;\n        const progress = Math.min(elapsed / duration, 1);\n\n        // Easing function (ease-out)\n        const easeOut = 1 - Math.pow(1 - progress, 3);\n\n        container.scrollTop = startPosition + distance * easeOut;\n\n        if (progress < 1) {\n          animationFrameRef.current = requestAnimationFrame(animateScroll);\n        } else {\n          setState((prev) => ({ ...prev, isScrolling: false }));\n          animationFrameRef.current = null;\n        }\n      };\n\n      animationFrameRef.current = requestAnimationFrame(animateScroll);\n    },\n    [smoothScrollDuration],\n  );\n\n  // Scroll to bottom\n  const scrollToBottom = useCallback(\n    (smooth: boolean = true) => {\n      const container = containerRef.current;\n      if (!container) return;\n\n      const targetPosition = container.scrollHeight - container.clientHeight;\n\n      if (smooth) {\n        smoothScrollTo(container, targetPosition);\n      } else {\n        container.scrollTop = targetPosition;\n      }\n\n      setState((prev) => ({\n        ...prev,\n        isAtBottom: true,\n        scrollProgress: 1,\n        userOverrideActive: false,\n      }));\n    },\n    [containerRef, smoothScrollTo],\n  );\n\n  // Scroll to top\n  const scrollToTop = useCallback(\n    (smooth: boolean = true) => {\n      const container = containerRef.current;\n      if (!container) return;\n\n      if (smooth) {\n        smoothScrollTo(container, 0);\n      } else {\n        container.scrollTop = 0;\n      }\n\n      setState((prev) => ({\n        ...prev,\n        isAtBottom: false,\n        scrollProgress: 0,\n      }));\n    },\n    [containerRef, smoothScrollTo],\n  );\n\n  // Scroll to specific element\n  const scrollToElement = useCallback(\n    (element: HTMLElement, smooth: boolean = true) => {\n      const container = containerRef.current;\n      if (!container) return;\n\n      const elementTop = element.offsetTop;\n      const containerTop = container.scrollTop;\n      const containerHeight = container.clientHeight;\n\n      // Center the element in the viewport\n      const targetPosition = elementTop - containerHeight / 2;\n\n      if (smooth) {\n        smoothScrollTo(container, Math.max(0, targetPosition));\n      } else {\n        container.scrollTop = Math.max(0, targetPosition);\n      }\n    },\n    [containerRef, smoothScrollTo],\n  );\n\n  // Enable auto-scroll\n  const enableAutoScroll = useCallback(() => {\n    setState((prev) => ({\n      ...prev,\n      isAutoScrollEnabled: true,\n      userOverrideActive: false,\n    }));\n\n    // Clear override timeout\n    if (overrideTimeoutRef.current) {\n      clearTimeout(overrideTimeoutRef.current);\n      overrideTimeoutRef.current = null;\n    }\n\n    onAutoScrollResume?.();\n  }, [onAutoScrollResume]);\n\n  // Disable auto-scroll\n  const disableAutoScroll = useCallback(() => {\n    setState((prev) => ({\n      ...prev,\n      isAutoScrollEnabled: false,\n      userOverrideActive: true,\n      lastUserScrollTime: Date.now(),\n    }));\n\n    onUserOverride?.();\n  }, [onUserOverride]);\n\n  // Toggle auto-scroll\n  const toggleAutoScroll = useCallback(() => {\n    setState((prev) => {\n      if (prev.isAutoScrollEnabled) {\n        disableAutoScroll();\n        return prev;\n      } else {\n        enableAutoScroll();\n        return prev;\n      }\n    });\n  }, [enableAutoScroll, disableAutoScroll]);\n\n  // Jump to latest (force scroll to bottom and enable auto-scroll)\n  const jumpToLatest = useCallback(() => {\n    enableAutoScroll();\n    scrollToBottom(true);\n  }, [enableAutoScroll, scrollToBottom]);\n\n  // Handle scroll events\n  const handleScroll = useCallback(\n    debounce(() => {\n      const container = containerRef.current;\n      if (!container || state.isScrolling) return;\n\n      const currentScrollTop = container.scrollTop;\n      const atBottom = isAtBottom(container);\n      const progress = getScrollProgress(container);\n\n      // Detect user scrolling (not programmatic)\n      const isUserInitiated =\n        !state.isScrolling &&\n        Math.abs(currentScrollTop - lastScrollTopRef.current) > 5;\n\n      if (isUserInitiated && enableUserOverride) {\n        isUserScrollingRef.current = true;\n\n        // If user scrolled away from bottom, disable auto-scroll\n        if (!atBottom && state.isAutoScrollEnabled) {\n          setState((prev) => ({\n            ...prev,\n            isAutoScrollEnabled: false,\n            userOverrideActive: true,\n            lastUserScrollTime: Date.now(),\n          }));\n\n          onUserOverride?.();\n\n          // Set timeout to re-enable auto-scroll\n          if (overrideTimeoutRef.current) {\n            clearTimeout(overrideTimeoutRef.current);\n          }\n\n          overrideTimeoutRef.current = setTimeout(() => {\n            setState((prev) => ({\n              ...prev,\n              isAutoScrollEnabled: true,\n              userOverrideActive: false,\n            }));\n            onAutoScrollResume?.();\n          }, overrideTimeout);\n        }\n\n        // If user scrolled back to bottom, re-enable auto-scroll\n        if (atBottom && !state.isAutoScrollEnabled) {\n          enableAutoScroll();\n        }\n      }\n\n      setState((prev) => ({\n        ...prev,\n        isAtBottom: atBottom,\n        scrollProgress: progress,\n      }));\n\n      lastScrollTopRef.current = currentScrollTop;\n\n      // Clear user scrolling flag after a delay\n      setTimeout(() => {\n        isUserScrollingRef.current = false;\n      }, 100);\n    }, 50),\n    [\n      containerRef,\n      isAtBottom,\n      getScrollProgress,\n      enableUserOverride,\n      state.isScrolling,\n      state.isAutoScrollEnabled,\n      overrideTimeout,\n      enableAutoScroll,\n      onUserOverride,\n      onAutoScrollResume,\n    ],\n  );\n\n  // Auto-scroll when dependencies change\n  useEffect(() => {\n    if (\n      state.isAutoScrollEnabled &&\n      state.isAtBottom &&\n      !isUserScrollingRef.current\n    ) {\n      // Small delay to ensure DOM has updated\n      setTimeout(() => {\n        scrollToBottom(true);\n      }, 10);\n    }\n  }, [...dependencies, state.isAutoScrollEnabled]);\n\n  // Set up scroll listener\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    container.addEventListener(\"scroll\", handleScroll, { passive: true });\n\n    return () => {\n      container.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [handleScroll, containerRef]);\n\n  // Keyboard shortcuts\n  useEffect(() => {\n    if (!enableKeyboardShortcuts) return;\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      // Only handle if no input elements are focused\n      if (\n        document.activeElement?.tagName === \"INPUT\" ||\n        document.activeElement?.tagName === \"TEXTAREA\"\n      ) {\n        return;\n      }\n\n      switch (event.key) {\n        case \"End\":\n          if (event.ctrlKey || event.metaKey) {\n            event.preventDefault();\n            jumpToLatest();\n          }\n          break;\n        case \"Home\":\n          if (event.ctrlKey || event.metaKey) {\n            event.preventDefault();\n            scrollToTop(true);\n          }\n          break;\n        case \" \":\n          if (event.shiftKey) {\n            event.preventDefault();\n            toggleAutoScroll();\n          }\n          break;\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [enableKeyboardShortcuts, jumpToLatest, scrollToTop, toggleAutoScroll]);\n\n  // Notify state changes\n  useEffect(() => {\n    onScrollStateChange?.(state.isAutoScrollEnabled, state.isAtBottom);\n  }, [state.isAutoScrollEnabled, state.isAtBottom, onScrollStateChange]);\n\n  // Cleanup\n  useEffect(() => {\n    return () => {\n      if (scrollTimeoutRef.current) {\n        clearTimeout(scrollTimeoutRef.current);\n      }\n      if (overrideTimeoutRef.current) {\n        clearTimeout(overrideTimeoutRef.current);\n      }\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    };\n  }, []);\n\n  return {\n    scrollToBottom,\n    scrollToTop,\n    scrollToElement,\n    enableAutoScroll,\n    disableAutoScroll,\n    toggleAutoScroll,\n    jumpToLatest,\n    state,\n  };\n}\n"],"names":["useAutoScroll","containerRef","dependencies","options","threshold","smoothScrollDuration","enableUserOverride","overrideTimeout","enableKeyboardShortcuts","onScrollStateChange","onUserOverride","onAutoScrollResume","state","setState","useState","isAutoScrollEnabled","isAtBottom","isScrolling","userOverrideActive","lastUserScrollTime","scrollProgress","scrollTimeoutRef","useRef","overrideTimeoutRef","isUserScrollingRef","lastScrollTopRef","animationFrameRef","useCallback","container","scrollTop","scrollHeight","clientHeight","getScrollProgress","maxScroll","smoothScrollTo","targetPosition","duration","startPosition","distance","startTime","performance","now","prev","animateScroll","currentTime","elapsed","progress","Math","min","easeOut","pow","current","requestAnimationFrame","scrollToBottom","smooth","scrollToTop","scrollToElement","element","elementTop","offsetTop","containerTop","containerHeight","max","enableAutoScroll","clearTimeout","disableAutoScroll","Date","toggleAutoScroll","jumpToLatest","handleScroll","debounce","currentScrollTop","atBottom","isUserInitiated","abs","setTimeout","useEffect","addEventListener","passive","removeEventListener","handleKeyDown","event","document","activeElement","tagName","key","ctrlKey","metaKey","preventDefault","shiftKey","cancelAnimationFrame"],"mappings":"AAAA;;;;;+BAuCgBA;;;eAAAA;;;uBArCyC;0BAChC;AAoClB,SAASA,cACdC,YAA0C,EAC1CC,eAAsB,EAAE,EACxBC,UAA6B,CAAC,CAAC;IAE/B,MAAM,EACJC,YAAY,EAAE,EACdC,uBAAuB,GAAG,EAC1BC,qBAAqB,IAAI,EACzBC,kBAAkB,IAAI,EACtBC,0BAA0B,IAAI,EAC9BC,mBAAmB,EACnBC,cAAc,EACdC,kBAAkB,EACnB,GAAGR;IAEJ,MAAM,CAACS,OAAOC,SAAS,GAAGC,IAAAA,eAAQ,EAAkB;QAClDC,qBAAqB;QACrBC,YAAY;QACZC,aAAa;QACbC,oBAAoB;QACpBC,oBAAoB;QACpBC,gBAAgB;IAClB;IAEA,MAAMC,mBAAmBC,IAAAA,aAAM,EAAwB;IACvD,MAAMC,qBAAqBD,IAAAA,aAAM,EAAwB;IACzD,MAAME,qBAAqBF,IAAAA,aAAM,EAAC;IAClC,MAAMG,mBAAmBH,IAAAA,aAAM,EAAC;IAChC,MAAMI,oBAAoBJ,IAAAA,aAAM,EAAgB;IAEhD,mCAAmC;IACnC,MAAMN,aAAaW,IAAAA,kBAAW,EAC5B,CAACC;QACC,MAAM,EAAEC,SAAS,EAAEC,YAAY,EAAEC,YAAY,EAAE,GAAGH;QAClD,OAAOE,eAAeD,YAAYE,gBAAgB3B;IACpD,GACA;QAACA;KAAU;IAGb,kDAAkD;IAClD,MAAM4B,oBAAoBL,IAAAA,kBAAW,EAAC,CAACC;QACrC,MAAM,EAAEC,SAAS,EAAEC,YAAY,EAAEC,YAAY,EAAE,GAAGH;QAClD,MAAMK,YAAYH,eAAeC;QACjC,OAAOE,YAAY,IAAIJ,YAAYI,YAAY;IACjD,GAAG,EAAE;IAEL,4BAA4B;IAC5B,MAAMC,iBAAiBP,IAAAA,kBAAW,EAChC,CACEC,WACAO,gBACAC,WAAmB/B,oBAAoB;QAEvC,MAAMgC,gBAAgBT,UAAUC,SAAS;QACzC,MAAMS,WAAWH,iBAAiBE;QAClC,MAAME,YAAYC,YAAYC,GAAG;QAEjC5B,SAAS,CAAC6B,OAAU,CAAA;gBAAE,GAAGA,IAAI;gBAAEzB,aAAa;YAAK,CAAA;QAEjD,MAAM0B,gBAAgB,CAACC;YACrB,MAAMC,UAAUD,cAAcL;YAC9B,MAAMO,WAAWC,KAAKC,GAAG,CAACH,UAAUT,UAAU;YAE9C,6BAA6B;YAC7B,MAAMa,UAAU,IAAIF,KAAKG,GAAG,CAAC,IAAIJ,UAAU;YAE3ClB,UAAUC,SAAS,GAAGQ,gBAAgBC,WAAWW;YAEjD,IAAIH,WAAW,GAAG;gBAChBpB,kBAAkByB,OAAO,GAAGC,sBAAsBT;YACpD,OAAO;gBACL9B,SAAS,CAAC6B,OAAU,CAAA;wBAAE,GAAGA,IAAI;wBAAEzB,aAAa;oBAAM,CAAA;gBAClDS,kBAAkByB,OAAO,GAAG;YAC9B;QACF;QAEAzB,kBAAkByB,OAAO,GAAGC,sBAAsBT;IACpD,GACA;QAACtC;KAAqB;IAGxB,mBAAmB;IACnB,MAAMgD,iBAAiB1B,IAAAA,kBAAW,EAChC,CAAC2B,SAAkB,IAAI;QACrB,MAAM1B,YAAY3B,aAAakD,OAAO;QACtC,IAAI,CAACvB,WAAW;QAEhB,MAAMO,iBAAiBP,UAAUE,YAAY,GAAGF,UAAUG,YAAY;QAEtE,IAAIuB,QAAQ;YACVpB,eAAeN,WAAWO;QAC5B,OAAO;YACLP,UAAUC,SAAS,GAAGM;QACxB;QAEAtB,SAAS,CAAC6B,OAAU,CAAA;gBAClB,GAAGA,IAAI;gBACP1B,YAAY;gBACZI,gBAAgB;gBAChBF,oBAAoB;YACtB,CAAA;IACF,GACA;QAACjB;QAAciC;KAAe;IAGhC,gBAAgB;IAChB,MAAMqB,cAAc5B,IAAAA,kBAAW,EAC7B,CAAC2B,SAAkB,IAAI;QACrB,MAAM1B,YAAY3B,aAAakD,OAAO;QACtC,IAAI,CAACvB,WAAW;QAEhB,IAAI0B,QAAQ;YACVpB,eAAeN,WAAW;QAC5B,OAAO;YACLA,UAAUC,SAAS,GAAG;QACxB;QAEAhB,SAAS,CAAC6B,OAAU,CAAA;gBAClB,GAAGA,IAAI;gBACP1B,YAAY;gBACZI,gBAAgB;YAClB,CAAA;IACF,GACA;QAACnB;QAAciC;KAAe;IAGhC,6BAA6B;IAC7B,MAAMsB,kBAAkB7B,IAAAA,kBAAW,EACjC,CAAC8B,SAAsBH,SAAkB,IAAI;QAC3C,MAAM1B,YAAY3B,aAAakD,OAAO;QACtC,IAAI,CAACvB,WAAW;QAEhB,MAAM8B,aAAaD,QAAQE,SAAS;QACpC,MAAMC,eAAehC,UAAUC,SAAS;QACxC,MAAMgC,kBAAkBjC,UAAUG,YAAY;QAE9C,qCAAqC;QACrC,MAAMI,iBAAiBuB,aAAaG,kBAAkB;QAEtD,IAAIP,QAAQ;YACVpB,eAAeN,WAAWmB,KAAKe,GAAG,CAAC,GAAG3B;QACxC,OAAO;YACLP,UAAUC,SAAS,GAAGkB,KAAKe,GAAG,CAAC,GAAG3B;QACpC;IACF,GACA;QAAClC;QAAciC;KAAe;IAGhC,qBAAqB;IACrB,MAAM6B,mBAAmBpC,IAAAA,kBAAW,EAAC;QACnCd,SAAS,CAAC6B,OAAU,CAAA;gBAClB,GAAGA,IAAI;gBACP3B,qBAAqB;gBACrBG,oBAAoB;YACtB,CAAA;QAEA,yBAAyB;QACzB,IAAIK,mBAAmB4B,OAAO,EAAE;YAC9Ba,aAAazC,mBAAmB4B,OAAO;YACvC5B,mBAAmB4B,OAAO,GAAG;QAC/B;QAEAxC;IACF,GAAG;QAACA;KAAmB;IAEvB,sBAAsB;IACtB,MAAMsD,oBAAoBtC,IAAAA,kBAAW,EAAC;QACpCd,SAAS,CAAC6B,OAAU,CAAA;gBAClB,GAAGA,IAAI;gBACP3B,qBAAqB;gBACrBG,oBAAoB;gBACpBC,oBAAoB+C,KAAKzB,GAAG;YAC9B,CAAA;QAEA/B;IACF,GAAG;QAACA;KAAe;IAEnB,qBAAqB;IACrB,MAAMyD,mBAAmBxC,IAAAA,kBAAW,EAAC;QACnCd,SAAS,CAAC6B;YACR,IAAIA,KAAK3B,mBAAmB,EAAE;gBAC5BkD;gBACA,OAAOvB;YACT,OAAO;gBACLqB;gBACA,OAAOrB;YACT;QACF;IACF,GAAG;QAACqB;QAAkBE;KAAkB;IAExC,iEAAiE;IACjE,MAAMG,eAAezC,IAAAA,kBAAW,EAAC;QAC/BoC;QACAV,eAAe;IACjB,GAAG;QAACU;QAAkBV;KAAe;IAErC,uBAAuB;IACvB,MAAMgB,eAAe1C,IAAAA,kBAAW,EAC9B2C,IAAAA,kBAAQ,EAAC;QACP,MAAM1C,YAAY3B,aAAakD,OAAO;QACtC,IAAI,CAACvB,aAAahB,MAAMK,WAAW,EAAE;QAErC,MAAMsD,mBAAmB3C,UAAUC,SAAS;QAC5C,MAAM2C,WAAWxD,WAAWY;QAC5B,MAAMkB,WAAWd,kBAAkBJ;QAEnC,2CAA2C;QAC3C,MAAM6C,kBACJ,CAAC7D,MAAMK,WAAW,IAClB8B,KAAK2B,GAAG,CAACH,mBAAmB9C,iBAAiB0B,OAAO,IAAI;QAE1D,IAAIsB,mBAAmBnE,oBAAoB;YACzCkB,mBAAmB2B,OAAO,GAAG;YAE7B,yDAAyD;YACzD,IAAI,CAACqB,YAAY5D,MAAMG,mBAAmB,EAAE;gBAC1CF,SAAS,CAAC6B,OAAU,CAAA;wBAClB,GAAGA,IAAI;wBACP3B,qBAAqB;wBACrBG,oBAAoB;wBACpBC,oBAAoB+C,KAAKzB,GAAG;oBAC9B,CAAA;gBAEA/B;gBAEA,uCAAuC;gBACvC,IAAIa,mBAAmB4B,OAAO,EAAE;oBAC9Ba,aAAazC,mBAAmB4B,OAAO;gBACzC;gBAEA5B,mBAAmB4B,OAAO,GAAGwB,WAAW;oBACtC9D,SAAS,CAAC6B,OAAU,CAAA;4BAClB,GAAGA,IAAI;4BACP3B,qBAAqB;4BACrBG,oBAAoB;wBACtB,CAAA;oBACAP;gBACF,GAAGJ;YACL;YAEA,yDAAyD;YACzD,IAAIiE,YAAY,CAAC5D,MAAMG,mBAAmB,EAAE;gBAC1CgD;YACF;QACF;QAEAlD,SAAS,CAAC6B,OAAU,CAAA;gBAClB,GAAGA,IAAI;gBACP1B,YAAYwD;gBACZpD,gBAAgB0B;YAClB,CAAA;QAEArB,iBAAiB0B,OAAO,GAAGoB;QAE3B,0CAA0C;QAC1CI,WAAW;YACTnD,mBAAmB2B,OAAO,GAAG;QAC/B,GAAG;IACL,GAAG,KACH;QACElD;QACAe;QACAgB;QACA1B;QACAM,MAAMK,WAAW;QACjBL,MAAMG,mBAAmB;QACzBR;QACAwD;QACArD;QACAC;KACD;IAGH,uCAAuC;IACvCiE,IAAAA,gBAAS,EAAC;QACR,IACEhE,MAAMG,mBAAmB,IACzBH,MAAMI,UAAU,IAChB,CAACQ,mBAAmB2B,OAAO,EAC3B;YACA,wCAAwC;YACxCwB,WAAW;gBACTtB,eAAe;YACjB,GAAG;QACL;IACF,GAAG;WAAInD;QAAcU,MAAMG,mBAAmB;KAAC;IAE/C,yBAAyB;IACzB6D,IAAAA,gBAAS,EAAC;QACR,MAAMhD,YAAY3B,aAAakD,OAAO;QACtC,IAAI,CAACvB,WAAW;QAEhBA,UAAUiD,gBAAgB,CAAC,UAAUR,cAAc;YAAES,SAAS;QAAK;QAEnE,OAAO;YACLlD,UAAUmD,mBAAmB,CAAC,UAAUV;QAC1C;IACF,GAAG;QAACA;QAAcpE;KAAa;IAE/B,qBAAqB;IACrB2E,IAAAA,gBAAS,EAAC;QACR,IAAI,CAACpE,yBAAyB;QAE9B,MAAMwE,gBAAgB,CAACC;YACrB,+CAA+C;YAC/C,IACEC,SAASC,aAAa,EAAEC,YAAY,WACpCF,SAASC,aAAa,EAAEC,YAAY,YACpC;gBACA;YACF;YAEA,OAAQH,MAAMI,GAAG;gBACf,KAAK;oBACH,IAAIJ,MAAMK,OAAO,IAAIL,MAAMM,OAAO,EAAE;wBAClCN,MAAMO,cAAc;wBACpBpB;oBACF;oBACA;gBACF,KAAK;oBACH,IAAIa,MAAMK,OAAO,IAAIL,MAAMM,OAAO,EAAE;wBAClCN,MAAMO,cAAc;wBACpBjC,YAAY;oBACd;oBACA;gBACF,KAAK;oBACH,IAAI0B,MAAMQ,QAAQ,EAAE;wBAClBR,MAAMO,cAAc;wBACpBrB;oBACF;oBACA;YACJ;QACF;QAEAe,SAASL,gBAAgB,CAAC,WAAWG;QAErC,OAAO;YACLE,SAASH,mBAAmB,CAAC,WAAWC;QAC1C;IACF,GAAG;QAACxE;QAAyB4D;QAAcb;QAAaY;KAAiB;IAEzE,uBAAuB;IACvBS,IAAAA,gBAAS,EAAC;QACRnE,sBAAsBG,MAAMG,mBAAmB,EAAEH,MAAMI,UAAU;IACnE,GAAG;QAACJ,MAAMG,mBAAmB;QAAEH,MAAMI,UAAU;QAAEP;KAAoB;IAErE,UAAU;IACVmE,IAAAA,gBAAS,EAAC;QACR,OAAO;YACL,IAAIvD,iBAAiB8B,OAAO,EAAE;gBAC5Ba,aAAa3C,iBAAiB8B,OAAO;YACvC;YACA,IAAI5B,mBAAmB4B,OAAO,EAAE;gBAC9Ba,aAAazC,mBAAmB4B,OAAO;YACzC;YACA,IAAIzB,kBAAkByB,OAAO,EAAE;gBAC7BuC,qBAAqBhE,kBAAkByB,OAAO;YAChD;QACF;IACF,GAAG,EAAE;IAEL,OAAO;QACLE;QACAE;QACAC;QACAO;QACAE;QACAE;QACAC;QACAxD;IACF;AACF"}
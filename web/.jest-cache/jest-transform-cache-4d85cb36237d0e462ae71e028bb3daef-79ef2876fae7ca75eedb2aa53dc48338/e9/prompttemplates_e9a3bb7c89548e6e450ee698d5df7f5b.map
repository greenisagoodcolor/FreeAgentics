{"version":3,"names":["agentResponseTemplate","cov_19bpzc8ahe","f","s","assemblePrompt","beliefExtractionTemplate","formatConversationHistory","formatKnowledgeForPrompt","formatParticipantsList","relationshipAnalysisTemplate","replaceVariables","text","variables","Object","entries","reduce","result","key","value","replace","RegExp","messages","agents","maxMessages","b","recentMessages","slice","map","msg","sender","senderId","get","name","content","join","includeMetadata","length","entry","formatted","title","tags","timestamp","toISOString","currentAgentId","Array","from","values","agent","isCurrentAgent","id","biography","split","template","conversationHistory","relevantKnowledge","systemPrompt","historyText","maxHistoryMessages","knowledgeText","userPrompt","userPromptPrefix","userPromptSuffix"],"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/lib/prompt-templates.ts"],"sourcesContent":["import type { Agent, Message, KnowledgeEntry } from \"@/lib/types\";\n\nexport interface PromptTemplate {\n  systemPrompt: string;\n  userPromptPrefix?: string;\n  userPromptSuffix?: string;\n  maxHistoryMessages?: number;\n}\n\n// Helper function to replace template variables\nfunction replaceVariables(\n  text: string,\n  variables: Record<string, string>,\n): string {\n  return Object.entries(variables).reduce(\n    (result, [key, value]) =>\n      result.replace(new RegExp(`{{${key}}}`, \"g\"), value),\n    text,\n  );\n}\n\n// Format conversation history for inclusion in prompts\nexport function formatConversationHistory(\n  messages: Message[],\n  agents: Map<string, Agent>,\n  maxMessages = 10,\n): string {\n  // Take the most recent messages up to maxMessages\n  const recentMessages = messages.slice(-maxMessages);\n\n  return recentMessages\n    .map((msg) => {\n      const sender =\n        msg.senderId === \"user\"\n          ? \"User\"\n          : agents.get(msg.senderId)?.name || \"Unknown Agent\";\n\n      return `${sender}: ${msg.content}`;\n    })\n    .join(\"\\n\\n\");\n}\n\n// Format knowledge entries for inclusion in prompts\nexport function formatKnowledgeForPrompt(\n  entries: KnowledgeEntry[],\n  includeMetadata = false,\n): string {\n  if (!entries.length) return \"No relevant knowledge available.\";\n\n  return entries\n    .map((entry) => {\n      let formatted = `KNOWLEDGE ENTRY: ${entry.title}\\n${entry.content}`;\n\n      if (includeMetadata) {\n        formatted += `\\nTags: ${entry.tags.join(\", \")}`;\n        formatted += `\\nTimestamp: ${entry.timestamp.toISOString()}`;\n      }\n\n      return formatted;\n    })\n    .join(\"\\n\\n\");\n}\n\n// Add a function to format the participants list for the prompt\n\n// Format conversation participants for inclusion in prompts\nexport function formatParticipantsList(\n  agents: Map<string, Agent>,\n  currentAgentId: string,\n): string {\n  return Array.from(agents.values())\n    .map((agent) => {\n      const isCurrentAgent = agent.id === currentAgentId;\n      return `- ${agent.name}${isCurrentAgent ? \" (you)\" : \"\"}: ${agent.biography.split(\".\")[0]}.`;\n    })\n    .join(\"\\n\");\n}\n\n// Assemble a complete prompt from template and variables\nexport function assemblePrompt(\n  template: PromptTemplate,\n  variables: Record<string, string>,\n  conversationHistory: Message[],\n  agents: Map<string, Agent>,\n  relevantKnowledge?: KnowledgeEntry[],\n): { systemPrompt: string; userPrompt: string } {\n  // Replace variables in the system prompt\n  const systemPrompt = replaceVariables(template.systemPrompt, variables);\n\n  // Format conversation history\n  const historyText = formatConversationHistory(\n    conversationHistory,\n    agents,\n    template.maxHistoryMessages,\n  );\n\n  // Format knowledge if provided\n  const knowledgeText = relevantKnowledge\n    ? formatKnowledgeForPrompt(relevantKnowledge)\n    : \"\";\n\n  // Assemble user prompt with optional prefix and suffix\n  let userPrompt = \"\";\n\n  if (template.userPromptPrefix) {\n    userPrompt +=\n      replaceVariables(template.userPromptPrefix, variables) + \"\\n\\n\";\n  }\n\n  if (knowledgeText) {\n    userPrompt += \"RELEVANT KNOWLEDGE:\\n\" + knowledgeText + \"\\n\\n\";\n  }\n\n  userPrompt += \"CONVERSATION HISTORY:\\n\" + historyText;\n\n  if (template.userPromptSuffix) {\n    userPrompt +=\n      \"\\n\\n\" + replaceVariables(template.userPromptSuffix, variables);\n  }\n\n  return { systemPrompt, userPrompt };\n}\n\n// Define standard templates for different purposes\n\n// Template for agent responses in conversation\nexport const agentResponseTemplate: PromptTemplate = {\n  systemPrompt: `You are {{agentName}}, with the following biography: {{agentBiography}}\n\nYou are participating in a multi-agent conversation with the following participants:\n{{participantsList}}\n\nYour responses should be consistent with your character's knowledge, personality, and background.\nYou should respond naturally as if you are having a conversation with multiple participants.\n\nIMPORTANT: Always start your response with \"{{agentName}}:\" followed by your message.\n\nWhen a message is clearly directed at another agent (e.g., addressed by name), you should:\n1. Only respond if you have something valuable to add\n2. Acknowledge that the message was primarily for another agent\n3. Keep your response brief and relevant\n\nWhen a message is directed at you specifically, provide a complete and helpful response.\nWhen a message is directed at everyone or no one specific, respond naturally.\n\nYou have access to your own knowledge base which will be provided in the prompt if relevant.\nOnly reference knowledge that is explicitly provided to you.`,\n\n  userPromptSuffix: `Based on the conversation history and your knowledge, provide a response as {{agentName}}.\nYour response should be a single message in a conversational tone.\nRemember to start your response with \"{{agentName}}:\" followed by your message.\nIf the message was clearly directed at another agent and you don't have anything valuable to add, respond with \"SKIP_RESPONSE\" and I will not include your message.`,\n\n  maxHistoryMessages: 10,\n};\n\n// Template for extracting beliefs from conversations\nexport const beliefExtractionTemplate: PromptTemplate = {\n  systemPrompt: `You are an AI assistant that analyzes conversations and extracts potential new knowledge or beliefs.\nYour task is to identify information, facts, or beliefs that should be added to an agent's knowledge base.\nFocus on extracting factual information, preferences, opinions, and relationships mentioned in the conversation.\n\nIMPORTANT: Format your response using Obsidian-style markdown. Use [[double brackets]] around important concepts, entities, and categories that should be tagged.`,\n\n  userPromptPrefix: `The following is a conversation involving {{agentName}}.\nExtract potential new knowledge or beliefs that {{agentName}} should remember from this conversation.\nPay special attention to: {{extractionPriorities}}`,\n\n  userPromptSuffix: `List the extracted beliefs in bullet points. Each belief should be a concise statement of fact or opinion.\nFor each belief:\n1. Use [[double brackets]] around key concepts that should be tagged\n2. Indicate the confidence level (High/Medium/Low) based on how explicitly it was stated\n3. Format the belief as a complete, well-structured markdown note\n\nExample format:\n- {{agentName}} believes that [[quantum computing]] will revolutionize [[cryptography]] within the next decade. (High)\n- {{agentName}} seems to prefer [[coffee]] over [[tea]] based on their ordering habits. (Medium)`,\n\n  maxHistoryMessages: 20,\n};\n\n// Template for relationship analysis\nexport const relationshipAnalysisTemplate: PromptTemplate = {\n  systemPrompt: `You are an AI assistant that analyzes conversations to determine the relationship dynamics between participants.\nYour task is to assess how {{agentName}} relates to other participants in the conversation.`,\n\n  userPromptPrefix: `The following is a conversation involving {{agentName}} and other participants.\nAnalyze the conversation to determine {{agentName}}'s relationship with each other participant.`,\n\n  userPromptSuffix: `For each participant that {{agentName}} interacted with, provide:\n1. A sentiment score from -5 (very negative) to +5 (very positive)\n2. A brief description of the relationship dynamic\n3. Key moments in the conversation that support your analysis`,\n\n  maxHistoryMessages: 15,\n};\n"],"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","ignoreList":[]}
e150d53b46367e7d2530aaf2a31e1bff
// Agent API Types and Interfaces
"use strict";

/* istanbul ignore next */
function cov_1qslm3j53m() {
  var path = "/Users/matthewmoroney/builds/FreeAgentics/web/lib/types/agent-api.ts";
  var hash = "607eeb2124bee6cbacb8455c1e30578c7f29c0f7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewmoroney/builds/FreeAgentics/web/lib/types/agent-api.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0
    },
    f: {},
    b: {},
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matthewmoroney/builds/FreeAgentics/web/lib/types/agent-api.ts"],
      sourcesContent: ["// Agent API Types and Interfaces\n\nexport interface AgentPersonality {\n  openness: number; // 0-1\n  conscientiousness: number; // 0-1\n  extraversion: number; // 0-1\n  agreeableness: number; // 0-1\n  neuroticism: number; // 0-1\n}\n\nexport type AgentCapability =\n  | \"movement\"\n  | \"perception\"\n  | \"communication\"\n  | \"planning\"\n  | \"learning\"\n  | \"memory\"\n  | \"resource_management\"\n  | \"social_interaction\";\n\nexport type AgentStatus =\n  | \"idle\"\n  | \"moving\"\n  | \"interacting\"\n  | \"planning\"\n  | \"executing\"\n  | \"learning\"\n  | \"error\"\n  | \"offline\";\n\nexport interface Position {\n  x: number;\n  y: number;\n  z?: number;\n}\n\nexport interface AgentResources {\n  energy: number; // 0-100\n  health: number; // 0-100\n  memory_used: number;\n  memory_capacity: number;\n}\n\nexport interface AgentBelief {\n  id: string;\n  content: string;\n  confidence: number; // 0-1\n}\n\nexport interface AgentGoal {\n  id: string;\n  description: string;\n  priority: number; // 0-1\n  deadline: string | null;\n}\n\nexport interface AgentRelationship {\n  agent_id: string;\n  trust_level: number; // 0-1\n  last_interaction: string;\n}\n\n// Base Agent interface\nexport interface Agent {\n  id: string;\n  name: string;\n  status: AgentStatus;\n  personality: AgentPersonality;\n  capabilities: AgentCapability[];\n  position: Position;\n  resources: AgentResources;\n  tags: string[];\n  metadata: Record<string, any>;\n  created_at: string;\n  updated_at: string;\n}\n\n// Extended Agent interface with additional details\nexport interface AgentDetailed extends Agent {\n  beliefs: AgentBelief[];\n  goals: AgentGoal[];\n  relationships: AgentRelationship[];\n}\n\n// API Request/Response Types\n\nexport interface CreateAgentRequest {\n  name: string;\n  personality: AgentPersonality;\n  capabilities?: AgentCapability[];\n  initialPosition?: Position;\n  tags?: string[];\n  metadata?: Record<string, any>;\n}\n\nexport interface UpdateAgentRequest {\n  name?: string;\n  status?: AgentStatus;\n  position?: Position;\n  resources?: Partial<AgentResources>;\n  tags?: string[];\n  metadata?: Record<string, any>;\n}\n\nexport interface ListAgentsQuery {\n  status?: AgentStatus;\n  capability?: string;\n  tag?: string;\n  limit?: number;\n  offset?: number;\n  sortBy?: \"created_at\" | \"updated_at\" | \"name\" | \"status\";\n  sortOrder?: \"asc\" | \"desc\";\n}\n\nexport interface ListAgentsResponse {\n  agents: Agent[];\n  pagination: {\n    total: number;\n    limit: number;\n    offset: number;\n    hasMore: boolean;\n  };\n}\n\n// State Management Types\n\nexport interface StateTransition {\n  timestamp: string;\n  from_state: AgentStatus;\n  to_state: AgentStatus;\n  reason: string;\n  metadata?: Record<string, any>;\n}\n\nexport interface UpdateStateRequest {\n  status: AgentStatus;\n  force?: boolean;\n}\n\nexport interface StateHistoryResponse {\n  agent_id: string;\n  current_state: AgentStatus;\n  state_history: StateTransition[];\n  pagination: {\n    total: number;\n    limit: number;\n    offset: number;\n    hasMore: boolean;\n  };\n}\n\n// Command Execution Types\n\nexport type CommandType =\n  | \"move\"\n  | \"interact\"\n  | \"observe\"\n  | \"plan\"\n  | \"learn\"\n  | \"rest\";\n\nexport interface Command {\n  id: string;\n  agent_id: string;\n  command: CommandType;\n  parameters: Record<string, any>;\n  status: \"queued\" | \"executing\" | \"completed\" | \"failed\";\n  issued_at: string;\n  started_at: string | null;\n  completed_at: string | null;\n  result: any | null;\n}\n\nexport interface ExecuteCommandRequest {\n  command: CommandType;\n  parameters: Record<string, any>;\n  async?: boolean;\n}\n\nexport interface ExecuteCommandResponse {\n  command: Command;\n  async: boolean;\n  status_url: string;\n}\n\n// Memory Types\n\nexport type MemoryType =\n  | \"event\"\n  | \"interaction\"\n  | \"location\"\n  | \"pattern\"\n  | \"general\";\n\nexport interface Memory {\n  id: string;\n  type: MemoryType;\n  content: string;\n  importance: number; // 0-1\n  timestamp: string;\n  access_count: number;\n  last_accessed: string;\n  tags: string[];\n  metadata: Record<string, any>;\n}\n\nexport interface AddMemoryRequest {\n  type: MemoryType;\n  content: string;\n  importance?: number;\n  tags?: string[];\n  metadata?: Record<string, any>;\n}\n\nexport interface QueryMemoryRequest {\n  type?: MemoryType;\n  query?: string;\n  tags?: string[];\n  min_importance?: number;\n  limit?: number;\n  offset?: number;\n}\n\nexport interface MemoryResponse {\n  agent_id: string;\n  memories: Memory[];\n  memory_stats: {\n    total_memories: number;\n    total_capacity: number;\n    used_capacity: number;\n    consolidation_pending: boolean;\n  };\n  pagination: {\n    total: number;\n    limit: number;\n    offset: number;\n    hasMore: boolean;\n  };\n}\n\n// Export Types\n\nexport interface ExportAgentRequest {\n  target: string;\n}\n\nexport interface AgentExportPackage {\n  manifest: {\n    package_id: string;\n    agent_id: string;\n    created_at: string;\n    target: {\n      name: string;\n      platform: string;\n      cpu_arch: string;\n      ram_gb: number;\n    };\n    contents: {\n      model: {\n        path: string;\n        size_mb: number;\n        checksum: string;\n      };\n      knowledge: {\n        path: string;\n        size_mb: number;\n        checksum: string;\n      };\n      config: {\n        path: string;\n        checksum: string;\n      };\n      scripts: {\n        path: string;\n        checksum: string;\n      };\n    };\n    metrics: {\n      total_size_mb: number;\n      compression_ratio: number;\n    };\n  };\n  config: any;\n  deployment_scripts: string[];\n}\n\n// WebSocket Types\n\nexport interface WebSocketMessage {\n  action: \"subscribe\" | \"unsubscribe\";\n  agent_ids: string[];\n}\n\nexport interface WebSocketEvent {\n  type: \"state_change\" | \"resource_update\" | \"command_update\" | \"memory_update\";\n  agent_id: string;\n  data: any;\n  timestamp: string;\n}\n\n// Error Response\nexport interface ErrorResponse {\n  error: string;\n  details?: any;\n}\n"],
      names: [],
      mappings: "AAAA,iCAAiC"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "607eeb2124bee6cbacb8455c1e30578c7f29c0f7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1qslm3j53m = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1qslm3j53m();
cov_1qslm3j53m().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
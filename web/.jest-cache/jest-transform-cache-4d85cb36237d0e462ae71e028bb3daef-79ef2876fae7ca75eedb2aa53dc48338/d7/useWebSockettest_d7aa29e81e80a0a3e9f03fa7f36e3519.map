{"version":3,"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/__tests__/hooks/useWebSocket.test.tsx"],"sourcesContent":["import React from \"react\";\nimport { renderHook, act } from \"@testing-library/react\";\nimport { useWebSocket } from \"@/hooks/useWebSocket\";\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\n\n// Mock Redux store for testing\nconst mockStore = configureStore({\n  reducer: {\n    connection: (\n      state = {\n        status: {\n          websocket: \"disconnected\",\n          latency: null,\n          reconnectAttempts: 0,\n        },\n        connectionId: null,\n        errors: [],\n      },\n    ) => state,\n  },\n});\n\n// Mock socket service\njest.mock(\"@/services/socketService\", () => ({\n  socketService: {\n    connect: jest.fn(),\n    disconnect: jest.fn(),\n    send: jest.fn(() => true),\n    sendMessage: jest.fn(),\n    subscribeToAgent: jest.fn(),\n    unsubscribeFromAgent: jest.fn(),\n    subscribeToConversation: jest.fn(),\n    unsubscribeFromConversation: jest.fn(),\n    setTyping: jest.fn(),\n    getConnectionStats: jest.fn(),\n  },\n}));\n\nconst wrapper = ({ children }: { children: React.ReactNode }) => (\n  <Provider store={mockStore}>{children}</Provider>\n);\n\ndescribe(\"useWebSocket Hook\", () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe(\"Connection Management\", () => {\n    it(\"returns connection state from Redux\", () => {\n      const { result } = renderHook(() => useWebSocket(), { wrapper });\n\n      expect(result.current.isConnected).toBe(false);\n      expect(result.current.isConnecting).toBe(false);\n      expect(result.current.connectionId).toBe(null);\n      expect(result.current.latency).toBe(null);\n      expect(result.current.reconnectAttempts).toBe(0);\n      expect(result.current.error).toBe(null);\n    });\n\n    it(\"provides connection methods\", () => {\n      const { result } = renderHook(() => useWebSocket(), { wrapper });\n\n      expect(typeof result.current.connect).toBe(\"function\");\n      expect(typeof result.current.disconnect).toBe(\"function\");\n    });\n\n    it(\"handles options parameter\", () => {\n      const options = { autoConnect: false };\n      const { result } = renderHook(() => useWebSocket(options), { wrapper });\n\n      expect(result.current.isConnected).toBe(false);\n    });\n  });\n\n  describe(\"Message Handling\", () => {\n    it(\"provides send methods\", () => {\n      const { result } = renderHook(() => useWebSocket(), { wrapper });\n\n      expect(typeof result.current.send).toBe(\"function\");\n      expect(typeof result.current.sendMessage).toBe(\"function\");\n    });\n\n    it(\"sendMessage requires 3 parameters\", () => {\n      const { result } = renderHook(() => useWebSocket(), { wrapper });\n\n      act(() => {\n        result.current.sendMessage(\"conv1\", \"hello\", \"agent1\");\n      });\n\n      expect(\n        require(\"@/services/socketService\").socketService.sendMessage,\n      ).toHaveBeenCalledWith(\"conv1\", \"hello\", \"agent1\");\n    });\n  });\n\n  describe(\"Subscription Methods\", () => {\n    it(\"provides subscription methods\", () => {\n      const { result } = renderHook(() => useWebSocket(), { wrapper });\n\n      expect(typeof result.current.subscribeToAgent).toBe(\"function\");\n      expect(typeof result.current.unsubscribeFromAgent).toBe(\"function\");\n      expect(typeof result.current.subscribeToConversation).toBe(\"function\");\n      expect(typeof result.current.unsubscribeFromConversation).toBe(\n        \"function\",\n      );\n    });\n\n    it(\"calls socket service methods correctly\", () => {\n      const { result } = renderHook(() => useWebSocket(), { wrapper });\n      const { socketService } = require(\"@/services/socketService\");\n\n      act(() => {\n        result.current.subscribeToAgent(\"agent1\");\n        result.current.unsubscribeFromAgent(\"agent1\");\n        result.current.subscribeToConversation(\"conv1\");\n        result.current.unsubscribeFromConversation(\"conv1\");\n      });\n\n      expect(socketService.subscribeToAgent).toHaveBeenCalledWith(\"agent1\");\n      expect(socketService.unsubscribeFromAgent).toHaveBeenCalledWith(\"agent1\");\n      expect(socketService.subscribeToConversation).toHaveBeenCalledWith(\n        \"conv1\",\n      );\n      expect(socketService.unsubscribeFromConversation).toHaveBeenCalledWith(\n        \"conv1\",\n      );\n    });\n  });\n\n  describe(\"Interaction Methods\", () => {\n    it(\"provides interaction methods\", () => {\n      const { result } = renderHook(() => useWebSocket(), { wrapper });\n\n      expect(typeof result.current.setTyping).toBe(\"function\");\n      expect(typeof result.current.getConnectionStats).toBe(\"function\");\n    });\n\n    it(\"setTyping calls socket service correctly\", () => {\n      const { result } = renderHook(() => useWebSocket(), { wrapper });\n      const { socketService } = require(\"@/services/socketService\");\n\n      act(() => {\n        result.current.setTyping(\"conv1\", \"agent1\", true);\n      });\n\n      expect(socketService.setTyping).toHaveBeenCalledWith(\n        \"conv1\",\n        \"agent1\",\n        true,\n      );\n    });\n  });\n\n  describe(\"Auto Connect\", () => {\n    it(\"connects automatically by default\", () => {\n      const { socketService } = require(\"@/services/socketService\");\n      renderHook(() => useWebSocket(), { wrapper });\n\n      expect(socketService.connect).toHaveBeenCalled();\n    });\n\n    it(\"does not connect when autoConnect is false\", () => {\n      const { socketService } = require(\"@/services/socketService\");\n      jest.clearAllMocks();\n\n      renderHook(() => useWebSocket({ autoConnect: false }), { wrapper });\n\n      expect(socketService.connect).not.toHaveBeenCalled();\n    });\n  });\n});\n"],"names":["jest","mock","socketService","connect","fn","disconnect","send","sendMessage","subscribeToAgent","unsubscribeFromAgent","subscribeToConversation","unsubscribeFromConversation","setTyping","getConnectionStats","mockStore","configureStore","reducer","connection","state","status","websocket","latency","reconnectAttempts","connectionId","errors","wrapper","children","Provider","store","describe","beforeEach","clearAllMocks","it","result","renderHook","useWebSocket","expect","current","isConnected","toBe","isConnecting","error","options","autoConnect","act","require","toHaveBeenCalledWith","toHaveBeenCalled","not"],"mappings":"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"}
c3e29dac2c8b639b2889395263cc3091
"use client";
"use strict";

/* istanbul ignore next */
function cov_1lfybxcuzo() {
  var path = "/Users/matthewmoroney/builds/FreeAgentics/web/components/llmtest.tsx";
  var hash = "2b67d04f3e6b80ea7b32a45a64b3756c72faf9bf";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewmoroney/builds/FreeAgentics/web/components/llmtest.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 23
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "5": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 14,
          column: 38
        }
      },
      "6": {
        start: {
          line: 15,
          column: 18
        },
        end: {
          line: 15,
          column: 42
        }
      },
      "7": {
        start: {
          line: 16,
          column: 14
        },
        end: {
          line: 16,
          column: 34
        }
      },
      "8": {
        start: {
          line: 17,
          column: 17
        },
        end: {
          line: 17,
          column: 40
        }
      },
      "9": {
        start: {
          line: 18,
          column: 20
        },
        end: {
          line: 18,
          column: 54
        }
      },
      "10": {
        start: {
          line: 20,
          column: 64
        },
        end: {
          line: 20,
          column: 89
        }
      },
      "11": {
        start: {
          line: 21,
          column: 32
        },
        end: {
          line: 21,
          column: 98
        }
      },
      "12": {
        start: {
          line: 22,
          column: 36
        },
        end: {
          line: 22,
          column: 60
        }
      },
      "13": {
        start: {
          line: 23,
          column: 38
        },
        end: {
          line: 23,
          column: 62
        }
      },
      "14": {
        start: {
          line: 24,
          column: 44
        },
        end: {
          line: 24,
          column: 68
        }
      },
      "15": {
        start: {
          line: 25,
          column: 46
        },
        end: {
          line: 25,
          column: 70
        }
      },
      "16": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 52,
          column: 7
        }
      },
      "17": {
        start: {
          line: 28,
          column: 31
        },
        end: {
          line: 48,
          column: 9
        }
      },
      "18": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 32,
          column: 13
        }
      },
      "19": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 30,
          column: 58
        }
      },
      "20": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 31,
          column: 23
        }
      },
      "21": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 47,
          column: 13
        }
      },
      "22": {
        start: {
          line: 35,
          column: 39
        },
        end: {
          line: 35,
          column: 95
        }
      },
      "23": {
        start: {
          line: 37,
          column: 16
        },
        end: {
          line: 43,
          column: 3
        }
      },
      "24": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 67
        }
      },
      "25": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 46,
          column: 122
        }
      },
      "26": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 25
        }
      },
      "27": {
        start: {
          line: 53,
          column: 25
        },
        end: {
          line: 76,
          column: 6
        }
      },
      "28": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "29": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 54
        }
      },
      "30": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 19
        }
      },
      "31": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 73,
          column: 9
        }
      },
      "32": {
        start: {
          line: 60,
          column: 35
        },
        end: {
          line: 60,
          column: 91
        }
      },
      "33": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "34": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 65
        }
      },
      "35": {
        start: {
          line: 77,
          column: 26
        },
        end: {
          line: 98,
          column: 6
        }
      },
      "36": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "37": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 55
        }
      },
      "38": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 19
        }
      },
      "39": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 95,
          column: 9
        }
      },
      "40": {
        start: {
          line: 83,
          column: 33
        },
        end: {
          line: 92,
          column: 7
        }
      },
      "41": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 67
        }
      },
      "42": {
        start: {
          line: 99,
          column: 23
        },
        end: {
          line: 171,
          column: 5
        }
      },
      "43": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 51
        }
      },
      "44": {
        start: {
          line: 100,
          column: 44
        },
        end: {
          line: 100,
          column: 51
        }
      },
      "45": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 104,
          column: 9
        }
      },
      "46": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 57
        }
      },
      "47": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 19
        }
      },
      "48": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 108,
          column: 9
        }
      },
      "49": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 59
        }
      },
      "50": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 19
        }
      },
      "51": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 170,
          column: 9
        }
      },
      "52": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 34
        }
      },
      "53": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 28
        }
      },
      "54": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 29
        }
      },
      "55": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 120,
          column: 15
        }
      },
      "56": {
        start: {
          line: 122,
          column: 30
        },
        end: {
          line: 122,
          column: 114
        }
      },
      "57": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 125,
          column: 13
        }
      },
      "58": {
        start: {
          line: 124,
          column: 16
        },
        end: {
          line: 124,
          column: 135
        }
      },
      "59": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 133,
          column: 13
        }
      },
      "60": {
        start: {
          line: 128,
          column: 16
        },
        end: {
          line: 128,
          column: 103
        }
      },
      "61": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 132,
          column: 19
        }
      },
      "62": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 144,
          column: 52
        }
      },
      "63": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 149,
          column: 15
        }
      },
      "64": {
        start: {
          line: 151,
          column: 36
        },
        end: {
          line: 151,
          column: 56
        }
      },
      "65": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 157,
          column: 15
        }
      },
      "66": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 164,
          column: 13
        }
      },
      "67": {
        start: {
          line: 159,
          column: 31
        },
        end: {
          line: 159,
          column: 148
        }
      },
      "68": {
        start: {
          line: 160,
          column: 16
        },
        end: {
          line: 160,
          column: 36
        }
      },
      "69": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 74
        }
      },
      "70": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 163,
          column: 98
        }
      },
      "71": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 55
        }
      },
      "72": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 94
        }
      },
      "73": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 35
        }
      },
      "74": {
        start: {
          line: 172,
          column: 4
        },
        end: {
          line: 258,
          column: 7
        }
      },
      "75": {
        start: {
          line: 208,
          column: 51
        },
        end: {
          line: 208,
          column: 76
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "LLMTest",
        decl: {
          start: {
            line: 19,
            column: 9
          },
          end: {
            line: 19,
            column: 16
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 259,
            column: 1
          }
        },
        line: 19
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 27,
            column: 27
          }
        },
        loc: {
          start: {
            line: 27,
            column: 30
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 27
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 28,
            column: 31
          },
          end: {
            line: 28,
            column: 32
          }
        },
        loc: {
          start: {
            line: 28,
            column: 41
          },
          end: {
            line: 48,
            column: 9
          }
        },
        line: 28
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 53,
            column: 49
          },
          end: {
            line: 53,
            column: 50
          }
        },
        loc: {
          start: {
            line: 53,
            column: 53
          },
          end: {
            line: 74,
            column: 5
          }
        },
        line: 53
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 77,
            column: 50
          },
          end: {
            line: 77,
            column: 51
          }
        },
        loc: {
          start: {
            line: 77,
            column: 54
          },
          end: {
            line: 96,
            column: 5
          }
        },
        line: 77
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 99,
            column: 23
          },
          end: {
            line: 99,
            column: 24
          }
        },
        loc: {
          start: {
            line: 99,
            column: 33
          },
          end: {
            line: 171,
            column: 5
          }
        },
        line: 99
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 208,
            column: 46
          },
          end: {
            line: 208,
            column: 47
          }
        },
        loc: {
          start: {
            line: 208,
            column: 51
          },
          end: {
            line: 208,
            column: 76
          }
        },
        line: 208
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 29,
            column: 12
          },
          end: {
            line: 32,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 12
          },
          end: {
            line: 32,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "1": {
        loc: {
          start: {
            line: 40,
            column: 28
          },
          end: {
            line: 40,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 28
          },
          end: {
            line: 40,
            column: 52
          }
        }, {
          start: {
            line: 40,
            column: 56
          },
          end: {
            line: 40,
            column: 67
          }
        }],
        line: 40
      },
      "2": {
        loc: {
          start: {
            line: 41,
            column: 27
          },
          end: {
            line: 41,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 27
          },
          end: {
            line: 41,
            column: 41
          }
        }, {
          start: {
            line: 41,
            column: 45
          },
          end: {
            line: 41,
            column: 56
          }
        }],
        line: 41
      },
      "3": {
        loc: {
          start: {
            line: 46,
            column: 62
          },
          end: {
            line: 46,
            column: 118
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 46,
            column: 87
          },
          end: {
            line: 46,
            column: 100
          }
        }, {
          start: {
            line: 46,
            column: 103
          },
          end: {
            line: 46,
            column: 118
          }
        }],
        line: 46
      },
      "4": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "5": {
        loc: {
          start: {
            line: 67,
            column: 22
          },
          end: {
            line: 67,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 22
          },
          end: {
            line: 67,
            column: 46
          }
        }, {
          start: {
            line: 67,
            column: 50
          },
          end: {
            line: 67,
            column: 59
          }
        }],
        line: 67
      },
      "6": {
        loc: {
          start: {
            line: 68,
            column: 28
          },
          end: {
            line: 68,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 28
          },
          end: {
            line: 68,
            column: 42
          }
        }, {
          start: {
            line: 68,
            column: 46
          },
          end: {
            line: 68,
            column: 57
          }
        }],
        line: 68
      },
      "7": {
        loc: {
          start: {
            line: 69,
            column: 20
          },
          end: {
            line: 69,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 69,
            column: 66
          },
          end: {
            line: 69,
            column: 71
          }
        }, {
          start: {
            line: 69,
            column: 74
          },
          end: {
            line: 69,
            column: 78
          }
        }],
        line: 69
      },
      "8": {
        loc: {
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "9": {
        loc: {
          start: {
            line: 91,
            column: 18
          },
          end: {
            line: 91,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 91,
            column: 36
          },
          end: {
            line: 91,
            column: 58
          }
        }, {
          start: {
            line: 91,
            column: 61
          },
          end: {
            line: 91,
            column: 62
          }
        }],
        line: 91
      },
      "10": {
        loc: {
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 100,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 100,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "11": {
        loc: {
          start: {
            line: 100,
            column: 12
          },
          end: {
            line: 100,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 100,
            column: 12
          },
          end: {
            line: 100,
            column: 26
          }
        }, {
          start: {
            line: 100,
            column: 30
          },
          end: {
            line: 100,
            column: 42
          }
        }],
        line: 100
      },
      "12": {
        loc: {
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "13": {
        loc: {
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "14": {
        loc: {
          start: {
            line: 122,
            column: 30
          },
          end: {
            line: 122,
            column: 114
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 30
          },
          end: {
            line: 122,
            column: 54
          }
        }, {
          start: {
            line: 122,
            column: 58
          },
          end: {
            line: 122,
            column: 114
          }
        }],
        line: 122
      },
      "15": {
        loc: {
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 125,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 125,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "16": {
        loc: {
          start: {
            line: 127,
            column: 12
          },
          end: {
            line: 133,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 12
          },
          end: {
            line: 133,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "17": {
        loc: {
          start: {
            line: 127,
            column: 16
          },
          end: {
            line: 127,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 16
          },
          end: {
            line: 127,
            column: 41
          }
        }, {
          start: {
            line: 127,
            column: 45
          },
          end: {
            line: 127,
            column: 54
          }
        }],
        line: 127
      },
      "18": {
        loc: {
          start: {
            line: 163,
            column: 38
          },
          end: {
            line: 163,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 163,
            column: 63
          },
          end: {
            line: 163,
            column: 76
          }
        }, {
          start: {
            line: 163,
            column: 79
          },
          end: {
            line: 163,
            column: 94
          }
        }],
        line: 163
      },
      "19": {
        loc: {
          start: {
            line: 167,
            column: 34
          },
          end: {
            line: 167,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 167,
            column: 59
          },
          end: {
            line: 167,
            column: 72
          }
        }, {
          start: {
            line: 167,
            column: 75
          },
          end: {
            line: 167,
            column: 90
          }
        }],
        line: 167
      },
      "20": {
        loc: {
          start: {
            line: 184,
            column: 24
          },
          end: {
            line: 196,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 184,
            column: 24
          },
          end: {
            line: 184,
            column: 36
          }
        }, {
          start: {
            line: 184,
            column: 54
          },
          end: {
            line: 196,
            column: 26
          }
        }],
        line: 184
      },
      "21": {
        loc: {
          start: {
            line: 216,
            column: 38
          },
          end: {
            line: 216,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 216,
            column: 38
          },
          end: {
            line: 216,
            column: 50
          }
        }, {
          start: {
            line: 216,
            column: 54
          },
          end: {
            line: 216,
            column: 68
          }
        }],
        line: 216
      },
      "22": {
        loc: {
          start: {
            line: 218,
            column: 38
          },
          end: {
            line: 226,
            column: 55
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 218,
            column: 67
          },
          end: {
            line: 226,
            column: 30
          }
        }, {
          start: {
            line: 226,
            column: 33
          },
          end: {
            line: 226,
            column: 55
          }
        }],
        line: 218
      },
      "23": {
        loc: {
          start: {
            line: 228,
            column: 24
          },
          end: {
            line: 240,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 228,
            column: 24
          },
          end: {
            line: 228,
            column: 33
          }
        }, {
          start: {
            line: 228,
            column: 51
          },
          end: {
            line: 240,
            column: 26
          }
        }],
        line: 228
      },
      "24": {
        loc: {
          start: {
            line: 241,
            column: 24
          },
          end: {
            line: 253,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 241,
            column: 24
          },
          end: {
            line: 241,
            column: 32
          }
        }, {
          start: {
            line: 241,
            column: 50
          },
          end: {
            line: 253,
            column: 26
          }
        }],
        line: 241
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matthewmoroney/builds/FreeAgentics/web/components/llmtest.tsx"],
      sourcesContent: ["\"use client\";\n\nimport { useState, useEffect, useCallback } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Spinner } from \"@/components/ui/spinner\";\nimport { useLLM } from \"@/contexts/llm-context\";\n\nexport default function LLMTest() {\n  const { client, isProcessing, setIsProcessing, settings } = useLLM();\n  const [prompt, setPrompt] = useState<string>(\n    \"Explain quantum computing in simple terms.\",\n  );\n  const [response, setResponse] = useState<string>(\"\");\n  const [debugInfo, setDebugInfo] = useState<string>(\"\");\n  const [sessionDebug, setSessionDebug] = useState<string>(\"\");\n  const [settingsDebug, setSettingsDebug] = useState<string>(\"\");\n\n  // Add debug info on mount and when settings change\n  useEffect(() => {\n    const checkSessionId = async () => {\n      if (!settings) {\n        setSessionDebug(\"Settings not available\");\n        return;\n      }\n\n      try {\n        // Get session ID from localStorage\n        const localSessionId = localStorage.getItem(\n          `api_session_${settings.provider}`,\n        );\n\n        // Debug session info\n        setSessionDebug(`\nProvider: ${settings.provider}\nSettings has apiKeySessionId: ${!!settings.apiKeySessionId}\nSettings apiKeySessionId: ${settings.apiKeySessionId || \"undefined\"}\nLocal storage sessionId: ${localSessionId || \"undefined\"}\nSettings keys: ${Object.keys(settings).join(\", \")}\n`);\n      } catch (error) {\n        console.error(\"Error checking session ID:\", error);\n        setSessionDebug(\n          `Error checking session ID: ${error instanceof Error ? error.message : \"Unknown error\"}`,\n        );\n      }\n    };\n\n    checkSessionId();\n  }, [settings]);\n\n  const debugSession = useCallback(() => {\n    if (!settings) {\n      setSessionDebug(\"Settings not available\");\n      return;\n    }\n\n    try {\n      // Get session ID from localStorage\n      const localSessionId = localStorage.getItem(\n        `api_session_${settings.provider}`,\n      );\n\n      // Debug session info\n      setSessionDebug(`\nProvider: ${settings.provider}\nModel: ${settings.model}\nSettings Keys: ${Object.keys(settings).join(\", \")}\nHas API Key Session ID: ${!!settings.apiKeySessionId}\nAPI Key Session ID: ${settings.apiKeySessionId || \"Not set\"}\nLocal Storage Session ID: ${localSessionId || \"Not found\"}\nSession ID Match: ${settings.apiKeySessionId === localSessionId ? \"Yes\" : \"No\"}\n      `);\n    } catch (error) {\n      setSessionDebug(`Error debugging session: ${error}`);\n    }\n  }, [settings]);\n\n  const debugSettings = useCallback(() => {\n    if (!settings) {\n      setSettingsDebug(\"Settings not available\");\n      return;\n    }\n\n    try {\n      const settingsInfo = `\nCurrent Settings:\nProvider: ${settings.provider}\nModel: ${settings.model}\nTemperature: ${settings.temperature}\nMax Tokens: ${settings.maxTokens}\nSettings Object Keys: ${Object.keys(settings).join(\", \")}\nHas API Key: ${!!settings.apiKey}\nAPI Key Length: ${settings.apiKey ? settings.apiKey.length : 0}\n      `;\n    } catch (error) {\n      setSettingsDebug(`Error debugging settings: ${error}`);\n    }\n  }, [settings]);\n\n  const handleTest = async () => {\n    if (!prompt.trim() || isProcessing) return;\n\n    if (!settings) {\n      setResponse(\"Error: Settings not available\");\n      return;\n    }\n\n    if (!client) {\n      setResponse(\"Error: LLM client not available\");\n      return;\n    }\n\n    try {\n      setIsProcessing(true);\n      setResponse(\"\");\n      setDebugInfo(\"\");\n\n      // Log detailed debug info about settings and session\n      console.log(\"Test settings debug:\", {\n        provider: settings.provider,\n        hasApiKeySessionId: !!settings.apiKeySessionId,\n        apiKeySessionId: settings.apiKeySessionId,\n        settingsKeys: Object.keys(settings),\n        localStorageSessionId: localStorage.getItem(\n          `api_session_${settings.provider}`,\n        ),\n      });\n\n      // Check if API key session ID is available\n      const sessionId =\n        settings.apiKeySessionId ||\n        localStorage.getItem(`api_session_${settings.provider}`);\n\n      if (!sessionId) {\n        throw new Error(\n          `API key is required for ${settings.provider} provider. Please add your API key in the Settings tab.`,\n        );\n      }\n\n      // If we have a session ID in localStorage but not in settings, update the settings\n      if (!settings.apiKeySessionId && sessionId) {\n        console.log(\n          \"Found session ID in localStorage but not in settings, updating settings\",\n        );\n        client.updateSettings({\n          ...settings,\n          apiKeySessionId: sessionId,\n        });\n      }\n\n      // Add debug info\n      setDebugInfo(`Provider: ${settings.provider}\nModel: ${settings.model}\nAPI key: [Securely Stored]\nAPI key session ID: ${sessionId}\nTemperature: ${settings.temperature}\nMax tokens: ${settings.maxTokens}\nTop P: ${settings.topP}\nFrequency penalty: ${settings.frequencyPenalty}\nPresence penalty: ${settings.presencePenalty}\nSystem fingerprint: ${settings.systemFingerprint}`);\n\n      // Force update the client settings before making the call\n      client.updateSettings({\n        ...settings,\n        apiKeySessionId: sessionId,\n      });\n\n      // Get the current settings directly from the client to ensure we're using the latest\n      const currentSettings = client.getSettings();\n      console.log(\"Current settings before test:\", {\n        provider: currentSettings.provider,\n        model: currentSettings.model,\n        hasApiKeySessionId: !!currentSettings.apiKeySessionId,\n        apiKeySessionId: currentSettings.apiKeySessionId,\n      });\n\n      try {\n        const result = await client.generateResponse(\n          \"You are a helpful AI assistant that explains complex topics in simple terms.\",\n          prompt,\n        );\n        setResponse(result);\n      } catch (error) {\n        console.error(\"Error in client.generateResponse:\", error);\n        setResponse(\n          `Error: ${error instanceof Error ? error.message : \"Unknown error\"}`,\n        );\n      }\n    } catch (error) {\n      console.error(\"Error testing LLM:\", error);\n      setResponse(\n        `Error: ${error instanceof Error ? error.message : \"Unknown error\"}`,\n      );\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  return (\n    <Card className=\"w-full\">\n      <CardHeader>\n        <CardTitle>LLM Integration Test</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4\">\n          {sessionDebug && (\n            <div className=\"space-y-2\">\n              <h3 className=\"text-sm font-medium\">Session Debug:</h3>\n              <div className=\"p-4 bg-gray-800 rounded-md whitespace-pre-wrap text-xs font-mono text-white\">\n                {sessionDebug}\n              </div>\n            </div>\n          )}\n\n          <div className=\"space-y-2\">\n            <label htmlFor=\"prompt\" className=\"text-sm font-medium\">\n              Prompt\n            </label>\n            <Textarea\n              id=\"prompt\"\n              value={prompt}\n              onChange={(e) => setPrompt(e.target.value)}\n              placeholder=\"Enter a prompt to test the LLM integration...\"\n              className=\"min-h-[100px]\"\n            />\n          </div>\n\n          <Button\n            onClick={handleTest}\n            disabled={isProcessing || !prompt.trim()}\n            className=\"w-full\"\n          >\n            {isProcessing ? (\n              <>\n                <Spinner size={16} className=\"mr-2\" />\n                Processing...\n              </>\n            ) : (\n              \"Test LLM Integration\"\n            )}\n          </Button>\n\n          {debugInfo && (\n            <div className=\"space-y-2 mt-4\">\n              <h3 className=\"text-sm font-medium\">Debug Info:</h3>\n              <div className=\"p-4 bg-gray-800 rounded-md whitespace-pre-wrap text-xs font-mono text-white\">\n                {debugInfo}\n              </div>\n            </div>\n          )}\n\n          {response && (\n            <div className=\"space-y-2 mt-4\">\n              <h3 className=\"text-sm font-medium\">Response:</h3>\n              <div className=\"p-4 bg-muted rounded-md whitespace-pre-wrap\">\n                {response}\n              </div>\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],
      names: ["LLMTest", "client", "isProcessing", "setIsProcessing", "settings", "useLLM", "prompt", "setPrompt", "useState", "response", "setResponse", "debugInfo", "setDebugInfo", "sessionDebug", "setSessionDebug", "settingsDebug", "setSettingsDebug", "useEffect", "checkSessionId", "localSessionId", "localStorage", "getItem", "provider", "apiKeySessionId", "Object", "keys", "join", "error", "console", "Error", "message", "debugSession", "useCallback", "model", "debugSettings", "settingsInfo", "temperature", "maxTokens", "apiKey", "length", "handleTest", "trim", "log", "hasApiKeySessionId", "settingsKeys", "localStorageSessionId", "sessionId", "updateSettings", "topP", "frequencyPenalty", "presencePenalty", "systemFingerprint", "currentSettings", "getSettings", "result", "generateResponse", "Card", "className", "CardHeader", "CardTitle", "CardContent", "div", "h3", "label", "htmlFor", "Textarea", "id", "value", "onChange", "e", "target", "placeholder", "Button", "onClick", "disabled", "Spinner", "size"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2b67d04f3e6b80ea7b32a45a64b3756c72faf9bf"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1lfybxcuzo = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1lfybxcuzo();
cov_1lfybxcuzo().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1lfybxcuzo().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1lfybxcuzo().f[0]++;
    cov_1lfybxcuzo().s[2]++;
    return LLMTest;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1lfybxcuzo().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_1lfybxcuzo().s[4]++, require("react"));
const _button =
/* istanbul ignore next */
(cov_1lfybxcuzo().s[5]++, require("./ui/button"));
const _textarea =
/* istanbul ignore next */
(cov_1lfybxcuzo().s[6]++, require("./ui/textarea"));
const _card =
/* istanbul ignore next */
(cov_1lfybxcuzo().s[7]++, require("./ui/card"));
const _spinner =
/* istanbul ignore next */
(cov_1lfybxcuzo().s[8]++, require("./ui/spinner"));
const _llmcontext =
/* istanbul ignore next */
(cov_1lfybxcuzo().s[9]++, require("../contexts/llm-context"));
function LLMTest() {
  /* istanbul ignore next */
  cov_1lfybxcuzo().f[1]++;
  const {
    client,
    isProcessing,
    setIsProcessing,
    settings
  } =
  /* istanbul ignore next */
  (cov_1lfybxcuzo().s[10]++, (0, _llmcontext.useLLM)());
  const [prompt, setPrompt] =
  /* istanbul ignore next */
  (cov_1lfybxcuzo().s[11]++, (0, _react.useState)("Explain quantum computing in simple terms."));
  const [response, setResponse] =
  /* istanbul ignore next */
  (cov_1lfybxcuzo().s[12]++, (0, _react.useState)(""));
  const [debugInfo, setDebugInfo] =
  /* istanbul ignore next */
  (cov_1lfybxcuzo().s[13]++, (0, _react.useState)(""));
  const [sessionDebug, setSessionDebug] =
  /* istanbul ignore next */
  (cov_1lfybxcuzo().s[14]++, (0, _react.useState)(""));
  const [settingsDebug, setSettingsDebug] =
  /* istanbul ignore next */
  (cov_1lfybxcuzo().s[15]++, (0, _react.useState)(""));
  // Add debug info on mount and when settings change
  /* istanbul ignore next */
  cov_1lfybxcuzo().s[16]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1lfybxcuzo().f[2]++;
    cov_1lfybxcuzo().s[17]++;
    const checkSessionId = async () => {
      /* istanbul ignore next */
      cov_1lfybxcuzo().f[3]++;
      cov_1lfybxcuzo().s[18]++;
      if (!settings) {
        /* istanbul ignore next */
        cov_1lfybxcuzo().b[0][0]++;
        cov_1lfybxcuzo().s[19]++;
        setSessionDebug("Settings not available");
        /* istanbul ignore next */
        cov_1lfybxcuzo().s[20]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1lfybxcuzo().b[0][1]++;
      }
      cov_1lfybxcuzo().s[21]++;
      try {
        // Get session ID from localStorage
        const localSessionId =
        /* istanbul ignore next */
        (cov_1lfybxcuzo().s[22]++, localStorage.getItem(`api_session_${settings.provider}`));
        // Debug session info
        /* istanbul ignore next */
        cov_1lfybxcuzo().s[23]++;
        setSessionDebug(`
Provider: ${settings.provider}
Settings has apiKeySessionId: ${!!settings.apiKeySessionId}
Settings apiKeySessionId: ${
        /* istanbul ignore next */
        (cov_1lfybxcuzo().b[1][0]++, settings.apiKeySessionId) ||
        /* istanbul ignore next */
        (cov_1lfybxcuzo().b[1][1]++, "undefined")}
Local storage sessionId: ${
        /* istanbul ignore next */
        (cov_1lfybxcuzo().b[2][0]++, localSessionId) ||
        /* istanbul ignore next */
        (cov_1lfybxcuzo().b[2][1]++, "undefined")}
Settings keys: ${Object.keys(settings).join(", ")}
`);
      } catch (error) {
        /* istanbul ignore next */
        cov_1lfybxcuzo().s[24]++;
        console.error("Error checking session ID:", error);
        /* istanbul ignore next */
        cov_1lfybxcuzo().s[25]++;
        setSessionDebug(`Error checking session ID: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_1lfybxcuzo().b[3][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1lfybxcuzo().b[3][1]++, "Unknown error")}`);
      }
    };
    /* istanbul ignore next */
    cov_1lfybxcuzo().s[26]++;
    checkSessionId();
  }, [settings]);
  const debugSession =
  /* istanbul ignore next */
  (cov_1lfybxcuzo().s[27]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1lfybxcuzo().f[4]++;
    cov_1lfybxcuzo().s[28]++;
    if (!settings) {
      /* istanbul ignore next */
      cov_1lfybxcuzo().b[4][0]++;
      cov_1lfybxcuzo().s[29]++;
      setSessionDebug("Settings not available");
      /* istanbul ignore next */
      cov_1lfybxcuzo().s[30]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1lfybxcuzo().b[4][1]++;
    }
    cov_1lfybxcuzo().s[31]++;
    try {
      // Get session ID from localStorage
      const localSessionId =
      /* istanbul ignore next */
      (cov_1lfybxcuzo().s[32]++, localStorage.getItem(`api_session_${settings.provider}`));
      // Debug session info
      /* istanbul ignore next */
      cov_1lfybxcuzo().s[33]++;
      setSessionDebug(`
Provider: ${settings.provider}
Model: ${settings.model}
Settings Keys: ${Object.keys(settings).join(", ")}
Has API Key Session ID: ${!!settings.apiKeySessionId}
API Key Session ID: ${
      /* istanbul ignore next */
      (cov_1lfybxcuzo().b[5][0]++, settings.apiKeySessionId) ||
      /* istanbul ignore next */
      (cov_1lfybxcuzo().b[5][1]++, "Not set")}
Local Storage Session ID: ${
      /* istanbul ignore next */
      (cov_1lfybxcuzo().b[6][0]++, localSessionId) ||
      /* istanbul ignore next */
      (cov_1lfybxcuzo().b[6][1]++, "Not found")}
Session ID Match: ${settings.apiKeySessionId === localSessionId ?
      /* istanbul ignore next */
      (cov_1lfybxcuzo().b[7][0]++, "Yes") :
      /* istanbul ignore next */
      (cov_1lfybxcuzo().b[7][1]++, "No")}
      `);
    } catch (error) {
      /* istanbul ignore next */
      cov_1lfybxcuzo().s[34]++;
      setSessionDebug(`Error debugging session: ${error}`);
    }
  }, [settings]));
  const debugSettings =
  /* istanbul ignore next */
  (cov_1lfybxcuzo().s[35]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1lfybxcuzo().f[5]++;
    cov_1lfybxcuzo().s[36]++;
    if (!settings) {
      /* istanbul ignore next */
      cov_1lfybxcuzo().b[8][0]++;
      cov_1lfybxcuzo().s[37]++;
      setSettingsDebug("Settings not available");
      /* istanbul ignore next */
      cov_1lfybxcuzo().s[38]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1lfybxcuzo().b[8][1]++;
    }
    cov_1lfybxcuzo().s[39]++;
    try {
      const settingsInfo =
      /* istanbul ignore next */
      (cov_1lfybxcuzo().s[40]++, `
Current Settings:
Provider: ${settings.provider}
Model: ${settings.model}
Temperature: ${settings.temperature}
Max Tokens: ${settings.maxTokens}
Settings Object Keys: ${Object.keys(settings).join(", ")}
Has API Key: ${!!settings.apiKey}
API Key Length: ${settings.apiKey ?
      /* istanbul ignore next */
      (cov_1lfybxcuzo().b[9][0]++, settings.apiKey.length) :
      /* istanbul ignore next */
      (cov_1lfybxcuzo().b[9][1]++, 0)}
      `);
    } catch (error) {
      /* istanbul ignore next */
      cov_1lfybxcuzo().s[41]++;
      setSettingsDebug(`Error debugging settings: ${error}`);
    }
  }, [settings]));
  /* istanbul ignore next */
  cov_1lfybxcuzo().s[42]++;
  const handleTest = async () => {
    /* istanbul ignore next */
    cov_1lfybxcuzo().f[6]++;
    cov_1lfybxcuzo().s[43]++;
    if (
    /* istanbul ignore next */
    (cov_1lfybxcuzo().b[11][0]++, !prompt.trim()) ||
    /* istanbul ignore next */
    (cov_1lfybxcuzo().b[11][1]++, isProcessing)) {
      /* istanbul ignore next */
      cov_1lfybxcuzo().b[10][0]++;
      cov_1lfybxcuzo().s[44]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1lfybxcuzo().b[10][1]++;
    }
    cov_1lfybxcuzo().s[45]++;
    if (!settings) {
      /* istanbul ignore next */
      cov_1lfybxcuzo().b[12][0]++;
      cov_1lfybxcuzo().s[46]++;
      setResponse("Error: Settings not available");
      /* istanbul ignore next */
      cov_1lfybxcuzo().s[47]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1lfybxcuzo().b[12][1]++;
    }
    cov_1lfybxcuzo().s[48]++;
    if (!client) {
      /* istanbul ignore next */
      cov_1lfybxcuzo().b[13][0]++;
      cov_1lfybxcuzo().s[49]++;
      setResponse("Error: LLM client not available");
      /* istanbul ignore next */
      cov_1lfybxcuzo().s[50]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1lfybxcuzo().b[13][1]++;
    }
    cov_1lfybxcuzo().s[51]++;
    try {
      /* istanbul ignore next */
      cov_1lfybxcuzo().s[52]++;
      setIsProcessing(true);
      /* istanbul ignore next */
      cov_1lfybxcuzo().s[53]++;
      setResponse("");
      /* istanbul ignore next */
      cov_1lfybxcuzo().s[54]++;
      setDebugInfo("");
      // Log detailed debug info about settings and session
      /* istanbul ignore next */
      cov_1lfybxcuzo().s[55]++;
      console.log("Test settings debug:", {
        provider: settings.provider,
        hasApiKeySessionId: !!settings.apiKeySessionId,
        apiKeySessionId: settings.apiKeySessionId,
        settingsKeys: Object.keys(settings),
        localStorageSessionId: localStorage.getItem(`api_session_${settings.provider}`)
      });
      // Check if API key session ID is available
      const sessionId =
      /* istanbul ignore next */
      (cov_1lfybxcuzo().s[56]++,
      /* istanbul ignore next */
      (cov_1lfybxcuzo().b[14][0]++, settings.apiKeySessionId) ||
      /* istanbul ignore next */
      (cov_1lfybxcuzo().b[14][1]++, localStorage.getItem(`api_session_${settings.provider}`)));
      /* istanbul ignore next */
      cov_1lfybxcuzo().s[57]++;
      if (!sessionId) {
        /* istanbul ignore next */
        cov_1lfybxcuzo().b[15][0]++;
        cov_1lfybxcuzo().s[58]++;
        throw new Error(`API key is required for ${settings.provider} provider. Please add your API key in the Settings tab.`);
      } else
      /* istanbul ignore next */
      {
        cov_1lfybxcuzo().b[15][1]++;
      }
      // If we have a session ID in localStorage but not in settings, update the settings
      cov_1lfybxcuzo().s[59]++;
      if (
      /* istanbul ignore next */
      (cov_1lfybxcuzo().b[17][0]++, !settings.apiKeySessionId) &&
      /* istanbul ignore next */
      (cov_1lfybxcuzo().b[17][1]++, sessionId)) {
        /* istanbul ignore next */
        cov_1lfybxcuzo().b[16][0]++;
        cov_1lfybxcuzo().s[60]++;
        console.log("Found session ID in localStorage but not in settings, updating settings");
        /* istanbul ignore next */
        cov_1lfybxcuzo().s[61]++;
        client.updateSettings({
          ...settings,
          apiKeySessionId: sessionId
        });
      } else
      /* istanbul ignore next */
      {
        cov_1lfybxcuzo().b[16][1]++;
      }
      // Add debug info
      cov_1lfybxcuzo().s[62]++;
      setDebugInfo(`Provider: ${settings.provider}
Model: ${settings.model}
API key: [Securely Stored]
API key session ID: ${sessionId}
Temperature: ${settings.temperature}
Max tokens: ${settings.maxTokens}
Top P: ${settings.topP}
Frequency penalty: ${settings.frequencyPenalty}
Presence penalty: ${settings.presencePenalty}
System fingerprint: ${settings.systemFingerprint}`);
      // Force update the client settings before making the call
      /* istanbul ignore next */
      cov_1lfybxcuzo().s[63]++;
      client.updateSettings({
        ...settings,
        apiKeySessionId: sessionId
      });
      // Get the current settings directly from the client to ensure we're using the latest
      const currentSettings =
      /* istanbul ignore next */
      (cov_1lfybxcuzo().s[64]++, client.getSettings());
      /* istanbul ignore next */
      cov_1lfybxcuzo().s[65]++;
      console.log("Current settings before test:", {
        provider: currentSettings.provider,
        model: currentSettings.model,
        hasApiKeySessionId: !!currentSettings.apiKeySessionId,
        apiKeySessionId: currentSettings.apiKeySessionId
      });
      /* istanbul ignore next */
      cov_1lfybxcuzo().s[66]++;
      try {
        const result =
        /* istanbul ignore next */
        (cov_1lfybxcuzo().s[67]++, await client.generateResponse("You are a helpful AI assistant that explains complex topics in simple terms.", prompt));
        /* istanbul ignore next */
        cov_1lfybxcuzo().s[68]++;
        setResponse(result);
      } catch (error) {
        /* istanbul ignore next */
        cov_1lfybxcuzo().s[69]++;
        console.error("Error in client.generateResponse:", error);
        /* istanbul ignore next */
        cov_1lfybxcuzo().s[70]++;
        setResponse(`Error: ${error instanceof Error ?
        /* istanbul ignore next */
        (cov_1lfybxcuzo().b[18][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1lfybxcuzo().b[18][1]++, "Unknown error")}`);
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1lfybxcuzo().s[71]++;
      console.error("Error testing LLM:", error);
      /* istanbul ignore next */
      cov_1lfybxcuzo().s[72]++;
      setResponse(`Error: ${error instanceof Error ?
      /* istanbul ignore next */
      (cov_1lfybxcuzo().b[19][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1lfybxcuzo().b[19][1]++, "Unknown error")}`);
    } finally {
      /* istanbul ignore next */
      cov_1lfybxcuzo().s[73]++;
      setIsProcessing(false);
    }
  };
  /* istanbul ignore next */
  cov_1lfybxcuzo().s[74]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
    className: "w-full",
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
        children: "LLM Integration Test"
      })
    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "space-y-4",
        children: [
        /* istanbul ignore next */
        (cov_1lfybxcuzo().b[20][0]++, sessionDebug) &&
        /* istanbul ignore next */
        (cov_1lfybxcuzo().b[20][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "space-y-2",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
            className: "text-sm font-medium",
            children: "Session Debug:"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "p-4 bg-gray-800 rounded-md whitespace-pre-wrap text-xs font-mono text-white",
            children: sessionDebug
          })]
        })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "space-y-2",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
            htmlFor: "prompt",
            className: "text-sm font-medium",
            children: "Prompt"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_textarea.Textarea, {
            id: "prompt",
            value: prompt,
            onChange: e => {
              /* istanbul ignore next */
              cov_1lfybxcuzo().f[7]++;
              cov_1lfybxcuzo().s[75]++;
              return setPrompt(e.target.value);
            },
            placeholder: "Enter a prompt to test the LLM integration...",
            className: "min-h-[100px]"
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
          onClick: handleTest,
          disabled:
          /* istanbul ignore next */
          (cov_1lfybxcuzo().b[21][0]++, isProcessing) ||
          /* istanbul ignore next */
          (cov_1lfybxcuzo().b[21][1]++, !prompt.trim()),
          className: "w-full",
          children: isProcessing ?
          /* istanbul ignore next */
          (/*#__PURE__*/cov_1lfybxcuzo().b[22][0]++, (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_spinner.Spinner, {
              size: 16,
              className: "mr-2"
            }), "Processing..."]
          })) :
          /* istanbul ignore next */
          (cov_1lfybxcuzo().b[22][1]++, "Test LLM Integration")
        }),
        /* istanbul ignore next */
        (cov_1lfybxcuzo().b[23][0]++, debugInfo) &&
        /* istanbul ignore next */
        (cov_1lfybxcuzo().b[23][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "space-y-2 mt-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
            className: "text-sm font-medium",
            children: "Debug Info:"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "p-4 bg-gray-800 rounded-md whitespace-pre-wrap text-xs font-mono text-white",
            children: debugInfo
          })]
        })),
        /* istanbul ignore next */
        (cov_1lfybxcuzo().b[24][0]++, response) &&
        /* istanbul ignore next */
        (cov_1lfybxcuzo().b[24][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "space-y-2 mt-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
            className: "text-sm font-medium",
            children: "Response:"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "p-4 bg-muted rounded-md whitespace-pre-wrap",
            children: response
          })]
        }))]
      })
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
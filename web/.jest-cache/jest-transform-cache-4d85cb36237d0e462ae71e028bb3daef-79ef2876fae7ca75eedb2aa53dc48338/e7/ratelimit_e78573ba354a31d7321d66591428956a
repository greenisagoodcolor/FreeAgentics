9fe4b100cd61f4287a477e1f8aef0d23
/**
 * Simple in-memory rate limiter
 * For production, use Redis or similar
 */"use strict";

/* istanbul ignore next */
function cov_1d133f9n5q() {
  var path = "/Users/matthewmoroney/builds/FreeAgentics/web/lib/rate-limit.ts";
  var hash = "fcd3f08daad507fb8668bb7a16eef54494c12c19";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewmoroney/builds/FreeAgentics/web/lib/rate-limit.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 13,
          column: 3
        }
      },
      "2": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 25
        }
      },
      "3": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 24
        }
      },
      "4": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 41
        }
      },
      "5": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 52
        }
      },
      "6": {
        start: {
          line: 21,
          column: 20
        },
        end: {
          line: 21,
          column: 30
        }
      },
      "7": {
        start: {
          line: 22,
          column: 23
        },
        end: {
          line: 22,
          column: 45
        }
      },
      "8": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 30,
          column: 9
        }
      },
      "9": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 28,
          column: 14
        }
      },
      "10": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 19
        }
      },
      "11": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 34,
          column: 9
        }
      },
      "12": {
        start: {
          line: 32,
          column: 29
        },
        end: {
          line: 32,
          column: 51
        }
      },
      "13": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 104
        }
      },
      "14": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 31
        }
      },
      "15": {
        start: {
          line: 38,
          column: 20
        },
        end: {
          line: 38,
          column: 30
        }
      },
      "16": {
        start: {
          line: 39,
          column: 23
        },
        end: {
          line: 39,
          column: 45
        }
      },
      "17": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "18": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 30
        }
      },
      "19": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 54
        }
      },
      "20": {
        start: {
          line: 46,
          column: 23
        },
        end: {
          line: 46,
          column: 45
        }
      },
      "21": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 70
        }
      },
      "22": {
        start: {
          line: 51,
          column: 20
        },
        end: {
          line: 51,
          column: 30
        }
      },
      "23": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "24": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 55,
          column: 13
        }
      },
      "25": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 39
        }
      },
      "26": {
        start: {
          line: 60,
          column: 20
        },
        end: {
          line: 60,
          column: 44
        }
      },
      "27": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 62,
          column: 46
        }
      },
      "28": {
        start: {
          line: 62,
          column: 20
        },
        end: {
          line: 62,
          column: 37
        }
      },
      "29": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 63,
          column: 19
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 9
          },
          end: {
            line: 10,
            column: 10
          }
        },
        loc: {
          start: {
            line: 10,
            column: 20
          },
          end: {
            line: 12,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 24
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 36
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        loc: {
          start: {
            line: 37,
            column: 35
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 37
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        loc: {
          start: {
            line: 45,
            column: 29
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 45
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        loc: {
          start: {
            line: 50,
            column: 14
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 50
      },
      "6": {
        name: "rateLimit",
        decl: {
          start: {
            line: 59,
            column: 9
          },
          end: {
            line: 59,
            column: 18
          }
        },
        loc: {
          start: {
            line: 59,
            column: 28
          },
          end: {
            line: 64,
            column: 1
          }
        },
        line: 59
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 62,
            column: 16
          },
          end: {
            line: 62,
            column: 17
          }
        },
        loc: {
          start: {
            line: 62,
            column: 20
          },
          end: {
            line: 62,
            column: 37
          }
        },
        line: 62
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "1": {
        loc: {
          start: {
            line: 23,
            column: 12
          },
          end: {
            line: 23,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 12
          },
          end: {
            line: 23,
            column: 19
          }
        }, {
          start: {
            line: 23,
            column: 23
          },
          end: {
            line: 23,
            column: 45
          }
        }],
        line: 23
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "3": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "4": {
        loc: {
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 40,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 40,
            column: 19
          }
        }, {
          start: {
            line: 40,
            column: 23
          },
          end: {
            line: 40,
            column: 45
          }
        }],
        line: 40
      },
      "5": {
        loc: {
          start: {
            line: 47,
            column: 15
          },
          end: {
            line: 47,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 47,
            column: 24
          },
          end: {
            line: 47,
            column: 40
          }
        }, {
          start: {
            line: 47,
            column: 43
          },
          end: {
            line: 47,
            column: 69
          }
        }],
        line: 47
      },
      "6": {
        loc: {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "7": {
        loc: {
          start: {
            line: 53,
            column: 16
          },
          end: {
            line: 53,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 16
          },
          end: {
            line: 53,
            column: 31
          }
        }, {
          start: {
            line: 53,
            column: 35
          },
          end: {
            line: 53,
            column: 66
          }
        }],
        line: 53
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matthewmoroney/builds/FreeAgentics/web/lib/rate-limit.ts"],
      sourcesContent: ["/**\n * Simple in-memory rate limiter\n * For production, use Redis or similar\n */\n\ninterface RateLimitOptions {\n  interval: number; // Time window in milliseconds\n  uniqueTokenPerInterval: number; // Max number of tokens\n}\n\ninterface RateLimitStore {\n  [key: string]: {\n    count: number;\n    resetTime: number;\n  };\n}\n\nclass RateLimiter {\n  private store: RateLimitStore = {};\n  private interval: number;\n  private limit: number;\n\n  constructor(options: RateLimitOptions) {\n    this.interval = options.interval;\n    this.limit = options.uniqueTokenPerInterval;\n  }\n\n  async check(tokens: number, identifier: string): Promise<void> {\n    const now = Date.now();\n    const record = this.store[identifier];\n\n    if (!record || now > record.resetTime) {\n      // Create new record or reset expired one\n      this.store[identifier] = {\n        count: tokens,\n        resetTime: now + this.interval,\n      };\n      return;\n    }\n\n    if (record.count + tokens > this.limit) {\n      const waitTime = record.resetTime - now;\n      throw new Error(\n        `Rate limit exceeded. Try again in ${Math.ceil(waitTime / 1000)} seconds.`,\n      );\n    }\n\n    record.count += tokens;\n  }\n\n  getRemainingTokens(identifier: string): number {\n    const now = Date.now();\n    const record = this.store[identifier];\n\n    if (!record || now > record.resetTime) {\n      return this.limit;\n    }\n\n    return Math.max(0, this.limit - record.count);\n  }\n\n  getResetTime(identifier: string): number {\n    const record = this.store[identifier];\n    return record ? record.resetTime : Date.now() + this.interval;\n  }\n\n  // Clean up expired entries periodically\n  cleanup(): void {\n    const now = Date.now();\n    for (const key in this.store) {\n      if (this.store[key] && this.store[key].resetTime < now) {\n        delete this.store[key];\n      }\n    }\n  }\n}\n\n// Factory function\nexport function rateLimit(options: RateLimitOptions): RateLimiter {\n  const limiter = new RateLimiter(options);\n\n  // Run cleanup every minute\n  setInterval(() => limiter.cleanup(), 60000);\n\n  return limiter;\n}\n\nexport type { RateLimiter, RateLimitOptions };\n"],
      names: ["rateLimit", "RateLimiter", "constructor", "options", "store", "interval", "limit", "uniqueTokenPerInterval", "check", "tokens", "identifier", "now", "Date", "record", "resetTime", "count", "waitTime", "Error", "Math", "ceil", "getRemainingTokens", "max", "getResetTime", "cleanup", "key", "limiter", "setInterval"],
      mappings: "AAAA;;;CAGC;;;;+BA2EeA;;;eAAAA;;;AA7DhB,MAAMC;IAKJC,YAAYC,OAAyB,CAAE;aAJ/BC,QAAwB,CAAC;QAK/B,IAAI,CAACC,QAAQ,GAAGF,QAAQE,QAAQ;QAChC,IAAI,CAACC,KAAK,GAAGH,QAAQI,sBAAsB;IAC7C;IAEA,MAAMC,MAAMC,MAAc,EAAEC,UAAkB,EAAiB;QAC7D,MAAMC,MAAMC,KAAKD,GAAG;QACpB,MAAME,SAAS,IAAI,CAACT,KAAK,CAACM,WAAW;QAErC,IAAI,CAACG,UAAUF,MAAME,OAAOC,SAAS,EAAE;YACrC,yCAAyC;YACzC,IAAI,CAACV,KAAK,CAACM,WAAW,GAAG;gBACvBK,OAAON;gBACPK,WAAWH,MAAM,IAAI,CAACN,QAAQ;YAChC;YACA;QACF;QAEA,IAAIQ,OAAOE,KAAK,GAAGN,SAAS,IAAI,CAACH,KAAK,EAAE;YACtC,MAAMU,WAAWH,OAAOC,SAAS,GAAGH;YACpC,MAAM,IAAIM,MACR,CAAC,kCAAkC,EAAEC,KAAKC,IAAI,CAACH,WAAW,MAAM,SAAS,CAAC;QAE9E;QAEAH,OAAOE,KAAK,IAAIN;IAClB;IAEAW,mBAAmBV,UAAkB,EAAU;QAC7C,MAAMC,MAAMC,KAAKD,GAAG;QACpB,MAAME,SAAS,IAAI,CAACT,KAAK,CAACM,WAAW;QAErC,IAAI,CAACG,UAAUF,MAAME,OAAOC,SAAS,EAAE;YACrC,OAAO,IAAI,CAACR,KAAK;QACnB;QAEA,OAAOY,KAAKG,GAAG,CAAC,GAAG,IAAI,CAACf,KAAK,GAAGO,OAAOE,KAAK;IAC9C;IAEAO,aAAaZ,UAAkB,EAAU;QACvC,MAAMG,SAAS,IAAI,CAACT,KAAK,CAACM,WAAW;QACrC,OAAOG,SAASA,OAAOC,SAAS,GAAGF,KAAKD,GAAG,KAAK,IAAI,CAACN,QAAQ;IAC/D;IAEA,wCAAwC;IACxCkB,UAAgB;QACd,MAAMZ,MAAMC,KAAKD,GAAG;QACpB,IAAK,MAAMa,OAAO,IAAI,CAACpB,KAAK,CAAE;YAC5B,IAAI,IAAI,CAACA,KAAK,CAACoB,IAAI,IAAI,IAAI,CAACpB,KAAK,CAACoB,IAAI,CAACV,SAAS,GAAGH,KAAK;gBACtD,OAAO,IAAI,CAACP,KAAK,CAACoB,IAAI;YACxB;QACF;IACF;AACF;AAGO,SAASxB,UAAUG,OAAyB;IACjD,MAAMsB,UAAU,IAAIxB,YAAYE;IAEhC,2BAA2B;IAC3BuB,YAAY,IAAMD,QAAQF,OAAO,IAAI;IAErC,OAAOE;AACT"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fcd3f08daad507fb8668bb7a16eef54494c12c19"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1d133f9n5q = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1d133f9n5q();
cov_1d133f9n5q().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1d133f9n5q().s[1]++;
Object.defineProperty(exports, "rateLimit", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1d133f9n5q().f[0]++;
    cov_1d133f9n5q().s[2]++;
    return rateLimit;
  }
});
class RateLimiter {
  constructor(options) {
    /* istanbul ignore next */
    cov_1d133f9n5q().f[1]++;
    cov_1d133f9n5q().s[3]++;
    this.store = {};
    /* istanbul ignore next */
    cov_1d133f9n5q().s[4]++;
    this.interval = options.interval;
    /* istanbul ignore next */
    cov_1d133f9n5q().s[5]++;
    this.limit = options.uniqueTokenPerInterval;
  }
  async check(tokens, identifier) {
    /* istanbul ignore next */
    cov_1d133f9n5q().f[2]++;
    const now =
    /* istanbul ignore next */
    (cov_1d133f9n5q().s[6]++, Date.now());
    const record =
    /* istanbul ignore next */
    (cov_1d133f9n5q().s[7]++, this.store[identifier]);
    /* istanbul ignore next */
    cov_1d133f9n5q().s[8]++;
    if (
    /* istanbul ignore next */
    (cov_1d133f9n5q().b[1][0]++, !record) ||
    /* istanbul ignore next */
    (cov_1d133f9n5q().b[1][1]++, now > record.resetTime)) {
      /* istanbul ignore next */
      cov_1d133f9n5q().b[0][0]++;
      cov_1d133f9n5q().s[9]++;
      // Create new record or reset expired one
      this.store[identifier] = {
        count: tokens,
        resetTime: now + this.interval
      };
      /* istanbul ignore next */
      cov_1d133f9n5q().s[10]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1d133f9n5q().b[0][1]++;
    }
    cov_1d133f9n5q().s[11]++;
    if (record.count + tokens > this.limit) {
      /* istanbul ignore next */
      cov_1d133f9n5q().b[2][0]++;
      const waitTime =
      /* istanbul ignore next */
      (cov_1d133f9n5q().s[12]++, record.resetTime - now);
      /* istanbul ignore next */
      cov_1d133f9n5q().s[13]++;
      throw new Error(`Rate limit exceeded. Try again in ${Math.ceil(waitTime / 1000)} seconds.`);
    } else
    /* istanbul ignore next */
    {
      cov_1d133f9n5q().b[2][1]++;
    }
    cov_1d133f9n5q().s[14]++;
    record.count += tokens;
  }
  getRemainingTokens(identifier) {
    /* istanbul ignore next */
    cov_1d133f9n5q().f[3]++;
    const now =
    /* istanbul ignore next */
    (cov_1d133f9n5q().s[15]++, Date.now());
    const record =
    /* istanbul ignore next */
    (cov_1d133f9n5q().s[16]++, this.store[identifier]);
    /* istanbul ignore next */
    cov_1d133f9n5q().s[17]++;
    if (
    /* istanbul ignore next */
    (cov_1d133f9n5q().b[4][0]++, !record) ||
    /* istanbul ignore next */
    (cov_1d133f9n5q().b[4][1]++, now > record.resetTime)) {
      /* istanbul ignore next */
      cov_1d133f9n5q().b[3][0]++;
      cov_1d133f9n5q().s[18]++;
      return this.limit;
    } else
    /* istanbul ignore next */
    {
      cov_1d133f9n5q().b[3][1]++;
    }
    cov_1d133f9n5q().s[19]++;
    return Math.max(0, this.limit - record.count);
  }
  getResetTime(identifier) {
    /* istanbul ignore next */
    cov_1d133f9n5q().f[4]++;
    const record =
    /* istanbul ignore next */
    (cov_1d133f9n5q().s[20]++, this.store[identifier]);
    /* istanbul ignore next */
    cov_1d133f9n5q().s[21]++;
    return record ?
    /* istanbul ignore next */
    (cov_1d133f9n5q().b[5][0]++, record.resetTime) :
    /* istanbul ignore next */
    (cov_1d133f9n5q().b[5][1]++, Date.now() + this.interval);
  }
  // Clean up expired entries periodically
  cleanup() {
    /* istanbul ignore next */
    cov_1d133f9n5q().f[5]++;
    const now =
    /* istanbul ignore next */
    (cov_1d133f9n5q().s[22]++, Date.now());
    /* istanbul ignore next */
    cov_1d133f9n5q().s[23]++;
    for (const key in this.store) {
      /* istanbul ignore next */
      cov_1d133f9n5q().s[24]++;
      if (
      /* istanbul ignore next */
      (cov_1d133f9n5q().b[7][0]++, this.store[key]) &&
      /* istanbul ignore next */
      (cov_1d133f9n5q().b[7][1]++, this.store[key].resetTime < now)) {
        /* istanbul ignore next */
        cov_1d133f9n5q().b[6][0]++;
        cov_1d133f9n5q().s[25]++;
        delete this.store[key];
      } else
      /* istanbul ignore next */
      {
        cov_1d133f9n5q().b[6][1]++;
      }
    }
  }
}
function rateLimit(options) {
  /* istanbul ignore next */
  cov_1d133f9n5q().f[6]++;
  const limiter =
  /* istanbul ignore next */
  (cov_1d133f9n5q().s[26]++, new RateLimiter(options));
  // Run cleanup every minute
  /* istanbul ignore next */
  cov_1d133f9n5q().s[27]++;
  setInterval(() => {
    /* istanbul ignore next */
    cov_1d133f9n5q().f[7]++;
    cov_1d133f9n5q().s[28]++;
    return limiter.cleanup();
  }, 60000);
  /* istanbul ignore next */
  cov_1d133f9n5q().s[29]++;
  return limiter;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
{"version":3,"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/components/belief-trajectory-dashboard.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"./ui/card\";\nimport { Button } from \"./ui/button\";\nimport { Badge } from \"./ui/badge\";\n\n/**\n * Historical Belief Trajectory Analysis and Dashboard Component\n *\n * Temporal visualization of belief state evolution with decision point annotations\n * and comprehensive mathematical validation dashboard.\n *\n * Implements Task 37.5 requirements for temporal analysis and scientific reporting.\n */\n\ninterface BeliefTrajectoryPoint {\n  timestamp: string;\n  agent_id: string;\n  belief_distribution: number[];\n  free_energy: number;\n  entropy: number;\n  convergence_metric: number;\n  confidence_level: number;\n  decision_point?: {\n    action_taken: string;\n    action_value: number;\n    decision_confidence: number;\n    reasoning: string;\n  };\n  numerical_precision: {\n    sum_check: number;\n    numerical_stability: number;\n    condition_number: number;\n    precision_error: number;\n  };\n}\n\ninterface BeliefTrajectoryDashboardProps {\n  trajectoryData: BeliefTrajectoryPoint[];\n  agentId: string;\n  realTimeUpdates?: boolean;\n  exportEnabled?: boolean;\n}\n\nexport const BeliefTrajectoryDashboard: React.FC<\n  BeliefTrajectoryDashboardProps\n> = ({\n  trajectoryData,\n  agentId,\n  realTimeUpdates = true,\n  exportEnabled = true,\n}) => {\n  const svgRef = useRef<SVGSVGElement>(null);\n  const [selectedMetric, setSelectedMetric] = useState<string>(\"free_energy\");\n  const [showDecisionPoints, setShowDecisionPoints] = useState(true);\n  const [selectedTrajectoryPoint, setSelectedTrajectoryPoint] =\n    useState<BeliefTrajectoryPoint | null>(null);\n\n  // Main trajectory visualization using D3.js\n  useEffect(() => {\n    if (!svgRef.current || !trajectoryData.length) return;\n\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n\n    const width = 800;\n    const height = 400;\n    const margin = { top: 20, right: 80, bottom: 60, left: 80 };\n    const innerWidth = width - margin.left - margin.right;\n    const innerHeight = height - margin.top - margin.bottom;\n\n    const g = svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n    // Create scales\n    const timeExtent = d3.extent(\n      trajectoryData,\n      (d) => new Date(d.timestamp),\n    ) as [Date, Date];\n    const xScale = d3.scaleTime().domain(timeExtent).range([0, innerWidth]);\n\n    const yExtent = d3.extent(\n      trajectoryData,\n      (d) => d[selectedMetric as keyof BeliefTrajectoryPoint] as number,\n    ) as [number, number];\n    const yScale = d3.scaleLinear().domain(yExtent).range([innerHeight, 0]);\n\n    // Create line generator\n    const line = d3\n      .line<BeliefTrajectoryPoint>()\n      .x((d) => xScale(new Date(d.timestamp)))\n      .y((d) =>\n        yScale(d[selectedMetric as keyof BeliefTrajectoryPoint] as number),\n      )\n      .curve(d3.curveMonotoneX);\n\n    // Draw confidence band\n    const area = d3\n      .area<BeliefTrajectoryPoint>()\n      .x((d) => xScale(new Date(d.timestamp)))\n      .y0((d) => {\n        const value = d[\n          selectedMetric as keyof BeliefTrajectoryPoint\n        ] as number;\n        const confidence = d.confidence_level;\n        return yScale(value - (1 - confidence) * Math.abs(value));\n      })\n      .y1((d) => {\n        const value = d[\n          selectedMetric as keyof BeliefTrajectoryPoint\n        ] as number;\n        const confidence = d.confidence_level;\n        return yScale(value + (1 - confidence) * Math.abs(value));\n      })\n      .curve(d3.curveMonotoneX);\n\n    g.append(\"path\")\n      .datum(trajectoryData)\n      .attr(\"class\", \"confidence-band\")\n      .attr(\"d\", area)\n      .attr(\"fill\", \"#4f46e5\")\n      .attr(\"opacity\", 0.2);\n\n    // Draw main trajectory line\n    g.append(\"path\")\n      .datum(trajectoryData)\n      .attr(\"class\", \"trajectory-line\")\n      .attr(\"d\", line)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"#4f46e5\")\n      .attr(\"stroke-width\", 2);\n\n    // Add decision points\n    if (showDecisionPoints) {\n      const decisionPoints = trajectoryData.filter((d) => d.decision_point);\n\n      g.selectAll(\".decision-point\")\n        .data(decisionPoints)\n        .enter()\n        .append(\"circle\")\n        .attr(\"class\", \"decision-point\")\n        .attr(\"cx\", (d) => xScale(new Date(d.timestamp)))\n        .attr(\"cy\", (d) =>\n          yScale(d[selectedMetric as keyof BeliefTrajectoryPoint] as number),\n        )\n        .attr(\"r\", 6)\n        .attr(\"fill\", \"#ef4444\")\n        .attr(\"stroke\", \"#dc2626\")\n        .attr(\"stroke-width\", 2)\n        .style(\"cursor\", \"pointer\")\n        .on(\"click\", function (event, d) {\n          setSelectedTrajectoryPoint(d);\n        });\n\n      // Add decision annotations\n      g.selectAll(\".decision-annotation\")\n        .data(decisionPoints)\n        .enter()\n        .append(\"text\")\n        .attr(\"class\", \"decision-annotation\")\n        .attr(\"x\", (d) => xScale(new Date(d.timestamp)))\n        .attr(\n          \"y\",\n          (d) =>\n            yScale(d[selectedMetric as keyof BeliefTrajectoryPoint] as number) -\n            15,\n        )\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"font-size\", \"10px\")\n        .attr(\"font-weight\", \"bold\")\n        .attr(\"fill\", \"#ef4444\")\n        .text((d) => d.decision_point!.action_taken.substring(0, 8));\n    }\n\n    // Add axes\n    const xAxis = d3\n      .axisBottom(xScale)\n      .tickFormat(d3.timeFormat(\"%H:%M:%S\") as any);\n    const yAxis = d3\n      .axisLeft(yScale)\n      .tickFormat((d) => (d as number).toFixed(3));\n\n    g.append(\"g\")\n      .attr(\"class\", \"x-axis\")\n      .attr(\"transform\", `translate(0,${innerHeight})`)\n      .call(xAxis as any);\n\n    g.append(\"g\")\n      .attr(\"class\", \"y-axis\")\n      .call(yAxis as any);\n\n    // Add axis labels\n    g.append(\"text\")\n      .attr(\"class\", \"x-label\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"x\", innerWidth / 2)\n      .attr(\"y\", innerHeight + 45)\n      .text(\"Time\");\n\n    g.append(\"text\")\n      .attr(\"class\", \"y-label\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"transform\", `translate(-50,${innerHeight / 2})rotate(-90)`)\n      .text(\n        selectedMetric\n          .replace(/_/g, \" \")\n          .replace(/\\b\\w/g, (l) => l.toUpperCase()),\n      );\n  }, [trajectoryData, selectedMetric, showDecisionPoints]);\n\n  const exportTrajectoryData = () => {\n    const exportData = {\n      agent_id: agentId,\n      trajectory_data: trajectoryData,\n      export_timestamp: new Date().toISOString(),\n      analysis_parameters: {\n        selected_metric: selectedMetric,\n        show_decision_points: showDecisionPoints,\n      },\n    };\n\n    const blob = new Blob([JSON.stringify(exportData, null, 2)], {\n      type: \"application/json\",\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `belief-trajectory-${agentId}-${new Date().toISOString().slice(0, 19)}.json`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  const formatNumber = (value: number, precision: number = 4): string => {\n    if (Math.abs(value) < 1e-10) return \"0\";\n    if (Math.abs(value) > 1e6) return value.toExponential(2);\n    return value.toFixed(precision);\n  };\n\n  return (\n    <div className=\"w-full space-y-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex justify-between items-center\">\n            Belief Trajectory Analysis - Agent {agentId}\n            <div className=\"flex gap-2\">\n              <Badge variant={realTimeUpdates ? \"default\" : \"secondary\"}>\n                {realTimeUpdates ? \"Live\" : \"Static\"}\n              </Badge>\n              <Badge variant=\"outline\">{trajectoryData.length} points</Badge>\n            </div>\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          {/* Controls */}\n          <div className=\"grid grid-cols-4 gap-4 p-4 bg-gray-50 rounded-lg mb-4\">\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">Metric</label>\n              <select\n                value={selectedMetric}\n                onChange={(e) => setSelectedMetric(e.target.value)}\n                className=\"w-full p-2 border rounded\"\n              >\n                <option value=\"free_energy\">Free Energy</option>\n                <option value=\"entropy\">Entropy</option>\n                <option value=\"convergence_metric\">Convergence</option>\n                <option value=\"confidence_level\">Confidence</option>\n              </select>\n            </div>\n\n            <div className=\"space-y-2\">\n              <div className=\"flex items-center space-x-2\">\n                <input\n                  type=\"checkbox\"\n                  checked={showDecisionPoints}\n                  onChange={(e) => setShowDecisionPoints(e.target.checked)}\n                />\n                <label className=\"text-sm\">Show Decision Points</label>\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">\n                Export Options\n              </label>\n              {exportEnabled && (\n                <Button onClick={exportTrajectoryData} size=\"sm\">\n                  Export Trajectory\n                </Button>\n              )}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">Analysis</label>\n              <Button\n                onClick={() => setSelectedTrajectoryPoint(null)}\n                variant=\"outline\"\n                size=\"sm\"\n              >\n                Clear Selection\n              </Button>\n            </div>\n          </div>\n\n          {/* Main Visualization */}\n          <div className=\"w-full\">\n            <svg\n              ref={svgRef}\n              width=\"100%\"\n              height=\"400\"\n              style={{ border: \"1px solid #e5e7eb\" }}\n            />\n          </div>\n\n          {/* Selected Point Details */}\n          {selectedTrajectoryPoint && (\n            <Card className=\"p-4 bg-blue-50 border-blue-200 mt-4\">\n              <h3 className=\"text-lg font-semibold mb-3\">\n                Selected Point:{\" \"}\n                {new Date(selectedTrajectoryPoint.timestamp).toLocaleString()}\n              </h3>\n              <div className=\"grid grid-cols-4 gap-4 text-sm mb-4\">\n                <div>\n                  <span className=\"font-medium\">Free Energy:</span>\n                  <span className=\"ml-2 font-mono\">\n                    {formatNumber(selectedTrajectoryPoint.free_energy)}\n                  </span>\n                </div>\n                <div>\n                  <span className=\"font-medium\">Entropy:</span>\n                  <span className=\"ml-2 font-mono\">\n                    {formatNumber(selectedTrajectoryPoint.entropy)}\n                  </span>\n                </div>\n                <div>\n                  <span className=\"font-medium\">Convergence:</span>\n                  <span className=\"ml-2 font-mono\">\n                    {formatNumber(selectedTrajectoryPoint.convergence_metric)}\n                  </span>\n                </div>\n                <div>\n                  <span className=\"font-medium\">Confidence:</span>\n                  <span className=\"ml-2 font-mono\">\n                    {formatNumber(selectedTrajectoryPoint.confidence_level)}\n                  </span>\n                </div>\n              </div>\n\n              {selectedTrajectoryPoint.decision_point && (\n                <div className=\"mt-4 p-3 bg-white rounded border\">\n                  <h4 className=\"font-medium mb-2\">Decision Made</h4>\n                  <div className=\"space-y-1 text-sm\">\n                    <div>\n                      <span className=\"font-medium\">Action:</span>{\" \"}\n                      {selectedTrajectoryPoint.decision_point.action_taken}\n                    </div>\n                    <div>\n                      <span className=\"font-medium\">Value:</span>{\" \"}\n                      {formatNumber(\n                        selectedTrajectoryPoint.decision_point.action_value,\n                      )}\n                    </div>\n                    <div>\n                      <span className=\"font-medium\">Confidence:</span>{\" \"}\n                      {formatNumber(\n                        selectedTrajectoryPoint.decision_point\n                          .decision_confidence,\n                      )}\n                    </div>\n                    <div>\n                      <span className=\"font-medium\">Reasoning:</span>{\" \"}\n                      {selectedTrajectoryPoint.decision_point.reasoning}\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Numerical Precision Details */}\n              <div className=\"mt-4 p-3 bg-white rounded border\">\n                <h4 className=\"font-medium mb-2\">Numerical Precision</h4>\n                <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                  <div>\n                    <span className=\"font-medium\">Sum Check:</span>\n                    <span\n                      className={`ml-2 font-mono ${\n                        Math.abs(\n                          selectedTrajectoryPoint.numerical_precision\n                            .sum_check - 1.0,\n                        ) < 1e-6\n                          ? \"text-green-600\"\n                          : \"text-red-600\"\n                      }`}\n                    >\n                      {formatNumber(\n                        selectedTrajectoryPoint.numerical_precision.sum_check,\n                      )}\n                    </span>\n                  </div>\n                  <div>\n                    <span className=\"font-medium\">Stability:</span>\n                    <span className=\"ml-2 font-mono\">\n                      {formatNumber(\n                        selectedTrajectoryPoint.numerical_precision\n                          .numerical_stability,\n                      )}\n                    </span>\n                  </div>\n                  <div>\n                    <span className=\"font-medium\">Condition Number:</span>\n                    <span className=\"ml-2 font-mono\">\n                      {formatNumber(\n                        selectedTrajectoryPoint.numerical_precision\n                          .condition_number,\n                      )}\n                    </span>\n                  </div>\n                  <div>\n                    <span className=\"font-medium\">Precision Error:</span>\n                    <span className=\"ml-2 font-mono\">\n                      {formatNumber(\n                        selectedTrajectoryPoint.numerical_precision\n                          .precision_error,\n                      )}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </Card>\n          )}\n\n          {/* Real-time Mathematical Validation Dashboard */}\n          <Card className=\"p-4 mt-4\">\n            <h3 className=\"text-lg font-semibold mb-4\">\n              Real-time Mathematical Validation\n            </h3>\n            <div className=\"grid grid-cols-4 gap-4\">\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-blue-600\">\n                  {trajectoryData.length > 0\n                    ? formatNumber(\n                        trajectoryData.reduce(\n                          (sum, p) => sum + p.free_energy,\n                          0,\n                        ) / trajectoryData.length,\n                      )\n                    : \"0\"}\n                </div>\n                <div className=\"text-sm text-gray-600\">Avg Free Energy</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-green-600\">\n                  {trajectoryData.length > 0\n                    ? formatNumber(\n                        trajectoryData.reduce((sum, p) => sum + p.entropy, 0) /\n                          trajectoryData.length,\n                      )\n                    : \"0\"}\n                </div>\n                <div className=\"text-sm text-gray-600\">Avg Entropy</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-purple-600\">\n                  {trajectoryData.filter((p) => p.decision_point).length}\n                </div>\n                <div className=\"text-sm text-gray-600\">Decisions Made</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-yellow-600\">\n                  {trajectoryData.length > 0\n                    ? formatNumber(\n                        trajectoryData.reduce(\n                          (sum, p) =>\n                            sum + p.numerical_precision.numerical_stability,\n                          0,\n                        ) / trajectoryData.length,\n                      )\n                    : \"0\"}\n                </div>\n                <div className=\"text-sm text-gray-600\">Avg Stability</div>\n              </div>\n            </div>\n\n            {/* Convergence Metrics */}\n            <div className=\"mt-6\">\n              <h4 className=\"font-medium mb-3\">Convergence Analysis</h4>\n              <div className=\"grid grid-cols-3 gap-4 text-sm\">\n                <div>\n                  <span className=\"font-medium\">Convergence Events:</span>\n                  <span className=\"ml-2 font-mono\">\n                    {\n                      trajectoryData.filter((p) => p.convergence_metric < 0.01)\n                        .length\n                    }\n                  </span>\n                </div>\n                <div>\n                  <span className=\"font-medium\">Avg Convergence Rate:</span>\n                  <span className=\"ml-2 font-mono\">\n                    {trajectoryData.length > 0\n                      ? formatNumber(\n                          trajectoryData.reduce(\n                            (sum, p) => sum + p.convergence_metric,\n                            0,\n                          ) / trajectoryData.length,\n                        )\n                      : \"0\"}\n                  </span>\n                </div>\n                <div>\n                  <span className=\"font-medium\">\n                    Numerical Stability Score:\n                  </span>\n                  <span className=\"ml-2 font-mono\">\n                    {trajectoryData.length > 0\n                      ? formatNumber(\n                          trajectoryData.reduce(\n                            (sum, p) =>\n                              sum +\n                              1.0 /\n                                (1.0 + p.numerical_precision.precision_error),\n                            0,\n                          ) / trajectoryData.length,\n                        )\n                      : \"0\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </Card>\n\n          {/* Export Summary */}\n          <Card className=\"p-4 mt-4 bg-green-50 border-green-200\">\n            <h3 className=\"text-lg font-semibold mb-3\">\n              Scientific Reporting Summary\n            </h3>\n            <div className=\"text-sm space-y-2\">\n              <div>\n                <span className=\"font-medium\">Total Analysis Duration:</span>\n                {trajectoryData.length > 1\n                  ? `${(\n                      (new Date(\n                        trajectoryData[trajectoryData.length - 1].timestamp,\n                      ).getTime() -\n                        new Date(trajectoryData[0].timestamp).getTime()) /\n                      1000\n                    ).toFixed(1)}s`\n                  : \"N/A\"}\n              </div>\n              <div>\n                <span className=\"font-medium\">Data Points Collected:</span>{\" \"}\n                {trajectoryData.length}\n              </div>\n              <div>\n                <span className=\"font-medium\">Decision Points Annotated:</span>{\" \"}\n                {trajectoryData.filter((p) => p.decision_point).length}\n              </div>\n              <div>\n                <span className=\"font-medium\">Mathematical Validation:</span>\n                <span className=\"text-green-600 ml-1\">✓ ADR-005 Compliant</span>\n              </div>\n              <div>\n                <span className=\"font-medium\">Expert Review Status:</span>\n                <span className=\"text-blue-600 ml-1\">\n                  Ready for Committee Review\n                </span>\n              </div>\n            </div>\n          </Card>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default BeliefTrajectoryDashboard;\n"],"names":["BeliefTrajectoryDashboard","trajectoryData","agentId","realTimeUpdates","exportEnabled","svgRef","useRef","selectedMetric","setSelectedMetric","useState","showDecisionPoints","setShowDecisionPoints","selectedTrajectoryPoint","setSelectedTrajectoryPoint","useEffect","current","length","svg","d3","select","selectAll","remove","width","height","margin","top","right","bottom","left","innerWidth","innerHeight","g","append","attr","timeExtent","extent","d","Date","timestamp","xScale","scaleTime","domain","range","yExtent","yScale","scaleLinear","line","x","y","curve","curveMonotoneX","area","y0","value","confidence","confidence_level","Math","abs","y1","datum","decisionPoints","filter","decision_point","data","enter","style","on","event","text","action_taken","substring","xAxis","axisBottom","tickFormat","timeFormat","yAxis","axisLeft","toFixed","call","replace","l","toUpperCase","exportTrajectoryData","exportData","agent_id","trajectory_data","export_timestamp","toISOString","analysis_parameters","selected_metric","show_decision_points","blob","Blob","JSON","stringify","type","url","URL","createObjectURL","a","document","createElement","href","download","slice","body","appendChild","click","removeChild","revokeObjectURL","formatNumber","precision","toExponential","div","className","Card","CardHeader","CardTitle","Badge","variant","CardContent","label","onChange","e","target","option","input","checked","Button","onClick","size","ref","border","h3","toLocaleString","span","free_energy","entropy","convergence_metric","h4","action_value","decision_confidence","reasoning","numerical_precision","sum_check","numerical_stability","condition_number","precision_error","reduce","sum","p","getTime"],"mappings":"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"}
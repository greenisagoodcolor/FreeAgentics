3b72eeac51a57df34765c5c9dd216ce2
"use strict";

/* istanbul ignore next */
function cov_h8r2pyvut() {
  var path = "/Users/matthewmoroney/builds/FreeAgentics/web/app/layout.tsx";
  var hash = "0504dbc70d15ab82bc2ad7c9eedc9d88bc93db22";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewmoroney/builds/FreeAgentics/web/app/layout.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 26
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 24
        }
      },
      "6": {
        start: {
          line: 19,
          column: 20
        },
        end: {
          line: 19,
          column: 48
        }
      },
      "7": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 20,
          column: 33
        }
      },
      "8": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 21,
          column: 39
        }
      },
      "9": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 43
        }
      },
      "10": {
        start: {
          line: 23,
          column: 23
        },
        end: {
          line: 23,
          column: 61
        }
      },
      "11": {
        start: {
          line: 24,
          column: 20
        },
        end: {
          line: 24,
          column: 54
        }
      },
      "12": {
        start: {
          line: 25,
          column: 26
        },
        end: {
          line: 25,
          column: 67
        }
      },
      "13": {
        start: {
          line: 26,
          column: 23
        },
        end: {
          line: 26,
          column: 60
        }
      },
      "14": {
        start: {
          line: 27,
          column: 14
        },
        end: {
          line: 32,
          column: 2
        }
      },
      "15": {
        start: {
          line: 33,
          column: 22
        },
        end: {
          line: 38,
          column: 2
        }
      },
      "16": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 62,
          column: 7
        }
      },
      "17": {
        start: {
          line: 64,
          column: 17
        },
        end: {
          line: 68,
          column: 1
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 13
          },
          end: {
            line: 12,
            column: 14
          }
        },
        loc: {
          start: {
            line: 12,
            column: 24
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 14
          },
          end: {
            line: 15,
            column: 15
          }
        },
        loc: {
          start: {
            line: 15,
            column: 25
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "RootLayout",
        decl: {
          start: {
            line: 39,
            column: 9
          },
          end: {
            line: 39,
            column: 19
          }
        },
        loc: {
          start: {
            line: 39,
            column: 34
          },
          end: {
            line: 63,
            column: 1
          }
        },
        line: 39
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {},
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matthewmoroney/builds/FreeAgentics/web/app/layout.tsx"],
      sourcesContent: ["import type React from \"react\";\nimport \"../styles/globals.css\";\nimport \"../styles/design-tokens.css\";\nimport { Inter, JetBrains_Mono } from \"next/font/google\";\nimport { ThemeProvider } from \"@/components/themeprovider\";\nimport { LLMProvider } from \"@/contexts/llm-context\";\nimport { IsSendingProvider } from \"@/contexts/is-sending-context\";\nimport { ReduxProvider } from \"@/providers/ReduxProvider\";\n\nconst inter = Inter({\n  subsets: [\"latin\"],\n  variable: \"--font-inter\",\n});\n\nconst jetbrainsMono = JetBrains_Mono({\n  subsets: [\"latin\"],\n  variable: \"--font-jetbrains-mono\",\n});\n\nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <html lang=\"en\" className=\"dark\">\n      <body\n        className={`${inter.variable} ${jetbrainsMono.variable} dark bg-[var(--bg-primary)] text-[var(--text-primary)]`}\n        style={{ fontFamily: \"var(--font-primary)\" }}\n      >\n        <ReduxProvider>\n          <ThemeProvider\n            attribute=\"class\"\n            defaultTheme=\"dark\"\n            enableSystem={false}\n            disableTransitionOnChange\n          >\n            <IsSendingProvider>\n              <LLMProvider>{children}</LLMProvider>\n            </IsSendingProvider>\n          </ThemeProvider>\n        </ReduxProvider>\n      </body>\n    </html>\n  );\n}\n\nexport const metadata = {\n  title: \"FreeAgentics - Multi-Agent AI Dashboard\",\n  description:\n    \"Professional Bloomberg-style dashboard for multi-agent AI systems\",\n  generator: \"Next.js\",\n};\n"],
      names: ["RootLayout", "metadata", "inter", "Inter", "subsets", "variable", "jetbrainsMono", "JetBrains_Mono", "children", "html", "lang", "className", "body", "style", "fontFamily", "ReduxProvider", "ThemeProvider", "attribute", "defaultTheme", "enableSystem", "disableTransitionOnChange", "IsSendingProvider", "LLMProvider", "title", "description", "generator"],
      mappings: ";;;;;;;;;;;IAmBA,OA0BC;eA1BuBA;;IA4BXC,QAAQ;eAARA;;;;QA9CN;QACA;wBAC+B;+BACR;4BACF;kCACM;+BACJ;AAE9B,MAAMC,QAAQC,IAAAA,aAAK,EAAC;IAClBC,SAAS;QAAC;KAAQ;IAClBC,UAAU;AACZ;AAEA,MAAMC,gBAAgBC,IAAAA,sBAAc,EAAC;IACnCH,SAAS;QAAC;KAAQ;IAClBC,UAAU;AACZ;AAEe,SAASL,WAAW,EACjCQ,QAAQ,EAGT;IACC,qBACE,qBAACC;QAAKC,MAAK;QAAKC,WAAU;kBACxB,cAAA,qBAACC;YACCD,WAAW,CAAC,EAAET,MAAMG,QAAQ,CAAC,CAAC,EAAEC,cAAcD,QAAQ,CAAC,uDAAuD,CAAC;YAC/GQ,OAAO;gBAAEC,YAAY;YAAsB;sBAE3C,cAAA,qBAACC,4BAAa;0BACZ,cAAA,qBAACC,4BAAa;oBACZC,WAAU;oBACVC,cAAa;oBACbC,cAAc;oBACdC,yBAAyB;8BAEzB,cAAA,qBAACC,mCAAiB;kCAChB,cAAA,qBAACC,uBAAW;sCAAEd;;;;;;;AAO5B;AAEO,MAAMP,WAAW;IACtBsB,OAAO;IACPC,aACE;IACFC,WAAW;AACb"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0504dbc70d15ab82bc2ad7c9eedc9d88bc93db22"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_h8r2pyvut = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_h8r2pyvut();
cov_h8r2pyvut().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_h8r2pyvut().f[0]++;
  cov_h8r2pyvut().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_h8r2pyvut().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_h8r2pyvut().s[3]++;
_export(exports, {
  default: function () {
    /* istanbul ignore next */
    cov_h8r2pyvut().f[1]++;
    cov_h8r2pyvut().s[4]++;
    return RootLayout;
  },
  metadata: function () {
    /* istanbul ignore next */
    cov_h8r2pyvut().f[2]++;
    cov_h8r2pyvut().s[5]++;
    return metadata;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_h8r2pyvut().s[6]++, require("react/jsx-runtime"));
/* istanbul ignore next */
cov_h8r2pyvut().s[7]++;
require("../styles/globals.css");
/* istanbul ignore next */
cov_h8r2pyvut().s[8]++;
require("../styles/design-tokens.css");
const _google =
/* istanbul ignore next */
(cov_h8r2pyvut().s[9]++, require("next/font/google"));
const _themeprovider =
/* istanbul ignore next */
(cov_h8r2pyvut().s[10]++, require("../components/themeprovider"));
const _llmcontext =
/* istanbul ignore next */
(cov_h8r2pyvut().s[11]++, require("../contexts/llm-context"));
const _issendingcontext =
/* istanbul ignore next */
(cov_h8r2pyvut().s[12]++, require("../contexts/is-sending-context"));
const _ReduxProvider =
/* istanbul ignore next */
(cov_h8r2pyvut().s[13]++, require("../providers/ReduxProvider"));
const inter =
/* istanbul ignore next */
(cov_h8r2pyvut().s[14]++, (0, _google.Inter)({
  subsets: ["latin"],
  variable: "--font-inter"
}));
const jetbrainsMono =
/* istanbul ignore next */
(cov_h8r2pyvut().s[15]++, (0, _google.JetBrains_Mono)({
  subsets: ["latin"],
  variable: "--font-jetbrains-mono"
}));
function RootLayout({
  children
}) {
  /* istanbul ignore next */
  cov_h8r2pyvut().f[3]++;
  cov_h8r2pyvut().s[16]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("html", {
    lang: "en",
    className: "dark",
    children: /*#__PURE__*/(0, _jsxruntime.jsx)("body", {
      className: `${inter.variable} ${jetbrainsMono.variable} dark bg-[var(--bg-primary)] text-[var(--text-primary)]`,
      style: {
        fontFamily: "var(--font-primary)"
      },
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_ReduxProvider.ReduxProvider, {
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_themeprovider.ThemeProvider, {
          attribute: "class",
          defaultTheme: "dark",
          enableSystem: false,
          disableTransitionOnChange: true,
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_issendingcontext.IsSendingProvider, {
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_llmcontext.LLMProvider, {
              children: children
            })
          })
        })
      })
    })
  });
}
const metadata =
/* istanbul ignore next */
(cov_h8r2pyvut().s[17]++, {
  title: "FreeAgentics - Multi-Agent AI Dashboard",
  description: "Professional Bloomberg-style dashboard for multi-agent AI systems",
  generator: "Next.js"
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkZWZhdWx0IiwiY292X2g4cjJweXZ1dCIsImYiLCJzIiwiUm9vdExheW91dCIsIm1ldGFkYXRhIiwiaW50ZXIiLCJfZ29vZ2xlIiwiSW50ZXIiLCJzdWJzZXRzIiwidmFyaWFibGUiLCJqZXRicmFpbnNNb25vIiwiSmV0QnJhaW5zX01vbm8iLCJjaGlsZHJlbiIsIl9qc3hydW50aW1lIiwianN4IiwibGFuZyIsImNsYXNzTmFtZSIsInN0eWxlIiwiZm9udEZhbWlseSIsIl9SZWR1eFByb3ZpZGVyIiwiUmVkdXhQcm92aWRlciIsIl90aGVtZXByb3ZpZGVyIiwiVGhlbWVQcm92aWRlciIsImF0dHJpYnV0ZSIsImRlZmF1bHRUaGVtZSIsImVuYWJsZVN5c3RlbSIsImRpc2FibGVUcmFuc2l0aW9uT25DaGFuZ2UiLCJfaXNzZW5kaW5nY29udGV4dCIsIklzU2VuZGluZ1Byb3ZpZGVyIiwiX2xsbWNvbnRleHQiLCJMTE1Qcm92aWRlciIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJnZW5lcmF0b3IiXSwic291cmNlcyI6WyIvVXNlcnMvbWF0dGhld21vcm9uZXkvYnVpbGRzL0ZyZWVBZ2VudGljcy93ZWIvYXBwL2xheW91dC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgXCIuLi9zdHlsZXMvZ2xvYmFscy5jc3NcIjtcbmltcG9ydCBcIi4uL3N0eWxlcy9kZXNpZ24tdG9rZW5zLmNzc1wiO1xuaW1wb3J0IHsgSW50ZXIsIEpldEJyYWluc19Nb25vIH0gZnJvbSBcIm5leHQvZm9udC9nb29nbGVcIjtcbmltcG9ydCB7IFRoZW1lUHJvdmlkZXIgfSBmcm9tIFwiQC9jb21wb25lbnRzL3RoZW1lcHJvdmlkZXJcIjtcbmltcG9ydCB7IExMTVByb3ZpZGVyIH0gZnJvbSBcIkAvY29udGV4dHMvbGxtLWNvbnRleHRcIjtcbmltcG9ydCB7IElzU2VuZGluZ1Byb3ZpZGVyIH0gZnJvbSBcIkAvY29udGV4dHMvaXMtc2VuZGluZy1jb250ZXh0XCI7XG5pbXBvcnQgeyBSZWR1eFByb3ZpZGVyIH0gZnJvbSBcIkAvcHJvdmlkZXJzL1JlZHV4UHJvdmlkZXJcIjtcblxuY29uc3QgaW50ZXIgPSBJbnRlcih7XG4gIHN1YnNldHM6IFtcImxhdGluXCJdLFxuICB2YXJpYWJsZTogXCItLWZvbnQtaW50ZXJcIixcbn0pO1xuXG5jb25zdCBqZXRicmFpbnNNb25vID0gSmV0QnJhaW5zX01vbm8oe1xuICBzdWJzZXRzOiBbXCJsYXRpblwiXSxcbiAgdmFyaWFibGU6IFwiLS1mb250LWpldGJyYWlucy1tb25vXCIsXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUm9vdExheW91dCh7XG4gIGNoaWxkcmVuLFxufToge1xuICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlO1xufSkge1xuICByZXR1cm4gKFxuICAgIDxodG1sIGxhbmc9XCJlblwiIGNsYXNzTmFtZT1cImRhcmtcIj5cbiAgICAgIDxib2R5XG4gICAgICAgIGNsYXNzTmFtZT17YCR7aW50ZXIudmFyaWFibGV9ICR7amV0YnJhaW5zTW9uby52YXJpYWJsZX0gZGFyayBiZy1bdmFyKC0tYmctcHJpbWFyeSldIHRleHQtW3ZhcigtLXRleHQtcHJpbWFyeSldYH1cbiAgICAgICAgc3R5bGU9e3sgZm9udEZhbWlseTogXCJ2YXIoLS1mb250LXByaW1hcnkpXCIgfX1cbiAgICAgID5cbiAgICAgICAgPFJlZHV4UHJvdmlkZXI+XG4gICAgICAgICAgPFRoZW1lUHJvdmlkZXJcbiAgICAgICAgICAgIGF0dHJpYnV0ZT1cImNsYXNzXCJcbiAgICAgICAgICAgIGRlZmF1bHRUaGVtZT1cImRhcmtcIlxuICAgICAgICAgICAgZW5hYmxlU3lzdGVtPXtmYWxzZX1cbiAgICAgICAgICAgIGRpc2FibGVUcmFuc2l0aW9uT25DaGFuZ2VcbiAgICAgICAgICA+XG4gICAgICAgICAgICA8SXNTZW5kaW5nUHJvdmlkZXI+XG4gICAgICAgICAgICAgIDxMTE1Qcm92aWRlcj57Y2hpbGRyZW59PC9MTE1Qcm92aWRlcj5cbiAgICAgICAgICAgIDwvSXNTZW5kaW5nUHJvdmlkZXI+XG4gICAgICAgICAgPC9UaGVtZVByb3ZpZGVyPlxuICAgICAgICA8L1JlZHV4UHJvdmlkZXI+XG4gICAgICA8L2JvZHk+XG4gICAgPC9odG1sPlxuICApO1xufVxuXG5leHBvcnQgY29uc3QgbWV0YWRhdGEgPSB7XG4gIHRpdGxlOiBcIkZyZWVBZ2VudGljcyAtIE11bHRpLUFnZW50IEFJIERhc2hib2FyZFwiLFxuICBkZXNjcmlwdGlvbjpcbiAgICBcIlByb2Zlc3Npb25hbCBCbG9vbWJlcmctc3R5bGUgZGFzaGJvYXJkIGZvciBtdWx0aS1hZ2VudCBBSSBzeXN0ZW1zXCIsXG4gIGdlbmVyYXRvcjogXCJOZXh0LmpzXCIsXG59O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztFQW1CQUEsT0EwQkMsV0FBQUEsQ0FBQTtJQUFBO0lBQUFDLGFBQUEsR0FBQUMsQ0FBQTtJQUFBRCxhQUFBLEdBQUFFLENBQUE7V0ExQnVCQyxVQUFBOztFQTRCWEMsUUFBUSxXQUFBQSxDQUFBO0lBQUE7SUFBQUosYUFBQSxHQUFBQyxDQUFBO0lBQUFELGFBQUEsR0FBQUUsQ0FBQTtXQUFSRSxRQUFBOzs7Ozs7OztRQTlDTjtBQUFBO0FBQUFKLGFBQUEsR0FBQUUsQ0FBQTtRQUNBOzs7aUNBQytCOzs7a0NBQ1I7OztrQ0FDRjs7O2tDQUNNOzs7a0NBQ0o7QUFFOUIsTUFBTUcsS0FBQTtBQUFBO0FBQUEsQ0FBQUwsYUFBQSxHQUFBRSxDQUFBLFFBQVEsSUFBQUksT0FBQSxDQUFBQyxLQUFLLEVBQUM7RUFDbEJDLE9BQUEsRUFBUyxDQUFDLFFBQVE7RUFDbEJDLFFBQUEsRUFBVTtBQUNaO0FBRUEsTUFBTUMsYUFBQTtBQUFBO0FBQUEsQ0FBQVYsYUFBQSxHQUFBRSxDQUFBLFFBQWdCLElBQUFJLE9BQUEsQ0FBQUssY0FBYyxFQUFDO0VBQ25DSCxPQUFBLEVBQVMsQ0FBQyxRQUFRO0VBQ2xCQyxRQUFBLEVBQVU7QUFDWjtBQUVlLFNBQVNOLFdBQVc7RUFDakNTO0FBQVEsQ0FHVDtFQUFBO0VBQUFaLGFBQUEsR0FBQUMsQ0FBQTtFQUFBRCxhQUFBLEdBQUFFLENBQUE7RUFDQyxvQkFDRSxJQUFBVyxXQUFBLENBQUFDLEdBQUEsRUFBQztJQUFLQyxJQUFBLEVBQUs7SUFBS0MsU0FBQSxFQUFVO2NBQ3hCLGlCQUFBSCxXQUFBLENBQUFDLEdBQUEsRUFBQztNQUNDRSxTQUFBLEVBQVcsR0FBR1gsS0FBQSxDQUFNSSxRQUFRLElBQUlDLGFBQUEsQ0FBY0QsUUFBUSx5REFBeUQ7TUFDL0dRLEtBQUEsRUFBTztRQUFFQyxVQUFBLEVBQVk7TUFBc0I7Z0JBRTNDLGlCQUFBTCxXQUFBLENBQUFDLEdBQUEsRUFBQ0ssY0FBQSxDQUFBQyxhQUFhO2tCQUNaLGlCQUFBUCxXQUFBLENBQUFDLEdBQUEsRUFBQ08sY0FBQSxDQUFBQyxhQUFhO1VBQ1pDLFNBQUEsRUFBVTtVQUNWQyxZQUFBLEVBQWE7VUFDYkMsWUFBQSxFQUFjO1VBQ2RDLHlCQUF5QjtvQkFFekIsaUJBQUFiLFdBQUEsQ0FBQUMsR0FBQSxFQUFDYSxpQkFBQSxDQUFBQyxpQkFBaUI7c0JBQ2hCLGlCQUFBZixXQUFBLENBQUFDLEdBQUEsRUFBQ2UsV0FBQSxDQUFBQyxXQUFXO3dCQUFFbEI7Ozs7Ozs7QUFPNUI7QUFFTyxNQUFNUixRQUFBO0FBQUE7QUFBQSxDQUFBSixhQUFBLEdBQUFFLENBQUEsUUFBVztFQUN0QjZCLEtBQUEsRUFBTztFQUNQQyxXQUFBLEVBQ0U7RUFDRkMsU0FBQSxFQUFXO0FBQ2IiLCJpZ25vcmVMaXN0IjpbXX0=
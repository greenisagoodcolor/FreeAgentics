{"version":3,"names":["cov_278inb5hl9","actualCoverage","s","AgentRelationshipNetwork","agents","f","canvasRef","_react","useRef","generateRelationships","useCallback","links","forEach","agent","i","numRelationships","Math","floor","random","j","targetIndex","length","b","existingLink","find","l","source","id","target","push","strength","useEffect","canvas","current","ctx","getContext","rect","getBoundingClientRect","width","height","centerX","centerY","radius","min","nodes","map","index","angle","PI","name","x","cos","y","sin","color","clearRect","link","sourceNode","n","targetNode","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","node","arc","fillStyle","fill","font","textAlign","fillText","gradient","createLinearGradient","addColorStop","fillRect","_jsxruntime","jsxs","className","jsx","_card","CardHeader","_lucidereact","Users","CardTitle","CardContent","ref"],"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/components/agent-relationship-network.tsx"],"sourcesContent":["\"use client\";\n\nimport { CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport type { Agent } from \"@/lib/types\";\nimport { Users } from \"lucide-react\";\nimport { useEffect, useRef, useCallback } from \"react\";\n\ninterface AgentRelationshipNetworkProps {\n  agents: Agent[];\n}\n\ninterface INetworkNode {\n  id: string;\n  name: string;\n  x: number;\n  y: number;\n  color: string;\n}\n\ninterface INetworkLink {\n  source: string;\n  target: string;\n  strength: number;\n}\n\nexport default function AgentRelationshipNetwork({\n  agents,\n}: AgentRelationshipNetworkProps) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  // Generate mock relationship data\n  const generateRelationships = useCallback((): INetworkLink[] => {\n    const links: INetworkLink[] = [];\n\n    // Create some random relationships between agents\n    agents.forEach((agent, i) => {\n      // Each agent has 1-3 relationships\n      const numRelationships = Math.floor(Math.random() * 3) + 1;\n\n      for (let j = 0; j < numRelationships; j++) {\n        const targetIndex = Math.floor(Math.random() * agents.length);\n        if (targetIndex !== i) {\n          const existingLink = links.find(\n            (l) =>\n              (l.source === agent.id && l.target === agents[targetIndex].id) ||\n              (l.target === agent.id && l.source === agents[targetIndex].id),\n          );\n\n          if (!existingLink) {\n            links.push({\n              source: agent.id,\n              target: agents[targetIndex].id,\n              strength: Math.random(),\n            });\n          }\n        }\n      }\n    });\n\n    return links;\n  }, [agents]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext(\"2d\");\n    if (!ctx) return;\n\n    // Set canvas size\n    const rect = canvas.getBoundingClientRect();\n    canvas.width = rect.width;\n    canvas.height = rect.height;\n\n    const centerX = canvas.width / 2;\n    const centerY = canvas.height / 2;\n    const radius = Math.min(centerX, centerY) - 50;\n\n    // Position nodes in a circle\n    const nodes: INetworkNode[] = agents.map((agent, index) => {\n      const angle = (index / agents.length) * 2 * Math.PI;\n      return {\n        id: agent.id,\n        name: agent.name,\n        x: centerX + radius * Math.cos(angle),\n        y: centerY + radius * Math.sin(angle),\n        color: agent.color,\n      };\n    });\n\n    const links = generateRelationships();\n\n    // Clear canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Draw links\n    links.forEach((link) => {\n      const sourceNode = nodes.find((n) => n.id === link.source);\n      const targetNode = nodes.find((n) => n.id === link.target);\n\n      if (sourceNode && targetNode) {\n        ctx.beginPath();\n        ctx.moveTo(sourceNode.x, sourceNode.y);\n        ctx.lineTo(targetNode.x, targetNode.y);\n        ctx.strokeStyle = `rgba(147, 51, 234, ${link.strength * 0.5})`; // Purple with varying opacity\n        ctx.lineWidth = link.strength * 3;\n        ctx.stroke();\n      }\n    });\n\n    // Draw nodes\n    nodes.forEach((node) => {\n      // Node circle\n      ctx.beginPath();\n      ctx.arc(node.x, node.y, 20, 0, 2 * Math.PI);\n      ctx.fillStyle = node.color;\n      ctx.fill();\n      ctx.strokeStyle = \"#ffffff\";\n      ctx.lineWidth = 2;\n      ctx.stroke();\n\n      // Node label\n      ctx.fillStyle = \"#ffffff\";\n      ctx.font = \"12px Arial\";\n      ctx.textAlign = \"center\";\n      ctx.fillText(node.name, node.x, node.y + 35);\n    });\n\n    // Draw legend\n    ctx.fillStyle = \"#ffffff\";\n    ctx.font = \"14px Arial\";\n    ctx.textAlign = \"left\";\n    ctx.fillText(\"Relationship Strength\", 20, 30);\n\n    // Legend gradient\n    const gradient = ctx.createLinearGradient(20, 40, 120, 40);\n    gradient.addColorStop(0, \"rgba(147, 51, 234, 0.1)\");\n    gradient.addColorStop(1, \"rgba(147, 51, 234, 0.5)\");\n    ctx.fillStyle = gradient;\n    ctx.fillRect(20, 40, 100, 10);\n\n    ctx.fillStyle = \"#ffffff\";\n    ctx.font = \"10px Arial\";\n    ctx.fillText(\"Weak\", 20, 65);\n    ctx.fillText(\"Strong\", 85, 65);\n  }, [agents, generateRelationships]);\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      <CardHeader>\n        <div className=\"flex items-center gap-2\">\n          <Users className=\"w-5 h-5\" />\n          <CardTitle>Agent Relationships</CardTitle>\n        </div>\n      </CardHeader>\n      <CardContent className=\"flex-1 relative\">\n        <canvas ref={canvasRef} className=\"absolute inset-0 w-full h-full\" />\n        <div className=\"absolute bottom-4 left-4 right-4 bg-black/50 backdrop-blur-sm rounded-lg p-4\">\n          <div className=\"grid grid-cols-2 gap-4 text-sm\">\n            <div>\n              <div className=\"text-muted-foreground\">Total Agents</div>\n              <div className=\"font-medium\">{agents.length}</div>\n            </div>\n            <div>\n              <div className=\"text-muted-foreground\">Active Relationships</div>\n              <div className=\"font-medium\">\n                {generateRelationships().length}\n              </div>\n            </div>\n          </div>\n        </div>\n      </CardContent>\n    </div>\n  );\n}\n"],"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","ignoreList":[]}
08de3a4640d6bafa08fed3444b95d424
"use strict";

/* istanbul ignore next */
function cov_12apd48kyz() {
  var path = "/Users/matthewmoroney/builds/FreeAgentics/web/lib/knowledge-retriever.ts";
  var hash = "c251b69bfb11b8adef5004b422ef8b8e7a14a6bc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewmoroney/builds/FreeAgentics/web/lib/knowledge-retriever.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 34
        }
      },
      "3": {
        start: {
          line: 15,
          column: 117
        },
        end: {
          line: 15,
          column: 124
        }
      },
      "4": {
        start: {
          line: 17,
          column: 32
        },
        end: {
          line: 17,
          column: 51
        }
      },
      "5": {
        start: {
          line: 18,
          column: 27
        },
        end: {
          line: 18,
          column: 61
        }
      },
      "6": {
        start: {
          line: 20,
          column: 34
        },
        end: {
          line: 49,
          column: 10
        }
      },
      "7": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 27,
          column: 13
        }
      },
      "8": {
        start: {
          line: 22,
          column: 65
        },
        end: {
          line: 22,
          column: 90
        }
      },
      "9": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 26,
          column: 18
        }
      },
      "10": {
        start: {
          line: 29,
          column: 27
        },
        end: {
          line: 29,
          column: 28
        }
      },
      "11": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 32,
          column: 13
        }
      },
      "12": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 31,
          column: 92
        }
      },
      "13": {
        start: {
          line: 31,
          column: 52
        },
        end: {
          line: 31,
          column: 77
        }
      },
      "14": {
        start: {
          line: 34,
          column: 24
        },
        end: {
          line: 34,
          column: 66
        }
      },
      "15": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 30
        }
      },
      "16": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 44,
          column: 13
        }
      },
      "17": {
        start: {
          line: 40,
          column: 42
        },
        end: {
          line: 40,
          column: 106
        }
      },
      "18": {
        start: {
          line: 42,
          column: 42
        },
        end: {
          line: 42,
          column: 89
        }
      },
      "19": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 43
        }
      },
      "20": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 48,
          column: 14
        }
      },
      "21": {
        start: {
          line: 51,
          column: 32
        },
        end: {
          line: 51,
          column: 150
        }
      },
      "22": {
        start: {
          line: 51,
          column: 65
        },
        end: {
          line: 51,
          column: 96
        }
      },
      "23": {
        start: {
          line: 51,
          column: 111
        },
        end: {
          line: 51,
          column: 128
        }
      },
      "24": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 56,
          column: 10
        }
      },
      "25": {
        start: {
          line: 54,
          column: 49
        },
        end: {
          line: 54,
          column: 59
        }
      },
      "26": {
        start: {
          line: 55,
          column: 57
        },
        end: {
          line: 55,
          column: 67
        }
      },
      "27": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 106
        }
      },
      "28": {
        start: {
          line: 62,
          column: 89
        },
        end: {
          line: 62,
          column: 104
        }
      },
      "29": {
        start: {
          line: 68,
          column: 27
        },
        end: {
          line: 68,
          column: 71
        }
      },
      "30": {
        start: {
          line: 69,
          column: 29
        },
        end: {
          line: 69,
          column: 75
        }
      },
      "31": {
        start: {
          line: 71,
          column: 29
        },
        end: {
          line: 71,
          column: 145
        }
      },
      "32": {
        start: {
          line: 71,
          column: 55
        },
        end: {
          line: 71,
          column: 137
        }
      },
      "33": {
        start: {
          line: 71,
          column: 84
        },
        end: {
          line: 71,
          column: 136
        }
      },
      "34": {
        start: {
          line: 72,
          column: 31
        },
        end: {
          line: 72,
          column: 155
        }
      },
      "35": {
        start: {
          line: 72,
          column: 57
        },
        end: {
          line: 72,
          column: 147
        }
      },
      "36": {
        start: {
          line: 72,
          column: 90
        },
        end: {
          line: 72,
          column: 146
        }
      },
      "37": {
        start: {
          line: 75,
          column: 32
        },
        end: {
          line: 75,
          column: 65
        }
      },
      "38": {
        start: {
          line: 77,
          column: 28
        },
        end: {
          line: 77,
          column: 50
        }
      },
      "39": {
        start: {
          line: 78,
          column: 22
        },
        end: {
          line: 78,
          column: 95
        }
      },
      "40": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 34
        }
      },
      "41": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 152
        }
      },
      "42": {
        start: {
          line: 84,
          column: 45
        },
        end: {
          line: 84,
          column: 69
        }
      },
      "43": {
        start: {
          line: 84,
          column: 84
        },
        end: {
          line: 84,
          column: 129
        }
      },
      "44": {
        start: {
          line: 89,
          column: 32
        },
        end: {
          line: 89,
          column: 51
        }
      },
      "45": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 94,
          column: 96
        }
      },
      "46": {
        start: {
          line: 90,
          column: 43
        },
        end: {
          line: 93,
          column: 13
        }
      },
      "47": {
        start: {
          line: 93,
          column: 31
        },
        end: {
          line: 93,
          column: 52
        }
      },
      "48": {
        start: {
          line: 94,
          column: 22
        },
        end: {
          line: 94,
          column: 49
        }
      },
      "49": {
        start: {
          line: 94,
          column: 84
        },
        end: {
          line: 94,
          column: 94
        }
      },
      "50": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 40
        }
      },
      "51": {
        start: {
          line: 100,
          column: 31
        },
        end: {
          line: 100,
          column: 40
        }
      },
      "52": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 101,
          column: 75
        }
      },
      "53": {
        start: {
          line: 101,
          column: 64
        },
        end: {
          line: 101,
          column: 75
        }
      },
      "54": {
        start: {
          line: 102,
          column: 23
        },
        end: {
          line: 102,
          column: 48
        }
      },
      "55": {
        start: {
          line: 103,
          column: 23
        },
        end: {
          line: 103,
          column: 48
        }
      },
      "56": {
        start: {
          line: 104,
          column: 28
        },
        end: {
          line: 104,
          column: 115
        }
      },
      "57": {
        start: {
          line: 104,
          column: 50
        },
        end: {
          line: 104,
          column: 107
        }
      },
      "58": {
        start: {
          line: 104,
          column: 68
        },
        end: {
          line: 104,
          column: 106
        }
      },
      "59": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 105,
          column: 71
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 6
          },
          end: {
            line: 14,
            column: 7
          }
        },
        loc: {
          start: {
            line: 14,
            column: 59
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 52
          },
          end: {
            line: 20,
            column: 53
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 49,
            column: 9
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 22,
            column: 58
          },
          end: {
            line: 22,
            column: 59
          }
        },
        loc: {
          start: {
            line: 22,
            column: 65
          },
          end: {
            line: 22,
            column: 90
          }
        },
        line: 22
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 31,
            column: 45
          },
          end: {
            line: 31,
            column: 46
          }
        },
        loc: {
          start: {
            line: 31,
            column: 52
          },
          end: {
            line: 31,
            column: 77
          }
        },
        line: 31
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 51,
            column: 57
          },
          end: {
            line: 51,
            column: 58
          }
        },
        loc: {
          start: {
            line: 51,
            column: 65
          },
          end: {
            line: 51,
            column: 96
          }
        },
        line: 51
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 51,
            column: 103
          },
          end: {
            line: 51,
            column: 104
          }
        },
        loc: {
          start: {
            line: 51,
            column: 111
          },
          end: {
            line: 51,
            column: 128
          }
        },
        line: 51
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 54,
            column: 41
          },
          end: {
            line: 54,
            column: 42
          }
        },
        loc: {
          start: {
            line: 54,
            column: 49
          },
          end: {
            line: 54,
            column: 59
          }
        },
        line: 54
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 55,
            column: 49
          },
          end: {
            line: 55,
            column: 50
          }
        },
        loc: {
          start: {
            line: 55,
            column: 57
          },
          end: {
            line: 55,
            column: 67
          }
        },
        line: 55
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 60,
            column: 6
          },
          end: {
            line: 60,
            column: 7
          }
        },
        loc: {
          start: {
            line: 60,
            column: 25
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 60
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 62,
            column: 81
          },
          end: {
            line: 62,
            column: 82
          }
        },
        loc: {
          start: {
            line: 62,
            column: 89
          },
          end: {
            line: 62,
            column: 104
          }
        },
        line: 62
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 66,
            column: 6
          },
          end: {
            line: 66,
            column: 7
          }
        },
        loc: {
          start: {
            line: 66,
            column: 44
          },
          end: {
            line: 80,
            column: 5
          }
        },
        line: 66
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 71,
            column: 47
          },
          end: {
            line: 71,
            column: 48
          }
        },
        loc: {
          start: {
            line: 71,
            column: 55
          },
          end: {
            line: 71,
            column: 137
          }
        },
        line: 71
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 71,
            column: 71
          },
          end: {
            line: 71,
            column: 72
          }
        },
        loc: {
          start: {
            line: 71,
            column: 84
          },
          end: {
            line: 71,
            column: 136
          }
        },
        line: 71
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 72,
            column: 49
          },
          end: {
            line: 72,
            column: 50
          }
        },
        loc: {
          start: {
            line: 72,
            column: 57
          },
          end: {
            line: 72,
            column: 147
          }
        },
        line: 72
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 72,
            column: 75
          },
          end: {
            line: 72,
            column: 76
          }
        },
        loc: {
          start: {
            line: 72,
            column: 90
          },
          end: {
            line: 72,
            column: 146
          }
        },
        line: 72
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 83,
            column: 6
          },
          end: {
            line: 83,
            column: 7
          }
        },
        loc: {
          start: {
            line: 83,
            column: 57
          },
          end: {
            line: 85,
            column: 5
          }
        },
        line: 83
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 84,
            column: 36
          },
          end: {
            line: 84,
            column: 37
          }
        },
        loc: {
          start: {
            line: 84,
            column: 45
          },
          end: {
            line: 84,
            column: 69
          }
        },
        line: 84
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 84,
            column: 76
          },
          end: {
            line: 84,
            column: 77
          }
        },
        loc: {
          start: {
            line: 84,
            column: 84
          },
          end: {
            line: 84,
            column: 129
          }
        },
        line: 84
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 88,
            column: 6
          },
          end: {
            line: 88,
            column: 7
          }
        },
        loc: {
          start: {
            line: 88,
            column: 60
          },
          end: {
            line: 95,
            column: 5
          }
        },
        line: 88
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 90,
            column: 33
          },
          end: {
            line: 90,
            column: 34
          }
        },
        loc: {
          start: {
            line: 90,
            column: 43
          },
          end: {
            line: 93,
            column: 13
          }
        },
        line: 90
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 93,
            column: 23
          },
          end: {
            line: 93,
            column: 24
          }
        },
        loc: {
          start: {
            line: 93,
            column: 31
          },
          end: {
            line: 93,
            column: 52
          }
        },
        line: 93
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 94,
            column: 14
          },
          end: {
            line: 94,
            column: 15
          }
        },
        loc: {
          start: {
            line: 94,
            column: 22
          },
          end: {
            line: 94,
            column: 49
          }
        },
        line: 94
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 94,
            column: 76
          },
          end: {
            line: 94,
            column: 77
          }
        },
        loc: {
          start: {
            line: 94,
            column: 84
          },
          end: {
            line: 94,
            column: 94
          }
        },
        line: 94
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 98,
            column: 6
          },
          end: {
            line: 98,
            column: 7
          }
        },
        loc: {
          start: {
            line: 98,
            column: 47
          },
          end: {
            line: 106,
            column: 5
          }
        },
        line: 98
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 104,
            column: 42
          },
          end: {
            line: 104,
            column: 43
          }
        },
        loc: {
          start: {
            line: 104,
            column: 50
          },
          end: {
            line: 104,
            column: 107
          }
        },
        line: 104
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 104,
            column: 62
          },
          end: {
            line: 104,
            column: 63
          }
        },
        loc: {
          start: {
            line: 104,
            column: 68
          },
          end: {
            line: 104,
            column: 106
          }
        },
        line: 104
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 45
          },
          end: {
            line: 14,
            column: 57
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 14,
            column: 55
          },
          end: {
            line: 14,
            column: 57
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 15,
            column: 16
          },
          end: {
            line: 15,
            column: 30
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 15,
            column: 29
          },
          end: {
            line: 15,
            column: 30
          }
        }],
        line: 15
      },
      "2": {
        loc: {
          start: {
            line: 15,
            column: 32
          },
          end: {
            line: 15,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 15,
            column: 52
          },
          end: {
            line: 15,
            column: 55
          }
        }],
        line: 15
      },
      "3": {
        loc: {
          start: {
            line: 15,
            column: 57
          },
          end: {
            line: 15,
            column: 73
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 15,
            column: 71
          },
          end: {
            line: 15,
            column: 73
          }
        }],
        line: 15
      },
      "4": {
        loc: {
          start: {
            line: 15,
            column: 75
          },
          end: {
            line: 15,
            column: 91
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 15,
            column: 89
          },
          end: {
            line: 15,
            column: 91
          }
        }],
        line: 15
      },
      "5": {
        loc: {
          start: {
            line: 15,
            column: 93
          },
          end: {
            line: 15,
            column: 112
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 15,
            column: 108
          },
          end: {
            line: 15,
            column: 112
          }
        }],
        line: 15
      },
      "6": {
        loc: {
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 27,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 27,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "7": {
        loc: {
          start: {
            line: 22,
            column: 16
          },
          end: {
            line: 22,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 16
          },
          end: {
            line: 22,
            column: 38
          }
        }, {
          start: {
            line: 22,
            column: 42
          },
          end: {
            line: 22,
            column: 91
          }
        }],
        line: 22
      },
      "8": {
        loc: {
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 32,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 32,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "9": {
        loc: {
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 44,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 44,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "10": {
        loc: {
          start: {
            line: 71,
            column: 84
          },
          end: {
            line: 71,
            column: 136
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 84
          },
          end: {
            line: 71,
            column: 108
          }
        }, {
          start: {
            line: 71,
            column: 112
          },
          end: {
            line: 71,
            column: 136
          }
        }],
        line: 71
      },
      "11": {
        loc: {
          start: {
            line: 72,
            column: 90
          },
          end: {
            line: 72,
            column: 146
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 90
          },
          end: {
            line: 72,
            column: 116
          }
        }, {
          start: {
            line: 72,
            column: 120
          },
          end: {
            line: 72,
            column: 146
          }
        }],
        line: 72
      },
      "12": {
        loc: {
          start: {
            line: 77,
            column: 28
          },
          end: {
            line: 77,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 77,
            column: 28
          },
          end: {
            line: 77,
            column: 45
          }
        }, {
          start: {
            line: 77,
            column: 49
          },
          end: {
            line: 77,
            column: 50
          }
        }],
        line: 77
      },
      "13": {
        loc: {
          start: {
            line: 83,
            column: 40
          },
          end: {
            line: 83,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 83,
            column: 53
          },
          end: {
            line: 83,
            column: 55
          }
        }],
        line: 83
      },
      "14": {
        loc: {
          start: {
            line: 88,
            column: 44
          },
          end: {
            line: 88,
            column: 58
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 88,
            column: 57
          },
          end: {
            line: 88,
            column: 58
          }
        }],
        line: 88
      },
      "15": {
        loc: {
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 100,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 100,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "16": {
        loc: {
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 101,
            column: 75
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 101,
            column: 75
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "17": {
        loc: {
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 101,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 101,
            column: 35
          }
        }, {
          start: {
            line: 101,
            column: 39
          },
          end: {
            line: 101,
            column: 62
          }
        }],
        line: 101
      },
      "18": {
        loc: {
          start: {
            line: 104,
            column: 68
          },
          end: {
            line: 104,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 68
          },
          end: {
            line: 104,
            column: 85
          }
        }, {
          start: {
            line: 104,
            column: 89
          },
          end: {
            line: 104,
            column: 106
          }
        }],
        line: 104
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0],
      "14": [0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matthewmoroney/builds/FreeAgentics/web/lib/knowledge-retriever.ts"],
      sourcesContent: ["import type { KnowledgeEntry } from \"@/lib/types\";\n\nexport interface RetrievalResult {\n  entries: KnowledgeEntry[];\n  relevanceScores: number[];\n}\n\nexport interface RetrievalOptions {\n  maxResults?: number;\n  minRelevanceScore?: number;\n  includeTags?: string[];\n  excludeTags?: string[];\n  recencyBoost?: boolean;\n}\n\nexport class KnowledgeRetriever {\n  /**\n   * Retrieves relevant knowledge entries based on a query\n   */\n  retrieveRelevant(\n    query: string,\n    knowledgeBase: KnowledgeEntry[],\n    options: RetrievalOptions = {},\n  ): RetrievalResult {\n    const {\n      maxResults = 5,\n      minRelevanceScore = 0.1,\n      includeTags = [],\n      excludeTags = [],\n      recencyBoost = true,\n    } = options;\n\n    // Normalize query for matching\n    const normalizedQuery = query.toLowerCase();\n    const queryTerms = this.extractTerms(normalizedQuery);\n\n    // Calculate relevance for each entry\n    const entriesWithScores = knowledgeBase.map((entry) => {\n      // Skip entries with excluded tags\n      if (\n        excludeTags.length > 0 &&\n        entry.tags.some((tag) => excludeTags.includes(tag))\n      ) {\n        return { entry, score: 0 };\n      }\n\n      // Boost entries with included tags\n      let tagBoost = 0;\n      if (includeTags.length > 0) {\n        tagBoost =\n          entry.tags.filter((tag) => includeTags.includes(tag)).length * 0.2;\n      }\n\n      // Calculate base relevance score\n      let score = this.calculateRelevance(queryTerms, entry);\n\n      // Apply tag boost\n      score += tagBoost;\n\n      // Apply recency boost if enabled\n      if (recencyBoost) {\n        // Calculate days since entry was created\n        const daysSinceCreation =\n          (Date.now() - entry.timestamp.getTime()) / (1000 * 60 * 60 * 24);\n        // Boost recent entries (max 0.2 boost for entries created today, decreasing over 30 days)\n        const recencyBoostValue = Math.max(\n          0,\n          0.2 * (1 - daysSinceCreation / 30),\n        );\n        score += recencyBoostValue;\n      }\n\n      return { entry, score };\n    });\n\n    // Filter by minimum relevance score and sort by relevance\n    const filteredEntries = entriesWithScores\n      .filter((item) => item.score >= minRelevanceScore)\n      .sort((a, b) => b.score - a.score)\n      .slice(0, maxResults);\n\n    // Return formatted result\n    return {\n      entries: filteredEntries.map((item) => item.entry),\n      relevanceScores: filteredEntries.map((item) => item.score),\n    };\n  }\n\n  /**\n   * Extracts terms from text for matching\n   */\n  private extractTerms(text: string): string[] {\n    // Remove punctuation and split by whitespace\n    return text\n      .replace(/[.,/#!$%^&*;:{}=\\-_`~()]/g, \"\")\n      .split(/\\s+/)\n      .filter((term) => term.length > 2); // Filter out very short terms\n  }\n\n  /**\n   * Calculates relevance score between query terms and a knowledge entry\n   */\n  private calculateRelevance(\n    queryTerms: string[],\n    entry: KnowledgeEntry,\n  ): number {\n    // Extract terms from entry title and content\n    const titleTerms = this.extractTerms(entry.title.toLowerCase());\n    const contentTerms = this.extractTerms(entry.content.toLowerCase());\n\n    // Count matching terms in title (with higher weight) and content\n    const titleMatches = queryTerms.filter((term) =>\n      titleTerms.some(\n        (titleTerm) => titleTerm.includes(term) || term.includes(titleTerm),\n      ),\n    ).length;\n\n    const contentMatches = queryTerms.filter((term) =>\n      contentTerms.some(\n        (contentTerm) =>\n          contentTerm.includes(term) || term.includes(contentTerm),\n      ),\n    ).length;\n\n    // Calculate weighted score\n    // Title matches are weighted 3x more than content matches\n    const weightedMatches = titleMatches * 3 + contentMatches;\n\n    // Normalize by query length with a slight boost for multiple matches\n    const queryLength = queryTerms.length || 1; // Avoid division by zero\n    const score =\n      (weightedMatches / queryLength) *\n      (1 + Math.min(weightedMatches, 5) * 0.05);\n\n    return Math.min(1, score); // Cap at 1.0\n  }\n\n  /**\n   * Retrieves knowledge entries by tag\n   */\n  retrieveByTag(\n    tag: string,\n    knowledgeBase: KnowledgeEntry[],\n    maxResults = 10,\n  ): KnowledgeEntry[] {\n    return knowledgeBase\n      .filter((entry) => entry.tags.includes(tag))\n      .sort((a, b) => b.timestamp.getTime() - a.timestamp.getTime())\n      .slice(0, maxResults);\n  }\n\n  /**\n   * Retrieves knowledge entries by title similarity\n   */\n  retrieveByTitle(\n    title: string,\n    knowledgeBase: KnowledgeEntry[],\n    maxResults = 5,\n  ): KnowledgeEntry[] {\n    const normalizedTitle = title.toLowerCase();\n\n    return knowledgeBase\n      .map((entry) => ({\n        entry,\n        similarity: this.calculateTitleSimilarity(\n          normalizedTitle,\n          entry.title.toLowerCase(),\n        ),\n      }))\n      .filter((item) => item.similarity > 0.3) // Minimum similarity threshold\n      .sort((a, b) => b.similarity - a.similarity)\n      .slice(0, maxResults)\n      .map((item) => item.entry);\n  }\n\n  /**\n   * Calculates simple similarity between two titles\n   */\n  private calculateTitleSimilarity(title1: string, title2: string): number {\n    // Simple implementation - can be enhanced with more sophisticated algorithms\n    if (title1 === title2) return 1;\n    if (title1.includes(title2) || title2.includes(title1)) return 0.8;\n\n    const terms1 = this.extractTerms(title1);\n    const terms2 = this.extractTerms(title2);\n\n    const commonTerms = terms1.filter((term) =>\n      terms2.some((t2) => t2.includes(term) || term.includes(t2)),\n    ).length;\n\n    return commonTerms / Math.max(terms1.length, terms2.length, 1);\n  }\n}\n"],
      names: ["KnowledgeRetriever", "retrieveRelevant", "query", "knowledgeBase", "options", "maxResults", "minRelevanceScore", "includeTags", "excludeTags", "recencyBoost", "normalizedQuery", "toLowerCase", "queryTerms", "extractTerms", "entriesWithScores", "map", "entry", "length", "tags", "some", "tag", "includes", "score", "tagBoost", "filter", "calculateRelevance", "daysSinceCreation", "Date", "now", "timestamp", "getTime", "recencyBoostValue", "Math", "max", "filteredEntries", "item", "sort", "a", "b", "slice", "entries", "relevanceScores", "text", "replace", "split", "term", "titleTerms", "title", "contentTerms", "content", "titleMatches", "titleTerm", "contentMatches", "contentTerm", "weightedMatches", "queryLength", "min", "retrieveByTag", "retrieveByTitle", "normalizedTitle", "similarity", "calculateTitleSimilarity", "title1", "title2", "terms1", "terms2", "commonTerms", "t2"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c251b69bfb11b8adef5004b422ef8b8e7a14a6bc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_12apd48kyz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_12apd48kyz();
cov_12apd48kyz().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_12apd48kyz().s[1]++;
Object.defineProperty(exports, "KnowledgeRetriever", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_12apd48kyz().f[0]++;
    cov_12apd48kyz().s[2]++;
    return KnowledgeRetriever;
  }
});
class KnowledgeRetriever {
  /**
  * Retrieves relevant knowledge entries based on a query
  */
  retrieveRelevant(query, knowledgeBase, options =
  /* istanbul ignore next */
  (cov_12apd48kyz().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_12apd48kyz().f[1]++;
    const {
      maxResults =
      /* istanbul ignore next */
      (cov_12apd48kyz().b[1][0]++, 5),
      minRelevanceScore =
      /* istanbul ignore next */
      (cov_12apd48kyz().b[2][0]++, 0.1),
      includeTags =
      /* istanbul ignore next */
      (cov_12apd48kyz().b[3][0]++, []),
      excludeTags =
      /* istanbul ignore next */
      (cov_12apd48kyz().b[4][0]++, []),
      recencyBoost =
      /* istanbul ignore next */
      (cov_12apd48kyz().b[5][0]++, true)
    } =
    /* istanbul ignore next */
    (cov_12apd48kyz().s[3]++, options);
    // Normalize query for matching
    const normalizedQuery =
    /* istanbul ignore next */
    (cov_12apd48kyz().s[4]++, query.toLowerCase());
    const queryTerms =
    /* istanbul ignore next */
    (cov_12apd48kyz().s[5]++, this.extractTerms(normalizedQuery));
    // Calculate relevance for each entry
    const entriesWithScores =
    /* istanbul ignore next */
    (cov_12apd48kyz().s[6]++, knowledgeBase.map(entry => {
      /* istanbul ignore next */
      cov_12apd48kyz().f[2]++;
      cov_12apd48kyz().s[7]++;
      // Skip entries with excluded tags
      if (
      /* istanbul ignore next */
      (cov_12apd48kyz().b[7][0]++, excludeTags.length > 0) &&
      /* istanbul ignore next */
      (cov_12apd48kyz().b[7][1]++, entry.tags.some(tag => {
        /* istanbul ignore next */
        cov_12apd48kyz().f[3]++;
        cov_12apd48kyz().s[8]++;
        return excludeTags.includes(tag);
      }))) {
        /* istanbul ignore next */
        cov_12apd48kyz().b[6][0]++;
        cov_12apd48kyz().s[9]++;
        return {
          entry,
          score: 0
        };
      } else
      /* istanbul ignore next */
      {
        cov_12apd48kyz().b[6][1]++;
      }
      // Boost entries with included tags
      let tagBoost =
      /* istanbul ignore next */
      (cov_12apd48kyz().s[10]++, 0);
      /* istanbul ignore next */
      cov_12apd48kyz().s[11]++;
      if (includeTags.length > 0) {
        /* istanbul ignore next */
        cov_12apd48kyz().b[8][0]++;
        cov_12apd48kyz().s[12]++;
        tagBoost = entry.tags.filter(tag => {
          /* istanbul ignore next */
          cov_12apd48kyz().f[4]++;
          cov_12apd48kyz().s[13]++;
          return includeTags.includes(tag);
        }).length * 0.2;
      } else
      /* istanbul ignore next */
      {
        cov_12apd48kyz().b[8][1]++;
      }
      // Calculate base relevance score
      let score =
      /* istanbul ignore next */
      (cov_12apd48kyz().s[14]++, this.calculateRelevance(queryTerms, entry));
      // Apply tag boost
      /* istanbul ignore next */
      cov_12apd48kyz().s[15]++;
      score += tagBoost;
      // Apply recency boost if enabled
      /* istanbul ignore next */
      cov_12apd48kyz().s[16]++;
      if (recencyBoost) {
        /* istanbul ignore next */
        cov_12apd48kyz().b[9][0]++;
        // Calculate days since entry was created
        const daysSinceCreation =
        /* istanbul ignore next */
        (cov_12apd48kyz().s[17]++, (Date.now() - entry.timestamp.getTime()) / (1000 * 60 * 60 * 24));
        // Boost recent entries (max 0.2 boost for entries created today, decreasing over 30 days)
        const recencyBoostValue =
        /* istanbul ignore next */
        (cov_12apd48kyz().s[18]++, Math.max(0, 0.2 * (1 - daysSinceCreation / 30)));
        /* istanbul ignore next */
        cov_12apd48kyz().s[19]++;
        score += recencyBoostValue;
      } else
      /* istanbul ignore next */
      {
        cov_12apd48kyz().b[9][1]++;
      }
      cov_12apd48kyz().s[20]++;
      return {
        entry,
        score
      };
    }));
    // Filter by minimum relevance score and sort by relevance
    const filteredEntries =
    /* istanbul ignore next */
    (cov_12apd48kyz().s[21]++, entriesWithScores.filter(item => {
      /* istanbul ignore next */
      cov_12apd48kyz().f[5]++;
      cov_12apd48kyz().s[22]++;
      return item.score >= minRelevanceScore;
    }).sort((a, b) => {
      /* istanbul ignore next */
      cov_12apd48kyz().f[6]++;
      cov_12apd48kyz().s[23]++;
      return b.score - a.score;
    }).slice(0, maxResults));
    // Return formatted result
    /* istanbul ignore next */
    cov_12apd48kyz().s[24]++;
    return {
      entries: filteredEntries.map(item => {
        /* istanbul ignore next */
        cov_12apd48kyz().f[7]++;
        cov_12apd48kyz().s[25]++;
        return item.entry;
      }),
      relevanceScores: filteredEntries.map(item => {
        /* istanbul ignore next */
        cov_12apd48kyz().f[8]++;
        cov_12apd48kyz().s[26]++;
        return item.score;
      })
    };
  }
  /**
  * Extracts terms from text for matching
  */
  extractTerms(text) {
    /* istanbul ignore next */
    cov_12apd48kyz().f[9]++;
    cov_12apd48kyz().s[27]++;
    // Remove punctuation and split by whitespace
    return text.replace(/[.,/#!$%^&*;:{}=\-_`~()]/g, "").split(/\s+/).filter(term => {
      /* istanbul ignore next */
      cov_12apd48kyz().f[10]++;
      cov_12apd48kyz().s[28]++;
      return term.length > 2;
    }); // Filter out very short terms
  }
  /**
  * Calculates relevance score between query terms and a knowledge entry
  */
  calculateRelevance(queryTerms, entry) {
    /* istanbul ignore next */
    cov_12apd48kyz().f[11]++;
    // Extract terms from entry title and content
    const titleTerms =
    /* istanbul ignore next */
    (cov_12apd48kyz().s[29]++, this.extractTerms(entry.title.toLowerCase()));
    const contentTerms =
    /* istanbul ignore next */
    (cov_12apd48kyz().s[30]++, this.extractTerms(entry.content.toLowerCase()));
    // Count matching terms in title (with higher weight) and content
    const titleMatches =
    /* istanbul ignore next */
    (cov_12apd48kyz().s[31]++, queryTerms.filter(term => {
      /* istanbul ignore next */
      cov_12apd48kyz().f[12]++;
      cov_12apd48kyz().s[32]++;
      return titleTerms.some(titleTerm => {
        /* istanbul ignore next */
        cov_12apd48kyz().f[13]++;
        cov_12apd48kyz().s[33]++;
        return /* istanbul ignore next */(cov_12apd48kyz().b[10][0]++, titleTerm.includes(term)) ||
        /* istanbul ignore next */
        (cov_12apd48kyz().b[10][1]++, term.includes(titleTerm));
      });
    }).length);
    const contentMatches =
    /* istanbul ignore next */
    (cov_12apd48kyz().s[34]++, queryTerms.filter(term => {
      /* istanbul ignore next */
      cov_12apd48kyz().f[14]++;
      cov_12apd48kyz().s[35]++;
      return contentTerms.some(contentTerm => {
        /* istanbul ignore next */
        cov_12apd48kyz().f[15]++;
        cov_12apd48kyz().s[36]++;
        return /* istanbul ignore next */(cov_12apd48kyz().b[11][0]++, contentTerm.includes(term)) ||
        /* istanbul ignore next */
        (cov_12apd48kyz().b[11][1]++, term.includes(contentTerm));
      });
    }).length);
    // Calculate weighted score
    // Title matches are weighted 3x more than content matches
    const weightedMatches =
    /* istanbul ignore next */
    (cov_12apd48kyz().s[37]++, titleMatches * 3 + contentMatches);
    // Normalize by query length with a slight boost for multiple matches
    const queryLength =
    /* istanbul ignore next */
    (cov_12apd48kyz().s[38]++,
    /* istanbul ignore next */
    (cov_12apd48kyz().b[12][0]++, queryTerms.length) ||
    /* istanbul ignore next */
    (cov_12apd48kyz().b[12][1]++, 1)); // Avoid division by zero
    const score =
    /* istanbul ignore next */
    (cov_12apd48kyz().s[39]++, weightedMatches / queryLength * (1 + Math.min(weightedMatches, 5) * 0.05));
    /* istanbul ignore next */
    cov_12apd48kyz().s[40]++;
    return Math.min(1, score); // Cap at 1.0
  }
  /**
  * Retrieves knowledge entries by tag
  */
  retrieveByTag(tag, knowledgeBase, maxResults =
  /* istanbul ignore next */
  (cov_12apd48kyz().b[13][0]++, 10)) {
    /* istanbul ignore next */
    cov_12apd48kyz().f[16]++;
    cov_12apd48kyz().s[41]++;
    return knowledgeBase.filter(entry => {
      /* istanbul ignore next */
      cov_12apd48kyz().f[17]++;
      cov_12apd48kyz().s[42]++;
      return entry.tags.includes(tag);
    }).sort((a, b) => {
      /* istanbul ignore next */
      cov_12apd48kyz().f[18]++;
      cov_12apd48kyz().s[43]++;
      return b.timestamp.getTime() - a.timestamp.getTime();
    }).slice(0, maxResults);
  }
  /**
  * Retrieves knowledge entries by title similarity
  */
  retrieveByTitle(title, knowledgeBase, maxResults =
  /* istanbul ignore next */
  (cov_12apd48kyz().b[14][0]++, 5)) {
    /* istanbul ignore next */
    cov_12apd48kyz().f[19]++;
    const normalizedTitle =
    /* istanbul ignore next */
    (cov_12apd48kyz().s[44]++, title.toLowerCase());
    /* istanbul ignore next */
    cov_12apd48kyz().s[45]++;
    return knowledgeBase.map(entry => {
      /* istanbul ignore next */
      cov_12apd48kyz().f[20]++;
      cov_12apd48kyz().s[46]++;
      return {
        entry,
        similarity: this.calculateTitleSimilarity(normalizedTitle, entry.title.toLowerCase())
      };
    }).filter(item => {
      /* istanbul ignore next */
      cov_12apd48kyz().f[21]++;
      cov_12apd48kyz().s[47]++;
      return item.similarity > 0.3;
    }) // Minimum similarity threshold
    .sort((a, b) => {
      /* istanbul ignore next */
      cov_12apd48kyz().f[22]++;
      cov_12apd48kyz().s[48]++;
      return b.similarity - a.similarity;
    }).slice(0, maxResults).map(item => {
      /* istanbul ignore next */
      cov_12apd48kyz().f[23]++;
      cov_12apd48kyz().s[49]++;
      return item.entry;
    });
  }
  /**
  * Calculates simple similarity between two titles
  */
  calculateTitleSimilarity(title1, title2) {
    /* istanbul ignore next */
    cov_12apd48kyz().f[24]++;
    cov_12apd48kyz().s[50]++;
    // Simple implementation - can be enhanced with more sophisticated algorithms
    if (title1 === title2) {
      /* istanbul ignore next */
      cov_12apd48kyz().b[15][0]++;
      cov_12apd48kyz().s[51]++;
      return 1;
    } else
    /* istanbul ignore next */
    {
      cov_12apd48kyz().b[15][1]++;
    }
    cov_12apd48kyz().s[52]++;
    if (
    /* istanbul ignore next */
    (cov_12apd48kyz().b[17][0]++, title1.includes(title2)) ||
    /* istanbul ignore next */
    (cov_12apd48kyz().b[17][1]++, title2.includes(title1))) {
      /* istanbul ignore next */
      cov_12apd48kyz().b[16][0]++;
      cov_12apd48kyz().s[53]++;
      return 0.8;
    } else
    /* istanbul ignore next */
    {
      cov_12apd48kyz().b[16][1]++;
    }
    const terms1 =
    /* istanbul ignore next */
    (cov_12apd48kyz().s[54]++, this.extractTerms(title1));
    const terms2 =
    /* istanbul ignore next */
    (cov_12apd48kyz().s[55]++, this.extractTerms(title2));
    const commonTerms =
    /* istanbul ignore next */
    (cov_12apd48kyz().s[56]++, terms1.filter(term => {
      /* istanbul ignore next */
      cov_12apd48kyz().f[25]++;
      cov_12apd48kyz().s[57]++;
      return terms2.some(t2 => {
        /* istanbul ignore next */
        cov_12apd48kyz().f[26]++;
        cov_12apd48kyz().s[58]++;
        return /* istanbul ignore next */(cov_12apd48kyz().b[18][0]++, t2.includes(term)) ||
        /* istanbul ignore next */
        (cov_12apd48kyz().b[18][1]++, term.includes(t2));
      });
    }).length);
    /* istanbul ignore next */
    cov_12apd48kyz().s[59]++;
    return commonTerms / Math.max(terms1.length, terms2.length, 1);
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
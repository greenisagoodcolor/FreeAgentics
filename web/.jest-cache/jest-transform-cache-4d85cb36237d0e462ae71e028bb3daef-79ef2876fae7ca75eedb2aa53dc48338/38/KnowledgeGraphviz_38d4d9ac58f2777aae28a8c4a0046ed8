10a687f10d8c3eba8f02247beb354580
"use client";
"use strict";

/* istanbul ignore next */
function cov_wjy0lidu3() {
  var path = "/Users/matthewmoroney/builds/FreeAgentics/web/components/KnowledgeGraph-viz.tsx";
  var hash = "773730d17f7724e536e8d7dd5a9e40cb6291edf2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewmoroney/builds/FreeAgentics/web/components/KnowledgeGraph-viz.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 33
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 38
        },
        end: {
          line: 13,
          column: 91
        }
      },
      "5": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 17,
          column: 6
        }
      },
      "6": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 26,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 14,
            column: 9
          },
          end: {
            line: 14,
            column: 33
          }
        },
        loc: {
          start: {
            line: 14,
            column: 39
          },
          end: {
            line: 18,
            column: 1
          }
        },
        line: 14
      },
      "2": {
        name: "KnowledgeGraphViz",
        decl: {
          start: {
            line: 19,
            column: 9
          },
          end: {
            line: 19,
            column: 26
          }
        },
        loc: {
          start: {
            line: 19,
            column: 54
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 24,
            column: 23
          },
          end: {
            line: 24,
            column: 24
          }
        },
        loc: {
          start: {
            line: 24,
            column: 27
          },
          end: {
            line: 24,
            column: 29
          }
        },
        line: 24
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 17,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 15,
            column: 35
          },
          end: {
            line: 15,
            column: 38
          }
        }, {
          start: {
            line: 15,
            column: 41
          },
          end: {
            line: 17,
            column: 5
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 15,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 15,
            column: 14
          }
        }, {
          start: {
            line: 15,
            column: 18
          },
          end: {
            line: 15,
            column: 32
          }
        }],
        line: 15
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matthewmoroney/builds/FreeAgentics/web/components/KnowledgeGraph-viz.tsx"],
      sourcesContent: ["\"use client\";\n\nimport KnowledgeGraph from \"@/components/KnowledgeGraph\";\n\ninterface KnowledgeGraphVizProps {\n  agentId?: string;\n  mode?: \"individual\" | \"collective\";\n  filter?: string;\n}\n\nexport function KnowledgeGraphViz({\n  agentId,\n  mode,\n  filter,\n}: KnowledgeGraphVizProps) {\n  // This is a wrapper component that uses the existing KnowledgeGraph\n  // Props are passed for future implementation\n  return (\n    <KnowledgeGraph\n      knowledge={[]}\n      onSelectEntry={() => {}}\n      selectedEntry={null}\n    />\n  );\n}\n"],
      names: ["KnowledgeGraphViz", "agentId", "mode", "filter", "KnowledgeGraph", "knowledge", "onSelectEntry", "selectedEntry"],
      mappings: "AAAA;;;;;+BAUgBA;;;eAAAA;;;;uEARW;;;;;;AAQpB,SAASA,kBAAkB,EAChCC,OAAO,EACPC,IAAI,EACJC,MAAM,EACiB;IACvB,oEAAoE;IACpE,6CAA6C;IAC7C,qBACE,qBAACC,uBAAc;QACbC,WAAW,EAAE;QACbC,eAAe,KAAO;QACtBC,eAAe;;AAGrB"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "773730d17f7724e536e8d7dd5a9e40cb6291edf2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_wjy0lidu3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_wjy0lidu3();
cov_wjy0lidu3().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_wjy0lidu3().s[1]++;
Object.defineProperty(exports, "KnowledgeGraphViz", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_wjy0lidu3().f[0]++;
    cov_wjy0lidu3().s[2]++;
    return KnowledgeGraphViz;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_wjy0lidu3().s[3]++, require("react/jsx-runtime"));
const _KnowledgeGraph =
/* istanbul ignore next */
(/*#__PURE__*/cov_wjy0lidu3().s[4]++, _interop_require_default(require("./KnowledgeGraph")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_wjy0lidu3().f[1]++;
  cov_wjy0lidu3().s[5]++;
  return /* istanbul ignore next */(cov_wjy0lidu3().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_wjy0lidu3().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_wjy0lidu3().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_wjy0lidu3().b[0][1]++, {
    default: obj
  });
}
function KnowledgeGraphViz({
  agentId,
  mode,
  filter
}) {
  /* istanbul ignore next */
  cov_wjy0lidu3().f[2]++;
  cov_wjy0lidu3().s[6]++;
  // This is a wrapper component that uses the existing KnowledgeGraph
  // Props are passed for future implementation
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_KnowledgeGraph.default, {
    knowledge: [],
    onSelectEntry: () => {
      /* istanbul ignore next */
      cov_wjy0lidu3().f[3]++;
    },
    selectedEntry: null
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJLbm93bGVkZ2VHcmFwaFZpeiIsImFnZW50SWQiLCJtb2RlIiwiZmlsdGVyIiwiY292X3dqeTBsaWR1MyIsImYiLCJzIiwiX2pzeHJ1bnRpbWUiLCJqc3giLCJfS25vd2xlZGdlR3JhcGgiLCJkZWZhdWx0Iiwia25vd2xlZGdlIiwib25TZWxlY3RFbnRyeSIsInNlbGVjdGVkRW50cnkiXSwic291cmNlcyI6WyIvVXNlcnMvbWF0dGhld21vcm9uZXkvYnVpbGRzL0ZyZWVBZ2VudGljcy93ZWIvY29tcG9uZW50cy9Lbm93bGVkZ2VHcmFwaC12aXoudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgS25vd2xlZGdlR3JhcGggZnJvbSBcIkAvY29tcG9uZW50cy9Lbm93bGVkZ2VHcmFwaFwiO1xuXG5pbnRlcmZhY2UgS25vd2xlZGdlR3JhcGhWaXpQcm9wcyB7XG4gIGFnZW50SWQ/OiBzdHJpbmc7XG4gIG1vZGU/OiBcImluZGl2aWR1YWxcIiB8IFwiY29sbGVjdGl2ZVwiO1xuICBmaWx0ZXI/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBLbm93bGVkZ2VHcmFwaFZpeih7XG4gIGFnZW50SWQsXG4gIG1vZGUsXG4gIGZpbHRlcixcbn06IEtub3dsZWRnZUdyYXBoVml6UHJvcHMpIHtcbiAgLy8gVGhpcyBpcyBhIHdyYXBwZXIgY29tcG9uZW50IHRoYXQgdXNlcyB0aGUgZXhpc3RpbmcgS25vd2xlZGdlR3JhcGhcbiAgLy8gUHJvcHMgYXJlIHBhc3NlZCBmb3IgZnV0dXJlIGltcGxlbWVudGF0aW9uXG4gIHJldHVybiAoXG4gICAgPEtub3dsZWRnZUdyYXBoXG4gICAgICBrbm93bGVkZ2U9e1tdfVxuICAgICAgb25TZWxlY3RFbnRyeT17KCkgPT4ge319XG4gICAgICBzZWxlY3RlZEVudHJ5PXtudWxsfVxuICAgIC8+XG4gICk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytCQVVnQjs7Ozs7O1dBQUFBLGlCQUFBOzs7Ozs7Ozt1RUFSVzs7Ozs7Ozs7Ozs7Ozs7O0FBUXBCLFNBQVNBLGtCQUFrQjtFQUNoQ0MsT0FBTztFQUNQQyxJQUFJO0VBQ0pDO0FBQU0sQ0FDaUI7RUFBQTtFQUFBQyxhQUFBLEdBQUFDLENBQUE7RUFBQUQsYUFBQSxHQUFBRSxDQUFBO0VBQ3ZCO0VBQ0E7RUFDQSxvQkFDRSxJQUFBQyxXQUFBLENBQUFDLEdBQUEsRUFBQ0MsZUFBQSxDQUFBQyxPQUFjO0lBQ2JDLFNBQUEsRUFBVyxFQUFFO0lBQ2JDLGFBQUEsRUFBZUEsQ0FBQTtNQUFBO01BQUFSLGFBQUEsR0FBQUMsQ0FBQTtJQUFPO0lBQ3RCUSxhQUFBLEVBQWU7O0FBR3JCIiwiaWdub3JlTGlzdCI6W119
2979b95fb3855fe02f08b8a4384c8a85
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    OptimizedConversationDashboard: function() {
        return OptimizedConversationDashboard;
    },
    // Export with smart memoization
    default: function() {
        return _default;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _card = require("../ui/card");
const _button = require("../ui/button");
const _badge = require("../ui/badge");
const _tabs = require("../ui/tabs");
const _resizable = require("../ui/resizable");
const _tooltip = require("../ui/tooltip");
const _conversationsearch = require("./conversation-search");
const _messagequeuevisualization = require("./message-queue-visualization");
const _virtualizedmessagelist = require("./virtualized-message-list");
const _useAutoScroll = require("../../hooks/useAutoScroll");
const _useConversationWebSocket = require("../../hooks/useConversationWebSocket");
const _usePerformanceMonitor = require("../../hooks/usePerformanceMonitor");
const _memoization = require("../../lib/performance/memoization");
const _lucidereact = require("lucide-react");
const _utils = require("../../lib/utils");
const _datefns = require("date-fns");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
// Memoized conversation list item
const ConversationListItem = /*#__PURE__*/ (0, _react.memo)(({ conversation, isSelected, onClick })=>{
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.Card, {
        className: (0, _utils.cn)("cursor-pointer transition-all hover:shadow-md", isSelected && "border-primary bg-primary/5"),
        onClick: onClick,
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.CardContent, {
            className: "p-3",
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "flex justify-between items-start mb-2",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "flex items-center gap-2",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.MessageSquare, {
                                    className: "w-4 h-4"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                    className: "font-medium text-sm",
                                    children: conversation.id.substring(0, 8)
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_badge.Badge, {
                            variant: conversation.endTime ? "secondary" : "default",
                            className: "text-xs",
                            children: conversation.endTime ? "Completed" : "Active"
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "text-xs text-muted-foreground space-y-1",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "flex items-center gap-1",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Users, {
                                    className: "w-3 h-3"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                    children: [
                                        conversation.participants?.length || 0,
                                        " participants"
                                    ]
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "flex items-center gap-1",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.MessageSquare, {
                                    className: "w-3 h-3"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                    children: [
                                        conversation.messages?.length || 0,
                                        " messages"
                                    ]
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "flex items-center gap-1",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Clock, {
                                    className: "w-3 h-3"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                    children: (0, _datefns.format)(new Date(conversation.startTime), "HH:mm")
                                })
                            ]
                        })
                    ]
                })
            ]
        })
    });
});
ConversationListItem.displayName = "ConversationListItem";
// Memoized performance metrics display
const PerformanceMetrics = /*#__PURE__*/ (0, _react.memo)(({ healthScore, metrics, onToggleMonitoring, isMonitoring })=>{
    const getHealthColor = (score)=>{
        if (score >= 90) return "text-green-500";
        if (score >= 70) return "text-yellow-500";
        return "text-red-500";
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_card.Card, {
        className: "mb-4",
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardHeader, {
                className: "pb-2",
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center justify-between",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardTitle, {
                            className: "text-sm",
                            children: "Performance"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                            variant: "ghost",
                            size: "sm",
                            onClick: onToggleMonitoring,
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Monitor, {
                                className: (0, _utils.cn)("w-4 h-4", isMonitoring && "text-blue-500")
                            })
                        })
                    ]
                })
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.CardContent, {
                className: "pt-0",
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "space-y-2",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "flex items-center justify-between",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                    className: "text-xs text-muted-foreground",
                                    children: "Health Score"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                    className: (0, _utils.cn)("text-sm font-semibold", getHealthColor(healthScore)),
                                    children: [
                                        healthScore,
                                        "%"
                                    ]
                                })
                            ]
                        }),
                        isMonitoring && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "flex items-center justify-between",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                            className: "text-xs text-muted-foreground",
                                            children: "Avg Render"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                            className: "text-xs",
                                            children: [
                                                metrics.averageRenderTime?.toFixed(1),
                                                "ms"
                                            ]
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "flex items-center justify-between",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                            className: "text-xs text-muted-foreground",
                                            children: "Memory"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                            className: "text-xs",
                                            children: [
                                                metrics.memoryUsage?.toFixed(1),
                                                "MB"
                                            ]
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "flex items-center justify-between",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                            className: "text-xs text-muted-foreground",
                                            children: "Cache Hit"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                            className: "text-xs",
                                            children: [
                                                metrics.cacheHitRate?.toFixed(1),
                                                "%"
                                            ]
                                        })
                                    ]
                                }),
                                metrics.optimizationSuggestions?.length > 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "mt-2 p-2 bg-yellow-50 border border-yellow-200 rounded text-xs",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                            className: "font-medium text-yellow-800 mb-1",
                                            children: "Suggestions:"
                                        }),
                                        metrics.optimizationSuggestions.slice(0, 2).map((suggestion, index)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                className: "text-yellow-700 truncate",
                                                children: [
                                                    "• ",
                                                    suggestion
                                                ]
                                            }, index))
                                    ]
                                })
                            ]
                        })
                    ]
                })
            })
        ]
    });
});
PerformanceMetrics.displayName = "PerformanceMetrics";
const OptimizedConversationDashboard = /*#__PURE__*/ (0, _react.memo)(({ conversations, agents, selectedConversationId, onConversationSelect, onSendMessage, performanceConfig = {}, className })=>{
    const { enableMonitoring = true, enableCaching = true, cacheSize = 100, batchUpdateDelay = 16 } = performanceConfig;
    // Performance monitoring
    const performance = (0, _usePerformanceMonitor.usePerformanceMonitor)({
        componentName: "OptimizedConversationDashboard",
        enabled: enableMonitoring,
        onSlowRender: (renderTime)=>{
            console.warn(`🐌 Slow render detected: ${renderTime.toFixed(2)}ms`);
        },
        onMemoryWarning: (usage)=>{
            console.warn(`💾 High memory usage: ${usage.toFixed(2)}MB`);
        },
        onOptimizationSuggestion: (suggestions)=>{
            console.log("\uD83D\uDCA1 Optimization suggestions:", suggestions);
        }
    });
    // Batched state updates for better performance
    const [filters, setFilters, flushFilters] = (0, _memoization.useBatchedUpdates)({
        searchQuery: "",
        status: [],
        participants: [],
        messageTypes: [],
        dateRange: undefined,
        messageCountRange: [
            0,
            1000
        ],
        durationRange: [
            0,
            120
        ],
        hasErrors: false,
        isLive: false,
        threadCount: [
            0,
            10
        ],
        agentTypes: []
    }, batchUpdateDelay);
    const [searchResults, setSearchResults] = (0, _react.useState)(null);
    const [selectedTab, setSelectedTab] = (0, _react.useState)("conversations");
    const [showAdvancedControls, setShowAdvancedControls] = (0, _react.useState)(false);
    const [isQueuePaused, setIsQueuePaused] = (0, _react.useState)(false);
    const [isPerformanceMonitoring, setIsPerformanceMonitoring] = (0, _react.useState)(enableMonitoring);
    const [expandedSections, setExpandedSections] = (0, _react.useState)({
        search: true,
        queue: true,
        controls: false
    });
    // Refs for auto-scroll
    const conversationListRef = (0, _react.useRef)(null);
    const messageListRef = (0, _react.useRef)(null);
    // Mock data with caching
    const mockQueue = (0, _memoization.useAdvancedMemo)(()=>{
        return Array.from({
            length: 12
        }, (_, i)=>({
                id: `queue-${i}`,
                conversationId: `conv-${Math.floor(i / 3)}`,
                agentId: `agent-${i % 4}`,
                type: [
                    "response",
                    "autonomous",
                    "tool_call",
                    "retry"
                ][i % 4],
                priority: [
                    "low",
                    "normal",
                    "high",
                    "urgent"
                ][i % 4],
                status: [
                    "queued",
                    "processing",
                    "completed",
                    "failed"
                ][i % 4],
                queuedAt: new Date(Date.now() - Math.random() * 300000),
                progress: i % 4 === 1 ? Math.random() * 100 : undefined,
                estimatedDuration: 2000 + Math.random() * 8000,
                metadata: {
                    messageContent: `Sample message content ${i}...`,
                    modelUsed: [
                        "gpt-4",
                        "claude-3",
                        "llama-2"
                    ][i % 3],
                    confidence: Math.random()
                }
            }));
    }, [
        conversations.length
    ], "mockQueue");
    const mockMetrics = (0, _memoization.useAdvancedMemo)(()=>({
            totalQueued: 5,
            totalProcessing: 3,
            totalCompleted: 42,
            totalFailed: 2,
            averageProcessingTime: 3500,
            averageQueueTime: 1200,
            throughputPerMinute: 8.5,
            errorRate: 0.04,
            queuedByPriority: {
                urgent: 1,
                high: 2,
                normal: 2,
                low: 0
            },
            processingByAgent: {
                "agent-1": 2,
                "agent-2": 1
            },
            conversationLoad: {
                "conv-1": 3,
                "conv-2": 2
            }
        }), [
        conversations.length
    ], "mockMetrics");
    // Auto-scroll hooks with performance tracking
    const conversationAutoScroll = (0, _useAutoScroll.useAutoScroll)(conversationListRef, [
        conversations
    ], {
        threshold: 100,
        enableUserOverride: true,
        overrideTimeout: 10000,
        onScrollStateChange: (enabled, atBottom)=>{
            performance.trackCacheRequest(atBottom);
        }
    });
    const messageAutoScroll = (0, _useAutoScroll.useAutoScroll)(messageListRef, [
        selectedConversationId
    ], {
        threshold: 50,
        enableUserOverride: true,
        overrideTimeout: 5000
    });
    // WebSocket connection with performance tracking
    const { isConnected, isConnecting, error: wsError, connectionStats } = (0, _useConversationWebSocket.useConversationWebSocket)({
        autoConnect: true,
        onEvent: (event)=>{
            performance.trackCacheRequest(true); // Track as cache hit for real-time updates
        }
    });
    // Optimized conversation filtering
    const filteredConversations = (0, _memoization.useAdvancedMemo)(()=>{
        performance.startRender();
        const filtered = conversations.filter((conversation)=>{
            // Search query
            if (filters.searchQuery) {
                const query = filters.searchQuery.toLowerCase();
                const matchesContent = conversation.messages?.some((msg)=>msg.content.toLowerCase().includes(query));
                const matchesParticipants = conversation.participants?.some((pid)=>{
                    const agent = agents.find((a)=>a.id === pid);
                    return agent?.name.toLowerCase().includes(query);
                });
                if (!matchesContent && !matchesParticipants) return false;
            }
            // Status filter
            if (filters.status.length > 0) {
                const status = conversation.endTime ? "completed" : "active";
                if (!filters.status.includes(status)) return false;
            }
            // Participants filter
            if (filters.participants.length > 0) {
                const hasMatchingParticipant = filters.participants.some((pid)=>conversation.participants?.includes(pid));
                if (!hasMatchingParticipant) return false;
            }
            // Message count filter
            const messageCount = conversation.messages?.length || 0;
            if (messageCount < filters.messageCountRange[0] || messageCount > filters.messageCountRange[1]) {
                return false;
            }
            return true;
        });
        performance.endRender();
        return filtered;
    }, [
        conversations,
        agents,
        filters
    ], "filteredConversations");
    // Optimized selected conversation lookup
    const selectedConversation = (0, _memoization.useAdvancedMemo)(()=>{
        return conversations.find((conv)=>conv.id === selectedConversationId);
    }, [
        conversations,
        selectedConversationId
    ], "selectedConversation");
    // Optimized event handlers
    const handleSearch = (0, _react.useCallback)((query)=>{
        if (!query.trim()) {
            setSearchResults(null);
            return;
        }
        // Mock search results with performance tracking
        performance.trackCacheRequest(false); // New search is cache miss
        const mockResults = {
            conversations: conversations.slice(0, 3).map((c)=>c.id),
            messages: conversations.slice(0, 2).flatMap((conv)=>conv.messages?.slice(0, 2).map((msg)=>({
                        conversationId: conv.id,
                        messageId: msg.id,
                        snippet: msg.content.substring(0, 100) + "..."
                    })) || []),
            totalResults: 8
        };
        setSearchResults(mockResults);
    }, [
        conversations,
        performance
    ]);
    const handleConversationSelect = (0, _react.useCallback)((conversationId)=>{
        performance.trackCacheRequest(selectedConversationId === conversationId);
        onConversationSelect(conversationId);
    }, [
        selectedConversationId,
        onConversationSelect,
        performance
    ]);
    const handleQueueAction = (0, _react.useCallback)((action, messageId)=>{
        performance.trackCacheRequest(false); // Queue actions are always cache misses
        console.log(`Queue action: ${action}`, messageId);
        if (action === "pause") setIsQueuePaused(true);
        if (action === "resume") setIsQueuePaused(false);
    }, [
        performance
    ]);
    const toggleSection = (0, _react.useCallback)((section)=>{
        setExpandedSections((prev)=>({
                ...prev,
                [section]: !prev[section]
            }));
    }, []);
    const togglePerformanceMonitoring = (0, _react.useCallback)(()=>{
        setIsPerformanceMonitoring((prev)=>!prev);
    }, []);
    // Render performance optimization
    performance.startRender();
    const dashboardContent = /*#__PURE__*/ (0, _jsxruntime.jsx)(_tooltip.TooltipProvider, {
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
            className: (0, _utils.cn)("h-full flex flex-col", className),
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center justify-between p-4 border-b",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "flex items-center gap-4",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("h1", {
                                    className: "text-2xl font-bold",
                                    children: "Conversation Dashboard"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "flex items-center gap-2",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                            className: (0, _utils.cn)("w-2 h-2 rounded-full", isConnected ? "bg-green-500" : isConnecting ? "bg-yellow-500" : "bg-red-500")
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                            className: "text-sm text-muted-foreground",
                                            children: isConnected ? "Connected" : isConnecting ? "Connecting..." : "Disconnected"
                                        }),
                                        connectionStats && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_badge.Badge, {
                                            variant: "outline",
                                            className: "text-xs",
                                            children: [
                                                connectionStats.total_connections,
                                                " clients"
                                            ]
                                        })
                                    ]
                                }),
                                isPerformanceMonitoring && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_badge.Badge, {
                                    variant: "outline",
                                    className: (0, _utils.cn)("text-xs", performance.healthScore >= 90 ? "border-green-500 text-green-700" : performance.healthScore >= 70 ? "border-yellow-500 text-yellow-700" : "border-red-500 text-red-700"),
                                    children: [
                                        "Performance: ",
                                        performance.healthScore,
                                        "%"
                                    ]
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "flex items-center gap-2",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_tooltip.Tooltip, {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_tooltip.TooltipTrigger, {
                                            asChild: true,
                                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                                variant: "outline",
                                                size: "sm",
                                                onClick: ()=>setShowAdvancedControls(!showAdvancedControls),
                                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Settings, {
                                                    className: "w-4 h-4"
                                                })
                                            })
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_tooltip.TooltipContent, {
                                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                children: "Advanced Controls"
                                            })
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_tooltip.Tooltip, {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_tooltip.TooltipTrigger, {
                                            asChild: true,
                                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                                variant: "outline",
                                                size: "sm",
                                                onClick: ()=>{
                                                    // Force cache cleanup and refresh
                                                    performance.resetMetrics();
                                                    flushFilters();
                                                },
                                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.RefreshCw, {
                                                    className: "w-4 h-4"
                                                })
                                            })
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_tooltip.TooltipContent, {
                                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                children: "Refresh & Clear Cache"
                                            })
                                        })
                                    ]
                                })
                            ]
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    className: "flex-1 flex",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_resizable.ResizablePanelGroup, {
                        direction: "horizontal",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_resizable.ResizablePanel, {
                                defaultSize: 30,
                                minSize: 25,
                                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "h-full flex flex-col",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                            className: "p-4 border-b",
                                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(PerformanceMetrics, {
                                                healthScore: performance.healthScore,
                                                metrics: performance.metrics,
                                                onToggleMonitoring: togglePerformanceMonitoring,
                                                isMonitoring: isPerformanceMonitoring
                                            })
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                            className: "border-b",
                                            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                className: "p-4",
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                        className: "flex items-center justify-between mb-2",
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                                                                className: "font-semibold",
                                                                children: "Search & Filter"
                                                            }),
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                                                variant: "ghost",
                                                                size: "sm",
                                                                onClick: ()=>toggleSection("search"),
                                                                children: expandedSections.search ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.ChevronDown, {
                                                                    className: "w-4 h-4"
                                                                }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.ChevronRight, {
                                                                    className: "w-4 h-4"
                                                                })
                                                            })
                                                        ]
                                                    }),
                                                    expandedSections.search && /*#__PURE__*/ (0, _jsxruntime.jsx)(_conversationsearch.ConversationSearch, {
                                                        conversations: conversations,
                                                        agents: agents,
                                                        filters: filters,
                                                        onFiltersChange: setFilters,
                                                        onSearch: handleSearch,
                                                        searchResults: searchResults
                                                    })
                                                ]
                                            })
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                            className: "flex-1 min-h-0",
                                            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                className: "p-4",
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                        className: "flex items-center justify-between mb-4",
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("h3", {
                                                                className: "font-semibold",
                                                                children: [
                                                                    "Conversations (",
                                                                    filteredConversations.length,
                                                                    ")"
                                                                ]
                                                            }),
                                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                className: "flex items-center gap-1",
                                                                children: [
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_tooltip.Tooltip, {
                                                                        children: [
                                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_tooltip.TooltipTrigger, {
                                                                                asChild: true,
                                                                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                                                                    variant: "ghost",
                                                                                    size: "sm",
                                                                                    onClick: ()=>conversationAutoScroll.scrollToTop(),
                                                                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.ArrowUp, {
                                                                                        className: "w-4 h-4"
                                                                                    })
                                                                                })
                                                                            }),
                                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_tooltip.TooltipContent, {
                                                                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                                                    children: "Scroll to top"
                                                                                })
                                                                            })
                                                                        ]
                                                                    }),
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_tooltip.Tooltip, {
                                                                        children: [
                                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_tooltip.TooltipTrigger, {
                                                                                asChild: true,
                                                                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                                                                    variant: "ghost",
                                                                                    size: "sm",
                                                                                    onClick: ()=>conversationAutoScroll.scrollToBottom(),
                                                                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.ArrowDown, {
                                                                                        className: "w-4 h-4"
                                                                                    })
                                                                                })
                                                                            }),
                                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_tooltip.TooltipContent, {
                                                                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                                                    children: "Scroll to bottom"
                                                                                })
                                                                            })
                                                                        ]
                                                                    }),
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)(_tooltip.Tooltip, {
                                                                        children: [
                                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_tooltip.TooltipTrigger, {
                                                                                asChild: true,
                                                                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                                                                    variant: "ghost",
                                                                                    size: "sm",
                                                                                    onClick: conversationAutoScroll.toggleAutoScroll,
                                                                                    className: (0, _utils.cn)(conversationAutoScroll.state.isAutoScrollEnabled ? "text-blue-500" : "text-muted-foreground"),
                                                                                    children: conversationAutoScroll.state.isAutoScrollEnabled ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Eye, {
                                                                                        className: "w-4 h-4"
                                                                                    }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.EyeOff, {
                                                                                        className: "w-4 h-4"
                                                                                    })
                                                                                })
                                                                            }),
                                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_tooltip.TooltipContent, {
                                                                                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                                                                                    children: [
                                                                                        conversationAutoScroll.state.isAutoScrollEnabled ? "Disable" : "Enable",
                                                                                        " ",
                                                                                        "auto-scroll"
                                                                                    ]
                                                                                })
                                                                            })
                                                                        ]
                                                                    })
                                                                ]
                                                            })
                                                        ]
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                        ref: conversationListRef,
                                                        className: "space-y-2 max-h-96 overflow-y-auto",
                                                        children: [
                                                            filteredConversations.map((conversation)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(ConversationListItem, {
                                                                    conversation: conversation,
                                                                    isSelected: selectedConversationId === conversation.id,
                                                                    onClick: ()=>handleConversationSelect(conversation.id)
                                                                }, conversation.id)),
                                                            filteredConversations.length === 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                className: "text-center py-8 text-muted-foreground",
                                                                children: [
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.MessageSquare, {
                                                                        className: "w-12 h-12 mx-auto mb-4 opacity-50"
                                                                    }),
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                                        children: "No conversations match your filters"
                                                                    })
                                                                ]
                                                            })
                                                        ]
                                                    })
                                                ]
                                            })
                                        })
                                    ]
                                })
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_resizable.ResizableHandle, {
                                withHandle: true
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_resizable.ResizablePanel, {
                                defaultSize: 45,
                                minSize: 30,
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                    className: "h-full flex flex-col",
                                    children: selectedConversation ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                className: "border-b p-4",
                                                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    className: "flex items-center justify-between",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("h3", {
                                                            className: "font-semibold",
                                                            children: [
                                                                "Conversation",
                                                                " ",
                                                                selectedConversation.id.substring(0, 8)
                                                            ]
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                            className: "flex items-center gap-2",
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_badge.Badge, {
                                                                    variant: "outline",
                                                                    className: "text-xs",
                                                                    children: [
                                                                        "Progress:",
                                                                        " ",
                                                                        Math.round(messageAutoScroll.state.scrollProgress * 100),
                                                                        "%"
                                                                    ]
                                                                }),
                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)(_tooltip.Tooltip, {
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_tooltip.TooltipTrigger, {
                                                                            asChild: true,
                                                                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                                                                variant: "ghost",
                                                                                size: "sm",
                                                                                onClick: messageAutoScroll.jumpToLatest,
                                                                                disabled: messageAutoScroll.state.isAtBottom,
                                                                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.ArrowDown, {
                                                                                    className: "w-4 h-4"
                                                                                })
                                                                            })
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_tooltip.TooltipContent, {
                                                                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                                                children: "Jump to latest"
                                                                            })
                                                                        })
                                                                    ]
                                                                })
                                                            ]
                                                        })
                                                    ]
                                                })
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                ref: messageListRef,
                                                className: "flex-1 min-h-0",
                                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_virtualizedmessagelist.VirtualizedMessageList, {
                                                    messages: selectedConversation.messages || [],
                                                    agents: agents,
                                                    height: 500,
                                                    onMessageClick: (message)=>{
                                                        performance.trackCacheRequest(true);
                                                        console.log("Message clicked:", message);
                                                    },
                                                    onReply: (message)=>console.log("Reply to:", message),
                                                    onReaction: (messageId, type)=>console.log("Reaction:", type, messageId),
                                                    className: "h-full"
                                                })
                                            })
                                        ]
                                    }) : /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "flex items-center justify-center h-full",
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "text-center text-muted-foreground",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.MessageSquare, {
                                                    className: "w-16 h-16 mx-auto mb-4 opacity-50"
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                                                    className: "text-lg font-semibold mb-2",
                                                    children: "No Conversation Selected"
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                    children: "Select a conversation from the list to view messages"
                                                })
                                            ]
                                        })
                                    })
                                })
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_resizable.ResizableHandle, {
                                withHandle: true
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_resizable.ResizablePanel, {
                                defaultSize: 25,
                                minSize: 20,
                                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_tabs.Tabs, {
                                    value: selectedTab,
                                    onValueChange: (value)=>setSelectedTab(value),
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                            className: "border-b p-4",
                                            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_tabs.TabsList, {
                                                className: "grid w-full grid-cols-3",
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_tabs.TabsTrigger, {
                                                        value: "conversations",
                                                        className: "text-xs",
                                                        children: "Stats"
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_tabs.TabsTrigger, {
                                                        value: "queue",
                                                        className: "text-xs",
                                                        children: "Queue"
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_tabs.TabsTrigger, {
                                                        value: "analytics",
                                                        className: "text-xs",
                                                        children: "Analytics"
                                                    })
                                                ]
                                            })
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "p-4",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_tabs.TabsContent, {
                                                    value: "conversations",
                                                    className: "mt-0 space-y-4",
                                                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                        className: "grid grid-cols-2 gap-2",
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.Card, {
                                                                className: "p-3",
                                                                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                    className: "text-center",
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                            className: "text-2xl font-bold",
                                                                            children: conversations.length
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                            className: "text-xs text-muted-foreground",
                                                                            children: "Total"
                                                                        })
                                                                    ]
                                                                })
                                                            }),
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.Card, {
                                                                className: "p-3",
                                                                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                    className: "text-center",
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                            className: "text-2xl font-bold text-green-500",
                                                                            children: conversations.filter((c)=>!c.endTime).length
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                            className: "text-xs text-muted-foreground",
                                                                            children: "Active"
                                                                        })
                                                                    ]
                                                                })
                                                            })
                                                        ]
                                                    })
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_tabs.TabsContent, {
                                                    value: "queue",
                                                    className: "mt-0",
                                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_messagequeuevisualization.MessageQueueVisualization, {
                                                        queue: mockQueue,
                                                        agents: agents,
                                                        conversations: conversations,
                                                        metrics: mockMetrics,
                                                        onCancelMessage: (id)=>handleQueueAction("cancel", id),
                                                        onRetryMessage: (id)=>handleQueueAction("retry", id),
                                                        onPauseQueue: ()=>handleQueueAction("pause"),
                                                        onResumeQueue: ()=>handleQueueAction("resume"),
                                                        isPaused: isQueuePaused
                                                    })
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_tabs.TabsContent, {
                                                    value: "analytics",
                                                    className: "mt-0",
                                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                        className: "space-y-4",
                                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_card.Card, {
                                                            className: "p-4",
                                                            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                className: "text-center",
                                                                children: [
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.TrendingUp, {
                                                                        className: "w-8 h-8 mx-auto mb-2 text-blue-500"
                                                                    }),
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                        className: "text-lg font-semibold",
                                                                        children: "Analytics"
                                                                    }),
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                        className: "text-sm text-muted-foreground",
                                                                        children: "Advanced metrics coming soon"
                                                                    })
                                                                ]
                                                            })
                                                        })
                                                    })
                                                })
                                            ]
                                        })
                                    ]
                                })
                            })
                        ]
                    })
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "border-t px-4 py-2 text-xs text-muted-foreground flex items-center justify-between",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "flex items-center gap-4",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                    children: [
                                        filteredConversations.length,
                                        " of ",
                                        conversations.length,
                                        " ",
                                        "conversations shown"
                                    ]
                                }),
                                wsError && /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                    className: "text-red-500 flex items-center gap-1",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.AlertTriangle, {
                                            className: "w-3 h-3"
                                        }),
                                        "Connection error"
                                    ]
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "flex items-center gap-4",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                    children: [
                                        "Auto-scroll:",
                                        " ",
                                        messageAutoScroll.state.isAutoScrollEnabled ? "ON" : "OFF"
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                    children: [
                                        "Queue: ",
                                        isQueuePaused ? "PAUSED" : "RUNNING"
                                    ]
                                }),
                                isPerformanceMonitoring && /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                    children: [
                                        "Performance: ",
                                        performance.healthScore,
                                        "%"
                                    ]
                                })
                            ]
                        })
                    ]
                })
            ]
        })
    });
    performance.endRender();
    return dashboardContent;
});
OptimizedConversationDashboard.displayName = "OptimizedConversationDashboard";
const _default = (0, _memoization.smartMemo)(OptimizedConversationDashboard, {
    keyGenerator: (props)=>`${props.conversations.length}-${props.selectedConversationId}-${props.agents.length}`,
    maxCacheSize: 10,
    ttl: 2 * 60 * 1000
});

//# sourceMappingURL=data:application/json;base64,
ae33d1940c805f30aca5473164ff7829
"use client";
"use strict";

/* istanbul ignore next */
function cov_13hah01qjp() {
  var path = "/Users/matthewmoroney/builds/FreeAgentics/web/components/character-creator.tsx";
  var hash = "3f6c6a001d79b556b53eb8cb5ad3eb3f859ce121";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewmoroney/builds/FreeAgentics/web/components/character-creator.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 32
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 14,
          column: 38
        }
      },
      "6": {
        start: {
          line: 15,
          column: 14
        },
        end: {
          line: 15,
          column: 34
        }
      },
      "7": {
        start: {
          line: 16,
          column: 15
        },
        end: {
          line: 16,
          column: 36
        }
      },
      "8": {
        start: {
          line: 17,
          column: 21
        },
        end: {
          line: 17,
          column: 44
        }
      },
      "9": {
        start: {
          line: 18,
          column: 29
        },
        end: {
          line: 18,
          column: 66
        }
      },
      "10": {
        start: {
          line: 19,
          column: 19
        },
        end: {
          line: 19,
          column: 51
        }
      },
      "11": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 51
        }
      },
      "12": {
        start: {
          line: 21,
          column: 39
        },
        end: {
          line: 21,
          column: 51
        }
      },
      "13": {
        start: {
          line: 22,
          column: 28
        },
        end: {
          line: 22,
          column: 41
        }
      },
      "14": {
        start: {
          line: 23,
          column: 27
        },
        end: {
          line: 23,
          column: 40
        }
      },
      "15": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 26,
          column: 20
        }
      },
      "16": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 66
        }
      },
      "17": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 31,
          column: 5
        }
      },
      "18": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 19
        }
      },
      "19": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "20": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 35,
          column: 10
        }
      },
      "21": {
        start: {
          line: 37,
          column: 16
        },
        end: {
          line: 37,
          column: 53
        }
      },
      "22": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "23": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 30
        }
      },
      "24": {
        start: {
          line: 41,
          column: 17
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "25": {
        start: {
          line: 44,
          column: 32
        },
        end: {
          line: 44,
          column: 88
        }
      },
      "26": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "27": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "28": {
        start: {
          line: 47,
          column: 23
        },
        end: {
          line: 47,
          column: 95
        }
      },
      "29": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 52,
          column: 13
        }
      },
      "30": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 49,
          column: 57
        }
      },
      "31": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 51,
          column: 39
        }
      },
      "32": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 25
        }
      },
      "33": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "34": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 31
        }
      },
      "35": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 18
        }
      },
      "36": {
        start: {
          line: 62,
          column: 44
        },
        end: {
          line: 62,
          column: 71
        }
      },
      "37": {
        start: {
          line: 63,
          column: 30
        },
        end: {
          line: 63,
          column: 56
        }
      },
      "38": {
        start: {
          line: 64,
          column: 34
        },
        end: {
          line: 64,
          column: 60
        }
      },
      "39": {
        start: {
          line: 65,
          column: 30
        },
        end: {
          line: 137,
          column: 5
        }
      },
      "40": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 30
        }
      },
      "41": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 23
        }
      },
      "42": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 136,
          column: 9
        }
      },
      "43": {
        start: {
          line: 70,
          column: 34
        },
        end: {
          line: 122,
          column: 13
        }
      },
      "44": {
        start: {
          line: 124,
          column: 27
        },
        end: {
          line: 124,
          column: 80
        }
      },
      "45": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 37
        }
      },
      "46": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 129,
          column: 21
        }
      },
      "47": {
        start: {
          line: 128,
          column: 16
        },
        end: {
          line: 128,
          column: 40
        }
      },
      "48": {
        start: {
          line: 131,
          column: 33
        },
        end: {
          line: 131,
          column: 94
        }
      },
      "49": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 132,
          column: 35
        }
      },
      "50": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 57
        }
      },
      "51": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 35
        }
      },
      "52": {
        start: {
          line: 139,
          column: 33
        },
        end: {
          line: 179,
          column: 5
        }
      },
      "53": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 140,
          column: 30
        }
      },
      "54": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 23
        }
      },
      "55": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "56": {
        start: {
          line: 144,
          column: 27
        },
        end: {
          line: 168,
          column: 14
        }
      },
      "57": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 37
        }
      },
      "58": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 172,
          column: 21
        }
      },
      "59": {
        start: {
          line: 171,
          column: 16
        },
        end: {
          line: 171,
          column: 40
        }
      },
      "60": {
        start: {
          line: 174,
          column: 33
        },
        end: {
          line: 174,
          column: 94
        }
      },
      "61": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 35
        }
      },
      "62": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 35
        }
      },
      "63": {
        start: {
          line: 180,
          column: 4
        },
        end: {
          line: 239,
          column: 5
        }
      },
      "64": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 238,
          column: 11
        }
      },
      "65": {
        start: {
          line: 240,
          column: 4
        },
        end: {
          line: 365,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 20,
            column: 9
          },
          end: {
            line: 20,
            column: 33
          }
        },
        loc: {
          start: {
            line: 20,
            column: 47
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 24,
            column: 39
          },
          end: {
            line: 24,
            column: 40
          }
        },
        loc: {
          start: {
            line: 24,
            column: 61
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 28,
            column: 9
          },
          end: {
            line: 28,
            column: 34
          }
        },
        loc: {
          start: {
            line: 28,
            column: 53
          },
          end: {
            line: 60,
            column: 1
          }
        },
        line: 28
      },
      "4": {
        name: "CharacterCreator",
        decl: {
          start: {
            line: 61,
            column: 9
          },
          end: {
            line: 61,
            column: 25
          }
        },
        loc: {
          start: {
            line: 61,
            column: 50
          },
          end: {
            line: 366,
            column: 1
          }
        },
        line: 61
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 65,
            column: 30
          },
          end: {
            line: 65,
            column: 31
          }
        },
        loc: {
          start: {
            line: 65,
            column: 63
          },
          end: {
            line: 137,
            column: 5
          }
        },
        line: 65
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 127,
            column: 23
          },
          end: {
            line: 127,
            column: 24
          }
        },
        loc: {
          start: {
            line: 127,
            column: 27
          },
          end: {
            line: 129,
            column: 13
          }
        },
        line: 127
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 139,
            column: 33
          },
          end: {
            line: 139,
            column: 34
          }
        },
        loc: {
          start: {
            line: 139,
            column: 51
          },
          end: {
            line: 179,
            column: 5
          }
        },
        line: 139
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 170,
            column: 23
          },
          end: {
            line: 170,
            column: 24
          }
        },
        loc: {
          start: {
            line: 170,
            column: 27
          },
          end: {
            line: 172,
            column: 13
          }
        },
        line: 170
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 25,
            column: 15
          },
          end: {
            line: 25,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 25,
            column: 29
          },
          end: {
            line: 25,
            column: 45
          }
        }, {
          start: {
            line: 25,
            column: 48
          },
          end: {
            line: 25,
            column: 65
          }
        }],
        line: 25
      },
      "2": {
        loc: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "3": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 20
          }
        }, {
          start: {
            line: 29,
            column: 24
          },
          end: {
            line: 29,
            column: 27
          }
        }, {
          start: {
            line: 29,
            column: 31
          },
          end: {
            line: 29,
            column: 45
          }
        }],
        line: 29
      },
      "4": {
        loc: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "5": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 20
          }
        }, {
          start: {
            line: 32,
            column: 24
          },
          end: {
            line: 32,
            column: 47
          }
        }, {
          start: {
            line: 32,
            column: 51
          },
          end: {
            line: 32,
            column: 76
          }
        }],
        line: 32
      },
      "6": {
        loc: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "7": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 13
          }
        }, {
          start: {
            line: 38,
            column: 17
          },
          end: {
            line: 38,
            column: 31
          }
        }],
        line: 38
      },
      "8": {
        loc: {
          start: {
            line: 44,
            column: 32
          },
          end: {
            line: 44,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 32
          },
          end: {
            line: 44,
            column: 53
          }
        }, {
          start: {
            line: 44,
            column: 57
          },
          end: {
            line: 44,
            column: 88
          }
        }],
        line: 44
      },
      "9": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "10": {
        loc: {
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 46,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 46,
            column: 29
          }
        }, {
          start: {
            line: 46,
            column: 33
          },
          end: {
            line: 46,
            column: 79
          }
        }],
        line: 46
      },
      "11": {
        loc: {
          start: {
            line: 47,
            column: 23
          },
          end: {
            line: 47,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 47,
            column: 47
          },
          end: {
            line: 47,
            column: 88
          }
        }, {
          start: {
            line: 47,
            column: 91
          },
          end: {
            line: 47,
            column: 95
          }
        }],
        line: 47
      },
      "12": {
        loc: {
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 52,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 52,
            column: 13
          }
        }, {
          start: {
            line: 50,
            column: 19
          },
          end: {
            line: 52,
            column: 13
          }
        }],
        line: 48
      },
      "13": {
        loc: {
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 48,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 48,
            column: 20
          }
        }, {
          start: {
            line: 48,
            column: 25
          },
          end: {
            line: 48,
            column: 33
          }
        }, {
          start: {
            line: 48,
            column: 37
          },
          end: {
            line: 48,
            column: 45
          }
        }],
        line: 48
      },
      "14": {
        loc: {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "15": {
        loc: {
          start: {
            line: 80,
            column: 31
          },
          end: {
            line: 80,
            column: 130
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 31
          },
          end: {
            line: 80,
            column: 81
          }
        }, {
          start: {
            line: 80,
            column: 85
          },
          end: {
            line: 80,
            column: 130
          }
        }],
        line: 80
      },
      "16": {
        loc: {
          start: {
            line: 81,
            column: 37
          },
          end: {
            line: 81,
            column: 152
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 37
          },
          end: {
            line: 81,
            column: 95
          }
        }, {
          start: {
            line: 81,
            column: 99
          },
          end: {
            line: 81,
            column: 152
          }
        }],
        line: 81
      },
      "17": {
        loc: {
          start: {
            line: 90,
            column: 33
          },
          end: {
            line: 90,
            column: 147
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 33
          },
          end: {
            line: 90,
            column: 87
          }
        }, {
          start: {
            line: 90,
            column: 91
          },
          end: {
            line: 90,
            column: 147
          }
        }],
        line: 90
      },
      "18": {
        loc: {
          start: {
            line: 91,
            column: 32
          },
          end: {
            line: 91,
            column: 144
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 32
          },
          end: {
            line: 91,
            column: 85
          }
        }, {
          start: {
            line: 91,
            column: 89
          },
          end: {
            line: 91,
            column: 144
          }
        }],
        line: 91
      },
      "19": {
        loc: {
          start: {
            line: 92,
            column: 31
          },
          end: {
            line: 92,
            column: 141
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 31
          },
          end: {
            line: 92,
            column: 83
          }
        }, {
          start: {
            line: 92,
            column: 87
          },
          end: {
            line: 92,
            column: 141
          }
        }],
        line: 92
      },
      "20": {
        loc: {
          start: {
            line: 102,
            column: 30
          },
          end: {
            line: 106,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 30
          },
          end: {
            line: 102,
            column: 51
          }
        }, {
          start: {
            line: 102,
            column: 55
          },
          end: {
            line: 106,
            column: 17
          }
        }],
        line: 102
      },
      "21": {
        loc: {
          start: {
            line: 110,
            column: 23
          },
          end: {
            line: 110,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 23
          },
          end: {
            line: 110,
            column: 54
          }
        }, {
          start: {
            line: 110,
            column: 58
          },
          end: {
            line: 110,
            column: 60
          }
        }],
        line: 110
      },
      "22": {
        loc: {
          start: {
            line: 120,
            column: 23
          },
          end: {
            line: 120,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 23
          },
          end: {
            line: 120,
            column: 63
          }
        }, {
          start: {
            line: 120,
            column: 67
          },
          end: {
            line: 120,
            column: 69
          }
        }],
        line: 120
      },
      "23": {
        loc: {
          start: {
            line: 131,
            column: 33
          },
          end: {
            line: 131,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 131,
            column: 56
          },
          end: {
            line: 131,
            column: 67
          }
        }, {
          start: {
            line: 131,
            column: 70
          },
          end: {
            line: 131,
            column: 94
          }
        }],
        line: 131
      },
      "24": {
        loc: {
          start: {
            line: 154,
            column: 29
          },
          end: {
            line: 154,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 154,
            column: 29
          },
          end: {
            line: 154,
            column: 85
          }
        }, {
          start: {
            line: 154,
            column: 89
          },
          end: {
            line: 154,
            column: 91
          }
        }],
        line: 154
      },
      "25": {
        loc: {
          start: {
            line: 155,
            column: 28
          },
          end: {
            line: 155,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 155,
            column: 28
          },
          end: {
            line: 155,
            column: 83
          }
        }, {
          start: {
            line: 155,
            column: 87
          },
          end: {
            line: 155,
            column: 89
          }
        }],
        line: 155
      },
      "26": {
        loc: {
          start: {
            line: 156,
            column: 27
          },
          end: {
            line: 156,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 27
          },
          end: {
            line: 156,
            column: 81
          }
        }, {
          start: {
            line: 156,
            column: 85
          },
          end: {
            line: 156,
            column: 86
          }
        }],
        line: 156
      },
      "27": {
        loc: {
          start: {
            line: 174,
            column: 33
          },
          end: {
            line: 174,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 174,
            column: 56
          },
          end: {
            line: 174,
            column: 67
          }
        }, {
          start: {
            line: 174,
            column: 70
          },
          end: {
            line: 174,
            column: 94
          }
        }],
        line: 174
      },
      "28": {
        loc: {
          start: {
            line: 180,
            column: 4
          },
          end: {
            line: 239,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 180,
            column: 4
          },
          end: {
            line: 239,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 180
      },
      "29": {
        loc: {
          start: {
            line: 204,
            column: 28
          },
          end: {
            line: 233,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 204,
            column: 28
          },
          end: {
            line: 204,
            column: 51
          }
        }, {
          start: {
            line: 204,
            column: 69
          },
          end: {
            line: 233,
            column: 30
          }
        }],
        line: 204
      },
      "30": {
        loc: {
          start: {
            line: 266,
            column: 12
          },
          end: {
            line: 282,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 266,
            column: 12
          },
          end: {
            line: 266,
            column: 17
          }
        }, {
          start: {
            line: 266,
            column: 35
          },
          end: {
            line: 282,
            column: 14
          }
        }],
        line: 266
      },
      "31": {
        loc: {
          start: {
            line: 283,
            column: 12
          },
          end: {
            line: 309,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 283,
            column: 12
          },
          end: {
            line: 283,
            column: 24
          }
        }, {
          start: {
            line: 283,
            column: 42
          },
          end: {
            line: 309,
            column: 14
          }
        }],
        line: 283
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matthewmoroney/builds/FreeAgentics/web/components/character-creator.tsx"],
      sourcesContent: ["\"use client\";\n\nimport React, { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { Loader2, CheckCircle, AlertTriangle } from \"lucide-react\";\nimport { AgentCreationWizard } from \"@/components/ui/agent-creation-wizard\";\nimport { AgentTemplate } from \"@/components/ui/agent-template-selector\";\nimport { AgentConfigurationData } from \"@/components/ui/agent-configuration-form\";\nimport { agentsApi, Agent, CreateAgentRequest } from \"@/lib/api/agents-api\";\n\ninterface CharacterCreatorProps {\n  onClose: () => void;\n  onSuccess: (agent: Agent) => void;\n}\n\nexport function CharacterCreator({\n  onClose,\n  onSuccess,\n}: CharacterCreatorProps) {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<Agent | null>(null);\n\n  const handleAgentCreate = async (\n    template: AgentTemplate,\n    configuration: AgentConfigurationData,\n  ) => {\n    setIsSubmitting(true);\n    setError(null);\n\n    try {\n      // Convert template and configuration to API request format\n      const createRequest: CreateAgentRequest = {\n        name: configuration.name,\n\n        // Convert Active Inference configuration\n        activeInference: {\n          template: template.category, // Use template category as Active Inference template\n          stateLabels: [\"State1\", \"State2\", \"State3\"],\n          numStates:\n            configuration.mathematics?.matrices?.aMatrix?.rows ||\n            template.mathematicalFoundation.beliefsStates,\n          numObservations:\n            configuration.mathematics?.matrices?.bMatrix?.observations ||\n            template.mathematicalFoundation.observationModalities,\n          numActions: template.mathematicalFoundation.actionSpaces,\n          generativeModel: {\n            A: [],\n            B: [],\n            C: [],\n            D: [],\n          },\n          precisionParameters: {\n            sensory:\n              configuration.mathematics?.precision?.sensoryPrecision ||\n              template.mathematicalFoundation.defaultPrecision.sensory,\n            policy:\n              configuration.mathematics?.precision?.policyPrecision ||\n              template.mathematicalFoundation.defaultPrecision.policy,\n            state:\n              configuration.mathematics?.precision?.statePrecision ||\n              template.mathematicalFoundation.defaultPrecision.state,\n          },\n          mathematicalConstraints: {\n            normalizedBeliefs: true,\n            stochasticMatrices: true,\n            precisionBounds: true,\n          },\n        },\n\n        // Add legacy personality mapping for backward compatibility\n        personality: undefined,\n\n        capabilities: template.capabilities || [\n          \"movement\",\n          \"perception\",\n          \"communication\",\n        ],\n\n        tags: [\n          template.category,\n          template.complexity,\n          ...(configuration.environment?.tags || []),\n        ],\n\n        metadata: {\n          templateId: template.id,\n          templateName: template.name,\n          complexity: template.complexity,\n          description: configuration.description,\n          mathematicalFoundation: template.mathematicalFoundation,\n          createdViaWizard: true,\n          configurationVersion: \"1.0\",\n          ...(configuration.advanced?.customParameters || {}),\n        },\n      };\n\n      // Create agent via API\n      const result = await agentsApi.createAgent(createRequest);\n\n      setSuccess(result.agent);\n\n      // Show success briefly, then call success callback\n      setTimeout(() => {\n        onSuccess(result.agent);\n      }, 1500);\n    } catch (err) {\n      const errorMessage =\n        err instanceof Error ? err.message : \"Unknown error occurred\";\n      setError(errorMessage);\n      console.error(\"Agent creation failed:\", err);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Handle creating from template directly (backward compatibility)\n  const handleTemplateCreate = async (template: AgentTemplate) => {\n    setIsSubmitting(true);\n    setError(null);\n\n    try {\n      // Create agent using template method\n      const result = await agentsApi.createAgentFromTemplate({\n        template: template.category,\n        name: `${template.name} ${Date.now()}`,\n        stateLabels: [\"Explore\", \"Rest\", \"Communicate\", \"Plan\"],\n        precisionParameters: {\n          sensory:\n            template.mathematicalFoundation.defaultPrecision.sensory || 16,\n          policy: template.mathematicalFoundation.defaultPrecision.policy || 12,\n          state: template.mathematicalFoundation.defaultPrecision.state || 2,\n        },\n        tags: [template.category, template.complexity],\n        metadata: {\n          templateId: template.id,\n          templateName: template.name,\n          complexity: template.complexity,\n          createdDirectly: true,\n        },\n      });\n\n      setSuccess(result.agent);\n\n      setTimeout(() => {\n        onSuccess(result.agent);\n      }, 1500);\n    } catch (err) {\n      const errorMessage =\n        err instanceof Error ? err.message : \"Unknown error occurred\";\n      setError(errorMessage);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  if (success) {\n    return (\n      <Card className=\"p-6\">\n        <div className=\"text-center space-y-4\">\n          <CheckCircle className=\"h-16 w-16 text-green-600 mx-auto\" />\n          <div>\n            <h3 className=\"text-lg font-semibold text-green-900\">\n              Agent Created Successfully!\n            </h3>\n            <p className=\"text-sm text-green-700 mt-2\">\n              <strong>{success.name}</strong> has been created with Active\n              Inference capabilities.\n            </p>\n            {success.activeInference && (\n              <div className=\"mt-4 p-3 bg-green-50 border border-green-200 rounded-lg\">\n                <div className=\"text-xs text-green-800 space-y-1\">\n                  <p>\u2022 Template: {success.activeInference.template}</p>\n                  <p>\u2022 States: {success.activeInference.numStates}</p>\n                  <p>\n                    \u2022 Precision \u03B3:{\" \"}\n                    {success.activeInference.precisionParameters.sensory.toFixed(\n                      1,\n                    )}\n                  </p>\n                  <p>\u2022 Mathematical validation: \u2713 Passed</p>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </Card>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h2 className=\"text-2xl font-bold\">Create Active Inference Agent</h2>\n          <p className=\"text-muted-foreground mt-1\">\n            Build a mathematically rigorous agent with real-time visualization\n          </p>\n        </div>\n        <Button variant=\"outline\" onClick={onClose} disabled={isSubmitting}>\n          Cancel\n        </Button>\n      </div>\n\n      {/* Error Display */}\n      {error && (\n        <Alert variant=\"destructive\">\n          <AlertTriangle className=\"h-4 w-4\" />\n          <AlertDescription>\n            <strong>Creation Failed:</strong> {error}\n          </AlertDescription>\n        </Alert>\n      )}\n\n      {/* Loading Overlay */}\n      {isSubmitting && (\n        <div className=\"relative\">\n          <div className=\"absolute inset-0 bg-background/80 backdrop-blur-sm z-10 flex items-center justify-center rounded-lg\">\n            <div className=\"flex items-center gap-3\">\n              <Loader2 className=\"h-6 w-6 animate-spin\" />\n              <div className=\"text-center\">\n                <p className=\"font-medium\">Creating Agent...</p>\n                <p className=\"text-sm text-muted-foreground\">\n                  Validating mathematical parameters and initializing Active\n                  Inference systems\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Agent Creation Wizard */}\n      <AgentCreationWizard\n        onAgentCreate={handleAgentCreate}\n        onCancel={onClose}\n      />\n\n      {/* Mathematical Information */}\n      <Card className=\"p-4 bg-blue-50 border-blue-200\">\n        <h4 className=\"font-semibold text-blue-900 mb-2\">\n          Active Inference Integration\n        </h4>\n        <div className=\"text-sm text-blue-800 space-y-1\">\n          <p>\n            \u2022 <strong>API Validation:</strong> Mathematical constraints verified\n            server-side\n          </p>\n          <p>\n            \u2022 <strong>Belief States:</strong> Real-time q(s) distribution with\n            entropy calculation\n          </p>\n          <p>\n            \u2022 <strong>Free Energy:</strong> F = Accuracy + Complexity\n            minimization\n          </p>\n          <p>\n            \u2022 <strong>pymdp Compatible:</strong> Ready for expert review and\n            production deployment\n          </p>\n        </div>\n      </Card>\n    </div>\n  );\n}\n"],
      names: ["CharacterCreator", "onClose", "onSuccess", "isSubmitting", "setIsSubmitting", "useState", "error", "setError", "success", "setSuccess", "handleAgentCreate", "template", "configuration", "createRequest", "name", "activeInference", "category", "stateLabels", "numStates", "mathematics", "matrices", "aMatrix", "rows", "mathematicalFoundation", "beliefsStates", "numObservations", "bMatrix", "observations", "observationModalities", "numActions", "actionSpaces", "generativeModel", "A", "B", "C", "D", "precisionParameters", "sensory", "precision", "sensoryPrecision", "defaultPrecision", "policy", "policyPrecision", "state", "statePrecision", "mathematicalConstraints", "normalizedBeliefs", "stochasticMatrices", "precisionBounds", "personality", "undefined", "capabilities", "tags", "complexity", "environment", "metadata", "templateId", "id", "templateName", "description", "createdViaWizard", "configurationVersion", "advanced", "customParameters", "result", "agentsApi", "createAgent", "agent", "setTimeout", "err", "errorMessage", "Error", "message", "console", "handleTemplateCreate", "createAgentFromTemplate", "Date", "now", "createdDirectly", "Card", "className", "div", "CheckCircle", "h3", "p", "strong", "toFixed", "h2", "Button", "variant", "onClick", "disabled", "Alert", "AlertTriangle", "AlertDescription", "Loader2", "AgentCreationWizard", "onAgentCreate", "onCancel", "h4"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3f6c6a001d79b556b53eb8cb5ad3eb3f859ce121"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_13hah01qjp = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_13hah01qjp();
cov_13hah01qjp().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_13hah01qjp().s[1]++;
Object.defineProperty(exports, "CharacterCreator", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_13hah01qjp().f[0]++;
    cov_13hah01qjp().s[2]++;
    return CharacterCreator;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_13hah01qjp().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_13hah01qjp().s[4]++, _interop_require_wildcard(require("react")));
const _button =
/* istanbul ignore next */
(cov_13hah01qjp().s[5]++, require("./ui/button"));
const _card =
/* istanbul ignore next */
(cov_13hah01qjp().s[6]++, require("./ui/card"));
const _alert =
/* istanbul ignore next */
(cov_13hah01qjp().s[7]++, require("./ui/alert"));
const _lucidereact =
/* istanbul ignore next */
(cov_13hah01qjp().s[8]++, require("lucide-react"));
const _agentcreationwizard =
/* istanbul ignore next */
(cov_13hah01qjp().s[9]++, require("./ui/agent-creation-wizard"));
const _agentsapi =
/* istanbul ignore next */
(cov_13hah01qjp().s[10]++, require("../lib/api/agents-api"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_13hah01qjp().f[1]++;
  cov_13hah01qjp().s[11]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_13hah01qjp().b[0][0]++;
    cov_13hah01qjp().s[12]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_13hah01qjp().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_13hah01qjp().s[13]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_13hah01qjp().s[14]++, new WeakMap());
  /* istanbul ignore next */
  cov_13hah01qjp().s[15]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_13hah01qjp().f[2]++;
    cov_13hah01qjp().s[16]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_13hah01qjp().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_13hah01qjp().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_13hah01qjp().f[3]++;
  cov_13hah01qjp().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_13hah01qjp().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_13hah01qjp().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_13hah01qjp().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_13hah01qjp().b[2][0]++;
    cov_13hah01qjp().s[18]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_13hah01qjp().b[2][1]++;
  }
  cov_13hah01qjp().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_13hah01qjp().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_13hah01qjp().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_13hah01qjp().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_13hah01qjp().b[4][0]++;
    cov_13hah01qjp().s[20]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_13hah01qjp().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_13hah01qjp().s[21]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_13hah01qjp().s[22]++;
  if (
  /* istanbul ignore next */
  (cov_13hah01qjp().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_13hah01qjp().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_13hah01qjp().b[6][0]++;
    cov_13hah01qjp().s[23]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_13hah01qjp().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_13hah01qjp().s[24]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_13hah01qjp().s[25]++,
  /* istanbul ignore next */
  (cov_13hah01qjp().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_13hah01qjp().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_13hah01qjp().s[26]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_13hah01qjp().s[27]++;
    if (
    /* istanbul ignore next */
    (cov_13hah01qjp().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_13hah01qjp().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_13hah01qjp().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_13hah01qjp().s[28]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_13hah01qjp().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_13hah01qjp().b[11][1]++, null));
      /* istanbul ignore next */
      cov_13hah01qjp().s[29]++;
      if (
      /* istanbul ignore next */
      (cov_13hah01qjp().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_13hah01qjp().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_13hah01qjp().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_13hah01qjp().b[12][0]++;
        cov_13hah01qjp().s[30]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_13hah01qjp().b[12][1]++;
        cov_13hah01qjp().s[31]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_13hah01qjp().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_13hah01qjp().s[32]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_13hah01qjp().s[33]++;
  if (cache) {
    /* istanbul ignore next */
    cov_13hah01qjp().b[14][0]++;
    cov_13hah01qjp().s[34]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_13hah01qjp().b[14][1]++;
  }
  cov_13hah01qjp().s[35]++;
  return newObj;
}
function CharacterCreator({
  onClose,
  onSuccess
}) {
  /* istanbul ignore next */
  cov_13hah01qjp().f[4]++;
  const [isSubmitting, setIsSubmitting] =
  /* istanbul ignore next */
  (cov_13hah01qjp().s[36]++, (0, _react.useState)(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_13hah01qjp().s[37]++, (0, _react.useState)(null));
  const [success, setSuccess] =
  /* istanbul ignore next */
  (cov_13hah01qjp().s[38]++, (0, _react.useState)(null));
  /* istanbul ignore next */
  cov_13hah01qjp().s[39]++;
  const handleAgentCreate = async (template, configuration) => {
    /* istanbul ignore next */
    cov_13hah01qjp().f[5]++;
    cov_13hah01qjp().s[40]++;
    setIsSubmitting(true);
    /* istanbul ignore next */
    cov_13hah01qjp().s[41]++;
    setError(null);
    /* istanbul ignore next */
    cov_13hah01qjp().s[42]++;
    try {
      // Convert template and configuration to API request format
      const createRequest =
      /* istanbul ignore next */
      (cov_13hah01qjp().s[43]++, {
        name: configuration.name,
        // Convert Active Inference configuration
        activeInference: {
          template: template.category,
          stateLabels: ["State1", "State2", "State3"],
          numStates:
          /* istanbul ignore next */
          (cov_13hah01qjp().b[15][0]++, configuration.mathematics?.matrices?.aMatrix?.rows) ||
          /* istanbul ignore next */
          (cov_13hah01qjp().b[15][1]++, template.mathematicalFoundation.beliefsStates),
          numObservations:
          /* istanbul ignore next */
          (cov_13hah01qjp().b[16][0]++, configuration.mathematics?.matrices?.bMatrix?.observations) ||
          /* istanbul ignore next */
          (cov_13hah01qjp().b[16][1]++, template.mathematicalFoundation.observationModalities),
          numActions: template.mathematicalFoundation.actionSpaces,
          generativeModel: {
            A: [],
            B: [],
            C: [],
            D: []
          },
          precisionParameters: {
            sensory:
            /* istanbul ignore next */
            (cov_13hah01qjp().b[17][0]++, configuration.mathematics?.precision?.sensoryPrecision) ||
            /* istanbul ignore next */
            (cov_13hah01qjp().b[17][1]++, template.mathematicalFoundation.defaultPrecision.sensory),
            policy:
            /* istanbul ignore next */
            (cov_13hah01qjp().b[18][0]++, configuration.mathematics?.precision?.policyPrecision) ||
            /* istanbul ignore next */
            (cov_13hah01qjp().b[18][1]++, template.mathematicalFoundation.defaultPrecision.policy),
            state:
            /* istanbul ignore next */
            (cov_13hah01qjp().b[19][0]++, configuration.mathematics?.precision?.statePrecision) ||
            /* istanbul ignore next */
            (cov_13hah01qjp().b[19][1]++, template.mathematicalFoundation.defaultPrecision.state)
          },
          mathematicalConstraints: {
            normalizedBeliefs: true,
            stochasticMatrices: true,
            precisionBounds: true
          }
        },
        // Add legacy personality mapping for backward compatibility
        personality: undefined,
        capabilities:
        /* istanbul ignore next */
        (cov_13hah01qjp().b[20][0]++, template.capabilities) ||
        /* istanbul ignore next */
        (cov_13hah01qjp().b[20][1]++, ["movement", "perception", "communication"]),
        tags: [template.category, template.complexity, ...(
        /* istanbul ignore next */
        (cov_13hah01qjp().b[21][0]++, configuration.environment?.tags) ||
        /* istanbul ignore next */
        (cov_13hah01qjp().b[21][1]++, []))],
        metadata: {
          templateId: template.id,
          templateName: template.name,
          complexity: template.complexity,
          description: configuration.description,
          mathematicalFoundation: template.mathematicalFoundation,
          createdViaWizard: true,
          configurationVersion: "1.0",
          ...(
          /* istanbul ignore next */
          (cov_13hah01qjp().b[22][0]++, configuration.advanced?.customParameters) ||
          /* istanbul ignore next */
          (cov_13hah01qjp().b[22][1]++, {}))
        }
      });
      // Create agent via API
      const result =
      /* istanbul ignore next */
      (cov_13hah01qjp().s[44]++, await _agentsapi.agentsApi.createAgent(createRequest));
      /* istanbul ignore next */
      cov_13hah01qjp().s[45]++;
      setSuccess(result.agent);
      // Show success briefly, then call success callback
      /* istanbul ignore next */
      cov_13hah01qjp().s[46]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_13hah01qjp().f[6]++;
        cov_13hah01qjp().s[47]++;
        onSuccess(result.agent);
      }, 1500);
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_13hah01qjp().s[48]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_13hah01qjp().b[23][0]++, err.message) :
      /* istanbul ignore next */
      (cov_13hah01qjp().b[23][1]++, "Unknown error occurred"));
      /* istanbul ignore next */
      cov_13hah01qjp().s[49]++;
      setError(errorMessage);
      /* istanbul ignore next */
      cov_13hah01qjp().s[50]++;
      console.error("Agent creation failed:", err);
    } finally {
      /* istanbul ignore next */
      cov_13hah01qjp().s[51]++;
      setIsSubmitting(false);
    }
  };
  // Handle creating from template directly (backward compatibility)
  /* istanbul ignore next */
  cov_13hah01qjp().s[52]++;
  const handleTemplateCreate = async template => {
    /* istanbul ignore next */
    cov_13hah01qjp().f[7]++;
    cov_13hah01qjp().s[53]++;
    setIsSubmitting(true);
    /* istanbul ignore next */
    cov_13hah01qjp().s[54]++;
    setError(null);
    /* istanbul ignore next */
    cov_13hah01qjp().s[55]++;
    try {
      // Create agent using template method
      const result =
      /* istanbul ignore next */
      (cov_13hah01qjp().s[56]++, await _agentsapi.agentsApi.createAgentFromTemplate({
        template: template.category,
        name: `${template.name} ${Date.now()}`,
        stateLabels: ["Explore", "Rest", "Communicate", "Plan"],
        precisionParameters: {
          sensory:
          /* istanbul ignore next */
          (cov_13hah01qjp().b[24][0]++, template.mathematicalFoundation.defaultPrecision.sensory) ||
          /* istanbul ignore next */
          (cov_13hah01qjp().b[24][1]++, 16),
          policy:
          /* istanbul ignore next */
          (cov_13hah01qjp().b[25][0]++, template.mathematicalFoundation.defaultPrecision.policy) ||
          /* istanbul ignore next */
          (cov_13hah01qjp().b[25][1]++, 12),
          state:
          /* istanbul ignore next */
          (cov_13hah01qjp().b[26][0]++, template.mathematicalFoundation.defaultPrecision.state) ||
          /* istanbul ignore next */
          (cov_13hah01qjp().b[26][1]++, 2)
        },
        tags: [template.category, template.complexity],
        metadata: {
          templateId: template.id,
          templateName: template.name,
          complexity: template.complexity,
          createdDirectly: true
        }
      }));
      /* istanbul ignore next */
      cov_13hah01qjp().s[57]++;
      setSuccess(result.agent);
      /* istanbul ignore next */
      cov_13hah01qjp().s[58]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_13hah01qjp().f[8]++;
        cov_13hah01qjp().s[59]++;
        onSuccess(result.agent);
      }, 1500);
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_13hah01qjp().s[60]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_13hah01qjp().b[27][0]++, err.message) :
      /* istanbul ignore next */
      (cov_13hah01qjp().b[27][1]++, "Unknown error occurred"));
      /* istanbul ignore next */
      cov_13hah01qjp().s[61]++;
      setError(errorMessage);
    } finally {
      /* istanbul ignore next */
      cov_13hah01qjp().s[62]++;
      setIsSubmitting(false);
    }
  };
  /* istanbul ignore next */
  cov_13hah01qjp().s[63]++;
  if (success) {
    /* istanbul ignore next */
    cov_13hah01qjp().b[28][0]++;
    cov_13hah01qjp().s[64]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)(_card.Card, {
      className: "p-6",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "text-center space-y-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.CheckCircle, {
          className: "h-16 w-16 text-green-600 mx-auto"
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
            className: "text-lg font-semibold text-green-900",
            children: "Agent Created Successfully!"
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
            className: "text-sm text-green-700 mt-2",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("strong", {
              children: success.name
            }), " has been created with Active Inference capabilities."]
          }),
          /* istanbul ignore next */
          (cov_13hah01qjp().b[29][0]++, success.activeInference) &&
          /* istanbul ignore next */
          (cov_13hah01qjp().b[29][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "mt-4 p-3 bg-green-50 border border-green-200 rounded-lg",
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "text-xs text-green-800 space-y-1",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
                children: ["• Template: ", success.activeInference.template]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
                children: ["• States: ", success.activeInference.numStates]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
                children: ["• Precision γ:", " ", success.activeInference.precisionParameters.sensory.toFixed(1)]
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                children: "• Mathematical validation: ✓ Passed"
              })]
            })
          }))]
        })]
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_13hah01qjp().b[28][1]++;
  }
  cov_13hah01qjp().s[65]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "space-y-6",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex items-center justify-between",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
          className: "text-2xl font-bold",
          children: "Create Active Inference Agent"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-muted-foreground mt-1",
          children: "Build a mathematically rigorous agent with real-time visualization"
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
        variant: "outline",
        onClick: onClose,
        disabled: isSubmitting,
        children: "Cancel"
      })]
    }),
    /* istanbul ignore next */
    (cov_13hah01qjp().b[30][0]++, error) &&
    /* istanbul ignore next */
    (cov_13hah01qjp().b[30][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_alert.Alert, {
      variant: "destructive",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.AlertTriangle, {
        className: "h-4 w-4"
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_alert.AlertDescription, {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("strong", {
          children: "Creation Failed:"
        }), " ", error]
      })]
    })),
    /* istanbul ignore next */
    (cov_13hah01qjp().b[31][0]++, isSubmitting) &&
    /* istanbul ignore next */
    (cov_13hah01qjp().b[31][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "relative",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "absolute inset-0 bg-background/80 backdrop-blur-sm z-10 flex items-center justify-center rounded-lg",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex items-center gap-3",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Loader2, {
            className: "h-6 w-6 animate-spin"
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "text-center",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "font-medium",
              children: "Creating Agent..."
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-sm text-muted-foreground",
              children: "Validating mathematical parameters and initializing Active Inference systems"
            })]
          })]
        })
      })
    })), /*#__PURE__*/(0, _jsxruntime.jsx)(_agentcreationwizard.AgentCreationWizard, {
      onAgentCreate: handleAgentCreate,
      onCancel: onClose
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
      className: "p-4 bg-blue-50 border-blue-200",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
        className: "font-semibold text-blue-900 mb-2",
        children: "Active Inference Integration"
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "text-sm text-blue-800 space-y-1",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
          children: ["• ", /*#__PURE__*/(0, _jsxruntime.jsx)("strong", {
            children: "API Validation:"
          }), " Mathematical constraints verified server-side"]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
          children: ["• ", /*#__PURE__*/(0, _jsxruntime.jsx)("strong", {
            children: "Belief States:"
          }), " Real-time q(s) distribution with entropy calculation"]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
          children: ["• ", /*#__PURE__*/(0, _jsxruntime.jsx)("strong", {
            children: "Free Energy:"
          }), " F = Accuracy + Complexity minimization"]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
          children: ["• ", /*#__PURE__*/(0, _jsxruntime.jsx)("strong", {
            children: "pymdp Compatible:"
          }), " Ready for expert review and production deployment"]
        })]
      })]
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
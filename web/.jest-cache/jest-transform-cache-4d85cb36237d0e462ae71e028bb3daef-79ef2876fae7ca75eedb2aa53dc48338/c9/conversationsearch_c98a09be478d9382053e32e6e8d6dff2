7f81a2596386b4e819b5ad3958fa530b
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "ConversationSearch", {
    enumerable: true,
    get: function() {
        return ConversationSearch;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _input = require("../ui/input");
const _button = require("../ui/button");
const _badge = require("../ui/badge");
const _popover = require("../ui/popover");
const _checkbox = require("../ui/checkbox");
const _label = require("../ui/label");
const _slider = require("../ui/slider");
const _daterangepicker = require("../ui/date-range-picker");
const _lucidereact = require("lucide-react");
const _utils = require("../../lib/utils");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const defaultFilters = {
    searchQuery: "",
    status: [],
    participants: [],
    messageTypes: [],
    dateRange: undefined,
    messageCountRange: [
        0,
        1000
    ],
    durationRange: [
        0,
        120
    ],
    hasErrors: false,
    isLive: false,
    threadCount: [
        0,
        10
    ],
    agentTypes: []
};
function ConversationSearch({ conversations, agents, filters, onFiltersChange, onSearch, searchResults, className }) {
    const [isFilterOpen, setIsFilterOpen] = (0, _react.useState)(false);
    const [searchValue, setSearchValue] = (0, _react.useState)(filters.searchQuery);
    // Debounced search
    (0, _react.useEffect)(()=>{
        const timer = setTimeout(()=>{
            if (searchValue !== filters.searchQuery) {
                onSearch(searchValue);
                onFiltersChange({
                    ...filters,
                    searchQuery: searchValue
                });
            }
        }, 300);
        return ()=>clearTimeout(timer);
    }, [
        searchValue,
        filters,
        onFiltersChange,
        onSearch
    ]);
    // Calculate filter statistics
    const filterStats = (0, _react.useMemo)(()=>{
        const statusCounts = conversations.reduce((acc, conv)=>{
            const status = conv.endTime ? "completed" : "active";
            acc[status] = (acc[status] || 0) + 1;
            return acc;
        }, {});
        const participantCounts = agents.reduce((acc, agent)=>{
            const count = conversations.filter((conv)=>conv.participants?.includes(agent.id)).length;
            if (count > 0) acc[agent.id] = count;
            return acc;
        }, {});
        const messageTypeCounts = conversations.reduce((acc, conv)=>{
            conv.messages?.forEach((msg)=>{
                const type = msg.metadata?.type || "regular";
                acc[type] = (acc[type] || 0) + 1;
            });
            return acc;
        }, {});
        return {
            statusCounts,
            participantCounts,
            messageTypeCounts,
            totalConversations: conversations.length,
            activeConversations: statusCounts.active || 0,
            completedConversations: statusCounts.completed || 0
        };
    }, [
        conversations,
        agents
    ]);
    // Handle filter updates
    const updateFilter = (0, _react.useCallback)((key, value)=>{
        onFiltersChange({
            ...filters,
            [key]: value
        });
    }, [
        filters,
        onFiltersChange
    ]);
    // Clear all filters
    const clearAllFilters = (0, _react.useCallback)(()=>{
        setSearchValue("");
        onFiltersChange(defaultFilters);
    }, [
        onFiltersChange
    ]);
    // Get active filter count
    const activeFilterCount = (0, _react.useMemo)(()=>{
        let count = 0;
        if (filters.searchQuery) count++;
        if (filters.status.length > 0) count++;
        if (filters.participants.length > 0) count++;
        if (filters.messageTypes.length > 0) count++;
        if (filters.dateRange) count++;
        if (filters.messageCountRange[0] > 0 || filters.messageCountRange[1] < 1000) count++;
        if (filters.durationRange[0] > 0 || filters.durationRange[1] < 120) count++;
        if (filters.hasErrors) count++;
        if (filters.isLive) count++;
        if (filters.threadCount[0] > 0 || filters.threadCount[1] < 10) count++;
        if (filters.agentTypes.length > 0) count++;
        return count;
    }, [
        filters
    ]);
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: (0, _utils.cn)("space-y-4", className),
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "relative",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Search, {
                        className: "absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-4 h-4"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_input.Input, {
                        placeholder: "Search conversations, messages, participants...",
                        value: searchValue,
                        onChange: (e)=>setSearchValue(e.target.value),
                        className: "pl-10 pr-12"
                    }),
                    searchValue && /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                        variant: "ghost",
                        size: "sm",
                        className: "absolute right-1 top-1/2 transform -translate-y-1/2 w-8 h-8 p-0",
                        onClick: ()=>setSearchValue(""),
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.X, {
                            className: "w-4 h-4"
                        })
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "flex items-center justify-between gap-4",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "flex items-center gap-2",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_popover.Popover, {
                                open: isFilterOpen,
                                onOpenChange: setIsFilterOpen,
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_popover.PopoverTrigger, {
                                        asChild: true,
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_button.Button, {
                                            variant: "outline",
                                            size: "sm",
                                            className: "gap-2",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Filter, {
                                                    className: "w-4 h-4"
                                                }),
                                                "Filters",
                                                activeFilterCount > 0 && /*#__PURE__*/ (0, _jsxruntime.jsx)(_badge.Badge, {
                                                    variant: "secondary",
                                                    className: "ml-1 px-1.5 py-0 text-xs",
                                                    children: activeFilterCount
                                                })
                                            ]
                                        })
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_popover.PopoverContent, {
                                        className: "w-96 p-4",
                                        align: "start",
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "space-y-4",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    className: "flex items-center justify-between",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("h4", {
                                                            className: "font-semibold",
                                                            children: "Conversation Filters"
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                                                            variant: "ghost",
                                                            size: "sm",
                                                            onClick: clearAllFilters,
                                                            className: "text-xs",
                                                            children: "Clear All"
                                                        })
                                                    ]
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    className: "space-y-2",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                                            className: "text-sm font-medium",
                                                            children: "Status"
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                            className: "flex gap-2",
                                                            children: Object.entries(filterStats.statusCounts).map(([status, count])=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                    className: "flex items-center space-x-2",
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_checkbox.Checkbox, {
                                                                            id: `status-${status}`,
                                                                            checked: filters.status.includes(status),
                                                                            onCheckedChange: (checked)=>{
                                                                                const newStatus = checked ? [
                                                                                    ...filters.status,
                                                                                    status
                                                                                ] : filters.status.filter((s)=>s !== status);
                                                                                updateFilter("status", newStatus);
                                                                            }
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_label.Label, {
                                                                            htmlFor: `status-${status}`,
                                                                            className: "text-sm",
                                                                            children: [
                                                                                status,
                                                                                " (",
                                                                                count,
                                                                                ")"
                                                                            ]
                                                                        })
                                                                    ]
                                                                }, status))
                                                        })
                                                    ]
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    className: "space-y-2",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                                            className: "text-sm font-medium",
                                                            children: "Participants"
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                            className: "max-h-32 overflow-y-auto space-y-1",
                                                            children: agents.filter((agent)=>filterStats.participantCounts[agent.id]).map((agent)=>{
                                                                const count = filterStats.participantCounts[agent.id];
                                                                return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                    className: "flex items-center space-x-2",
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_checkbox.Checkbox, {
                                                                            id: `participant-${agent.id}`,
                                                                            checked: filters.participants.includes(agent.id),
                                                                            onCheckedChange: (checked)=>{
                                                                                const newParticipants = checked ? [
                                                                                    ...filters.participants,
                                                                                    agent.id
                                                                                ] : filters.participants.filter((p)=>p !== agent.id);
                                                                                updateFilter("participants", newParticipants);
                                                                            }
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_label.Label, {
                                                                            htmlFor: `participant-${agent.id}`,
                                                                            className: "text-sm flex items-center gap-2",
                                                                            children: [
                                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                                    className: "w-3 h-3 rounded-full",
                                                                                    style: {
                                                                                        backgroundColor: agent.color
                                                                                    }
                                                                                }),
                                                                                agent.name,
                                                                                " (",
                                                                                count,
                                                                                ")"
                                                                            ]
                                                                        })
                                                                    ]
                                                                }, agent.id);
                                                            })
                                                        })
                                                    ]
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    className: "space-y-2",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                                            className: "text-sm font-medium",
                                                            children: "Message Types"
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                            className: "flex flex-wrap gap-2",
                                                            children: Object.entries(filterStats.messageTypeCounts).map(([type, count])=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                    className: "flex items-center space-x-2",
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_checkbox.Checkbox, {
                                                                            id: `type-${type}`,
                                                                            checked: filters.messageTypes.includes(type),
                                                                            onCheckedChange: (checked)=>{
                                                                                const newTypes = checked ? [
                                                                                    ...filters.messageTypes,
                                                                                    type
                                                                                ] : filters.messageTypes.filter((t)=>t !== type);
                                                                                updateFilter("messageTypes", newTypes);
                                                                            }
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_label.Label, {
                                                                            htmlFor: `type-${type}`,
                                                                            className: "text-sm",
                                                                            children: [
                                                                                type,
                                                                                " (",
                                                                                count,
                                                                                ")"
                                                                            ]
                                                                        })
                                                                    ]
                                                                }, type))
                                                        })
                                                    ]
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    className: "space-y-2",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                                            className: "text-sm font-medium",
                                                            children: "Date Range"
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_daterangepicker.DatePickerWithRange, {
                                                            date: filters.dateRange,
                                                            onDateChange: (dateRange)=>updateFilter("dateRange", dateRange)
                                                        })
                                                    ]
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    className: "space-y-2",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_label.Label, {
                                                            className: "text-sm font-medium",
                                                            children: [
                                                                "Message Count: ",
                                                                filters.messageCountRange[0],
                                                                " -",
                                                                " ",
                                                                filters.messageCountRange[1]
                                                            ]
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_slider.Slider, {
                                                            value: filters.messageCountRange,
                                                            onValueChange: (value)=>updateFilter("messageCountRange", value),
                                                            min: 0,
                                                            max: 1000,
                                                            step: 10,
                                                            className: "w-full"
                                                        })
                                                    ]
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    className: "space-y-2",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_label.Label, {
                                                            className: "text-sm font-medium",
                                                            children: [
                                                                "Duration (minutes): ",
                                                                filters.durationRange[0],
                                                                " -",
                                                                " ",
                                                                filters.durationRange[1]
                                                            ]
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_slider.Slider, {
                                                            value: filters.durationRange,
                                                            onValueChange: (value)=>updateFilter("durationRange", value),
                                                            min: 0,
                                                            max: 120,
                                                            step: 5,
                                                            className: "w-full"
                                                        })
                                                    ]
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    className: "space-y-2",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)(_label.Label, {
                                                            className: "text-sm font-medium",
                                                            children: [
                                                                "Thread Count: ",
                                                                filters.threadCount[0],
                                                                " -",
                                                                " ",
                                                                filters.threadCount[1]
                                                            ]
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_slider.Slider, {
                                                            value: filters.threadCount,
                                                            onValueChange: (value)=>updateFilter("threadCount", value),
                                                            min: 0,
                                                            max: 10,
                                                            step: 1,
                                                            className: "w-full"
                                                        })
                                                    ]
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    className: "space-y-2",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                            className: "flex items-center space-x-2",
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_checkbox.Checkbox, {
                                                                    id: "has-errors",
                                                                    checked: filters.hasErrors,
                                                                    onCheckedChange: (checked)=>updateFilter("hasErrors", checked)
                                                                }),
                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                                                    htmlFor: "has-errors",
                                                                    className: "text-sm",
                                                                    children: "Has errors or issues"
                                                                })
                                                            ]
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                            className: "flex items-center space-x-2",
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_checkbox.Checkbox, {
                                                                    id: "is-live",
                                                                    checked: filters.isLive,
                                                                    onCheckedChange: (checked)=>updateFilter("isLive", checked)
                                                                }),
                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                                                    htmlFor: "is-live",
                                                                    className: "text-sm",
                                                                    children: "Live conversations only"
                                                                })
                                                            ]
                                                        })
                                                    ]
                                                })
                                            ]
                                        })
                                    })
                                ]
                            }),
                            filters.status.length > 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_badge.Badge, {
                                variant: "outline",
                                className: "gap-1",
                                children: [
                                    "Status: ",
                                    filters.status.join(", "),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.X, {
                                        className: "w-3 h-3 cursor-pointer",
                                        onClick: ()=>updateFilter("status", [])
                                    })
                                ]
                            }),
                            filters.participants.length > 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)(_badge.Badge, {
                                variant: "outline",
                                className: "gap-1",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Users, {
                                        className: "w-3 h-3"
                                    }),
                                    filters.participants.length,
                                    " participants",
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.X, {
                                        className: "w-3 h-3 cursor-pointer",
                                        onClick: ()=>updateFilter("participants", [])
                                    })
                                ]
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "flex items-center gap-4 text-sm text-muted-foreground",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                className: "flex items-center gap-1",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.MessageSquare, {
                                        className: "w-4 h-4"
                                    }),
                                    filterStats.totalConversations,
                                    " total"
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                className: "flex items-center gap-1",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.CheckCircle, {
                                        className: "w-4 h-4 text-green-500"
                                    }),
                                    filterStats.activeConversations,
                                    " active"
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                className: "flex items-center gap-1",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Clock, {
                                        className: "w-4 h-4"
                                    }),
                                    filterStats.completedConversations,
                                    " completed"
                                ]
                            })
                        ]
                    })
                ]
            }),
            searchResults && searchResults.totalResults > 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "border rounded-lg p-4 bg-muted/50",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "flex items-center justify-between mb-3",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("h4", {
                                className: "font-semibold",
                                children: [
                                    "Search Results (",
                                    searchResults.totalResults,
                                    ")"
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)(_badge.Badge, {
                                variant: "secondary",
                                children: [
                                    searchResults.conversations.length,
                                    " conversations,",
                                    " ",
                                    searchResults.messages.length,
                                    " messages"
                                ]
                            })
                        ]
                    }),
                    searchResults.messages.length > 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "space-y-2",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_label.Label, {
                                className: "text-sm font-medium",
                                children: "Message matches:"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "max-h-32 overflow-y-auto space-y-1",
                                children: [
                                    searchResults.messages.slice(0, 5).map((result, index)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "text-sm p-2 bg-background rounded border",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    className: "font-medium text-xs text-muted-foreground mb-1",
                                                    children: [
                                                        "Conversation ",
                                                        result.conversationId.substring(0, 8)
                                                    ]
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                    className: "line-clamp-2",
                                                    children: result.snippet
                                                })
                                            ]
                                        }, index)),
                                    searchResults.messages.length > 5 && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        className: "text-xs text-muted-foreground text-center py-1",
                                        children: [
                                            "+",
                                            searchResults.messages.length - 5,
                                            " more matches"
                                        ]
                                    })
                                ]
                            })
                        ]
                    })
                ]
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,
6b5deb11fb05eab2f02597b8acb19651
/**
 * Markov Blanket Implementation
 *
 * Core implementation for Markov blanket calculations and state management
 * supporting active inference and free energy minimization.
 */"use strict";

/* istanbul ignore next */
function cov_1tektexf8q() {
  var path = "/Users/matthewmoroney/builds/FreeAgentics/web/lib/markov-blanket.ts";
  var hash = "b7fb596dcfa59edf2fda189ac33cf394a937d73c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewmoroney/builds/FreeAgentics/web/lib/markov-blanket.ts",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 9,
          column: 3
        }
      },
      "1": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 14,
          column: 7
        }
      },
      "2": {
        start: {
          line: 11,
          column: 24
        },
        end: {
          line: 14,
          column: 7
        }
      },
      "3": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 38,
          column: 3
        }
      },
      "4": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 35
        }
      },
      "5": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 35
        }
      },
      "6": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 41
        }
      },
      "7": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 35
        }
      },
      "8": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 34
        }
      },
      "9": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 35
        }
      },
      "10": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 37
        }
      },
      "11": {
        start: {
          line: 39,
          column: 23
        },
        end: {
          line: 44,
          column: 1
        }
      },
      "12": {
        start: {
          line: 46,
          column: 24
        },
        end: {
          line: 46,
          column: 37
        }
      },
      "13": {
        start: {
          line: 47,
          column: 23
        },
        end: {
          line: 47,
          column: 26
        }
      },
      "14": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "15": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 64
        }
      },
      "16": {
        start: {
          line: 52,
          column: 20
        },
        end: {
          line: 64,
          column: 5
        }
      },
      "17": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 66,
          column: 54
        }
      },
      "18": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 67,
          column: 19
        }
      },
      "19": {
        start: {
          line: 70,
          column: 20
        },
        end: {
          line: 73,
          column: 5
        }
      },
      "20": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 79,
          column: 5
        }
      },
      "21": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 78,
          column: 10
        }
      },
      "22": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 89,
          column: 5
        }
      },
      "23": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 88,
          column: 15
        }
      },
      "24": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 86,
          column: 14
        }
      },
      "25": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 23
        }
      },
      "26": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 96,
          column: 5
        }
      },
      "27": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 95,
          column: 15
        }
      },
      "28": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 55
        }
      },
      "29": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 23
        }
      },
      "30": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 102,
          column: 5
        }
      },
      "31": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 101,
          column: 10
        }
      },
      "32": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 104,
          column: 54
        }
      },
      "33": {
        start: {
          line: 105,
          column: 4
        },
        end: {
          line: 105,
          column: 19
        }
      },
      "34": {
        start: {
          line: 109,
          column: 19
        },
        end: {
          line: 109,
          column: 47
        }
      },
      "35": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 112,
          column: 5
        }
      },
      "36": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 111,
          column: 28
        }
      },
      "37": {
        start: {
          line: 113,
          column: 21
        },
        end: {
          line: 113,
          column: 22
        }
      },
      "38": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 120,
          column: 7
        }
      },
      "39": {
        start: {
          line: 116,
          column: 26
        },
        end: {
          line: 116,
          column: 47
        }
      },
      "40": {
        start: {
          line: 117,
          column: 23
        },
        end: {
          line: 117,
          column: 63
        }
      },
      "41": {
        start: {
          line: 118,
          column: 32
        },
        end: {
          line: 118,
          column: 66
        }
      },
      "42": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 58
        }
      },
      "43": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 127,
          column: 7
        }
      },
      "44": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 126,
          column: 9
        }
      },
      "45": {
        start: {
          line: 124,
          column: 28
        },
        end: {
          line: 124,
          column: 88
        }
      },
      "46": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 40
        }
      },
      "47": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 133,
          column: 7
        }
      },
      "48": {
        start: {
          line: 130,
          column: 22
        },
        end: {
          line: 130,
          column: 25
        }
      },
      "49": {
        start: {
          line: 131,
          column: 27
        },
        end: {
          line: 131,
          column: 53
        }
      },
      "50": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 132,
          column: 40
        }
      },
      "51": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 140,
          column: 7
        }
      },
      "52": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 139,
          column: 9
        }
      },
      "53": {
        start: {
          line: 137,
          column: 31
        },
        end: {
          line: 137,
          column: 63
        }
      },
      "54": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 138,
          column: 43
        }
      },
      "55": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 145,
          column: 7
        }
      },
      "56": {
        start: {
          line: 146,
          column: 4
        },
        end: {
          line: 146,
          column: 22
        }
      },
      "57": {
        start: {
          line: 149,
          column: 19
        },
        end: {
          line: 152,
          column: 5
        }
      },
      "58": {
        start: {
          line: 153,
          column: 18
        },
        end: {
          line: 155,
          column: 5
        }
      },
      "59": {
        start: {
          line: 156,
          column: 21
        },
        end: {
          line: 156,
          column: 22
        }
      },
      "60": {
        start: {
          line: 157,
          column: 20
        },
        end: {
          line: 157,
          column: 25
        }
      },
      "61": {
        start: {
          line: 158,
          column: 21
        },
        end: {
          line: 158,
          column: 49
        }
      },
      "62": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 189,
          column: 5
        }
      },
      "63": {
        start: {
          line: 160,
          column: 25
        },
        end: {
          line: 160,
          column: 27
        }
      },
      "64": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 175,
          column: 11
        }
      },
      "65": {
        start: {
          line: 163,
          column: 28
        },
        end: {
          line: 163,
          column: 33
        }
      },
      "66": {
        start: {
          line: 164,
          column: 29
        },
        end: {
          line: 164,
          column: 56
        }
      },
      "67": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 74
        }
      },
      "68": {
        start: {
          line: 167,
          column: 30
        },
        end: {
          line: 167,
          column: 58
        }
      },
      "69": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 74
        }
      },
      "70": {
        start: {
          line: 170,
          column: 31
        },
        end: {
          line: 170,
          column: 59
        }
      },
      "71": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 172,
          column: 69
        }
      },
      "72": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 51
        }
      },
      "73": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 180,
          column: 11
        }
      },
      "74": {
        start: {
          line: 178,
          column: 27
        },
        end: {
          line: 178,
          column: 63
        }
      },
      "75": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 179,
          column: 105
        }
      },
      "76": {
        start: {
          line: 182,
          column: 26
        },
        end: {
          line: 182,
          column: 54
        }
      },
      "77": {
        start: {
          line: 183,
          column: 28
        },
        end: {
          line: 183,
          column: 50
        }
      },
      "78": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 186,
          column: 9
        }
      },
      "79": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 29
        }
      },
      "80": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 187,
          column: 31
        }
      },
      "81": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 21
        }
      },
      "82": {
        start: {
          line: 190,
          column: 4
        },
        end: {
          line: 198,
          column: 6
        }
      },
      "83": {
        start: {
          line: 201,
          column: 17
        },
        end: {
          line: 206,
          column: 5
        }
      },
      "84": {
        start: {
          line: 207,
          column: 4
        },
        end: {
          line: 227,
          column: 7
        }
      },
      "85": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 208,
          column: 50
        }
      },
      "86": {
        start: {
          line: 208,
          column: 37
        },
        end: {
          line: 208,
          column: 50
        }
      },
      "87": {
        start: {
          line: 210,
          column: 29
        },
        end: {
          line: 210,
          column: 62
        }
      },
      "88": {
        start: {
          line: 211,
          column: 26
        },
        end: {
          line: 211,
          column: 65
        }
      },
      "89": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 212,
          column: 62
        }
      },
      "90": {
        start: {
          line: 212,
          column: 49
        },
        end: {
          line: 212,
          column: 62
        }
      },
      "91": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 217,
          column: 9
        }
      },
      "92": {
        start: {
          line: 215,
          column: 34
        },
        end: {
          line: 215,
          column: 78
        }
      },
      "93": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 50
        }
      },
      "94": {
        start: {
          line: 216,
          column: 37
        },
        end: {
          line: 216,
          column: 50
        }
      },
      "95": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 225,
          column: 9
        }
      },
      "96": {
        start: {
          line: 220,
          column: 37
        },
        end: {
          line: 223,
          column: 17
        }
      },
      "97": {
        start: {
          line: 220,
          column: 87
        },
        end: {
          line: 220,
          column: 112
        }
      },
      "98": {
        start: {
          line: 221,
          column: 29
        },
        end: {
          line: 221,
          column: 103
        }
      },
      "99": {
        start: {
          line: 222,
          column: 16
        },
        end: {
          line: 222,
          column: 40
        }
      },
      "100": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 224,
          column: 51
        }
      },
      "101": {
        start: {
          line: 224,
          column: 38
        },
        end: {
          line: 224,
          column: 51
        }
      },
      "102": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 226,
          column: 20
        }
      },
      "103": {
        start: {
          line: 230,
          column: 4
        },
        end: {
          line: 232,
          column: 5
        }
      },
      "104": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 231,
          column: 71
        }
      },
      "105": {
        start: {
          line: 233,
          column: 4
        },
        end: {
          line: 235,
          column: 5
        }
      },
      "106": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 234,
          column: 27
        }
      },
      "107": {
        start: {
          line: 236,
          column: 19
        },
        end: {
          line: 244,
          column: 5
        }
      },
      "108": {
        start: {
          line: 238,
          column: 48
        },
        end: {
          line: 238,
          column: 57
        }
      },
      "109": {
        start: {
          line: 246,
          column: 4
        },
        end: {
          line: 252,
          column: 7
        }
      },
      "110": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 251,
          column: 11
        }
      },
      "111": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 250,
          column: 13
        }
      },
      "112": {
        start: {
          line: 249,
          column: 16
        },
        end: {
          line: 249,
          column: 49
        }
      },
      "113": {
        start: {
          line: 254,
          column: 28
        },
        end: {
          line: 254,
          column: 37
        }
      },
      "114": {
        start: {
          line: 255,
          column: 4
        },
        end: {
          line: 257,
          column: 7
        }
      },
      "115": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 256,
          column: 83
        }
      },
      "116": {
        start: {
          line: 256,
          column: 57
        },
        end: {
          line: 256,
          column: 81
        }
      },
      "117": {
        start: {
          line: 258,
          column: 4
        },
        end: {
          line: 266,
          column: 7
        }
      },
      "118": {
        start: {
          line: 259,
          column: 23
        },
        end: {
          line: 259,
          column: 77
        }
      },
      "119": {
        start: {
          line: 259,
          column: 41
        },
        end: {
          line: 259,
          column: 60
        }
      },
      "120": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 265,
          column: 9
        }
      },
      "121": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 264,
          column: 14
        }
      },
      "122": {
        start: {
          line: 262,
          column: 47
        },
        end: {
          line: 262,
          column: 60
        }
      },
      "123": {
        start: {
          line: 263,
          column: 48
        },
        end: {
          line: 263,
          column: 62
        }
      },
      "124": {
        start: {
          line: 268,
          column: 20
        },
        end: {
          line: 268,
          column: 62
        }
      },
      "125": {
        start: {
          line: 268,
          column: 38
        },
        end: {
          line: 268,
          column: 61
        }
      },
      "126": {
        start: {
          line: 269,
          column: 24
        },
        end: {
          line: 269,
          column: 60
        }
      },
      "127": {
        start: {
          line: 269,
          column: 49
        },
        end: {
          line: 269,
          column: 56
        }
      },
      "128": {
        start: {
          line: 270,
          column: 25
        },
        end: {
          line: 270,
          column: 34
        }
      },
      "129": {
        start: {
          line: 271,
          column: 4
        },
        end: {
          line: 273,
          column: 7
        }
      },
      "130": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 272,
          column: 82
        }
      },
      "131": {
        start: {
          line: 272,
          column: 59
        },
        end: {
          line: 272,
          column: 80
        }
      },
      "132": {
        start: {
          line: 274,
          column: 4
        },
        end: {
          line: 286,
          column: 7
        }
      },
      "133": {
        start: {
          line: 275,
          column: 26
        },
        end: {
          line: 275,
          column: 27
        }
      },
      "134": {
        start: {
          line: 276,
          column: 24
        },
        end: {
          line: 276,
          column: 25
        }
      },
      "135": {
        start: {
          line: 277,
          column: 8
        },
        end: {
          line: 282,
          column: 11
        }
      },
      "136": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 281,
          column: 13
        }
      },
      "137": {
        start: {
          line: 279,
          column: 16
        },
        end: {
          line: 279,
          column: 72
        }
      },
      "138": {
        start: {
          line: 280,
          column: 16
        },
        end: {
          line: 280,
          column: 40
        }
      },
      "139": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 285,
          column: 9
        }
      },
      "140": {
        start: {
          line: 284,
          column: 12
        },
        end: {
          line: 284,
          column: 65
        }
      },
      "141": {
        start: {
          line: 288,
          column: 4
        },
        end: {
          line: 288,
          column: 52
        }
      },
      "142": {
        start: {
          line: 289,
          column: 4
        },
        end: {
          line: 289,
          column: 18
        }
      },
      "143": {
        start: {
          line: 292,
          column: 19
        },
        end: {
          line: 292,
          column: 21
        }
      },
      "144": {
        start: {
          line: 293,
          column: 21
        },
        end: {
          line: 293,
          column: 23
        }
      },
      "145": {
        start: {
          line: 295,
          column: 4
        },
        end: {
          line: 295,
          column: 63
        }
      },
      "146": {
        start: {
          line: 295,
          column: 21
        },
        end: {
          line: 295,
          column: 63
        }
      },
      "147": {
        start: {
          line: 296,
          column: 4
        },
        end: {
          line: 296,
          column: 73
        }
      },
      "148": {
        start: {
          line: 296,
          column: 26
        },
        end: {
          line: 296,
          column: 73
        }
      },
      "149": {
        start: {
          line: 297,
          column: 4
        },
        end: {
          line: 297,
          column: 83
        }
      },
      "150": {
        start: {
          line: 297,
          column: 31
        },
        end: {
          line: 297,
          column: 83
        }
      },
      "151": {
        start: {
          line: 298,
          column: 4
        },
        end: {
          line: 298,
          column: 83
        }
      },
      "152": {
        start: {
          line: 298,
          column: 31
        },
        end: {
          line: 298,
          column: 83
        }
      },
      "153": {
        start: {
          line: 299,
          column: 4
        },
        end: {
          line: 299,
          column: 87
        }
      },
      "154": {
        start: {
          line: 299,
          column: 33
        },
        end: {
          line: 299,
          column: 87
        }
      },
      "155": {
        start: {
          line: 300,
          column: 4
        },
        end: {
          line: 300,
          column: 87
        }
      },
      "156": {
        start: {
          line: 300,
          column: 33
        },
        end: {
          line: 300,
          column: 87
        }
      },
      "157": {
        start: {
          line: 302,
          column: 4
        },
        end: {
          line: 308,
          column: 5
        }
      },
      "158": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 307,
          column: 11
        }
      },
      "159": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 306,
          column: 13
        }
      },
      "160": {
        start: {
          line: 305,
          column: 16
        },
        end: {
          line: 305,
          column: 78
        }
      },
      "161": {
        start: {
          line: 309,
          column: 4
        },
        end: {
          line: 324,
          column: 5
        }
      },
      "162": {
        start: {
          line: 310,
          column: 8
        },
        end: {
          line: 317,
          column: 11
        }
      },
      "163": {
        start: {
          line: 311,
          column: 12
        },
        end: {
          line: 313,
          column: 13
        }
      },
      "164": {
        start: {
          line: 312,
          column: 16
        },
        end: {
          line: 312,
          column: 88
        }
      },
      "165": {
        start: {
          line: 314,
          column: 12
        },
        end: {
          line: 316,
          column: 13
        }
      },
      "166": {
        start: {
          line: 315,
          column: 16
        },
        end: {
          line: 315,
          column: 96
        }
      },
      "167": {
        start: {
          line: 319,
          column: 33
        },
        end: {
          line: 319,
          column: 111
        }
      },
      "168": {
        start: {
          line: 319,
          column: 90
        },
        end: {
          line: 319,
          column: 107
        }
      },
      "169": {
        start: {
          line: 320,
          column: 28
        },
        end: {
          line: 320,
          column: 107
        }
      },
      "170": {
        start: {
          line: 320,
          column: 85
        },
        end: {
          line: 320,
          column: 103
        }
      },
      "171": {
        start: {
          line: 321,
          column: 8
        },
        end: {
          line: 323,
          column: 9
        }
      },
      "172": {
        start: {
          line: 322,
          column: 12
        },
        end: {
          line: 322,
          column: 88
        }
      },
      "173": {
        start: {
          line: 325,
          column: 4
        },
        end: {
          line: 334,
          column: 5
        }
      },
      "174": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 333,
          column: 11
        }
      },
      "175": {
        start: {
          line: 327,
          column: 12
        },
        end: {
          line: 329,
          column: 13
        }
      },
      "176": {
        start: {
          line: 328,
          column: 16
        },
        end: {
          line: 328,
          column: 88
        }
      },
      "177": {
        start: {
          line: 330,
          column: 12
        },
        end: {
          line: 332,
          column: 13
        }
      },
      "178": {
        start: {
          line: 331,
          column: 16
        },
        end: {
          line: 331,
          column: 98
        }
      },
      "179": {
        start: {
          line: 335,
          column: 4
        },
        end: {
          line: 339,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 10,
            column: 9
          },
          end: {
            line: 10,
            column: 16
          }
        },
        loc: {
          start: {
            line: 10,
            column: 30
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 25
          },
          end: {
            line: 17,
            column: 26
          }
        },
        loc: {
          start: {
            line: 17,
            column: 36
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 25
          },
          end: {
            line: 20,
            column: 26
          }
        },
        loc: {
          start: {
            line: 20,
            column: 36
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 23,
            column: 31
          },
          end: {
            line: 23,
            column: 32
          }
        },
        loc: {
          start: {
            line: 23,
            column: 42
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 25
          },
          end: {
            line: 26,
            column: 26
          }
        },
        loc: {
          start: {
            line: 26,
            column: 36
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 29,
            column: 24
          },
          end: {
            line: 29,
            column: 25
          }
        },
        loc: {
          start: {
            line: 29,
            column: 35
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 29
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 32,
            column: 25
          },
          end: {
            line: 32,
            column: 26
          }
        },
        loc: {
          start: {
            line: 32,
            column: 36
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 32
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 35,
            column: 27
          },
          end: {
            line: 35,
            column: 28
          }
        },
        loc: {
          start: {
            line: 35,
            column: 38
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 35
      },
      "8": {
        name: "createMarkovBlanket",
        decl: {
          start: {
            line: 48,
            column: 9
          },
          end: {
            line: 48,
            column: 28
          }
        },
        loc: {
          start: {
            line: 48,
            column: 38
          },
          end: {
            line: 68,
            column: 1
          }
        },
        line: 48
      },
      "9": {
        name: "updateMarkovBlanket",
        decl: {
          start: {
            line: 69,
            column: 9
          },
          end: {
            line: 69,
            column: 28
          }
        },
        loc: {
          start: {
            line: 69,
            column: 47
          },
          end: {
            line: 106,
            column: 1
          }
        },
        line: 69
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 82,
            column: 75
          },
          end: {
            line: 82,
            column: 76
          }
        },
        loc: {
          start: {
            line: 82,
            column: 96
          },
          end: {
            line: 88,
            column: 9
          }
        },
        line: 82
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 92,
            column: 79
          },
          end: {
            line: 92,
            column: 80
          }
        },
        loc: {
          start: {
            line: 92,
            column: 100
          },
          end: {
            line: 95,
            column: 9
          }
        },
        line: 92
      },
      "12": {
        name: "calculateFreeEnergy",
        decl: {
          start: {
            line: 107,
            column: 9
          },
          end: {
            line: 107,
            column: 28
          }
        },
        loc: {
          start: {
            line: 107,
            column: 38
          },
          end: {
            line: 147,
            column: 1
          }
        },
        line: 107
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 115,
            column: 49
          },
          end: {
            line: 115,
            column: 50
          }
        },
        loc: {
          start: {
            line: 115,
            column: 72
          },
          end: {
            line: 120,
            column: 5
          }
        },
        line: 115
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 122,
            column: 50
          },
          end: {
            line: 122,
            column: 51
          }
        },
        loc: {
          start: {
            line: 122,
            column: 59
          },
          end: {
            line: 127,
            column: 5
          }
        },
        line: 122
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 129,
            column: 51
          },
          end: {
            line: 129,
            column: 52
          }
        },
        loc: {
          start: {
            line: 129,
            column: 67
          },
          end: {
            line: 133,
            column: 5
          }
        },
        line: 129
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 135,
            column: 48
          },
          end: {
            line: 135,
            column: 49
          }
        },
        loc: {
          start: {
            line: 135,
            column: 57
          },
          end: {
            line: 140,
            column: 5
          }
        },
        line: 135
      },
      "17": {
        name: "minimizeFreeEnergy",
        decl: {
          start: {
            line: 148,
            column: 15
          },
          end: {
            line: 148,
            column: 33
          }
        },
        loc: {
          start: {
            line: 148,
            column: 52
          },
          end: {
            line: 199,
            column: 1
          }
        },
        line: 148
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 162,
            column: 52
          },
          end: {
            line: 162,
            column: 53
          }
        },
        loc: {
          start: {
            line: 162,
            column: 59
          },
          end: {
            line: 175,
            column: 9
          }
        },
        line: 162
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 177,
            column: 38
          },
          end: {
            line: 177,
            column: 39
          }
        },
        loc: {
          start: {
            line: 177,
            column: 45
          },
          end: {
            line: 180,
            column: 9
          }
        },
        line: 177
      },
      "20": {
        name: "getMarkovBlanketNeighbors",
        decl: {
          start: {
            line: 200,
            column: 9
          },
          end: {
            line: 200,
            column: 34
          }
        },
        loc: {
          start: {
            line: 200,
            column: 66
          },
          end: {
            line: 228,
            column: 1
          }
        },
        line: 200
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 207,
            column: 30
          },
          end: {
            line: 207,
            column: 31
          }
        },
        loc: {
          start: {
            line: 207,
            column: 39
          },
          end: {
            line: 227,
            column: 5
          }
        },
        line: 207
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 220,
            column: 80
          },
          end: {
            line: 220,
            column: 81
          }
        },
        loc: {
          start: {
            line: 220,
            column: 87
          },
          end: {
            line: 220,
            column: 112
          }
        },
        line: 220
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 220,
            column: 121
          },
          end: {
            line: 220,
            column: 122
          }
        },
        loc: {
          start: {
            line: 220,
            column: 133
          },
          end: {
            line: 223,
            column: 13
          }
        },
        line: 220
      },
      "24": {
        name: "mergeMarkovBlankets",
        decl: {
          start: {
            line: 229,
            column: 9
          },
          end: {
            line: 229,
            column: 28
          }
        },
        loc: {
          start: {
            line: 229,
            column: 39
          },
          end: {
            line: 290,
            column: 1
          }
        },
        line: 229
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 238,
            column: 43
          },
          end: {
            line: 238,
            column: 44
          }
        },
        loc: {
          start: {
            line: 238,
            column: 48
          },
          end: {
            line: 238,
            column: 57
          }
        },
        line: 238
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 246,
            column: 21
          },
          end: {
            line: 246,
            column: 22
          }
        },
        loc: {
          start: {
            line: 246,
            column: 32
          },
          end: {
            line: 252,
            column: 5
          }
        },
        line: 246
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 247,
            column: 53
          },
          end: {
            line: 247,
            column: 54
          }
        },
        loc: {
          start: {
            line: 247,
            column: 69
          },
          end: {
            line: 251,
            column: 9
          }
        },
        line: 247
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 255,
            column: 21
          },
          end: {
            line: 255,
            column: 22
          }
        },
        loc: {
          start: {
            line: 255,
            column: 32
          },
          end: {
            line: 257,
            column: 5
          }
        },
        line: 255
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 256,
            column: 50
          },
          end: {
            line: 256,
            column: 51
          }
        },
        loc: {
          start: {
            line: 256,
            column: 57
          },
          end: {
            line: 256,
            column: 81
          }
        },
        line: 256
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 258,
            column: 28
          },
          end: {
            line: 258,
            column: 29
          }
        },
        loc: {
          start: {
            line: 258,
            column: 35
          },
          end: {
            line: 266,
            column: 5
          }
        },
        line: 258
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 259,
            column: 36
          },
          end: {
            line: 259,
            column: 37
          }
        },
        loc: {
          start: {
            line: 259,
            column: 41
          },
          end: {
            line: 259,
            column: 60
          }
        },
        line: 259
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 262,
            column: 37
          },
          end: {
            line: 262,
            column: 38
          }
        },
        loc: {
          start: {
            line: 262,
            column: 47
          },
          end: {
            line: 262,
            column: 60
          }
        },
        line: 262
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 263,
            column: 38
          },
          end: {
            line: 263,
            column: 39
          }
        },
        loc: {
          start: {
            line: 263,
            column: 48
          },
          end: {
            line: 263,
            column: 62
          }
        },
        line: 263
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 268,
            column: 33
          },
          end: {
            line: 268,
            column: 34
          }
        },
        loc: {
          start: {
            line: 268,
            column: 38
          },
          end: {
            line: 268,
            column: 61
          }
        },
        line: 268
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 269,
            column: 39
          },
          end: {
            line: 269,
            column: 40
          }
        },
        loc: {
          start: {
            line: 269,
            column: 49
          },
          end: {
            line: 269,
            column: 56
          }
        },
        line: 269
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 271,
            column: 21
          },
          end: {
            line: 271,
            column: 22
          }
        },
        loc: {
          start: {
            line: 271,
            column: 32
          },
          end: {
            line: 273,
            column: 5
          }
        },
        line: 271
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 272,
            column: 52
          },
          end: {
            line: 272,
            column: 53
          }
        },
        loc: {
          start: {
            line: 272,
            column: 59
          },
          end: {
            line: 272,
            column: 80
          }
        },
        line: 272
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 274,
            column: 25
          },
          end: {
            line: 274,
            column: 26
          }
        },
        loc: {
          start: {
            line: 274,
            column: 32
          },
          end: {
            line: 286,
            column: 5
          }
        },
        line: 274
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 277,
            column: 25
          },
          end: {
            line: 277,
            column: 26
          }
        },
        loc: {
          start: {
            line: 277,
            column: 39
          },
          end: {
            line: 282,
            column: 9
          }
        },
        line: 277
      },
      "40": {
        name: "validateMarkovBlanket",
        decl: {
          start: {
            line: 291,
            column: 9
          },
          end: {
            line: 291,
            column: 30
          }
        },
        loc: {
          start: {
            line: 291,
            column: 40
          },
          end: {
            line: 340,
            column: 1
          }
        },
        line: 291
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 303,
            column: 55
          },
          end: {
            line: 303,
            column: 56
          }
        },
        loc: {
          start: {
            line: 303,
            column: 71
          },
          end: {
            line: 307,
            column: 9
          }
        },
        line: 303
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 310,
            column: 53
          },
          end: {
            line: 310,
            column: 54
          }
        },
        loc: {
          start: {
            line: 310,
            column: 69
          },
          end: {
            line: 317,
            column: 9
          }
        },
        line: 310
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 319,
            column: 76
          },
          end: {
            line: 319,
            column: 77
          }
        },
        loc: {
          start: {
            line: 319,
            column: 90
          },
          end: {
            line: 319,
            column: 107
          }
        },
        line: 319
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 320,
            column: 71
          },
          end: {
            line: 320,
            column: 72
          }
        },
        loc: {
          start: {
            line: 320,
            column: 85
          },
          end: {
            line: 320,
            column: 103
          }
        },
        line: 320
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 326,
            column: 53
          },
          end: {
            line: 326,
            column: 54
          }
        },
        loc: {
          start: {
            line: 326,
            column: 69
          },
          end: {
            line: 333,
            column: 9
          }
        },
        line: 326
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "1": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 49,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 49,
            column: 19
          }
        }, {
          start: {
            line: 49,
            column: 23
          },
          end: {
            line: 49,
            column: 39
          }
        }],
        line: 49
      },
      "2": {
        loc: {
          start: {
            line: 55,
            column: 22
          },
          end: {
            line: 55,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 22
          },
          end: {
            line: 55,
            column: 42
          }
        }, {
          start: {
            line: 55,
            column: 46
          },
          end: {
            line: 55,
            column: 48
          }
        }],
        line: 55
      },
      "3": {
        loc: {
          start: {
            line: 56,
            column: 22
          },
          end: {
            line: 56,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 22
          },
          end: {
            line: 56,
            column: 42
          }
        }, {
          start: {
            line: 56,
            column: 46
          },
          end: {
            line: 56,
            column: 48
          }
        }],
        line: 56
      },
      "4": {
        loc: {
          start: {
            line: 57,
            column: 24
          },
          end: {
            line: 57,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 24
          },
          end: {
            line: 57,
            column: 46
          }
        }, {
          start: {
            line: 57,
            column: 50
          },
          end: {
            line: 57,
            column: 52
          }
        }],
        line: 57
      },
      "5": {
        loc: {
          start: {
            line: 58,
            column: 24
          },
          end: {
            line: 58,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 24
          },
          end: {
            line: 58,
            column: 46
          }
        }, {
          start: {
            line: 58,
            column: 50
          },
          end: {
            line: 58,
            column: 52
          }
        }],
        line: 58
      },
      "6": {
        loc: {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "7": {
        loc: {
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "8": {
        loc: {
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 96,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 96,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "9": {
        loc: {
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 102,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 102,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "10": {
        loc: {
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 112,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 112,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "11": {
        loc: {
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 110,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 110,
            column: 14
          }
        }, {
          start: {
            line: 110,
            column: 18
          },
          end: {
            line: 110,
            column: 64
          }
        }],
        line: 110
      },
      "12": {
        loc: {
          start: {
            line: 117,
            column: 23
          },
          end: {
            line: 117,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 117,
            column: 23
          },
          end: {
            line: 117,
            column: 56
          }
        }, {
          start: {
            line: 117,
            column: 60
          },
          end: {
            line: 117,
            column: 63
          }
        }],
        line: 117
      },
      "13": {
        loc: {
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 126,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 126,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "14": {
        loc: {
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 123,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 123,
            column: 21
          }
        }, {
          start: {
            line: 123,
            column: 25
          },
          end: {
            line: 123,
            column: 34
          }
        }],
        line: 123
      },
      "15": {
        loc: {
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 139,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 139,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "16": {
        loc: {
          start: {
            line: 159,
            column: 10
          },
          end: {
            line: 159,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 159,
            column: 10
          },
          end: {
            line: 159,
            column: 43
          }
        }, {
          start: {
            line: 159,
            column: 47
          },
          end: {
            line: 159,
            column: 57
          }
        }],
        line: 159
      },
      "17": {
        loc: {
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "18": {
        loc: {
          start: {
            line: 208,
            column: 8
          },
          end: {
            line: 208,
            column: 50
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 208,
            column: 8
          },
          end: {
            line: 208,
            column: 50
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 208
      },
      "19": {
        loc: {
          start: {
            line: 211,
            column: 26
          },
          end: {
            line: 211,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 211,
            column: 26
          },
          end: {
            line: 211,
            column: 60
          }
        }, {
          start: {
            line: 211,
            column: 64
          },
          end: {
            line: 211,
            column: 65
          }
        }],
        line: 211
      },
      "20": {
        loc: {
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 212,
            column: 62
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 212,
            column: 62
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 212
      },
      "21": {
        loc: {
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 217,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 217,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 214
      },
      "22": {
        loc: {
          start: {
            line: 215,
            column: 34
          },
          end: {
            line: 215,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 215,
            column: 34
          },
          end: {
            line: 215,
            column: 73
          }
        }, {
          start: {
            line: 215,
            column: 77
          },
          end: {
            line: 215,
            column: 78
          }
        }],
        line: 215
      },
      "23": {
        loc: {
          start: {
            line: 216,
            column: 12
          },
          end: {
            line: 216,
            column: 50
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 12
          },
          end: {
            line: 216,
            column: 50
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 216
      },
      "24": {
        loc: {
          start: {
            line: 218,
            column: 8
          },
          end: {
            line: 225,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 218,
            column: 8
          },
          end: {
            line: 225,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 218
      },
      "25": {
        loc: {
          start: {
            line: 221,
            column: 69
          },
          end: {
            line: 221,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 221,
            column: 69
          },
          end: {
            line: 221,
            column: 94
          }
        }, {
          start: {
            line: 221,
            column: 98
          },
          end: {
            line: 221,
            column: 101
          }
        }],
        line: 221
      },
      "26": {
        loc: {
          start: {
            line: 224,
            column: 12
          },
          end: {
            line: 224,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 12
          },
          end: {
            line: 224,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 224
      },
      "27": {
        loc: {
          start: {
            line: 230,
            column: 4
          },
          end: {
            line: 232,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 230,
            column: 4
          },
          end: {
            line: 232,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 230
      },
      "28": {
        loc: {
          start: {
            line: 233,
            column: 4
          },
          end: {
            line: 235,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 233,
            column: 4
          },
          end: {
            line: 235,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 233
      },
      "29": {
        loc: {
          start: {
            line: 248,
            column: 12
          },
          end: {
            line: 250,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 248,
            column: 12
          },
          end: {
            line: 250,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 248
      },
      "30": {
        loc: {
          start: {
            line: 248,
            column: 16
          },
          end: {
            line: 248,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 248,
            column: 16
          },
          end: {
            line: 248,
            column: 41
          }
        }, {
          start: {
            line: 248,
            column: 45
          },
          end: {
            line: 248,
            column: 99
          }
        }],
        line: 248
      },
      "31": {
        loc: {
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 265,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 265,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 260
      },
      "32": {
        loc: {
          start: {
            line: 268,
            column: 43
          },
          end: {
            line: 268,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 268,
            column: 43
          },
          end: {
            line: 268,
            column: 55
          }
        }, {
          start: {
            line: 268,
            column: 59
          },
          end: {
            line: 268,
            column: 60
          }
        }],
        line: 268
      },
      "33": {
        loc: {
          start: {
            line: 278,
            column: 12
          },
          end: {
            line: 281,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 278,
            column: 12
          },
          end: {
            line: 281,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 278
      },
      "34": {
        loc: {
          start: {
            line: 283,
            column: 8
          },
          end: {
            line: 285,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 283,
            column: 8
          },
          end: {
            line: 285,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 283
      },
      "35": {
        loc: {
          start: {
            line: 295,
            column: 4
          },
          end: {
            line: 295,
            column: 63
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 4
          },
          end: {
            line: 295,
            column: 63
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 295
      },
      "36": {
        loc: {
          start: {
            line: 296,
            column: 4
          },
          end: {
            line: 296,
            column: 73
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 4
          },
          end: {
            line: 296,
            column: 73
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "37": {
        loc: {
          start: {
            line: 297,
            column: 4
          },
          end: {
            line: 297,
            column: 83
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 297,
            column: 4
          },
          end: {
            line: 297,
            column: 83
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 297
      },
      "38": {
        loc: {
          start: {
            line: 298,
            column: 4
          },
          end: {
            line: 298,
            column: 83
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 298,
            column: 4
          },
          end: {
            line: 298,
            column: 83
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 298
      },
      "39": {
        loc: {
          start: {
            line: 299,
            column: 4
          },
          end: {
            line: 299,
            column: 87
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 299,
            column: 4
          },
          end: {
            line: 299,
            column: 87
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 299
      },
      "40": {
        loc: {
          start: {
            line: 300,
            column: 4
          },
          end: {
            line: 300,
            column: 87
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 300,
            column: 4
          },
          end: {
            line: 300,
            column: 87
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 300
      },
      "41": {
        loc: {
          start: {
            line: 302,
            column: 4
          },
          end: {
            line: 308,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 302,
            column: 4
          },
          end: {
            line: 308,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 302
      },
      "42": {
        loc: {
          start: {
            line: 304,
            column: 12
          },
          end: {
            line: 306,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 304,
            column: 12
          },
          end: {
            line: 306,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 304
      },
      "43": {
        loc: {
          start: {
            line: 304,
            column: 16
          },
          end: {
            line: 304,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 304,
            column: 16
          },
          end: {
            line: 304,
            column: 25
          }
        }, {
          start: {
            line: 304,
            column: 29
          },
          end: {
            line: 304,
            column: 38
          }
        }],
        line: 304
      },
      "44": {
        loc: {
          start: {
            line: 309,
            column: 4
          },
          end: {
            line: 324,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 309,
            column: 4
          },
          end: {
            line: 324,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 309
      },
      "45": {
        loc: {
          start: {
            line: 311,
            column: 12
          },
          end: {
            line: 313,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 311,
            column: 12
          },
          end: {
            line: 313,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 311
      },
      "46": {
        loc: {
          start: {
            line: 311,
            column: 16
          },
          end: {
            line: 311,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 311,
            column: 16
          },
          end: {
            line: 311,
            column: 31
          }
        }, {
          start: {
            line: 311,
            column: 35
          },
          end: {
            line: 311,
            column: 50
          }
        }],
        line: 311
      },
      "47": {
        loc: {
          start: {
            line: 314,
            column: 12
          },
          end: {
            line: 316,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 314,
            column: 12
          },
          end: {
            line: 316,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 314
      },
      "48": {
        loc: {
          start: {
            line: 321,
            column: 8
          },
          end: {
            line: 323,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 321,
            column: 8
          },
          end: {
            line: 323,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 321
      },
      "49": {
        loc: {
          start: {
            line: 321,
            column: 12
          },
          end: {
            line: 321,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 321,
            column: 12
          },
          end: {
            line: 321,
            column: 32
          }
        }, {
          start: {
            line: 321,
            column: 36
          },
          end: {
            line: 321,
            column: 53
          }
        }],
        line: 321
      },
      "50": {
        loc: {
          start: {
            line: 325,
            column: 4
          },
          end: {
            line: 334,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 325,
            column: 4
          },
          end: {
            line: 334,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 325
      },
      "51": {
        loc: {
          start: {
            line: 327,
            column: 12
          },
          end: {
            line: 329,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 327,
            column: 12
          },
          end: {
            line: 329,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 327
      },
      "52": {
        loc: {
          start: {
            line: 327,
            column: 16
          },
          end: {
            line: 327,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 327,
            column: 16
          },
          end: {
            line: 327,
            column: 31
          }
        }, {
          start: {
            line: 327,
            column: 35
          },
          end: {
            line: 327,
            column: 50
          }
        }],
        line: 327
      },
      "53": {
        loc: {
          start: {
            line: 330,
            column: 12
          },
          end: {
            line: 332,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 330,
            column: 12
          },
          end: {
            line: 332,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 330
      },
      "54": {
        loc: {
          start: {
            line: 330,
            column: 16
          },
          end: {
            line: 330,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 330,
            column: 16
          },
          end: {
            line: 330,
            column: 36
          }
        }, {
          start: {
            line: 330,
            column: 40
          },
          end: {
            line: 330,
            column: 60
          }
        }],
        line: 330
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matthewmoroney/builds/FreeAgentics/web/lib/markov-blanket.ts"],
      sourcesContent: ["/**\n * Markov Blanket Implementation\n *\n * Core implementation for Markov blanket calculations and state management\n * supporting active inference and free energy minimization.\n */\n\nexport interface SensorState {\n  value: number;\n  confidence: number;\n}\n\nexport interface ActiveState {\n  value: number;\n  energy: number;\n}\n\nexport interface InternalState {\n  [key: string]: number;\n}\n\nexport interface ExternalState {\n  [key: string]: number;\n}\n\nexport interface MarkovBlanketConfig {\n  learningRate?: number;\n  precision?: number;\n  maxIterations?: number;\n  convergenceThreshold?: number;\n}\n\nexport interface MarkovBlanketState {\n  id: string;\n  agentId: string;\n  sensorStates: Record<string, SensorState>;\n  activeStates: Record<string, ActiveState>;\n  internalStates: InternalState;\n  externalStates: ExternalState;\n  config?: MarkovBlanketConfig;\n  freeEnergy?: number;\n  lastUpdated?: number;\n  convergenceInfo?: {\n    iterations: number;\n    converged: boolean;\n    finalError: number;\n  };\n}\n\nexport type MarkovBlanket = MarkovBlanketState;\n\nconst DEFAULT_CONFIG: MarkovBlanketConfig = {\n  learningRate: 0.01,\n  precision: 0.001,\n  maxIterations: 100,\n  convergenceThreshold: 0.0001,\n};\n\n// Cache for free energy calculations\nconst freeEnergyCache = new WeakMap<\n  MarkovBlanket,\n  { value: number; timestamp: number }\n>();\nconst CACHE_DURATION = 100; // ms\n\nexport function createMarkovBlanket(\n  options: Partial<MarkovBlanketState> & { id: string; agentId: string },\n): MarkovBlanket {\n  if (!options.id || !options.agentId) {\n    throw new Error(\"Invalid Markov blanket configuration\");\n  }\n\n  const blanket: MarkovBlanket = {\n    id: options.id,\n    agentId: options.agentId,\n    sensorStates: options.sensorStates || {},\n    activeStates: options.activeStates || {},\n    internalStates: options.internalStates || {},\n    externalStates: options.externalStates || {},\n    config: { ...DEFAULT_CONFIG, ...options.config },\n    lastUpdated: Date.now(),\n  };\n\n  // Calculate initial free energy\n  blanket.freeEnergy = calculateFreeEnergy(blanket);\n\n  return blanket;\n}\n\nexport function updateMarkovBlanket(\n  blanket: MarkovBlanket,\n  updates: Partial<\n    Pick<\n      MarkovBlanket,\n      \"sensorStates\" | \"activeStates\" | \"internalStates\" | \"externalStates\"\n    >\n  >,\n): MarkovBlanket {\n  const updated: MarkovBlanket = {\n    ...blanket,\n    lastUpdated: Date.now(),\n  };\n\n  // Update sensor states\n  if (updates.sensorStates) {\n    updated.sensorStates = { ...updates.sensorStates };\n  }\n\n  // Update active states with energy constraints\n  if (updates.activeStates) {\n    updated.activeStates = Object.entries(updates.activeStates).reduce(\n      (acc, [key, state]) => {\n        acc[key] = {\n          value: Math.min(Math.max(state.value, 0), 1),\n          energy: Math.max(state.energy, 0),\n        };\n        return acc;\n      },\n      {} as Record<string, ActiveState>,\n    );\n  }\n\n  // Update internal states with normalization\n  if (updates.internalStates) {\n    updated.internalStates = Object.entries(updates.internalStates).reduce(\n      (acc, [key, value]) => {\n        acc[key] = Math.min(Math.max(value, 0), 1);\n        return acc;\n      },\n      {} as InternalState,\n    );\n  }\n\n  // Update external states\n  if (updates.externalStates) {\n    updated.externalStates = { ...updates.externalStates };\n  }\n\n  // Recalculate free energy\n  updated.freeEnergy = calculateFreeEnergy(updated);\n\n  return updated;\n}\n\nexport function calculateFreeEnergy(blanket: MarkovBlanket): number {\n  // Check cache first\n  const cached = freeEnergyCache.get(blanket);\n  if (cached && Date.now() - cached.timestamp < CACHE_DURATION) {\n    return cached.value;\n  }\n\n  let freeEnergy = 0;\n\n  // Prediction error component\n  Object.entries(blanket.sensorStates).forEach(([sensorKey, sensor]) => {\n    const beliefKey = `belief_${sensorKey}`;\n    const belief = blanket.internalStates[beliefKey] || 0.5;\n    const predictionError = Math.pow(sensor.value - belief, 2);\n    freeEnergy += predictionError * sensor.confidence;\n  });\n\n  // Entropy component\n  Object.values(blanket.internalStates).forEach((value) => {\n    if (value > 0 && value < 1) {\n      const entropy =\n        -value * Math.log(value) - (1 - value) * Math.log(1 - value);\n      freeEnergy += entropy * 0.1; // Weight the entropy contribution\n    }\n  });\n\n  // Complexity component (deviation from priors)\n  Object.entries(blanket.internalStates).forEach(([key, value]) => {\n    const prior = 0.5; // Assume uniform prior\n    const complexity = Math.pow(value - prior, 2);\n    freeEnergy += complexity * 0.05;\n  });\n\n  // Energy constraints\n  Object.values(blanket.activeStates).forEach((state) => {\n    if (state.value > 0) {\n      const energyCost = state.value * (1 - state.energy);\n      freeEnergy += energyCost * 0.2;\n    }\n  });\n\n  // Cache the result\n  freeEnergyCache.set(blanket, { value: freeEnergy, timestamp: Date.now() });\n\n  return freeEnergy;\n}\n\nexport async function minimizeFreeEnergy(\n  blanket: MarkovBlanket,\n  options?: Partial<MarkovBlanketConfig>,\n): Promise<MarkovBlanket> {\n  const config = { ...blanket.config, ...options };\n  let current = { ...blanket };\n  let iterations = 0;\n  let converged = false;\n  let previousFE = calculateFreeEnergy(current);\n\n  while (iterations < config.maxIterations! && !converged) {\n    const gradient: InternalState = {};\n\n    // Calculate gradient for each internal state\n    Object.keys(current.internalStates).forEach((key) => {\n      const epsilon = 0.001;\n      const original = current.internalStates[key];\n\n      // Forward difference\n      current.internalStates[key] = Math.min(original + epsilon, 1);\n      const feForward = calculateFreeEnergy(current);\n\n      // Backward difference\n      current.internalStates[key] = Math.max(original - epsilon, 0);\n      const feBackward = calculateFreeEnergy(current);\n\n      // Calculate gradient\n      gradient[key] = (feForward - feBackward) / (2 * epsilon);\n\n      // Restore original value\n      current.internalStates[key] = original;\n    });\n\n    // Update internal states based on gradient\n    Object.keys(gradient).forEach((key) => {\n      const update = -gradient[key] * config.learningRate!;\n      current.internalStates[key] = Math.min(\n        Math.max(current.internalStates[key] + update, 0),\n        1,\n      );\n    });\n\n    // Check convergence\n    const currentFE = calculateFreeEnergy(current);\n    const improvement = previousFE - currentFE;\n\n    if (Math.abs(improvement) < config.convergenceThreshold!) {\n      converged = true;\n    }\n\n    previousFE = currentFE;\n    iterations++;\n  }\n\n  return {\n    ...current,\n    freeEnergy: previousFE,\n    convergenceInfo: {\n      iterations,\n      converged,\n      finalError: previousFE,\n    },\n  };\n}\n\nexport function getMarkovBlanketNeighbors(\n  blanket: MarkovBlanket,\n  allBlankets: MarkovBlanket[],\n  options?: {\n    proximityThreshold?: number;\n    considerCommunication?: boolean;\n    considerSharedBeliefs?: boolean;\n  },\n): MarkovBlanket[] {\n  const opts = {\n    proximityThreshold: 0.5,\n    considerCommunication: false,\n    considerSharedBeliefs: false,\n    ...options,\n  };\n\n  return allBlankets.filter((other) => {\n    if (other.id === blanket.id) return false;\n\n    // Check proximity\n    const proximityKey = `proximity_to_${blanket.agentId}`;\n    const proximity = other.externalStates[proximityKey] || 0;\n\n    if (proximity < opts.proximityThreshold) return false;\n\n    // Additional checks if enabled\n    if (opts.considerCommunication) {\n      const communication = other.activeStates.communication?.value || 0;\n      if (communication < 0.3) return false;\n    }\n\n    if (opts.considerSharedBeliefs) {\n      // Check for similar beliefs\n      const beliefSimilarity = Object.keys(blanket.internalStates)\n        .filter((key) => key.startsWith(\"belief_\"))\n        .reduce((sim, key) => {\n          const diff = Math.abs(\n            blanket.internalStates[key] - (other.internalStates[key] || 0.5),\n          );\n          return sim + (1 - diff);\n        }, 0);\n\n      if (beliefSimilarity < 1) return false;\n    }\n\n    return true;\n  });\n}\n\nexport function mergeMarkovBlankets(blankets: MarkovBlanket[]): MarkovBlanket {\n  if (blankets.length === 0) {\n    throw new Error(\"Cannot merge empty array of Markov blankets\");\n  }\n\n  if (blankets.length === 1) {\n    return blankets[0];\n  }\n\n  const merged: MarkovBlanket = {\n    id: `merged-${Date.now()}`,\n    agentId: `coalition-${blankets.map((b) => b.agentId).join(\"-\")}`,\n    sensorStates: {},\n    activeStates: {},\n    internalStates: {},\n    externalStates: {},\n    lastUpdated: Date.now(),\n  };\n\n  // Merge sensor states (union)\n  blankets.forEach((blanket) => {\n    Object.entries(blanket.sensorStates).forEach(([key, state]) => {\n      if (\n        !merged.sensorStates[key] ||\n        state.confidence > merged.sensorStates[key].confidence\n      ) {\n        merged.sensorStates[key] = state;\n      }\n    });\n  });\n\n  // Merge active states (average)\n  const activeStateKeys = new Set<string>();\n  blankets.forEach((blanket) => {\n    Object.keys(blanket.activeStates).forEach((key) =>\n      activeStateKeys.add(key),\n    );\n  });\n\n  activeStateKeys.forEach((key) => {\n    const states = blankets.map((b) => b.activeStates[key]).filter(Boolean);\n\n    if (states.length > 0) {\n      merged.activeStates[key] = {\n        value: states.reduce((sum, s) => sum + s.value, 0) / states.length,\n        energy: states.reduce((sum, s) => sum + s.energy, 0) / states.length,\n      };\n    }\n  });\n\n  // Merge internal states (weighted average based on free energy)\n  const weights = blankets.map((b) => 1 / (b.freeEnergy || 1));\n  const totalWeight = weights.reduce((sum, w) => sum + w, 0);\n\n  const internalKeys = new Set<string>();\n  blankets.forEach((blanket) => {\n    Object.keys(blanket.internalStates).forEach((key) => internalKeys.add(key));\n  });\n\n  internalKeys.forEach((key) => {\n    let weightedSum = 0;\n    let weightSum = 0;\n\n    blankets.forEach((blanket, i) => {\n      if (blanket.internalStates[key] !== undefined) {\n        weightedSum += blanket.internalStates[key] * weights[i];\n        weightSum += weights[i];\n      }\n    });\n\n    if (weightSum > 0) {\n      merged.internalStates[key] = weightedSum / weightSum;\n    }\n  });\n\n  // Calculate free energy for merged blanket\n  merged.freeEnergy = calculateFreeEnergy(merged);\n\n  return merged;\n}\n\nexport interface ValidationResult {\n  isValid: boolean;\n  errors: string[];\n  warnings: string[];\n}\n\nexport function validateMarkovBlanket(\n  blanket: Partial<MarkovBlanket>,\n): ValidationResult {\n  const errors: string[] = [];\n  const warnings: string[] = [];\n\n  // Check required fields\n  if (!blanket.id) errors.push(\"Missing required field: id\");\n  if (!blanket.agentId) errors.push(\"Missing required field: agentId\");\n  if (!blanket.sensorStates)\n    errors.push(\"Missing required field: sensorStates\");\n  if (!blanket.activeStates)\n    errors.push(\"Missing required field: activeStates\");\n  if (!blanket.internalStates)\n    errors.push(\"Missing required field: internalStates\");\n  if (!blanket.externalStates)\n    errors.push(\"Missing required field: externalStates\");\n\n  // Validate state ranges\n  if (blanket.internalStates) {\n    Object.entries(blanket.internalStates).forEach(([key, value]) => {\n      if (value < 0 || value > 1) {\n        errors.push(`Internal state '${key}' out of range: ${value}`);\n      }\n    });\n  }\n\n  if (blanket.activeStates) {\n    Object.entries(blanket.activeStates).forEach(([key, state]) => {\n      if (state.value < 0 || state.value > 1) {\n        errors.push(`Active state '${key}' value out of range: ${state.value}`);\n      }\n      if (state.energy < 0) {\n        errors.push(\n          `Active state '${key}' energy cannot be negative: ${state.energy}`,\n        );\n      }\n    });\n\n    // Check energy conservation\n    const totalActiveValue = Object.values(blanket.activeStates).reduce(\n      (sum, state) => sum + state.value,\n      0,\n    );\n    const totalEnergy = Object.values(blanket.activeStates).reduce(\n      (sum, state) => sum + state.energy,\n      0,\n    );\n\n    if (totalActiveValue > 1 && totalEnergy < 0.1) {\n      warnings.push(\n        \"Energy conservation warning: High activity with low energy\",\n      );\n    }\n  }\n\n  if (blanket.sensorStates) {\n    Object.entries(blanket.sensorStates).forEach(([key, state]) => {\n      if (state.value < 0 || state.value > 1) {\n        errors.push(`Sensor state '${key}' value out of range: ${state.value}`);\n      }\n      if (state.confidence < 0 || state.confidence > 1) {\n        errors.push(\n          `Sensor state '${key}' confidence out of range: ${state.confidence}`,\n        );\n      }\n    });\n  }\n\n  return {\n    isValid: errors.length === 0,\n    errors,\n    warnings,\n  };\n}\n"],
      names: ["calculateFreeEnergy", "createMarkovBlanket", "getMarkovBlanketNeighbors", "mergeMarkovBlankets", "minimizeFreeEnergy", "updateMarkovBlanket", "validateMarkovBlanket", "DEFAULT_CONFIG", "learningRate", "precision", "maxIterations", "convergenceThreshold", "freeEnergyCache", "WeakMap", "CACHE_DURATION", "options", "id", "agentId", "Error", "blanket", "sensorStates", "activeStates", "internalStates", "externalStates", "config", "lastUpdated", "Date", "now", "freeEnergy", "updates", "updated", "Object", "entries", "reduce", "acc", "key", "state", "value", "Math", "min", "max", "energy", "cached", "get", "timestamp", "forEach", "sensorKey", "sensor", "beliefKey", "belief", "predictionError", "pow", "confidence", "values", "entropy", "log", "prior", "complexity", "energyCost", "set", "current", "iterations", "converged", "previousFE", "gradient", "keys", "epsilon", "original", "feForward", "feBackward", "update", "currentFE", "improvement", "abs", "convergenceInfo", "finalError", "allBlankets", "opts", "proximityThreshold", "considerCommunication", "considerSharedBeliefs", "filter", "other", "proximityKey", "proximity", "communication", "beliefSimilarity", "startsWith", "sim", "diff", "blankets", "length", "merged", "map", "b", "join", "activeStateKeys", "Set", "add", "states", "Boolean", "sum", "s", "weights", "totalWeight", "w", "internalKeys", "weightedSum", "weightSum", "i", "undefined", "errors", "warnings", "push", "totalActiveValue", "totalEnergy", "isValid"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b7fb596dcfa59edf2fda189ac33cf394a937d73c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1tektexf8q = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1tektexf8q();
cov_1tektexf8q().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1tektexf8q().f[0]++;
  cov_1tektexf8q().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1tektexf8q().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1tektexf8q().s[3]++;
_export(exports, {
  calculateFreeEnergy: function () {
    /* istanbul ignore next */
    cov_1tektexf8q().f[1]++;
    cov_1tektexf8q().s[4]++;
    return calculateFreeEnergy;
  },
  createMarkovBlanket: function () {
    /* istanbul ignore next */
    cov_1tektexf8q().f[2]++;
    cov_1tektexf8q().s[5]++;
    return createMarkovBlanket;
  },
  getMarkovBlanketNeighbors: function () {
    /* istanbul ignore next */
    cov_1tektexf8q().f[3]++;
    cov_1tektexf8q().s[6]++;
    return getMarkovBlanketNeighbors;
  },
  mergeMarkovBlankets: function () {
    /* istanbul ignore next */
    cov_1tektexf8q().f[4]++;
    cov_1tektexf8q().s[7]++;
    return mergeMarkovBlankets;
  },
  minimizeFreeEnergy: function () {
    /* istanbul ignore next */
    cov_1tektexf8q().f[5]++;
    cov_1tektexf8q().s[8]++;
    return minimizeFreeEnergy;
  },
  updateMarkovBlanket: function () {
    /* istanbul ignore next */
    cov_1tektexf8q().f[6]++;
    cov_1tektexf8q().s[9]++;
    return updateMarkovBlanket;
  },
  validateMarkovBlanket: function () {
    /* istanbul ignore next */
    cov_1tektexf8q().f[7]++;
    cov_1tektexf8q().s[10]++;
    return validateMarkovBlanket;
  }
});
const DEFAULT_CONFIG =
/* istanbul ignore next */
(cov_1tektexf8q().s[11]++, {
  learningRate: 0.01,
  precision: 0.001,
  maxIterations: 100,
  convergenceThreshold: 0.0001
});
// Cache for free energy calculations
const freeEnergyCache =
/* istanbul ignore next */
(cov_1tektexf8q().s[12]++, new WeakMap());
const CACHE_DURATION =
/* istanbul ignore next */
(cov_1tektexf8q().s[13]++, 100); // ms
function createMarkovBlanket(options) {
  /* istanbul ignore next */
  cov_1tektexf8q().f[8]++;
  cov_1tektexf8q().s[14]++;
  if (
  /* istanbul ignore next */
  (cov_1tektexf8q().b[1][0]++, !options.id) ||
  /* istanbul ignore next */
  (cov_1tektexf8q().b[1][1]++, !options.agentId)) {
    /* istanbul ignore next */
    cov_1tektexf8q().b[0][0]++;
    cov_1tektexf8q().s[15]++;
    throw new Error("Invalid Markov blanket configuration");
  } else
  /* istanbul ignore next */
  {
    cov_1tektexf8q().b[0][1]++;
  }
  const blanket =
  /* istanbul ignore next */
  (cov_1tektexf8q().s[16]++, {
    id: options.id,
    agentId: options.agentId,
    sensorStates:
    /* istanbul ignore next */
    (cov_1tektexf8q().b[2][0]++, options.sensorStates) ||
    /* istanbul ignore next */
    (cov_1tektexf8q().b[2][1]++, {}),
    activeStates:
    /* istanbul ignore next */
    (cov_1tektexf8q().b[3][0]++, options.activeStates) ||
    /* istanbul ignore next */
    (cov_1tektexf8q().b[3][1]++, {}),
    internalStates:
    /* istanbul ignore next */
    (cov_1tektexf8q().b[4][0]++, options.internalStates) ||
    /* istanbul ignore next */
    (cov_1tektexf8q().b[4][1]++, {}),
    externalStates:
    /* istanbul ignore next */
    (cov_1tektexf8q().b[5][0]++, options.externalStates) ||
    /* istanbul ignore next */
    (cov_1tektexf8q().b[5][1]++, {}),
    config: {
      ...DEFAULT_CONFIG,
      ...options.config
    },
    lastUpdated: Date.now()
  });
  // Calculate initial free energy
  /* istanbul ignore next */
  cov_1tektexf8q().s[17]++;
  blanket.freeEnergy = calculateFreeEnergy(blanket);
  /* istanbul ignore next */
  cov_1tektexf8q().s[18]++;
  return blanket;
}
function updateMarkovBlanket(blanket, updates) {
  /* istanbul ignore next */
  cov_1tektexf8q().f[9]++;
  const updated =
  /* istanbul ignore next */
  (cov_1tektexf8q().s[19]++, {
    ...blanket,
    lastUpdated: Date.now()
  });
  // Update sensor states
  /* istanbul ignore next */
  cov_1tektexf8q().s[20]++;
  if (updates.sensorStates) {
    /* istanbul ignore next */
    cov_1tektexf8q().b[6][0]++;
    cov_1tektexf8q().s[21]++;
    updated.sensorStates = {
      ...updates.sensorStates
    };
  } else
  /* istanbul ignore next */
  {
    cov_1tektexf8q().b[6][1]++;
  }
  // Update active states with energy constraints
  cov_1tektexf8q().s[22]++;
  if (updates.activeStates) {
    /* istanbul ignore next */
    cov_1tektexf8q().b[7][0]++;
    cov_1tektexf8q().s[23]++;
    updated.activeStates = Object.entries(updates.activeStates).reduce((acc, [key, state]) => {
      /* istanbul ignore next */
      cov_1tektexf8q().f[10]++;
      cov_1tektexf8q().s[24]++;
      acc[key] = {
        value: Math.min(Math.max(state.value, 0), 1),
        energy: Math.max(state.energy, 0)
      };
      /* istanbul ignore next */
      cov_1tektexf8q().s[25]++;
      return acc;
    }, {});
  } else
  /* istanbul ignore next */
  {
    cov_1tektexf8q().b[7][1]++;
  }
  // Update internal states with normalization
  cov_1tektexf8q().s[26]++;
  if (updates.internalStates) {
    /* istanbul ignore next */
    cov_1tektexf8q().b[8][0]++;
    cov_1tektexf8q().s[27]++;
    updated.internalStates = Object.entries(updates.internalStates).reduce((acc, [key, value]) => {
      /* istanbul ignore next */
      cov_1tektexf8q().f[11]++;
      cov_1tektexf8q().s[28]++;
      acc[key] = Math.min(Math.max(value, 0), 1);
      /* istanbul ignore next */
      cov_1tektexf8q().s[29]++;
      return acc;
    }, {});
  } else
  /* istanbul ignore next */
  {
    cov_1tektexf8q().b[8][1]++;
  }
  // Update external states
  cov_1tektexf8q().s[30]++;
  if (updates.externalStates) {
    /* istanbul ignore next */
    cov_1tektexf8q().b[9][0]++;
    cov_1tektexf8q().s[31]++;
    updated.externalStates = {
      ...updates.externalStates
    };
  } else
  /* istanbul ignore next */
  {
    cov_1tektexf8q().b[9][1]++;
  }
  // Recalculate free energy
  cov_1tektexf8q().s[32]++;
  updated.freeEnergy = calculateFreeEnergy(updated);
  /* istanbul ignore next */
  cov_1tektexf8q().s[33]++;
  return updated;
}
function calculateFreeEnergy(blanket) {
  /* istanbul ignore next */
  cov_1tektexf8q().f[12]++;
  // Check cache first
  const cached =
  /* istanbul ignore next */
  (cov_1tektexf8q().s[34]++, freeEnergyCache.get(blanket));
  /* istanbul ignore next */
  cov_1tektexf8q().s[35]++;
  if (
  /* istanbul ignore next */
  (cov_1tektexf8q().b[11][0]++, cached) &&
  /* istanbul ignore next */
  (cov_1tektexf8q().b[11][1]++, Date.now() - cached.timestamp < CACHE_DURATION)) {
    /* istanbul ignore next */
    cov_1tektexf8q().b[10][0]++;
    cov_1tektexf8q().s[36]++;
    return cached.value;
  } else
  /* istanbul ignore next */
  {
    cov_1tektexf8q().b[10][1]++;
  }
  let freeEnergy =
  /* istanbul ignore next */
  (cov_1tektexf8q().s[37]++, 0);
  // Prediction error component
  /* istanbul ignore next */
  cov_1tektexf8q().s[38]++;
  Object.entries(blanket.sensorStates).forEach(([sensorKey, sensor]) => {
    /* istanbul ignore next */
    cov_1tektexf8q().f[13]++;
    const beliefKey =
    /* istanbul ignore next */
    (cov_1tektexf8q().s[39]++, `belief_${sensorKey}`);
    const belief =
    /* istanbul ignore next */
    (cov_1tektexf8q().s[40]++,
    /* istanbul ignore next */
    (cov_1tektexf8q().b[12][0]++, blanket.internalStates[beliefKey]) ||
    /* istanbul ignore next */
    (cov_1tektexf8q().b[12][1]++, 0.5));
    const predictionError =
    /* istanbul ignore next */
    (cov_1tektexf8q().s[41]++, Math.pow(sensor.value - belief, 2));
    /* istanbul ignore next */
    cov_1tektexf8q().s[42]++;
    freeEnergy += predictionError * sensor.confidence;
  });
  // Entropy component
  /* istanbul ignore next */
  cov_1tektexf8q().s[43]++;
  Object.values(blanket.internalStates).forEach(value => {
    /* istanbul ignore next */
    cov_1tektexf8q().f[14]++;
    cov_1tektexf8q().s[44]++;
    if (
    /* istanbul ignore next */
    (cov_1tektexf8q().b[14][0]++, value > 0) &&
    /* istanbul ignore next */
    (cov_1tektexf8q().b[14][1]++, value < 1)) {
      /* istanbul ignore next */
      cov_1tektexf8q().b[13][0]++;
      const entropy =
      /* istanbul ignore next */
      (cov_1tektexf8q().s[45]++, -value * Math.log(value) - (1 - value) * Math.log(1 - value));
      /* istanbul ignore next */
      cov_1tektexf8q().s[46]++;
      freeEnergy += entropy * 0.1; // Weight the entropy contribution
    } else
    /* istanbul ignore next */
    {
      cov_1tektexf8q().b[13][1]++;
    }
  });
  // Complexity component (deviation from priors)
  /* istanbul ignore next */
  cov_1tektexf8q().s[47]++;
  Object.entries(blanket.internalStates).forEach(([key, value]) => {
    /* istanbul ignore next */
    cov_1tektexf8q().f[15]++;
    const prior =
    /* istanbul ignore next */
    (cov_1tektexf8q().s[48]++, 0.5); // Assume uniform prior
    const complexity =
    /* istanbul ignore next */
    (cov_1tektexf8q().s[49]++, Math.pow(value - prior, 2));
    /* istanbul ignore next */
    cov_1tektexf8q().s[50]++;
    freeEnergy += complexity * 0.05;
  });
  // Energy constraints
  /* istanbul ignore next */
  cov_1tektexf8q().s[51]++;
  Object.values(blanket.activeStates).forEach(state => {
    /* istanbul ignore next */
    cov_1tektexf8q().f[16]++;
    cov_1tektexf8q().s[52]++;
    if (state.value > 0) {
      /* istanbul ignore next */
      cov_1tektexf8q().b[15][0]++;
      const energyCost =
      /* istanbul ignore next */
      (cov_1tektexf8q().s[53]++, state.value * (1 - state.energy));
      /* istanbul ignore next */
      cov_1tektexf8q().s[54]++;
      freeEnergy += energyCost * 0.2;
    } else
    /* istanbul ignore next */
    {
      cov_1tektexf8q().b[15][1]++;
    }
  });
  // Cache the result
  /* istanbul ignore next */
  cov_1tektexf8q().s[55]++;
  freeEnergyCache.set(blanket, {
    value: freeEnergy,
    timestamp: Date.now()
  });
  /* istanbul ignore next */
  cov_1tektexf8q().s[56]++;
  return freeEnergy;
}
async function minimizeFreeEnergy(blanket, options) {
  /* istanbul ignore next */
  cov_1tektexf8q().f[17]++;
  const config =
  /* istanbul ignore next */
  (cov_1tektexf8q().s[57]++, {
    ...blanket.config,
    ...options
  });
  let current =
  /* istanbul ignore next */
  (cov_1tektexf8q().s[58]++, {
    ...blanket
  });
  let iterations =
  /* istanbul ignore next */
  (cov_1tektexf8q().s[59]++, 0);
  let converged =
  /* istanbul ignore next */
  (cov_1tektexf8q().s[60]++, false);
  let previousFE =
  /* istanbul ignore next */
  (cov_1tektexf8q().s[61]++, calculateFreeEnergy(current));
  /* istanbul ignore next */
  cov_1tektexf8q().s[62]++;
  while (
  /* istanbul ignore next */
  (cov_1tektexf8q().b[16][0]++, iterations < config.maxIterations) &&
  /* istanbul ignore next */
  (cov_1tektexf8q().b[16][1]++, !converged)) {
    const gradient =
    /* istanbul ignore next */
    (cov_1tektexf8q().s[63]++, {});
    // Calculate gradient for each internal state
    /* istanbul ignore next */
    cov_1tektexf8q().s[64]++;
    Object.keys(current.internalStates).forEach(key => {
      /* istanbul ignore next */
      cov_1tektexf8q().f[18]++;
      const epsilon =
      /* istanbul ignore next */
      (cov_1tektexf8q().s[65]++, 0.001);
      const original =
      /* istanbul ignore next */
      (cov_1tektexf8q().s[66]++, current.internalStates[key]);
      // Forward difference
      /* istanbul ignore next */
      cov_1tektexf8q().s[67]++;
      current.internalStates[key] = Math.min(original + epsilon, 1);
      const feForward =
      /* istanbul ignore next */
      (cov_1tektexf8q().s[68]++, calculateFreeEnergy(current));
      // Backward difference
      /* istanbul ignore next */
      cov_1tektexf8q().s[69]++;
      current.internalStates[key] = Math.max(original - epsilon, 0);
      const feBackward =
      /* istanbul ignore next */
      (cov_1tektexf8q().s[70]++, calculateFreeEnergy(current));
      // Calculate gradient
      /* istanbul ignore next */
      cov_1tektexf8q().s[71]++;
      gradient[key] = (feForward - feBackward) / (2 * epsilon);
      // Restore original value
      /* istanbul ignore next */
      cov_1tektexf8q().s[72]++;
      current.internalStates[key] = original;
    });
    // Update internal states based on gradient
    /* istanbul ignore next */
    cov_1tektexf8q().s[73]++;
    Object.keys(gradient).forEach(key => {
      /* istanbul ignore next */
      cov_1tektexf8q().f[19]++;
      const update =
      /* istanbul ignore next */
      (cov_1tektexf8q().s[74]++, -gradient[key] * config.learningRate);
      /* istanbul ignore next */
      cov_1tektexf8q().s[75]++;
      current.internalStates[key] = Math.min(Math.max(current.internalStates[key] + update, 0), 1);
    });
    // Check convergence
    const currentFE =
    /* istanbul ignore next */
    (cov_1tektexf8q().s[76]++, calculateFreeEnergy(current));
    const improvement =
    /* istanbul ignore next */
    (cov_1tektexf8q().s[77]++, previousFE - currentFE);
    /* istanbul ignore next */
    cov_1tektexf8q().s[78]++;
    if (Math.abs(improvement) < config.convergenceThreshold) {
      /* istanbul ignore next */
      cov_1tektexf8q().b[17][0]++;
      cov_1tektexf8q().s[79]++;
      converged = true;
    } else
    /* istanbul ignore next */
    {
      cov_1tektexf8q().b[17][1]++;
    }
    cov_1tektexf8q().s[80]++;
    previousFE = currentFE;
    /* istanbul ignore next */
    cov_1tektexf8q().s[81]++;
    iterations++;
  }
  /* istanbul ignore next */
  cov_1tektexf8q().s[82]++;
  return {
    ...current,
    freeEnergy: previousFE,
    convergenceInfo: {
      iterations,
      converged,
      finalError: previousFE
    }
  };
}
function getMarkovBlanketNeighbors(blanket, allBlankets, options) {
  /* istanbul ignore next */
  cov_1tektexf8q().f[20]++;
  const opts =
  /* istanbul ignore next */
  (cov_1tektexf8q().s[83]++, {
    proximityThreshold: 0.5,
    considerCommunication: false,
    considerSharedBeliefs: false,
    ...options
  });
  /* istanbul ignore next */
  cov_1tektexf8q().s[84]++;
  return allBlankets.filter(other => {
    /* istanbul ignore next */
    cov_1tektexf8q().f[21]++;
    cov_1tektexf8q().s[85]++;
    if (other.id === blanket.id) {
      /* istanbul ignore next */
      cov_1tektexf8q().b[18][0]++;
      cov_1tektexf8q().s[86]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_1tektexf8q().b[18][1]++;
    }
    // Check proximity
    const proximityKey =
    /* istanbul ignore next */
    (cov_1tektexf8q().s[87]++, `proximity_to_${blanket.agentId}`);
    const proximity =
    /* istanbul ignore next */
    (cov_1tektexf8q().s[88]++,
    /* istanbul ignore next */
    (cov_1tektexf8q().b[19][0]++, other.externalStates[proximityKey]) ||
    /* istanbul ignore next */
    (cov_1tektexf8q().b[19][1]++, 0));
    /* istanbul ignore next */
    cov_1tektexf8q().s[89]++;
    if (proximity < opts.proximityThreshold) {
      /* istanbul ignore next */
      cov_1tektexf8q().b[20][0]++;
      cov_1tektexf8q().s[90]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_1tektexf8q().b[20][1]++;
    }
    // Additional checks if enabled
    cov_1tektexf8q().s[91]++;
    if (opts.considerCommunication) {
      /* istanbul ignore next */
      cov_1tektexf8q().b[21][0]++;
      const communication =
      /* istanbul ignore next */
      (cov_1tektexf8q().s[92]++,
      /* istanbul ignore next */
      (cov_1tektexf8q().b[22][0]++, other.activeStates.communication?.value) ||
      /* istanbul ignore next */
      (cov_1tektexf8q().b[22][1]++, 0));
      /* istanbul ignore next */
      cov_1tektexf8q().s[93]++;
      if (communication < 0.3) {
        /* istanbul ignore next */
        cov_1tektexf8q().b[23][0]++;
        cov_1tektexf8q().s[94]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_1tektexf8q().b[23][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1tektexf8q().b[21][1]++;
    }
    cov_1tektexf8q().s[95]++;
    if (opts.considerSharedBeliefs) {
      /* istanbul ignore next */
      cov_1tektexf8q().b[24][0]++;
      // Check for similar beliefs
      const beliefSimilarity =
      /* istanbul ignore next */
      (cov_1tektexf8q().s[96]++, Object.keys(blanket.internalStates).filter(key => {
        /* istanbul ignore next */
        cov_1tektexf8q().f[22]++;
        cov_1tektexf8q().s[97]++;
        return key.startsWith("belief_");
      }).reduce((sim, key) => {
        /* istanbul ignore next */
        cov_1tektexf8q().f[23]++;
        const diff =
        /* istanbul ignore next */
        (cov_1tektexf8q().s[98]++, Math.abs(blanket.internalStates[key] - (
        /* istanbul ignore next */
        (cov_1tektexf8q().b[25][0]++, other.internalStates[key]) ||
        /* istanbul ignore next */
        (cov_1tektexf8q().b[25][1]++, 0.5))));
        /* istanbul ignore next */
        cov_1tektexf8q().s[99]++;
        return sim + (1 - diff);
      }, 0));
      /* istanbul ignore next */
      cov_1tektexf8q().s[100]++;
      if (beliefSimilarity < 1) {
        /* istanbul ignore next */
        cov_1tektexf8q().b[26][0]++;
        cov_1tektexf8q().s[101]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_1tektexf8q().b[26][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1tektexf8q().b[24][1]++;
    }
    cov_1tektexf8q().s[102]++;
    return true;
  });
}
function mergeMarkovBlankets(blankets) {
  /* istanbul ignore next */
  cov_1tektexf8q().f[24]++;
  cov_1tektexf8q().s[103]++;
  if (blankets.length === 0) {
    /* istanbul ignore next */
    cov_1tektexf8q().b[27][0]++;
    cov_1tektexf8q().s[104]++;
    throw new Error("Cannot merge empty array of Markov blankets");
  } else
  /* istanbul ignore next */
  {
    cov_1tektexf8q().b[27][1]++;
  }
  cov_1tektexf8q().s[105]++;
  if (blankets.length === 1) {
    /* istanbul ignore next */
    cov_1tektexf8q().b[28][0]++;
    cov_1tektexf8q().s[106]++;
    return blankets[0];
  } else
  /* istanbul ignore next */
  {
    cov_1tektexf8q().b[28][1]++;
  }
  const merged =
  /* istanbul ignore next */
  (cov_1tektexf8q().s[107]++, {
    id: `merged-${Date.now()}`,
    agentId: `coalition-${blankets.map(b => {
      /* istanbul ignore next */
      cov_1tektexf8q().f[25]++;
      cov_1tektexf8q().s[108]++;
      return b.agentId;
    }).join("-")}`,
    sensorStates: {},
    activeStates: {},
    internalStates: {},
    externalStates: {},
    lastUpdated: Date.now()
  });
  // Merge sensor states (union)
  /* istanbul ignore next */
  cov_1tektexf8q().s[109]++;
  blankets.forEach(blanket => {
    /* istanbul ignore next */
    cov_1tektexf8q().f[26]++;
    cov_1tektexf8q().s[110]++;
    Object.entries(blanket.sensorStates).forEach(([key, state]) => {
      /* istanbul ignore next */
      cov_1tektexf8q().f[27]++;
      cov_1tektexf8q().s[111]++;
      if (
      /* istanbul ignore next */
      (cov_1tektexf8q().b[30][0]++, !merged.sensorStates[key]) ||
      /* istanbul ignore next */
      (cov_1tektexf8q().b[30][1]++, state.confidence > merged.sensorStates[key].confidence)) {
        /* istanbul ignore next */
        cov_1tektexf8q().b[29][0]++;
        cov_1tektexf8q().s[112]++;
        merged.sensorStates[key] = state;
      } else
      /* istanbul ignore next */
      {
        cov_1tektexf8q().b[29][1]++;
      }
    });
  });
  // Merge active states (average)
  const activeStateKeys =
  /* istanbul ignore next */
  (cov_1tektexf8q().s[113]++, new Set());
  /* istanbul ignore next */
  cov_1tektexf8q().s[114]++;
  blankets.forEach(blanket => {
    /* istanbul ignore next */
    cov_1tektexf8q().f[28]++;
    cov_1tektexf8q().s[115]++;
    Object.keys(blanket.activeStates).forEach(key => {
      /* istanbul ignore next */
      cov_1tektexf8q().f[29]++;
      cov_1tektexf8q().s[116]++;
      return activeStateKeys.add(key);
    });
  });
  /* istanbul ignore next */
  cov_1tektexf8q().s[117]++;
  activeStateKeys.forEach(key => {
    /* istanbul ignore next */
    cov_1tektexf8q().f[30]++;
    const states =
    /* istanbul ignore next */
    (cov_1tektexf8q().s[118]++, blankets.map(b => {
      /* istanbul ignore next */
      cov_1tektexf8q().f[31]++;
      cov_1tektexf8q().s[119]++;
      return b.activeStates[key];
    }).filter(Boolean));
    /* istanbul ignore next */
    cov_1tektexf8q().s[120]++;
    if (states.length > 0) {
      /* istanbul ignore next */
      cov_1tektexf8q().b[31][0]++;
      cov_1tektexf8q().s[121]++;
      merged.activeStates[key] = {
        value: states.reduce((sum, s) => {
          /* istanbul ignore next */
          cov_1tektexf8q().f[32]++;
          cov_1tektexf8q().s[122]++;
          return sum + s.value;
        }, 0) / states.length,
        energy: states.reduce((sum, s) => {
          /* istanbul ignore next */
          cov_1tektexf8q().f[33]++;
          cov_1tektexf8q().s[123]++;
          return sum + s.energy;
        }, 0) / states.length
      };
    } else
    /* istanbul ignore next */
    {
      cov_1tektexf8q().b[31][1]++;
    }
  });
  // Merge internal states (weighted average based on free energy)
  const weights =
  /* istanbul ignore next */
  (cov_1tektexf8q().s[124]++, blankets.map(b => {
    /* istanbul ignore next */
    cov_1tektexf8q().f[34]++;
    cov_1tektexf8q().s[125]++;
    return 1 / (
    /* istanbul ignore next */
    (cov_1tektexf8q().b[32][0]++, b.freeEnergy) ||
    /* istanbul ignore next */
    (cov_1tektexf8q().b[32][1]++, 1));
  }));
  const totalWeight =
  /* istanbul ignore next */
  (cov_1tektexf8q().s[126]++, weights.reduce((sum, w) => {
    /* istanbul ignore next */
    cov_1tektexf8q().f[35]++;
    cov_1tektexf8q().s[127]++;
    return sum + w;
  }, 0));
  const internalKeys =
  /* istanbul ignore next */
  (cov_1tektexf8q().s[128]++, new Set());
  /* istanbul ignore next */
  cov_1tektexf8q().s[129]++;
  blankets.forEach(blanket => {
    /* istanbul ignore next */
    cov_1tektexf8q().f[36]++;
    cov_1tektexf8q().s[130]++;
    Object.keys(blanket.internalStates).forEach(key => {
      /* istanbul ignore next */
      cov_1tektexf8q().f[37]++;
      cov_1tektexf8q().s[131]++;
      return internalKeys.add(key);
    });
  });
  /* istanbul ignore next */
  cov_1tektexf8q().s[132]++;
  internalKeys.forEach(key => {
    /* istanbul ignore next */
    cov_1tektexf8q().f[38]++;
    let weightedSum =
    /* istanbul ignore next */
    (cov_1tektexf8q().s[133]++, 0);
    let weightSum =
    /* istanbul ignore next */
    (cov_1tektexf8q().s[134]++, 0);
    /* istanbul ignore next */
    cov_1tektexf8q().s[135]++;
    blankets.forEach((blanket, i) => {
      /* istanbul ignore next */
      cov_1tektexf8q().f[39]++;
      cov_1tektexf8q().s[136]++;
      if (blanket.internalStates[key] !== undefined) {
        /* istanbul ignore next */
        cov_1tektexf8q().b[33][0]++;
        cov_1tektexf8q().s[137]++;
        weightedSum += blanket.internalStates[key] * weights[i];
        /* istanbul ignore next */
        cov_1tektexf8q().s[138]++;
        weightSum += weights[i];
      } else
      /* istanbul ignore next */
      {
        cov_1tektexf8q().b[33][1]++;
      }
    });
    /* istanbul ignore next */
    cov_1tektexf8q().s[139]++;
    if (weightSum > 0) {
      /* istanbul ignore next */
      cov_1tektexf8q().b[34][0]++;
      cov_1tektexf8q().s[140]++;
      merged.internalStates[key] = weightedSum / weightSum;
    } else
    /* istanbul ignore next */
    {
      cov_1tektexf8q().b[34][1]++;
    }
  });
  // Calculate free energy for merged blanket
  /* istanbul ignore next */
  cov_1tektexf8q().s[141]++;
  merged.freeEnergy = calculateFreeEnergy(merged);
  /* istanbul ignore next */
  cov_1tektexf8q().s[142]++;
  return merged;
}
function validateMarkovBlanket(blanket) {
  /* istanbul ignore next */
  cov_1tektexf8q().f[40]++;
  const errors =
  /* istanbul ignore next */
  (cov_1tektexf8q().s[143]++, []);
  const warnings =
  /* istanbul ignore next */
  (cov_1tektexf8q().s[144]++, []);
  // Check required fields
  /* istanbul ignore next */
  cov_1tektexf8q().s[145]++;
  if (!blanket.id) {
    /* istanbul ignore next */
    cov_1tektexf8q().b[35][0]++;
    cov_1tektexf8q().s[146]++;
    errors.push("Missing required field: id");
  } else
  /* istanbul ignore next */
  {
    cov_1tektexf8q().b[35][1]++;
  }
  cov_1tektexf8q().s[147]++;
  if (!blanket.agentId) {
    /* istanbul ignore next */
    cov_1tektexf8q().b[36][0]++;
    cov_1tektexf8q().s[148]++;
    errors.push("Missing required field: agentId");
  } else
  /* istanbul ignore next */
  {
    cov_1tektexf8q().b[36][1]++;
  }
  cov_1tektexf8q().s[149]++;
  if (!blanket.sensorStates) {
    /* istanbul ignore next */
    cov_1tektexf8q().b[37][0]++;
    cov_1tektexf8q().s[150]++;
    errors.push("Missing required field: sensorStates");
  } else
  /* istanbul ignore next */
  {
    cov_1tektexf8q().b[37][1]++;
  }
  cov_1tektexf8q().s[151]++;
  if (!blanket.activeStates) {
    /* istanbul ignore next */
    cov_1tektexf8q().b[38][0]++;
    cov_1tektexf8q().s[152]++;
    errors.push("Missing required field: activeStates");
  } else
  /* istanbul ignore next */
  {
    cov_1tektexf8q().b[38][1]++;
  }
  cov_1tektexf8q().s[153]++;
  if (!blanket.internalStates) {
    /* istanbul ignore next */
    cov_1tektexf8q().b[39][0]++;
    cov_1tektexf8q().s[154]++;
    errors.push("Missing required field: internalStates");
  } else
  /* istanbul ignore next */
  {
    cov_1tektexf8q().b[39][1]++;
  }
  cov_1tektexf8q().s[155]++;
  if (!blanket.externalStates) {
    /* istanbul ignore next */
    cov_1tektexf8q().b[40][0]++;
    cov_1tektexf8q().s[156]++;
    errors.push("Missing required field: externalStates");
  } else
  /* istanbul ignore next */
  {
    cov_1tektexf8q().b[40][1]++;
  }
  // Validate state ranges
  cov_1tektexf8q().s[157]++;
  if (blanket.internalStates) {
    /* istanbul ignore next */
    cov_1tektexf8q().b[41][0]++;
    cov_1tektexf8q().s[158]++;
    Object.entries(blanket.internalStates).forEach(([key, value]) => {
      /* istanbul ignore next */
      cov_1tektexf8q().f[41]++;
      cov_1tektexf8q().s[159]++;
      if (
      /* istanbul ignore next */
      (cov_1tektexf8q().b[43][0]++, value < 0) ||
      /* istanbul ignore next */
      (cov_1tektexf8q().b[43][1]++, value > 1)) {
        /* istanbul ignore next */
        cov_1tektexf8q().b[42][0]++;
        cov_1tektexf8q().s[160]++;
        errors.push(`Internal state '${key}' out of range: ${value}`);
      } else
      /* istanbul ignore next */
      {
        cov_1tektexf8q().b[42][1]++;
      }
    });
  } else
  /* istanbul ignore next */
  {
    cov_1tektexf8q().b[41][1]++;
  }
  cov_1tektexf8q().s[161]++;
  if (blanket.activeStates) {
    /* istanbul ignore next */
    cov_1tektexf8q().b[44][0]++;
    cov_1tektexf8q().s[162]++;
    Object.entries(blanket.activeStates).forEach(([key, state]) => {
      /* istanbul ignore next */
      cov_1tektexf8q().f[42]++;
      cov_1tektexf8q().s[163]++;
      if (
      /* istanbul ignore next */
      (cov_1tektexf8q().b[46][0]++, state.value < 0) ||
      /* istanbul ignore next */
      (cov_1tektexf8q().b[46][1]++, state.value > 1)) {
        /* istanbul ignore next */
        cov_1tektexf8q().b[45][0]++;
        cov_1tektexf8q().s[164]++;
        errors.push(`Active state '${key}' value out of range: ${state.value}`);
      } else
      /* istanbul ignore next */
      {
        cov_1tektexf8q().b[45][1]++;
      }
      cov_1tektexf8q().s[165]++;
      if (state.energy < 0) {
        /* istanbul ignore next */
        cov_1tektexf8q().b[47][0]++;
        cov_1tektexf8q().s[166]++;
        errors.push(`Active state '${key}' energy cannot be negative: ${state.energy}`);
      } else
      /* istanbul ignore next */
      {
        cov_1tektexf8q().b[47][1]++;
      }
    });
    // Check energy conservation
    const totalActiveValue =
    /* istanbul ignore next */
    (cov_1tektexf8q().s[167]++, Object.values(blanket.activeStates).reduce((sum, state) => {
      /* istanbul ignore next */
      cov_1tektexf8q().f[43]++;
      cov_1tektexf8q().s[168]++;
      return sum + state.value;
    }, 0));
    const totalEnergy =
    /* istanbul ignore next */
    (cov_1tektexf8q().s[169]++, Object.values(blanket.activeStates).reduce((sum, state) => {
      /* istanbul ignore next */
      cov_1tektexf8q().f[44]++;
      cov_1tektexf8q().s[170]++;
      return sum + state.energy;
    }, 0));
    /* istanbul ignore next */
    cov_1tektexf8q().s[171]++;
    if (
    /* istanbul ignore next */
    (cov_1tektexf8q().b[49][0]++, totalActiveValue > 1) &&
    /* istanbul ignore next */
    (cov_1tektexf8q().b[49][1]++, totalEnergy < 0.1)) {
      /* istanbul ignore next */
      cov_1tektexf8q().b[48][0]++;
      cov_1tektexf8q().s[172]++;
      warnings.push("Energy conservation warning: High activity with low energy");
    } else
    /* istanbul ignore next */
    {
      cov_1tektexf8q().b[48][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_1tektexf8q().b[44][1]++;
  }
  cov_1tektexf8q().s[173]++;
  if (blanket.sensorStates) {
    /* istanbul ignore next */
    cov_1tektexf8q().b[50][0]++;
    cov_1tektexf8q().s[174]++;
    Object.entries(blanket.sensorStates).forEach(([key, state]) => {
      /* istanbul ignore next */
      cov_1tektexf8q().f[45]++;
      cov_1tektexf8q().s[175]++;
      if (
      /* istanbul ignore next */
      (cov_1tektexf8q().b[52][0]++, state.value < 0) ||
      /* istanbul ignore next */
      (cov_1tektexf8q().b[52][1]++, state.value > 1)) {
        /* istanbul ignore next */
        cov_1tektexf8q().b[51][0]++;
        cov_1tektexf8q().s[176]++;
        errors.push(`Sensor state '${key}' value out of range: ${state.value}`);
      } else
      /* istanbul ignore next */
      {
        cov_1tektexf8q().b[51][1]++;
      }
      cov_1tektexf8q().s[177]++;
      if (
      /* istanbul ignore next */
      (cov_1tektexf8q().b[54][0]++, state.confidence < 0) ||
      /* istanbul ignore next */
      (cov_1tektexf8q().b[54][1]++, state.confidence > 1)) {
        /* istanbul ignore next */
        cov_1tektexf8q().b[53][0]++;
        cov_1tektexf8q().s[178]++;
        errors.push(`Sensor state '${key}' confidence out of range: ${state.confidence}`);
      } else
      /* istanbul ignore next */
      {
        cov_1tektexf8q().b[53][1]++;
      }
    });
  } else
  /* istanbul ignore next */
  {
    cov_1tektexf8q().b[50][1]++;
  }
  cov_1tektexf8q().s[179]++;
  return {
    isValid: errors.length === 0,
    errors,
    warnings
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXRla3RleGY4cSIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwidHlwZSIsImxvY2F0aW9ucyIsInVuZGVmaW5lZCIsInMiLCJmIiwiYiIsImlucHV0U291cmNlTWFwIiwidmVyc2lvbiIsInNvdXJjZXMiLCJzb3VyY2VzQ29udGVudCIsIm5hbWVzIiwibWFwcGluZ3MiLCJfY292ZXJhZ2VTY2hlbWEiLCJjb3ZlcmFnZSIsImFjdHVhbENvdmVyYWdlIiwiY2FsY3VsYXRlRnJlZUVuZXJneSIsImNyZWF0ZU1hcmtvdkJsYW5rZXQiLCJnZXRNYXJrb3ZCbGFua2V0TmVpZ2hib3JzIiwibWVyZ2VNYXJrb3ZCbGFua2V0cyIsIm1pbmltaXplRnJlZUVuZXJneSIsInVwZGF0ZU1hcmtvdkJsYW5rZXQiLCJ2YWxpZGF0ZU1hcmtvdkJsYW5rZXQiLCJERUZBVUxUX0NPTkZJRyIsImxlYXJuaW5nUmF0ZSIsInByZWNpc2lvbiIsIm1heEl0ZXJhdGlvbnMiLCJjb252ZXJnZW5jZVRocmVzaG9sZCIsImZyZWVFbmVyZ3lDYWNoZSIsIldlYWtNYXAiLCJDQUNIRV9EVVJBVElPTiIsIm9wdGlvbnMiLCJpZCIsImFnZW50SWQiLCJFcnJvciIsImJsYW5rZXQiLCJzZW5zb3JTdGF0ZXMiLCJhY3RpdmVTdGF0ZXMiLCJpbnRlcm5hbFN0YXRlcyIsImV4dGVybmFsU3RhdGVzIiwiY29uZmlnIiwibGFzdFVwZGF0ZWQiLCJEYXRlIiwibm93IiwiZnJlZUVuZXJneSIsInVwZGF0ZXMiLCJ1cGRhdGVkIiwiT2JqZWN0IiwiZW50cmllcyIsInJlZHVjZSIsImFjYyIsImtleSIsInN0YXRlIiwidmFsdWUiLCJNYXRoIiwibWluIiwibWF4IiwiZW5lcmd5IiwiY2FjaGVkIiwiZ2V0IiwidGltZXN0YW1wIiwiZm9yRWFjaCIsInNlbnNvcktleSIsInNlbnNvciIsImJlbGllZktleSIsImJlbGllZiIsInByZWRpY3Rpb25FcnJvciIsInBvdyIsImNvbmZpZGVuY2UiLCJ2YWx1ZXMiLCJlbnRyb3B5IiwibG9nIiwicHJpb3IiLCJjb21wbGV4aXR5IiwiZW5lcmd5Q29zdCIsInNldCIsImN1cnJlbnQiLCJpdGVyYXRpb25zIiwiY29udmVyZ2VkIiwicHJldmlvdXNGRSIsImdyYWRpZW50Iiwia2V5cyIsImVwc2lsb24iLCJvcmlnaW5hbCIsImZlRm9yd2FyZCIsImZlQmFja3dhcmQiLCJ1cGRhdGUiLCJjdXJyZW50RkUiLCJpbXByb3ZlbWVudCIsImFicyIsImNvbnZlcmdlbmNlSW5mbyIsImZpbmFsRXJyb3IiLCJhbGxCbGFua2V0cyIsIm9wdHMiLCJwcm94aW1pdHlUaHJlc2hvbGQiLCJjb25zaWRlckNvbW11bmljYXRpb24iLCJjb25zaWRlclNoYXJlZEJlbGllZnMiLCJmaWx0ZXIiLCJvdGhlciIsInByb3hpbWl0eUtleSIsInByb3hpbWl0eSIsImNvbW11bmljYXRpb24iLCJiZWxpZWZTaW1pbGFyaXR5Iiwic3RhcnRzV2l0aCIsInNpbSIsImRpZmYiLCJibGFua2V0cyIsImxlbmd0aCIsIm1lcmdlZCIsIm1hcCIsImpvaW4iLCJhY3RpdmVTdGF0ZUtleXMiLCJTZXQiLCJhZGQiLCJzdGF0ZXMiLCJCb29sZWFuIiwic3VtIiwid2VpZ2h0cyIsInRvdGFsV2VpZ2h0IiwidyIsImludGVybmFsS2V5cyIsIndlaWdodGVkU3VtIiwid2VpZ2h0U3VtIiwiaSIsImVycm9ycyIsIndhcm5pbmdzIiwicHVzaCIsInRvdGFsQWN0aXZlVmFsdWUiLCJ0b3RhbEVuZXJneSIsImlzVmFsaWQiXSwic291cmNlcyI6WyIvVXNlcnMvbWF0dGhld21vcm9uZXkvYnVpbGRzL0ZyZWVBZ2VudGljcy93ZWIvbGliL21hcmtvdi1ibGFua2V0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogTWFya292IEJsYW5rZXQgSW1wbGVtZW50YXRpb25cbiAqXG4gKiBDb3JlIGltcGxlbWVudGF0aW9uIGZvciBNYXJrb3YgYmxhbmtldCBjYWxjdWxhdGlvbnMgYW5kIHN0YXRlIG1hbmFnZW1lbnRcbiAqIHN1cHBvcnRpbmcgYWN0aXZlIGluZmVyZW5jZSBhbmQgZnJlZSBlbmVyZ3kgbWluaW1pemF0aW9uLlxuICovXG5cbmV4cG9ydCBpbnRlcmZhY2UgU2Vuc29yU3RhdGUge1xuICB2YWx1ZTogbnVtYmVyO1xuICBjb25maWRlbmNlOiBudW1iZXI7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQWN0aXZlU3RhdGUge1xuICB2YWx1ZTogbnVtYmVyO1xuICBlbmVyZ3k6IG51bWJlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJbnRlcm5hbFN0YXRlIHtcbiAgW2tleTogc3RyaW5nXTogbnVtYmVyO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEV4dGVybmFsU3RhdGUge1xuICBba2V5OiBzdHJpbmddOiBudW1iZXI7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTWFya292QmxhbmtldENvbmZpZyB7XG4gIGxlYXJuaW5nUmF0ZT86IG51bWJlcjtcbiAgcHJlY2lzaW9uPzogbnVtYmVyO1xuICBtYXhJdGVyYXRpb25zPzogbnVtYmVyO1xuICBjb252ZXJnZW5jZVRocmVzaG9sZD86IG51bWJlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBNYXJrb3ZCbGFua2V0U3RhdGUge1xuICBpZDogc3RyaW5nO1xuICBhZ2VudElkOiBzdHJpbmc7XG4gIHNlbnNvclN0YXRlczogUmVjb3JkPHN0cmluZywgU2Vuc29yU3RhdGU+O1xuICBhY3RpdmVTdGF0ZXM6IFJlY29yZDxzdHJpbmcsIEFjdGl2ZVN0YXRlPjtcbiAgaW50ZXJuYWxTdGF0ZXM6IEludGVybmFsU3RhdGU7XG4gIGV4dGVybmFsU3RhdGVzOiBFeHRlcm5hbFN0YXRlO1xuICBjb25maWc/OiBNYXJrb3ZCbGFua2V0Q29uZmlnO1xuICBmcmVlRW5lcmd5PzogbnVtYmVyO1xuICBsYXN0VXBkYXRlZD86IG51bWJlcjtcbiAgY29udmVyZ2VuY2VJbmZvPzoge1xuICAgIGl0ZXJhdGlvbnM6IG51bWJlcjtcbiAgICBjb252ZXJnZWQ6IGJvb2xlYW47XG4gICAgZmluYWxFcnJvcjogbnVtYmVyO1xuICB9O1xufVxuXG5leHBvcnQgdHlwZSBNYXJrb3ZCbGFua2V0ID0gTWFya292QmxhbmtldFN0YXRlO1xuXG5jb25zdCBERUZBVUxUX0NPTkZJRzogTWFya292QmxhbmtldENvbmZpZyA9IHtcbiAgbGVhcm5pbmdSYXRlOiAwLjAxLFxuICBwcmVjaXNpb246IDAuMDAxLFxuICBtYXhJdGVyYXRpb25zOiAxMDAsXG4gIGNvbnZlcmdlbmNlVGhyZXNob2xkOiAwLjAwMDEsXG59O1xuXG4vLyBDYWNoZSBmb3IgZnJlZSBlbmVyZ3kgY2FsY3VsYXRpb25zXG5jb25zdCBmcmVlRW5lcmd5Q2FjaGUgPSBuZXcgV2Vha01hcDxcbiAgTWFya292QmxhbmtldCxcbiAgeyB2YWx1ZTogbnVtYmVyOyB0aW1lc3RhbXA6IG51bWJlciB9XG4+KCk7XG5jb25zdCBDQUNIRV9EVVJBVElPTiA9IDEwMDsgLy8gbXNcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZU1hcmtvdkJsYW5rZXQoXG4gIG9wdGlvbnM6IFBhcnRpYWw8TWFya292QmxhbmtldFN0YXRlPiAmIHsgaWQ6IHN0cmluZzsgYWdlbnRJZDogc3RyaW5nIH0sXG4pOiBNYXJrb3ZCbGFua2V0IHtcbiAgaWYgKCFvcHRpb25zLmlkIHx8ICFvcHRpb25zLmFnZW50SWQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIE1hcmtvdiBibGFua2V0IGNvbmZpZ3VyYXRpb25cIik7XG4gIH1cblxuICBjb25zdCBibGFua2V0OiBNYXJrb3ZCbGFua2V0ID0ge1xuICAgIGlkOiBvcHRpb25zLmlkLFxuICAgIGFnZW50SWQ6IG9wdGlvbnMuYWdlbnRJZCxcbiAgICBzZW5zb3JTdGF0ZXM6IG9wdGlvbnMuc2Vuc29yU3RhdGVzIHx8IHt9LFxuICAgIGFjdGl2ZVN0YXRlczogb3B0aW9ucy5hY3RpdmVTdGF0ZXMgfHwge30sXG4gICAgaW50ZXJuYWxTdGF0ZXM6IG9wdGlvbnMuaW50ZXJuYWxTdGF0ZXMgfHwge30sXG4gICAgZXh0ZXJuYWxTdGF0ZXM6IG9wdGlvbnMuZXh0ZXJuYWxTdGF0ZXMgfHwge30sXG4gICAgY29uZmlnOiB7IC4uLkRFRkFVTFRfQ09ORklHLCAuLi5vcHRpb25zLmNvbmZpZyB9LFxuICAgIGxhc3RVcGRhdGVkOiBEYXRlLm5vdygpLFxuICB9O1xuXG4gIC8vIENhbGN1bGF0ZSBpbml0aWFsIGZyZWUgZW5lcmd5XG4gIGJsYW5rZXQuZnJlZUVuZXJneSA9IGNhbGN1bGF0ZUZyZWVFbmVyZ3koYmxhbmtldCk7XG5cbiAgcmV0dXJuIGJsYW5rZXQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVNYXJrb3ZCbGFua2V0KFxuICBibGFua2V0OiBNYXJrb3ZCbGFua2V0LFxuICB1cGRhdGVzOiBQYXJ0aWFsPFxuICAgIFBpY2s8XG4gICAgICBNYXJrb3ZCbGFua2V0LFxuICAgICAgXCJzZW5zb3JTdGF0ZXNcIiB8IFwiYWN0aXZlU3RhdGVzXCIgfCBcImludGVybmFsU3RhdGVzXCIgfCBcImV4dGVybmFsU3RhdGVzXCJcbiAgICA+XG4gID4sXG4pOiBNYXJrb3ZCbGFua2V0IHtcbiAgY29uc3QgdXBkYXRlZDogTWFya292QmxhbmtldCA9IHtcbiAgICAuLi5ibGFua2V0LFxuICAgIGxhc3RVcGRhdGVkOiBEYXRlLm5vdygpLFxuICB9O1xuXG4gIC8vIFVwZGF0ZSBzZW5zb3Igc3RhdGVzXG4gIGlmICh1cGRhdGVzLnNlbnNvclN0YXRlcykge1xuICAgIHVwZGF0ZWQuc2Vuc29yU3RhdGVzID0geyAuLi51cGRhdGVzLnNlbnNvclN0YXRlcyB9O1xuICB9XG5cbiAgLy8gVXBkYXRlIGFjdGl2ZSBzdGF0ZXMgd2l0aCBlbmVyZ3kgY29uc3RyYWludHNcbiAgaWYgKHVwZGF0ZXMuYWN0aXZlU3RhdGVzKSB7XG4gICAgdXBkYXRlZC5hY3RpdmVTdGF0ZXMgPSBPYmplY3QuZW50cmllcyh1cGRhdGVzLmFjdGl2ZVN0YXRlcykucmVkdWNlKFxuICAgICAgKGFjYywgW2tleSwgc3RhdGVdKSA9PiB7XG4gICAgICAgIGFjY1trZXldID0ge1xuICAgICAgICAgIHZhbHVlOiBNYXRoLm1pbihNYXRoLm1heChzdGF0ZS52YWx1ZSwgMCksIDEpLFxuICAgICAgICAgIGVuZXJneTogTWF0aC5tYXgoc3RhdGUuZW5lcmd5LCAwKSxcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIGFjYztcbiAgICAgIH0sXG4gICAgICB7fSBhcyBSZWNvcmQ8c3RyaW5nLCBBY3RpdmVTdGF0ZT4sXG4gICAgKTtcbiAgfVxuXG4gIC8vIFVwZGF0ZSBpbnRlcm5hbCBzdGF0ZXMgd2l0aCBub3JtYWxpemF0aW9uXG4gIGlmICh1cGRhdGVzLmludGVybmFsU3RhdGVzKSB7XG4gICAgdXBkYXRlZC5pbnRlcm5hbFN0YXRlcyA9IE9iamVjdC5lbnRyaWVzKHVwZGF0ZXMuaW50ZXJuYWxTdGF0ZXMpLnJlZHVjZShcbiAgICAgIChhY2MsIFtrZXksIHZhbHVlXSkgPT4ge1xuICAgICAgICBhY2Nba2V5XSA9IE1hdGgubWluKE1hdGgubWF4KHZhbHVlLCAwKSwgMSk7XG4gICAgICAgIHJldHVybiBhY2M7XG4gICAgICB9LFxuICAgICAge30gYXMgSW50ZXJuYWxTdGF0ZSxcbiAgICApO1xuICB9XG5cbiAgLy8gVXBkYXRlIGV4dGVybmFsIHN0YXRlc1xuICBpZiAodXBkYXRlcy5leHRlcm5hbFN0YXRlcykge1xuICAgIHVwZGF0ZWQuZXh0ZXJuYWxTdGF0ZXMgPSB7IC4uLnVwZGF0ZXMuZXh0ZXJuYWxTdGF0ZXMgfTtcbiAgfVxuXG4gIC8vIFJlY2FsY3VsYXRlIGZyZWUgZW5lcmd5XG4gIHVwZGF0ZWQuZnJlZUVuZXJneSA9IGNhbGN1bGF0ZUZyZWVFbmVyZ3kodXBkYXRlZCk7XG5cbiAgcmV0dXJuIHVwZGF0ZWQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjYWxjdWxhdGVGcmVlRW5lcmd5KGJsYW5rZXQ6IE1hcmtvdkJsYW5rZXQpOiBudW1iZXIge1xuICAvLyBDaGVjayBjYWNoZSBmaXJzdFxuICBjb25zdCBjYWNoZWQgPSBmcmVlRW5lcmd5Q2FjaGUuZ2V0KGJsYW5rZXQpO1xuICBpZiAoY2FjaGVkICYmIERhdGUubm93KCkgLSBjYWNoZWQudGltZXN0YW1wIDwgQ0FDSEVfRFVSQVRJT04pIHtcbiAgICByZXR1cm4gY2FjaGVkLnZhbHVlO1xuICB9XG5cbiAgbGV0IGZyZWVFbmVyZ3kgPSAwO1xuXG4gIC8vIFByZWRpY3Rpb24gZXJyb3IgY29tcG9uZW50XG4gIE9iamVjdC5lbnRyaWVzKGJsYW5rZXQuc2Vuc29yU3RhdGVzKS5mb3JFYWNoKChbc2Vuc29yS2V5LCBzZW5zb3JdKSA9PiB7XG4gICAgY29uc3QgYmVsaWVmS2V5ID0gYGJlbGllZl8ke3NlbnNvcktleX1gO1xuICAgIGNvbnN0IGJlbGllZiA9IGJsYW5rZXQuaW50ZXJuYWxTdGF0ZXNbYmVsaWVmS2V5XSB8fCAwLjU7XG4gICAgY29uc3QgcHJlZGljdGlvbkVycm9yID0gTWF0aC5wb3coc2Vuc29yLnZhbHVlIC0gYmVsaWVmLCAyKTtcbiAgICBmcmVlRW5lcmd5ICs9IHByZWRpY3Rpb25FcnJvciAqIHNlbnNvci5jb25maWRlbmNlO1xuICB9KTtcblxuICAvLyBFbnRyb3B5IGNvbXBvbmVudFxuICBPYmplY3QudmFsdWVzKGJsYW5rZXQuaW50ZXJuYWxTdGF0ZXMpLmZvckVhY2goKHZhbHVlKSA9PiB7XG4gICAgaWYgKHZhbHVlID4gMCAmJiB2YWx1ZSA8IDEpIHtcbiAgICAgIGNvbnN0IGVudHJvcHkgPVxuICAgICAgICAtdmFsdWUgKiBNYXRoLmxvZyh2YWx1ZSkgLSAoMSAtIHZhbHVlKSAqIE1hdGgubG9nKDEgLSB2YWx1ZSk7XG4gICAgICBmcmVlRW5lcmd5ICs9IGVudHJvcHkgKiAwLjE7IC8vIFdlaWdodCB0aGUgZW50cm9weSBjb250cmlidXRpb25cbiAgICB9XG4gIH0pO1xuXG4gIC8vIENvbXBsZXhpdHkgY29tcG9uZW50IChkZXZpYXRpb24gZnJvbSBwcmlvcnMpXG4gIE9iamVjdC5lbnRyaWVzKGJsYW5rZXQuaW50ZXJuYWxTdGF0ZXMpLmZvckVhY2goKFtrZXksIHZhbHVlXSkgPT4ge1xuICAgIGNvbnN0IHByaW9yID0gMC41OyAvLyBBc3N1bWUgdW5pZm9ybSBwcmlvclxuICAgIGNvbnN0IGNvbXBsZXhpdHkgPSBNYXRoLnBvdyh2YWx1ZSAtIHByaW9yLCAyKTtcbiAgICBmcmVlRW5lcmd5ICs9IGNvbXBsZXhpdHkgKiAwLjA1O1xuICB9KTtcblxuICAvLyBFbmVyZ3kgY29uc3RyYWludHNcbiAgT2JqZWN0LnZhbHVlcyhibGFua2V0LmFjdGl2ZVN0YXRlcykuZm9yRWFjaCgoc3RhdGUpID0+IHtcbiAgICBpZiAoc3RhdGUudmFsdWUgPiAwKSB7XG4gICAgICBjb25zdCBlbmVyZ3lDb3N0ID0gc3RhdGUudmFsdWUgKiAoMSAtIHN0YXRlLmVuZXJneSk7XG4gICAgICBmcmVlRW5lcmd5ICs9IGVuZXJneUNvc3QgKiAwLjI7XG4gICAgfVxuICB9KTtcblxuICAvLyBDYWNoZSB0aGUgcmVzdWx0XG4gIGZyZWVFbmVyZ3lDYWNoZS5zZXQoYmxhbmtldCwgeyB2YWx1ZTogZnJlZUVuZXJneSwgdGltZXN0YW1wOiBEYXRlLm5vdygpIH0pO1xuXG4gIHJldHVybiBmcmVlRW5lcmd5O1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWluaW1pemVGcmVlRW5lcmd5KFxuICBibGFua2V0OiBNYXJrb3ZCbGFua2V0LFxuICBvcHRpb25zPzogUGFydGlhbDxNYXJrb3ZCbGFua2V0Q29uZmlnPixcbik6IFByb21pc2U8TWFya292QmxhbmtldD4ge1xuICBjb25zdCBjb25maWcgPSB7IC4uLmJsYW5rZXQuY29uZmlnLCAuLi5vcHRpb25zIH07XG4gIGxldCBjdXJyZW50ID0geyAuLi5ibGFua2V0IH07XG4gIGxldCBpdGVyYXRpb25zID0gMDtcbiAgbGV0IGNvbnZlcmdlZCA9IGZhbHNlO1xuICBsZXQgcHJldmlvdXNGRSA9IGNhbGN1bGF0ZUZyZWVFbmVyZ3koY3VycmVudCk7XG5cbiAgd2hpbGUgKGl0ZXJhdGlvbnMgPCBjb25maWcubWF4SXRlcmF0aW9ucyEgJiYgIWNvbnZlcmdlZCkge1xuICAgIGNvbnN0IGdyYWRpZW50OiBJbnRlcm5hbFN0YXRlID0ge307XG5cbiAgICAvLyBDYWxjdWxhdGUgZ3JhZGllbnQgZm9yIGVhY2ggaW50ZXJuYWwgc3RhdGVcbiAgICBPYmplY3Qua2V5cyhjdXJyZW50LmludGVybmFsU3RhdGVzKS5mb3JFYWNoKChrZXkpID0+IHtcbiAgICAgIGNvbnN0IGVwc2lsb24gPSAwLjAwMTtcbiAgICAgIGNvbnN0IG9yaWdpbmFsID0gY3VycmVudC5pbnRlcm5hbFN0YXRlc1trZXldO1xuXG4gICAgICAvLyBGb3J3YXJkIGRpZmZlcmVuY2VcbiAgICAgIGN1cnJlbnQuaW50ZXJuYWxTdGF0ZXNba2V5XSA9IE1hdGgubWluKG9yaWdpbmFsICsgZXBzaWxvbiwgMSk7XG4gICAgICBjb25zdCBmZUZvcndhcmQgPSBjYWxjdWxhdGVGcmVlRW5lcmd5KGN1cnJlbnQpO1xuXG4gICAgICAvLyBCYWNrd2FyZCBkaWZmZXJlbmNlXG4gICAgICBjdXJyZW50LmludGVybmFsU3RhdGVzW2tleV0gPSBNYXRoLm1heChvcmlnaW5hbCAtIGVwc2lsb24sIDApO1xuICAgICAgY29uc3QgZmVCYWNrd2FyZCA9IGNhbGN1bGF0ZUZyZWVFbmVyZ3koY3VycmVudCk7XG5cbiAgICAgIC8vIENhbGN1bGF0ZSBncmFkaWVudFxuICAgICAgZ3JhZGllbnRba2V5XSA9IChmZUZvcndhcmQgLSBmZUJhY2t3YXJkKSAvICgyICogZXBzaWxvbik7XG5cbiAgICAgIC8vIFJlc3RvcmUgb3JpZ2luYWwgdmFsdWVcbiAgICAgIGN1cnJlbnQuaW50ZXJuYWxTdGF0ZXNba2V5XSA9IG9yaWdpbmFsO1xuICAgIH0pO1xuXG4gICAgLy8gVXBkYXRlIGludGVybmFsIHN0YXRlcyBiYXNlZCBvbiBncmFkaWVudFxuICAgIE9iamVjdC5rZXlzKGdyYWRpZW50KS5mb3JFYWNoKChrZXkpID0+IHtcbiAgICAgIGNvbnN0IHVwZGF0ZSA9IC1ncmFkaWVudFtrZXldICogY29uZmlnLmxlYXJuaW5nUmF0ZSE7XG4gICAgICBjdXJyZW50LmludGVybmFsU3RhdGVzW2tleV0gPSBNYXRoLm1pbihcbiAgICAgICAgTWF0aC5tYXgoY3VycmVudC5pbnRlcm5hbFN0YXRlc1trZXldICsgdXBkYXRlLCAwKSxcbiAgICAgICAgMSxcbiAgICAgICk7XG4gICAgfSk7XG5cbiAgICAvLyBDaGVjayBjb252ZXJnZW5jZVxuICAgIGNvbnN0IGN1cnJlbnRGRSA9IGNhbGN1bGF0ZUZyZWVFbmVyZ3koY3VycmVudCk7XG4gICAgY29uc3QgaW1wcm92ZW1lbnQgPSBwcmV2aW91c0ZFIC0gY3VycmVudEZFO1xuXG4gICAgaWYgKE1hdGguYWJzKGltcHJvdmVtZW50KSA8IGNvbmZpZy5jb252ZXJnZW5jZVRocmVzaG9sZCEpIHtcbiAgICAgIGNvbnZlcmdlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgcHJldmlvdXNGRSA9IGN1cnJlbnRGRTtcbiAgICBpdGVyYXRpb25zKys7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIC4uLmN1cnJlbnQsXG4gICAgZnJlZUVuZXJneTogcHJldmlvdXNGRSxcbiAgICBjb252ZXJnZW5jZUluZm86IHtcbiAgICAgIGl0ZXJhdGlvbnMsXG4gICAgICBjb252ZXJnZWQsXG4gICAgICBmaW5hbEVycm9yOiBwcmV2aW91c0ZFLFxuICAgIH0sXG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRNYXJrb3ZCbGFua2V0TmVpZ2hib3JzKFxuICBibGFua2V0OiBNYXJrb3ZCbGFua2V0LFxuICBhbGxCbGFua2V0czogTWFya292QmxhbmtldFtdLFxuICBvcHRpb25zPzoge1xuICAgIHByb3hpbWl0eVRocmVzaG9sZD86IG51bWJlcjtcbiAgICBjb25zaWRlckNvbW11bmljYXRpb24/OiBib29sZWFuO1xuICAgIGNvbnNpZGVyU2hhcmVkQmVsaWVmcz86IGJvb2xlYW47XG4gIH0sXG4pOiBNYXJrb3ZCbGFua2V0W10ge1xuICBjb25zdCBvcHRzID0ge1xuICAgIHByb3hpbWl0eVRocmVzaG9sZDogMC41LFxuICAgIGNvbnNpZGVyQ29tbXVuaWNhdGlvbjogZmFsc2UsXG4gICAgY29uc2lkZXJTaGFyZWRCZWxpZWZzOiBmYWxzZSxcbiAgICAuLi5vcHRpb25zLFxuICB9O1xuXG4gIHJldHVybiBhbGxCbGFua2V0cy5maWx0ZXIoKG90aGVyKSA9PiB7XG4gICAgaWYgKG90aGVyLmlkID09PSBibGFua2V0LmlkKSByZXR1cm4gZmFsc2U7XG5cbiAgICAvLyBDaGVjayBwcm94aW1pdHlcbiAgICBjb25zdCBwcm94aW1pdHlLZXkgPSBgcHJveGltaXR5X3RvXyR7YmxhbmtldC5hZ2VudElkfWA7XG4gICAgY29uc3QgcHJveGltaXR5ID0gb3RoZXIuZXh0ZXJuYWxTdGF0ZXNbcHJveGltaXR5S2V5XSB8fCAwO1xuXG4gICAgaWYgKHByb3hpbWl0eSA8IG9wdHMucHJveGltaXR5VGhyZXNob2xkKSByZXR1cm4gZmFsc2U7XG5cbiAgICAvLyBBZGRpdGlvbmFsIGNoZWNrcyBpZiBlbmFibGVkXG4gICAgaWYgKG9wdHMuY29uc2lkZXJDb21tdW5pY2F0aW9uKSB7XG4gICAgICBjb25zdCBjb21tdW5pY2F0aW9uID0gb3RoZXIuYWN0aXZlU3RhdGVzLmNvbW11bmljYXRpb24/LnZhbHVlIHx8IDA7XG4gICAgICBpZiAoY29tbXVuaWNhdGlvbiA8IDAuMykgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGlmIChvcHRzLmNvbnNpZGVyU2hhcmVkQmVsaWVmcykge1xuICAgICAgLy8gQ2hlY2sgZm9yIHNpbWlsYXIgYmVsaWVmc1xuICAgICAgY29uc3QgYmVsaWVmU2ltaWxhcml0eSA9IE9iamVjdC5rZXlzKGJsYW5rZXQuaW50ZXJuYWxTdGF0ZXMpXG4gICAgICAgIC5maWx0ZXIoKGtleSkgPT4ga2V5LnN0YXJ0c1dpdGgoXCJiZWxpZWZfXCIpKVxuICAgICAgICAucmVkdWNlKChzaW0sIGtleSkgPT4ge1xuICAgICAgICAgIGNvbnN0IGRpZmYgPSBNYXRoLmFicyhcbiAgICAgICAgICAgIGJsYW5rZXQuaW50ZXJuYWxTdGF0ZXNba2V5XSAtIChvdGhlci5pbnRlcm5hbFN0YXRlc1trZXldIHx8IDAuNSksXG4gICAgICAgICAgKTtcbiAgICAgICAgICByZXR1cm4gc2ltICsgKDEgLSBkaWZmKTtcbiAgICAgICAgfSwgMCk7XG5cbiAgICAgIGlmIChiZWxpZWZTaW1pbGFyaXR5IDwgMSkgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIHJldHVybiB0cnVlO1xuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG1lcmdlTWFya292QmxhbmtldHMoYmxhbmtldHM6IE1hcmtvdkJsYW5rZXRbXSk6IE1hcmtvdkJsYW5rZXQge1xuICBpZiAoYmxhbmtldHMubGVuZ3RoID09PSAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IG1lcmdlIGVtcHR5IGFycmF5IG9mIE1hcmtvdiBibGFua2V0c1wiKTtcbiAgfVxuXG4gIGlmIChibGFua2V0cy5sZW5ndGggPT09IDEpIHtcbiAgICByZXR1cm4gYmxhbmtldHNbMF07XG4gIH1cblxuICBjb25zdCBtZXJnZWQ6IE1hcmtvdkJsYW5rZXQgPSB7XG4gICAgaWQ6IGBtZXJnZWQtJHtEYXRlLm5vdygpfWAsXG4gICAgYWdlbnRJZDogYGNvYWxpdGlvbi0ke2JsYW5rZXRzLm1hcCgoYikgPT4gYi5hZ2VudElkKS5qb2luKFwiLVwiKX1gLFxuICAgIHNlbnNvclN0YXRlczoge30sXG4gICAgYWN0aXZlU3RhdGVzOiB7fSxcbiAgICBpbnRlcm5hbFN0YXRlczoge30sXG4gICAgZXh0ZXJuYWxTdGF0ZXM6IHt9LFxuICAgIGxhc3RVcGRhdGVkOiBEYXRlLm5vdygpLFxuICB9O1xuXG4gIC8vIE1lcmdlIHNlbnNvciBzdGF0ZXMgKHVuaW9uKVxuICBibGFua2V0cy5mb3JFYWNoKChibGFua2V0KSA9PiB7XG4gICAgT2JqZWN0LmVudHJpZXMoYmxhbmtldC5zZW5zb3JTdGF0ZXMpLmZvckVhY2goKFtrZXksIHN0YXRlXSkgPT4ge1xuICAgICAgaWYgKFxuICAgICAgICAhbWVyZ2VkLnNlbnNvclN0YXRlc1trZXldIHx8XG4gICAgICAgIHN0YXRlLmNvbmZpZGVuY2UgPiBtZXJnZWQuc2Vuc29yU3RhdGVzW2tleV0uY29uZmlkZW5jZVxuICAgICAgKSB7XG4gICAgICAgIG1lcmdlZC5zZW5zb3JTdGF0ZXNba2V5XSA9IHN0YXRlO1xuICAgICAgfVxuICAgIH0pO1xuICB9KTtcblxuICAvLyBNZXJnZSBhY3RpdmUgc3RhdGVzIChhdmVyYWdlKVxuICBjb25zdCBhY3RpdmVTdGF0ZUtleXMgPSBuZXcgU2V0PHN0cmluZz4oKTtcbiAgYmxhbmtldHMuZm9yRWFjaCgoYmxhbmtldCkgPT4ge1xuICAgIE9iamVjdC5rZXlzKGJsYW5rZXQuYWN0aXZlU3RhdGVzKS5mb3JFYWNoKChrZXkpID0+XG4gICAgICBhY3RpdmVTdGF0ZUtleXMuYWRkKGtleSksXG4gICAgKTtcbiAgfSk7XG5cbiAgYWN0aXZlU3RhdGVLZXlzLmZvckVhY2goKGtleSkgPT4ge1xuICAgIGNvbnN0IHN0YXRlcyA9IGJsYW5rZXRzLm1hcCgoYikgPT4gYi5hY3RpdmVTdGF0ZXNba2V5XSkuZmlsdGVyKEJvb2xlYW4pO1xuXG4gICAgaWYgKHN0YXRlcy5sZW5ndGggPiAwKSB7XG4gICAgICBtZXJnZWQuYWN0aXZlU3RhdGVzW2tleV0gPSB7XG4gICAgICAgIHZhbHVlOiBzdGF0ZXMucmVkdWNlKChzdW0sIHMpID0+IHN1bSArIHMudmFsdWUsIDApIC8gc3RhdGVzLmxlbmd0aCxcbiAgICAgICAgZW5lcmd5OiBzdGF0ZXMucmVkdWNlKChzdW0sIHMpID0+IHN1bSArIHMuZW5lcmd5LCAwKSAvIHN0YXRlcy5sZW5ndGgsXG4gICAgICB9O1xuICAgIH1cbiAgfSk7XG5cbiAgLy8gTWVyZ2UgaW50ZXJuYWwgc3RhdGVzICh3ZWlnaHRlZCBhdmVyYWdlIGJhc2VkIG9uIGZyZWUgZW5lcmd5KVxuICBjb25zdCB3ZWlnaHRzID0gYmxhbmtldHMubWFwKChiKSA9PiAxIC8gKGIuZnJlZUVuZXJneSB8fCAxKSk7XG4gIGNvbnN0IHRvdGFsV2VpZ2h0ID0gd2VpZ2h0cy5yZWR1Y2UoKHN1bSwgdykgPT4gc3VtICsgdywgMCk7XG5cbiAgY29uc3QgaW50ZXJuYWxLZXlzID0gbmV3IFNldDxzdHJpbmc+KCk7XG4gIGJsYW5rZXRzLmZvckVhY2goKGJsYW5rZXQpID0+IHtcbiAgICBPYmplY3Qua2V5cyhibGFua2V0LmludGVybmFsU3RhdGVzKS5mb3JFYWNoKChrZXkpID0+IGludGVybmFsS2V5cy5hZGQoa2V5KSk7XG4gIH0pO1xuXG4gIGludGVybmFsS2V5cy5mb3JFYWNoKChrZXkpID0+IHtcbiAgICBsZXQgd2VpZ2h0ZWRTdW0gPSAwO1xuICAgIGxldCB3ZWlnaHRTdW0gPSAwO1xuXG4gICAgYmxhbmtldHMuZm9yRWFjaCgoYmxhbmtldCwgaSkgPT4ge1xuICAgICAgaWYgKGJsYW5rZXQuaW50ZXJuYWxTdGF0ZXNba2V5XSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHdlaWdodGVkU3VtICs9IGJsYW5rZXQuaW50ZXJuYWxTdGF0ZXNba2V5XSAqIHdlaWdodHNbaV07XG4gICAgICAgIHdlaWdodFN1bSArPSB3ZWlnaHRzW2ldO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgaWYgKHdlaWdodFN1bSA+IDApIHtcbiAgICAgIG1lcmdlZC5pbnRlcm5hbFN0YXRlc1trZXldID0gd2VpZ2h0ZWRTdW0gLyB3ZWlnaHRTdW07XG4gICAgfVxuICB9KTtcblxuICAvLyBDYWxjdWxhdGUgZnJlZSBlbmVyZ3kgZm9yIG1lcmdlZCBibGFua2V0XG4gIG1lcmdlZC5mcmVlRW5lcmd5ID0gY2FsY3VsYXRlRnJlZUVuZXJneShtZXJnZWQpO1xuXG4gIHJldHVybiBtZXJnZWQ7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgVmFsaWRhdGlvblJlc3VsdCB7XG4gIGlzVmFsaWQ6IGJvb2xlYW47XG4gIGVycm9yczogc3RyaW5nW107XG4gIHdhcm5pbmdzOiBzdHJpbmdbXTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlTWFya292QmxhbmtldChcbiAgYmxhbmtldDogUGFydGlhbDxNYXJrb3ZCbGFua2V0Pixcbik6IFZhbGlkYXRpb25SZXN1bHQge1xuICBjb25zdCBlcnJvcnM6IHN0cmluZ1tdID0gW107XG4gIGNvbnN0IHdhcm5pbmdzOiBzdHJpbmdbXSA9IFtdO1xuXG4gIC8vIENoZWNrIHJlcXVpcmVkIGZpZWxkc1xuICBpZiAoIWJsYW5rZXQuaWQpIGVycm9ycy5wdXNoKFwiTWlzc2luZyByZXF1aXJlZCBmaWVsZDogaWRcIik7XG4gIGlmICghYmxhbmtldC5hZ2VudElkKSBlcnJvcnMucHVzaChcIk1pc3NpbmcgcmVxdWlyZWQgZmllbGQ6IGFnZW50SWRcIik7XG4gIGlmICghYmxhbmtldC5zZW5zb3JTdGF0ZXMpXG4gICAgZXJyb3JzLnB1c2goXCJNaXNzaW5nIHJlcXVpcmVkIGZpZWxkOiBzZW5zb3JTdGF0ZXNcIik7XG4gIGlmICghYmxhbmtldC5hY3RpdmVTdGF0ZXMpXG4gICAgZXJyb3JzLnB1c2goXCJNaXNzaW5nIHJlcXVpcmVkIGZpZWxkOiBhY3RpdmVTdGF0ZXNcIik7XG4gIGlmICghYmxhbmtldC5pbnRlcm5hbFN0YXRlcylcbiAgICBlcnJvcnMucHVzaChcIk1pc3NpbmcgcmVxdWlyZWQgZmllbGQ6IGludGVybmFsU3RhdGVzXCIpO1xuICBpZiAoIWJsYW5rZXQuZXh0ZXJuYWxTdGF0ZXMpXG4gICAgZXJyb3JzLnB1c2goXCJNaXNzaW5nIHJlcXVpcmVkIGZpZWxkOiBleHRlcm5hbFN0YXRlc1wiKTtcblxuICAvLyBWYWxpZGF0ZSBzdGF0ZSByYW5nZXNcbiAgaWYgKGJsYW5rZXQuaW50ZXJuYWxTdGF0ZXMpIHtcbiAgICBPYmplY3QuZW50cmllcyhibGFua2V0LmludGVybmFsU3RhdGVzKS5mb3JFYWNoKChba2V5LCB2YWx1ZV0pID0+IHtcbiAgICAgIGlmICh2YWx1ZSA8IDAgfHwgdmFsdWUgPiAxKSB7XG4gICAgICAgIGVycm9ycy5wdXNoKGBJbnRlcm5hbCBzdGF0ZSAnJHtrZXl9JyBvdXQgb2YgcmFuZ2U6ICR7dmFsdWV9YCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBpZiAoYmxhbmtldC5hY3RpdmVTdGF0ZXMpIHtcbiAgICBPYmplY3QuZW50cmllcyhibGFua2V0LmFjdGl2ZVN0YXRlcykuZm9yRWFjaCgoW2tleSwgc3RhdGVdKSA9PiB7XG4gICAgICBpZiAoc3RhdGUudmFsdWUgPCAwIHx8IHN0YXRlLnZhbHVlID4gMSkge1xuICAgICAgICBlcnJvcnMucHVzaChgQWN0aXZlIHN0YXRlICcke2tleX0nIHZhbHVlIG91dCBvZiByYW5nZTogJHtzdGF0ZS52YWx1ZX1gKTtcbiAgICAgIH1cbiAgICAgIGlmIChzdGF0ZS5lbmVyZ3kgPCAwKSB7XG4gICAgICAgIGVycm9ycy5wdXNoKFxuICAgICAgICAgIGBBY3RpdmUgc3RhdGUgJyR7a2V5fScgZW5lcmd5IGNhbm5vdCBiZSBuZWdhdGl2ZTogJHtzdGF0ZS5lbmVyZ3l9YCxcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIC8vIENoZWNrIGVuZXJneSBjb25zZXJ2YXRpb25cbiAgICBjb25zdCB0b3RhbEFjdGl2ZVZhbHVlID0gT2JqZWN0LnZhbHVlcyhibGFua2V0LmFjdGl2ZVN0YXRlcykucmVkdWNlKFxuICAgICAgKHN1bSwgc3RhdGUpID0+IHN1bSArIHN0YXRlLnZhbHVlLFxuICAgICAgMCxcbiAgICApO1xuICAgIGNvbnN0IHRvdGFsRW5lcmd5ID0gT2JqZWN0LnZhbHVlcyhibGFua2V0LmFjdGl2ZVN0YXRlcykucmVkdWNlKFxuICAgICAgKHN1bSwgc3RhdGUpID0+IHN1bSArIHN0YXRlLmVuZXJneSxcbiAgICAgIDAsXG4gICAgKTtcblxuICAgIGlmICh0b3RhbEFjdGl2ZVZhbHVlID4gMSAmJiB0b3RhbEVuZXJneSA8IDAuMSkge1xuICAgICAgd2FybmluZ3MucHVzaChcbiAgICAgICAgXCJFbmVyZ3kgY29uc2VydmF0aW9uIHdhcm5pbmc6IEhpZ2ggYWN0aXZpdHkgd2l0aCBsb3cgZW5lcmd5XCIsXG4gICAgICApO1xuICAgIH1cbiAgfVxuXG4gIGlmIChibGFua2V0LnNlbnNvclN0YXRlcykge1xuICAgIE9iamVjdC5lbnRyaWVzKGJsYW5rZXQuc2Vuc29yU3RhdGVzKS5mb3JFYWNoKChba2V5LCBzdGF0ZV0pID0+IHtcbiAgICAgIGlmIChzdGF0ZS52YWx1ZSA8IDAgfHwgc3RhdGUudmFsdWUgPiAxKSB7XG4gICAgICAgIGVycm9ycy5wdXNoKGBTZW5zb3Igc3RhdGUgJyR7a2V5fScgdmFsdWUgb3V0IG9mIHJhbmdlOiAke3N0YXRlLnZhbHVlfWApO1xuICAgICAgfVxuICAgICAgaWYgKHN0YXRlLmNvbmZpZGVuY2UgPCAwIHx8IHN0YXRlLmNvbmZpZGVuY2UgPiAxKSB7XG4gICAgICAgIGVycm9ycy5wdXNoKFxuICAgICAgICAgIGBTZW5zb3Igc3RhdGUgJyR7a2V5fScgY29uZmlkZW5jZSBvdXQgb2YgcmFuZ2U6ICR7c3RhdGUuY29uZmlkZW5jZX1gLFxuICAgICAgICApO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBpc1ZhbGlkOiBlcnJvcnMubGVuZ3RoID09PSAwLFxuICAgIGVycm9ycyxcbiAgICB3YXJuaW5ncyxcbiAgfTtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0dBS0M7O0FBQUE7QUFBQSxTQUFBQSxlQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VBQUEsSUFBQUMsWUFBQTtJQUFBTCxJQUFBO0lBQUFNLFlBQUE7TUFBQTtRQUFBQyxLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7SUFBQTtJQUFBRSxLQUFBO01BQUE7UUFBQUMsSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO0lBQUE7SUFBQU8sU0FBQTtNQUFBO1FBQUFELEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtJQUFBO0lBQUFXLENBQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO01BQUE7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
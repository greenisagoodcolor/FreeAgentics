{"version":3,"names":["cov_2ck5ml71ax","actualCoverage","s","AuthClient","f","PERMISSIONS","RequirePermission","authClient","requireAuth","useAuth","UserRole","b","agent","create","read","update","delete","export","coalition","business_data","system","users","metrics","logs","backup","constructor","baseUrl","user","getCurrentUser","response","fetch","method","credentials","headers","status","ok","Error","data","json","error","console","hasPermission","resource","action","isActive","resourcePermissions","requiredRoles","includes","role","authState","setAuthState","_react","useState","isAuthenticated","isLoading","checkAuth","useCallback","prev","message","useEffect","sessionId","_sessionmanagement","getSessionId","_navigation","redirect","body","JSON","stringify","children","fallback","_jsxruntime","jsx","Fragment"],"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/lib/auth/route-protection.tsx"],"sourcesContent":["\"use client\";\n\nimport { useCallback, useEffect, useState } from \"react\";\nimport { redirect } from \"next/navigation\";\nimport { getSessionId } from \"../session-management\";\n\n// User roles following ADR-011\nexport enum UserRole {\n  ADMIN = \"admin\",\n  DEVELOPER = \"developer\",\n  OBSERVER = \"observer\",\n  SERVICE = \"service\",\n}\n\n// User interface\nexport interface User {\n  id: string;\n  email: string;\n  name: string;\n  role: UserRole;\n  tenantId: string;\n  agentLimit: number;\n  coalitionLimit: number;\n  isActive: boolean;\n  lastLoginAt?: Date;\n}\n\n// Authentication state\nexport interface AuthState {\n  user: User | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  error: string | null;\n}\n\n// Permission definitions following ADR-011\nexport const PERMISSIONS = {\n  agent: {\n    create: [UserRole.ADMIN, UserRole.DEVELOPER],\n    read: [UserRole.ADMIN, UserRole.DEVELOPER, UserRole.OBSERVER],\n    update: [UserRole.ADMIN, UserRole.DEVELOPER],\n    delete: [UserRole.ADMIN],\n    export: [UserRole.ADMIN, UserRole.DEVELOPER],\n  },\n  coalition: {\n    create: [UserRole.ADMIN, UserRole.DEVELOPER],\n    read: [UserRole.ADMIN, UserRole.DEVELOPER, UserRole.OBSERVER],\n    update: [UserRole.ADMIN, UserRole.DEVELOPER],\n    delete: [UserRole.ADMIN],\n    business_data: [UserRole.ADMIN],\n  },\n  system: {\n    users: [UserRole.ADMIN],\n    metrics: [UserRole.ADMIN, UserRole.DEVELOPER],\n    logs: [UserRole.ADMIN],\n    backup: [UserRole.ADMIN],\n  },\n} as const;\n\n// Authentication client\nexport class AuthClient {\n  private baseUrl: string;\n  private user: User | null = null;\n\n  constructor(baseUrl: string = \"/api/auth\") {\n    this.baseUrl = baseUrl;\n  }\n\n  async getCurrentUser(): Promise<User | null> {\n    try {\n      const response = await fetch(`${this.baseUrl}/me`, {\n        method: \"GET\",\n        credentials: \"include\",\n        headers: { \"Content-Type\": \"application/json\" },\n      });\n\n      if (response.status === 401) return null;\n      if (!response.ok) throw new Error(`HTTP ${response.status}`);\n\n      const data = await response.json();\n      this.user = data.user;\n      return this.user;\n    } catch (error) {\n      console.error(\"Failed to get current user:\", error);\n      return null;\n    }\n  }\n\n  hasPermission(\n    user: User | null,\n    resource: keyof typeof PERMISSIONS,\n    action: string,\n  ): boolean {\n    if (!user || !user.isActive) return false;\n    const resourcePermissions = PERMISSIONS[resource] as unknown as Record<\n      string,\n      UserRole[]\n    >;\n    const requiredRoles = resourcePermissions[action];\n    if (!requiredRoles) return false;\n    return requiredRoles.includes(user.role);\n  }\n}\n\nexport const authClient = new AuthClient();\n\n// Client-side authentication guard hook\nexport function useAuth() {\n  const [authState, setAuthState] = useState<AuthState>({\n    user: null,\n    isAuthenticated: false,\n    isLoading: true,\n    error: null,\n  });\n\n  const checkAuth = useCallback(async () => {\n    try {\n      setAuthState((prev) => ({ ...prev, isLoading: true, error: null }));\n      const user = await authClient.getCurrentUser();\n      setAuthState({\n        user,\n        isAuthenticated: !!user,\n        isLoading: false,\n        error: null,\n      });\n    } catch (error) {\n      setAuthState({\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: error instanceof Error ? error.message : \"Authentication failed\",\n      });\n    }\n  }, []);\n\n  const hasPermission = useCallback(\n    (resource: keyof typeof PERMISSIONS, action: string) => {\n      return authClient.hasPermission(authState.user, resource, action);\n    },\n    [authState.user],\n  );\n\n  useEffect(() => {\n    checkAuth();\n  }, [checkAuth]);\n\n  return { ...authState, hasPermission };\n}\n\n// Route protection guard for pages\nexport async function requireAuth(requiredRoles?: UserRole[]): Promise<User> {\n  const sessionId = getSessionId(\"auth\");\n  if (!sessionId) redirect(\"/login\");\n\n  try {\n    const response = await fetch(\"/api/auth/validate\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ sessionId }),\n    });\n\n    if (!response.ok) redirect(\"/login\");\n\n    const data = await response.json();\n    const user = data.user;\n\n    if (!user || !user.isActive) redirect(\"/login\");\n    if (requiredRoles && !requiredRoles.includes(user.role))\n      redirect(\"/unauthorized\");\n\n    return user;\n  } catch {\n    redirect(\"/login\");\n  }\n}\n\n// Permission-based component wrapper\ninterface RequirePermissionProps {\n  resource: keyof typeof PERMISSIONS;\n  action: string;\n  children: React.ReactNode;\n  fallback?: React.ReactNode;\n}\n\nexport function RequirePermission({\n  resource,\n  action,\n  children,\n  fallback = null,\n}: RequirePermissionProps) {\n  const { hasPermission } = useAuth();\n  return hasPermission(resource, action) ? <>{children}</> : <>{fallback}</>;\n}\n"],"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","ignoreList":[]}
4db198fcb93503785200e6d4586ca15f
"use client";
"use strict";

/* istanbul ignore next */
function cov_1ammevkjvm() {
  var path = "/Users/matthewmoroney/builds/FreeAgentics/web/components/markov-blanket-visualization.tsx";
  var hash = "93a275befc65b1553e4915df623c999b4cf50b42";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewmoroney/builds/FreeAgentics/web/components/markov-blanket-visualization.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 42
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 24
        }
      },
      "6": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 48
        }
      },
      "7": {
        start: {
          line: 21,
          column: 29
        },
        end: {
          line: 21,
          column: 72
        }
      },
      "8": {
        start: {
          line: 22,
          column: 26
        },
        end: {
          line: 22,
          column: 66
        }
      },
      "9": {
        start: {
          line: 23,
          column: 14
        },
        end: {
          line: 23,
          column: 34
        }
      },
      "10": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 38
        }
      },
      "11": {
        start: {
          line: 25,
          column: 15
        },
        end: {
          line: 25,
          column: 36
        }
      },
      "12": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 38
        }
      },
      "13": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 38
        }
      },
      "14": {
        start: {
          line: 28,
          column: 15
        },
        end: {
          line: 28,
          column: 36
        }
      },
      "15": {
        start: {
          line: 29,
          column: 15
        },
        end: {
          line: 29,
          column: 36
        }
      },
      "16": {
        start: {
          line: 30,
          column: 35
        },
        end: {
          line: 30,
          column: 80
        }
      },
      "17": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 51
        }
      },
      "18": {
        start: {
          line: 32,
          column: 39
        },
        end: {
          line: 32,
          column: 51
        }
      },
      "19": {
        start: {
          line: 33,
          column: 28
        },
        end: {
          line: 33,
          column: 41
        }
      },
      "20": {
        start: {
          line: 34,
          column: 27
        },
        end: {
          line: 34,
          column: 40
        }
      },
      "21": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 37,
          column: 20
        }
      },
      "22": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 66
        }
      },
      "23": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "24": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 19
        }
      },
      "25": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "26": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 46,
          column: 10
        }
      },
      "27": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 48,
          column: 53
        }
      },
      "28": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "29": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 30
        }
      },
      "30": {
        start: {
          line: 52,
          column: 17
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "31": {
        start: {
          line: 55,
          column: 32
        },
        end: {
          line: 55,
          column: 88
        }
      },
      "32": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 65,
          column: 5
        }
      },
      "33": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "34": {
        start: {
          line: 58,
          column: 23
        },
        end: {
          line: 58,
          column: 95
        }
      },
      "35": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 63,
          column: 13
        }
      },
      "36": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 60,
          column: 57
        }
      },
      "37": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 62,
          column: 39
        }
      },
      "38": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 66,
          column: 25
        }
      },
      "39": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 69,
          column: 5
        }
      },
      "40": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 31
        }
      },
      "41": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 18
        }
      },
      "42": {
        start: {
          line: 72,
          column: 35
        },
        end: {
          line: 609,
          column: 1
        }
      },
      "43": {
        start: {
          line: 73,
          column: 19
        },
        end: {
          line: 73,
          column: 43
        }
      },
      "44": {
        start: {
          line: 74,
          column: 54
        },
        end: {
          line: 74,
          column: 80
        }
      },
      "45": {
        start: {
          line: 75,
          column: 48
        },
        end: {
          line: 77,
          column: 6
        }
      },
      "46": {
        start: {
          line: 78,
          column: 48
        },
        end: {
          line: 78,
          column: 74
        }
      },
      "47": {
        start: {
          line: 79,
          column: 48
        },
        end: {
          line: 81,
          column: 6
        }
      },
      "48": {
        start: {
          line: 82,
          column: 38
        },
        end: {
          line: 84,
          column: 6
        }
      },
      "49": {
        start: {
          line: 85,
          column: 40
        },
        end: {
          line: 85,
          column: 64
        }
      },
      "50": {
        start: {
          line: 87,
          column: 133
        },
        end: {
          line: 108,
          column: 6
        }
      },
      "51": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 58
        }
      },
      "52": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 102,
          column: 13
        }
      },
      "53": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 101,
          column: 54
        }
      },
      "54": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 64
        }
      },
      "55": {
        start: {
          line: 110,
          column: 56
        },
        end: {
          line: 110,
          column: 92
        }
      },
      "56": {
        start: {
          line: 111,
          column: 50
        },
        end: {
          line: 111,
          column: 83
        }
      },
      "57": {
        start: {
          line: 112,
          column: 52
        },
        end: {
          line: 112,
          column: 91
        }
      },
      "58": {
        start: {
          line: 113,
          column: 56
        },
        end: {
          line: 113,
          column: 100
        }
      },
      "59": {
        start: {
          line: 115,
          column: 38
        },
        end: {
          line: 152,
          column: 6
        }
      },
      "60": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 123,
          column: 9
        }
      },
      "61": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 122,
          column: 15
        }
      },
      "62": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 135,
          column: 9
        }
      },
      "63": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 134,
          column: 15
        }
      },
      "64": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 148,
          column: 9
        }
      },
      "65": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 147,
          column: 15
        }
      },
      "66": {
        start: {
          line: 154,
          column: 23
        },
        end: {
          line: 154,
          column: 91
        }
      },
      "67": {
        start: {
          line: 155,
          column: 20
        },
        end: {
          line: 155,
          column: 82
        }
      },
      "68": {
        start: {
          line: 156,
          column: 26
        },
        end: {
          line: 156,
          column: 95
        }
      },
      "69": {
        start: {
          line: 157,
          column: 31
        },
        end: {
          line: 157,
          column: 107
        }
      },
      "70": {
        start: {
          line: 158,
          column: 23
        },
        end: {
          line: 158,
          column: 91
        }
      },
      "71": {
        start: {
          line: 160,
          column: 4
        },
        end: {
          line: 177,
          column: 7
        }
      },
      "72": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 163,
          column: 9
        }
      },
      "73": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 162,
          column: 22
        }
      },
      "74": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 168,
          column: 9
        }
      },
      "75": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 35
        }
      },
      "76": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 30
        }
      },
      "77": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 40
        }
      },
      "78": {
        start: {
          line: 179,
          column: 4
        },
        end: {
          line: 189,
          column: 7
        }
      },
      "79": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 185,
          column: 9
        }
      },
      "80": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 184,
          column: 19
        }
      },
      "81": {
        start: {
          line: 181,
          column: 34
        },
        end: {
          line: 184,
          column: 17
        }
      },
      "82": {
        start: {
          line: 191,
          column: 4
        },
        end: {
          line: 356,
          column: 7
        }
      },
      "83": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 51
        }
      },
      "84": {
        start: {
          line: 192,
          column: 44
        },
        end: {
          line: 192,
          column: 51
        }
      },
      "85": {
        start: {
          line: 193,
          column: 20
        },
        end: {
          line: 193,
          column: 46
        }
      },
      "86": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 194,
          column: 36
        }
      },
      "87": {
        start: {
          line: 195,
          column: 22
        },
        end: {
          line: 195,
          column: 25
        }
      },
      "88": {
        start: {
          line: 196,
          column: 23
        },
        end: {
          line: 196,
          column: 26
        }
      },
      "89": {
        start: {
          line: 197,
          column: 23
        },
        end: {
          line: 202,
          column: 9
        }
      },
      "90": {
        start: {
          line: 203,
          column: 27
        },
        end: {
          line: 203,
          column: 61
        }
      },
      "91": {
        start: {
          line: 204,
          column: 28
        },
        end: {
          line: 204,
          column: 63
        }
      },
      "92": {
        start: {
          line: 205,
          column: 23
        },
        end: {
          line: 205,
          column: 60
        }
      },
      "93": {
        start: {
          line: 206,
          column: 23
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "94": {
        start: {
          line: 211,
          column: 18
        },
        end: {
          line: 211,
          column: 89
        }
      },
      "95": {
        start: {
          line: 213,
          column: 32
        },
        end: {
          line: 246,
          column: 9
        }
      },
      "96": {
        start: {
          line: 248,
          column: 25
        },
        end: {
          line: 248,
          column: 98
        }
      },
      "97": {
        start: {
          line: 248,
          column: 62
        },
        end: {
          line: 248,
          column: 92
        }
      },
      "98": {
        start: {
          line: 249,
          column: 28
        },
        end: {
          line: 255,
          column: 10
        }
      },
      "99": {
        start: {
          line: 257,
          column: 27
        },
        end: {
          line: 257,
          column: 28
        }
      },
      "100": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 263,
          column: 9
        }
      },
      "101": {
        start: {
          line: 258,
          column: 20
        },
        end: {
          line: 258,
          column: 21
        }
      },
      "102": {
        start: {
          line: 259,
          column: 31
        },
        end: {
          line: 259,
          column: 60
        }
      },
      "103": {
        start: {
          line: 260,
          column: 12
        },
        end: {
          line: 260,
          column: 173
        }
      },
      "104": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 262,
          column: 189
        }
      },
      "105": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 274,
          column: 11
        }
      },
      "106": {
        start: {
          line: 266,
          column: 22
        },
        end: {
          line: 266,
          column: 76
        }
      },
      "107": {
        start: {
          line: 267,
          column: 22
        },
        end: {
          line: 267,
          column: 76
        }
      },
      "108": {
        start: {
          line: 269,
          column: 12
        },
        end: {
          line: 269,
          column: 135
        }
      },
      "109": {
        start: {
          line: 271,
          column: 27
        },
        end: {
          line: 271,
          column: 81
        }
      },
      "110": {
        start: {
          line: 272,
          column: 27
        },
        end: {
          line: 272,
          column: 81
        }
      },
      "111": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 273,
          column: 236
        }
      },
      "112": {
        start: {
          line: 276,
          column: 29
        },
        end: {
          line: 276,
          column: 202
        }
      },
      "113": {
        start: {
          line: 276,
          column: 47
        },
        end: {
          line: 276,
          column: 105
        }
      },
      "114": {
        start: {
          line: 276,
          column: 114
        },
        end: {
          line: 276,
          column: 172
        }
      },
      "115": {
        start: {
          line: 278,
          column: 33
        },
        end: {
          line: 278,
          column: 62
        }
      },
      "116": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 281,
          column: 9
        }
      },
      "117": {
        start: {
          line: 280,
          column: 12
        },
        end: {
          line: 280,
          column: 178
        }
      },
      "118": {
        start: {
          line: 283,
          column: 28
        },
        end: {
          line: 283,
          column: 193
        }
      },
      "119": {
        start: {
          line: 283,
          column: 46
        },
        end: {
          line: 283,
          column: 100
        }
      },
      "120": {
        start: {
          line: 283,
          column: 109
        },
        end: {
          line: 283,
          column: 163
        }
      },
      "121": {
        start: {
          line: 285,
          column: 32
        },
        end: {
          line: 285,
          column: 60
        }
      },
      "122": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 288,
          column: 9
        }
      },
      "123": {
        start: {
          line: 287,
          column: 12
        },
        end: {
          line: 287,
          column: 146
        }
      },
      "124": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 329,
          column: 9
        }
      },
      "125": {
        start: {
          line: 291,
          column: 30
        },
        end: {
          line: 308,
          column: 13
        }
      },
      "126": {
        start: {
          line: 310,
          column: 12
        },
        end: {
          line: 314,
          column: 15
        }
      },
      "127": {
        start: {
          line: 311,
          column: 26
        },
        end: {
          line: 311,
          column: 80
        }
      },
      "128": {
        start: {
          line: 312,
          column: 26
        },
        end: {
          line: 312,
          column: 80
        }
      },
      "129": {
        start: {
          line: 313,
          column: 16
        },
        end: {
          line: 313,
          column: 269
        }
      },
      "130": {
        start: {
          line: 313,
          column: 240
        },
        end: {
          line: 313,
          column: 267
        }
      },
      "131": {
        start: {
          line: 316,
          column: 12
        },
        end: {
          line: 328,
          column: 13
        }
      },
      "132": {
        start: {
          line: 317,
          column: 34
        },
        end: {
          line: 323,
          column: 43
        }
      },
      "133": {
        start: {
          line: 318,
          column: 33
        },
        end: {
          line: 318,
          column: 312
        }
      },
      "134": {
        start: {
          line: 319,
          column: 20
        },
        end: {
          line: 319,
          column: 32
        }
      },
      "135": {
        start: {
          line: 321,
          column: 33
        },
        end: {
          line: 321,
          column: 312
        }
      },
      "136": {
        start: {
          line: 322,
          column: 20
        },
        end: {
          line: 322,
          column: 32
        }
      },
      "137": {
        start: {
          line: 324,
          column: 38
        },
        end: {
          line: 324,
          column: 59
        }
      },
      "138": {
        start: {
          line: 325,
          column: 16
        },
        end: {
          line: 327,
          column: 17
        }
      },
      "139": {
        start: {
          line: 326,
          column: 20
        },
        end: {
          line: 326,
          column: 186
        }
      },
      "140": {
        start: {
          line: 331,
          column: 8
        },
        end: {
          line: 339,
          column: 9
        }
      },
      "141": {
        start: {
          line: 332,
          column: 37
        },
        end: {
          line: 332,
          column: 86
        }
      },
      "142": {
        start: {
          line: 332,
          column: 60
        },
        end: {
          line: 332,
          column: 75
        }
      },
      "143": {
        start: {
          line: 333,
          column: 12
        },
        end: {
          line: 338,
          column: 15
        }
      },
      "144": {
        start: {
          line: 334,
          column: 30
        },
        end: {
          line: 334,
          column: 75
        }
      },
      "145": {
        start: {
          line: 335,
          column: 26
        },
        end: {
          line: 335,
          column: 57
        }
      },
      "146": {
        start: {
          line: 336,
          column: 26
        },
        end: {
          line: 336,
          column: 57
        }
      },
      "147": {
        start: {
          line: 337,
          column: 16
        },
        end: {
          line: 337,
          column: 284
        }
      },
      "148": {
        start: {
          line: 341,
          column: 8
        },
        end: {
          line: 345,
          column: 11
        }
      },
      "149": {
        start: {
          line: 342,
          column: 12
        },
        end: {
          line: 342,
          column: 42
        }
      },
      "150": {
        start: {
          line: 344,
          column: 12
        },
        end: {
          line: 344,
          column: 42
        }
      },
      "151": {
        start: {
          line: 358,
          column: 34
        },
        end: {
          line: 364,
          column: 6
        }
      },
      "152": {
        start: {
          line: 359,
          column: 8
        },
        end: {
          line: 361,
          column: 9
        }
      },
      "153": {
        start: {
          line: 360,
          column: 12
        },
        end: {
          line: 360,
          column: 56
        }
      },
      "154": {
        start: {
          line: 366,
          column: 39
        },
        end: {
          line: 372,
          column: 6
        }
      },
      "155": {
        start: {
          line: 367,
          column: 8
        },
        end: {
          line: 369,
          column: 9
        }
      },
      "156": {
        start: {
          line: 368,
          column: 12
        },
        end: {
          line: 368,
          column: 48
        }
      },
      "157": {
        start: {
          line: 373,
          column: 37
        },
        end: {
          line: 373,
          column: 76
        }
      },
      "158": {
        start: {
          line: 373,
          column: 60
        },
        end: {
          line: 373,
          column: 75
        }
      },
      "159": {
        start: {
          line: 374,
          column: 31
        },
        end: {
          line: 374,
          column: 86
        }
      },
      "160": {
        start: {
          line: 374,
          column: 54
        },
        end: {
          line: 374,
          column: 85
        }
      },
      "161": {
        start: {
          line: 375,
          column: 4
        },
        end: {
          line: 608,
          column: 7
        }
      },
      "162": {
        start: {
          line: 569,
          column: 122
        },
        end: {
          line: 598,
          column: 70
        }
      },
      "163": {
        start: {
          line: 593,
          column: 77
        },
        end: {
          line: 593,
          column: 123
        }
      },
      "164": {
        start: {
          line: 610,
          column: 17
        },
        end: {
          line: 610,
          column: 43
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 32
          },
          end: {
            line: 13,
            column: 33
          }
        },
        loc: {
          start: {
            line: 13,
            column: 43
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 13
          },
          end: {
            line: 16,
            column: 14
          }
        },
        loc: {
          start: {
            line: 16,
            column: 24
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 31,
            column: 9
          },
          end: {
            line: 31,
            column: 33
          }
        },
        loc: {
          start: {
            line: 31,
            column: 47
          },
          end: {
            line: 38,
            column: 1
          }
        },
        line: 31
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 35,
            column: 39
          },
          end: {
            line: 35,
            column: 40
          }
        },
        loc: {
          start: {
            line: 35,
            column: 61
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 35
      },
      "5": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 39,
            column: 9
          },
          end: {
            line: 39,
            column: 34
          }
        },
        loc: {
          start: {
            line: 39,
            column: 53
          },
          end: {
            line: 71,
            column: 1
          }
        },
        line: 39
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 72,
            column: 35
          },
          end: {
            line: 72,
            column: 36
          }
        },
        loc: {
          start: {
            line: 72,
            column: 324
          },
          end: {
            line: 609,
            column: 1
          }
        },
        line: 72
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 97,
            column: 17
          },
          end: {
            line: 97,
            column: 18
          }
        },
        loc: {
          start: {
            line: 97,
            column: 26
          },
          end: {
            line: 103,
            column: 9
          }
        },
        line: 97
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 104,
            column: 21
          },
          end: {
            line: 104,
            column: 22
          }
        },
        loc: {
          start: {
            line: 104,
            column: 34
          },
          end: {
            line: 107,
            column: 9
          }
        },
        line: 104
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 115,
            column: 62
          },
          end: {
            line: 115,
            column: 63
          }
        },
        loc: {
          start: {
            line: 115,
            column: 79
          },
          end: {
            line: 149,
            column: 5
          }
        },
        line: 115
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 160,
            column: 26
          },
          end: {
            line: 160,
            column: 27
          }
        },
        loc: {
          start: {
            line: 160,
            column: 30
          },
          end: {
            line: 169,
            column: 5
          }
        },
        line: 160
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 179,
            column: 26
          },
          end: {
            line: 179,
            column: 27
          }
        },
        loc: {
          start: {
            line: 179,
            column: 30
          },
          end: {
            line: 186,
            column: 5
          }
        },
        line: 179
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 181,
            column: 26
          },
          end: {
            line: 181,
            column: 27
          }
        },
        loc: {
          start: {
            line: 181,
            column: 34
          },
          end: {
            line: 184,
            column: 17
          }
        },
        line: 181
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 191,
            column: 26
          },
          end: {
            line: 191,
            column: 27
          }
        },
        loc: {
          start: {
            line: 191,
            column: 30
          },
          end: {
            line: 346,
            column: 5
          }
        },
        line: 191
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 248,
            column: 57
          },
          end: {
            line: 248,
            column: 58
          }
        },
        loc: {
          start: {
            line: 248,
            column: 62
          },
          end: {
            line: 248,
            column: 92
          }
        },
        line: 248
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 265,
            column: 32
          },
          end: {
            line: 265,
            column: 33
          }
        },
        loc: {
          start: {
            line: 265,
            column: 45
          },
          end: {
            line: 274,
            column: 9
          }
        },
        line: 265
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 276,
            column: 42
          },
          end: {
            line: 276,
            column: 43
          }
        },
        loc: {
          start: {
            line: 276,
            column: 47
          },
          end: {
            line: 276,
            column: 105
          }
        },
        line: 276
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 276,
            column: 109
          },
          end: {
            line: 276,
            column: 110
          }
        },
        loc: {
          start: {
            line: 276,
            column: 114
          },
          end: {
            line: 276,
            column: 172
          }
        },
        line: 276
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 283,
            column: 41
          },
          end: {
            line: 283,
            column: 42
          }
        },
        loc: {
          start: {
            line: 283,
            column: 46
          },
          end: {
            line: 283,
            column: 100
          }
        },
        line: 283
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 283,
            column: 104
          },
          end: {
            line: 283,
            column: 105
          }
        },
        loc: {
          start: {
            line: 283,
            column: 109
          },
          end: {
            line: 283,
            column: 163
          }
        },
        line: 283
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 310,
            column: 30
          },
          end: {
            line: 310,
            column: 31
          }
        },
        loc: {
          start: {
            line: 310,
            column: 35
          },
          end: {
            line: 314,
            column: 13
          }
        },
        line: 310
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 313,
            column: 236
          },
          end: {
            line: 313,
            column: 237
          }
        },
        loc: {
          start: {
            line: 313,
            column: 240
          },
          end: {
            line: 313,
            column: 267
          }
        },
        line: 313
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 317,
            column: 47
          },
          end: {
            line: 317,
            column: 48
          }
        },
        loc: {
          start: {
            line: 317,
            column: 52
          },
          end: {
            line: 320,
            column: 17
          }
        },
        line: 317
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 320,
            column: 21
          },
          end: {
            line: 320,
            column: 22
          }
        },
        loc: {
          start: {
            line: 320,
            column: 26
          },
          end: {
            line: 323,
            column: 17
          }
        },
        line: 320
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 332,
            column: 55
          },
          end: {
            line: 332,
            column: 56
          }
        },
        loc: {
          start: {
            line: 332,
            column: 60
          },
          end: {
            line: 332,
            column: 75
          }
        },
        line: 332
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 333,
            column: 37
          },
          end: {
            line: 333,
            column: 38
          }
        },
        loc: {
          start: {
            line: 333,
            column: 57
          },
          end: {
            line: 338,
            column: 13
          }
        },
        line: 333
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 341,
            column: 46
          },
          end: {
            line: 341,
            column: 47
          }
        },
        loc: {
          start: {
            line: 341,
            column: 65
          },
          end: {
            line: 343,
            column: 9
          }
        },
        line: 341
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 343,
            column: 26
          },
          end: {
            line: 343,
            column: 27
          }
        },
        loc: {
          start: {
            line: 343,
            column: 45
          },
          end: {
            line: 345,
            column: 9
          }
        },
        line: 343
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 358,
            column: 58
          },
          end: {
            line: 358,
            column: 59
          }
        },
        loc: {
          start: {
            line: 358,
            column: 78
          },
          end: {
            line: 362,
            column: 5
          }
        },
        line: 358
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 366,
            column: 63
          },
          end: {
            line: 366,
            column: 64
          }
        },
        loc: {
          start: {
            line: 366,
            column: 78
          },
          end: {
            line: 370,
            column: 5
          }
        },
        line: 366
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 373,
            column: 55
          },
          end: {
            line: 373,
            column: 56
          }
        },
        loc: {
          start: {
            line: 373,
            column: 60
          },
          end: {
            line: 373,
            column: 75
          }
        },
        line: 373
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 374,
            column: 49
          },
          end: {
            line: 374,
            column: 50
          }
        },
        loc: {
          start: {
            line: 374,
            column: 54
          },
          end: {
            line: 374,
            column: 85
          }
        },
        line: 374
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 569,
            column: 95
          },
          end: {
            line: 569,
            column: 96
          }
        },
        loc: {
          start: {
            line: 569,
            column: 122
          },
          end: {
            line: 598,
            column: 70
          }
        },
        line: 569
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 593,
            column: 73
          },
          end: {
            line: 593,
            column: 74
          }
        },
        loc: {
          start: {
            line: 593,
            column: 77
          },
          end: {
            line: 593,
            column: 123
          }
        },
        line: 593
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 32,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 32,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "1": {
        loc: {
          start: {
            line: 36,
            column: 15
          },
          end: {
            line: 36,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 29
          },
          end: {
            line: 36,
            column: 45
          }
        }, {
          start: {
            line: 36,
            column: 48
          },
          end: {
            line: 36,
            column: 65
          }
        }],
        line: 36
      },
      "2": {
        loc: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "3": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 40,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 40,
            column: 20
          }
        }, {
          start: {
            line: 40,
            column: 24
          },
          end: {
            line: 40,
            column: 27
          }
        }, {
          start: {
            line: 40,
            column: 31
          },
          end: {
            line: 40,
            column: 45
          }
        }],
        line: 40
      },
      "4": {
        loc: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "5": {
        loc: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 43,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 43,
            column: 20
          }
        }, {
          start: {
            line: 43,
            column: 24
          },
          end: {
            line: 43,
            column: 47
          }
        }, {
          start: {
            line: 43,
            column: 51
          },
          end: {
            line: 43,
            column: 76
          }
        }],
        line: 43
      },
      "6": {
        loc: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "7": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 49,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 49,
            column: 13
          }
        }, {
          start: {
            line: 49,
            column: 17
          },
          end: {
            line: 49,
            column: 31
          }
        }],
        line: 49
      },
      "8": {
        loc: {
          start: {
            line: 55,
            column: 32
          },
          end: {
            line: 55,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 32
          },
          end: {
            line: 55,
            column: 53
          }
        }, {
          start: {
            line: 55,
            column: 57
          },
          end: {
            line: 55,
            column: 88
          }
        }],
        line: 55
      },
      "9": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "10": {
        loc: {
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 57,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 57,
            column: 29
          }
        }, {
          start: {
            line: 57,
            column: 33
          },
          end: {
            line: 57,
            column: 79
          }
        }],
        line: 57
      },
      "11": {
        loc: {
          start: {
            line: 58,
            column: 23
          },
          end: {
            line: 58,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 58,
            column: 47
          },
          end: {
            line: 58,
            column: 88
          }
        }, {
          start: {
            line: 58,
            column: 91
          },
          end: {
            line: 58,
            column: 95
          }
        }],
        line: 58
      },
      "12": {
        loc: {
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 63,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 63,
            column: 13
          }
        }, {
          start: {
            line: 61,
            column: 19
          },
          end: {
            line: 63,
            column: 13
          }
        }],
        line: 59
      },
      "13": {
        loc: {
          start: {
            line: 59,
            column: 16
          },
          end: {
            line: 59,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 16
          },
          end: {
            line: 59,
            column: 20
          }
        }, {
          start: {
            line: 59,
            column: 25
          },
          end: {
            line: 59,
            column: 33
          }
        }, {
          start: {
            line: 59,
            column: 37
          },
          end: {
            line: 59,
            column: 45
          }
        }],
        line: 59
      },
      "14": {
        loc: {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "15": {
        loc: {
          start: {
            line: 72,
            column: 203
          },
          end: {
            line: 72,
            column: 225
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 72,
            column: 221
          },
          end: {
            line: 72,
            column: 225
          }
        }],
        line: 72
      },
      "16": {
        loc: {
          start: {
            line: 72,
            column: 227
          },
          end: {
            line: 72,
            column: 248
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 72,
            column: 244
          },
          end: {
            line: 72,
            column: 248
          }
        }],
        line: 72
      },
      "17": {
        loc: {
          start: {
            line: 72,
            column: 250
          },
          end: {
            line: 72,
            column: 268
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 72,
            column: 264
          },
          end: {
            line: 72,
            column: 268
          }
        }],
        line: 72
      },
      "18": {
        loc: {
          start: {
            line: 100,
            column: 12
          },
          end: {
            line: 102,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 12
          },
          end: {
            line: 102,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "19": {
        loc: {
          start: {
            line: 100,
            column: 16
          },
          end: {
            line: 100,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 100,
            column: 16
          },
          end: {
            line: 100,
            column: 45
          }
        }, {
          start: {
            line: 100,
            column: 49
          },
          end: {
            line: 100,
            column: 59
          }
        }],
        line: 100
      },
      "20": {
        loc: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 123,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 123,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "21": {
        loc: {
          start: {
            line: 118,
            column: 36
          },
          end: {
            line: 118,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 118,
            column: 36
          },
          end: {
            line: 118,
            column: 84
          }
        }, {
          start: {
            line: 118,
            column: 88
          },
          end: {
            line: 118,
            column: 89
          }
        }],
        line: 118
      },
      "22": {
        loc: {
          start: {
            line: 119,
            column: 35
          },
          end: {
            line: 119,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 119,
            column: 35
          },
          end: {
            line: 119,
            column: 82
          }
        }, {
          start: {
            line: 119,
            column: 86
          },
          end: {
            line: 119,
            column: 87
          }
        }],
        line: 119
      },
      "23": {
        loc: {
          start: {
            line: 120,
            column: 34
          },
          end: {
            line: 120,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 34
          },
          end: {
            line: 120,
            column: 80
          }
        }, {
          start: {
            line: 120,
            column: 84
          },
          end: {
            line: 120,
            column: 85
          }
        }],
        line: 120
      },
      "24": {
        loc: {
          start: {
            line: 121,
            column: 36
          },
          end: {
            line: 121,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 121,
            column: 36
          },
          end: {
            line: 121,
            column: 84
          }
        }, {
          start: {
            line: 121,
            column: 88
          },
          end: {
            line: 121,
            column: 89
          }
        }],
        line: 121
      },
      "25": {
        loc: {
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 135,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 135,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "26": {
        loc: {
          start: {
            line: 126,
            column: 29
          },
          end: {
            line: 126,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 126,
            column: 29
          },
          end: {
            line: 126,
            column: 74
          }
        }, {
          start: {
            line: 126,
            column: 78
          },
          end: {
            line: 126,
            column: 79
          }
        }],
        line: 126
      },
      "27": {
        loc: {
          start: {
            line: 127,
            column: 38
          },
          end: {
            line: 127,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 38
          },
          end: {
            line: 127,
            column: 92
          }
        }, {
          start: {
            line: 127,
            column: 96
          },
          end: {
            line: 127,
            column: 97
          }
        }],
        line: 127
      },
      "28": {
        loc: {
          start: {
            line: 128,
            column: 31
          },
          end: {
            line: 128,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 128,
            column: 31
          },
          end: {
            line: 128,
            column: 78
          }
        }, {
          start: {
            line: 128,
            column: 82
          },
          end: {
            line: 128,
            column: 83
          }
        }],
        line: 128
      },
      "29": {
        loc: {
          start: {
            line: 129,
            column: 36
          },
          end: {
            line: 129,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 129,
            column: 36
          },
          end: {
            line: 129,
            column: 88
          }
        }, {
          start: {
            line: 129,
            column: 92
          },
          end: {
            line: 129,
            column: 93
          }
        }],
        line: 129
      },
      "30": {
        loc: {
          start: {
            line: 130,
            column: 42
          },
          end: {
            line: 130,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 130,
            column: 42
          },
          end: {
            line: 130,
            column: 100
          }
        }, {
          start: {
            line: 130,
            column: 104
          },
          end: {
            line: 130,
            column: 105
          }
        }],
        line: 130
      },
      "31": {
        loc: {
          start: {
            line: 131,
            column: 37
          },
          end: {
            line: 131,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 131,
            column: 37
          },
          end: {
            line: 131,
            column: 80
          }
        }, {
          start: {
            line: 131,
            column: 84
          },
          end: {
            line: 131,
            column: 85
          }
        }],
        line: 131
      },
      "32": {
        loc: {
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 148,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 148,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "33": {
        loc: {
          start: {
            line: 140,
            column: 30
          },
          end: {
            line: 140,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 140,
            column: 30
          },
          end: {
            line: 140,
            column: 64
          }
        }, {
          start: {
            line: 140,
            column: 68
          },
          end: {
            line: 140,
            column: 69
          }
        }],
        line: 140
      },
      "34": {
        loc: {
          start: {
            line: 141,
            column: 29
          },
          end: {
            line: 141,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 141,
            column: 29
          },
          end: {
            line: 141,
            column: 62
          }
        }, {
          start: {
            line: 141,
            column: 66
          },
          end: {
            line: 141,
            column: 67
          }
        }],
        line: 141
      },
      "35": {
        loc: {
          start: {
            line: 142,
            column: 28
          },
          end: {
            line: 142,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 142,
            column: 28
          },
          end: {
            line: 142,
            column: 60
          }
        }, {
          start: {
            line: 142,
            column: 64
          },
          end: {
            line: 142,
            column: 65
          }
        }],
        line: 142
      },
      "36": {
        loc: {
          start: {
            line: 143,
            column: 30
          },
          end: {
            line: 143,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 143,
            column: 30
          },
          end: {
            line: 143,
            column: 64
          }
        }, {
          start: {
            line: 143,
            column: 68
          },
          end: {
            line: 143,
            column: 69
          }
        }],
        line: 143
      },
      "37": {
        loc: {
          start: {
            line: 145,
            column: 35
          },
          end: {
            line: 145,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 145,
            column: 35
          },
          end: {
            line: 145,
            column: 78
          }
        }, {
          start: {
            line: 145,
            column: 82
          },
          end: {
            line: 145,
            column: 83
          }
        }],
        line: 145
      },
      "38": {
        loc: {
          start: {
            line: 154,
            column: 23
          },
          end: {
            line: 154,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 154,
            column: 56
          },
          end: {
            line: 154,
            column: 74
          }
        }, {
          start: {
            line: 154,
            column: 77
          },
          end: {
            line: 154,
            column: 91
          }
        }],
        line: 154
      },
      "39": {
        loc: {
          start: {
            line: 154,
            column: 23
          },
          end: {
            line: 154,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 154,
            column: 23
          },
          end: {
            line: 154,
            column: 38
          }
        }, {
          start: {
            line: 154,
            column: 42
          },
          end: {
            line: 154,
            column: 53
          }
        }],
        line: 154
      },
      "40": {
        loc: {
          start: {
            line: 155,
            column: 20
          },
          end: {
            line: 155,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 155,
            column: 53
          },
          end: {
            line: 155,
            column: 68
          }
        }, {
          start: {
            line: 155,
            column: 71
          },
          end: {
            line: 155,
            column: 82
          }
        }],
        line: 155
      },
      "41": {
        loc: {
          start: {
            line: 155,
            column: 20
          },
          end: {
            line: 155,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 155,
            column: 20
          },
          end: {
            line: 155,
            column: 35
          }
        }, {
          start: {
            line: 155,
            column: 39
          },
          end: {
            line: 155,
            column: 50
          }
        }],
        line: 155
      },
      "42": {
        loc: {
          start: {
            line: 156,
            column: 26
          },
          end: {
            line: 156,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 156,
            column: 59
          },
          end: {
            line: 156,
            column: 75
          }
        }, {
          start: {
            line: 156,
            column: 78
          },
          end: {
            line: 156,
            column: 95
          }
        }],
        line: 156
      },
      "43": {
        loc: {
          start: {
            line: 156,
            column: 26
          },
          end: {
            line: 156,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 26
          },
          end: {
            line: 156,
            column: 41
          }
        }, {
          start: {
            line: 156,
            column: 45
          },
          end: {
            line: 156,
            column: 56
          }
        }],
        line: 156
      },
      "44": {
        loc: {
          start: {
            line: 157,
            column: 31
          },
          end: {
            line: 157,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 157,
            column: 64
          },
          end: {
            line: 157,
            column: 82
          }
        }, {
          start: {
            line: 157,
            column: 85
          },
          end: {
            line: 157,
            column: 107
          }
        }],
        line: 157
      },
      "45": {
        loc: {
          start: {
            line: 157,
            column: 31
          },
          end: {
            line: 157,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 157,
            column: 31
          },
          end: {
            line: 157,
            column: 46
          }
        }, {
          start: {
            line: 157,
            column: 50
          },
          end: {
            line: 157,
            column: 61
          }
        }],
        line: 157
      },
      "46": {
        loc: {
          start: {
            line: 158,
            column: 23
          },
          end: {
            line: 158,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 158,
            column: 56
          },
          end: {
            line: 158,
            column: 68
          }
        }, {
          start: {
            line: 158,
            column: 71
          },
          end: {
            line: 158,
            column: 91
          }
        }],
        line: 158
      },
      "47": {
        loc: {
          start: {
            line: 158,
            column: 23
          },
          end: {
            line: 158,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 158,
            column: 23
          },
          end: {
            line: 158,
            column: 38
          }
        }, {
          start: {
            line: 158,
            column: 42
          },
          end: {
            line: 158,
            column: 53
          }
        }],
        line: 158
      },
      "48": {
        loc: {
          start: {
            line: 158,
            column: 71
          },
          end: {
            line: 158,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 158,
            column: 71
          },
          end: {
            line: 158,
            column: 85
          }
        }, {
          start: {
            line: 158,
            column: 89
          },
          end: {
            line: 158,
            column: 91
          }
        }],
        line: 158
      },
      "49": {
        loc: {
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "50": {
        loc: {
          start: {
            line: 161,
            column: 12
          },
          end: {
            line: 161,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 161,
            column: 12
          },
          end: {
            line: 161,
            column: 27
          }
        }, {
          start: {
            line: 161,
            column: 31
          },
          end: {
            line: 161,
            column: 43
          }
        }],
        line: 161
      },
      "51": {
        loc: {
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 164
      },
      "52": {
        loc: {
          start: {
            line: 180,
            column: 8
          },
          end: {
            line: 185,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 180,
            column: 8
          },
          end: {
            line: 185,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 180
      },
      "53": {
        loc: {
          start: {
            line: 192,
            column: 8
          },
          end: {
            line: 192,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 8
          },
          end: {
            line: 192,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "54": {
        loc: {
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 192,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 192,
            column: 27
          }
        }, {
          start: {
            line: 192,
            column: 31
          },
          end: {
            line: 192,
            column: 42
          }
        }],
        line: 192
      },
      "55": {
        loc: {
          start: {
            line: 279,
            column: 8
          },
          end: {
            line: 281,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 279,
            column: 8
          },
          end: {
            line: 281,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 279
      },
      "56": {
        loc: {
          start: {
            line: 286,
            column: 8
          },
          end: {
            line: 288,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 286,
            column: 8
          },
          end: {
            line: 288,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 286
      },
      "57": {
        loc: {
          start: {
            line: 290,
            column: 8
          },
          end: {
            line: 329,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 290,
            column: 8
          },
          end: {
            line: 329,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 290
      },
      "58": {
        loc: {
          start: {
            line: 313,
            column: 89
          },
          end: {
            line: 313,
            column: 145
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 313,
            column: 124
          },
          end: {
            line: 313,
            column: 133
          }
        }, {
          start: {
            line: 313,
            column: 136
          },
          end: {
            line: 313,
            column: 145
          }
        }],
        line: 313
      },
      "59": {
        loc: {
          start: {
            line: 316,
            column: 12
          },
          end: {
            line: 328,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 316,
            column: 12
          },
          end: {
            line: 328,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 316
      },
      "60": {
        loc: {
          start: {
            line: 316,
            column: 16
          },
          end: {
            line: 316,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 316,
            column: 16
          },
          end: {
            line: 316,
            column: 30
          }
        }, {
          start: {
            line: 316,
            column: 34
          },
          end: {
            line: 316,
            column: 55
          }
        }],
        line: 316
      },
      "61": {
        loc: {
          start: {
            line: 325,
            column: 16
          },
          end: {
            line: 327,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 325,
            column: 16
          },
          end: {
            line: 327,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 325
      },
      "62": {
        loc: {
          start: {
            line: 331,
            column: 8
          },
          end: {
            line: 339,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 331,
            column: 8
          },
          end: {
            line: 339,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 331
      },
      "63": {
        loc: {
          start: {
            line: 331,
            column: 12
          },
          end: {
            line: 331,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 331,
            column: 12
          },
          end: {
            line: 331,
            column: 26
          }
        }, {
          start: {
            line: 331,
            column: 30
          },
          end: {
            line: 331,
            column: 51
          }
        }],
        line: 331
      },
      "64": {
        loc: {
          start: {
            line: 359,
            column: 8
          },
          end: {
            line: 361,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 359,
            column: 8
          },
          end: {
            line: 361,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 359
      },
      "65": {
        loc: {
          start: {
            line: 367,
            column: 8
          },
          end: {
            line: 369,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 367,
            column: 8
          },
          end: {
            line: 369,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 367
      },
      "66": {
        loc: {
          start: {
            line: 401,
            column: 41
          },
          end: {
            line: 401,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 401,
            column: 77
          },
          end: {
            line: 401,
            column: 86
          }
        }, {
          start: {
            line: 401,
            column: 89
          },
          end: {
            line: 401,
            column: 102
          }
        }],
        line: 401
      },
      "67": {
        loc: {
          start: {
            line: 402,
            column: 42
          },
          end: {
            line: 402,
            column: 118
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 402,
            column: 78
          },
          end: {
            line: 402,
            column: 95
          }
        }, {
          start: {
            line: 402,
            column: 98
          },
          end: {
            line: 402,
            column: 118
          }
        }],
        line: 402
      },
      "68": {
        loc: {
          start: {
            line: 404,
            column: 28
          },
          end: {
            line: 407,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 404,
            column: 28
          },
          end: {
            line: 404,
            column: 43
          }
        }, {
          start: {
            line: 404,
            column: 61
          },
          end: {
            line: 407,
            column: 30
          }
        }],
        line: 404
      },
      "69": {
        loc: {
          start: {
            line: 412,
            column: 12
          },
          end: {
            line: 422,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 412,
            column: 12
          },
          end: {
            line: 412,
            column: 41
          }
        }, {
          start: {
            line: 412,
            column: 59
          },
          end: {
            line: 422,
            column: 14
          }
        }],
        line: 412
      },
      "70": {
        loc: {
          start: {
            line: 418,
            column: 24
          },
          end: {
            line: 418,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 418,
            column: 56
          },
          end: {
            line: 418,
            column: 59
          }
        }, {
          start: {
            line: 418,
            column: 62
          },
          end: {
            line: 418,
            column: 64
          }
        }],
        line: 418
      },
      "71": {
        loc: {
          start: {
            line: 511,
            column: 28
          },
          end: {
            line: 558,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 511,
            column: 28
          },
          end: {
            line: 511,
            column: 39
          }
        }, {
          start: {
            line: 511,
            column: 57
          },
          end: {
            line: 558,
            column: 30
          }
        }],
        line: 511
      },
      "72": {
        loc: {
          start: {
            line: 559,
            column: 28
          },
          end: {
            line: 602,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 559,
            column: 28
          },
          end: {
            line: 559,
            column: 42
          }
        }, {
          start: {
            line: 559,
            column: 46
          },
          end: {
            line: 559,
            column: 81
          }
        }, {
          start: {
            line: 559,
            column: 99
          },
          end: {
            line: 602,
            column: 30
          }
        }],
        line: 559
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0],
      "17": [0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matthewmoroney/builds/FreeAgentics/web/components/markov-blanket-visualization.tsx"],
      sourcesContent: ["\"use client\";\n\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport * as d3 from \"d3\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"./ui/card\";\nimport { Button } from \"./ui/button\";\nimport { Badge } from \"./ui/badge\";\nimport { Slider } from \"./ui/slider\";\nimport { Switch } from \"./ui/switch\";\nimport { Label } from \"./ui/label\";\nimport { Alert, AlertDescription } from \"./ui/alert\";\nimport { Separator } from \"./ui/separator\";\nimport {\n  useMarkovBlanketWebSocket,\n  type BoundaryViolation,\n  type MarkovBlanketEvent,\n} from \"../hooks/useMarkovBlanketWebSocket\";\n\n/**\n * Markov Blanket Radar Chart Visualization Component\n *\n * Interactive D3.js visualization of Markov Blanket dimensions with real-time\n * boundary monitoring, violation alerts, and agent position tracking.\n *\n * Implements Task 53.2 requirements for radar chart visualization of:\n * - Internal states (\u03BC): Agent's internal beliefs and hidden states\n * - Sensory states (s): Observations from the environment\n * - Active states (a): Actions the agent can perform\n * - External states (\u03B7): Environment states beyond the agent's influence\n */\n\ninterface MarkovBlanketDimensions {\n  internal_states: number[];\n  sensory_states: number[];\n  active_states: number[];\n  external_states: number[];\n  internal_dimension: number;\n  sensory_dimension: number;\n  active_dimension: number;\n  external_dimension: number;\n}\n\nexport interface BoundaryViolationEvent {\n  event_id: string;\n  agent_id: string;\n  violation_type: string;\n  timestamp: string;\n  severity: number;\n  independence_measure: number;\n  threshold_violated: number;\n  free_energy: number;\n  expected_free_energy: number;\n  kl_divergence: number;\n  acknowledged: boolean;\n  mitigated: boolean;\n}\n\ninterface BoundaryMetrics {\n  free_energy: number;\n  expected_free_energy: number;\n  kl_divergence: number;\n  boundary_integrity: number;\n  conditional_independence: number;\n  stability_over_time: number;\n  violation_count: number;\n  last_violation_time?: string;\n}\n\ninterface AgentPosition {\n  agent_id: string;\n  position: {\n    internal: number;\n    sensory: number;\n    active: number;\n    external: number;\n  };\n  boundary_distance: number;\n  is_within_boundary: boolean;\n}\n\ninterface MarkovBlanketVisualizationProps {\n  agentId: string;\n  dimensions: MarkovBlanketDimensions;\n  metrics: BoundaryMetrics;\n  violations: BoundaryViolationEvent[];\n  agentPosition: AgentPosition;\n  boundaryThresholds: {\n    internal: number;\n    sensory: number;\n    active: number;\n    external: number;\n  };\n  realTimeUpdates?: boolean;\n  showViolations?: boolean;\n  showMetrics?: boolean;\n  onViolationAcknowledge?: (violationId: string) => void;\n  onBoundaryThresholdChange?: (dimension: string, value: number) => void;\n}\n\nexport const MarkovBlanketVisualization: React.FC<\n  MarkovBlanketVisualizationProps\n> = ({\n  agentId,\n  dimensions: propDimensions,\n  metrics: propMetrics,\n  violations: propViolations,\n  agentPosition: propAgentPosition,\n  boundaryThresholds: propBoundaryThresholds,\n  realTimeUpdates = true,\n  showViolations = true,\n  showMetrics = true,\n  onViolationAcknowledge,\n  onBoundaryThresholdChange,\n}) => {\n  const svgRef = useRef<SVGSVGElement>(null);\n  const [selectedDimension, setSelectedDimension] = useState<string | null>(\n    null,\n  );\n  const [alertThreshold, setAlertThreshold] = useState([0.8]);\n  const [showAgentTrail, setShowAgentTrail] = useState(true);\n  const [animationSpeed, setAnimationSpeed] = useState([1]);\n  const [zoomLevel, setZoomLevel] = useState([1]);\n  const [agentTrail, setAgentTrail] = useState<AgentPosition[]>([]);\n\n  // Active Inference WebSocket integration for real-time pymdp/GNN data\n  const {\n    isConnected,\n    violations: wsViolations,\n    monitoringStatus,\n    connect,\n    registerAgent,\n    startMonitoring,\n    getAgentViolations,\n  } = useMarkovBlanketWebSocket({\n    autoConnect: realTimeUpdates,\n    subscription: {\n      agent_ids: [agentId],\n      include_mathematical_proofs: true,\n      include_detailed_metrics: true,\n      real_time_updates: realTimeUpdates,\n    },\n    onEvent: (event: MarkovBlanketEvent) => {\n      console.log(\"Active Inference Event:\", event);\n      // Update local state with real Active Inference data\n      if (event.type === \"state_update\" && event.data) {\n        updateFromActiveInference(event.data);\n      }\n    },\n    onViolation: (violation: BoundaryViolation) => {\n      console.log(\"Markov Blanket Violation:\", violation);\n      // Handle real boundary violations from Active Inference engine\n    },\n  });\n\n  // State derived from real Active Inference data (pymdp/GNN) or props as fallback\n  const [realTimeDimensions, setRealTimeDimensions] = useState(propDimensions);\n  const [realTimeMetrics, setRealTimeMetrics] = useState(propMetrics);\n  const [realTimePosition, setRealTimePosition] = useState(propAgentPosition);\n  const [realTimeThresholds, setRealTimeThresholds] = useState(\n    propBoundaryThresholds,\n  );\n\n  // Function to update component state from Active Inference engine data\n  const updateFromActiveInference = useCallback(\n    (inferenceData: any) => {\n      if (inferenceData.markov_blanket_dimensions) {\n        setRealTimeDimensions({\n          internal_dimension:\n            inferenceData.markov_blanket_dimensions.internal || 0,\n          sensory_dimension:\n            inferenceData.markov_blanket_dimensions.sensory || 0,\n          active_dimension: inferenceData.markov_blanket_dimensions.active || 0,\n          external_dimension:\n            inferenceData.markov_blanket_dimensions.external || 0,\n        });\n      }\n\n      if (inferenceData.free_energy_metrics) {\n        setRealTimeMetrics({\n          free_energy: inferenceData.free_energy_metrics.free_energy || 0,\n          expected_free_energy:\n            inferenceData.free_energy_metrics.expected_free_energy || 0,\n          kl_divergence: inferenceData.free_energy_metrics.kl_divergence || 0,\n          boundary_integrity:\n            inferenceData.free_energy_metrics.boundary_integrity || 1,\n          conditional_independence:\n            inferenceData.free_energy_metrics.conditional_independence || 1,\n          stability_over_time: inferenceData.free_energy_metrics.stability || 1,\n          violation_count: wsViolations.length,\n          last_violation_time: wsViolations[wsViolations.length - 1]?.timestamp,\n        });\n      }\n\n      if (inferenceData.agent_state) {\n        setRealTimePosition({\n          agent_id: agentId,\n          position: {\n            internal: inferenceData.agent_state.internal || 0,\n            sensory: inferenceData.agent_state.sensory || 0,\n            active: inferenceData.agent_state.active || 0,\n            external: inferenceData.agent_state.external || 0,\n          },\n          boundary_distance: inferenceData.agent_state.boundary_distance || 0,\n          is_within_boundary:\n            inferenceData.agent_state.is_within_boundary !== false,\n        });\n      }\n    },\n    [agentId, wsViolations],\n  );\n\n  // Use real-time data if connected, otherwise fall back to props\n  const dimensions =\n    realTimeUpdates && isConnected ? realTimeDimensions : propDimensions;\n  const metrics =\n    realTimeUpdates && isConnected ? realTimeMetrics : propMetrics;\n  const agentPosition =\n    realTimeUpdates && isConnected ? realTimePosition : propAgentPosition;\n  const boundaryThresholds =\n    realTimeUpdates && isConnected\n      ? realTimeThresholds\n      : propBoundaryThresholds;\n  const violations =\n    realTimeUpdates && isConnected ? wsViolations : propViolations || [];\n\n  // Initialize WebSocket connection and register agent for Active Inference monitoring\n  useEffect(() => {\n    if (realTimeUpdates && !isConnected) {\n      connect();\n    }\n    if (isConnected) {\n      registerAgent(agentId);\n      startMonitoring();\n      getAgentViolations(agentId);\n    }\n  }, [\n    realTimeUpdates,\n    isConnected,\n    agentId,\n    connect,\n    registerAgent,\n    startMonitoring,\n    getAgentViolations,\n  ]);\n\n  // Add current position to trail\n  useEffect(() => {\n    if (showAgentTrail) {\n      setAgentTrail((prev) => [...prev.slice(-20), agentPosition]);\n    }\n  }, [agentPosition, showAgentTrail]);\n\n  // D3 radar chart visualization\n  useEffect(() => {\n    if (!svgRef.current || !dimensions) return;\n\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n\n    const width = 600;\n    const height = 600;\n    const margin = { top: 40, right: 40, bottom: 40, left: 40 };\n    const innerWidth = width - margin.left - margin.right;\n    const innerHeight = height - margin.top - margin.bottom;\n    const radius = Math.min(innerWidth, innerHeight) / 2;\n    const center = { x: width / 2, y: height / 2 };\n\n    // Create main group\n    const g = svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(${center.x},${center.y})`);\n\n    // Define the four dimensions for the radar chart\n    const radarDimensions = [\n      {\n        name: \"Internal States\",\n        key: \"internal\",\n        value: dimensions.internal_dimension,\n        threshold: boundaryThresholds.internal,\n        color: \"#3b82f6\",\n        angle: 0,\n      },\n      {\n        name: \"Sensory States\",\n        key: \"sensory\",\n        value: dimensions.sensory_dimension,\n        threshold: boundaryThresholds.sensory,\n        color: \"#10b981\",\n        angle: Math.PI / 2,\n      },\n      {\n        name: \"Active States\",\n        key: \"active\",\n        value: dimensions.active_dimension,\n        threshold: boundaryThresholds.active,\n        color: \"#f59e0b\",\n        angle: Math.PI,\n      },\n      {\n        name: \"External States\",\n        key: \"external\",\n        value: dimensions.external_dimension,\n        threshold: boundaryThresholds.external,\n        color: \"#ef4444\",\n        angle: (3 * Math.PI) / 2,\n      },\n    ];\n\n    // Create scales\n    const maxValue = Math.max(\n      ...radarDimensions.map((d) => Math.max(d.value, d.threshold)),\n      10,\n    );\n    const radiusScale = d3\n      .scaleLinear()\n      .domain([0, maxValue])\n      .range([0, radius * 0.8]);\n\n    // Draw concentric circles (grid)\n    const gridLevels = 5;\n    for (let i = 1; i <= gridLevels; i++) {\n      const gridRadius = (radius * 0.8 * i) / gridLevels;\n      g.append(\"circle\")\n        .attr(\"cx\", 0)\n        .attr(\"cy\", 0)\n        .attr(\"r\", gridRadius)\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"#e5e7eb\")\n        .attr(\"stroke-width\", 1)\n        .attr(\"opacity\", 0.5);\n\n      // Add grid labels\n      g.append(\"text\")\n        .attr(\"x\", 5)\n        .attr(\"y\", -gridRadius)\n        .attr(\"text-anchor\", \"start\")\n        .attr(\"font-size\", \"10px\")\n        .attr(\"fill\", \"#6b7280\")\n        .text(((maxValue * i) / gridLevels).toFixed(1));\n    }\n\n    // Draw axis lines and labels\n    radarDimensions.forEach((dimension) => {\n      const x = Math.cos(dimension.angle - Math.PI / 2) * radius * 0.9;\n      const y = Math.sin(dimension.angle - Math.PI / 2) * radius * 0.9;\n\n      // Axis line\n      g.append(\"line\")\n        .attr(\"x1\", 0)\n        .attr(\"y1\", 0)\n        .attr(\"x2\", x)\n        .attr(\"y2\", y)\n        .attr(\"stroke\", \"#9ca3af\")\n        .attr(\"stroke-width\", 2);\n\n      // Axis label\n      const labelX = Math.cos(dimension.angle - Math.PI / 2) * radius * 1.1;\n      const labelY = Math.sin(dimension.angle - Math.PI / 2) * radius * 1.1;\n\n      g.append(\"text\")\n        .attr(\"x\", labelX)\n        .attr(\"y\", labelY)\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"dominant-baseline\", \"middle\")\n        .attr(\"font-size\", \"12px\")\n        .attr(\"font-weight\", \"bold\")\n        .attr(\"fill\", dimension.color)\n        .text(dimension.name);\n    });\n\n    // Draw boundary thresholds\n    const boundaryPath = d3\n      .line<any>()\n      .x((d) => Math.cos(d.angle - Math.PI / 2) * radiusScale(d.threshold))\n      .y((d) => Math.sin(d.angle - Math.PI / 2) * radiusScale(d.threshold))\n      .curve(d3.curveLinearClosed);\n\n    // Create boundary path with proper D3 selection\n    const boundaryPathData = boundaryPath(radarDimensions);\n    if (boundaryPathData) {\n      g.append(\"path\")\n        .attr(\"d\", boundaryPathData)\n        .attr(\"fill\", \"rgba(239, 68, 68, 0.1)\")\n        .attr(\"stroke\", \"#ef4444\")\n        .attr(\"stroke-width\", 2)\n        .attr(\"stroke-dasharray\", \"5,5\");\n    }\n\n    // Draw current dimensions\n    const currentPath = d3\n      .line<any>()\n      .x((d) => Math.cos(d.angle - Math.PI / 2) * radiusScale(d.value))\n      .y((d) => Math.sin(d.angle - Math.PI / 2) * radiusScale(d.value))\n      .curve(d3.curveLinearClosed);\n\n    // Create current dimensions path with proper D3 selection\n    const currentPathData = currentPath(radarDimensions);\n    if (currentPathData) {\n      g.append(\"path\")\n        .attr(\"d\", currentPathData)\n        .attr(\"fill\", \"rgba(59, 130, 246, 0.3)\")\n        .attr(\"stroke\", \"#3b82f6\")\n        .attr(\"stroke-width\", 3);\n    }\n\n    // Draw agent position\n    if (agentPosition) {\n      const agentData = [\n        { ...radarDimensions[0], value: agentPosition.position.internal },\n        { ...radarDimensions[1], value: agentPosition.position.sensory },\n        { ...radarDimensions[2], value: agentPosition.position.active },\n        { ...radarDimensions[3], value: agentPosition.position.external },\n      ];\n\n      // Agent position points\n      agentData.forEach((d) => {\n        const x = Math.cos(d.angle - Math.PI / 2) * radiusScale(d.value);\n        const y = Math.sin(d.angle - Math.PI / 2) * radiusScale(d.value);\n\n        g.append(\"circle\")\n          .attr(\"cx\", x)\n          .attr(\"cy\", y)\n          .attr(\"r\", 6)\n          .attr(\n            \"fill\",\n            agentPosition.is_within_boundary ? \"#10b981\" : \"#ef4444\",\n          )\n          .attr(\"stroke\", \"#ffffff\")\n          .attr(\"stroke-width\", 2)\n          .style(\"cursor\", \"pointer\")\n          .on(\"click\", () => setSelectedDimension(d.key));\n      });\n\n      // Agent trail\n      if (showAgentTrail && agentTrail.length > 1) {\n        const trailPath = d3\n          .line<AgentPosition>()\n          .x((d) => {\n            const avgX =\n              (Math.cos(-Math.PI / 2) * radiusScale(d.position.internal) +\n                Math.cos(Math.PI / 2 - Math.PI / 2) *\n                  radiusScale(d.position.sensory) +\n                Math.cos(Math.PI - Math.PI / 2) *\n                  radiusScale(d.position.active) +\n                Math.cos((3 * Math.PI) / 2 - Math.PI / 2) *\n                  radiusScale(d.position.external)) /\n              4;\n            return avgX;\n          })\n          .y((d) => {\n            const avgY =\n              (Math.sin(-Math.PI / 2) * radiusScale(d.position.internal) +\n                Math.sin(Math.PI / 2 - Math.PI / 2) *\n                  radiusScale(d.position.sensory) +\n                Math.sin(Math.PI - Math.PI / 2) *\n                  radiusScale(d.position.active) +\n                Math.sin((3 * Math.PI) / 2 - Math.PI / 2) *\n                  radiusScale(d.position.external)) /\n              4;\n            return avgY;\n          })\n          .curve(d3.curveCardinal);\n\n        const trailPathData = trailPath(agentTrail);\n        if (trailPathData) {\n          g.append(\"path\")\n            .attr(\"d\", trailPathData)\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", \"#8b5cf6\")\n            .attr(\"stroke-width\", 2)\n            .attr(\"opacity\", 0.6)\n            .attr(\"stroke-dasharray\", \"3,3\");\n        }\n      }\n    }\n\n    // Add violation indicators\n    if (showViolations && violations.length > 0) {\n      const recentViolations = violations\n        .filter((v) => !v.acknowledged)\n        .slice(-5);\n\n      recentViolations.forEach((violation, index) => {\n        const angle = (index / recentViolations.length) * 2 * Math.PI;\n        const x = Math.cos(angle) * radius * 0.95;\n        const y = Math.sin(angle) * radius * 0.95;\n\n        g.append(\"circle\")\n          .attr(\"cx\", x)\n          .attr(\"cy\", y)\n          .attr(\"r\", 8)\n          .attr(\"fill\", \"#ef4444\")\n          .attr(\"stroke\", \"#ffffff\")\n          .attr(\"stroke-width\", 2)\n          .style(\"cursor\", \"pointer\")\n          .append(\"title\")\n          .text(\n            `Violation: ${violation.violation_type}\\nSeverity: ${violation.severity.toFixed(2)}`,\n          );\n      });\n    }\n\n    // Add interaction handlers\n    g.selectAll(\"circle\")\n      .on(\"mouseover\", function (event, d) {\n        d3.select(this).attr(\"r\", 8);\n      })\n      .on(\"mouseout\", function (event, d) {\n        d3.select(this).attr(\"r\", 6);\n      });\n  }, [\n    dimensions,\n    metrics,\n    violations,\n    agentPosition,\n    boundaryThresholds,\n    showViolations,\n    showAgentTrail,\n    agentTrail,\n    selectedDimension,\n  ]);\n\n  // Handle threshold changes\n  const handleThresholdChange = useCallback(\n    (dimension: string, value: number) => {\n      if (onBoundaryThresholdChange) {\n        onBoundaryThresholdChange(dimension, value);\n      }\n    },\n    [onBoundaryThresholdChange],\n  );\n\n  // Handle violation acknowledgment\n  const handleViolationAcknowledge = useCallback(\n    (violationId: string) => {\n      if (onViolationAcknowledge) {\n        onViolationAcknowledge(violationId);\n      }\n    },\n    [onViolationAcknowledge],\n  );\n\n  const unacknowledgedViolations = violations.filter((v) => !v.acknowledged);\n  const criticalViolations = violations.filter(\n    (v) => v.severity >= alertThreshold[0],\n  );\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h3 className=\"text-lg font-semibold\">\n            Markov Blanket Visualization\n          </h3>\n          <p className=\"text-sm text-muted-foreground\">\n            Agent {agentId} - Real-time boundary monitoring\n          </p>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <Badge\n            variant={\n              agentPosition?.is_within_boundary ? \"default\" : \"destructive\"\n            }\n          >\n            {agentPosition?.is_within_boundary\n              ? \"Within Boundary\"\n              : \"Boundary Violation\"}\n          </Badge>\n          {realTimeUpdates && <Badge variant=\"outline\">Live</Badge>}\n        </div>\n      </div>\n\n      {/* Alerts */}\n      {criticalViolations.length > 0 && (\n        <Alert className=\"border-red-200 bg-red-50\">\n          <AlertDescription>\n            {criticalViolations.length} critical boundary violation\n            {criticalViolations.length > 1 ? \"s\" : \"\"} detected\n          </AlertDescription>\n        </Alert>\n      )}\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Main Radar Chart */}\n        <div className=\"lg:col-span-2\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Boundary Radar Chart</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <svg\n                ref={svgRef}\n                width=\"600\"\n                height=\"600\"\n                className=\"w-full h-auto\"\n              />\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Controls and Metrics */}\n        <div className=\"space-y-4\">\n          {/* Visualization Controls */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Controls</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"space-y-2\">\n                <Label>Alert Threshold</Label>\n                <Slider\n                  value={alertThreshold}\n                  onValueChange={setAlertThreshold}\n                  max={1}\n                  min={0}\n                  step={0.1}\n                  className=\"w-full\"\n                />\n                <div className=\"text-xs text-muted-foreground\">\n                  {alertThreshold[0].toFixed(1)}\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label>Animation Speed</Label>\n                <Slider\n                  value={animationSpeed}\n                  onValueChange={setAnimationSpeed}\n                  max={3}\n                  min={0.1}\n                  step={0.1}\n                  className=\"w-full\"\n                />\n              </div>\n\n              <div className=\"flex items-center space-x-2\">\n                <Switch\n                  checked={showAgentTrail}\n                  onCheckedChange={setShowAgentTrail}\n                />\n                <Label>Show Agent Trail</Label>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Boundary Metrics */}\n          {showMetrics && (\n            <Card>\n              <CardHeader>\n                <CardTitle>Boundary Metrics</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-3\">\n                <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                  <div>Free Energy:</div>\n                  <div className=\"font-mono\">\n                    {metrics.free_energy.toFixed(3)}\n                  </div>\n\n                  <div>Boundary Integrity:</div>\n                  <div className=\"font-mono\">\n                    {(metrics.boundary_integrity * 100).toFixed(1)}%\n                  </div>\n\n                  <div>KL Divergence:</div>\n                  <div className=\"font-mono\">\n                    {metrics.kl_divergence.toFixed(3)}\n                  </div>\n\n                  <div>Violations:</div>\n                  <div className=\"font-mono\">{metrics.violation_count}</div>\n                </div>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* Recent Violations */}\n          {showViolations && unacknowledgedViolations.length > 0 && (\n            <Card>\n              <CardHeader>\n                <CardTitle>Recent Violations</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-2\">\n                  {unacknowledgedViolations.slice(0, 3).map((violation) => (\n                    <div\n                      key={violation.event_id}\n                      className=\"p-2 bg-red-50 rounded border\"\n                    >\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"text-sm\">\n                          <div className=\"font-medium\">\n                            {violation.violation_type}\n                          </div>\n                          <div className=\"text-xs text-muted-foreground\">\n                            Severity: {violation.severity.toFixed(2)}\n                          </div>\n                        </div>\n                        <Button\n                          size=\"sm\"\n                          variant=\"outline\"\n                          onClick={() =>\n                            handleViolationAcknowledge(violation.event_id)\n                          }\n                        >\n                          Acknowledge\n                        </Button>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MarkovBlanketVisualization;\n"],
      names: ["MarkovBlanketVisualization", "agentId", "dimensions", "propDimensions", "metrics", "propMetrics", "violations", "propViolations", "agentPosition", "propAgentPosition", "boundaryThresholds", "propBoundaryThresholds", "realTimeUpdates", "showViolations", "showMetrics", "onViolationAcknowledge", "onBoundaryThresholdChange", "svgRef", "useRef", "selectedDimension", "setSelectedDimension", "useState", "alertThreshold", "setAlertThreshold", "showAgentTrail", "setShowAgentTrail", "animationSpeed", "setAnimationSpeed", "zoomLevel", "setZoomLevel", "agentTrail", "setAgentTrail", "isConnected", "wsViolations", "monitoringStatus", "connect", "registerAgent", "startMonitoring", "getAgentViolations", "useMarkovBlanketWebSocket", "autoConnect", "subscription", "agent_ids", "include_mathematical_proofs", "include_detailed_metrics", "real_time_updates", "onEvent", "event", "console", "log", "type", "data", "updateFromActiveInference", "onViolation", "violation", "realTimeDimensions", "setRealTimeDimensions", "realTimeMetrics", "setRealTimeMetrics", "realTimePosition", "setRealTimePosition", "realTimeThresholds", "setRealTimeThresholds", "useCallback", "inferenceData", "markov_blanket_dimensions", "internal_dimension", "internal", "sensory_dimension", "sensory", "active_dimension", "active", "external_dimension", "external", "free_energy_metrics", "free_energy", "expected_free_energy", "kl_divergence", "boundary_integrity", "conditional_independence", "stability_over_time", "stability", "violation_count", "length", "last_violation_time", "timestamp", "agent_state", "agent_id", "position", "boundary_distance", "is_within_boundary", "useEffect", "prev", "slice", "current", "svg", "d3", "select", "selectAll", "remove", "width", "height", "margin", "top", "right", "bottom", "left", "innerWidth", "innerHeight", "radius", "Math", "min", "center", "x", "y", "g", "append", "attr", "radarDimensions", "name", "key", "value", "threshold", "color", "angle", "PI", "maxValue", "max", "map", "d", "radiusScale", "scaleLinear", "domain", "range", "gridLevels", "i", "gridRadius", "text", "toFixed", "forEach", "dimension", "cos", "sin", "labelX", "labelY", "boundaryPath", "line", "curve", "curveLinearClosed", "boundaryPathData", "currentPath", "currentPathData", "agentData", "style", "on", "trailPath", "avgX", "avgY", "curveCardinal", "trailPathData", "recentViolations", "filter", "v", "acknowledged", "index", "violation_type", "severity", "handleThresholdChange", "handleViolationAcknowledge", "violationId", "unacknowledgedViolations", "criticalViolations", "div", "className", "h3", "p", "Badge", "variant", "Alert", "AlertDescription", "Card", "CardHeader", "CardTitle", "CardContent", "ref", "Label", "Slider", "onValueChange", "step", "Switch", "checked", "onCheckedChange", "Button", "size", "onClick", "event_id"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "93a275befc65b1553e4915df623c999b4cf50b42"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ammevkjvm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ammevkjvm();
cov_1ammevkjvm().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1ammevkjvm().f[0]++;
  cov_1ammevkjvm().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1ammevkjvm().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1ammevkjvm().s[3]++;
_export(exports, {
  MarkovBlanketVisualization: function () {
    /* istanbul ignore next */
    cov_1ammevkjvm().f[1]++;
    cov_1ammevkjvm().s[4]++;
    return MarkovBlanketVisualization;
  },
  default: function () {
    /* istanbul ignore next */
    cov_1ammevkjvm().f[2]++;
    cov_1ammevkjvm().s[5]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1ammevkjvm().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_1ammevkjvm().s[7]++, _interop_require_wildcard(require("react")));
const _d3 =
/* istanbul ignore next */
(/*#__PURE__*/cov_1ammevkjvm().s[8]++, _interop_require_wildcard(require("d3")));
const _card =
/* istanbul ignore next */
(cov_1ammevkjvm().s[9]++, require("./ui/card"));
const _button =
/* istanbul ignore next */
(cov_1ammevkjvm().s[10]++, require("./ui/button"));
const _badge =
/* istanbul ignore next */
(cov_1ammevkjvm().s[11]++, require("./ui/badge"));
const _slider =
/* istanbul ignore next */
(cov_1ammevkjvm().s[12]++, require("./ui/slider"));
const _switch =
/* istanbul ignore next */
(cov_1ammevkjvm().s[13]++, require("./ui/switch"));
const _label =
/* istanbul ignore next */
(cov_1ammevkjvm().s[14]++, require("./ui/label"));
const _alert =
/* istanbul ignore next */
(cov_1ammevkjvm().s[15]++, require("./ui/alert"));
const _useMarkovBlanketWebSocket =
/* istanbul ignore next */
(cov_1ammevkjvm().s[16]++, require("../hooks/useMarkovBlanketWebSocket"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1ammevkjvm().f[3]++;
  cov_1ammevkjvm().s[17]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1ammevkjvm().b[0][0]++;
    cov_1ammevkjvm().s[18]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1ammevkjvm().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1ammevkjvm().s[19]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1ammevkjvm().s[20]++, new WeakMap());
  /* istanbul ignore next */
  cov_1ammevkjvm().s[21]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1ammevkjvm().f[4]++;
    cov_1ammevkjvm().s[22]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1ammevkjvm().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1ammevkjvm().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1ammevkjvm().f[5]++;
  cov_1ammevkjvm().s[23]++;
  if (
  /* istanbul ignore next */
  (cov_1ammevkjvm().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1ammevkjvm().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1ammevkjvm().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1ammevkjvm().b[2][0]++;
    cov_1ammevkjvm().s[24]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1ammevkjvm().b[2][1]++;
  }
  cov_1ammevkjvm().s[25]++;
  if (
  /* istanbul ignore next */
  (cov_1ammevkjvm().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1ammevkjvm().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1ammevkjvm().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1ammevkjvm().b[4][0]++;
    cov_1ammevkjvm().s[26]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1ammevkjvm().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1ammevkjvm().s[27]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1ammevkjvm().s[28]++;
  if (
  /* istanbul ignore next */
  (cov_1ammevkjvm().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1ammevkjvm().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1ammevkjvm().b[6][0]++;
    cov_1ammevkjvm().s[29]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1ammevkjvm().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1ammevkjvm().s[30]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1ammevkjvm().s[31]++,
  /* istanbul ignore next */
  (cov_1ammevkjvm().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1ammevkjvm().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1ammevkjvm().s[32]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1ammevkjvm().s[33]++;
    if (
    /* istanbul ignore next */
    (cov_1ammevkjvm().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1ammevkjvm().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1ammevkjvm().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1ammevkjvm().s[34]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1ammevkjvm().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1ammevkjvm().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1ammevkjvm().s[35]++;
      if (
      /* istanbul ignore next */
      (cov_1ammevkjvm().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1ammevkjvm().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1ammevkjvm().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1ammevkjvm().b[12][0]++;
        cov_1ammevkjvm().s[36]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1ammevkjvm().b[12][1]++;
        cov_1ammevkjvm().s[37]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1ammevkjvm().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1ammevkjvm().s[38]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1ammevkjvm().s[39]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1ammevkjvm().b[14][0]++;
    cov_1ammevkjvm().s[40]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1ammevkjvm().b[14][1]++;
  }
  cov_1ammevkjvm().s[41]++;
  return newObj;
}
/* istanbul ignore next */
cov_1ammevkjvm().s[42]++;
const MarkovBlanketVisualization = ({
  agentId,
  dimensions: propDimensions,
  metrics: propMetrics,
  violations: propViolations,
  agentPosition: propAgentPosition,
  boundaryThresholds: propBoundaryThresholds,
  realTimeUpdates =
  /* istanbul ignore next */
  (cov_1ammevkjvm().b[15][0]++, true),
  showViolations =
  /* istanbul ignore next */
  (cov_1ammevkjvm().b[16][0]++, true),
  showMetrics =
  /* istanbul ignore next */
  (cov_1ammevkjvm().b[17][0]++, true),
  onViolationAcknowledge,
  onBoundaryThresholdChange
}) => {
  /* istanbul ignore next */
  cov_1ammevkjvm().f[6]++;
  const svgRef =
  /* istanbul ignore next */
  (cov_1ammevkjvm().s[43]++, (0, _react.useRef)(null));
  const [selectedDimension, setSelectedDimension] =
  /* istanbul ignore next */
  (cov_1ammevkjvm().s[44]++, (0, _react.useState)(null));
  const [alertThreshold, setAlertThreshold] =
  /* istanbul ignore next */
  (cov_1ammevkjvm().s[45]++, (0, _react.useState)([0.8]));
  const [showAgentTrail, setShowAgentTrail] =
  /* istanbul ignore next */
  (cov_1ammevkjvm().s[46]++, (0, _react.useState)(true));
  const [animationSpeed, setAnimationSpeed] =
  /* istanbul ignore next */
  (cov_1ammevkjvm().s[47]++, (0, _react.useState)([1]));
  const [zoomLevel, setZoomLevel] =
  /* istanbul ignore next */
  (cov_1ammevkjvm().s[48]++, (0, _react.useState)([1]));
  const [agentTrail, setAgentTrail] =
  /* istanbul ignore next */
  (cov_1ammevkjvm().s[49]++, (0, _react.useState)([]));
  // Active Inference WebSocket integration for real-time pymdp/GNN data
  const {
    isConnected,
    violations: wsViolations,
    monitoringStatus,
    connect,
    registerAgent,
    startMonitoring,
    getAgentViolations
  } =
  /* istanbul ignore next */
  (cov_1ammevkjvm().s[50]++, (0, _useMarkovBlanketWebSocket.useMarkovBlanketWebSocket)({
    autoConnect: realTimeUpdates,
    subscription: {
      agent_ids: [agentId],
      include_mathematical_proofs: true,
      include_detailed_metrics: true,
      real_time_updates: realTimeUpdates
    },
    onEvent: event => {
      /* istanbul ignore next */
      cov_1ammevkjvm().f[7]++;
      cov_1ammevkjvm().s[51]++;
      console.log("Active Inference Event:", event);
      // Update local state with real Active Inference data
      /* istanbul ignore next */
      cov_1ammevkjvm().s[52]++;
      if (
      /* istanbul ignore next */
      (cov_1ammevkjvm().b[19][0]++, event.type === "state_update") &&
      /* istanbul ignore next */
      (cov_1ammevkjvm().b[19][1]++, event.data)) {
        /* istanbul ignore next */
        cov_1ammevkjvm().b[18][0]++;
        cov_1ammevkjvm().s[53]++;
        updateFromActiveInference(event.data);
      } else
      /* istanbul ignore next */
      {
        cov_1ammevkjvm().b[18][1]++;
      }
    },
    onViolation: violation => {
      /* istanbul ignore next */
      cov_1ammevkjvm().f[8]++;
      cov_1ammevkjvm().s[54]++;
      console.log("Markov Blanket Violation:", violation);
      // Handle real boundary violations from Active Inference engine
    }
  }));
  // State derived from real Active Inference data (pymdp/GNN) or props as fallback
  const [realTimeDimensions, setRealTimeDimensions] =
  /* istanbul ignore next */
  (cov_1ammevkjvm().s[55]++, (0, _react.useState)(propDimensions));
  const [realTimeMetrics, setRealTimeMetrics] =
  /* istanbul ignore next */
  (cov_1ammevkjvm().s[56]++, (0, _react.useState)(propMetrics));
  const [realTimePosition, setRealTimePosition] =
  /* istanbul ignore next */
  (cov_1ammevkjvm().s[57]++, (0, _react.useState)(propAgentPosition));
  const [realTimeThresholds, setRealTimeThresholds] =
  /* istanbul ignore next */
  (cov_1ammevkjvm().s[58]++, (0, _react.useState)(propBoundaryThresholds));
  // Function to update component state from Active Inference engine data
  const updateFromActiveInference =
  /* istanbul ignore next */
  (cov_1ammevkjvm().s[59]++, (0, _react.useCallback)(inferenceData => {
    /* istanbul ignore next */
    cov_1ammevkjvm().f[9]++;
    cov_1ammevkjvm().s[60]++;
    if (inferenceData.markov_blanket_dimensions) {
      /* istanbul ignore next */
      cov_1ammevkjvm().b[20][0]++;
      cov_1ammevkjvm().s[61]++;
      setRealTimeDimensions({
        internal_dimension:
        /* istanbul ignore next */
        (cov_1ammevkjvm().b[21][0]++, inferenceData.markov_blanket_dimensions.internal) ||
        /* istanbul ignore next */
        (cov_1ammevkjvm().b[21][1]++, 0),
        sensory_dimension:
        /* istanbul ignore next */
        (cov_1ammevkjvm().b[22][0]++, inferenceData.markov_blanket_dimensions.sensory) ||
        /* istanbul ignore next */
        (cov_1ammevkjvm().b[22][1]++, 0),
        active_dimension:
        /* istanbul ignore next */
        (cov_1ammevkjvm().b[23][0]++, inferenceData.markov_blanket_dimensions.active) ||
        /* istanbul ignore next */
        (cov_1ammevkjvm().b[23][1]++, 0),
        external_dimension:
        /* istanbul ignore next */
        (cov_1ammevkjvm().b[24][0]++, inferenceData.markov_blanket_dimensions.external) ||
        /* istanbul ignore next */
        (cov_1ammevkjvm().b[24][1]++, 0)
      });
    } else
    /* istanbul ignore next */
    {
      cov_1ammevkjvm().b[20][1]++;
    }
    cov_1ammevkjvm().s[62]++;
    if (inferenceData.free_energy_metrics) {
      /* istanbul ignore next */
      cov_1ammevkjvm().b[25][0]++;
      cov_1ammevkjvm().s[63]++;
      setRealTimeMetrics({
        free_energy:
        /* istanbul ignore next */
        (cov_1ammevkjvm().b[26][0]++, inferenceData.free_energy_metrics.free_energy) ||
        /* istanbul ignore next */
        (cov_1ammevkjvm().b[26][1]++, 0),
        expected_free_energy:
        /* istanbul ignore next */
        (cov_1ammevkjvm().b[27][0]++, inferenceData.free_energy_metrics.expected_free_energy) ||
        /* istanbul ignore next */
        (cov_1ammevkjvm().b[27][1]++, 0),
        kl_divergence:
        /* istanbul ignore next */
        (cov_1ammevkjvm().b[28][0]++, inferenceData.free_energy_metrics.kl_divergence) ||
        /* istanbul ignore next */
        (cov_1ammevkjvm().b[28][1]++, 0),
        boundary_integrity:
        /* istanbul ignore next */
        (cov_1ammevkjvm().b[29][0]++, inferenceData.free_energy_metrics.boundary_integrity) ||
        /* istanbul ignore next */
        (cov_1ammevkjvm().b[29][1]++, 1),
        conditional_independence:
        /* istanbul ignore next */
        (cov_1ammevkjvm().b[30][0]++, inferenceData.free_energy_metrics.conditional_independence) ||
        /* istanbul ignore next */
        (cov_1ammevkjvm().b[30][1]++, 1),
        stability_over_time:
        /* istanbul ignore next */
        (cov_1ammevkjvm().b[31][0]++, inferenceData.free_energy_metrics.stability) ||
        /* istanbul ignore next */
        (cov_1ammevkjvm().b[31][1]++, 1),
        violation_count: wsViolations.length,
        last_violation_time: wsViolations[wsViolations.length - 1]?.timestamp
      });
    } else
    /* istanbul ignore next */
    {
      cov_1ammevkjvm().b[25][1]++;
    }
    cov_1ammevkjvm().s[64]++;
    if (inferenceData.agent_state) {
      /* istanbul ignore next */
      cov_1ammevkjvm().b[32][0]++;
      cov_1ammevkjvm().s[65]++;
      setRealTimePosition({
        agent_id: agentId,
        position: {
          internal:
          /* istanbul ignore next */
          (cov_1ammevkjvm().b[33][0]++, inferenceData.agent_state.internal) ||
          /* istanbul ignore next */
          (cov_1ammevkjvm().b[33][1]++, 0),
          sensory:
          /* istanbul ignore next */
          (cov_1ammevkjvm().b[34][0]++, inferenceData.agent_state.sensory) ||
          /* istanbul ignore next */
          (cov_1ammevkjvm().b[34][1]++, 0),
          active:
          /* istanbul ignore next */
          (cov_1ammevkjvm().b[35][0]++, inferenceData.agent_state.active) ||
          /* istanbul ignore next */
          (cov_1ammevkjvm().b[35][1]++, 0),
          external:
          /* istanbul ignore next */
          (cov_1ammevkjvm().b[36][0]++, inferenceData.agent_state.external) ||
          /* istanbul ignore next */
          (cov_1ammevkjvm().b[36][1]++, 0)
        },
        boundary_distance:
        /* istanbul ignore next */
        (cov_1ammevkjvm().b[37][0]++, inferenceData.agent_state.boundary_distance) ||
        /* istanbul ignore next */
        (cov_1ammevkjvm().b[37][1]++, 0),
        is_within_boundary: inferenceData.agent_state.is_within_boundary !== false
      });
    } else
    /* istanbul ignore next */
    {
      cov_1ammevkjvm().b[32][1]++;
    }
  }, [agentId, wsViolations]));
  // Use real-time data if connected, otherwise fall back to props
  const dimensions =
  /* istanbul ignore next */
  (cov_1ammevkjvm().s[66]++,
  /* istanbul ignore next */
  (cov_1ammevkjvm().b[39][0]++, realTimeUpdates) &&
  /* istanbul ignore next */
  (cov_1ammevkjvm().b[39][1]++, isConnected) ?
  /* istanbul ignore next */
  (cov_1ammevkjvm().b[38][0]++, realTimeDimensions) :
  /* istanbul ignore next */
  (cov_1ammevkjvm().b[38][1]++, propDimensions));
  const metrics =
  /* istanbul ignore next */
  (cov_1ammevkjvm().s[67]++,
  /* istanbul ignore next */
  (cov_1ammevkjvm().b[41][0]++, realTimeUpdates) &&
  /* istanbul ignore next */
  (cov_1ammevkjvm().b[41][1]++, isConnected) ?
  /* istanbul ignore next */
  (cov_1ammevkjvm().b[40][0]++, realTimeMetrics) :
  /* istanbul ignore next */
  (cov_1ammevkjvm().b[40][1]++, propMetrics));
  const agentPosition =
  /* istanbul ignore next */
  (cov_1ammevkjvm().s[68]++,
  /* istanbul ignore next */
  (cov_1ammevkjvm().b[43][0]++, realTimeUpdates) &&
  /* istanbul ignore next */
  (cov_1ammevkjvm().b[43][1]++, isConnected) ?
  /* istanbul ignore next */
  (cov_1ammevkjvm().b[42][0]++, realTimePosition) :
  /* istanbul ignore next */
  (cov_1ammevkjvm().b[42][1]++, propAgentPosition));
  const boundaryThresholds =
  /* istanbul ignore next */
  (cov_1ammevkjvm().s[69]++,
  /* istanbul ignore next */
  (cov_1ammevkjvm().b[45][0]++, realTimeUpdates) &&
  /* istanbul ignore next */
  (cov_1ammevkjvm().b[45][1]++, isConnected) ?
  /* istanbul ignore next */
  (cov_1ammevkjvm().b[44][0]++, realTimeThresholds) :
  /* istanbul ignore next */
  (cov_1ammevkjvm().b[44][1]++, propBoundaryThresholds));
  const violations =
  /* istanbul ignore next */
  (cov_1ammevkjvm().s[70]++,
  /* istanbul ignore next */
  (cov_1ammevkjvm().b[47][0]++, realTimeUpdates) &&
  /* istanbul ignore next */
  (cov_1ammevkjvm().b[47][1]++, isConnected) ?
  /* istanbul ignore next */
  (cov_1ammevkjvm().b[46][0]++, wsViolations) :
  /* istanbul ignore next */
  (cov_1ammevkjvm().b[46][1]++,
  /* istanbul ignore next */
  (cov_1ammevkjvm().b[48][0]++, propViolations) ||
  /* istanbul ignore next */
  (cov_1ammevkjvm().b[48][1]++, [])));
  // Initialize WebSocket connection and register agent for Active Inference monitoring
  /* istanbul ignore next */
  cov_1ammevkjvm().s[71]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1ammevkjvm().f[10]++;
    cov_1ammevkjvm().s[72]++;
    if (
    /* istanbul ignore next */
    (cov_1ammevkjvm().b[50][0]++, realTimeUpdates) &&
    /* istanbul ignore next */
    (cov_1ammevkjvm().b[50][1]++, !isConnected)) {
      /* istanbul ignore next */
      cov_1ammevkjvm().b[49][0]++;
      cov_1ammevkjvm().s[73]++;
      connect();
    } else
    /* istanbul ignore next */
    {
      cov_1ammevkjvm().b[49][1]++;
    }
    cov_1ammevkjvm().s[74]++;
    if (isConnected) {
      /* istanbul ignore next */
      cov_1ammevkjvm().b[51][0]++;
      cov_1ammevkjvm().s[75]++;
      registerAgent(agentId);
      /* istanbul ignore next */
      cov_1ammevkjvm().s[76]++;
      startMonitoring();
      /* istanbul ignore next */
      cov_1ammevkjvm().s[77]++;
      getAgentViolations(agentId);
    } else
    /* istanbul ignore next */
    {
      cov_1ammevkjvm().b[51][1]++;
    }
  }, [realTimeUpdates, isConnected, agentId, connect, registerAgent, startMonitoring, getAgentViolations]);
  // Add current position to trail
  /* istanbul ignore next */
  cov_1ammevkjvm().s[78]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1ammevkjvm().f[11]++;
    cov_1ammevkjvm().s[79]++;
    if (showAgentTrail) {
      /* istanbul ignore next */
      cov_1ammevkjvm().b[52][0]++;
      cov_1ammevkjvm().s[80]++;
      setAgentTrail(prev => {
        /* istanbul ignore next */
        cov_1ammevkjvm().f[12]++;
        cov_1ammevkjvm().s[81]++;
        return [...prev.slice(-20), agentPosition];
      });
    } else
    /* istanbul ignore next */
    {
      cov_1ammevkjvm().b[52][1]++;
    }
  }, [agentPosition, showAgentTrail]);
  // D3 radar chart visualization
  /* istanbul ignore next */
  cov_1ammevkjvm().s[82]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1ammevkjvm().f[13]++;
    cov_1ammevkjvm().s[83]++;
    if (
    /* istanbul ignore next */
    (cov_1ammevkjvm().b[54][0]++, !svgRef.current) ||
    /* istanbul ignore next */
    (cov_1ammevkjvm().b[54][1]++, !dimensions)) {
      /* istanbul ignore next */
      cov_1ammevkjvm().b[53][0]++;
      cov_1ammevkjvm().s[84]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1ammevkjvm().b[53][1]++;
    }
    const svg =
    /* istanbul ignore next */
    (cov_1ammevkjvm().s[85]++, _d3.select(svgRef.current));
    /* istanbul ignore next */
    cov_1ammevkjvm().s[86]++;
    svg.selectAll("*").remove();
    const width =
    /* istanbul ignore next */
    (cov_1ammevkjvm().s[87]++, 600);
    const height =
    /* istanbul ignore next */
    (cov_1ammevkjvm().s[88]++, 600);
    const margin =
    /* istanbul ignore next */
    (cov_1ammevkjvm().s[89]++, {
      top: 40,
      right: 40,
      bottom: 40,
      left: 40
    });
    const innerWidth =
    /* istanbul ignore next */
    (cov_1ammevkjvm().s[90]++, width - margin.left - margin.right);
    const innerHeight =
    /* istanbul ignore next */
    (cov_1ammevkjvm().s[91]++, height - margin.top - margin.bottom);
    const radius =
    /* istanbul ignore next */
    (cov_1ammevkjvm().s[92]++, Math.min(innerWidth, innerHeight) / 2);
    const center =
    /* istanbul ignore next */
    (cov_1ammevkjvm().s[93]++, {
      x: width / 2,
      y: height / 2
    });
    // Create main group
    const g =
    /* istanbul ignore next */
    (cov_1ammevkjvm().s[94]++, svg.append("g").attr("transform", `translate(${center.x},${center.y})`));
    // Define the four dimensions for the radar chart
    const radarDimensions =
    /* istanbul ignore next */
    (cov_1ammevkjvm().s[95]++, [{
      name: "Internal States",
      key: "internal",
      value: dimensions.internal_dimension,
      threshold: boundaryThresholds.internal,
      color: "#3b82f6",
      angle: 0
    }, {
      name: "Sensory States",
      key: "sensory",
      value: dimensions.sensory_dimension,
      threshold: boundaryThresholds.sensory,
      color: "#10b981",
      angle: Math.PI / 2
    }, {
      name: "Active States",
      key: "active",
      value: dimensions.active_dimension,
      threshold: boundaryThresholds.active,
      color: "#f59e0b",
      angle: Math.PI
    }, {
      name: "External States",
      key: "external",
      value: dimensions.external_dimension,
      threshold: boundaryThresholds.external,
      color: "#ef4444",
      angle: 3 * Math.PI / 2
    }]);
    // Create scales
    const maxValue =
    /* istanbul ignore next */
    (cov_1ammevkjvm().s[96]++, Math.max(...radarDimensions.map(d => {
      /* istanbul ignore next */
      cov_1ammevkjvm().f[14]++;
      cov_1ammevkjvm().s[97]++;
      return Math.max(d.value, d.threshold);
    }), 10));
    const radiusScale =
    /* istanbul ignore next */
    (cov_1ammevkjvm().s[98]++, _d3.scaleLinear().domain([0, maxValue]).range([0, radius * 0.8]));
    // Draw concentric circles (grid)
    const gridLevels =
    /* istanbul ignore next */
    (cov_1ammevkjvm().s[99]++, 5);
    /* istanbul ignore next */
    cov_1ammevkjvm().s[100]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1ammevkjvm().s[101]++, 1); i <= gridLevels; i++) {
      const gridRadius =
      /* istanbul ignore next */
      (cov_1ammevkjvm().s[102]++, radius * 0.8 * i / gridLevels);
      /* istanbul ignore next */
      cov_1ammevkjvm().s[103]++;
      g.append("circle").attr("cx", 0).attr("cy", 0).attr("r", gridRadius).attr("fill", "none").attr("stroke", "#e5e7eb").attr("stroke-width", 1).attr("opacity", 0.5);
      // Add grid labels
      /* istanbul ignore next */
      cov_1ammevkjvm().s[104]++;
      g.append("text").attr("x", 5).attr("y", -gridRadius).attr("text-anchor", "start").attr("font-size", "10px").attr("fill", "#6b7280").text((maxValue * i / gridLevels).toFixed(1));
    }
    // Draw axis lines and labels
    /* istanbul ignore next */
    cov_1ammevkjvm().s[105]++;
    radarDimensions.forEach(dimension => {
      /* istanbul ignore next */
      cov_1ammevkjvm().f[15]++;
      const x =
      /* istanbul ignore next */
      (cov_1ammevkjvm().s[106]++, Math.cos(dimension.angle - Math.PI / 2) * radius * 0.9);
      const y =
      /* istanbul ignore next */
      (cov_1ammevkjvm().s[107]++, Math.sin(dimension.angle - Math.PI / 2) * radius * 0.9);
      // Axis line
      /* istanbul ignore next */
      cov_1ammevkjvm().s[108]++;
      g.append("line").attr("x1", 0).attr("y1", 0).attr("x2", x).attr("y2", y).attr("stroke", "#9ca3af").attr("stroke-width", 2);
      // Axis label
      const labelX =
      /* istanbul ignore next */
      (cov_1ammevkjvm().s[109]++, Math.cos(dimension.angle - Math.PI / 2) * radius * 1.1);
      const labelY =
      /* istanbul ignore next */
      (cov_1ammevkjvm().s[110]++, Math.sin(dimension.angle - Math.PI / 2) * radius * 1.1);
      /* istanbul ignore next */
      cov_1ammevkjvm().s[111]++;
      g.append("text").attr("x", labelX).attr("y", labelY).attr("text-anchor", "middle").attr("dominant-baseline", "middle").attr("font-size", "12px").attr("font-weight", "bold").attr("fill", dimension.color).text(dimension.name);
    });
    // Draw boundary thresholds
    const boundaryPath =
    /* istanbul ignore next */
    (cov_1ammevkjvm().s[112]++, _d3.line().x(d => {
      /* istanbul ignore next */
      cov_1ammevkjvm().f[16]++;
      cov_1ammevkjvm().s[113]++;
      return Math.cos(d.angle - Math.PI / 2) * radiusScale(d.threshold);
    }).y(d => {
      /* istanbul ignore next */
      cov_1ammevkjvm().f[17]++;
      cov_1ammevkjvm().s[114]++;
      return Math.sin(d.angle - Math.PI / 2) * radiusScale(d.threshold);
    }).curve(_d3.curveLinearClosed));
    // Create boundary path with proper D3 selection
    const boundaryPathData =
    /* istanbul ignore next */
    (cov_1ammevkjvm().s[115]++, boundaryPath(radarDimensions));
    /* istanbul ignore next */
    cov_1ammevkjvm().s[116]++;
    if (boundaryPathData) {
      /* istanbul ignore next */
      cov_1ammevkjvm().b[55][0]++;
      cov_1ammevkjvm().s[117]++;
      g.append("path").attr("d", boundaryPathData).attr("fill", "rgba(239, 68, 68, 0.1)").attr("stroke", "#ef4444").attr("stroke-width", 2).attr("stroke-dasharray", "5,5");
    } else
    /* istanbul ignore next */
    {
      cov_1ammevkjvm().b[55][1]++;
    }
    // Draw current dimensions
    const currentPath =
    /* istanbul ignore next */
    (cov_1ammevkjvm().s[118]++, _d3.line().x(d => {
      /* istanbul ignore next */
      cov_1ammevkjvm().f[18]++;
      cov_1ammevkjvm().s[119]++;
      return Math.cos(d.angle - Math.PI / 2) * radiusScale(d.value);
    }).y(d => {
      /* istanbul ignore next */
      cov_1ammevkjvm().f[19]++;
      cov_1ammevkjvm().s[120]++;
      return Math.sin(d.angle - Math.PI / 2) * radiusScale(d.value);
    }).curve(_d3.curveLinearClosed));
    // Create current dimensions path with proper D3 selection
    const currentPathData =
    /* istanbul ignore next */
    (cov_1ammevkjvm().s[121]++, currentPath(radarDimensions));
    /* istanbul ignore next */
    cov_1ammevkjvm().s[122]++;
    if (currentPathData) {
      /* istanbul ignore next */
      cov_1ammevkjvm().b[56][0]++;
      cov_1ammevkjvm().s[123]++;
      g.append("path").attr("d", currentPathData).attr("fill", "rgba(59, 130, 246, 0.3)").attr("stroke", "#3b82f6").attr("stroke-width", 3);
    } else
    /* istanbul ignore next */
    {
      cov_1ammevkjvm().b[56][1]++;
    }
    // Draw agent position
    cov_1ammevkjvm().s[124]++;
    if (agentPosition) {
      /* istanbul ignore next */
      cov_1ammevkjvm().b[57][0]++;
      const agentData =
      /* istanbul ignore next */
      (cov_1ammevkjvm().s[125]++, [{
        ...radarDimensions[0],
        value: agentPosition.position.internal
      }, {
        ...radarDimensions[1],
        value: agentPosition.position.sensory
      }, {
        ...radarDimensions[2],
        value: agentPosition.position.active
      }, {
        ...radarDimensions[3],
        value: agentPosition.position.external
      }]);
      // Agent position points
      /* istanbul ignore next */
      cov_1ammevkjvm().s[126]++;
      agentData.forEach(d => {
        /* istanbul ignore next */
        cov_1ammevkjvm().f[20]++;
        const x =
        /* istanbul ignore next */
        (cov_1ammevkjvm().s[127]++, Math.cos(d.angle - Math.PI / 2) * radiusScale(d.value));
        const y =
        /* istanbul ignore next */
        (cov_1ammevkjvm().s[128]++, Math.sin(d.angle - Math.PI / 2) * radiusScale(d.value));
        /* istanbul ignore next */
        cov_1ammevkjvm().s[129]++;
        g.append("circle").attr("cx", x).attr("cy", y).attr("r", 6).attr("fill", agentPosition.is_within_boundary ?
        /* istanbul ignore next */
        (cov_1ammevkjvm().b[58][0]++, "#10b981") :
        /* istanbul ignore next */
        (cov_1ammevkjvm().b[58][1]++, "#ef4444")).attr("stroke", "#ffffff").attr("stroke-width", 2).style("cursor", "pointer").on("click", () => {
          /* istanbul ignore next */
          cov_1ammevkjvm().f[21]++;
          cov_1ammevkjvm().s[130]++;
          return setSelectedDimension(d.key);
        });
      });
      // Agent trail
      /* istanbul ignore next */
      cov_1ammevkjvm().s[131]++;
      if (
      /* istanbul ignore next */
      (cov_1ammevkjvm().b[60][0]++, showAgentTrail) &&
      /* istanbul ignore next */
      (cov_1ammevkjvm().b[60][1]++, agentTrail.length > 1)) {
        /* istanbul ignore next */
        cov_1ammevkjvm().b[59][0]++;
        const trailPath =
        /* istanbul ignore next */
        (cov_1ammevkjvm().s[132]++, _d3.line().x(d => {
          /* istanbul ignore next */
          cov_1ammevkjvm().f[22]++;
          const avgX =
          /* istanbul ignore next */
          (cov_1ammevkjvm().s[133]++, (Math.cos(-Math.PI / 2) * radiusScale(d.position.internal) + Math.cos(Math.PI / 2 - Math.PI / 2) * radiusScale(d.position.sensory) + Math.cos(Math.PI - Math.PI / 2) * radiusScale(d.position.active) + Math.cos(3 * Math.PI / 2 - Math.PI / 2) * radiusScale(d.position.external)) / 4);
          /* istanbul ignore next */
          cov_1ammevkjvm().s[134]++;
          return avgX;
        }).y(d => {
          /* istanbul ignore next */
          cov_1ammevkjvm().f[23]++;
          const avgY =
          /* istanbul ignore next */
          (cov_1ammevkjvm().s[135]++, (Math.sin(-Math.PI / 2) * radiusScale(d.position.internal) + Math.sin(Math.PI / 2 - Math.PI / 2) * radiusScale(d.position.sensory) + Math.sin(Math.PI - Math.PI / 2) * radiusScale(d.position.active) + Math.sin(3 * Math.PI / 2 - Math.PI / 2) * radiusScale(d.position.external)) / 4);
          /* istanbul ignore next */
          cov_1ammevkjvm().s[136]++;
          return avgY;
        }).curve(_d3.curveCardinal));
        const trailPathData =
        /* istanbul ignore next */
        (cov_1ammevkjvm().s[137]++, trailPath(agentTrail));
        /* istanbul ignore next */
        cov_1ammevkjvm().s[138]++;
        if (trailPathData) {
          /* istanbul ignore next */
          cov_1ammevkjvm().b[61][0]++;
          cov_1ammevkjvm().s[139]++;
          g.append("path").attr("d", trailPathData).attr("fill", "none").attr("stroke", "#8b5cf6").attr("stroke-width", 2).attr("opacity", 0.6).attr("stroke-dasharray", "3,3");
        } else
        /* istanbul ignore next */
        {
          cov_1ammevkjvm().b[61][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1ammevkjvm().b[59][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1ammevkjvm().b[57][1]++;
    }
    // Add violation indicators
    cov_1ammevkjvm().s[140]++;
    if (
    /* istanbul ignore next */
    (cov_1ammevkjvm().b[63][0]++, showViolations) &&
    /* istanbul ignore next */
    (cov_1ammevkjvm().b[63][1]++, violations.length > 0)) {
      /* istanbul ignore next */
      cov_1ammevkjvm().b[62][0]++;
      const recentViolations =
      /* istanbul ignore next */
      (cov_1ammevkjvm().s[141]++, violations.filter(v => {
        /* istanbul ignore next */
        cov_1ammevkjvm().f[24]++;
        cov_1ammevkjvm().s[142]++;
        return !v.acknowledged;
      }).slice(-5));
      /* istanbul ignore next */
      cov_1ammevkjvm().s[143]++;
      recentViolations.forEach((violation, index) => {
        /* istanbul ignore next */
        cov_1ammevkjvm().f[25]++;
        const angle =
        /* istanbul ignore next */
        (cov_1ammevkjvm().s[144]++, index / recentViolations.length * 2 * Math.PI);
        const x =
        /* istanbul ignore next */
        (cov_1ammevkjvm().s[145]++, Math.cos(angle) * radius * 0.95);
        const y =
        /* istanbul ignore next */
        (cov_1ammevkjvm().s[146]++, Math.sin(angle) * radius * 0.95);
        /* istanbul ignore next */
        cov_1ammevkjvm().s[147]++;
        g.append("circle").attr("cx", x).attr("cy", y).attr("r", 8).attr("fill", "#ef4444").attr("stroke", "#ffffff").attr("stroke-width", 2).style("cursor", "pointer").append("title").text(`Violation: ${violation.violation_type}\nSeverity: ${violation.severity.toFixed(2)}`);
      });
    } else
    /* istanbul ignore next */
    {
      cov_1ammevkjvm().b[62][1]++;
    }
    // Add interaction handlers
    cov_1ammevkjvm().s[148]++;
    g.selectAll("circle").on("mouseover", function (event, d) {
      /* istanbul ignore next */
      cov_1ammevkjvm().f[26]++;
      cov_1ammevkjvm().s[149]++;
      _d3.select(this).attr("r", 8);
    }).on("mouseout", function (event, d) {
      /* istanbul ignore next */
      cov_1ammevkjvm().f[27]++;
      cov_1ammevkjvm().s[150]++;
      _d3.select(this).attr("r", 6);
    });
  }, [dimensions, metrics, violations, agentPosition, boundaryThresholds, showViolations, showAgentTrail, agentTrail, selectedDimension]);
  // Handle threshold changes
  const handleThresholdChange =
  /* istanbul ignore next */
  (cov_1ammevkjvm().s[151]++, (0, _react.useCallback)((dimension, value) => {
    /* istanbul ignore next */
    cov_1ammevkjvm().f[28]++;
    cov_1ammevkjvm().s[152]++;
    if (onBoundaryThresholdChange) {
      /* istanbul ignore next */
      cov_1ammevkjvm().b[64][0]++;
      cov_1ammevkjvm().s[153]++;
      onBoundaryThresholdChange(dimension, value);
    } else
    /* istanbul ignore next */
    {
      cov_1ammevkjvm().b[64][1]++;
    }
  }, [onBoundaryThresholdChange]));
  // Handle violation acknowledgment
  const handleViolationAcknowledge =
  /* istanbul ignore next */
  (cov_1ammevkjvm().s[154]++, (0, _react.useCallback)(violationId => {
    /* istanbul ignore next */
    cov_1ammevkjvm().f[29]++;
    cov_1ammevkjvm().s[155]++;
    if (onViolationAcknowledge) {
      /* istanbul ignore next */
      cov_1ammevkjvm().b[65][0]++;
      cov_1ammevkjvm().s[156]++;
      onViolationAcknowledge(violationId);
    } else
    /* istanbul ignore next */
    {
      cov_1ammevkjvm().b[65][1]++;
    }
  }, [onViolationAcknowledge]));
  const unacknowledgedViolations =
  /* istanbul ignore next */
  (cov_1ammevkjvm().s[157]++, violations.filter(v => {
    /* istanbul ignore next */
    cov_1ammevkjvm().f[30]++;
    cov_1ammevkjvm().s[158]++;
    return !v.acknowledged;
  }));
  const criticalViolations =
  /* istanbul ignore next */
  (cov_1ammevkjvm().s[159]++, violations.filter(v => {
    /* istanbul ignore next */
    cov_1ammevkjvm().f[31]++;
    cov_1ammevkjvm().s[160]++;
    return v.severity >= alertThreshold[0];
  }));
  /* istanbul ignore next */
  cov_1ammevkjvm().s[161]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "space-y-6",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex items-center justify-between",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
          className: "text-lg font-semibold",
          children: "Markov Blanket Visualization"
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
          className: "text-sm text-muted-foreground",
          children: ["Agent ", agentId, " - Real-time boundary monitoring"]
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center space-x-2",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_badge.Badge, {
          variant: agentPosition?.is_within_boundary ?
          /* istanbul ignore next */
          (cov_1ammevkjvm().b[66][0]++, "default") :
          /* istanbul ignore next */
          (cov_1ammevkjvm().b[66][1]++, "destructive"),
          children: agentPosition?.is_within_boundary ?
          /* istanbul ignore next */
          (cov_1ammevkjvm().b[67][0]++, "Within Boundary") :
          /* istanbul ignore next */
          (cov_1ammevkjvm().b[67][1]++, "Boundary Violation")
        }),
        /* istanbul ignore next */
        (cov_1ammevkjvm().b[68][0]++, realTimeUpdates) &&
        /* istanbul ignore next */
        (cov_1ammevkjvm().b[68][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_badge.Badge, {
          variant: "outline",
          children: "Live"
        }))]
      })]
    }),
    /* istanbul ignore next */
    (cov_1ammevkjvm().b[69][0]++, criticalViolations.length > 0) &&
    /* istanbul ignore next */
    (cov_1ammevkjvm().b[69][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_alert.Alert, {
      className: "border-red-200 bg-red-50",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_alert.AlertDescription, {
        children: [criticalViolations.length, " critical boundary violation", criticalViolations.length > 1 ?
        /* istanbul ignore next */
        (cov_1ammevkjvm().b[70][0]++, "s") :
        /* istanbul ignore next */
        (cov_1ammevkjvm().b[70][1]++, ""), " detected"]
      })
    })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "grid grid-cols-1 lg:grid-cols-3 gap-6",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "lg:col-span-2",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
              children: "Boundary Radar Chart"
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
            children: /*#__PURE__*/(0, _jsxruntime.jsx)("svg", {
              ref: svgRef,
              width: "600",
              height: "600",
              className: "w-full h-auto"
            })
          })]
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "space-y-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
              children: "Controls"
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
            className: "space-y-4",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "space-y-2",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
                children: "Alert Threshold"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_slider.Slider, {
                value: alertThreshold,
                onValueChange: setAlertThreshold,
                max: 1,
                min: 0,
                step: 0.1,
                className: "w-full"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "text-xs text-muted-foreground",
                children: alertThreshold[0].toFixed(1)
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "space-y-2",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
                children: "Animation Speed"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_slider.Slider, {
                value: animationSpeed,
                onValueChange: setAnimationSpeed,
                max: 3,
                min: 0.1,
                step: 0.1,
                className: "w-full"
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center space-x-2",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_switch.Switch, {
                checked: showAgentTrail,
                onCheckedChange: setShowAgentTrail
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
                children: "Show Agent Trail"
              })]
            })]
          })]
        }),
        /* istanbul ignore next */
        (cov_1ammevkjvm().b[71][0]++, showMetrics) &&
        /* istanbul ignore next */
        (cov_1ammevkjvm().b[71][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
              children: "Boundary Metrics"
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
            className: "space-y-3",
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "grid grid-cols-2 gap-2 text-sm",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                children: "Free Energy:"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "font-mono",
                children: metrics.free_energy.toFixed(3)
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                children: "Boundary Integrity:"
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "font-mono",
                children: [(metrics.boundary_integrity * 100).toFixed(1), "%"]
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                children: "KL Divergence:"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "font-mono",
                children: metrics.kl_divergence.toFixed(3)
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                children: "Violations:"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "font-mono",
                children: metrics.violation_count
              })]
            })
          })]
        })),
        /* istanbul ignore next */
        (cov_1ammevkjvm().b[72][0]++, showViolations) &&
        /* istanbul ignore next */
        (cov_1ammevkjvm().b[72][1]++, unacknowledgedViolations.length > 0) &&
        /* istanbul ignore next */
        (cov_1ammevkjvm().b[72][2]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
              children: "Recent Violations"
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
            children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "space-y-2",
              children: unacknowledgedViolations.slice(0, 3).map(violation => {
                /* istanbul ignore next */
                cov_1ammevkjvm().f[32]++;
                cov_1ammevkjvm().s[162]++;
                return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: "p-2 bg-red-50 rounded border",
                  children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center justify-between",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "text-sm",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                        className: "font-medium",
                        children: violation.violation_type
                      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                        className: "text-xs text-muted-foreground",
                        children: ["Severity: ", violation.severity.toFixed(2)]
                      })]
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
                      size: "sm",
                      variant: "outline",
                      onClick: () => {
                        /* istanbul ignore next */
                        cov_1ammevkjvm().f[33]++;
                        cov_1ammevkjvm().s[163]++;
                        return handleViolationAcknowledge(violation.event_id);
                      },
                      children: "Acknowledge"
                    })]
                  })
                }, violation.event_id);
              })
            })
          })]
        }))]
      })]
    })]
  });
};
const _default =
/* istanbul ignore next */
(cov_1ammevkjvm().s[164]++, MarkovBlanketVisualization);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
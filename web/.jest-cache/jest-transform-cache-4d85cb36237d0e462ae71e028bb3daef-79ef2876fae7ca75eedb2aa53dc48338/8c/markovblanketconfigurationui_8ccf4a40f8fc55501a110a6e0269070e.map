{"version":3,"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/components/markov-blanket-configuration-ui.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect, useCallback, useMemo } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"./ui/card\";\nimport { Button } from \"./ui/button\";\nimport { Badge } from \"./ui/badge\";\nimport { Switch } from \"./ui/switch\";\nimport { Label } from \"./ui/label\";\nimport { Input } from \"./ui/input\";\nimport { Textarea } from \"./ui/textarea\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"./ui/select\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"./ui/tabs\";\nimport { ScrollArea } from \"./ui/scroll-area\";\nimport { Separator } from \"./ui/separator\";\nimport { Alert, AlertDescription, AlertTitle } from \"./ui/alert\";\nimport { Slider } from \"./ui/slider\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"./ui/dialog\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"./ui/table\";\nimport { Checkbox } from \"./ui/checkbox\";\nimport { Calendar } from \"./ui/calendar\";\nimport { Popover, PopoverContent, PopoverTrigger } from \"./ui/popover\";\nimport {\n  Settings,\n  Save,\n  Download,\n  Upload,\n  History,\n  AlertTriangle,\n  CheckCircle2,\n  X,\n  Filter,\n  Search,\n  Calendar as CalendarIcon,\n  FileText,\n  Database,\n  Shield,\n  Eye,\n  Edit,\n  Trash2,\n  RotateCcw,\n  ExternalLink,\n} from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\nimport { format } from \"date-fns\";\n\n// Import existing components and utilities\nimport { AgentTemplate, AGENT_TEMPLATES } from \"./ui/agent-template-selector\";\nimport {\n  auditLogger,\n  AuditLogEntry,\n  AuditLogFilter,\n  AuditLogStats,\n  ExportOptions,\n  logBoundaryEdit,\n  logTemplateSelection,\n  logThresholdChange,\n} from \"@/lib/audit-logger\";\n\n// Boundary configuration interfaces\nexport interface BoundaryConfiguration {\n  agentId: string;\n  templateId: string;\n  dimensions: {\n    internal: {\n      threshold: number;\n      precision: number;\n      adaptiveScaling: boolean;\n      mathematicalConstraints: string[];\n    };\n    sensory: {\n      threshold: number;\n      precision: number;\n      modalityWeights: Record<string, number>;\n      noiseFiltering: boolean;\n    };\n    active: {\n      threshold: number;\n      precision: number;\n      actionSpaceSize: number;\n      policyConstraints: string[];\n    };\n    external: {\n      threshold: number;\n      precision: number;\n      environmentComplexity: number;\n      boundaryRigidity: number;\n    };\n  };\n  monitoring: {\n    enabled: boolean;\n    alertThresholds: {\n      warning: number;\n      critical: number;\n    };\n    violationHandling: {\n      autoMitigation: boolean;\n      escalationRules: string[];\n      notificationChannels: string[];\n    };\n  };\n  compliance: {\n    framework: string;\n    auditingEnabled: boolean;\n    retentionPeriod: number;\n    encryptionRequired: boolean;\n  };\n  metadata: {\n    createdAt: string;\n    updatedAt: string;\n    version: number;\n    description?: string;\n    tags: string[];\n  };\n}\n\nexport interface ConfigurationTemplate {\n  id: string;\n  name: string;\n  description: string;\n  category: string;\n  configuration: Partial<BoundaryConfiguration>;\n  isValidated: boolean;\n  expertApproved: boolean;\n  usageCount: number;\n  lastUsed?: string;\n}\n\ninterface MarkovBlanketConfigurationUIProps {\n  agentId?: string;\n  initialConfiguration?: BoundaryConfiguration;\n  onConfigurationChange?: (config: BoundaryConfiguration) => void;\n  onSave?: (config: BoundaryConfiguration) => Promise<void>;\n  className?: string;\n  readOnly?: boolean;\n  showAuditLog?: boolean;\n  showTemplateSelector?: boolean;\n  enableExport?: boolean;\n}\n\nexport const MarkovBlanketConfigurationUI: React.FC<\n  MarkovBlanketConfigurationUIProps\n> = ({\n  agentId = \"default\",\n  initialConfiguration,\n  onConfigurationChange,\n  onSave,\n  className,\n  readOnly = false,\n  showAuditLog = true,\n  showTemplateSelector = true,\n  enableExport = true,\n}) => {\n  // Configuration state\n  const [configuration, setConfiguration] = useState<BoundaryConfiguration>(\n    initialConfiguration || getDefaultConfiguration(agentId),\n  );\n  const [selectedTemplate, setSelectedTemplate] =\n    useState<AgentTemplate | null>(null);\n  const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n\n  // Audit log state\n  const [auditEntries, setAuditEntries] = useState<AuditLogEntry[]>([]);\n  const [auditStats, setAuditStats] = useState<AuditLogStats | null>(null);\n  const [auditFilter, setAuditFilter] = useState<AuditLogFilter>({\n    agentId,\n    limit: 50,\n  });\n  const [isLoadingAudit, setIsLoadingAudit] = useState(false);\n\n  // UI state\n  const [activeTab, setActiveTab] = useState(\"boundaries\");\n  const [showAdvancedSettings, setShowAdvancedSettings] = useState(false);\n  const [isExportDialogOpen, setIsExportDialogOpen] = useState(false);\n  const [selectedAuditEntries, setSelectedAuditEntries] = useState<string[]>(\n    [],\n  );\n  const [auditSearchText, setAuditSearchText] = useState(\"\");\n  const [dateRange, setDateRange] = useState<{ start?: Date; end?: Date }>({});\n\n  // Load audit log data\n  const loadAuditData = useCallback(async () => {\n    if (!showAuditLog) return;\n\n    setIsLoadingAudit(true);\n    try {\n      const [entries, stats] = await Promise.all([\n        auditLogger.getEntries(auditFilter),\n        auditLogger.getStats(),\n      ]);\n      setAuditEntries(entries);\n      setAuditStats(stats);\n    } catch (error) {\n      console.error(\"Failed to load audit data:\", error);\n    } finally {\n      setIsLoadingAudit(false);\n    }\n  }, [auditFilter, showAuditLog]);\n\n  useEffect(() => {\n    loadAuditData();\n  }, [loadAuditData]);\n\n  // Handle configuration changes\n  const handleConfigurationChange = useCallback(\n    (path: string, value: any, logChange: boolean = true) => {\n      if (readOnly) return;\n\n      setConfiguration((prev) => {\n        const newConfig = { ...prev };\n        const keys = path.split(\".\");\n        let current: any = newConfig;\n\n        // Navigate to the parent of the target property\n        for (let i = 0; i < keys.length - 1; i++) {\n          if (!current[keys[i]]) {\n            current[keys[i]] = {};\n          }\n          current = current[keys[i]];\n        }\n\n        const oldValue = current[keys[keys.length - 1]];\n        current[keys[keys.length - 1]] = value;\n\n        // Update metadata\n        newConfig.metadata.updatedAt = new Date().toISOString();\n        newConfig.metadata.version += 1;\n\n        // Log the change if requested\n        if (logChange && oldValue !== value) {\n          const description = `Updated ${path} from ${JSON.stringify(oldValue)} to ${JSON.stringify(value)}`;\n          logBoundaryEdit(agentId, path, oldValue, value, description)\n            .then(() => loadAuditData())\n            .catch(console.error);\n        }\n\n        setHasUnsavedChanges(true);\n        onConfigurationChange?.(newConfig);\n        return newConfig;\n      });\n    },\n    [agentId, readOnly, onConfigurationChange, loadAuditData],\n  );\n\n  // Handle template selection\n  const handleTemplateSelection = useCallback(\n    async (template: AgentTemplate) => {\n      if (readOnly) return;\n\n      setSelectedTemplate(template);\n\n      // Apply template configuration\n      const templateConfig = createConfigurationFromTemplate(template, agentId);\n      setConfiguration(templateConfig);\n      setHasUnsavedChanges(true);\n\n      // Log template selection\n      try {\n        await logTemplateSelection(\n          agentId,\n          template.id,\n          template,\n          `Applied ${template.name} template to agent ${agentId}`,\n        );\n        await loadAuditData();\n      } catch (error) {\n        console.error(\"Failed to log template selection:\", error);\n      }\n\n      onConfigurationChange?.(templateConfig);\n    },\n    [agentId, readOnly, onConfigurationChange, loadAuditData],\n  );\n\n  // Handle save\n  const handleSave = useCallback(async () => {\n    if (readOnly || !onSave) return;\n\n    setIsSaving(true);\n    try {\n      await onSave(configuration);\n      setHasUnsavedChanges(false);\n\n      // Log save operation\n      await auditLogger.logChange(\n        \"configuration_update\",\n        \"agent\",\n        agentId,\n        `Saved configuration for agent ${agentId}`,\n        { after: configuration },\n        { agentId },\n        { riskLevel: \"medium\", requiresApproval: true },\n      );\n\n      await loadAuditData();\n    } catch (error) {\n      console.error(\"Failed to save configuration:\", error);\n    } finally {\n      setIsSaving(false);\n    }\n  }, [configuration, agentId, onSave, readOnly, loadAuditData]);\n\n  // Handle audit log export\n  const handleExportAuditLog = useCallback(\n    async (options: ExportOptions) => {\n      try {\n        const blob = await auditLogger.exportData({\n          ...options,\n          filters: auditFilter,\n        });\n\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement(\"a\");\n        a.href = url;\n        a.download = `audit-log-${agentId}-${format(new Date(), \"yyyy-MM-dd\")}.${options.format}`;\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n        URL.revokeObjectURL(url);\n\n        // Log export operation\n        await auditLogger.logChange(\n          \"export_data\",\n          \"system\",\n          `audit_log_${agentId}`,\n          `Exported audit log for agent ${agentId} in ${options.format} format`,\n          {\n            after: { format: options.format, entryCount: auditEntries.length },\n          },\n          { agentId },\n          { riskLevel: \"medium\" },\n        );\n\n        setIsExportDialogOpen(false);\n      } catch (error) {\n        console.error(\"Failed to export audit log:\", error);\n      }\n    },\n    [auditFilter, agentId, auditEntries.length],\n  );\n\n  // Filtered audit entries for display\n  const filteredAuditEntries = useMemo(() => {\n    let filtered = auditEntries;\n\n    if (auditSearchText) {\n      const searchLower = auditSearchText.toLowerCase();\n      filtered = filtered.filter(\n        (entry) =>\n          entry.description.toLowerCase().includes(searchLower) ||\n          entry.operationType.toLowerCase().includes(searchLower) ||\n          entry.entityId.toLowerCase().includes(searchLower),\n      );\n    }\n\n    return filtered;\n  }, [auditEntries, auditSearchText]);\n\n  return (\n    <div className={cn(\"space-y-6\", className)}>\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h2 className=\"text-2xl font-bold\">Markov Blanket Configuration</h2>\n          <p className=\"text-muted-foreground\">\n            Configure agent boundaries, select templates, and review audit logs\n          </p>\n        </div>\n\n        <div className=\"flex items-center space-x-2\">\n          {hasUnsavedChanges && (\n            <Badge\n              variant=\"outline\"\n              className=\"text-orange-600 border-orange-200\"\n            >\n              Unsaved Changes\n            </Badge>\n          )}\n\n          {!readOnly && (\n            <Button\n              onClick={handleSave}\n              disabled={!hasUnsavedChanges || isSaving}\n              className=\"flex items-center space-x-2\"\n            >\n              <Save className=\"h-4 w-4\" />\n              <span>{isSaving ? \"Saving...\" : \"Save Configuration\"}</span>\n            </Button>\n          )}\n        </div>\n      </div>\n\n      {/* Main tabs */}\n      <Tabs\n        value={activeTab}\n        onValueChange={setActiveTab}\n        className=\"space-y-4\"\n      >\n        <TabsList className=\"grid w-full grid-cols-4\">\n          <TabsTrigger\n            value=\"boundaries\"\n            className=\"flex items-center space-x-2\"\n          >\n            <Settings className=\"h-4 w-4\" />\n            <span>Boundaries</span>\n          </TabsTrigger>\n          {showTemplateSelector && (\n            <TabsTrigger\n              value=\"templates\"\n              className=\"flex items-center space-x-2\"\n            >\n              <FileText className=\"h-4 w-4\" />\n              <span>Templates</span>\n            </TabsTrigger>\n          )}\n          {showAuditLog && (\n            <TabsTrigger value=\"audit\" className=\"flex items-center space-x-2\">\n              <History className=\"h-4 w-4\" />\n              <span>Audit Log</span>\n            </TabsTrigger>\n          )}\n          <TabsTrigger\n            value=\"compliance\"\n            className=\"flex items-center space-x-2\"\n          >\n            <Shield className=\"h-4 w-4\" />\n            <span>Compliance</span>\n          </TabsTrigger>\n        </TabsList>\n\n        {/* Boundary Configuration Tab */}\n        <TabsContent value=\"boundaries\" className=\"space-y-6\">\n          <BoundaryConfigurationPanel\n            configuration={configuration}\n            onChange={handleConfigurationChange}\n            readOnly={readOnly}\n            showAdvanced={showAdvancedSettings}\n            onShowAdvancedChange={setShowAdvancedSettings}\n          />\n        </TabsContent>\n\n        {/* Template Selection Tab */}\n        {showTemplateSelector && (\n          <TabsContent value=\"templates\" className=\"space-y-6\">\n            <TemplateSelectionPanel\n              selectedTemplate={selectedTemplate}\n              onTemplateSelect={handleTemplateSelection}\n              readOnly={readOnly}\n            />\n          </TabsContent>\n        )}\n\n        {/* Audit Log Tab */}\n        {showAuditLog && (\n          <TabsContent value=\"audit\" className=\"space-y-6\">\n            <AuditLogPanel\n              entries={filteredAuditEntries}\n              stats={auditStats}\n              filter={auditFilter}\n              onFilterChange={setAuditFilter}\n              searchText={auditSearchText}\n              onSearchTextChange={setAuditSearchText}\n              selectedEntries={selectedAuditEntries}\n              onSelectedEntriesChange={setSelectedAuditEntries}\n              isLoading={isLoadingAudit}\n              onExport={enableExport ? handleExportAuditLog : undefined}\n              onRefresh={loadAuditData}\n            />\n          </TabsContent>\n        )}\n\n        {/* Compliance Tab */}\n        <TabsContent value=\"compliance\" className=\"space-y-6\">\n          <CompliancePanel\n            configuration={configuration}\n            onChange={handleConfigurationChange}\n            auditStats={auditStats}\n            readOnly={readOnly}\n          />\n        </TabsContent>\n      </Tabs>\n\n      {/* Export Dialog */}\n      <ExportDialog\n        isOpen={isExportDialogOpen}\n        onClose={() => setIsExportDialogOpen(false)}\n        onExport={handleExportAuditLog}\n        entryCount={filteredAuditEntries.length}\n      />\n    </div>\n  );\n};\n\n// Helper functions\nfunction getDefaultConfiguration(agentId: string): BoundaryConfiguration {\n  return {\n    agentId,\n    templateId: \"default\",\n    dimensions: {\n      internal: {\n        threshold: 0.8,\n        precision: 16.0,\n        adaptiveScaling: true,\n        mathematicalConstraints: [\"stochastic_matrix\", \"probability_simplex\"],\n      },\n      sensory: {\n        threshold: 0.8,\n        precision: 16.0,\n        modalityWeights: { visual: 0.4, auditory: 0.3, tactile: 0.3 },\n        noiseFiltering: true,\n      },\n      active: {\n        threshold: 0.8,\n        precision: 16.0,\n        actionSpaceSize: 8,\n        policyConstraints: [\"action_bounds\", \"energy_conservation\"],\n      },\n      external: {\n        threshold: 0.8,\n        precision: 16.0,\n        environmentComplexity: 0.5,\n        boundaryRigidity: 0.7,\n      },\n    },\n    monitoring: {\n      enabled: true,\n      alertThresholds: {\n        warning: 0.7,\n        critical: 0.5,\n      },\n      violationHandling: {\n        autoMitigation: false,\n        escalationRules: [\"notify_admin\", \"log_violation\"],\n        notificationChannels: [\"dashboard\", \"email\"],\n      },\n    },\n    compliance: {\n      framework: \"ADR-011\",\n      auditingEnabled: true,\n      retentionPeriod: 365,\n      encryptionRequired: true,\n    },\n    metadata: {\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString(),\n      version: 1,\n      tags: [],\n    },\n  };\n}\n\nfunction createConfigurationFromTemplate(\n  template: AgentTemplate,\n  agentId: string,\n): BoundaryConfiguration {\n  const defaultConfig = getDefaultConfiguration(agentId);\n\n  return {\n    ...defaultConfig,\n    templateId: template.id,\n    dimensions: {\n      ...defaultConfig.dimensions,\n      internal: {\n        ...defaultConfig.dimensions.internal,\n        precision: template.mathematicalFoundation.defaultPrecision.state,\n      },\n      sensory: {\n        ...defaultConfig.dimensions.sensory,\n        precision: template.mathematicalFoundation.defaultPrecision.sensory,\n      },\n      active: {\n        ...defaultConfig.dimensions.active,\n        precision: template.mathematicalFoundation.defaultPrecision.policy,\n        actionSpaceSize: template.mathematicalFoundation.actionSpaces,\n      },\n    },\n    metadata: {\n      ...defaultConfig.metadata,\n      description: `Configuration based on ${template.name} template`,\n    },\n  };\n}\n\n// Sub-components (to be implemented in separate files or as part of this component)\nconst BoundaryConfigurationPanel: React.FC<{\n  configuration: BoundaryConfiguration;\n  onChange: (path: string, value: any) => void;\n  readOnly: boolean;\n  showAdvanced: boolean;\n  onShowAdvancedChange: (show: boolean) => void;\n}> = ({\n  configuration,\n  onChange,\n  readOnly,\n  showAdvanced,\n  onShowAdvancedChange,\n}) => {\n  return (\n    <div className=\"space-y-6\">\n      {/* Advanced settings toggle */}\n      <div className=\"flex items-center justify-between\">\n        <h3 className=\"text-lg font-semibold\">Boundary Dimensions</h3>\n        <div className=\"flex items-center space-x-2\">\n          <Switch\n            checked={showAdvanced}\n            onCheckedChange={onShowAdvancedChange}\n            disabled={readOnly}\n          />\n          <Label>Advanced Settings</Label>\n        </div>\n      </div>\n\n      {/* Dimension configurations */}\n      {Object.entries(configuration.dimensions).map(([dimension, config]) => (\n        <Card key={dimension}>\n          <CardHeader>\n            <CardTitle className=\"capitalize\">{dimension} Boundary</CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label>Threshold</Label>\n                <Slider\n                  value={[config.threshold]}\n                  onValueChange={([value]) =>\n                    onChange(`dimensions.${dimension}.threshold`, value)\n                  }\n                  min={0}\n                  max={1}\n                  step={0.01}\n                  disabled={readOnly}\n                  className=\"w-full\"\n                />\n                <div className=\"text-sm text-muted-foreground\">\n                  Current: {config.threshold.toFixed(2)}\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label>Precision</Label>\n                <Input\n                  type=\"number\"\n                  value={config.precision}\n                  onChange={(e) =>\n                    onChange(\n                      `dimensions.${dimension}.precision`,\n                      parseFloat(e.target.value),\n                    )\n                  }\n                  disabled={readOnly}\n                  min={0.1}\n                  max={1000}\n                  step={0.1}\n                />\n              </div>\n            </div>\n\n            {showAdvanced && (\n              <div className=\"space-y-4 pt-4 border-t\">\n                {/* Dimension-specific advanced settings */}\n                {dimension === \"sensory\" && (\n                  <div className=\"space-y-2\">\n                    <Label>Modality Weights</Label>\n                    {Object.entries(\n                      \"modalityWeights\" in config\n                        ? config.modalityWeights || {}\n                        : {},\n                    ).map(([modality, weight]) => (\n                      <div\n                        key={modality}\n                        className=\"flex items-center space-x-2\"\n                      >\n                        <Label className=\"capitalize w-20\">{modality}</Label>\n                        <Slider\n                          value={[weight as number]}\n                          onValueChange={([value]) =>\n                            onChange(\n                              `dimensions.${dimension}.modalityWeights.${modality}`,\n                              value,\n                            )\n                          }\n                          min={0}\n                          max={1}\n                          step={0.01}\n                          disabled={readOnly}\n                          className=\"flex-1\"\n                        />\n                        <span className=\"text-sm w-12\">\n                          {(weight as number).toFixed(2)}\n                        </span>\n                      </div>\n                    ))}\n                  </div>\n                )}\n\n                {dimension === \"active\" && (\n                  <div className=\"space-y-2\">\n                    <Label>Action Space Size</Label>\n                    <Input\n                      type=\"number\"\n                      value={\n                        \"actionSpaceSize\" in config ? config.actionSpaceSize : 8\n                      }\n                      onChange={(e) =>\n                        onChange(\n                          `dimensions.${dimension}.actionSpaceSize`,\n                          parseInt(e.target.value),\n                        )\n                      }\n                      disabled={readOnly}\n                      min={1}\n                      max={64}\n                    />\n                  </div>\n                )}\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      ))}\n    </div>\n  );\n};\n\nconst TemplateSelectionPanel: React.FC<{\n  selectedTemplate: AgentTemplate | null;\n  onTemplateSelect: (template: AgentTemplate) => void;\n  readOnly: boolean;\n}> = ({ selectedTemplate, onTemplateSelect, readOnly }) => {\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h3 className=\"text-lg font-semibold\">Available Templates</h3>\n        <p className=\"text-muted-foreground\">\n          Select a validated template to apply predefined boundary\n          configurations\n        </p>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        {AGENT_TEMPLATES.map((template) => (\n          <Card\n            key={template.id}\n            className={cn(\n              \"cursor-pointer transition-colors\",\n              selectedTemplate?.id === template.id && \"ring-2 ring-primary\",\n              readOnly && \"opacity-50 cursor-not-allowed\",\n            )}\n            onClick={() => !readOnly && onTemplateSelect(template)}\n          >\n            <CardHeader>\n              <div className=\"flex items-center justify-between\">\n                <CardTitle className=\"flex items-center space-x-2\">\n                  {template.icon}\n                  <span>{template.name}</span>\n                </CardTitle>\n                <Badge variant=\"outline\">{template.complexity}</Badge>\n              </div>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-sm text-muted-foreground mb-4\">\n                {template.description}\n              </p>\n\n              <div className=\"grid grid-cols-2 gap-2 text-xs\">\n                <div>\n                  <span className=\"font-medium\">States:</span>{\" \"}\n                  {template.mathematicalFoundation.beliefsStates}\n                </div>\n                <div>\n                  <span className=\"font-medium\">Actions:</span>{\" \"}\n                  {template.mathematicalFoundation.actionSpaces}\n                </div>\n                <div>\n                  <span className=\"font-medium\">Modalities:</span>{\" \"}\n                  {template.mathematicalFoundation.observationModalities}\n                </div>\n                <div>\n                  <span className=\"font-medium\">Precision:</span>{\" \"}\n                  {template.mathematicalFoundation.defaultPrecision.sensory}\n                </div>\n              </div>\n\n              {template.expertRecommendation && (\n                <div className=\"mt-4 p-2 bg-blue-50 border border-blue-200 rounded-lg\">\n                  <p className=\"text-xs text-blue-800\">\n                    <span className=\"font-semibold\">Expert:</span>{\" \"}\n                    {template.expertRecommendation}\n                  </p>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst AuditLogPanel: React.FC<{\n  entries: AuditLogEntry[];\n  stats: AuditLogStats | null;\n  filter: AuditLogFilter;\n  onFilterChange: (filter: AuditLogFilter) => void;\n  searchText: string;\n  onSearchTextChange: (text: string) => void;\n  selectedEntries: string[];\n  onSelectedEntriesChange: (entries: string[]) => void;\n  isLoading: boolean;\n  onExport?: (options: ExportOptions) => void;\n  onRefresh: () => void;\n}> = ({\n  entries,\n  stats,\n  filter,\n  onFilterChange,\n  searchText,\n  onSearchTextChange,\n  selectedEntries,\n  onSelectedEntriesChange,\n  isLoading,\n  onExport,\n  onRefresh,\n}) => {\n  return (\n    <div className=\"space-y-6\">\n      {/* Stats overview */}\n      {stats && (\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          <Card>\n            <CardContent className=\"p-4\">\n              <div className=\"text-2xl font-bold\">{stats.totalEntries}</div>\n              <div className=\"text-sm text-muted-foreground\">Total Entries</div>\n            </CardContent>\n          </Card>\n          <Card>\n            <CardContent className=\"p-4\">\n              <div className=\"text-2xl font-bold text-orange-600\">\n                {stats.complianceMetrics.totalHighRiskOperations}\n              </div>\n              <div className=\"text-sm text-muted-foreground\">\n                High Risk Operations\n              </div>\n            </CardContent>\n          </Card>\n          <Card>\n            <CardContent className=\"p-4\">\n              <div className=\"text-2xl font-bold text-red-600\">\n                {stats.complianceMetrics.pendingApprovals}\n              </div>\n              <div className=\"text-sm text-muted-foreground\">\n                Pending Approvals\n              </div>\n            </CardContent>\n          </Card>\n          <Card>\n            <CardContent className=\"p-4\">\n              <div className=\"text-2xl font-bold text-green-600\">\n                {stats.complianceMetrics.integrityViolations}\n              </div>\n              <div className=\"text-sm text-muted-foreground\">\n                Integrity Violations\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      )}\n\n      {/* Filters and search */}\n      <div className=\"flex items-center space-x-4\">\n        <div className=\"flex-1\">\n          <div className=\"relative\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n            <Input\n              placeholder=\"Search audit entries...\"\n              value={searchText}\n              onChange={(e) => onSearchTextChange(e.target.value)}\n              className=\"pl-10\"\n            />\n          </div>\n        </div>\n\n        <Button variant=\"outline\" onClick={onRefresh} disabled={isLoading}>\n          <RotateCcw className={cn(\"h-4 w-4\", isLoading && \"animate-spin\")} />\n        </Button>\n\n        {onExport && (\n          <Button\n            variant=\"outline\"\n            onClick={() =>\n              onExport({\n                format: \"csv\",\n                includeMetadata: true,\n                includeIntegrityData: true,\n              })\n            }\n          >\n            <Download className=\"h-4 w-4 mr-2\" />\n            Export\n          </Button>\n        )}\n      </div>\n\n      {/* Audit entries table */}\n      <Card>\n        <CardContent className=\"p-0\">\n          <Table>\n            <TableHeader>\n              <TableRow>\n                <TableHead className=\"w-12\">\n                  <Checkbox\n                    checked={\n                      selectedEntries.length === entries.length &&\n                      entries.length > 0\n                    }\n                    onCheckedChange={(checked) => {\n                      if (checked) {\n                        onSelectedEntriesChange(entries.map((e) => e.id));\n                      } else {\n                        onSelectedEntriesChange([]);\n                      }\n                    }}\n                  />\n                </TableHead>\n                <TableHead>Timestamp</TableHead>\n                <TableHead>Operation</TableHead>\n                <TableHead>Entity</TableHead>\n                <TableHead>Description</TableHead>\n                <TableHead>Risk Level</TableHead>\n                <TableHead>Success</TableHead>\n                <TableHead className=\"w-12\">Actions</TableHead>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {entries.map((entry) => (\n                <TableRow key={entry.id}>\n                  <TableCell>\n                    <Checkbox\n                      checked={selectedEntries.includes(entry.id)}\n                      onCheckedChange={(checked) => {\n                        if (checked) {\n                          onSelectedEntriesChange([\n                            ...selectedEntries,\n                            entry.id,\n                          ]);\n                        } else {\n                          onSelectedEntriesChange(\n                            selectedEntries.filter((id) => id !== entry.id),\n                          );\n                        }\n                      }}\n                    />\n                  </TableCell>\n                  <TableCell className=\"text-sm\">\n                    {format(new Date(entry.timestamp), \"MMM dd, yyyy HH:mm:ss\")}\n                  </TableCell>\n                  <TableCell>\n                    <Badge variant=\"outline\">{entry.operationType}</Badge>\n                  </TableCell>\n                  <TableCell>\n                    <div className=\"text-sm\">\n                      <div className=\"font-medium\">{entry.entityType}</div>\n                      <div className=\"text-muted-foreground\">\n                        {entry.entityId}\n                      </div>\n                    </div>\n                  </TableCell>\n                  <TableCell\n                    className=\"max-w-xs truncate\"\n                    title={entry.description}\n                  >\n                    {entry.description}\n                  </TableCell>\n                  <TableCell>\n                    <Badge\n                      variant={\n                        entry.compliance.riskLevel === \"critical\"\n                          ? \"destructive\"\n                          : entry.compliance.riskLevel === \"high\"\n                            ? \"destructive\"\n                            : entry.compliance.riskLevel === \"medium\"\n                              ? \"secondary\"\n                              : \"outline\"\n                      }\n                    >\n                      {entry.compliance.riskLevel}\n                    </Badge>\n                  </TableCell>\n                  <TableCell>\n                    {entry.metadata.success ? (\n                      <CheckCircle2 className=\"h-4 w-4 text-green-600\" />\n                    ) : (\n                      <X className=\"h-4 w-4 text-red-600\" />\n                    )}\n                  </TableCell>\n                  <TableCell>\n                    <Button variant=\"ghost\" size=\"sm\">\n                      <Eye className=\"h-4 w-4\" />\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nconst CompliancePanel: React.FC<{\n  configuration: BoundaryConfiguration;\n  onChange: (path: string, value: any) => void;\n  auditStats: AuditLogStats | null;\n  readOnly: boolean;\n}> = ({ configuration, onChange, auditStats, readOnly }) => {\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h3 className=\"text-lg font-semibold\">Compliance Configuration</h3>\n        <p className=\"text-muted-foreground\">\n          Configure compliance frameworks and audit settings\n        </p>\n      </div>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>Framework Settings</CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label>Compliance Framework</Label>\n              <Select\n                value={configuration.compliance.framework}\n                onValueChange={(value) =>\n                  onChange(\"compliance.framework\", value)\n                }\n                disabled={readOnly}\n              >\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"ADR-011\">ADR-011</SelectItem>\n                  <SelectItem value=\"GDPR\">GDPR</SelectItem>\n                  <SelectItem value=\"HIPAA\">HIPAA</SelectItem>\n                  <SelectItem value=\"SOX\">SOX</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label>Retention Period (days)</Label>\n              <Input\n                type=\"number\"\n                value={configuration.compliance.retentionPeriod}\n                onChange={(e) =>\n                  onChange(\n                    \"compliance.retentionPeriod\",\n                    parseInt(e.target.value),\n                  )\n                }\n                disabled={readOnly}\n                min={30}\n                max={2555} // 7 years\n              />\n            </div>\n          </div>\n\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center space-x-2\">\n              <Switch\n                checked={configuration.compliance.auditingEnabled}\n                onCheckedChange={(checked) =>\n                  onChange(\"compliance.auditingEnabled\", checked)\n                }\n                disabled={readOnly}\n              />\n              <Label>Enable Audit Logging</Label>\n            </div>\n\n            <div className=\"flex items-center space-x-2\">\n              <Switch\n                checked={configuration.compliance.encryptionRequired}\n                onCheckedChange={(checked) =>\n                  onChange(\"compliance.encryptionRequired\", checked)\n                }\n                disabled={readOnly}\n              />\n              <Label>Require Encryption</Label>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {auditStats && (\n        <Card>\n          <CardHeader>\n            <CardTitle>Compliance Metrics</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <div className=\"text-sm text-muted-foreground\">\n                  High Risk Operations\n                </div>\n                <div className=\"text-2xl font-bold text-orange-600\">\n                  {auditStats.complianceMetrics.totalHighRiskOperations}\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <div className=\"text-sm text-muted-foreground\">\n                  Pending Approvals\n                </div>\n                <div className=\"text-2xl font-bold text-red-600\">\n                  {auditStats.complianceMetrics.pendingApprovals}\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <div className=\"text-sm text-muted-foreground\">\n                  Integrity Violations\n                </div>\n                <div className=\"text-2xl font-bold text-red-600\">\n                  {auditStats.complianceMetrics.integrityViolations}\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <div className=\"text-sm text-muted-foreground\">\n                  Avg Operation Duration\n                </div>\n                <div className=\"text-2xl font-bold\">\n                  {auditStats.complianceMetrics.averageOperationDuration.toFixed(\n                    1,\n                  )}\n                  ms\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n};\n\nconst ExportDialog: React.FC<{\n  isOpen: boolean;\n  onClose: () => void;\n  onExport: (options: ExportOptions) => void;\n  entryCount: number;\n}> = ({ isOpen, onClose, onExport, entryCount }) => {\n  const [format, setFormat] = useState<\"json\" | \"csv\" | \"pdf\" | \"xlsx\">(\"csv\");\n  const [includeMetadata, setIncludeMetadata] = useState(true);\n  const [includeIntegrityData, setIncludeIntegrityData] = useState(false);\n  const [reportTitle, setReportTitle] = useState(\"Audit Log Report\");\n\n  const handleExport = () => {\n    onExport({\n      format,\n      includeMetadata,\n      includeIntegrityData,\n      reportTitle,\n    });\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent>\n        <DialogHeader>\n          <DialogTitle>Export Audit Log</DialogTitle>\n          <DialogDescription>\n            Export {entryCount} audit log entries in your preferred format\n          </DialogDescription>\n        </DialogHeader>\n\n        <div className=\"space-y-4\">\n          <div className=\"space-y-2\">\n            <Label>Export Format</Label>\n            <Select\n              value={format}\n              onValueChange={(value: any) => setFormat(value)}\n            >\n              <SelectTrigger>\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"csv\">CSV</SelectItem>\n                <SelectItem value=\"json\">JSON</SelectItem>\n                <SelectItem value=\"xlsx\">Excel (XLSX)</SelectItem>\n                <SelectItem value=\"pdf\">PDF</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label>Report Title</Label>\n            <Input\n              value={reportTitle}\n              onChange={(e) => setReportTitle(e.target.value)}\n              placeholder=\"Enter report title\"\n            />\n          </div>\n\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center space-x-2\">\n              <Checkbox\n                checked={includeMetadata}\n                onCheckedChange={(checked) =>\n                  setIncludeMetadata(checked === true)\n                }\n              />\n              <Label>Include Metadata</Label>\n            </div>\n\n            <div className=\"flex items-center space-x-2\">\n              <Checkbox\n                checked={includeIntegrityData}\n                onCheckedChange={(checked) =>\n                  setIncludeIntegrityData(checked === true)\n                }\n              />\n              <Label>Include Integrity Data</Label>\n            </div>\n          </div>\n\n          <div className=\"flex justify-end space-x-2\">\n            <Button variant=\"outline\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button onClick={handleExport}>\n              <Download className=\"h-4 w-4 mr-2\" />\n              Export\n            </Button>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default MarkovBlanketConfigurationUI;\n"],"names":["MarkovBlanketConfigurationUI","agentId","initialConfiguration","onConfigurationChange","onSave","className","readOnly","showAuditLog","showTemplateSelector","enableExport","configuration","setConfiguration","useState","getDefaultConfiguration","selectedTemplate","setSelectedTemplate","hasUnsavedChanges","setHasUnsavedChanges","isSaving","setIsSaving","auditEntries","setAuditEntries","auditStats","setAuditStats","auditFilter","setAuditFilter","limit","isLoadingAudit","setIsLoadingAudit","activeTab","setActiveTab","showAdvancedSettings","setShowAdvancedSettings","isExportDialogOpen","setIsExportDialogOpen","selectedAuditEntries","setSelectedAuditEntries","auditSearchText","setAuditSearchText","dateRange","setDateRange","loadAuditData","useCallback","entries","stats","Promise","all","auditLogger","getEntries","getStats","error","console","useEffect","handleConfigurationChange","path","value","logChange","prev","newConfig","keys","split","current","i","length","oldValue","metadata","updatedAt","Date","toISOString","version","description","JSON","stringify","logBoundaryEdit","then","catch","handleTemplateSelection","template","templateConfig","createConfigurationFromTemplate","logTemplateSelection","id","name","handleSave","after","riskLevel","requiresApproval","handleExportAuditLog","options","blob","exportData","filters","url","URL","createObjectURL","a","document","createElement","href","download","format","body","appendChild","click","removeChild","revokeObjectURL","entryCount","filteredAuditEntries","useMemo","filtered","searchLower","toLowerCase","filter","entry","includes","operationType","entityId","div","cn","h2","p","Badge","variant","Button","onClick","disabled","Save","span","Tabs","onValueChange","TabsList","TabsTrigger","Settings","FileText","History","Shield","TabsContent","BoundaryConfigurationPanel","onChange","showAdvanced","onShowAdvancedChange","TemplateSelectionPanel","onTemplateSelect","AuditLogPanel","onFilterChange","searchText","onSearchTextChange","selectedEntries","onSelectedEntriesChange","isLoading","onExport","undefined","onRefresh","CompliancePanel","ExportDialog","isOpen","onClose","templateId","dimensions","internal","threshold","precision","adaptiveScaling","mathematicalConstraints","sensory","modalityWeights","visual","auditory","tactile","noiseFiltering","active","actionSpaceSize","policyConstraints","external","environmentComplexity","boundaryRigidity","monitoring","enabled","alertThresholds","warning","critical","violationHandling","autoMitigation","escalationRules","notificationChannels","compliance","framework","auditingEnabled","retentionPeriod","encryptionRequired","createdAt","tags","defaultConfig","mathematicalFoundation","defaultPrecision","state","policy","actionSpaces","h3","Switch","checked","onCheckedChange","Label","Object","map","dimension","config","Card","CardHeader","CardTitle","CardContent","Slider","min","max","step","toFixed","Input","type","e","parseFloat","target","modality","weight","parseInt","AGENT_TEMPLATES","icon","complexity","beliefsStates","observationModalities","expertRecommendation","totalEntries","complianceMetrics","totalHighRiskOperations","pendingApprovals","integrityViolations","Search","placeholder","RotateCcw","includeMetadata","includeIntegrityData","Download","Table","TableHeader","TableRow","TableHead","Checkbox","TableBody","TableCell","timestamp","entityType","title","success","CheckCircle2","X","size","Eye","Select","SelectTrigger","SelectValue","SelectContent","SelectItem","averageOperationDuration","setFormat","setIncludeMetadata","setIncludeIntegrityData","reportTitle","setReportTitle","handleExport","Dialog","open","onOpenChange","DialogContent","DialogHeader","DialogTitle","DialogDescription"],"mappings":"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"}
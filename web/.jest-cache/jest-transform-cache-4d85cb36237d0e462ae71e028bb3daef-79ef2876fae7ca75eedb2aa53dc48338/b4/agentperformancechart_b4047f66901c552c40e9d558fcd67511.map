{"version":3,"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/components/agent-performance-chart.tsx"],"sourcesContent":["\"use client\";\n\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport type { Agent } from \"@/lib/types\";\nimport type { AgentDetailed } from \"@/lib/types/agent-api\";\nimport { useState } from \"react\";\n\ninterface AgentPerformanceChartProps {\n  agents: Agent[];\n  agentDetails: Record<string, AgentDetailed>;\n}\n\ntype MetricType = \"resources\" | \"goals\" | \"activity\" | \"efficiency\";\n\nexport default function AgentPerformanceChart({\n  agents,\n  agentDetails,\n}: AgentPerformanceChartProps) {\n  const [selectedMetric, setSelectedMetric] = useState<MetricType>(\"resources\");\n  const [selectedAgent, setSelectedAgent] = useState<string>(\"all\");\n\n  // Calculate metrics for visualization\n  const getMetricData = () => {\n    const filteredAgents =\n      selectedAgent === \"all\"\n        ? agents\n        : agents.filter((a) => a.id === selectedAgent);\n\n    switch (selectedMetric) {\n      case \"resources\":\n        return filteredAgents.map((agent) => {\n          const details = agentDetails[agent.id];\n          return {\n            name: agent.name,\n            energy: details?.resources.energy || 0,\n            health: details?.resources.health || 0,\n            memory: details?.resources.memory_used || 0,\n          };\n        });\n\n      case \"goals\":\n        return filteredAgents.map((agent) => {\n          const details = agentDetails[agent.id];\n          const goals = details?.goals || [];\n          // Mock data for goal status - in real app this would be tracked\n          const completed = Math.floor(goals.length * 0.6);\n          const active = goals.length - completed;\n          return {\n            name: agent.name,\n            completed,\n            active,\n            total: goals.length,\n          };\n        });\n\n      case \"activity\":\n        return filteredAgents.map((agent) => {\n          const details = agentDetails[agent.id];\n          // Mock activity scores\n          return {\n            name: agent.name,\n            interactions: Math.floor(Math.random() * 20),\n            movements: Math.floor(Math.random() * 50),\n            learningEvents: Math.floor(Math.random() * 10),\n          };\n        });\n\n      case \"efficiency\":\n        return filteredAgents.map((agent) => {\n          const details = agentDetails[agent.id];\n          const energyEfficiency = details ? 100 - details.resources.energy : 0;\n          const memoryEfficiency = details\n            ? (details.resources.memory_used /\n                details.resources.memory_capacity) *\n              100\n            : 0;\n          return {\n            name: agent.name,\n            energyEfficiency,\n            memoryEfficiency,\n            overallScore: (energyEfficiency + memoryEfficiency) / 2,\n          };\n        });\n    }\n  };\n\n  const data = getMetricData();\n\n  // Simple bar chart visualization\n  const renderBars = (value: number, maxValue: number, color: string) => {\n    const percentage = (value / maxValue) * 100;\n    return (\n      <div className=\"w-full bg-gray-200 rounded-full h-2\">\n        <div\n          className={`h-2 rounded-full ${color}`}\n          style={{ width: `${percentage}%` }}\n        />\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      <CardHeader>\n        <div className=\"flex items-center justify-between\">\n          <CardTitle>Performance Metrics</CardTitle>\n          <div className=\"flex gap-2\">\n            <Select\n              value={selectedMetric}\n              onValueChange={(value) => setSelectedMetric(value as MetricType)}\n            >\n              <SelectTrigger className=\"w-[180px]\">\n                <SelectValue placeholder=\"Select metric\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"resources\">Resources</SelectItem>\n                <SelectItem value=\"goals\">Goals</SelectItem>\n                <SelectItem value=\"activity\">Activity</SelectItem>\n                <SelectItem value=\"efficiency\">Efficiency</SelectItem>\n              </SelectContent>\n            </Select>\n            <Select value={selectedAgent} onValueChange={setSelectedAgent}>\n              <SelectTrigger className=\"w-[180px]\">\n                <SelectValue placeholder=\"Select agent\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All Agents</SelectItem>\n                {agents.map((agent) => (\n                  <SelectItem key={agent.id} value={agent.id}>\n                    {agent.name}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n        </div>\n      </CardHeader>\n      <CardContent className=\"flex-1 overflow-auto\">\n        <div className=\"space-y-4\">\n          {selectedMetric === \"resources\" && (\n            <div className=\"space-y-4\">\n              {(data as any[]).map((item, index) => (\n                <Card key={index} className=\"p-4\">\n                  <h4 className=\"font-medium mb-3\">{item.name}</h4>\n                  <div className=\"space-y-2\">\n                    <div>\n                      <div className=\"flex justify-between text-sm mb-1\">\n                        <span>Energy</span>\n                        <span>{item.energy}%</span>\n                      </div>\n                      {renderBars(item.energy, 100, \"bg-yellow-500\")}\n                    </div>\n                    <div>\n                      <div className=\"flex justify-between text-sm mb-1\">\n                        <span>Health</span>\n                        <span>{item.health}%</span>\n                      </div>\n                      {renderBars(item.health, 100, \"bg-red-500\")}\n                    </div>\n                    <div>\n                      <div className=\"flex justify-between text-sm mb-1\">\n                        <span>Memory</span>\n                        <span>{item.memory}MB</span>\n                      </div>\n                      {renderBars(item.memory, 100, \"bg-purple-500\")}\n                    </div>\n                  </div>\n                </Card>\n              ))}\n            </div>\n          )}\n\n          {selectedMetric === \"goals\" && (\n            <div className=\"space-y-4\">\n              {(data as any[]).map((item, index) => (\n                <Card key={index} className=\"p-4\">\n                  <h4 className=\"font-medium mb-3\">{item.name}</h4>\n                  <div className=\"grid grid-cols-3 gap-4 text-center\">\n                    <div>\n                      <div className=\"text-2xl font-bold text-green-500\">\n                        {item.completed}\n                      </div>\n                      <div className=\"text-sm text-muted-foreground\">\n                        Completed\n                      </div>\n                    </div>\n                    <div>\n                      <div className=\"text-2xl font-bold text-blue-500\">\n                        {item.active}\n                      </div>\n                      <div className=\"text-sm text-muted-foreground\">\n                        Active\n                      </div>\n                    </div>\n                    <div>\n                      <div className=\"text-2xl font-bold\">{item.total}</div>\n                      <div className=\"text-sm text-muted-foreground\">Total</div>\n                    </div>\n                  </div>\n                </Card>\n              ))}\n            </div>\n          )}\n\n          {selectedMetric === \"activity\" && (\n            <div className=\"space-y-4\">\n              {(data as any[]).map((item, index) => (\n                <Card key={index} className=\"p-4\">\n                  <h4 className=\"font-medium mb-3\">{item.name}</h4>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm\">Interactions</span>\n                      <span className=\"font-medium\">{item.interactions}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm\">Movements</span>\n                      <span className=\"font-medium\">{item.movements}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm\">Learning Events</span>\n                      <span className=\"font-medium\">{item.learningEvents}</span>\n                    </div>\n                  </div>\n                </Card>\n              ))}\n            </div>\n          )}\n\n          {selectedMetric === \"efficiency\" && (\n            <div className=\"space-y-4\">\n              {(data as any[]).map((item, index) => (\n                <Card key={index} className=\"p-4\">\n                  <h4 className=\"font-medium mb-3\">{item.name}</h4>\n                  <div className=\"space-y-2\">\n                    <div>\n                      <div className=\"flex justify-between text-sm mb-1\">\n                        <span>Energy Efficiency</span>\n                        <span>{item.energyEfficiency.toFixed(1)}%</span>\n                      </div>\n                      {renderBars(item.energyEfficiency, 100, \"bg-green-500\")}\n                    </div>\n                    <div>\n                      <div className=\"flex justify-between text-sm mb-1\">\n                        <span>Memory Efficiency</span>\n                        <span>{item.memoryEfficiency.toFixed(1)}%</span>\n                      </div>\n                      {renderBars(item.memoryEfficiency, 100, \"bg-blue-500\")}\n                    </div>\n                    <div className=\"mt-3 pt-3 border-t\">\n                      <div className=\"flex justify-between\">\n                        <span className=\"font-medium\">Overall Score</span>\n                        <span className=\"font-bold text-lg\">\n                          {item.overallScore.toFixed(1)}%\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </Card>\n              ))}\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </div>\n  );\n}\n"],"names":["AgentPerformanceChart","agents","agentDetails","selectedMetric","setSelectedMetric","useState","selectedAgent","setSelectedAgent","getMetricData","filteredAgents","filter","a","id","map","agent","details","name","energy","resources","health","memory","memory_used","goals","completed","Math","floor","length","active","total","interactions","random","movements","learningEvents","energyEfficiency","memoryEfficiency","memory_capacity","overallScore","data","renderBars","value","maxValue","color","percentage","div","className","style","width","CardHeader","CardTitle","Select","onValueChange","SelectTrigger","SelectValue","placeholder","SelectContent","SelectItem","CardContent","item","index","Card","h4","span","toFixed"],"mappings":"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"}
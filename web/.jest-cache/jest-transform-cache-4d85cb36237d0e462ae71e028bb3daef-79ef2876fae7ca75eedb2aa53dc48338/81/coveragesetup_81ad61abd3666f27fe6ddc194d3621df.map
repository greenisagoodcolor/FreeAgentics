{"version":3,"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/__tests__/setup/coverage-setup.js"],"sourcesContent":["/**\n * Coverage Test Setup\n * Enhanced setup for comprehensive frontend coverage testing\n */\n\n// Suppress console warnings during coverage testing\nconst originalConsoleWarn = console.warn;\nconst originalConsoleError = console.error;\n\nconsole.warn = (...args) => {\n  const message = args.join(\" \");\n\n  // Suppress known warnings that don't affect coverage\n  if (\n    message.includes(\"Warning: React.createElement: type is invalid\") ||\n    message.includes(\"Warning: Failed prop type\") ||\n    message.includes(\"Warning: componentWillReceiveProps\") ||\n    message.includes(\"Warning: componentWillMount\") ||\n    message.includes(\"act(...) is not supported\") ||\n    message.includes(\"useLayoutEffect does nothing on the server\") ||\n    message.includes(\"Cannot update a component while rendering\")\n  ) {\n    return;\n  }\n\n  originalConsoleWarn.apply(console, args);\n};\n\nconsole.error = (...args) => {\n  const message = args.join(\" \");\n\n  // Suppress known errors that don't affect coverage\n  if (\n    message.includes(\"Error: Uncaught [TypeError: Cannot read\") ||\n    message.includes(\"The above error occurred in the\") ||\n    message.includes(\"Consider adding an error boundary\") ||\n    message.includes(\"Warning: Can't perform a React state update\") ||\n    message.includes(\"ResizeObserver loop limit exceeded\")\n  ) {\n    return;\n  }\n\n  originalConsoleError.apply(console, args);\n};\n\n// Global test timeout for coverage tests\njest.setTimeout(30000);\n\n// Mock performance API for consistent testing\nglobal.performance = global.performance || {\n  now: jest.fn(() => Date.now()),\n  mark: jest.fn(),\n  measure: jest.fn(),\n  getEntriesByType: jest.fn(() => []),\n  getEntriesByName: jest.fn(() => []),\n  clearMarks: jest.fn(),\n  clearMeasures: jest.fn(),\n  clearResourceTimings: jest.fn(),\n};\n\n// Mock ResizeObserver for consistent testing\nglobal.ResizeObserver =\n  global.ResizeObserver ||\n  class ResizeObserver {\n    constructor(callback) {\n      this.callback = callback;\n    }\n    observe() {}\n    unobserve() {}\n    disconnect() {}\n  };\n\n// Mock IntersectionObserver for consistent testing\nglobal.IntersectionObserver =\n  global.IntersectionObserver ||\n  class IntersectionObserver {\n    constructor(callback, options) {\n      this.callback = callback;\n      this.options = options;\n    }\n    observe() {}\n    unobserve() {}\n    disconnect() {}\n  };\n\n// Mock MutationObserver for consistent testing\nglobal.MutationObserver =\n  global.MutationObserver ||\n  class MutationObserver {\n    constructor(callback) {\n      this.callback = callback;\n    }\n    observe() {}\n    disconnect() {}\n    takeRecords() {\n      return [];\n    }\n  };\n\n// Ensure all timeouts are cleaned up\nafterEach(() => {\n  jest.clearAllTimers();\n  jest.clearAllMocks();\n});\n\n// Global error handler for uncaught promise rejections during coverage testing\nprocess.on(\"unhandledRejection\", (reason, promise) => {\n  // Log but don't fail the test for coverage purposes\n  console.log(\"Unhandled Rejection at:\", promise, \"reason:\", reason);\n});\n\n// Optimize garbage collection for large test suites\nif (global.gc) {\n  afterAll(() => {\n    global.gc();\n  });\n}\n"],"names":["originalConsoleWarn","console","warn","originalConsoleError","error","args","message","join","includes","apply","jest","setTimeout","global","performance","now","fn","Date","mark","measure","getEntriesByType","getEntriesByName","clearMarks","clearMeasures","clearResourceTimings","ResizeObserver","constructor","callback","observe","unobserve","disconnect","IntersectionObserver","options","MutationObserver","takeRecords","afterEach","clearAllTimers","clearAllMocks","process","on","reason","promise","log","gc","afterAll"],"mappings":"AAAA;;;CAGC,GAED,oDAAoD;;AACpD,MAAMA,sBAAsBC,QAAQC,IAAI;AACxC,MAAMC,uBAAuBF,QAAQG,KAAK;AAE1CH,QAAQC,IAAI,GAAG,CAAC,GAAGG;IACjB,MAAMC,UAAUD,KAAKE,IAAI,CAAC;IAE1B,qDAAqD;IACrD,IACED,QAAQE,QAAQ,CAAC,oDACjBF,QAAQE,QAAQ,CAAC,gCACjBF,QAAQE,QAAQ,CAAC,yCACjBF,QAAQE,QAAQ,CAAC,kCACjBF,QAAQE,QAAQ,CAAC,gCACjBF,QAAQE,QAAQ,CAAC,iDACjBF,QAAQE,QAAQ,CAAC,8CACjB;QACA;IACF;IAEAR,oBAAoBS,KAAK,CAACR,SAASI;AACrC;AAEAJ,QAAQG,KAAK,GAAG,CAAC,GAAGC;IAClB,MAAMC,UAAUD,KAAKE,IAAI,CAAC;IAE1B,mDAAmD;IACnD,IACED,QAAQE,QAAQ,CAAC,8CACjBF,QAAQE,QAAQ,CAAC,sCACjBF,QAAQE,QAAQ,CAAC,wCACjBF,QAAQE,QAAQ,CAAC,kDACjBF,QAAQE,QAAQ,CAAC,uCACjB;QACA;IACF;IAEAL,qBAAqBM,KAAK,CAACR,SAASI;AACtC;AAEA,yCAAyC;AACzCK,KAAKC,UAAU,CAAC;AAEhB,8CAA8C;AAC9CC,OAAOC,WAAW,GAAGD,OAAOC,WAAW,IAAI;IACzCC,KAAKJ,KAAKK,EAAE,CAAC,IAAMC,KAAKF,GAAG;IAC3BG,MAAMP,KAAKK,EAAE;IACbG,SAASR,KAAKK,EAAE;IAChBI,kBAAkBT,KAAKK,EAAE,CAAC,IAAM,EAAE;IAClCK,kBAAkBV,KAAKK,EAAE,CAAC,IAAM,EAAE;IAClCM,YAAYX,KAAKK,EAAE;IACnBO,eAAeZ,KAAKK,EAAE;IACtBQ,sBAAsBb,KAAKK,EAAE;AAC/B;AAEA,6CAA6C;AAC7CH,OAAOY,cAAc,GACnBZ,OAAOY,cAAc,IACrB,MAAMA;IACJC,YAAYC,QAAQ,CAAE;QACpB,IAAI,CAACA,QAAQ,GAAGA;IAClB;IACAC,UAAU,CAAC;IACXC,YAAY,CAAC;IACbC,aAAa,CAAC;AAChB;AAEF,mDAAmD;AACnDjB,OAAOkB,oBAAoB,GACzBlB,OAAOkB,oBAAoB,IAC3B,MAAMA;IACJL,YAAYC,QAAQ,EAAEK,OAAO,CAAE;QAC7B,IAAI,CAACL,QAAQ,GAAGA;QAChB,IAAI,CAACK,OAAO,GAAGA;IACjB;IACAJ,UAAU,CAAC;IACXC,YAAY,CAAC;IACbC,aAAa,CAAC;AAChB;AAEF,+CAA+C;AAC/CjB,OAAOoB,gBAAgB,GACrBpB,OAAOoB,gBAAgB,IACvB,MAAMA;IACJP,YAAYC,QAAQ,CAAE;QACpB,IAAI,CAACA,QAAQ,GAAGA;IAClB;IACAC,UAAU,CAAC;IACXE,aAAa,CAAC;IACdI,cAAc;QACZ,OAAO,EAAE;IACX;AACF;AAEF,qCAAqC;AACrCC,UAAU;IACRxB,KAAKyB,cAAc;IACnBzB,KAAK0B,aAAa;AACpB;AAEA,+EAA+E;AAC/EC,QAAQC,EAAE,CAAC,sBAAsB,CAACC,QAAQC;IACxC,oDAAoD;IACpDvC,QAAQwC,GAAG,CAAC,2BAA2BD,SAAS,WAAWD;AAC7D;AAEA,oDAAoD;AACpD,IAAI3B,OAAO8B,EAAE,EAAE;IACbC,SAAS;QACP/B,OAAO8B,EAAE;IACX;AACF"}
eda37e15b3ca5c0f2778d15957e0828f
"use client";
"use strict";

/* istanbul ignore next */
function cov_keruc1mme() {
  var path = "/Users/matthewmoroney/builds/FreeAgentics/web/components/dual-layer-knowledge-graph.tsx";
  var hash = "0baccbcf8eda26abc2db92f0143f6279e43ac1ce";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewmoroney/builds/FreeAgentics/web/components/dual-layer-knowledge-graph.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 39
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 26
        },
        end: {
          line: 14,
          column: 66
        }
      },
      "6": {
        start: {
          line: 15,
          column: 14
        },
        end: {
          line: 15,
          column: 34
        }
      },
      "7": {
        start: {
          line: 16,
          column: 16
        },
        end: {
          line: 16,
          column: 38
        }
      },
      "8": {
        start: {
          line: 17,
          column: 16
        },
        end: {
          line: 17,
          column: 38
        }
      },
      "9": {
        start: {
          line: 18,
          column: 16
        },
        end: {
          line: 18,
          column: 38
        }
      },
      "10": {
        start: {
          line: 19,
          column: 15
        },
        end: {
          line: 19,
          column: 36
        }
      },
      "11": {
        start: {
          line: 20,
          column: 15
        },
        end: {
          line: 20,
          column: 36
        }
      },
      "12": {
        start: {
          line: 21,
          column: 14
        },
        end: {
          line: 21,
          column: 34
        }
      },
      "13": {
        start: {
          line: 22,
          column: 21
        },
        end: {
          line: 22,
          column: 44
        }
      },
      "14": {
        start: {
          line: 23,
          column: 24
        },
        end: {
          line: 23,
          column: 61
        }
      },
      "15": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 51
        }
      },
      "16": {
        start: {
          line: 25,
          column: 39
        },
        end: {
          line: 25,
          column: 51
        }
      },
      "17": {
        start: {
          line: 26,
          column: 28
        },
        end: {
          line: 26,
          column: 41
        }
      },
      "18": {
        start: {
          line: 27,
          column: 27
        },
        end: {
          line: 27,
          column: 40
        }
      },
      "19": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 30,
          column: 20
        }
      },
      "20": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 66
        }
      },
      "21": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "22": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 19
        }
      },
      "23": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "24": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 39,
          column: 10
        }
      },
      "25": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 53
        }
      },
      "26": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "27": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 30
        }
      },
      "28": {
        start: {
          line: 45,
          column: 17
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "29": {
        start: {
          line: 48,
          column: 32
        },
        end: {
          line: 48,
          column: 88
        }
      },
      "30": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "31": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "32": {
        start: {
          line: 51,
          column: 23
        },
        end: {
          line: 51,
          column: 95
        }
      },
      "33": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 56,
          column: 13
        }
      },
      "34": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 57
        }
      },
      "35": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 39
        }
      },
      "36": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 25
        }
      },
      "37": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "38": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 31
        }
      },
      "39": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 63,
          column: 18
        }
      },
      "40": {
        start: {
          line: 67,
          column: 19
        },
        end: {
          line: 67,
          column: 43
        }
      },
      "41": {
        start: {
          line: 68,
          column: 25
        },
        end: {
          line: 68,
          column: 49
        }
      },
      "42": {
        start: {
          line: 69,
          column: 26
        },
        end: {
          line: 69,
          column: 50
        }
      },
      "43": {
        start: {
          line: 71,
          column: 48
        },
        end: {
          line: 71,
          column: 74
        }
      },
      "44": {
        start: {
          line: 72,
          column: 58
        },
        end: {
          line: 72,
          column: 84
        }
      },
      "45": {
        start: {
          line: 73,
          column: 44
        },
        end: {
          line: 73,
          column: 70
        }
      },
      "46": {
        start: {
          line: 74,
          column: 44
        },
        end: {
          line: 74,
          column: 70
        }
      },
      "47": {
        start: {
          line: 75,
          column: 42
        },
        end: {
          line: 75,
          column: 68
        }
      },
      "48": {
        start: {
          line: 76,
          column: 42
        },
        end: {
          line: 76,
          column: 66
        }
      },
      "49": {
        start: {
          line: 77,
          column: 44
        },
        end: {
          line: 77,
          column: 71
        }
      },
      "50": {
        start: {
          line: 78,
          column: 42
        },
        end: {
          line: 78,
          column: 69
        }
      },
      "51": {
        start: {
          line: 80,
          column: 46
        },
        end: {
          line: 80,
          column: 70
        }
      },
      "52": {
        start: {
          line: 81,
          column: 42
        },
        end: {
          line: 81,
          column: 69
        }
      },
      "53": {
        start: {
          line: 83,
          column: 56
        },
        end: {
          line: 90,
          column: 6
        }
      },
      "54": {
        start: {
          line: 92,
          column: 38
        },
        end: {
          line: 92,
          column: 76
        }
      },
      "55": {
        start: {
          line: 94,
          column: 50
        },
        end: {
          line: 94,
          column: 77
        }
      },
      "56": {
        start: {
          line: 95,
          column: 36
        },
        end: {
          line: 95,
          column: 61
        }
      },
      "57": {
        start: {
          line: 97,
          column: 26
        },
        end: {
          line: 166,
          column: 6
        }
      },
      "58": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 102,
          column: 10
        }
      },
      "59": {
        start: {
          line: 98,
          column: 29
        },
        end: {
          line: 102,
          column: 10
        }
      },
      "60": {
        start: {
          line: 103,
          column: 23
        },
        end: {
          line: 103,
          column: 25
        }
      },
      "61": {
        start: {
          line: 104,
          column: 23
        },
        end: {
          line: 104,
          column: 25
        }
      },
      "62": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 137,
          column: 11
        }
      },
      "63": {
        start: {
          line: 107,
          column: 33
        },
        end: {
          line: 107,
          column: 56
        }
      },
      "64": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 110,
          column: 13
        }
      },
      "65": {
        start: {
          line: 109,
          column: 16
        },
        end: {
          line: 109,
          column: 23
        }
      },
      "66": {
        start: {
          line: 112,
          column: 31
        },
        end: {
          line: 118,
          column: 19
        }
      },
      "67": {
        start: {
          line: 112,
          column: 56
        },
        end: {
          line: 118,
          column: 17
        }
      },
      "68": {
        start: {
          line: 120,
          column: 31
        },
        end: {
          line: 134,
          column: 30
        }
      },
      "69": {
        start: {
          line: 121,
          column: 35
        },
        end: {
          line: 121,
          column: 77
        }
      },
      "70": {
        start: {
          line: 121,
          column: 56
        },
        end: {
          line: 121,
          column: 76
        }
      },
      "71": {
        start: {
          line: 122,
          column: 35
        },
        end: {
          line: 122,
          column: 77
        }
      },
      "72": {
        start: {
          line: 122,
          column: 56
        },
        end: {
          line: 122,
          column: 76
        }
      },
      "73": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 126,
          column: 17
        }
      },
      "74": {
        start: {
          line: 124,
          column: 20
        },
        end: {
          line: 124,
          column: 77
        }
      },
      "75": {
        start: {
          line: 125,
          column: 20
        },
        end: {
          line: 125,
          column: 32
        }
      },
      "76": {
        start: {
          line: 127,
          column: 16
        },
        end: {
          line: 133,
          column: 18
        }
      },
      "77": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 41
        }
      },
      "78": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 41
        }
      },
      "79": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 145,
          column: 9
        }
      },
      "80": {
        start: {
          line: 140,
          column: 26
        },
        end: {
          line: 140,
          column: 51
        }
      },
      "81": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 197
        }
      },
      "82": {
        start: {
          line: 141,
          column: 47
        },
        end: {
          line: 141,
          column: 195
        }
      },
      "83": {
        start: {
          line: 141,
          column: 161
        },
        end: {
          line: 141,
          column: 194
        }
      },
      "84": {
        start: {
          line: 143,
          column: 35
        },
        end: {
          line: 143,
          column: 67
        }
      },
      "85": {
        start: {
          line: 143,
          column: 61
        },
        end: {
          line: 143,
          column: 65
        }
      },
      "86": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 121
        }
      },
      "87": {
        start: {
          line: 144,
          column: 47
        },
        end: {
          line: 144,
          column: 119
        }
      },
      "88": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 153,
          column: 9
        }
      },
      "89": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 77
        }
      },
      "90": {
        start: {
          line: 149,
          column: 34
        },
        end: {
          line: 149,
          column: 75
        }
      },
      "91": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 51
        }
      },
      "92": {
        start: {
          line: 151,
          column: 35
        },
        end: {
          line: 151,
          column: 67
        }
      },
      "93": {
        start: {
          line: 151,
          column: 61
        },
        end: {
          line: 151,
          column: 65
        }
      },
      "94": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 121
        }
      },
      "95": {
        start: {
          line: 152,
          column: 47
        },
        end: {
          line: 152,
          column: 119
        }
      },
      "96": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 158,
          column: 10
        }
      },
      "97": {
        start: {
          line: 168,
          column: 4
        },
        end: {
          line: 184,
          column: 7
        }
      },
      "98": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 181,
          column: 9
        }
      },
      "99": {
        start: {
          line: 170,
          column: 37
        },
        end: {
          line: 170,
          column: 39
        }
      },
      "100": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 179,
          column: 15
        }
      },
      "101": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 178,
          column: 18
        }
      },
      "102": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 180,
          column: 47
        }
      },
      "103": {
        start: {
          line: 186,
          column: 4
        },
        end: {
          line: 354,
          column: 7
        }
      },
      "104": {
        start: {
          line: 187,
          column: 35
        },
        end: {
          line: 349,
          column: 9
        }
      },
      "105": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 348,
          column: 13
        }
      },
      "106": {
        start: {
          line: 189,
          column: 33
        },
        end: {
          line: 193,
          column: 18
        }
      },
      "107": {
        start: {
          line: 194,
          column: 16
        },
        end: {
          line: 345,
          column: 17
        }
      },
      "108": {
        start: {
          line: 195,
          column: 20
        },
        end: {
          line: 195,
          column: 56
        }
      },
      "109": {
        start: {
          line: 198,
          column: 38
        },
        end: {
          line: 343,
          column: 21
        }
      },
      "110": {
        start: {
          line: 344,
          column: 20
        },
        end: {
          line: 344,
          column: 49
        }
      },
      "111": {
        start: {
          line: 347,
          column: 16
        },
        end: {
          line: 347,
          column: 72
        }
      },
      "112": {
        start: {
          line: 350,
          column: 8
        },
        end: {
          line: 350,
          column: 29
        }
      },
      "113": {
        start: {
          line: 356,
          column: 4
        },
        end: {
          line: 431,
          column: 7
        }
      },
      "114": {
        start: {
          line: 357,
          column: 8
        },
        end: {
          line: 357,
          column: 67
        }
      },
      "115": {
        start: {
          line: 357,
          column: 60
        },
        end: {
          line: 357,
          column: 67
        }
      },
      "116": {
        start: {
          line: 358,
          column: 20
        },
        end: {
          line: 358,
          column: 46
        }
      },
      "117": {
        start: {
          line: 359,
          column: 26
        },
        end: {
          line: 359,
          column: 56
        }
      },
      "118": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 361,
          column: 42
        }
      },
      "119": {
        start: {
          line: 363,
          column: 26
        },
        end: {
          line: 363,
          column: 70
        }
      },
      "120": {
        start: {
          line: 364,
          column: 26
        },
        end: {
          line: 364,
          column: 70
        }
      },
      "121": {
        start: {
          line: 365,
          column: 27
        },
        end: {
          line: 365,
          column: 72
        }
      },
      "122": {
        start: {
          line: 367,
          column: 27
        },
        end: {
          line: 367,
          column: 545
        }
      },
      "123": {
        start: {
          line: 367,
          column: 125
        },
        end: {
          line: 367,
          column: 129
        }
      },
      "124": {
        start: {
          line: 367,
          column: 402
        },
        end: {
          line: 367,
          column: 453
        }
      },
      "125": {
        start: {
          line: 368,
          column: 8
        },
        end: {
          line: 368,
          column: 43
        }
      },
      "126": {
        start: {
          line: 370,
          column: 22
        },
        end: {
          line: 379,
          column: 10
        }
      },
      "127": {
        start: {
          line: 370,
          column: 142
        },
        end: {
          line: 370,
          column: 149
        }
      },
      "128": {
        start: {
          line: 370,
          column: 177
        },
        end: {
          line: 370,
          column: 213
        }
      },
      "129": {
        start: {
          line: 370,
          column: 243
        },
        end: {
          line: 370,
          column: 270
        }
      },
      "130": {
        start: {
          line: 371,
          column: 12
        },
        end: {
          line: 371,
          column: 36
        }
      },
      "131": {
        start: {
          line: 372,
          column: 25
        },
        end: {
          line: 376,
          column: 13
        }
      },
      "132": {
        start: {
          line: 377,
          column: 12
        },
        end: {
          line: 377,
          column: 34
        }
      },
      "133": {
        start: {
          line: 378,
          column: 12
        },
        end: {
          line: 378,
          column: 32
        }
      },
      "134": {
        start: {
          line: 381,
          column: 22
        },
        end: {
          line: 391,
          column: 10
        }
      },
      "135": {
        start: {
          line: 381,
          column: 139
        },
        end: {
          line: 381,
          column: 153
        }
      },
      "136": {
        start: {
          line: 381,
          column: 173
        },
        end: {
          line: 381,
          column: 196
        }
      },
      "137": {
        start: {
          line: 381,
          column: 224
        },
        end: {
          line: 381,
          column: 243
        }
      },
      "138": {
        start: {
          line: 381,
          column: 265
        },
        end: {
          line: 381,
          column: 308
        }
      },
      "139": {
        start: {
          line: 382,
          column: 12
        },
        end: {
          line: 382,
          column: 36
        }
      },
      "140": {
        start: {
          line: 383,
          column: 12
        },
        end: {
          line: 383,
          column: 31
        }
      },
      "141": {
        start: {
          line: 384,
          column: 12
        },
        end: {
          line: 384,
          column: 29
        }
      },
      "142": {
        start: {
          line: 386,
          column: 12
        },
        end: {
          line: 386,
          column: 30
        }
      },
      "143": {
        start: {
          line: 387,
          column: 12
        },
        end: {
          line: 387,
          column: 29
        }
      },
      "144": {
        start: {
          line: 389,
          column: 12
        },
        end: {
          line: 389,
          column: 33
        }
      },
      "145": {
        start: {
          line: 390,
          column: 12
        },
        end: {
          line: 390,
          column: 32
        }
      },
      "146": {
        start: {
          line: 393,
          column: 21
        },
        end: {
          line: 404,
          column: 10
        }
      },
      "147": {
        start: {
          line: 394,
          column: 12
        },
        end: {
          line: 394,
          column: 69
        }
      },
      "148": {
        start: {
          line: 394,
          column: 31
        },
        end: {
          line: 394,
          column: 69
        }
      },
      "149": {
        start: {
          line: 395,
          column: 12
        },
        end: {
          line: 395,
          column: 23
        }
      },
      "150": {
        start: {
          line: 396,
          column: 12
        },
        end: {
          line: 396,
          column: 23
        }
      },
      "151": {
        start: {
          line: 398,
          column: 12
        },
        end: {
          line: 398,
          column: 27
        }
      },
      "152": {
        start: {
          line: 399,
          column: 12
        },
        end: {
          line: 399,
          column: 27
        }
      },
      "153": {
        start: {
          line: 401,
          column: 12
        },
        end: {
          line: 401,
          column: 57
        }
      },
      "154": {
        start: {
          line: 401,
          column: 31
        },
        end: {
          line: 401,
          column: 57
        }
      },
      "155": {
        start: {
          line: 402,
          column: 12
        },
        end: {
          line: 402,
          column: 24
        }
      },
      "156": {
        start: {
          line: 403,
          column: 12
        },
        end: {
          line: 403,
          column: 24
        }
      },
      "157": {
        start: {
          line: 405,
          column: 8
        },
        end: {
          line: 405,
          column: 25
        }
      },
      "158": {
        start: {
          line: 407,
          column: 23
        },
        end: {
          line: 407,
          column: 325
        }
      },
      "159": {
        start: {
          line: 407,
          column: 264
        },
        end: {
          line: 407,
          column: 324
        }
      },
      "160": {
        start: {
          line: 409,
          column: 8
        },
        end: {
          line: 413,
          column: 11
        }
      },
      "161": {
        start: {
          line: 410,
          column: 12
        },
        end: {
          line: 410,
          column: 130
        }
      },
      "162": {
        start: {
          line: 410,
          column: 34
        },
        end: {
          line: 410,
          column: 44
        }
      },
      "163": {
        start: {
          line: 410,
          column: 62
        },
        end: {
          line: 410,
          column: 72
        }
      },
      "164": {
        start: {
          line: 410,
          column: 90
        },
        end: {
          line: 410,
          column: 100
        }
      },
      "165": {
        start: {
          line: 410,
          column: 118
        },
        end: {
          line: 410,
          column: 128
        }
      },
      "166": {
        start: {
          line: 411,
          column: 12
        },
        end: {
          line: 411,
          column: 60
        }
      },
      "167": {
        start: {
          line: 411,
          column: 34
        },
        end: {
          line: 411,
          column: 37
        }
      },
      "168": {
        start: {
          line: 411,
          column: 55
        },
        end: {
          line: 411,
          column: 58
        }
      },
      "169": {
        start: {
          line: 412,
          column: 12
        },
        end: {
          line: 412,
          column: 83
        }
      },
      "170": {
        start: {
          line: 412,
          column: 34
        },
        end: {
          line: 412,
          column: 37
        }
      },
      "171": {
        start: {
          line: 412,
          column: 54
        },
        end: {
          line: 412,
          column: 81
        }
      },
      "172": {
        start: {
          line: 415,
          column: 8
        },
        end: {
          line: 417,
          column: 9
        }
      },
      "173": {
        start: {
          line: 416,
          column: 12
        },
        end: {
          line: 416,
          column: 30
        }
      },
      "174": {
        start: {
          line: 418,
          column: 8
        },
        end: {
          line: 420,
          column: 10
        }
      },
      "175": {
        start: {
          line: 419,
          column: 12
        },
        end: {
          line: 419,
          column: 30
        }
      },
      "176": {
        start: {
          line: 433,
          column: 4
        },
        end: {
          line: 449,
          column: 11
        }
      },
      "177": {
        start: {
          line: 434,
          column: 8
        },
        end: {
          line: 434,
          column: 36
        }
      },
      "178": {
        start: {
          line: 434,
          column: 29
        },
        end: {
          line: 434,
          column: 36
        }
      },
      "179": {
        start: {
          line: 435,
          column: 20
        },
        end: {
          line: 435,
          column: 46
        }
      },
      "180": {
        start: {
          line: 436,
          column: 26
        },
        end: {
          line: 436,
          column: 56
        }
      },
      "181": {
        start: {
          line: 437,
          column: 21
        },
        end: {
          line: 444,
          column: 10
        }
      },
      "182": {
        start: {
          line: 441,
          column: 34
        },
        end: {
          line: 441,
          column: 39
        }
      },
      "183": {
        start: {
          line: 442,
          column: 12
        },
        end: {
          line: 442,
          column: 36
        }
      },
      "184": {
        start: {
          line: 443,
          column: 12
        },
        end: {
          line: 443,
          column: 51
        }
      },
      "185": {
        start: {
          line: 445,
          column: 8
        },
        end: {
          line: 445,
          column: 23
        }
      },
      "186": {
        start: {
          line: 446,
          column: 8
        },
        end: {
          line: 448,
          column: 10
        }
      },
      "187": {
        start: {
          line: 447,
          column: 12
        },
        end: {
          line: 447,
          column: 34
        }
      },
      "188": {
        start: {
          line: 451,
          column: 4
        },
        end: {
          line: 479,
          column: 7
        }
      },
      "189": {
        start: {
          line: 452,
          column: 8
        },
        end: {
          line: 452,
          column: 29
        }
      },
      "190": {
        start: {
          line: 452,
          column: 22
        },
        end: {
          line: 452,
          column: 29
        }
      },
      "191": {
        start: {
          line: 453,
          column: 33
        },
        end: {
          line: 472,
          column: 9
        }
      },
      "192": {
        start: {
          line: 454,
          column: 12
        },
        end: {
          line: 471,
          column: 13
        }
      },
      "193": {
        start: {
          line: 455,
          column: 16
        },
        end: {
          line: 455,
          column: 82
        }
      },
      "194": {
        start: {
          line: 457,
          column: 16
        },
        end: {
          line: 460,
          column: 19
        }
      },
      "195": {
        start: {
          line: 458,
          column: 20
        },
        end: {
          line: 458,
          column: 55
        }
      },
      "196": {
        start: {
          line: 461,
          column: 16
        },
        end: {
          line: 464,
          column: 19
        }
      },
      "197": {
        start: {
          line: 462,
          column: 20
        },
        end: {
          line: 462,
          column: 57
        }
      },
      "198": {
        start: {
          line: 465,
          column: 16
        },
        end: {
          line: 468,
          column: 19
        }
      },
      "199": {
        start: {
          line: 466,
          column: 20
        },
        end: {
          line: 466,
          column: 55
        }
      },
      "200": {
        start: {
          line: 470,
          column: 16
        },
        end: {
          line: 470,
          column: 69
        }
      },
      "201": {
        start: {
          line: 473,
          column: 8
        },
        end: {
          line: 473,
          column: 27
        }
      },
      "202": {
        start: {
          line: 474,
          column: 8
        },
        end: {
          line: 476,
          column: 10
        }
      },
      "203": {
        start: {
          line: 475,
          column: 12
        },
        end: {
          line: 475,
          column: 68
        }
      },
      "204": {
        start: {
          line: 481,
          column: 29
        },
        end: {
          line: 492,
          column: 6
        }
      },
      "205": {
        start: {
          line: 482,
          column: 8
        },
        end: {
          line: 489,
          column: 9
        }
      },
      "206": {
        start: {
          line: 483,
          column: 12
        },
        end: {
          line: 487,
          column: 13
        }
      },
      "207": {
        start: {
          line: 484,
          column: 16
        },
        end: {
          line: 484,
          column: 45
        }
      },
      "208": {
        start: {
          line: 486,
          column: 16
        },
        end: {
          line: 486,
          column: 48
        }
      },
      "209": {
        start: {
          line: 488,
          column: 12
        },
        end: {
          line: 488,
          column: 57
        }
      },
      "210": {
        start: {
          line: 493,
          column: 28
        },
        end: {
          line: 498,
          column: 10
        }
      },
      "211": {
        start: {
          line: 494,
          column: 8
        },
        end: {
          line: 497,
          column: 9
        }
      },
      "212": {
        start: {
          line: 495,
          column: 12
        },
        end: {
          line: 495,
          column: 53
        }
      },
      "213": {
        start: {
          line: 496,
          column: 12
        },
        end: {
          line: 496,
          column: 41
        }
      },
      "214": {
        start: {
          line: 499,
          column: 19
        },
        end: {
          line: 504,
          column: 10
        }
      },
      "215": {
        start: {
          line: 500,
          column: 8
        },
        end: {
          line: 503,
          column: 9
        }
      },
      "216": {
        start: {
          line: 501,
          column: 24
        },
        end: {
          line: 501,
          column: 50
        }
      },
      "217": {
        start: {
          line: 502,
          column: 12
        },
        end: {
          line: 502,
          column: 59
        }
      },
      "218": {
        start: {
          line: 505,
          column: 20
        },
        end: {
          line: 510,
          column: 10
        }
      },
      "219": {
        start: {
          line: 506,
          column: 8
        },
        end: {
          line: 509,
          column: 9
        }
      },
      "220": {
        start: {
          line: 507,
          column: 24
        },
        end: {
          line: 507,
          column: 50
        }
      },
      "221": {
        start: {
          line: 508,
          column: 12
        },
        end: {
          line: 508,
          column: 63
        }
      },
      "222": {
        start: {
          line: 511,
          column: 24
        },
        end: {
          line: 536,
          column: 6
        }
      },
      "223": {
        start: {
          line: 512,
          column: 8
        },
        end: {
          line: 512,
          column: 36
        }
      },
      "224": {
        start: {
          line: 512,
          column: 29
        },
        end: {
          line: 512,
          column: 36
        }
      },
      "225": {
        start: {
          line: 513,
          column: 8
        },
        end: {
          line: 533,
          column: 9
        }
      },
      "226": {
        start: {
          line: 514,
          column: 33
        },
        end: {
          line: 521,
          column: 13
        }
      },
      "227": {
        start: {
          line: 522,
          column: 29
        },
        end: {
          line: 522,
          column: 122
        }
      },
      "228": {
        start: {
          line: 523,
          column: 12
        },
        end: {
          line: 530,
          column: 13
        }
      },
      "229": {
        start: {
          line: 524,
          column: 28
        },
        end: {
          line: 524,
          column: 62
        }
      },
      "230": {
        start: {
          line: 525,
          column: 26
        },
        end: {
          line: 525,
          column: 53
        }
      },
      "231": {
        start: {
          line: 526,
          column: 16
        },
        end: {
          line: 526,
          column: 29
        }
      },
      "232": {
        start: {
          line: 527,
          column: 16
        },
        end: {
          line: 527,
          column: 58
        }
      },
      "233": {
        start: {
          line: 528,
          column: 16
        },
        end: {
          line: 528,
          column: 26
        }
      },
      "234": {
        start: {
          line: 529,
          column: 16
        },
        end: {
          line: 529,
          column: 41
        }
      },
      "235": {
        start: {
          line: 532,
          column: 12
        },
        end: {
          line: 532,
          column: 60
        }
      },
      "236": {
        start: {
          line: 537,
          column: 34
        },
        end: {
          line: 545,
          column: 10
        }
      },
      "237": {
        start: {
          line: 538,
          column: 8
        },
        end: {
          line: 544,
          column: 16
        }
      },
      "238": {
        start: {
          line: 538,
          column: 34
        },
        end: {
          line: 544,
          column: 13
        }
      },
      "239": {
        start: {
          line: 546,
          column: 31
        },
        end: {
          line: 554,
          column: 10
        }
      },
      "240": {
        start: {
          line: 547,
          column: 8
        },
        end: {
          line: 553,
          column: 16
        }
      },
      "241": {
        start: {
          line: 547,
          column: 34
        },
        end: {
          line: 553,
          column: 13
        }
      },
      "242": {
        start: {
          line: 555,
          column: 4
        },
        end: {
          line: 1033,
          column: 7
        }
      },
      "243": {
        start: {
          line: 655,
          column: 57
        },
        end: {
          line: 655,
          column: 85
        }
      },
      "244": {
        start: {
          line: 663,
          column: 57
        },
        end: {
          line: 663,
          column: 87
        }
      },
      "245": {
        start: {
          line: 682,
          column: 51
        },
        end: {
          line: 682,
          column: 81
        }
      },
      "246": {
        start: {
          line: 734,
          column: 106
        },
        end: {
          line: 800,
          column: 64
        }
      },
      "247": {
        start: {
          line: 746,
          column: 93
        },
        end: {
          line: 746,
          column: 124
        }
      },
      "248": {
        start: {
          line: 779,
          column: 106
        },
        end: {
          line: 779,
          column: 141
        }
      },
      "249": {
        start: {
          line: 830,
          column: 106
        },
        end: {
          line: 833,
          column: 91
        }
      },
      "250": {
        start: {
          line: 830,
          column: 137
        },
        end: {
          line: 833,
          column: 89
        }
      },
      "251": {
        start: {
          line: 852,
          column: 106
        },
        end: {
          line: 855,
          column: 91
        }
      },
      "252": {
        start: {
          line: 852,
          column: 137
        },
        end: {
          line: 855,
          column: 89
        }
      },
      "253": {
        start: {
          line: 874,
          column: 106
        },
        end: {
          line: 877,
          column: 91
        }
      },
      "254": {
        start: {
          line: 874,
          column: 137
        },
        end: {
          line: 877,
          column: 89
        }
      },
      "255": {
        start: {
          line: 920,
          column: 98
        },
        end: {
          line: 920,
          column: 116
        }
      },
      "256": {
        start: {
          line: 991,
          column: 125
        },
        end: {
          line: 995,
          column: 83
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 24,
            column: 9
          },
          end: {
            line: 24,
            column: 33
          }
        },
        loc: {
          start: {
            line: 24,
            column: 47
          },
          end: {
            line: 31,
            column: 1
          }
        },
        line: 24
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 28,
            column: 39
          },
          end: {
            line: 28,
            column: 40
          }
        },
        loc: {
          start: {
            line: 28,
            column: 61
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 32,
            column: 9
          },
          end: {
            line: 32,
            column: 34
          }
        },
        loc: {
          start: {
            line: 32,
            column: 53
          },
          end: {
            line: 64,
            column: 1
          }
        },
        line: 32
      },
      "4": {
        name: "DualLayerKnowledgeGraph",
        decl: {
          start: {
            line: 65,
            column: 9
          },
          end: {
            line: 65,
            column: 32
          }
        },
        loc: {
          start: {
            line: 65,
            column: 143
          },
          end: {
            line: 1034,
            column: 1
          }
        },
        line: 65
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 97,
            column: 46
          },
          end: {
            line: 97,
            column: 47
          }
        },
        loc: {
          start: {
            line: 97,
            column: 50
          },
          end: {
            line: 159,
            column: 5
          }
        },
        line: 97
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 106,
            column: 38
          },
          end: {
            line: 106,
            column: 39
          }
        },
        loc: {
          start: {
            line: 106,
            column: 47
          },
          end: {
            line: 137,
            column: 9
          }
        },
        line: 106
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 112,
            column: 47
          },
          end: {
            line: 112,
            column: 48
          }
        },
        loc: {
          start: {
            line: 112,
            column: 56
          },
          end: {
            line: 118,
            column: 17
          }
        },
        line: 112
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 120,
            column: 47
          },
          end: {
            line: 120,
            column: 48
          }
        },
        loc: {
          start: {
            line: 120,
            column: 55
          },
          end: {
            line: 134,
            column: 13
          }
        },
        line: 120
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 121,
            column: 51
          },
          end: {
            line: 121,
            column: 52
          }
        },
        loc: {
          start: {
            line: 121,
            column: 56
          },
          end: {
            line: 121,
            column: 76
          }
        },
        line: 121
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 122,
            column: 51
          },
          end: {
            line: 122,
            column: 52
          }
        },
        loc: {
          start: {
            line: 122,
            column: 56
          },
          end: {
            line: 122,
            column: 76
          }
        },
        line: 122
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 141,
            column: 39
          },
          end: {
            line: 141,
            column: 40
          }
        },
        loc: {
          start: {
            line: 141,
            column: 47
          },
          end: {
            line: 141,
            column: 195
          }
        },
        line: 141
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 141,
            column: 154
          },
          end: {
            line: 141,
            column: 155
          }
        },
        loc: {
          start: {
            line: 141,
            column: 161
          },
          end: {
            line: 141,
            column: 194
          }
        },
        line: 141
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 143,
            column: 56
          },
          end: {
            line: 143,
            column: 57
          }
        },
        loc: {
          start: {
            line: 143,
            column: 61
          },
          end: {
            line: 143,
            column: 65
          }
        },
        line: 143
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 144,
            column: 39
          },
          end: {
            line: 144,
            column: 40
          }
        },
        loc: {
          start: {
            line: 144,
            column: 47
          },
          end: {
            line: 144,
            column: 119
          }
        },
        line: 144
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 149,
            column: 26
          },
          end: {
            line: 149,
            column: 27
          }
        },
        loc: {
          start: {
            line: 149,
            column: 34
          },
          end: {
            line: 149,
            column: 75
          }
        },
        line: 149
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 151,
            column: 56
          },
          end: {
            line: 151,
            column: 57
          }
        },
        loc: {
          start: {
            line: 151,
            column: 61
          },
          end: {
            line: 151,
            column: 65
          }
        },
        line: 151
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 152,
            column: 39
          },
          end: {
            line: 152,
            column: 40
          }
        },
        loc: {
          start: {
            line: 152,
            column: 47
          },
          end: {
            line: 152,
            column: 119
          }
        },
        line: 152
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 168,
            column: 26
          },
          end: {
            line: 168,
            column: 27
          }
        },
        loc: {
          start: {
            line: 168,
            column: 30
          },
          end: {
            line: 182,
            column: 5
          }
        },
        line: 168
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 171,
            column: 42
          },
          end: {
            line: 171,
            column: 43
          }
        },
        loc: {
          start: {
            line: 171,
            column: 51
          },
          end: {
            line: 179,
            column: 13
          }
        },
        line: 171
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 186,
            column: 26
          },
          end: {
            line: 186,
            column: 27
          }
        },
        loc: {
          start: {
            line: 186,
            column: 30
          },
          end: {
            line: 351,
            column: 5
          }
        },
        line: 186
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 187,
            column: 35
          },
          end: {
            line: 187,
            column: 36
          }
        },
        loc: {
          start: {
            line: 187,
            column: 45
          },
          end: {
            line: 349,
            column: 9
          }
        },
        line: 187
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 356,
            column: 26
          },
          end: {
            line: 356,
            column: 27
          }
        },
        loc: {
          start: {
            line: 356,
            column: 30
          },
          end: {
            line: 421,
            column: 5
          }
        },
        line: 356
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 367,
            column: 120
          },
          end: {
            line: 367,
            column: 121
          }
        },
        loc: {
          start: {
            line: 367,
            column: 125
          },
          end: {
            line: 367,
            column: 129
          }
        },
        line: 367
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 367,
            column: 397
          },
          end: {
            line: 367,
            column: 398
          }
        },
        loc: {
          start: {
            line: 367,
            column: 402
          },
          end: {
            line: 367,
            column: 453
          }
        },
        line: 367
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 370,
            column: 137
          },
          end: {
            line: 370,
            column: 138
          }
        },
        loc: {
          start: {
            line: 370,
            column: 142
          },
          end: {
            line: 370,
            column: 149
          }
        },
        line: 370
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 370,
            column: 172
          },
          end: {
            line: 370,
            column: 173
          }
        },
        loc: {
          start: {
            line: 370,
            column: 177
          },
          end: {
            line: 370,
            column: 213
          }
        },
        line: 370
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 370,
            column: 238
          },
          end: {
            line: 370,
            column: 239
          }
        },
        loc: {
          start: {
            line: 370,
            column: 243
          },
          end: {
            line: 370,
            column: 270
          }
        },
        line: 370
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 370,
            column: 311
          },
          end: {
            line: 370,
            column: 312
          }
        },
        loc: {
          start: {
            line: 370,
            column: 323
          },
          end: {
            line: 379,
            column: 9
          }
        },
        line: 370
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 381,
            column: 134
          },
          end: {
            line: 381,
            column: 135
          }
        },
        loc: {
          start: {
            line: 381,
            column: 139
          },
          end: {
            line: 381,
            column: 153
          }
        },
        line: 381
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 381,
            column: 168
          },
          end: {
            line: 381,
            column: 169
          }
        },
        loc: {
          start: {
            line: 381,
            column: 173
          },
          end: {
            line: 381,
            column: 196
          }
        },
        line: 381
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 381,
            column: 219
          },
          end: {
            line: 381,
            column: 220
          }
        },
        loc: {
          start: {
            line: 381,
            column: 224
          },
          end: {
            line: 381,
            column: 243
          }
        },
        line: 381
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 381,
            column: 260
          },
          end: {
            line: 381,
            column: 261
          }
        },
        loc: {
          start: {
            line: 381,
            column: 265
          },
          end: {
            line: 381,
            column: 308
          }
        },
        line: 381
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 381,
            column: 373
          },
          end: {
            line: 381,
            column: 374
          }
        },
        loc: {
          start: {
            line: 381,
            column: 385
          },
          end: {
            line: 385,
            column: 9
          }
        },
        line: 381
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 385,
            column: 28
          },
          end: {
            line: 385,
            column: 29
          }
        },
        loc: {
          start: {
            line: 385,
            column: 40
          },
          end: {
            line: 388,
            column: 9
          }
        },
        line: 385
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 388,
            column: 28
          },
          end: {
            line: 388,
            column: 29
          }
        },
        loc: {
          start: {
            line: 388,
            column: 32
          },
          end: {
            line: 391,
            column: 9
          }
        },
        line: 388
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 393,
            column: 44
          },
          end: {
            line: 393,
            column: 45
          }
        },
        loc: {
          start: {
            line: 393,
            column: 56
          },
          end: {
            line: 397,
            column: 9
          }
        },
        line: 393
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 397,
            column: 22
          },
          end: {
            line: 397,
            column: 23
          }
        },
        loc: {
          start: {
            line: 397,
            column: 34
          },
          end: {
            line: 400,
            column: 9
          }
        },
        line: 397
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 400,
            column: 21
          },
          end: {
            line: 400,
            column: 22
          }
        },
        loc: {
          start: {
            line: 400,
            column: 33
          },
          end: {
            line: 404,
            column: 9
          }
        },
        line: 400
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 407,
            column: 259
          },
          end: {
            line: 407,
            column: 260
          }
        },
        loc: {
          start: {
            line: 407,
            column: 264
          },
          end: {
            line: 407,
            column: 324
          }
        },
        line: 407
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 409,
            column: 30
          },
          end: {
            line: 409,
            column: 31
          }
        },
        loc: {
          start: {
            line: 409,
            column: 34
          },
          end: {
            line: 413,
            column: 9
          }
        },
        line: 409
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 410,
            column: 29
          },
          end: {
            line: 410,
            column: 30
          }
        },
        loc: {
          start: {
            line: 410,
            column: 34
          },
          end: {
            line: 410,
            column: 44
          }
        },
        line: 410
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 410,
            column: 57
          },
          end: {
            line: 410,
            column: 58
          }
        },
        loc: {
          start: {
            line: 410,
            column: 62
          },
          end: {
            line: 410,
            column: 72
          }
        },
        line: 410
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 410,
            column: 85
          },
          end: {
            line: 410,
            column: 86
          }
        },
        loc: {
          start: {
            line: 410,
            column: 90
          },
          end: {
            line: 410,
            column: 100
          }
        },
        line: 410
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 410,
            column: 113
          },
          end: {
            line: 410,
            column: 114
          }
        },
        loc: {
          start: {
            line: 410,
            column: 118
          },
          end: {
            line: 410,
            column: 128
          }
        },
        line: 410
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 411,
            column: 29
          },
          end: {
            line: 411,
            column: 30
          }
        },
        loc: {
          start: {
            line: 411,
            column: 34
          },
          end: {
            line: 411,
            column: 37
          }
        },
        line: 411
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 411,
            column: 50
          },
          end: {
            line: 411,
            column: 51
          }
        },
        loc: {
          start: {
            line: 411,
            column: 55
          },
          end: {
            line: 411,
            column: 58
          }
        },
        line: 411
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 412,
            column: 29
          },
          end: {
            line: 412,
            column: 30
          }
        },
        loc: {
          start: {
            line: 412,
            column: 34
          },
          end: {
            line: 412,
            column: 37
          }
        },
        line: 412
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 412,
            column: 49
          },
          end: {
            line: 412,
            column: 50
          }
        },
        loc: {
          start: {
            line: 412,
            column: 54
          },
          end: {
            line: 412,
            column: 81
          }
        },
        line: 412
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 418,
            column: 15
          },
          end: {
            line: 418,
            column: 16
          }
        },
        loc: {
          start: {
            line: 418,
            column: 19
          },
          end: {
            line: 420,
            column: 9
          }
        },
        line: 418
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 433,
            column: 26
          },
          end: {
            line: 433,
            column: 27
          }
        },
        loc: {
          start: {
            line: 433,
            column: 30
          },
          end: {
            line: 449,
            column: 5
          }
        },
        line: 433
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 440,
            column: 22
          },
          end: {
            line: 440,
            column: 23
          }
        },
        loc: {
          start: {
            line: 440,
            column: 31
          },
          end: {
            line: 444,
            column: 9
          }
        },
        line: 440
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 446,
            column: 15
          },
          end: {
            line: 446,
            column: 16
          }
        },
        loc: {
          start: {
            line: 446,
            column: 19
          },
          end: {
            line: 448,
            column: 9
          }
        },
        line: 446
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 451,
            column: 26
          },
          end: {
            line: 451,
            column: 27
          }
        },
        loc: {
          start: {
            line: 451,
            column: 30
          },
          end: {
            line: 477,
            column: 5
          }
        },
        line: 451
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 453,
            column: 33
          },
          end: {
            line: 453,
            column: 34
          }
        },
        loc: {
          start: {
            line: 453,
            column: 43
          },
          end: {
            line: 472,
            column: 9
          }
        },
        line: 453
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 457,
            column: 74
          },
          end: {
            line: 457,
            column: 75
          }
        },
        loc: {
          start: {
            line: 457,
            column: 84
          },
          end: {
            line: 460,
            column: 17
          }
        },
        line: 457
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 461,
            column: 76
          },
          end: {
            line: 461,
            column: 77
          }
        },
        loc: {
          start: {
            line: 461,
            column: 86
          },
          end: {
            line: 464,
            column: 17
          }
        },
        line: 461
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 465,
            column: 74
          },
          end: {
            line: 465,
            column: 75
          }
        },
        loc: {
          start: {
            line: 465,
            column: 84
          },
          end: {
            line: 468,
            column: 17
          }
        },
        line: 465
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 474,
            column: 15
          },
          end: {
            line: 474,
            column: 16
          }
        },
        loc: {
          start: {
            line: 474,
            column: 19
          },
          end: {
            line: 476,
            column: 9
          }
        },
        line: 474
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 481,
            column: 53
          },
          end: {
            line: 481,
            column: 54
          }
        },
        loc: {
          start: {
            line: 481,
            column: 57
          },
          end: {
            line: 490,
            column: 5
          }
        },
        line: 481
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 493,
            column: 52
          },
          end: {
            line: 493,
            column: 53
          }
        },
        loc: {
          start: {
            line: 493,
            column: 56
          },
          end: {
            line: 498,
            column: 5
          }
        },
        line: 493
      },
      "61": {
        name: "(anonymous_61)",
        decl: {
          start: {
            line: 499,
            column: 43
          },
          end: {
            line: 499,
            column: 44
          }
        },
        loc: {
          start: {
            line: 499,
            column: 47
          },
          end: {
            line: 504,
            column: 5
          }
        },
        line: 499
      },
      "62": {
        name: "(anonymous_62)",
        decl: {
          start: {
            line: 505,
            column: 44
          },
          end: {
            line: 505,
            column: 45
          }
        },
        loc: {
          start: {
            line: 505,
            column: 48
          },
          end: {
            line: 510,
            column: 5
          }
        },
        line: 505
      },
      "63": {
        name: "(anonymous_63)",
        decl: {
          start: {
            line: 511,
            column: 48
          },
          end: {
            line: 511,
            column: 49
          }
        },
        loc: {
          start: {
            line: 511,
            column: 58
          },
          end: {
            line: 534,
            column: 5
          }
        },
        line: 511
      },
      "64": {
        name: "(anonymous_64)",
        decl: {
          start: {
            line: 537,
            column: 58
          },
          end: {
            line: 537,
            column: 59
          }
        },
        loc: {
          start: {
            line: 537,
            column: 69
          },
          end: {
            line: 545,
            column: 5
          }
        },
        line: 537
      },
      "65": {
        name: "(anonymous_65)",
        decl: {
          start: {
            line: 538,
            column: 25
          },
          end: {
            line: 538,
            column: 26
          }
        },
        loc: {
          start: {
            line: 538,
            column: 34
          },
          end: {
            line: 544,
            column: 13
          }
        },
        line: 538
      },
      "66": {
        name: "(anonymous_66)",
        decl: {
          start: {
            line: 546,
            column: 55
          },
          end: {
            line: 546,
            column: 56
          }
        },
        loc: {
          start: {
            line: 546,
            column: 75
          },
          end: {
            line: 554,
            column: 5
          }
        },
        line: 546
      },
      "67": {
        name: "(anonymous_67)",
        decl: {
          start: {
            line: 547,
            column: 25
          },
          end: {
            line: 547,
            column: 26
          }
        },
        loc: {
          start: {
            line: 547,
            column: 34
          },
          end: {
            line: 553,
            column: 13
          }
        },
        line: 547
      },
      "68": {
        name: "(anonymous_68)",
        decl: {
          start: {
            line: 655,
            column: 53
          },
          end: {
            line: 655,
            column: 54
          }
        },
        loc: {
          start: {
            line: 655,
            column: 57
          },
          end: {
            line: 655,
            column: 85
          }
        },
        line: 655
      },
      "69": {
        name: "(anonymous_69)",
        decl: {
          start: {
            line: 663,
            column: 53
          },
          end: {
            line: 663,
            column: 54
          }
        },
        loc: {
          start: {
            line: 663,
            column: 57
          },
          end: {
            line: 663,
            column: 87
          }
        },
        line: 663
      },
      "70": {
        name: "(anonymous_70)",
        decl: {
          start: {
            line: 682,
            column: 46
          },
          end: {
            line: 682,
            column: 47
          }
        },
        loc: {
          start: {
            line: 682,
            column: 51
          },
          end: {
            line: 682,
            column: 81
          }
        },
        line: 682
      },
      "71": {
        name: "(anonymous_71)",
        decl: {
          start: {
            line: 734,
            column: 83
          },
          end: {
            line: 734,
            column: 84
          }
        },
        loc: {
          start: {
            line: 734,
            column: 106
          },
          end: {
            line: 800,
            column: 64
          }
        },
        line: 734
      },
      "72": {
        name: "(anonymous_72)",
        decl: {
          start: {
            line: 746,
            column: 89
          },
          end: {
            line: 746,
            column: 90
          }
        },
        loc: {
          start: {
            line: 746,
            column: 93
          },
          end: {
            line: 746,
            column: 124
          }
        },
        line: 746
      },
      "73": {
        name: "(anonymous_73)",
        decl: {
          start: {
            line: 779,
            column: 95
          },
          end: {
            line: 779,
            column: 96
          }
        },
        loc: {
          start: {
            line: 779,
            column: 106
          },
          end: {
            line: 779,
            column: 141
          }
        },
        line: 779
      },
      "74": {
        name: "(anonymous_74)",
        decl: {
          start: {
            line: 830,
            column: 95
          },
          end: {
            line: 830,
            column: 96
          }
        },
        loc: {
          start: {
            line: 830,
            column: 106
          },
          end: {
            line: 833,
            column: 91
          }
        },
        line: 830
      },
      "75": {
        name: "(anonymous_75)",
        decl: {
          start: {
            line: 830,
            column: 128
          },
          end: {
            line: 830,
            column: 129
          }
        },
        loc: {
          start: {
            line: 830,
            column: 137
          },
          end: {
            line: 833,
            column: 89
          }
        },
        line: 830
      },
      "76": {
        name: "(anonymous_76)",
        decl: {
          start: {
            line: 852,
            column: 95
          },
          end: {
            line: 852,
            column: 96
          }
        },
        loc: {
          start: {
            line: 852,
            column: 106
          },
          end: {
            line: 855,
            column: 91
          }
        },
        line: 852
      },
      "77": {
        name: "(anonymous_77)",
        decl: {
          start: {
            line: 852,
            column: 128
          },
          end: {
            line: 852,
            column: 129
          }
        },
        loc: {
          start: {
            line: 852,
            column: 137
          },
          end: {
            line: 855,
            column: 89
          }
        },
        line: 852
      },
      "78": {
        name: "(anonymous_78)",
        decl: {
          start: {
            line: 874,
            column: 95
          },
          end: {
            line: 874,
            column: 96
          }
        },
        loc: {
          start: {
            line: 874,
            column: 106
          },
          end: {
            line: 877,
            column: 91
          }
        },
        line: 874
      },
      "79": {
        name: "(anonymous_79)",
        decl: {
          start: {
            line: 874,
            column: 128
          },
          end: {
            line: 874,
            column: 129
          }
        },
        loc: {
          start: {
            line: 874,
            column: 137
          },
          end: {
            line: 877,
            column: 89
          }
        },
        line: 874
      },
      "80": {
        name: "(anonymous_80)",
        decl: {
          start: {
            line: 920,
            column: 87
          },
          end: {
            line: 920,
            column: 88
          }
        },
        loc: {
          start: {
            line: 920,
            column: 98
          },
          end: {
            line: 920,
            column: 116
          }
        },
        line: 920
      },
      "81": {
        name: "(anonymous_81)",
        decl: {
          start: {
            line: 991,
            column: 104
          },
          end: {
            line: 991,
            column: 105
          }
        },
        loc: {
          start: {
            line: 991,
            column: 125
          },
          end: {
            line: 995,
            column: 83
          }
        },
        line: 991
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 15
          },
          end: {
            line: 29,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 29,
            column: 29
          },
          end: {
            line: 29,
            column: 45
          }
        }, {
          start: {
            line: 29,
            column: 48
          },
          end: {
            line: 29,
            column: 65
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "3": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 20
          }
        }, {
          start: {
            line: 33,
            column: 24
          },
          end: {
            line: 33,
            column: 27
          }
        }, {
          start: {
            line: 33,
            column: 31
          },
          end: {
            line: 33,
            column: 45
          }
        }],
        line: 33
      },
      "4": {
        loc: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "5": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 20
          }
        }, {
          start: {
            line: 36,
            column: 24
          },
          end: {
            line: 36,
            column: 47
          }
        }, {
          start: {
            line: 36,
            column: 51
          },
          end: {
            line: 36,
            column: 76
          }
        }],
        line: 36
      },
      "6": {
        loc: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "7": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 13
          }
        }, {
          start: {
            line: 42,
            column: 17
          },
          end: {
            line: 42,
            column: 31
          }
        }],
        line: 42
      },
      "8": {
        loc: {
          start: {
            line: 48,
            column: 32
          },
          end: {
            line: 48,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 32
          },
          end: {
            line: 48,
            column: 53
          }
        }, {
          start: {
            line: 48,
            column: 57
          },
          end: {
            line: 48,
            column: 88
          }
        }],
        line: 48
      },
      "9": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "10": {
        loc: {
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 29
          }
        }, {
          start: {
            line: 50,
            column: 33
          },
          end: {
            line: 50,
            column: 79
          }
        }],
        line: 50
      },
      "11": {
        loc: {
          start: {
            line: 51,
            column: 23
          },
          end: {
            line: 51,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 51,
            column: 47
          },
          end: {
            line: 51,
            column: 88
          }
        }, {
          start: {
            line: 51,
            column: 91
          },
          end: {
            line: 51,
            column: 95
          }
        }],
        line: 51
      },
      "12": {
        loc: {
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        }, {
          start: {
            line: 54,
            column: 19
          },
          end: {
            line: 56,
            column: 13
          }
        }],
        line: 52
      },
      "13": {
        loc: {
          start: {
            line: 52,
            column: 16
          },
          end: {
            line: 52,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 16
          },
          end: {
            line: 52,
            column: 20
          }
        }, {
          start: {
            line: 52,
            column: 25
          },
          end: {
            line: 52,
            column: 33
          }
        }, {
          start: {
            line: 52,
            column: 37
          },
          end: {
            line: 52,
            column: 45
          }
        }],
        line: 52
      },
      "14": {
        loc: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "15": {
        loc: {
          start: {
            line: 65,
            column: 44
          },
          end: {
            line: 65,
            column: 57
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 65,
            column: 55
          },
          end: {
            line: 65,
            column: 57
          }
        }],
        line: 65
      },
      "16": {
        loc: {
          start: {
            line: 65,
            column: 59
          },
          end: {
            line: 65,
            column: 70
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 65,
            column: 67
          },
          end: {
            line: 65,
            column: 70
          }
        }],
        line: 65
      },
      "17": {
        loc: {
          start: {
            line: 65,
            column: 72
          },
          end: {
            line: 65,
            column: 84
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 65,
            column: 81
          },
          end: {
            line: 65,
            column: 84
          }
        }],
        line: 65
      },
      "18": {
        loc: {
          start: {
            line: 65,
            column: 125
          },
          end: {
            line: 65,
            column: 139
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 65,
            column: 137
          },
          end: {
            line: 65,
            column: 139
          }
        }],
        line: 65
      },
      "19": {
        loc: {
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 102,
            column: 10
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 102,
            column: 10
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "20": {
        loc: {
          start: {
            line: 108,
            column: 12
          },
          end: {
            line: 110,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 12
          },
          end: {
            line: 110,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "21": {
        loc: {
          start: {
            line: 108,
            column: 16
          },
          end: {
            line: 108,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 16
          },
          end: {
            line: 108,
            column: 38
          }
        }, {
          start: {
            line: 108,
            column: 42
          },
          end: {
            line: 108,
            column: 63
          }
        }, {
          start: {
            line: 108,
            column: 67
          },
          end: {
            line: 108,
            column: 91
          }
        }],
        line: 108
      },
      "22": {
        loc: {
          start: {
            line: 116,
            column: 34
          },
          end: {
            line: 116,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 34
          },
          end: {
            line: 116,
            column: 55
          }
        }, {
          start: {
            line: 116,
            column: 59
          },
          end: {
            line: 116,
            column: 62
          }
        }],
        line: 116
      },
      "23": {
        loc: {
          start: {
            line: 117,
            column: 32
          },
          end: {
            line: 117,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 117,
            column: 32
          },
          end: {
            line: 117,
            column: 51
          }
        }, {
          start: {
            line: 117,
            column: 55
          },
          end: {
            line: 117,
            column: 66
          }
        }, {
          start: {
            line: 117,
            column: 70
          },
          end: {
            line: 117,
            column: 80
          }
        }],
        line: 117
      },
      "24": {
        loc: {
          start: {
            line: 123,
            column: 16
          },
          end: {
            line: 126,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 16
          },
          end: {
            line: 126,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "25": {
        loc: {
          start: {
            line: 123,
            column: 20
          },
          end: {
            line: 123,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 20
          },
          end: {
            line: 123,
            column: 31
          }
        }, {
          start: {
            line: 123,
            column: 35
          },
          end: {
            line: 123,
            column: 46
          }
        }],
        line: 123
      },
      "26": {
        loc: {
          start: {
            line: 132,
            column: 34
          },
          end: {
            line: 132,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 132,
            column: 34
          },
          end: {
            line: 132,
            column: 55
          }
        }, {
          start: {
            line: 132,
            column: 59
          },
          end: {
            line: 132,
            column: 62
          }
        }],
        line: 132
      },
      "27": {
        loc: {
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "28": {
        loc: {
          start: {
            line: 141,
            column: 47
          },
          end: {
            line: 141,
            column: 195
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 141,
            column: 47
          },
          end: {
            line: 141,
            column: 87
          }
        }, {
          start: {
            line: 141,
            column: 91
          },
          end: {
            line: 141,
            column: 134
          }
        }, {
          start: {
            line: 141,
            column: 138
          },
          end: {
            line: 141,
            column: 195
          }
        }],
        line: 141
      },
      "29": {
        loc: {
          start: {
            line: 144,
            column: 47
          },
          end: {
            line: 144,
            column: 119
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 144,
            column: 47
          },
          end: {
            line: 144,
            column: 81
          }
        }, {
          start: {
            line: 144,
            column: 85
          },
          end: {
            line: 144,
            column: 119
          }
        }],
        line: 144
      },
      "30": {
        loc: {
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 153,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 153,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "31": {
        loc: {
          start: {
            line: 147,
            column: 12
          },
          end: {
            line: 147,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 147,
            column: 12
          },
          end: {
            line: 147,
            column: 27
          }
        }, {
          start: {
            line: 147,
            column: 31
          },
          end: {
            line: 147,
            column: 57
          }
        }],
        line: 147
      },
      "32": {
        loc: {
          start: {
            line: 149,
            column: 35
          },
          end: {
            line: 149,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 149,
            column: 35
          },
          end: {
            line: 149,
            column: 47
          }
        }, {
          start: {
            line: 149,
            column: 51
          },
          end: {
            line: 149,
            column: 52
          }
        }],
        line: 149
      },
      "33": {
        loc: {
          start: {
            line: 149,
            column: 57
          },
          end: {
            line: 149,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 149,
            column: 57
          },
          end: {
            line: 149,
            column: 69
          }
        }, {
          start: {
            line: 149,
            column: 73
          },
          end: {
            line: 149,
            column: 74
          }
        }],
        line: 149
      },
      "34": {
        loc: {
          start: {
            line: 152,
            column: 47
          },
          end: {
            line: 152,
            column: 119
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 152,
            column: 47
          },
          end: {
            line: 152,
            column: 81
          }
        }, {
          start: {
            line: 152,
            column: 85
          },
          end: {
            line: 152,
            column: 119
          }
        }],
        line: 152
      },
      "35": {
        loc: {
          start: {
            line: 169,
            column: 8
          },
          end: {
            line: 181,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 169,
            column: 8
          },
          end: {
            line: 181,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 169
      },
      "36": {
        loc: {
          start: {
            line: 175,
            column: 27
          },
          end: {
            line: 175,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 175,
            column: 27
          },
          end: {
            line: 175,
            column: 38
          }
        }, {
          start: {
            line: 175,
            column: 42
          },
          end: {
            line: 175,
            column: 51
          }
        }],
        line: 175
      },
      "37": {
        loc: {
          start: {
            line: 194,
            column: 16
          },
          end: {
            line: 345,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 16
          },
          end: {
            line: 345,
            column: 17
          }
        }, {
          start: {
            line: 196,
            column: 23
          },
          end: {
            line: 345,
            column: 17
          }
        }],
        line: 194
      },
      "38": {
        loc: {
          start: {
            line: 194,
            column: 20
          },
          end: {
            line: 194,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 194,
            column: 20
          },
          end: {
            line: 194,
            column: 36
          }
        }, {
          start: {
            line: 194,
            column: 40
          },
          end: {
            line: 194,
            column: 53
          }
        }, {
          start: {
            line: 194,
            column: 57
          },
          end: {
            line: 194,
            column: 81
          }
        }],
        line: 194
      },
      "39": {
        loc: {
          start: {
            line: 270,
            column: 41
          },
          end: {
            line: 270,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 270,
            column: 41
          },
          end: {
            line: 270,
            column: 52
          }
        }, {
          start: {
            line: 270,
            column: 56
          },
          end: {
            line: 270,
            column: 65
          }
        }],
        line: 270
      },
      "40": {
        loc: {
          start: {
            line: 281,
            column: 49
          },
          end: {
            line: 281,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 281,
            column: 49
          },
          end: {
            line: 281,
            column: 60
          }
        }, {
          start: {
            line: 281,
            column: 64
          },
          end: {
            line: 281,
            column: 73
          }
        }],
        line: 281
      },
      "41": {
        loc: {
          start: {
            line: 357,
            column: 8
          },
          end: {
            line: 357,
            column: 67
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 357,
            column: 8
          },
          end: {
            line: 357,
            column: 67
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 357
      },
      "42": {
        loc: {
          start: {
            line: 357,
            column: 12
          },
          end: {
            line: 357,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 357,
            column: 12
          },
          end: {
            line: 357,
            column: 27
          }
        }, {
          start: {
            line: 357,
            column: 31
          },
          end: {
            line: 357,
            column: 58
          }
        }],
        line: 357
      },
      "43": {
        loc: {
          start: {
            line: 367,
            column: 403
          },
          end: {
            line: 367,
            column: 417
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 367,
            column: 403
          },
          end: {
            line: 367,
            column: 411
          }
        }, {
          start: {
            line: 367,
            column: 415
          },
          end: {
            line: 367,
            column: 417
          }
        }],
        line: 367
      },
      "44": {
        loc: {
          start: {
            line: 370,
            column: 190
          },
          end: {
            line: 370,
            column: 207
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 370,
            column: 190
          },
          end: {
            line: 370,
            column: 200
          }
        }, {
          start: {
            line: 370,
            column: 204
          },
          end: {
            line: 370,
            column: 207
          }
        }],
        line: 370
      },
      "45": {
        loc: {
          start: {
            line: 370,
            column: 244
          },
          end: {
            line: 370,
            column: 263
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 370,
            column: 244
          },
          end: {
            line: 370,
            column: 258
          }
        }, {
          start: {
            line: 370,
            column: 262
          },
          end: {
            line: 370,
            column: 263
          }
        }],
        line: 370
      },
      "46": {
        loc: {
          start: {
            line: 374,
            column: 24
          },
          end: {
            line: 374,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 374,
            column: 55
          },
          end: {
            line: 374,
            column: 66
          }
        }, {
          start: {
            line: 374,
            column: 69
          },
          end: {
            line: 374,
            column: 77
          }
        }],
        line: 374
      },
      "47": {
        loc: {
          start: {
            line: 375,
            column: 24
          },
          end: {
            line: 375,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 375,
            column: 55
          },
          end: {
            line: 375,
            column: 66
          }
        }, {
          start: {
            line: 375,
            column: 69
          },
          end: {
            line: 375,
            column: 77
          }
        }],
        line: 375
      },
      "48": {
        loc: {
          start: {
            line: 381,
            column: 139
          },
          end: {
            line: 381,
            column: 153
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 381,
            column: 139
          },
          end: {
            line: 381,
            column: 147
          }
        }, {
          start: {
            line: 381,
            column: 151
          },
          end: {
            line: 381,
            column: 153
          }
        }],
        line: 381
      },
      "49": {
        loc: {
          start: {
            line: 381,
            column: 173
          },
          end: {
            line: 381,
            column: 196
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 381,
            column: 173
          },
          end: {
            line: 381,
            column: 185
          }
        }, {
          start: {
            line: 381,
            column: 189
          },
          end: {
            line: 381,
            column: 196
          }
        }],
        line: 381
      },
      "50": {
        loc: {
          start: {
            line: 381,
            column: 224
          },
          end: {
            line: 381,
            column: 243
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 381,
            column: 224
          },
          end: {
            line: 381,
            column: 238
          }
        }, {
          start: {
            line: 381,
            column: 242
          },
          end: {
            line: 381,
            column: 243
          }
        }],
        line: 381
      },
      "51": {
        loc: {
          start: {
            line: 381,
            column: 265
          },
          end: {
            line: 381,
            column: 308
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 381,
            column: 293
          },
          end: {
            line: 381,
            column: 299
          }
        }, {
          start: {
            line: 381,
            column: 302
          },
          end: {
            line: 381,
            column: 308
          }
        }],
        line: 381
      },
      "52": {
        loc: {
          start: {
            line: 394,
            column: 12
          },
          end: {
            line: 394,
            column: 69
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 394,
            column: 12
          },
          end: {
            line: 394,
            column: 69
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 394
      },
      "53": {
        loc: {
          start: {
            line: 401,
            column: 12
          },
          end: {
            line: 401,
            column: 57
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 401,
            column: 12
          },
          end: {
            line: 401,
            column: 57
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 401
      },
      "54": {
        loc: {
          start: {
            line: 407,
            column: 264
          },
          end: {
            line: 407,
            column: 324
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 407,
            column: 286
          },
          end: {
            line: 407,
            column: 314
          }
        }, {
          start: {
            line: 407,
            column: 317
          },
          end: {
            line: 407,
            column: 324
          }
        }],
        line: 407
      },
      "55": {
        loc: {
          start: {
            line: 412,
            column: 61
          },
          end: {
            line: 412,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 412,
            column: 61
          },
          end: {
            line: 412,
            column: 69
          }
        }, {
          start: {
            line: 412,
            column: 73
          },
          end: {
            line: 412,
            column: 75
          }
        }],
        line: 412
      },
      "56": {
        loc: {
          start: {
            line: 415,
            column: 8
          },
          end: {
            line: 417,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 415,
            column: 8
          },
          end: {
            line: 417,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 415
      },
      "57": {
        loc: {
          start: {
            line: 434,
            column: 8
          },
          end: {
            line: 434,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 434,
            column: 8
          },
          end: {
            line: 434,
            column: 36
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 434
      },
      "58": {
        loc: {
          start: {
            line: 452,
            column: 8
          },
          end: {
            line: 452,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 452,
            column: 8
          },
          end: {
            line: 452,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 452
      },
      "59": {
        loc: {
          start: {
            line: 482,
            column: 8
          },
          end: {
            line: 489,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 482,
            column: 8
          },
          end: {
            line: 489,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 482
      },
      "60": {
        loc: {
          start: {
            line: 483,
            column: 12
          },
          end: {
            line: 487,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 483,
            column: 12
          },
          end: {
            line: 487,
            column: 13
          }
        }, {
          start: {
            line: 485,
            column: 19
          },
          end: {
            line: 487,
            column: 13
          }
        }],
        line: 483
      },
      "61": {
        loc: {
          start: {
            line: 494,
            column: 8
          },
          end: {
            line: 497,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 494,
            column: 8
          },
          end: {
            line: 497,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 494
      },
      "62": {
        loc: {
          start: {
            line: 500,
            column: 8
          },
          end: {
            line: 503,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 500,
            column: 8
          },
          end: {
            line: 503,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 500
      },
      "63": {
        loc: {
          start: {
            line: 506,
            column: 8
          },
          end: {
            line: 509,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 506,
            column: 8
          },
          end: {
            line: 509,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 506
      },
      "64": {
        loc: {
          start: {
            line: 512,
            column: 8
          },
          end: {
            line: 512,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 512,
            column: 8
          },
          end: {
            line: 512,
            column: 36
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 512
      },
      "65": {
        loc: {
          start: {
            line: 523,
            column: 12
          },
          end: {
            line: 530,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 523,
            column: 12
          },
          end: {
            line: 530,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 523
      },
      "66": {
        loc: {
          start: {
            line: 523,
            column: 16
          },
          end: {
            line: 523,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 523,
            column: 16
          },
          end: {
            line: 523,
            column: 32
          }
        }, {
          start: {
            line: 523,
            column: 36
          },
          end: {
            line: 523,
            column: 49
          }
        }],
        line: 523
      },
      "67": {
        loc: {
          start: {
            line: 569,
            column: 46
          },
          end: {
            line: 569,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 569,
            column: 46
          },
          end: {
            line: 569,
            column: 66
          }
        }, {
          start: {
            line: 569,
            column: 70
          },
          end: {
            line: 569,
            column: 87
          }
        }],
        line: 569
      },
      "68": {
        loc: {
          start: {
            line: 609,
            column: 54
          },
          end: {
            line: 613,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 609,
            column: 90
          },
          end: {
            line: 611,
            column: 46
          }
        }, {
          start: {
            line: 611,
            column: 63
          },
          end: {
            line: 613,
            column: 46
          }
        }],
        line: 609
      },
      "69": {
        loc: {
          start: {
            line: 747,
            column: 90
          },
          end: {
            line: 751,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 747,
            column: 139
          },
          end: {
            line: 749,
            column: 82
          }
        }, {
          start: {
            line: 749,
            column: 99
          },
          end: {
            line: 751,
            column: 82
          }
        }],
        line: 747
      },
      "70": {
        loc: {
          start: {
            line: 777,
            column: 84
          },
          end: {
            line: 777,
            column: 121
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 777,
            column: 84
          },
          end: {
            line: 777,
            column: 116
          }
        }, {
          start: {
            line: 777,
            column: 120
          },
          end: {
            line: 777,
            column: 121
          }
        }],
        line: 777
      },
      "71": {
        loc: {
          start: {
            line: 909,
            column: 60
          },
          end: {
            line: 927,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 909,
            column: 60
          },
          end: {
            line: 909,
            column: 75
          }
        }, {
          start: {
            line: 909,
            column: 93
          },
          end: {
            line: 927,
            column: 62
          }
        }],
        line: 909
      },
      "72": {
        loc: {
          start: {
            line: 936,
            column: 54
          },
          end: {
            line: 1023,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 936,
            column: 83
          },
          end: {
            line: 1002,
            column: 46
          }
        }, {
          start: {
            line: 1002,
            column: 49
          },
          end: {
            line: 1023,
            column: 46
          }
        }],
        line: 936
      },
      "73": {
        loc: {
          start: {
            line: 975,
            column: 60
          },
          end: {
            line: 983,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 975,
            column: 60
          },
          end: {
            line: 975,
            column: 80
          }
        }, {
          start: {
            line: 975,
            column: 98
          },
          end: {
            line: 983,
            column: 62
          }
        }],
        line: 975
      },
      "74": {
        loc: {
          start: {
            line: 984,
            column: 60
          },
          end: {
            line: 998,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 984,
            column: 60
          },
          end: {
            line: 984,
            column: 77
          }
        }, {
          start: {
            line: 984,
            column: 81
          },
          end: {
            line: 984,
            column: 109
          }
        }, {
          start: {
            line: 984,
            column: 127
          },
          end: {
            line: 998,
            column: 62
          }
        }],
        line: 984
      },
      "75": {
        loc: {
          start: {
            line: 1002,
            column: 49
          },
          end: {
            line: 1023,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1002,
            column: 77
          },
          end: {
            line: 1020,
            column: 46
          }
        }, {
          start: {
            line: 1020,
            column: 63
          },
          end: {
            line: 1023,
            column: 46
          }
        }],
        line: 1002
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0],
      "17": [0],
      "18": [0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0, 0],
      "22": [0, 0],
      "23": [0, 0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0, 0],
      "75": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matthewmoroney/builds/FreeAgentics/web/components/dual-layer-knowledge-graph.tsx"],
      sourcesContent: ["\"use client\";\n\nimport React, {\n  useRef,\n  useEffect,\n  useState,\n  useCallback,\n  useMemo,\n} from \"react\";\nimport * as d3 from \"d3\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Slider } from \"@/components/ui/slider\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Label } from \"@/components/ui/label\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport {\n  Play,\n  Pause,\n  RotateCcw,\n  ZoomIn,\n  ZoomOut,\n  Download,\n  Eye,\n  EyeOff,\n  Settings,\n  Layers,\n  Filter,\n  Search,\n} from \"lucide-react\";\nimport {\n  KnowledgeGraph,\n  KnowledgeNode,\n  KnowledgeEdge,\n  KnowledgeGraphLayer,\n  KnowledgeGraphFilters,\n} from \"@/lib/types\";\nimport { knowledgeGraphApi } from \"@/lib/api/knowledge-graph\";\n\n// Dual-Layer Knowledge Graph Visualization Component\n// Implements ADR inference engine integration, WebSocket communication, and canonical structure\n\ninterface DualLayerKnowledgeGraphProps {\n  graphId?: string;\n  agentIds?: string[];\n  width?: number;\n  height?: number;\n  onNodeClick?: (node: KnowledgeNode) => void;\n  onEdgeClick?: (edge: KnowledgeEdge) => void;\n  onNodeHover?: (node: KnowledgeNode | null) => void;\n  className?: string;\n}\n\ninterface D3Node extends KnowledgeNode {\n  // D3 simulation properties\n  x: number;\n  y: number;\n  vx?: number;\n  vy?: number;\n  fx?: number | null;\n  fy?: number | null;\n  index?: number;\n  // Additional properties for visualization\n  radius: number; // Required by KnowledgeNode\n  layerId?: string;\n  layerType?: string;\n  layerOpacity?: number;\n  layerColor?: string;\n}\n\ninterface D3Edge extends Omit<KnowledgeEdge, \"source\" | \"target\"> {\n  source: D3Node;\n  target: D3Node;\n  index?: number;\n  // Additional properties for visualization\n  layerId?: string;\n  layerOpacity?: number;\n}\n\ninterface LayerSettings {\n  visible: boolean;\n  opacity: number;\n  color: string;\n  nodeScale: number;\n  edgeScale: number;\n}\n\nexport default function DualLayerKnowledgeGraph({\n  graphId,\n  agentIds = [],\n  width = 800,\n  height = 600,\n  onNodeClick,\n  onEdgeClick,\n  onNodeHover,\n  className = \"\",\n}: DualLayerKnowledgeGraphProps) {\n  // Refs for D3 elements\n  const svgRef = useRef<SVGSVGElement>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const simulationRef = useRef<d3.Simulation<D3Node, D3Edge> | null>(null);\n\n  // State management\n  const [knowledgeGraph, setKnowledgeGraph] = useState<KnowledgeGraph | null>(\n    null,\n  );\n  const [isSimulationRunning, setIsSimulationRunning] = useState(true);\n  const [selectedNode, setSelectedNode] = useState<KnowledgeNode | null>(null);\n  const [selectedEdge, setSelectedEdge] = useState<KnowledgeEdge | null>(null);\n  const [hoveredNode, setHoveredNode] = useState<KnowledgeNode | null>(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [showSettings, setShowSettings] = useState(false);\n  const [showFilters, setShowFilters] = useState(false);\n\n  // Layer management state\n  const [layerSettings, setLayerSettings] = useState<\n    Record<string, LayerSettings>\n  >({});\n  const [activeLayer, setActiveLayer] = useState<string>(\"all\");\n\n  // Simulation settings\n  const [simulationSettings, setSimulationSettings] = useState({\n    linkStrength: 0.3,\n    chargeStrength: -300,\n    centerForce: 0.05,\n    collideRadius: 20,\n    alphaDecay: 0.01,\n    velocityDecay: 0.4,\n  });\n\n  // Zoom and pan state\n  const [transform, setTransform] = useState<d3.ZoomTransform>(d3.zoomIdentity);\n\n  // Performance settings\n  const [performanceMode, setPerformanceMode] = useState(false);\n  const [maxNodes, setMaxNodes] = useState(500);\n\n  // Computed data\n  const processedData = useMemo(() => {\n    if (!knowledgeGraph) return { nodes: [], edges: [], layers: [] };\n\n    let allNodes: D3Node[] = [];\n    let allEdges: D3Edge[] = [];\n\n    // Process each layer\n    knowledgeGraph.layers.forEach((layer: any) => {\n      const layerSetting = layerSettings[layer.id];\n      if (\n        !layerSetting?.visible &&\n        activeLayer !== \"all\" &&\n        activeLayer !== layer.id\n      ) {\n        return; // Skip invisible layers\n      }\n\n      // Add nodes with layer context\n      const layerNodes: D3Node[] = layer.nodes.map((node) => ({\n        ...node,\n        layerId: layer.id,\n        layerType: layer.type,\n        layerOpacity: layerSetting?.opacity || 1.0,\n        layerColor: layerSetting?.color || layer.color || node.color,\n      }));\n\n      // Add edges with layer context\n      const layerEdges: D3Edge[] = layer.edges\n        .map((edge) => {\n          const sourceNode = layerNodes.find((n) => n.id === edge.source);\n          const targetNode = layerNodes.find((n) => n.id === edge.target);\n\n          if (!sourceNode || !targetNode) {\n            console.warn(`Edge ${edge.id} references missing nodes`);\n            return null;\n          }\n\n          return {\n            ...edge,\n            source: sourceNode,\n            target: targetNode,\n            layerId: layer.id,\n            layerOpacity: layerSetting?.opacity || 1.0,\n          };\n        })\n        .filter(Boolean) as D3Edge[];\n\n      allNodes.push(...layerNodes);\n      allEdges.push(...layerEdges);\n    });\n\n    // Apply search filter\n    if (searchQuery) {\n      const query = searchQuery.toLowerCase();\n      allNodes = allNodes.filter(\n        (node) =>\n          node.title.toLowerCase().includes(query) ||\n          node.content?.toLowerCase().includes(query) ||\n          node.tags?.some((tag) => tag.toLowerCase().includes(query)),\n      );\n\n      // Filter edges to only include those with both nodes visible\n      const visibleNodeIds = new Set(allNodes.map((n) => n.id));\n      allEdges = allEdges.filter(\n        (edge) =>\n          visibleNodeIds.has(edge.source.id) &&\n          visibleNodeIds.has(edge.target.id),\n      );\n    }\n\n    // Apply performance limits\n    if (performanceMode && allNodes.length > maxNodes) {\n      // Sort by importance and take top nodes\n      allNodes.sort((a, b) => (b.importance || 0) - (a.importance || 0));\n      allNodes = allNodes.slice(0, maxNodes);\n\n      const visibleNodeIds = new Set(allNodes.map((n) => n.id));\n      allEdges = allEdges.filter(\n        (edge) =>\n          visibleNodeIds.has(edge.source.id) &&\n          visibleNodeIds.has(edge.target.id),\n      );\n    }\n\n    return {\n      nodes: allNodes,\n      edges: allEdges,\n      layers: knowledgeGraph.layers,\n    };\n  }, [\n    knowledgeGraph,\n    layerSettings,\n    activeLayer,\n    searchQuery,\n    performanceMode,\n    maxNodes,\n  ]);\n\n  // Initialize layer settings when graph changes\n  useEffect(() => {\n    if (knowledgeGraph) {\n      const newLayerSettings: Record<string, LayerSettings> = {};\n\n      knowledgeGraph.layers.forEach((layer) => {\n        newLayerSettings[layer.id] = {\n          visible: layer.isVisible,\n          opacity: layer.opacity,\n          color: layer.color || \"#3b82f6\",\n          nodeScale: 1.0,\n          edgeScale: 1.0,\n        };\n      });\n\n      setLayerSettings(newLayerSettings);\n    }\n  }, [knowledgeGraph]);\n\n  // Load knowledge graph data\n  useEffect(() => {\n    const loadKnowledgeGraph = async () => {\n      try {\n        const response = await knowledgeGraphApi.getKnowledgeGraphs({\n          agentId: agentIds[0], // Use first agent for individual graphs\n          includeMetadata: true,\n          limit: 1,\n        });\n\n        if (response.success && response.data && response.data.length > 0) {\n          setKnowledgeGraph(response.data[0]);\n        } else {\n          // Create mock data for demonstration\n          const mockGraph: KnowledgeGraph = {\n            id: \"demo-graph\",\n            name: \"Demo Knowledge Graph\",\n            description: \"Demonstration dual-layer knowledge graph\",\n            layers: [\n              {\n                id: \"collective-layer\",\n                name: \"Collective Knowledge\",\n                type: \"collective\",\n                nodes: [\n                  {\n                    id: \"concept-1\",\n                    title: \"Resource Management\",\n                    type: \"concept\",\n                    content:\n                      \"Collective understanding of resource allocation strategies\",\n                    x: 200,\n                    y: 200,\n                    radius: 20,\n                    color: \"#3b82f6\",\n                    ownerType: \"collective\",\n                    confidence: 0.9,\n                    importance: 0.8,\n                    lastUpdated: new Date(),\n                    createdAt: new Date(),\n                    tags: [\"resources\", \"strategy\", \"collective\"],\n                  },\n                  {\n                    id: \"fact-1\",\n                    title: \"Trading Post Alpha\",\n                    type: \"fact\",\n                    content: \"Verified trading location with high activity\",\n                    x: 300,\n                    y: 150,\n                    radius: 15,\n                    color: \"#10b981\",\n                    ownerType: \"collective\",\n                    confidence: 0.95,\n                    importance: 0.7,\n                    lastUpdated: new Date(),\n                    createdAt: new Date(),\n                    tags: [\"trading\", \"location\", \"verified\"],\n                  },\n                ],\n                edges: [\n                  {\n                    id: \"edge-1\",\n                    source: \"concept-1\",\n                    target: \"fact-1\",\n                    type: \"relates_to\",\n                    strength: 0.8,\n                    confidence: 0.85,\n                    color: \"#6366f1\",\n                    createdAt: new Date(),\n                    lastUpdated: new Date(),\n                  },\n                ],\n                isVisible: true,\n                opacity: 1.0,\n                color: \"#3b82f6\",\n              },\n              {\n                id: \"individual-layer\",\n                name: \"Individual Beliefs\",\n                type: \"individual\",\n                agentId: agentIds[0] || \"agent-1\",\n                nodes: [\n                  {\n                    id: \"belief-1\",\n                    title: \"Market Opportunity\",\n                    type: \"belief\",\n                    content: \"Personal belief about emerging market trends\",\n                    x: 250,\n                    y: 300,\n                    radius: 12,\n                    color: \"#f59e0b\",\n                    agentId: agentIds[0] || \"agent-1\",\n                    ownerType: \"individual\",\n                    confidence: 0.75,\n                    importance: 0.6,\n                    lastUpdated: new Date(),\n                    createdAt: new Date(),\n                    tags: [\"market\", \"opportunity\", \"personal\"],\n                  },\n                ],\n                edges: [],\n                isVisible: true,\n                opacity: 0.8,\n                color: \"#f59e0b\",\n              },\n            ],\n            createdAt: new Date(),\n            lastUpdated: new Date(),\n            version: \"1.0.0\",\n            layout: \"force-directed\",\n            renderer: \"d3\",\n            maxNodes: 1000,\n            lodEnabled: true,\n            clusteringEnabled: false,\n            filters: {\n              nodeTypes: [\"concept\", \"fact\", \"belief\"],\n              confidenceRange: [0.0, 1.0],\n              importanceRange: [0.0, 1.0],\n              agentIds: agentIds,\n              tags: [],\n              edgeTypes: [\"relates_to\", \"supports\", \"contradicts\"],\n              strengthRange: [0.0, 1.0],\n              showOnlyConnected: false,\n              hideIsolatedNodes: false,\n            },\n            selectedNodes: [],\n            selectedEdges: [],\n            zoom: 1.0,\n            pan: { x: 0, y: 0 },\n          };\n\n          setKnowledgeGraph(mockGraph);\n        }\n      } catch (error) {\n        console.error(\"Failed to load knowledge graph:\", error);\n      }\n    };\n\n    loadKnowledgeGraph();\n  }, [graphId, agentIds]);\n\n  // Initialize D3 visualization\n  useEffect(() => {\n    if (!svgRef.current || !processedData.nodes.length) return;\n\n    const svg = d3.select(svgRef.current);\n    const container = svg.select(\".graph-container\");\n\n    // Clear existing content\n    container.selectAll(\"*\").remove();\n\n    // Create groups for different elements\n    const edgeGroup = container.append(\"g\").attr(\"class\", \"edges\");\n    const nodeGroup = container.append(\"g\").attr(\"class\", \"nodes\");\n    const labelGroup = container.append(\"g\").attr(\"class\", \"labels\");\n\n    // Initialize force simulation\n    const simulation = d3\n      .forceSimulation<D3Node>(processedData.nodes)\n      .force(\n        \"link\",\n        d3\n          .forceLink<D3Node, D3Edge>(processedData.edges)\n          .id((d) => d.id)\n          .strength(simulationSettings.linkStrength),\n      )\n      .force(\n        \"charge\",\n        d3.forceManyBody().strength(simulationSettings.chargeStrength),\n      )\n      .force(\n        \"center\",\n        d3\n          .forceCenter(width / 2, height / 2)\n          .strength(simulationSettings.centerForce),\n      )\n      .force(\n        \"collision\",\n        d3\n          .forceCollide<D3Node>()\n          .radius((d) => (d.radius || 10) + simulationSettings.collideRadius),\n      )\n      .alphaDecay(simulationSettings.alphaDecay)\n      .velocityDecay(simulationSettings.velocityDecay);\n\n    simulationRef.current = simulation;\n\n    // Create edges\n    const edges = edgeGroup\n      .selectAll(\".edge\")\n      .data(processedData.edges)\n      .enter()\n      .append(\"line\")\n      .attr(\"class\", \"edge\")\n      .attr(\"stroke\", (d) => d.color)\n      .attr(\"stroke-width\", (d) => Math.max(1, (d.strength || 0.5) * 3))\n      .attr(\"stroke-opacity\", (d) => (d.layerOpacity || 1) * 0.6)\n      .style(\"cursor\", \"pointer\")\n      .on(\"click\", (event, d) => {\n        event.stopPropagation();\n        const edge: KnowledgeEdge = {\n          ...d,\n          source: typeof d.source === \"object\" ? d.source.id : d.source,\n          target: typeof d.target === \"object\" ? d.target.id : d.target,\n        };\n        setSelectedEdge(edge);\n        onEdgeClick?.(edge);\n      });\n\n    // Create nodes\n    const nodes = nodeGroup\n      .selectAll(\".node\")\n      .data(processedData.nodes)\n      .enter()\n      .append(\"circle\")\n      .attr(\"class\", \"node\")\n      .attr(\"r\", (d) => d.radius || 10)\n      .attr(\"fill\", (d) => d.layerColor || d.color)\n      .attr(\"fill-opacity\", (d) => d.layerOpacity || 1)\n      .attr(\"stroke\", (d) => (selectedNode?.id === d.id ? \"#000\" : \"none\"))\n      .attr(\"stroke-width\", 2)\n      .style(\"cursor\", \"pointer\")\n      .on(\"click\", (event, d) => {\n        event.stopPropagation();\n        setSelectedNode(d);\n        onNodeClick?.(d);\n      })\n      .on(\"mouseenter\", (event, d) => {\n        setHoveredNode(d);\n        onNodeHover?.(d);\n      })\n      .on(\"mouseleave\", () => {\n        setHoveredNode(null);\n        onNodeHover?.(null);\n      });\n\n    // Add drag behavior\n    const drag = d3\n      .drag<SVGCircleElement, D3Node>()\n      .on(\"start\", (event, d) => {\n        if (!event.active) simulation.alphaTarget(0.3).restart();\n        d.fx = d.x;\n        d.fy = d.y;\n      })\n      .on(\"drag\", (event, d) => {\n        d.fx = event.x;\n        d.fy = event.y;\n      })\n      .on(\"end\", (event, d) => {\n        if (!event.active) simulation.alphaTarget(0);\n        d.fx = null;\n        d.fy = null;\n      });\n\n    nodes.call(drag);\n\n    // Create labels\n    const labels = labelGroup\n      .selectAll(\".label\")\n      .data(processedData.nodes)\n      .enter()\n      .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"dy\", \".35em\")\n      .attr(\"font-size\", \"12px\")\n      .attr(\"fill\", \"#333\")\n      .attr(\"pointer-events\", \"none\")\n      .text((d) =>\n        d.title.length > 15 ? d.title.slice(0, 15) + \"...\" : d.title,\n      );\n\n    // Update positions on simulation tick\n    simulation.on(\"tick\", () => {\n      edges\n        .attr(\"x1\", (d) => d.source.x)\n        .attr(\"y1\", (d) => d.source.y)\n        .attr(\"x2\", (d) => d.target.x)\n        .attr(\"y2\", (d) => d.target.y);\n\n      nodes.attr(\"cx\", (d) => d.x).attr(\"cy\", (d) => d.y);\n\n      labels\n        .attr(\"x\", (d) => d.x)\n        .attr(\"y\", (d) => d.y + (d.radius || 10) + 15);\n    });\n\n    // Stop simulation if not running\n    if (!isSimulationRunning) {\n      simulation.stop();\n    }\n\n    return () => {\n      simulation.stop();\n    };\n  }, [\n    processedData,\n    simulationSettings,\n    width,\n    height,\n    selectedNode,\n    isSimulationRunning,\n    onNodeClick,\n    onEdgeClick,\n    onNodeHover,\n  ]);\n\n  // Setup zoom behavior\n  useEffect(() => {\n    if (!svgRef.current) return;\n\n    const svg = d3.select(svgRef.current);\n    const container = svg.select(\".graph-container\");\n\n    const zoom = d3\n      .zoom<SVGSVGElement, unknown>()\n      .scaleExtent([0.1, 10])\n      .on(\"zoom\", (event) => {\n        const { transform } = event;\n        setTransform(transform);\n        container.attr(\"transform\", transform);\n      });\n\n    svg.call(zoom);\n\n    return () => {\n      svg.on(\".zoom\", null);\n    };\n  }, []);\n\n  // WebSocket integration for real-time updates\n  useEffect(() => {\n    if (!graphId) return;\n\n    const connectWebSocket = async () => {\n      try {\n        await knowledgeGraphApi.connectWebSocket(graphId);\n\n        // Subscribe to updates\n        knowledgeGraphApi.subscribe(\"node_added\", (update) => {\n          console.log(\"Node added:\", update);\n          // Handle node addition\n        });\n\n        knowledgeGraphApi.subscribe(\"node_updated\", (update) => {\n          console.log(\"Node updated:\", update);\n          // Handle node update\n        });\n\n        knowledgeGraphApi.subscribe(\"edge_added\", (update) => {\n          console.log(\"Edge added:\", update);\n          // Handle edge addition\n        });\n      } catch (error) {\n        console.error(\"Failed to connect WebSocket:\", error);\n      }\n    };\n\n    connectWebSocket();\n\n    return () => {\n      knowledgeGraphApi.disconnectWebSocket();\n    };\n  }, [graphId]);\n\n  // Control functions\n  const toggleSimulation = useCallback(() => {\n    if (simulationRef.current) {\n      if (isSimulationRunning) {\n        simulationRef.current.stop();\n      } else {\n        simulationRef.current.restart();\n      }\n      setIsSimulationRunning(!isSimulationRunning);\n    }\n  }, [isSimulationRunning]);\n\n  const resetSimulation = useCallback(() => {\n    if (simulationRef.current) {\n      simulationRef.current.alpha(1).restart();\n      setIsSimulationRunning(true);\n    }\n  }, []);\n\n  const zoomIn = useCallback(() => {\n    if (svgRef.current) {\n      const svg = d3.select(svgRef.current);\n      svg\n        .transition()\n        .call(d3.zoom<SVGSVGElement, unknown>().scaleBy as any, 1.5);\n    }\n  }, []);\n\n  const zoomOut = useCallback(() => {\n    if (svgRef.current) {\n      const svg = d3.select(svgRef.current);\n      svg\n        .transition()\n        .call(d3.zoom<SVGSVGElement, unknown>().scaleBy as any, 1 / 1.5);\n    }\n  }, []);\n\n  const exportGraph = useCallback(async () => {\n    if (!knowledgeGraph) return;\n\n    try {\n      const exportConfig = {\n        format: \"svg\" as const,\n        includeMetadata: true,\n        includeFilters: false,\n        includeAllLayers: true,\n        includeAllElements: true,\n        includeLabels: true,\n      };\n\n      const response = await knowledgeGraphApi.exportKnowledgeGraph(\n        knowledgeGraph.id,\n        exportConfig,\n      );\n\n      if (response.success && response.data) {\n        const url = URL.createObjectURL(response.data);\n        const a = document.createElement(\"a\");\n        a.href = url;\n        a.download = `${knowledgeGraph.name}.svg`;\n        a.click();\n        URL.revokeObjectURL(url);\n      }\n    } catch (error) {\n      console.error(\"Failed to export graph:\", error);\n    }\n  }, [knowledgeGraph]);\n\n  const toggleLayerVisibility = useCallback((layerId: string) => {\n    setLayerSettings((prev) => ({\n      ...prev,\n      [layerId]: {\n        ...prev[layerId],\n        visible: !prev[layerId]?.visible,\n      },\n    }));\n  }, []);\n\n  const updateLayerOpacity = useCallback((layerId: string, opacity: number) => {\n    setLayerSettings((prev) => ({\n      ...prev,\n      [layerId]: {\n        ...prev[layerId],\n        opacity,\n      },\n    }));\n  }, []);\n\n  return (\n    <div\n      className={`dual-layer-knowledge-graph ${className}`}\n      ref={containerRef}\n    >\n      <Card className=\"w-full\">\n        <CardHeader className=\"pb-4\">\n          <div className=\"flex items-center justify-between\">\n            <CardTitle className=\"text-lg font-semibold\">\n              {knowledgeGraph?.name || \"Knowledge Graph\"}\n            </CardTitle>\n            <div className=\"flex items-center gap-2\">\n              <Badge variant=\"outline\">\n                {processedData.nodes.length} nodes\n              </Badge>\n              <Badge variant=\"outline\">\n                {processedData.edges.length} edges\n              </Badge>\n              <Badge variant=\"outline\">\n                {processedData.layers.length} layers\n              </Badge>\n            </div>\n          </div>\n\n          {/* Controls */}\n          <div className=\"flex items-center justify-between gap-4\">\n            <div className=\"flex items-center gap-2\">\n              <Button variant=\"outline\" size=\"sm\" onClick={toggleSimulation}>\n                {isSimulationRunning ? (\n                  <Pause className=\"h-4 w-4\" />\n                ) : (\n                  <Play className=\"h-4 w-4\" />\n                )}\n              </Button>\n              <Button variant=\"outline\" size=\"sm\" onClick={resetSimulation}>\n                <RotateCcw className=\"h-4 w-4\" />\n              </Button>\n              <Button variant=\"outline\" size=\"sm\" onClick={zoomIn}>\n                <ZoomIn className=\"h-4 w-4\" />\n              </Button>\n              <Button variant=\"outline\" size=\"sm\" onClick={zoomOut}>\n                <ZoomOut className=\"h-4 w-4\" />\n              </Button>\n              <Button variant=\"outline\" size=\"sm\" onClick={exportGraph}>\n                <Download className=\"h-4 w-4\" />\n              </Button>\n            </div>\n\n            <div className=\"flex items-center gap-2\">\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => setShowFilters(!showFilters)}\n              >\n                <Filter className=\"h-4 w-4\" />\n              </Button>\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => setShowSettings(!showSettings)}\n              >\n                <Settings className=\"h-4 w-4\" />\n              </Button>\n            </div>\n          </div>\n\n          {/* Search */}\n          <div className=\"flex items-center gap-2\">\n            <Search className=\"h-4 w-4 text-muted-foreground\" />\n            <input\n              type=\"text\"\n              placeholder=\"Search nodes...\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              className=\"flex-1 px-3 py-1 text-sm border rounded-md\"\n            />\n          </div>\n        </CardHeader>\n\n        <CardContent className=\"p-0\">\n          <div className=\"flex\">\n            {/* Main visualization */}\n            <div className=\"flex-1\">\n              <svg\n                ref={svgRef}\n                width={width}\n                height={height}\n                className=\"border rounded-lg\"\n              >\n                <g className=\"graph-container\" />\n              </svg>\n            </div>\n\n            {/* Side panels */}\n            <div className=\"w-80 border-l\">\n              <Tabs defaultValue=\"layers\" className=\"h-full\">\n                <TabsList className=\"grid w-full grid-cols-3\">\n                  <TabsTrigger value=\"layers\">Layers</TabsTrigger>\n                  <TabsTrigger value=\"settings\">Settings</TabsTrigger>\n                  <TabsTrigger value=\"details\">Details</TabsTrigger>\n                </TabsList>\n\n                <TabsContent value=\"layers\" className=\"p-4 space-y-4\">\n                  <div className=\"space-y-3\">\n                    {processedData.layers.map((layer) => (\n                      <div key={layer.id} className=\"space-y-2\">\n                        <div className=\"flex items-center justify-between\">\n                          <div className=\"flex items-center gap-2\">\n                            <Button\n                              variant=\"ghost\"\n                              size=\"sm\"\n                              onClick={() => toggleLayerVisibility(layer.id)}\n                            >\n                              {layerSettings[layer.id]?.visible ? (\n                                <Eye className=\"h-4 w-4\" />\n                              ) : (\n                                <EyeOff className=\"h-4 w-4\" />\n                              )}\n                            </Button>\n                            <span className=\"font-medium\">{layer.name}</span>\n                          </div>\n                          <Badge variant=\"secondary\">{layer.type}</Badge>\n                        </div>\n\n                        <div className=\"ml-6 space-y-2\">\n                          <div className=\"flex items-center gap-2\">\n                            <Label className=\"text-xs\">Opacity</Label>\n                            <Slider\n                              value={[layerSettings[layer.id]?.opacity || 1]}\n                              onValueChange={([value]) =>\n                                updateLayerOpacity(layer.id, value)\n                              }\n                              max={1}\n                              min={0}\n                              step={0.1}\n                              className=\"flex-1\"\n                            />\n                          </div>\n\n                          <div className=\"text-xs text-muted-foreground\">\n                            {layer.nodes.length} nodes, {layer.edges.length}{\" \"}\n                            edges\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </TabsContent>\n\n                <TabsContent value=\"settings\" className=\"p-4 space-y-4\">\n                  <div className=\"space-y-4\">\n                    <div className=\"space-y-2\">\n                      <Label className=\"text-sm font-medium\">Simulation</Label>\n\n                      <div className=\"space-y-3\">\n                        <div className=\"flex items-center justify-between\">\n                          <Label className=\"text-xs\">Link Strength</Label>\n                          <Slider\n                            value={[simulationSettings.linkStrength]}\n                            onValueChange={([value]) =>\n                              setSimulationSettings((prev) => ({\n                                ...prev,\n                                linkStrength: value,\n                              }))\n                            }\n                            max={1}\n                            min={0}\n                            step={0.1}\n                            className=\"w-24\"\n                          />\n                        </div>\n\n                        <div className=\"flex items-center justify-between\">\n                          <Label className=\"text-xs\">Charge Strength</Label>\n                          <Slider\n                            value={[\n                              Math.abs(simulationSettings.chargeStrength),\n                            ]}\n                            onValueChange={([value]) =>\n                              setSimulationSettings((prev) => ({\n                                ...prev,\n                                chargeStrength: -value,\n                              }))\n                            }\n                            max={1000}\n                            min={0}\n                            step={50}\n                            className=\"w-24\"\n                          />\n                        </div>\n\n                        <div className=\"flex items-center justify-between\">\n                          <Label className=\"text-xs\">Collision Radius</Label>\n                          <Slider\n                            value={[simulationSettings.collideRadius]}\n                            onValueChange={([value]) =>\n                              setSimulationSettings((prev) => ({\n                                ...prev,\n                                collideRadius: value,\n                              }))\n                            }\n                            max={50}\n                            min={0}\n                            step={5}\n                            className=\"w-24\"\n                          />\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"space-y-2\">\n                      <Label className=\"text-sm font-medium\">Performance</Label>\n\n                      <div className=\"flex items-center justify-between\">\n                        <Label className=\"text-xs\">Performance Mode</Label>\n                        <Switch\n                          checked={performanceMode}\n                          onCheckedChange={setPerformanceMode}\n                        />\n                      </div>\n\n                      {performanceMode && (\n                        <div className=\"flex items-center justify-between\">\n                          <Label className=\"text-xs\">Max Nodes</Label>\n                          <Slider\n                            value={[maxNodes]}\n                            onValueChange={([value]) => setMaxNodes(value)}\n                            max={1000}\n                            min={50}\n                            step={50}\n                            className=\"w-24\"\n                          />\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </TabsContent>\n\n                <TabsContent value=\"details\" className=\"p-4 space-y-4\">\n                  {selectedNode ? (\n                    <div className=\"space-y-3\">\n                      <h3 className=\"font-medium\">{selectedNode.title}</h3>\n                      <div className=\"space-y-2 text-sm\">\n                        <div>\n                          <strong>Type:</strong> {selectedNode.type}\n                        </div>\n                        <div>\n                          <strong>Confidence:</strong>{\" \"}\n                          {(selectedNode.confidence * 100).toFixed(1)}%\n                        </div>\n                        <div>\n                          <strong>Importance:</strong>{\" \"}\n                          {(selectedNode.importance * 100).toFixed(1)}%\n                        </div>\n                        {selectedNode.content && (\n                          <div>\n                            <strong>Content:</strong> {selectedNode.content}\n                          </div>\n                        )}\n                        {selectedNode.tags && selectedNode.tags.length > 0 && (\n                          <div>\n                            <strong>Tags:</strong>\n                            <div className=\"flex flex-wrap gap-1 mt-1\">\n                              {selectedNode.tags.map((tag) => (\n                                <Badge\n                                  key={tag}\n                                  variant=\"outline\"\n                                  className=\"text-xs\"\n                                >\n                                  {tag}\n                                </Badge>\n                              ))}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  ) : hoveredNode ? (\n                    <div className=\"space-y-2\">\n                      <h3 className=\"font-medium\">{hoveredNode.title}</h3>\n                      <div className=\"text-sm text-muted-foreground\">\n                        {hoveredNode.type} \u2022{\" \"}\n                        {(hoveredNode.confidence * 100).toFixed(1)}% confidence\n                      </div>\n                    </div>\n                  ) : (\n                    <div className=\"text-sm text-muted-foreground\">\n                      Click or hover on a node to see details\n                    </div>\n                  )}\n                </TabsContent>\n              </Tabs>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],
      names: ["DualLayerKnowledgeGraph", "graphId", "agentIds", "width", "height", "onNodeClick", "onEdgeClick", "onNodeHover", "className", "svgRef", "useRef", "containerRef", "simulationRef", "knowledgeGraph", "setKnowledgeGraph", "useState", "isSimulationRunning", "setIsSimulationRunning", "selectedNode", "setSelectedNode", "selectedEdge", "setSelectedEdge", "hoveredNode", "setHoveredNode", "searchQuery", "setSearchQuery", "showSettings", "setShowSettings", "showFilters", "setShowFilters", "layerSettings", "setLayerSettings", "activeLayer", "setActiveLayer", "simulationSettings", "setSimulationSettings", "linkStrength", "chargeStrength", "centerForce", "collideRadius", "alphaDecay", "velocityDecay", "transform", "setTransform", "d3", "zoomIdentity", "performanceMode", "setPerformanceMode", "maxNodes", "setMaxNodes", "processedData", "useMemo", "nodes", "edges", "layers", "allNodes", "allEdges", "forEach", "layer", "layerSetting", "id", "visible", "layerNodes", "map", "node", "layerId", "layerType", "type", "layerOpacity", "opacity", "layerColor", "color", "layerEdges", "edge", "sourceNode", "find", "n", "source", "targetNode", "target", "console", "warn", "filter", "Boolean", "push", "query", "toLowerCase", "title", "includes", "content", "tags", "some", "tag", "visibleNodeIds", "Set", "has", "length", "sort", "a", "b", "importance", "slice", "useEffect", "newLayerSettings", "isVisible", "nodeScale", "edgeScale", "loadKnowledgeGraph", "response", "knowledgeGraphApi", "getKnowledgeGraphs", "agentId", "includeMetadata", "limit", "success", "data", "mockGraph", "name", "description", "x", "y", "radius", "ownerType", "confidence", "lastUpdated", "Date", "createdAt", "strength", "version", "layout", "renderer", "lodEnabled", "clusteringEnabled", "filters", "nodeTypes", "confidenceRange", "importanceRange", "edgeTypes", "strengthRange", "showOnlyConnected", "hideIsolatedNodes", "selectedNodes", "selectedEdges", "zoom", "pan", "error", "current", "svg", "select", "container", "selectAll", "remove", "edgeGroup", "append", "attr", "nodeGroup", "labelGroup", "simulation", "forceSimulation", "force", "forceLink", "d", "forceManyBody", "forceCenter", "forceCollide", "enter", "Math", "max", "style", "on", "event", "stopPropagation", "drag", "active", "alphaTarget", "restart", "fx", "fy", "call", "labels", "text", "stop", "scaleExtent", "connectWebSocket", "subscribe", "update", "log", "disconnectWebSocket", "toggleSimulation", "useCallback", "resetSimulation", "alpha", "zoomIn", "transition", "scaleBy", "zoomOut", "exportGraph", "exportConfig", "format", "includeFilters", "includeAllLayers", "includeAllElements", "includeLabels", "exportKnowledgeGraph", "url", "URL", "createObjectURL", "document", "createElement", "href", "download", "click", "revokeObjectURL", "toggleLayerVisibility", "prev", "updateLayerOpacity", "div", "ref", "Card", "CardHeader", "CardTitle", "Badge", "variant", "Button", "size", "onClick", "Pause", "Play", "RotateCcw", "ZoomIn", "ZoomOut", "Download", "Filter", "Settings", "Search", "input", "placeholder", "value", "onChange", "e", "CardContent", "g", "Tabs", "defaultValue", "TabsList", "TabsTrigger", "TabsContent", "Eye", "EyeOff", "span", "Label", "Slider", "onValueChange", "min", "step", "abs", "Switch", "checked", "onCheckedChange", "h3", "strong", "toFixed"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0baccbcf8eda26abc2db92f0143f6279e43ac1ce"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_keruc1mme = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_keruc1mme();
cov_keruc1mme().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_keruc1mme().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_keruc1mme().f[0]++;
    cov_keruc1mme().s[2]++;
    return DualLayerKnowledgeGraph;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_keruc1mme().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_keruc1mme().s[4]++, _interop_require_wildcard(require("react")));
const _d3 =
/* istanbul ignore next */
(/*#__PURE__*/cov_keruc1mme().s[5]++, _interop_require_wildcard(require("d3")));
const _card =
/* istanbul ignore next */
(cov_keruc1mme().s[6]++, require("./ui/card"));
const _button =
/* istanbul ignore next */
(cov_keruc1mme().s[7]++, require("./ui/button"));
const _slider =
/* istanbul ignore next */
(cov_keruc1mme().s[8]++, require("./ui/slider"));
const _switch =
/* istanbul ignore next */
(cov_keruc1mme().s[9]++, require("./ui/switch"));
const _label =
/* istanbul ignore next */
(cov_keruc1mme().s[10]++, require("./ui/label"));
const _badge =
/* istanbul ignore next */
(cov_keruc1mme().s[11]++, require("./ui/badge"));
const _tabs =
/* istanbul ignore next */
(cov_keruc1mme().s[12]++, require("./ui/tabs"));
const _lucidereact =
/* istanbul ignore next */
(cov_keruc1mme().s[13]++, require("lucide-react"));
const _knowledgegraph =
/* istanbul ignore next */
(cov_keruc1mme().s[14]++, require("../lib/api/knowledge-graph"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_keruc1mme().f[1]++;
  cov_keruc1mme().s[15]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_keruc1mme().b[0][0]++;
    cov_keruc1mme().s[16]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_keruc1mme().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_keruc1mme().s[17]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_keruc1mme().s[18]++, new WeakMap());
  /* istanbul ignore next */
  cov_keruc1mme().s[19]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_keruc1mme().f[2]++;
    cov_keruc1mme().s[20]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_keruc1mme().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_keruc1mme().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_keruc1mme().f[3]++;
  cov_keruc1mme().s[21]++;
  if (
  /* istanbul ignore next */
  (cov_keruc1mme().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_keruc1mme().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_keruc1mme().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_keruc1mme().b[2][0]++;
    cov_keruc1mme().s[22]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_keruc1mme().b[2][1]++;
  }
  cov_keruc1mme().s[23]++;
  if (
  /* istanbul ignore next */
  (cov_keruc1mme().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_keruc1mme().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_keruc1mme().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_keruc1mme().b[4][0]++;
    cov_keruc1mme().s[24]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_keruc1mme().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_keruc1mme().s[25]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_keruc1mme().s[26]++;
  if (
  /* istanbul ignore next */
  (cov_keruc1mme().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_keruc1mme().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_keruc1mme().b[6][0]++;
    cov_keruc1mme().s[27]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_keruc1mme().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_keruc1mme().s[28]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_keruc1mme().s[29]++,
  /* istanbul ignore next */
  (cov_keruc1mme().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_keruc1mme().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_keruc1mme().s[30]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_keruc1mme().s[31]++;
    if (
    /* istanbul ignore next */
    (cov_keruc1mme().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_keruc1mme().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_keruc1mme().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_keruc1mme().s[32]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_keruc1mme().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_keruc1mme().b[11][1]++, null));
      /* istanbul ignore next */
      cov_keruc1mme().s[33]++;
      if (
      /* istanbul ignore next */
      (cov_keruc1mme().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_keruc1mme().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_keruc1mme().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_keruc1mme().b[12][0]++;
        cov_keruc1mme().s[34]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_keruc1mme().b[12][1]++;
        cov_keruc1mme().s[35]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_keruc1mme().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_keruc1mme().s[36]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_keruc1mme().s[37]++;
  if (cache) {
    /* istanbul ignore next */
    cov_keruc1mme().b[14][0]++;
    cov_keruc1mme().s[38]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_keruc1mme().b[14][1]++;
  }
  cov_keruc1mme().s[39]++;
  return newObj;
}
function DualLayerKnowledgeGraph({
  graphId,
  agentIds =
  /* istanbul ignore next */
  (cov_keruc1mme().b[15][0]++, []),
  width =
  /* istanbul ignore next */
  (cov_keruc1mme().b[16][0]++, 800),
  height =
  /* istanbul ignore next */
  (cov_keruc1mme().b[17][0]++, 600),
  onNodeClick,
  onEdgeClick,
  onNodeHover,
  className =
  /* istanbul ignore next */
  (cov_keruc1mme().b[18][0]++, "")
}) {
  /* istanbul ignore next */
  cov_keruc1mme().f[4]++;
  // Refs for D3 elements
  const svgRef =
  /* istanbul ignore next */
  (cov_keruc1mme().s[40]++, (0, _react.useRef)(null));
  const containerRef =
  /* istanbul ignore next */
  (cov_keruc1mme().s[41]++, (0, _react.useRef)(null));
  const simulationRef =
  /* istanbul ignore next */
  (cov_keruc1mme().s[42]++, (0, _react.useRef)(null));
  // State management
  const [knowledgeGraph, setKnowledgeGraph] =
  /* istanbul ignore next */
  (cov_keruc1mme().s[43]++, (0, _react.useState)(null));
  const [isSimulationRunning, setIsSimulationRunning] =
  /* istanbul ignore next */
  (cov_keruc1mme().s[44]++, (0, _react.useState)(true));
  const [selectedNode, setSelectedNode] =
  /* istanbul ignore next */
  (cov_keruc1mme().s[45]++, (0, _react.useState)(null));
  const [selectedEdge, setSelectedEdge] =
  /* istanbul ignore next */
  (cov_keruc1mme().s[46]++, (0, _react.useState)(null));
  const [hoveredNode, setHoveredNode] =
  /* istanbul ignore next */
  (cov_keruc1mme().s[47]++, (0, _react.useState)(null));
  const [searchQuery, setSearchQuery] =
  /* istanbul ignore next */
  (cov_keruc1mme().s[48]++, (0, _react.useState)(""));
  const [showSettings, setShowSettings] =
  /* istanbul ignore next */
  (cov_keruc1mme().s[49]++, (0, _react.useState)(false));
  const [showFilters, setShowFilters] =
  /* istanbul ignore next */
  (cov_keruc1mme().s[50]++, (0, _react.useState)(false));
  // Layer management state
  const [layerSettings, setLayerSettings] =
  /* istanbul ignore next */
  (cov_keruc1mme().s[51]++, (0, _react.useState)({}));
  const [activeLayer, setActiveLayer] =
  /* istanbul ignore next */
  (cov_keruc1mme().s[52]++, (0, _react.useState)("all"));
  // Simulation settings
  const [simulationSettings, setSimulationSettings] =
  /* istanbul ignore next */
  (cov_keruc1mme().s[53]++, (0, _react.useState)({
    linkStrength: 0.3,
    chargeStrength: -300,
    centerForce: 0.05,
    collideRadius: 20,
    alphaDecay: 0.01,
    velocityDecay: 0.4
  }));
  // Zoom and pan state
  const [transform, setTransform] =
  /* istanbul ignore next */
  (cov_keruc1mme().s[54]++, (0, _react.useState)(_d3.zoomIdentity));
  // Performance settings
  const [performanceMode, setPerformanceMode] =
  /* istanbul ignore next */
  (cov_keruc1mme().s[55]++, (0, _react.useState)(false));
  const [maxNodes, setMaxNodes] =
  /* istanbul ignore next */
  (cov_keruc1mme().s[56]++, (0, _react.useState)(500));
  // Computed data
  const processedData =
  /* istanbul ignore next */
  (cov_keruc1mme().s[57]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_keruc1mme().f[5]++;
    cov_keruc1mme().s[58]++;
    if (!knowledgeGraph) {
      /* istanbul ignore next */
      cov_keruc1mme().b[19][0]++;
      cov_keruc1mme().s[59]++;
      return {
        nodes: [],
        edges: [],
        layers: []
      };
    } else
    /* istanbul ignore next */
    {
      cov_keruc1mme().b[19][1]++;
    }
    let allNodes =
    /* istanbul ignore next */
    (cov_keruc1mme().s[60]++, []);
    let allEdges =
    /* istanbul ignore next */
    (cov_keruc1mme().s[61]++, []);
    // Process each layer
    /* istanbul ignore next */
    cov_keruc1mme().s[62]++;
    knowledgeGraph.layers.forEach(layer => {
      /* istanbul ignore next */
      cov_keruc1mme().f[6]++;
      const layerSetting =
      /* istanbul ignore next */
      (cov_keruc1mme().s[63]++, layerSettings[layer.id]);
      /* istanbul ignore next */
      cov_keruc1mme().s[64]++;
      if (
      /* istanbul ignore next */
      (cov_keruc1mme().b[21][0]++, !layerSetting?.visible) &&
      /* istanbul ignore next */
      (cov_keruc1mme().b[21][1]++, activeLayer !== "all") &&
      /* istanbul ignore next */
      (cov_keruc1mme().b[21][2]++, activeLayer !== layer.id)) {
        /* istanbul ignore next */
        cov_keruc1mme().b[20][0]++;
        cov_keruc1mme().s[65]++;
        return; // Skip invisible layers
      } else
      /* istanbul ignore next */
      {
        cov_keruc1mme().b[20][1]++;
      }
      // Add nodes with layer context
      const layerNodes =
      /* istanbul ignore next */
      (cov_keruc1mme().s[66]++, layer.nodes.map(node => {
        /* istanbul ignore next */
        cov_keruc1mme().f[7]++;
        cov_keruc1mme().s[67]++;
        return {
          ...node,
          layerId: layer.id,
          layerType: layer.type,
          layerOpacity:
          /* istanbul ignore next */
          (cov_keruc1mme().b[22][0]++, layerSetting?.opacity) ||
          /* istanbul ignore next */
          (cov_keruc1mme().b[22][1]++, 1.0),
          layerColor:
          /* istanbul ignore next */
          (cov_keruc1mme().b[23][0]++, layerSetting?.color) ||
          /* istanbul ignore next */
          (cov_keruc1mme().b[23][1]++, layer.color) ||
          /* istanbul ignore next */
          (cov_keruc1mme().b[23][2]++, node.color)
        };
      }));
      // Add edges with layer context
      const layerEdges =
      /* istanbul ignore next */
      (cov_keruc1mme().s[68]++, layer.edges.map(edge => {
        /* istanbul ignore next */
        cov_keruc1mme().f[8]++;
        const sourceNode =
        /* istanbul ignore next */
        (cov_keruc1mme().s[69]++, layerNodes.find(n => {
          /* istanbul ignore next */
          cov_keruc1mme().f[9]++;
          cov_keruc1mme().s[70]++;
          return n.id === edge.source;
        }));
        const targetNode =
        /* istanbul ignore next */
        (cov_keruc1mme().s[71]++, layerNodes.find(n => {
          /* istanbul ignore next */
          cov_keruc1mme().f[10]++;
          cov_keruc1mme().s[72]++;
          return n.id === edge.target;
        }));
        /* istanbul ignore next */
        cov_keruc1mme().s[73]++;
        if (
        /* istanbul ignore next */
        (cov_keruc1mme().b[25][0]++, !sourceNode) ||
        /* istanbul ignore next */
        (cov_keruc1mme().b[25][1]++, !targetNode)) {
          /* istanbul ignore next */
          cov_keruc1mme().b[24][0]++;
          cov_keruc1mme().s[74]++;
          console.warn(`Edge ${edge.id} references missing nodes`);
          /* istanbul ignore next */
          cov_keruc1mme().s[75]++;
          return null;
        } else
        /* istanbul ignore next */
        {
          cov_keruc1mme().b[24][1]++;
        }
        cov_keruc1mme().s[76]++;
        return {
          ...edge,
          source: sourceNode,
          target: targetNode,
          layerId: layer.id,
          layerOpacity:
          /* istanbul ignore next */
          (cov_keruc1mme().b[26][0]++, layerSetting?.opacity) ||
          /* istanbul ignore next */
          (cov_keruc1mme().b[26][1]++, 1.0)
        };
      }).filter(Boolean));
      /* istanbul ignore next */
      cov_keruc1mme().s[77]++;
      allNodes.push(...layerNodes);
      /* istanbul ignore next */
      cov_keruc1mme().s[78]++;
      allEdges.push(...layerEdges);
    });
    // Apply search filter
    /* istanbul ignore next */
    cov_keruc1mme().s[79]++;
    if (searchQuery) {
      /* istanbul ignore next */
      cov_keruc1mme().b[27][0]++;
      const query =
      /* istanbul ignore next */
      (cov_keruc1mme().s[80]++, searchQuery.toLowerCase());
      /* istanbul ignore next */
      cov_keruc1mme().s[81]++;
      allNodes = allNodes.filter(node => {
        /* istanbul ignore next */
        cov_keruc1mme().f[11]++;
        cov_keruc1mme().s[82]++;
        return /* istanbul ignore next */(cov_keruc1mme().b[28][0]++, node.title.toLowerCase().includes(query)) ||
        /* istanbul ignore next */
        (cov_keruc1mme().b[28][1]++, node.content?.toLowerCase().includes(query)) ||
        /* istanbul ignore next */
        (cov_keruc1mme().b[28][2]++, node.tags?.some(tag => {
          /* istanbul ignore next */
          cov_keruc1mme().f[12]++;
          cov_keruc1mme().s[83]++;
          return tag.toLowerCase().includes(query);
        }));
      });
      // Filter edges to only include those with both nodes visible
      const visibleNodeIds =
      /* istanbul ignore next */
      (cov_keruc1mme().s[84]++, new Set(allNodes.map(n => {
        /* istanbul ignore next */
        cov_keruc1mme().f[13]++;
        cov_keruc1mme().s[85]++;
        return n.id;
      })));
      /* istanbul ignore next */
      cov_keruc1mme().s[86]++;
      allEdges = allEdges.filter(edge => {
        /* istanbul ignore next */
        cov_keruc1mme().f[14]++;
        cov_keruc1mme().s[87]++;
        return /* istanbul ignore next */(cov_keruc1mme().b[29][0]++, visibleNodeIds.has(edge.source.id)) &&
        /* istanbul ignore next */
        (cov_keruc1mme().b[29][1]++, visibleNodeIds.has(edge.target.id));
      });
    } else
    /* istanbul ignore next */
    {
      cov_keruc1mme().b[27][1]++;
    }
    // Apply performance limits
    cov_keruc1mme().s[88]++;
    if (
    /* istanbul ignore next */
    (cov_keruc1mme().b[31][0]++, performanceMode) &&
    /* istanbul ignore next */
    (cov_keruc1mme().b[31][1]++, allNodes.length > maxNodes)) {
      /* istanbul ignore next */
      cov_keruc1mme().b[30][0]++;
      cov_keruc1mme().s[89]++;
      // Sort by importance and take top nodes
      allNodes.sort((a, b) => {
        /* istanbul ignore next */
        cov_keruc1mme().f[15]++;
        cov_keruc1mme().s[90]++;
        return (
        /* istanbul ignore next */
        (cov_keruc1mme().b[32][0]++, b.importance) ||
        /* istanbul ignore next */
        (cov_keruc1mme().b[32][1]++, 0)) - (
        /* istanbul ignore next */
        (cov_keruc1mme().b[33][0]++, a.importance) ||
        /* istanbul ignore next */
        (cov_keruc1mme().b[33][1]++, 0));
      });
      /* istanbul ignore next */
      cov_keruc1mme().s[91]++;
      allNodes = allNodes.slice(0, maxNodes);
      const visibleNodeIds =
      /* istanbul ignore next */
      (cov_keruc1mme().s[92]++, new Set(allNodes.map(n => {
        /* istanbul ignore next */
        cov_keruc1mme().f[16]++;
        cov_keruc1mme().s[93]++;
        return n.id;
      })));
      /* istanbul ignore next */
      cov_keruc1mme().s[94]++;
      allEdges = allEdges.filter(edge => {
        /* istanbul ignore next */
        cov_keruc1mme().f[17]++;
        cov_keruc1mme().s[95]++;
        return /* istanbul ignore next */(cov_keruc1mme().b[34][0]++, visibleNodeIds.has(edge.source.id)) &&
        /* istanbul ignore next */
        (cov_keruc1mme().b[34][1]++, visibleNodeIds.has(edge.target.id));
      });
    } else
    /* istanbul ignore next */
    {
      cov_keruc1mme().b[30][1]++;
    }
    cov_keruc1mme().s[96]++;
    return {
      nodes: allNodes,
      edges: allEdges,
      layers: knowledgeGraph.layers
    };
  }, [knowledgeGraph, layerSettings, activeLayer, searchQuery, performanceMode, maxNodes]));
  // Initialize layer settings when graph changes
  /* istanbul ignore next */
  cov_keruc1mme().s[97]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_keruc1mme().f[18]++;
    cov_keruc1mme().s[98]++;
    if (knowledgeGraph) {
      /* istanbul ignore next */
      cov_keruc1mme().b[35][0]++;
      const newLayerSettings =
      /* istanbul ignore next */
      (cov_keruc1mme().s[99]++, {});
      /* istanbul ignore next */
      cov_keruc1mme().s[100]++;
      knowledgeGraph.layers.forEach(layer => {
        /* istanbul ignore next */
        cov_keruc1mme().f[19]++;
        cov_keruc1mme().s[101]++;
        newLayerSettings[layer.id] = {
          visible: layer.isVisible,
          opacity: layer.opacity,
          color:
          /* istanbul ignore next */
          (cov_keruc1mme().b[36][0]++, layer.color) ||
          /* istanbul ignore next */
          (cov_keruc1mme().b[36][1]++, "#3b82f6"),
          nodeScale: 1.0,
          edgeScale: 1.0
        };
      });
      /* istanbul ignore next */
      cov_keruc1mme().s[102]++;
      setLayerSettings(newLayerSettings);
    } else
    /* istanbul ignore next */
    {
      cov_keruc1mme().b[35][1]++;
    }
  }, [knowledgeGraph]);
  // Load knowledge graph data
  /* istanbul ignore next */
  cov_keruc1mme().s[103]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_keruc1mme().f[20]++;
    cov_keruc1mme().s[104]++;
    const loadKnowledgeGraph = async () => {
      /* istanbul ignore next */
      cov_keruc1mme().f[21]++;
      cov_keruc1mme().s[105]++;
      try {
        const response =
        /* istanbul ignore next */
        (cov_keruc1mme().s[106]++, await _knowledgegraph.knowledgeGraphApi.getKnowledgeGraphs({
          agentId: agentIds[0],
          includeMetadata: true,
          limit: 1
        }));
        /* istanbul ignore next */
        cov_keruc1mme().s[107]++;
        if (
        /* istanbul ignore next */
        (cov_keruc1mme().b[38][0]++, response.success) &&
        /* istanbul ignore next */
        (cov_keruc1mme().b[38][1]++, response.data) &&
        /* istanbul ignore next */
        (cov_keruc1mme().b[38][2]++, response.data.length > 0)) {
          /* istanbul ignore next */
          cov_keruc1mme().b[37][0]++;
          cov_keruc1mme().s[108]++;
          setKnowledgeGraph(response.data[0]);
        } else {
          /* istanbul ignore next */
          cov_keruc1mme().b[37][1]++;
          // Create mock data for demonstration
          const mockGraph =
          /* istanbul ignore next */
          (cov_keruc1mme().s[109]++, {
            id: "demo-graph",
            name: "Demo Knowledge Graph",
            description: "Demonstration dual-layer knowledge graph",
            layers: [{
              id: "collective-layer",
              name: "Collective Knowledge",
              type: "collective",
              nodes: [{
                id: "concept-1",
                title: "Resource Management",
                type: "concept",
                content: "Collective understanding of resource allocation strategies",
                x: 200,
                y: 200,
                radius: 20,
                color: "#3b82f6",
                ownerType: "collective",
                confidence: 0.9,
                importance: 0.8,
                lastUpdated: new Date(),
                createdAt: new Date(),
                tags: ["resources", "strategy", "collective"]
              }, {
                id: "fact-1",
                title: "Trading Post Alpha",
                type: "fact",
                content: "Verified trading location with high activity",
                x: 300,
                y: 150,
                radius: 15,
                color: "#10b981",
                ownerType: "collective",
                confidence: 0.95,
                importance: 0.7,
                lastUpdated: new Date(),
                createdAt: new Date(),
                tags: ["trading", "location", "verified"]
              }],
              edges: [{
                id: "edge-1",
                source: "concept-1",
                target: "fact-1",
                type: "relates_to",
                strength: 0.8,
                confidence: 0.85,
                color: "#6366f1",
                createdAt: new Date(),
                lastUpdated: new Date()
              }],
              isVisible: true,
              opacity: 1.0,
              color: "#3b82f6"
            }, {
              id: "individual-layer",
              name: "Individual Beliefs",
              type: "individual",
              agentId:
              /* istanbul ignore next */
              (cov_keruc1mme().b[39][0]++, agentIds[0]) ||
              /* istanbul ignore next */
              (cov_keruc1mme().b[39][1]++, "agent-1"),
              nodes: [{
                id: "belief-1",
                title: "Market Opportunity",
                type: "belief",
                content: "Personal belief about emerging market trends",
                x: 250,
                y: 300,
                radius: 12,
                color: "#f59e0b",
                agentId:
                /* istanbul ignore next */
                (cov_keruc1mme().b[40][0]++, agentIds[0]) ||
                /* istanbul ignore next */
                (cov_keruc1mme().b[40][1]++, "agent-1"),
                ownerType: "individual",
                confidence: 0.75,
                importance: 0.6,
                lastUpdated: new Date(),
                createdAt: new Date(),
                tags: ["market", "opportunity", "personal"]
              }],
              edges: [],
              isVisible: true,
              opacity: 0.8,
              color: "#f59e0b"
            }],
            createdAt: new Date(),
            lastUpdated: new Date(),
            version: "1.0.0",
            layout: "force-directed",
            renderer: "d3",
            maxNodes: 1000,
            lodEnabled: true,
            clusteringEnabled: false,
            filters: {
              nodeTypes: ["concept", "fact", "belief"],
              confidenceRange: [0.0, 1.0],
              importanceRange: [0.0, 1.0],
              agentIds: agentIds,
              tags: [],
              edgeTypes: ["relates_to", "supports", "contradicts"],
              strengthRange: [0.0, 1.0],
              showOnlyConnected: false,
              hideIsolatedNodes: false
            },
            selectedNodes: [],
            selectedEdges: [],
            zoom: 1.0,
            pan: {
              x: 0,
              y: 0
            }
          });
          /* istanbul ignore next */
          cov_keruc1mme().s[110]++;
          setKnowledgeGraph(mockGraph);
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_keruc1mme().s[111]++;
        console.error("Failed to load knowledge graph:", error);
      }
    };
    /* istanbul ignore next */
    cov_keruc1mme().s[112]++;
    loadKnowledgeGraph();
  }, [graphId, agentIds]);
  // Initialize D3 visualization
  /* istanbul ignore next */
  cov_keruc1mme().s[113]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_keruc1mme().f[22]++;
    cov_keruc1mme().s[114]++;
    if (
    /* istanbul ignore next */
    (cov_keruc1mme().b[42][0]++, !svgRef.current) ||
    /* istanbul ignore next */
    (cov_keruc1mme().b[42][1]++, !processedData.nodes.length)) {
      /* istanbul ignore next */
      cov_keruc1mme().b[41][0]++;
      cov_keruc1mme().s[115]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_keruc1mme().b[41][1]++;
    }
    const svg =
    /* istanbul ignore next */
    (cov_keruc1mme().s[116]++, _d3.select(svgRef.current));
    const container =
    /* istanbul ignore next */
    (cov_keruc1mme().s[117]++, svg.select(".graph-container"));
    // Clear existing content
    /* istanbul ignore next */
    cov_keruc1mme().s[118]++;
    container.selectAll("*").remove();
    // Create groups for different elements
    const edgeGroup =
    /* istanbul ignore next */
    (cov_keruc1mme().s[119]++, container.append("g").attr("class", "edges"));
    const nodeGroup =
    /* istanbul ignore next */
    (cov_keruc1mme().s[120]++, container.append("g").attr("class", "nodes"));
    const labelGroup =
    /* istanbul ignore next */
    (cov_keruc1mme().s[121]++, container.append("g").attr("class", "labels"));
    // Initialize force simulation
    const simulation =
    /* istanbul ignore next */
    (cov_keruc1mme().s[122]++, _d3.forceSimulation(processedData.nodes).force("link", _d3.forceLink(processedData.edges).id(d => {
      /* istanbul ignore next */
      cov_keruc1mme().f[23]++;
      cov_keruc1mme().s[123]++;
      return d.id;
    }).strength(simulationSettings.linkStrength)).force("charge", _d3.forceManyBody().strength(simulationSettings.chargeStrength)).force("center", _d3.forceCenter(width / 2, height / 2).strength(simulationSettings.centerForce)).force("collision", _d3.forceCollide().radius(d => {
      /* istanbul ignore next */
      cov_keruc1mme().f[24]++;
      cov_keruc1mme().s[124]++;
      return (
      /* istanbul ignore next */
      (cov_keruc1mme().b[43][0]++, d.radius) ||
      /* istanbul ignore next */
      (cov_keruc1mme().b[43][1]++, 10)) + simulationSettings.collideRadius;
    })).alphaDecay(simulationSettings.alphaDecay).velocityDecay(simulationSettings.velocityDecay));
    /* istanbul ignore next */
    cov_keruc1mme().s[125]++;
    simulationRef.current = simulation;
    // Create edges
    const edges =
    /* istanbul ignore next */
    (cov_keruc1mme().s[126]++, edgeGroup.selectAll(".edge").data(processedData.edges).enter().append("line").attr("class", "edge").attr("stroke", d => {
      /* istanbul ignore next */
      cov_keruc1mme().f[25]++;
      cov_keruc1mme().s[127]++;
      return d.color;
    }).attr("stroke-width", d => {
      /* istanbul ignore next */
      cov_keruc1mme().f[26]++;
      cov_keruc1mme().s[128]++;
      return Math.max(1, (
      /* istanbul ignore next */
      (cov_keruc1mme().b[44][0]++, d.strength) ||
      /* istanbul ignore next */
      (cov_keruc1mme().b[44][1]++, 0.5)) * 3);
    }).attr("stroke-opacity", d => {
      /* istanbul ignore next */
      cov_keruc1mme().f[27]++;
      cov_keruc1mme().s[129]++;
      return (
      /* istanbul ignore next */
      (cov_keruc1mme().b[45][0]++, d.layerOpacity) ||
      /* istanbul ignore next */
      (cov_keruc1mme().b[45][1]++, 1)) * 0.6;
    }).style("cursor", "pointer").on("click", (event, d) => {
      /* istanbul ignore next */
      cov_keruc1mme().f[28]++;
      cov_keruc1mme().s[130]++;
      event.stopPropagation();
      const edge =
      /* istanbul ignore next */
      (cov_keruc1mme().s[131]++, {
        ...d,
        source: typeof d.source === "object" ?
        /* istanbul ignore next */
        (cov_keruc1mme().b[46][0]++, d.source.id) :
        /* istanbul ignore next */
        (cov_keruc1mme().b[46][1]++, d.source),
        target: typeof d.target === "object" ?
        /* istanbul ignore next */
        (cov_keruc1mme().b[47][0]++, d.target.id) :
        /* istanbul ignore next */
        (cov_keruc1mme().b[47][1]++, d.target)
      });
      /* istanbul ignore next */
      cov_keruc1mme().s[132]++;
      setSelectedEdge(edge);
      /* istanbul ignore next */
      cov_keruc1mme().s[133]++;
      onEdgeClick?.(edge);
    }));
    // Create nodes
    const nodes =
    /* istanbul ignore next */
    (cov_keruc1mme().s[134]++, nodeGroup.selectAll(".node").data(processedData.nodes).enter().append("circle").attr("class", "node").attr("r", d => {
      /* istanbul ignore next */
      cov_keruc1mme().f[29]++;
      cov_keruc1mme().s[135]++;
      return /* istanbul ignore next */(cov_keruc1mme().b[48][0]++, d.radius) ||
      /* istanbul ignore next */
      (cov_keruc1mme().b[48][1]++, 10);
    }).attr("fill", d => {
      /* istanbul ignore next */
      cov_keruc1mme().f[30]++;
      cov_keruc1mme().s[136]++;
      return /* istanbul ignore next */(cov_keruc1mme().b[49][0]++, d.layerColor) ||
      /* istanbul ignore next */
      (cov_keruc1mme().b[49][1]++, d.color);
    }).attr("fill-opacity", d => {
      /* istanbul ignore next */
      cov_keruc1mme().f[31]++;
      cov_keruc1mme().s[137]++;
      return /* istanbul ignore next */(cov_keruc1mme().b[50][0]++, d.layerOpacity) ||
      /* istanbul ignore next */
      (cov_keruc1mme().b[50][1]++, 1);
    }).attr("stroke", d => {
      /* istanbul ignore next */
      cov_keruc1mme().f[32]++;
      cov_keruc1mme().s[138]++;
      return selectedNode?.id === d.id ?
      /* istanbul ignore next */
      (cov_keruc1mme().b[51][0]++, "#000") :
      /* istanbul ignore next */
      (cov_keruc1mme().b[51][1]++, "none");
    }).attr("stroke-width", 2).style("cursor", "pointer").on("click", (event, d) => {
      /* istanbul ignore next */
      cov_keruc1mme().f[33]++;
      cov_keruc1mme().s[139]++;
      event.stopPropagation();
      /* istanbul ignore next */
      cov_keruc1mme().s[140]++;
      setSelectedNode(d);
      /* istanbul ignore next */
      cov_keruc1mme().s[141]++;
      onNodeClick?.(d);
    }).on("mouseenter", (event, d) => {
      /* istanbul ignore next */
      cov_keruc1mme().f[34]++;
      cov_keruc1mme().s[142]++;
      setHoveredNode(d);
      /* istanbul ignore next */
      cov_keruc1mme().s[143]++;
      onNodeHover?.(d);
    }).on("mouseleave", () => {
      /* istanbul ignore next */
      cov_keruc1mme().f[35]++;
      cov_keruc1mme().s[144]++;
      setHoveredNode(null);
      /* istanbul ignore next */
      cov_keruc1mme().s[145]++;
      onNodeHover?.(null);
    }));
    // Add drag behavior
    const drag =
    /* istanbul ignore next */
    (cov_keruc1mme().s[146]++, _d3.drag().on("start", (event, d) => {
      /* istanbul ignore next */
      cov_keruc1mme().f[36]++;
      cov_keruc1mme().s[147]++;
      if (!event.active) {
        /* istanbul ignore next */
        cov_keruc1mme().b[52][0]++;
        cov_keruc1mme().s[148]++;
        simulation.alphaTarget(0.3).restart();
      } else
      /* istanbul ignore next */
      {
        cov_keruc1mme().b[52][1]++;
      }
      cov_keruc1mme().s[149]++;
      d.fx = d.x;
      /* istanbul ignore next */
      cov_keruc1mme().s[150]++;
      d.fy = d.y;
    }).on("drag", (event, d) => {
      /* istanbul ignore next */
      cov_keruc1mme().f[37]++;
      cov_keruc1mme().s[151]++;
      d.fx = event.x;
      /* istanbul ignore next */
      cov_keruc1mme().s[152]++;
      d.fy = event.y;
    }).on("end", (event, d) => {
      /* istanbul ignore next */
      cov_keruc1mme().f[38]++;
      cov_keruc1mme().s[153]++;
      if (!event.active) {
        /* istanbul ignore next */
        cov_keruc1mme().b[53][0]++;
        cov_keruc1mme().s[154]++;
        simulation.alphaTarget(0);
      } else
      /* istanbul ignore next */
      {
        cov_keruc1mme().b[53][1]++;
      }
      cov_keruc1mme().s[155]++;
      d.fx = null;
      /* istanbul ignore next */
      cov_keruc1mme().s[156]++;
      d.fy = null;
    }));
    /* istanbul ignore next */
    cov_keruc1mme().s[157]++;
    nodes.call(drag);
    // Create labels
    const labels =
    /* istanbul ignore next */
    (cov_keruc1mme().s[158]++, labelGroup.selectAll(".label").data(processedData.nodes).enter().append("text").attr("class", "label").attr("text-anchor", "middle").attr("dy", ".35em").attr("font-size", "12px").attr("fill", "#333").attr("pointer-events", "none").text(d => {
      /* istanbul ignore next */
      cov_keruc1mme().f[39]++;
      cov_keruc1mme().s[159]++;
      return d.title.length > 15 ?
      /* istanbul ignore next */
      (cov_keruc1mme().b[54][0]++, d.title.slice(0, 15) + "...") :
      /* istanbul ignore next */
      (cov_keruc1mme().b[54][1]++, d.title);
    }));
    // Update positions on simulation tick
    /* istanbul ignore next */
    cov_keruc1mme().s[160]++;
    simulation.on("tick", () => {
      /* istanbul ignore next */
      cov_keruc1mme().f[40]++;
      cov_keruc1mme().s[161]++;
      edges.attr("x1", d => {
        /* istanbul ignore next */
        cov_keruc1mme().f[41]++;
        cov_keruc1mme().s[162]++;
        return d.source.x;
      }).attr("y1", d => {
        /* istanbul ignore next */
        cov_keruc1mme().f[42]++;
        cov_keruc1mme().s[163]++;
        return d.source.y;
      }).attr("x2", d => {
        /* istanbul ignore next */
        cov_keruc1mme().f[43]++;
        cov_keruc1mme().s[164]++;
        return d.target.x;
      }).attr("y2", d => {
        /* istanbul ignore next */
        cov_keruc1mme().f[44]++;
        cov_keruc1mme().s[165]++;
        return d.target.y;
      });
      /* istanbul ignore next */
      cov_keruc1mme().s[166]++;
      nodes.attr("cx", d => {
        /* istanbul ignore next */
        cov_keruc1mme().f[45]++;
        cov_keruc1mme().s[167]++;
        return d.x;
      }).attr("cy", d => {
        /* istanbul ignore next */
        cov_keruc1mme().f[46]++;
        cov_keruc1mme().s[168]++;
        return d.y;
      });
      /* istanbul ignore next */
      cov_keruc1mme().s[169]++;
      labels.attr("x", d => {
        /* istanbul ignore next */
        cov_keruc1mme().f[47]++;
        cov_keruc1mme().s[170]++;
        return d.x;
      }).attr("y", d => {
        /* istanbul ignore next */
        cov_keruc1mme().f[48]++;
        cov_keruc1mme().s[171]++;
        return d.y + (
        /* istanbul ignore next */
        (cov_keruc1mme().b[55][0]++, d.radius) ||
        /* istanbul ignore next */
        (cov_keruc1mme().b[55][1]++, 10)) + 15;
      });
    });
    // Stop simulation if not running
    /* istanbul ignore next */
    cov_keruc1mme().s[172]++;
    if (!isSimulationRunning) {
      /* istanbul ignore next */
      cov_keruc1mme().b[56][0]++;
      cov_keruc1mme().s[173]++;
      simulation.stop();
    } else
    /* istanbul ignore next */
    {
      cov_keruc1mme().b[56][1]++;
    }
    cov_keruc1mme().s[174]++;
    return () => {
      /* istanbul ignore next */
      cov_keruc1mme().f[49]++;
      cov_keruc1mme().s[175]++;
      simulation.stop();
    };
  }, [processedData, simulationSettings, width, height, selectedNode, isSimulationRunning, onNodeClick, onEdgeClick, onNodeHover]);
  // Setup zoom behavior
  /* istanbul ignore next */
  cov_keruc1mme().s[176]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_keruc1mme().f[50]++;
    cov_keruc1mme().s[177]++;
    if (!svgRef.current) {
      /* istanbul ignore next */
      cov_keruc1mme().b[57][0]++;
      cov_keruc1mme().s[178]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_keruc1mme().b[57][1]++;
    }
    const svg =
    /* istanbul ignore next */
    (cov_keruc1mme().s[179]++, _d3.select(svgRef.current));
    const container =
    /* istanbul ignore next */
    (cov_keruc1mme().s[180]++, svg.select(".graph-container"));
    const zoom =
    /* istanbul ignore next */
    (cov_keruc1mme().s[181]++, _d3.zoom().scaleExtent([0.1, 10]).on("zoom", event => {
      /* istanbul ignore next */
      cov_keruc1mme().f[51]++;
      const {
        transform
      } =
      /* istanbul ignore next */
      (cov_keruc1mme().s[182]++, event);
      /* istanbul ignore next */
      cov_keruc1mme().s[183]++;
      setTransform(transform);
      /* istanbul ignore next */
      cov_keruc1mme().s[184]++;
      container.attr("transform", transform);
    }));
    /* istanbul ignore next */
    cov_keruc1mme().s[185]++;
    svg.call(zoom);
    /* istanbul ignore next */
    cov_keruc1mme().s[186]++;
    return () => {
      /* istanbul ignore next */
      cov_keruc1mme().f[52]++;
      cov_keruc1mme().s[187]++;
      svg.on(".zoom", null);
    };
  }, []);
  // WebSocket integration for real-time updates
  /* istanbul ignore next */
  cov_keruc1mme().s[188]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_keruc1mme().f[53]++;
    cov_keruc1mme().s[189]++;
    if (!graphId) {
      /* istanbul ignore next */
      cov_keruc1mme().b[58][0]++;
      cov_keruc1mme().s[190]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_keruc1mme().b[58][1]++;
    }
    cov_keruc1mme().s[191]++;
    const connectWebSocket = async () => {
      /* istanbul ignore next */
      cov_keruc1mme().f[54]++;
      cov_keruc1mme().s[192]++;
      try {
        /* istanbul ignore next */
        cov_keruc1mme().s[193]++;
        await _knowledgegraph.knowledgeGraphApi.connectWebSocket(graphId);
        // Subscribe to updates
        /* istanbul ignore next */
        cov_keruc1mme().s[194]++;
        _knowledgegraph.knowledgeGraphApi.subscribe("node_added", update => {
          /* istanbul ignore next */
          cov_keruc1mme().f[55]++;
          cov_keruc1mme().s[195]++;
          console.log("Node added:", update);
          // Handle node addition
        });
        /* istanbul ignore next */
        cov_keruc1mme().s[196]++;
        _knowledgegraph.knowledgeGraphApi.subscribe("node_updated", update => {
          /* istanbul ignore next */
          cov_keruc1mme().f[56]++;
          cov_keruc1mme().s[197]++;
          console.log("Node updated:", update);
          // Handle node update
        });
        /* istanbul ignore next */
        cov_keruc1mme().s[198]++;
        _knowledgegraph.knowledgeGraphApi.subscribe("edge_added", update => {
          /* istanbul ignore next */
          cov_keruc1mme().f[57]++;
          cov_keruc1mme().s[199]++;
          console.log("Edge added:", update);
          // Handle edge addition
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_keruc1mme().s[200]++;
        console.error("Failed to connect WebSocket:", error);
      }
    };
    /* istanbul ignore next */
    cov_keruc1mme().s[201]++;
    connectWebSocket();
    /* istanbul ignore next */
    cov_keruc1mme().s[202]++;
    return () => {
      /* istanbul ignore next */
      cov_keruc1mme().f[58]++;
      cov_keruc1mme().s[203]++;
      _knowledgegraph.knowledgeGraphApi.disconnectWebSocket();
    };
  }, [graphId]);
  // Control functions
  const toggleSimulation =
  /* istanbul ignore next */
  (cov_keruc1mme().s[204]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_keruc1mme().f[59]++;
    cov_keruc1mme().s[205]++;
    if (simulationRef.current) {
      /* istanbul ignore next */
      cov_keruc1mme().b[59][0]++;
      cov_keruc1mme().s[206]++;
      if (isSimulationRunning) {
        /* istanbul ignore next */
        cov_keruc1mme().b[60][0]++;
        cov_keruc1mme().s[207]++;
        simulationRef.current.stop();
      } else {
        /* istanbul ignore next */
        cov_keruc1mme().b[60][1]++;
        cov_keruc1mme().s[208]++;
        simulationRef.current.restart();
      }
      /* istanbul ignore next */
      cov_keruc1mme().s[209]++;
      setIsSimulationRunning(!isSimulationRunning);
    } else
    /* istanbul ignore next */
    {
      cov_keruc1mme().b[59][1]++;
    }
  }, [isSimulationRunning]));
  const resetSimulation =
  /* istanbul ignore next */
  (cov_keruc1mme().s[210]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_keruc1mme().f[60]++;
    cov_keruc1mme().s[211]++;
    if (simulationRef.current) {
      /* istanbul ignore next */
      cov_keruc1mme().b[61][0]++;
      cov_keruc1mme().s[212]++;
      simulationRef.current.alpha(1).restart();
      /* istanbul ignore next */
      cov_keruc1mme().s[213]++;
      setIsSimulationRunning(true);
    } else
    /* istanbul ignore next */
    {
      cov_keruc1mme().b[61][1]++;
    }
  }, []));
  const zoomIn =
  /* istanbul ignore next */
  (cov_keruc1mme().s[214]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_keruc1mme().f[61]++;
    cov_keruc1mme().s[215]++;
    if (svgRef.current) {
      /* istanbul ignore next */
      cov_keruc1mme().b[62][0]++;
      const svg =
      /* istanbul ignore next */
      (cov_keruc1mme().s[216]++, _d3.select(svgRef.current));
      /* istanbul ignore next */
      cov_keruc1mme().s[217]++;
      svg.transition().call(_d3.zoom().scaleBy, 1.5);
    } else
    /* istanbul ignore next */
    {
      cov_keruc1mme().b[62][1]++;
    }
  }, []));
  const zoomOut =
  /* istanbul ignore next */
  (cov_keruc1mme().s[218]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_keruc1mme().f[62]++;
    cov_keruc1mme().s[219]++;
    if (svgRef.current) {
      /* istanbul ignore next */
      cov_keruc1mme().b[63][0]++;
      const svg =
      /* istanbul ignore next */
      (cov_keruc1mme().s[220]++, _d3.select(svgRef.current));
      /* istanbul ignore next */
      cov_keruc1mme().s[221]++;
      svg.transition().call(_d3.zoom().scaleBy, 1 / 1.5);
    } else
    /* istanbul ignore next */
    {
      cov_keruc1mme().b[63][1]++;
    }
  }, []));
  const exportGraph =
  /* istanbul ignore next */
  (cov_keruc1mme().s[222]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_keruc1mme().f[63]++;
    cov_keruc1mme().s[223]++;
    if (!knowledgeGraph) {
      /* istanbul ignore next */
      cov_keruc1mme().b[64][0]++;
      cov_keruc1mme().s[224]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_keruc1mme().b[64][1]++;
    }
    cov_keruc1mme().s[225]++;
    try {
      const exportConfig =
      /* istanbul ignore next */
      (cov_keruc1mme().s[226]++, {
        format: "svg",
        includeMetadata: true,
        includeFilters: false,
        includeAllLayers: true,
        includeAllElements: true,
        includeLabels: true
      });
      const response =
      /* istanbul ignore next */
      (cov_keruc1mme().s[227]++, await _knowledgegraph.knowledgeGraphApi.exportKnowledgeGraph(knowledgeGraph.id, exportConfig));
      /* istanbul ignore next */
      cov_keruc1mme().s[228]++;
      if (
      /* istanbul ignore next */
      (cov_keruc1mme().b[66][0]++, response.success) &&
      /* istanbul ignore next */
      (cov_keruc1mme().b[66][1]++, response.data)) {
        /* istanbul ignore next */
        cov_keruc1mme().b[65][0]++;
        const url =
        /* istanbul ignore next */
        (cov_keruc1mme().s[229]++, URL.createObjectURL(response.data));
        const a =
        /* istanbul ignore next */
        (cov_keruc1mme().s[230]++, document.createElement("a"));
        /* istanbul ignore next */
        cov_keruc1mme().s[231]++;
        a.href = url;
        /* istanbul ignore next */
        cov_keruc1mme().s[232]++;
        a.download = `${knowledgeGraph.name}.svg`;
        /* istanbul ignore next */
        cov_keruc1mme().s[233]++;
        a.click();
        /* istanbul ignore next */
        cov_keruc1mme().s[234]++;
        URL.revokeObjectURL(url);
      } else
      /* istanbul ignore next */
      {
        cov_keruc1mme().b[65][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_keruc1mme().s[235]++;
      console.error("Failed to export graph:", error);
    }
  }, [knowledgeGraph]));
  const toggleLayerVisibility =
  /* istanbul ignore next */
  (cov_keruc1mme().s[236]++, (0, _react.useCallback)(layerId => {
    /* istanbul ignore next */
    cov_keruc1mme().f[64]++;
    cov_keruc1mme().s[237]++;
    setLayerSettings(prev => {
      /* istanbul ignore next */
      cov_keruc1mme().f[65]++;
      cov_keruc1mme().s[238]++;
      return {
        ...prev,
        [layerId]: {
          ...prev[layerId],
          visible: !prev[layerId]?.visible
        }
      };
    });
  }, []));
  const updateLayerOpacity =
  /* istanbul ignore next */
  (cov_keruc1mme().s[239]++, (0, _react.useCallback)((layerId, opacity) => {
    /* istanbul ignore next */
    cov_keruc1mme().f[66]++;
    cov_keruc1mme().s[240]++;
    setLayerSettings(prev => {
      /* istanbul ignore next */
      cov_keruc1mme().f[67]++;
      cov_keruc1mme().s[241]++;
      return {
        ...prev,
        [layerId]: {
          ...prev[layerId],
          opacity
        }
      };
    });
  }, []));
  /* istanbul ignore next */
  cov_keruc1mme().s[242]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: `dual-layer-knowledge-graph ${className}`,
    ref: containerRef,
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
      className: "w-full",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardHeader, {
        className: "pb-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex items-center justify-between",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
            className: "text-lg font-semibold",
            children:
            /* istanbul ignore next */
            (cov_keruc1mme().b[67][0]++, knowledgeGraph?.name) ||
            /* istanbul ignore next */
            (cov_keruc1mme().b[67][1]++, "Knowledge Graph")
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center gap-2",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_badge.Badge, {
              variant: "outline",
              children: [processedData.nodes.length, " nodes"]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_badge.Badge, {
              variant: "outline",
              children: [processedData.edges.length, " edges"]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_badge.Badge, {
              variant: "outline",
              children: [processedData.layers.length, " layers"]
            })]
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex items-center justify-between gap-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center gap-2",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
              variant: "outline",
              size: "sm",
              onClick: toggleSimulation,
              children: isSimulationRunning ?
              /* istanbul ignore next */
              (/*#__PURE__*/cov_keruc1mme().b[68][0]++, (0, _jsxruntime.jsx)(_lucidereact.Pause, {
                className: "h-4 w-4"
              })) :
              /* istanbul ignore next */
              (/*#__PURE__*/cov_keruc1mme().b[68][1]++, (0, _jsxruntime.jsx)(_lucidereact.Play, {
                className: "h-4 w-4"
              }))
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
              variant: "outline",
              size: "sm",
              onClick: resetSimulation,
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.RotateCcw, {
                className: "h-4 w-4"
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
              variant: "outline",
              size: "sm",
              onClick: zoomIn,
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.ZoomIn, {
                className: "h-4 w-4"
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
              variant: "outline",
              size: "sm",
              onClick: zoomOut,
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.ZoomOut, {
                className: "h-4 w-4"
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
              variant: "outline",
              size: "sm",
              onClick: exportGraph,
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Download, {
                className: "h-4 w-4"
              })
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center gap-2",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
              variant: "outline",
              size: "sm",
              onClick: () => {
                /* istanbul ignore next */
                cov_keruc1mme().f[68]++;
                cov_keruc1mme().s[243]++;
                return setShowFilters(!showFilters);
              },
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Filter, {
                className: "h-4 w-4"
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
              variant: "outline",
              size: "sm",
              onClick: () => {
                /* istanbul ignore next */
                cov_keruc1mme().f[69]++;
                cov_keruc1mme().s[244]++;
                return setShowSettings(!showSettings);
              },
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Settings, {
                className: "h-4 w-4"
              })
            })]
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex items-center gap-2",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Search, {
            className: "h-4 w-4 text-muted-foreground"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
            type: "text",
            placeholder: "Search nodes...",
            value: searchQuery,
            onChange: e => {
              /* istanbul ignore next */
              cov_keruc1mme().f[70]++;
              cov_keruc1mme().s[245]++;
              return setSearchQuery(e.target.value);
            },
            className: "flex-1 px-3 py-1 text-sm border rounded-md"
          })]
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
        className: "p-0",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "flex-1",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)("svg", {
              ref: svgRef,
              width: width,
              height: height,
              className: "border rounded-lg",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)("g", {
                className: "graph-container"
              })
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "w-80 border-l",
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_tabs.Tabs, {
              defaultValue: "layers",
              className: "h-full",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_tabs.TabsList, {
                className: "grid w-full grid-cols-3",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsTrigger, {
                  value: "layers",
                  children: "Layers"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsTrigger, {
                  value: "settings",
                  children: "Settings"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsTrigger, {
                  value: "details",
                  children: "Details"
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsContent, {
                value: "layers",
                className: "p-4 space-y-4",
                children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: "space-y-3",
                  children: processedData.layers.map(layer => {
                    /* istanbul ignore next */
                    cov_keruc1mme().f[71]++;
                    cov_keruc1mme().s[246]++;
                    return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "space-y-2",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                        className: "flex items-center justify-between",
                        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                          className: "flex items-center gap-2",
                          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
                            variant: "ghost",
                            size: "sm",
                            onClick: () => {
                              /* istanbul ignore next */
                              cov_keruc1mme().f[72]++;
                              cov_keruc1mme().s[247]++;
                              return toggleLayerVisibility(layer.id);
                            },
                            children: layerSettings[layer.id]?.visible ?
                            /* istanbul ignore next */
                            (/*#__PURE__*/cov_keruc1mme().b[69][0]++, (0, _jsxruntime.jsx)(_lucidereact.Eye, {
                              className: "h-4 w-4"
                            })) :
                            /* istanbul ignore next */
                            (/*#__PURE__*/cov_keruc1mme().b[69][1]++, (0, _jsxruntime.jsx)(_lucidereact.EyeOff, {
                              className: "h-4 w-4"
                            }))
                          }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                            className: "font-medium",
                            children: layer.name
                          })]
                        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_badge.Badge, {
                          variant: "secondary",
                          children: layer.type
                        })]
                      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                        className: "ml-6 space-y-2",
                        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                          className: "flex items-center gap-2",
                          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
                            className: "text-xs",
                            children: "Opacity"
                          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_slider.Slider, {
                            value: [
                            /* istanbul ignore next */
                            (cov_keruc1mme().b[70][0]++, layerSettings[layer.id]?.opacity) ||
                            /* istanbul ignore next */
                            (cov_keruc1mme().b[70][1]++, 1)],
                            onValueChange: ([value]) => {
                              /* istanbul ignore next */
                              cov_keruc1mme().f[73]++;
                              cov_keruc1mme().s[248]++;
                              return updateLayerOpacity(layer.id, value);
                            },
                            max: 1,
                            min: 0,
                            step: 0.1,
                            className: "flex-1"
                          })]
                        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                          className: "text-xs text-muted-foreground",
                          children: [layer.nodes.length, " nodes, ", layer.edges.length, " ", "edges"]
                        })]
                      })]
                    }, layer.id);
                  })
                })
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsContent, {
                value: "settings",
                className: "p-4 space-y-4",
                children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "space-y-4",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "space-y-2",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
                      className: "text-sm font-medium",
                      children: "Simulation"
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "space-y-3",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                        className: "flex items-center justify-between",
                        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
                          className: "text-xs",
                          children: "Link Strength"
                        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_slider.Slider, {
                          value: [simulationSettings.linkStrength],
                          onValueChange: ([value]) => {
                            /* istanbul ignore next */
                            cov_keruc1mme().f[74]++;
                            cov_keruc1mme().s[249]++;
                            return setSimulationSettings(prev => {
                              /* istanbul ignore next */
                              cov_keruc1mme().f[75]++;
                              cov_keruc1mme().s[250]++;
                              return {
                                ...prev,
                                linkStrength: value
                              };
                            });
                          },
                          max: 1,
                          min: 0,
                          step: 0.1,
                          className: "w-24"
                        })]
                      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                        className: "flex items-center justify-between",
                        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
                          className: "text-xs",
                          children: "Charge Strength"
                        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_slider.Slider, {
                          value: [Math.abs(simulationSettings.chargeStrength)],
                          onValueChange: ([value]) => {
                            /* istanbul ignore next */
                            cov_keruc1mme().f[76]++;
                            cov_keruc1mme().s[251]++;
                            return setSimulationSettings(prev => {
                              /* istanbul ignore next */
                              cov_keruc1mme().f[77]++;
                              cov_keruc1mme().s[252]++;
                              return {
                                ...prev,
                                chargeStrength: -value
                              };
                            });
                          },
                          max: 1000,
                          min: 0,
                          step: 50,
                          className: "w-24"
                        })]
                      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                        className: "flex items-center justify-between",
                        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
                          className: "text-xs",
                          children: "Collision Radius"
                        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_slider.Slider, {
                          value: [simulationSettings.collideRadius],
                          onValueChange: ([value]) => {
                            /* istanbul ignore next */
                            cov_keruc1mme().f[78]++;
                            cov_keruc1mme().s[253]++;
                            return setSimulationSettings(prev => {
                              /* istanbul ignore next */
                              cov_keruc1mme().f[79]++;
                              cov_keruc1mme().s[254]++;
                              return {
                                ...prev,
                                collideRadius: value
                              };
                            });
                          },
                          max: 50,
                          min: 0,
                          step: 5,
                          className: "w-24"
                        })]
                      })]
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "space-y-2",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
                      className: "text-sm font-medium",
                      children: "Performance"
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "flex items-center justify-between",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
                        className: "text-xs",
                        children: "Performance Mode"
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_switch.Switch, {
                        checked: performanceMode,
                        onCheckedChange: setPerformanceMode
                      })]
                    }),
                    /* istanbul ignore next */
                    (cov_keruc1mme().b[71][0]++, performanceMode) &&
                    /* istanbul ignore next */
                    (cov_keruc1mme().b[71][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "flex items-center justify-between",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
                        className: "text-xs",
                        children: "Max Nodes"
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_slider.Slider, {
                        value: [maxNodes],
                        onValueChange: ([value]) => {
                          /* istanbul ignore next */
                          cov_keruc1mme().f[80]++;
                          cov_keruc1mme().s[255]++;
                          return setMaxNodes(value);
                        },
                        max: 1000,
                        min: 50,
                        step: 50,
                        className: "w-24"
                      })]
                    }))]
                  })]
                })
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsContent, {
                value: "details",
                className: "p-4 space-y-4",
                children: selectedNode ?
                /* istanbul ignore next */
                (/*#__PURE__*/cov_keruc1mme().b[72][0]++, (0, _jsxruntime.jsxs)("div", {
                  className: "space-y-3",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
                    className: "font-medium",
                    children: selectedNode.title
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "space-y-2 text-sm",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("strong", {
                        children: "Type:"
                      }), " ", selectedNode.type]
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("strong", {
                        children: "Confidence:"
                      }), " ", (selectedNode.confidence * 100).toFixed(1), "%"]
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("strong", {
                        children: "Importance:"
                      }), " ", (selectedNode.importance * 100).toFixed(1), "%"]
                    }),
                    /* istanbul ignore next */
                    (cov_keruc1mme().b[73][0]++, selectedNode.content) &&
                    /* istanbul ignore next */
                    (cov_keruc1mme().b[73][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("strong", {
                        children: "Content:"
                      }), " ", selectedNode.content]
                    })),
                    /* istanbul ignore next */
                    (cov_keruc1mme().b[74][0]++, selectedNode.tags) &&
                    /* istanbul ignore next */
                    (cov_keruc1mme().b[74][1]++, selectedNode.tags.length > 0) &&
                    /* istanbul ignore next */
                    (cov_keruc1mme().b[74][2]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("strong", {
                        children: "Tags:"
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                        className: "flex flex-wrap gap-1 mt-1",
                        children: selectedNode.tags.map(tag => {
                          /* istanbul ignore next */
                          cov_keruc1mme().f[81]++;
                          cov_keruc1mme().s[256]++;
                          return /*#__PURE__*/(0, _jsxruntime.jsx)(_badge.Badge, {
                            variant: "outline",
                            className: "text-xs",
                            children: tag
                          }, tag);
                        })
                      })]
                    }))]
                  })]
                })) :
                /* istanbul ignore next */
                (cov_keruc1mme().b[72][1]++, hoveredNode ?
                /* istanbul ignore next */
                (/*#__PURE__*/cov_keruc1mme().b[75][0]++, (0, _jsxruntime.jsxs)("div", {
                  className: "space-y-2",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
                    className: "font-medium",
                    children: hoveredNode.title
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "text-sm text-muted-foreground",
                    children: [hoveredNode.type, " •", " ", (hoveredNode.confidence * 100).toFixed(1), "% confidence"]
                  })]
                })) :
                /* istanbul ignore next */
                (/*#__PURE__*/cov_keruc1mme().b[75][1]++, (0, _jsxruntime.jsx)("div", {
                  className: "text-sm text-muted-foreground",
                  children: "Click or hover on a node to see details"
                })))
              })]
            })
          })]
        })
      })]
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
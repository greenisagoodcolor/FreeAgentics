{"version":3,"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/lib/compliance/adr-validator.ts"],"sourcesContent":["\"use client\";\n\nexport interface ComplianceRule {\n  id: string;\n  adr: string;\n  title: string;\n  description: string;\n  severity: \"error\" | \"warning\" | \"info\";\n  category:\n    | \"structure\"\n    | \"naming\"\n    | \"architecture\"\n    | \"patterns\"\n    | \"performance\";\n  check: (context: ValidationContext) => ComplianceResult;\n}\n\nexport interface ValidationContext {\n  filePath: string;\n  fileContent?: string;\n  componentName?: string;\n  directoryStructure?: string[];\n  dependencies?: string[];\n  imports?: string[];\n  exports?: string[];\n  metadata?: Record<string, any>;\n}\n\nexport interface ComplianceResult {\n  passed: boolean;\n  message: string;\n  suggestions?: string[];\n  fixes?: AutoFix[];\n  severity: \"error\" | \"warning\" | \"info\";\n}\n\nexport interface AutoFix {\n  description: string;\n  action: \"rename\" | \"move\" | \"refactor\" | \"add\" | \"remove\";\n  target: string;\n  replacement?: string;\n  automated: boolean;\n}\n\nexport interface ComplianceReport {\n  timestamp: string;\n  totalChecks: number;\n  passed: number;\n  failed: number;\n  warnings: number;\n  errors: number;\n  overallScore: number;\n  results: Array<\n    ComplianceResult & { rule: ComplianceRule; context: ValidationContext }\n  >;\n  summary: {\n    byCategory: Record<string, { passed: number; failed: number }>;\n    byADR: Record<string, { passed: number; failed: number }>;\n    bySeverity: Record<string, number>;\n  };\n  recommendations: string[];\n}\n\n// ADR-002: Canonical Directory Structure Rules\nconst adr002Rules: ComplianceRule[] = [\n  {\n    id: \"ADR002-001\",\n    adr: \"ADR-002\",\n    title: \"Components in Correct Directory\",\n    description:\n      \"React components must be in /components directory with proper subdirectories\",\n    severity: \"error\",\n    category: \"structure\",\n    check: (context) => {\n      const { filePath } = context;\n\n      if (filePath.includes(\".tsx\") && filePath.includes(\"component\")) {\n        const validPaths = [\n          \"/components/ui/\",\n          \"/components/conversation/\",\n          \"/components/dashboard/\",\n          \"/app/\",\n        ];\n\n        const isValidLocation = validPaths.some((path) =>\n          filePath.includes(path),\n        );\n\n        return {\n          passed: isValidLocation,\n          message: isValidLocation\n            ? \"Component is in correct directory structure\"\n            : `Component should be in one of: ${validPaths.join(\", \")}`,\n          severity: \"error\",\n          suggestions: isValidLocation\n            ? []\n            : [\n                \"Move component to appropriate /components subdirectory\",\n                \"Follow feature-based organization pattern\",\n              ],\n        };\n      }\n\n      return {\n        passed: true,\n        message: \"Not a component file\",\n        severity: \"info\",\n      };\n    },\n  },\n\n  {\n    id: \"ADR002-002\",\n    adr: \"ADR-002\",\n    title: \"Hooks in /hooks Directory\",\n    description: \"Custom React hooks must be in /hooks directory\",\n    severity: \"error\",\n    category: \"structure\",\n    check: (context) => {\n      const { filePath, fileContent } = context;\n\n      if (\n        filePath.includes(\".ts\") &&\n        fileContent?.includes(\"use\") &&\n        fileContent.match(/export\\s+function\\s+use[A-Z]/)\n      ) {\n        const isInHooksDir = filePath.includes(\"/hooks/\");\n\n        return {\n          passed: isInHooksDir,\n          message: isInHooksDir\n            ? \"Hook is in correct /hooks directory\"\n            : \"Custom hooks must be in /hooks directory\",\n          severity: \"error\",\n          suggestions: isInHooksDir\n            ? []\n            : [\n                \"Move custom hook to /hooks directory\",\n                'Ensure hook name starts with \"use\"',\n              ],\n        };\n      }\n\n      return { passed: true, message: \"Not a custom hook\", severity: \"info\" };\n    },\n  },\n\n  {\n    id: \"ADR002-003\",\n    adr: \"ADR-002\",\n    title: \"Utilities in /lib Directory\",\n    description: \"Utility functions and libraries must be in /lib directory\",\n    severity: \"error\",\n    category: \"structure\",\n    check: (context) => {\n      const { filePath, fileContent } = context;\n\n      if (\n        filePath.includes(\".ts\") &&\n        !filePath.includes(\".tsx\") &&\n        !filePath.includes(\"/hooks/\") &&\n        !filePath.includes(\"/api/\") &&\n        fileContent?.includes(\"export\")\n      ) {\n        const isInLibDir = filePath.includes(\"/lib/\");\n\n        return {\n          passed: isInLibDir,\n          message: isInLibDir\n            ? \"Utility is in correct /lib directory\"\n            : \"Utility functions should be in /lib directory\",\n          severity: \"warning\",\n          suggestions: isInLibDir\n            ? []\n            : [\n                \"Move utility functions to /lib directory\",\n                \"Organize by functional domain (e.g., /lib/utils, /lib/api)\",\n              ],\n        };\n      }\n\n      return { passed: true, message: \"Not a utility file\", severity: \"info\" };\n    },\n  },\n\n  {\n    id: \"ADR002-004\",\n    adr: \"ADR-002\",\n    title: \"UI Components in /components/ui\",\n    description: \"Reusable UI components must be in /components/ui directory\",\n    severity: \"error\",\n    category: \"structure\",\n    check: (context) => {\n      const { filePath, componentName } = context;\n\n      const uiComponentNames = [\n        \"Button\",\n        \"Input\",\n        \"Card\",\n        \"Badge\",\n        \"Dialog\",\n        \"Tooltip\",\n        \"Select\",\n        \"Checkbox\",\n        \"Slider\",\n        \"Progress\",\n        \"Avatar\",\n        \"Calendar\",\n        \"Tabs\",\n      ];\n\n      if (\n        componentName &&\n        uiComponentNames.some((name) => componentName.includes(name))\n      ) {\n        const isInUIDir = filePath.includes(\"/components/ui/\");\n\n        return {\n          passed: isInUIDir,\n          message: isInUIDir\n            ? \"UI component is in correct directory\"\n            : \"UI components should be in /components/ui directory\",\n          severity: \"error\",\n          suggestions: isInUIDir\n            ? []\n            : [\n                \"Move UI component to /components/ui directory\",\n                \"Ensure component is reusable and generic\",\n              ],\n        };\n      }\n\n      return { passed: true, message: \"Not a UI component\", severity: \"info\" };\n    },\n  },\n];\n\n// ADR-008: API Interface Layer Rules\nconst adr008Rules: ComplianceRule[] = [\n  {\n    id: \"ADR008-001\",\n    adr: \"ADR-008\",\n    title: \"API Routes in Correct Structure\",\n    description: \"API routes must follow /api/[resource]/[action] pattern\",\n    severity: \"error\",\n    category: \"architecture\",\n    check: (context) => {\n      const { filePath } = context;\n\n      if (filePath.includes(\"/api/\") && filePath.includes(\"route.ts\")) {\n        const pathParts = filePath.split(\"/\");\n        const apiIndex = pathParts.indexOf(\"api\");\n\n        if (apiIndex !== -1 && pathParts.length >= apiIndex + 3) {\n          const hasResource =\n            pathParts[apiIndex + 1] && pathParts[apiIndex + 1] !== \"route.ts\";\n          const followsPattern = pathParts[pathParts.length - 1] === \"route.ts\";\n\n          return {\n            passed: hasResource && followsPattern,\n            message:\n              hasResource && followsPattern\n                ? \"API route follows correct structure\"\n                : \"API routes should follow /api/[resource]/[action]/route.ts pattern\",\n            severity: \"error\",\n            suggestions:\n              hasResource && followsPattern\n                ? []\n                : [\n                    \"Organize API routes by resource (e.g., /api/agents/)\",\n                    \"Use specific action directories (e.g., /api/agents/create/)\",\n                  ],\n          };\n        }\n      }\n\n      return { passed: true, message: \"Not an API route\", severity: \"info\" };\n    },\n  },\n\n  {\n    id: \"ADR008-002\",\n    adr: \"ADR-008\",\n    title: \"Proper Import Separation\",\n    description: \"Clear separation between client and server code imports\",\n    severity: \"warning\",\n    category: \"architecture\",\n    check: (context) => {\n      const { fileContent, filePath } = context;\n\n      if (!fileContent)\n        return {\n          passed: true,\n          message: \"No content to check\",\n          severity: \"info\",\n        };\n\n      const isClientFile = fileContent.includes('\"use client\"');\n      const isServerFile =\n        filePath.includes(\"/api/\") || fileContent.includes('\"use server\"');\n\n      if (isClientFile && isServerFile) {\n        return {\n          passed: false,\n          message: \"File cannot be both client and server code\",\n          severity: \"error\",\n          suggestions: [\n            \"Separate client and server logic into different files\",\n            \"Use proper import/export patterns for each context\",\n          ],\n        };\n      }\n\n      return {\n        passed: true,\n        message: \"Proper client/server separation\",\n        severity: \"info\",\n      };\n    },\n  },\n\n  {\n    id: \"ADR008-003\",\n    adr: \"ADR-008\",\n    title: \"Interface Abstraction\",\n    description: \"Business logic should not directly access external APIs\",\n    severity: \"warning\",\n    category: \"architecture\",\n    check: (context) => {\n      const { fileContent, filePath } = context;\n\n      if (!fileContent || filePath.includes(\"/api/\")) {\n        return { passed: true, message: \"Not applicable\", severity: \"info\" };\n      }\n\n      const directAPIPatterns = [\n        /fetch\\s*\\(\\s*['\"](https?:\\/\\/|\\/api\\/)/,\n        /axios\\.(get|post|put|delete)\\s*\\(\\s*['\"](https?:\\/\\/|\\/api\\/)/,\n        /XMLHttpRequest/,\n      ];\n\n      const hasDirectAPICalls = directAPIPatterns.some((pattern) =>\n        pattern.test(fileContent),\n      );\n\n      return {\n        passed: !hasDirectAPICalls,\n        message: hasDirectAPICalls\n          ? \"Direct API calls detected - use service layer abstraction\"\n          : \"Proper API abstraction maintained\",\n        severity: \"warning\",\n        suggestions: hasDirectAPICalls\n          ? [\n              \"Create service layer functions for API calls\",\n              \"Use centralized API client configuration\",\n              \"Implement proper error handling and retry logic\",\n            ]\n          : [],\n      };\n    },\n  },\n];\n\n// Performance and Pattern Rules\nconst performanceRules: ComplianceRule[] = [\n  {\n    id: \"PERF-001\",\n    adr: \"Best Practices\",\n    title: \"Component Memoization\",\n    description: \"Large components should use React.memo for optimization\",\n    severity: \"warning\",\n    category: \"performance\",\n    check: (context) => {\n      const { fileContent, componentName } = context;\n\n      if (!fileContent || !componentName) {\n        return { passed: true, message: \"Not applicable\", severity: \"info\" };\n      }\n\n      const lineCount = fileContent.split(\"\\n\").length;\n      const hasMemo =\n        fileContent.includes(\"memo(\") || fileContent.includes(\"React.memo\");\n      const isLargeComponent = lineCount > 100;\n\n      if (isLargeComponent && !hasMemo) {\n        return {\n          passed: false,\n          message: `Large component (${lineCount} lines) should consider memoization`,\n          severity: \"warning\",\n          suggestions: [\n            \"Add React.memo wrapper for performance optimization\",\n            \"Consider breaking down into smaller components\",\n            \"Use useMemo and useCallback for expensive operations\",\n          ],\n        };\n      }\n\n      return {\n        passed: true,\n        message: \"Component properly optimized\",\n        severity: \"info\",\n      };\n    },\n  },\n\n  {\n    id: \"PERF-002\",\n    adr: \"Best Practices\",\n    title: \"Proper Dependency Arrays\",\n    description: \"useEffect and useMemo should have proper dependency arrays\",\n    severity: \"error\",\n    category: \"performance\",\n    check: (context) => {\n      const { fileContent } = context;\n\n      if (!fileContent)\n        return { passed: true, message: \"No content\", severity: \"info\" };\n\n      const hookPatterns = [\n        /useEffect\\s*\\(\\s*[^,]+,\\s*\\[\\s*\\]/, // Empty deps\n        /useMemo\\s*\\(\\s*[^,]+,\\s*\\[\\s*\\]/, // Empty deps\n        /useCallback\\s*\\(\\s*[^,]+,\\s*\\[\\s*\\]/, // Empty deps\n      ];\n\n      const missingDepPatterns = [\n        /useEffect\\s*\\(\\s*[^)]+\\)\\s*$/, // No deps array\n        /useMemo\\s*\\(\\s*[^)]+\\)\\s*$/, // No deps array\n        /useCallback\\s*\\(\\s*[^)]+\\)\\s*$/, // No deps array\n      ];\n\n      const hasMissingDeps = missingDepPatterns.some((pattern) =>\n        pattern.test(fileContent),\n      );\n      const hasEmptyDeps = hookPatterns.some((pattern) =>\n        pattern.test(fileContent),\n      );\n\n      if (hasMissingDeps) {\n        return {\n          passed: false,\n          message: \"React hooks missing dependency arrays\",\n          severity: \"error\",\n          suggestions: [\n            \"Add dependency arrays to useEffect, useMemo, useCallback\",\n            \"Include all referenced variables in dependency arrays\",\n            \"Use ESLint react-hooks/exhaustive-deps rule\",\n          ],\n        };\n      }\n\n      return {\n        passed: true,\n        message: \"Hooks have proper dependency management\",\n        severity: \"info\",\n      };\n    },\n  },\n];\n\n// Combine all rules\nconst allRules: ComplianceRule[] = [\n  ...adr002Rules,\n  ...adr008Rules,\n  ...performanceRules,\n];\n\nexport class ADRComplianceValidator {\n  private rules: ComplianceRule[];\n\n  constructor(customRules: ComplianceRule[] = []) {\n    this.rules = [...allRules, ...customRules];\n  }\n\n  validateFile(context: ValidationContext): ComplianceReport {\n    const results: Array<\n      ComplianceResult & { rule: ComplianceRule; context: ValidationContext }\n    > = [];\n\n    for (const rule of this.rules) {\n      try {\n        const result = rule.check(context);\n        results.push({ ...result, rule, context });\n      } catch (error) {\n        results.push({\n          passed: false,\n          message: `Rule ${rule.id} failed to execute: ${error}`,\n          severity: \"error\",\n          rule,\n          context,\n        });\n      }\n    }\n\n    return this.generateReport(results);\n  }\n\n  validateMultipleFiles(contexts: ValidationContext[]): ComplianceReport {\n    const allResults: Array<\n      ComplianceResult & { rule: ComplianceRule; context: ValidationContext }\n    > = [];\n\n    for (const context of contexts) {\n      const fileResults = this.validateFile(context);\n      allResults.push(...fileResults.results);\n    }\n\n    return this.generateReport(allResults);\n  }\n\n  private generateReport(\n    results: Array<\n      ComplianceResult & { rule: ComplianceRule; context: ValidationContext }\n    >,\n  ): ComplianceReport {\n    const totalChecks = results.length;\n    const passed = results.filter((r) => r.passed).length;\n    const failed = results.filter((r) => !r.passed).length;\n    const warnings = results.filter((r) => r.severity === \"warning\").length;\n    const errors = results.filter((r) => r.severity === \"error\").length;\n\n    const overallScore =\n      totalChecks > 0 ? Math.round((passed / totalChecks) * 100) : 100;\n\n    // Generate summaries\n    const byCategory: Record<string, { passed: number; failed: number }> = {};\n    const byADR: Record<string, { passed: number; failed: number }> = {};\n    const bySeverity: Record<string, number> = {\n      error: 0,\n      warning: 0,\n      info: 0,\n    };\n\n    for (const result of results) {\n      // By category\n      if (!byCategory[result.rule.category]) {\n        byCategory[result.rule.category] = { passed: 0, failed: 0 };\n      }\n      byCategory[result.rule.category][result.passed ? \"passed\" : \"failed\"]++;\n\n      // By ADR\n      if (!byADR[result.rule.adr]) {\n        byADR[result.rule.adr] = { passed: 0, failed: 0 };\n      }\n      byADR[result.rule.adr][result.passed ? \"passed\" : \"failed\"]++;\n\n      // By severity\n      bySeverity[result.severity]++;\n    }\n\n    // Generate recommendations\n    const recommendations = this.generateRecommendations(results);\n\n    return {\n      timestamp: new Date().toISOString(),\n      totalChecks,\n      passed,\n      failed,\n      warnings,\n      errors,\n      overallScore,\n      results,\n      summary: { byCategory, byADR, bySeverity },\n      recommendations,\n    };\n  }\n\n  private generateRecommendations(\n    results: Array<\n      ComplianceResult & { rule: ComplianceRule; context: ValidationContext }\n    >,\n  ): string[] {\n    const recommendations: string[] = [];\n    const failedRules = results.filter((r) => !r.passed);\n\n    if (failedRules.length === 0) {\n      recommendations.push(\"✅ All ADR compliance checks passed!\");\n      return recommendations;\n    }\n\n    // Priority recommendations based on failures\n    const structureFailures = failedRules.filter(\n      (r) => r.rule.category === \"structure\",\n    );\n    const architectureFailures = failedRules.filter(\n      (r) => r.rule.category === \"architecture\",\n    );\n    const performanceFailures = failedRules.filter(\n      (r) => r.rule.category === \"performance\",\n    );\n\n    if (structureFailures.length > 0) {\n      recommendations.push(\n        \"🏗️ Directory structure needs attention - ensure components, hooks, and utilities are in correct locations\",\n      );\n    }\n\n    if (architectureFailures.length > 0) {\n      recommendations.push(\n        \"🏛️ API architecture compliance issues detected - review ADR-008 requirements\",\n      );\n    }\n\n    if (performanceFailures.length > 0) {\n      recommendations.push(\n        \"⚡ Performance optimizations recommended - consider memoization and proper hook dependencies\",\n      );\n    }\n\n    // Specific recommendations for most common failures\n    const commonFailures = new Map<string, number>();\n    for (const failure of failedRules) {\n      const count = commonFailures.get(failure.rule.id) || 0;\n      commonFailures.set(failure.rule.id, count + 1);\n    }\n\n    const topFailures = Array.from(commonFailures.entries())\n      .sort(([, a], [, b]) => b - a)\n      .slice(0, 3);\n\n    for (const [ruleId, count] of topFailures) {\n      const rule = this.rules.find((r) => r.id === ruleId);\n      if (rule) {\n        recommendations.push(\n          `🔧 ${rule.title}: ${count} instance(s) - ${rule.description}`,\n        );\n      }\n    }\n\n    return recommendations;\n  }\n\n  getRule(ruleId: string): ComplianceRule | undefined {\n    return this.rules.find((rule) => rule.id === ruleId);\n  }\n\n  getRulesByADR(adr: string): ComplianceRule[] {\n    return this.rules.filter((rule) => rule.adr === adr);\n  }\n\n  getRulesByCategory(category: string): ComplianceRule[] {\n    return this.rules.filter((rule) => rule.category === category);\n  }\n}\n\n// Export default validator instance\nexport const complianceValidator = new ADRComplianceValidator();\n\n// Utility functions for easy validation\nexport function validateComponent(\n  filePath: string,\n  componentName: string,\n  fileContent?: string,\n): ComplianceReport {\n  return complianceValidator.validateFile({\n    filePath,\n    componentName,\n    fileContent,\n  });\n}\n\nexport function validateHook(\n  filePath: string,\n  fileContent?: string,\n): ComplianceReport {\n  return complianceValidator.validateFile({\n    filePath,\n    fileContent,\n  });\n}\n\nexport function validateAPIRoute(\n  filePath: string,\n  fileContent?: string,\n): ComplianceReport {\n  return complianceValidator.validateFile({\n    filePath,\n    fileContent,\n  });\n}\n"],"names":["ADRComplianceValidator","complianceValidator","validateAPIRoute","validateComponent","validateHook","adr002Rules","id","adr","title","description","severity","category","check","context","filePath","includes","validPaths","isValidLocation","some","path","passed","message","join","suggestions","fileContent","match","isInHooksDir","isInLibDir","componentName","uiComponentNames","name","isInUIDir","adr008Rules","pathParts","split","apiIndex","indexOf","length","hasResource","followsPattern","isClientFile","isServerFile","directAPIPatterns","hasDirectAPICalls","pattern","test","performanceRules","lineCount","hasMemo","isLargeComponent","hookPatterns","missingDepPatterns","hasMissingDeps","hasEmptyDeps","allRules","constructor","customRules","rules","validateFile","results","rule","result","push","error","generateReport","validateMultipleFiles","contexts","allResults","fileResults","totalChecks","filter","r","failed","warnings","errors","overallScore","Math","round","byCategory","byADR","bySeverity","warning","info","recommendations","generateRecommendations","timestamp","Date","toISOString","summary","failedRules","structureFailures","architectureFailures","performanceFailures","commonFailures","Map","failure","count","get","set","topFailures","Array","from","entries","sort","a","b","slice","ruleId","find","getRule","getRulesByADR","getRulesByCategory"],"mappings":"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"}
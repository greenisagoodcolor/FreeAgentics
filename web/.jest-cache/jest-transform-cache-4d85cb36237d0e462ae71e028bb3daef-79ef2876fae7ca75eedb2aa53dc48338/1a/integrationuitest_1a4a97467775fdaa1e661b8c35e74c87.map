{"version":3,"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/__tests__/components/integration-ui.test.tsx"],"sourcesContent":["/**\n * Simplified Integration UI Tests\n * Combined interaction patterns without complex timing or touch events\n */\n\nimport React from \"react\";\nimport { render, screen, fireEvent } from \"@testing-library/react\";\nimport { jest } from \"@jest/globals\";\n\n// Mock observers and animation frame\nglobal.IntersectionObserver = jest.fn().mockImplementation((callback) => ({\n  observe: jest.fn(),\n  unobserve: jest.fn(),\n  disconnect: jest.fn(),\n  root: null,\n  rootMargin: \"\",\n  thresholds: [],\n}));\n\nglobal.requestAnimationFrame = jest.fn((callback) => {\n  setTimeout(callback, 16);\n  return 1;\n});\n\n// Simple Responsive Hook\nconst useResponsive = () => {\n  const [width, setWidth] = React.useState(1024);\n  \n  React.useEffect(() => {\n    const handleResize = () => setWidth(window.innerWidth);\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return {\n    isMobile: width < 768,\n    isTablet: width >= 768 && width < 1024,\n    isDesktop: width >= 1024,\n    width,\n  };\n};\n\n// Simple Drag Context\ninterface DragContextValue {\n  draggedItem: string | null;\n  startDrag: (item: string) => void;\n  endDrag: () => void;\n}\n\nconst DragContext = React.createContext<DragContextValue | null>(null);\n\nconst SimpleDragProvider: React.FC<{ children: React.ReactNode }> = ({\n  children,\n}) => {\n  const [draggedItem, setDraggedItem] = React.useState<string | null>(null);\n\n  const startDrag = (item: string) => setDraggedItem(item);\n  const endDrag = () => setDraggedItem(null);\n\n  return (\n    <DragContext.Provider value={{ draggedItem, startDrag, endDrag }}>\n      {children}\n    </DragContext.Provider>\n  );\n};\n\n// Simple Draggable Component\nconst SimpleDraggable: React.FC<{\n  id: string;\n  children: React.ReactNode;\n}> = ({ id, children }) => {\n  const context = React.useContext(DragContext);\n\n  const handleMouseDown = () => {\n    context?.startDrag(id);\n  };\n\n  return (\n    <div\n      data-testid={`draggable-${id}`}\n      onMouseDown={handleMouseDown}\n      style={{\n        cursor: \"grab\",\n        opacity: context?.draggedItem === id ? 0.5 : 1,\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\n// Simple Drop Zone\nconst SimpleDropZone: React.FC<{\n  id: string;\n  children: React.ReactNode;\n  onDrop?: (item: string) => void;\n}> = ({ id, children, onDrop }) => {\n  const context = React.useContext(DragContext);\n\n  const handleMouseUp = () => {\n    if (context?.draggedItem) {\n      onDrop?.(context.draggedItem);\n      context.endDrag();\n    }\n  };\n\n  return (\n    <div\n      data-testid={`dropzone-${id}`}\n      onMouseUp={handleMouseUp}\n      style={{\n        minHeight: \"100px\",\n        border: \"2px dashed #ccc\",\n        backgroundColor: context?.draggedItem ? \"#f0f0f0\" : \"transparent\",\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\n// Simple List Component with Virtual Behavior\nconst SimpleVirtualList: React.FC<{\n  items: string[];\n  itemHeight?: number;\n  containerHeight?: number;\n}> = ({ items, itemHeight = 50, containerHeight = 300 }) => {\n  const [scrollTop, setScrollTop] = React.useState(0);\n\n  const visibleCount = Math.ceil(containerHeight / itemHeight);\n  const startIndex = Math.floor(scrollTop / itemHeight);\n  const endIndex = Math.min(startIndex + visibleCount, items.length);\n\n  const visibleItems = items.slice(startIndex, endIndex);\n\n  return (\n    <div\n      data-testid=\"virtual-list\"\n      style={{ height: containerHeight, overflow: \"auto\" }}\n      onScroll={(e) => setScrollTop(e.currentTarget.scrollTop)}\n    >\n      <div style={{ height: items.length * itemHeight, position: \"relative\" }}>\n        {visibleItems.map((item, index) => (\n          <div\n            key={startIndex + index}\n            data-testid={`list-item-${startIndex + index}`}\n            style={{\n              position: \"absolute\",\n              top: (startIndex + index) * itemHeight,\n              height: itemHeight,\n              width: \"100%\",\n            }}\n          >\n            {item}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\n// Comprehensive Test Component\nconst IntegratedUITest: React.FC = () => {\n  const [items, setItems] = React.useState([\"Item 1\", \"Item 2\", \"Item 3\"]);\n  const [droppedItems, setDroppedItems] = React.useState<string[]>([]);\n  const [virtualItems] = React.useState(\n    Array.from({ length: 100 }, (_, i) => `Virtual Item ${i + 1}`)\n  );\n  const responsive = useResponsive();\n\n  const handleDrop = (item: string) => {\n    setDroppedItems((prev) => [...prev, item]);\n  };\n\n  const addItem = () => {\n    setItems((prev) => [...prev, `Item ${prev.length + 1}`]);\n  };\n\n  return (\n    <SimpleDragProvider>\n      <div data-testid=\"integrated-ui\" style={{ padding: \"20px\" }}>\n        {/* Responsive Info */}\n        <div data-testid=\"responsive-info\">\n          Width: {responsive.width} |{\" \"}\n          {responsive.isMobile && \"Mobile\"}\n          {responsive.isTablet && \"Tablet\"}\n          {responsive.isDesktop && \"Desktop\"}\n        </div>\n\n        {/* Control Panel */}\n        <div style={{ margin: \"20px 0\" }}>\n          <button data-testid=\"add-item\" onClick={addItem}>\n            Add Item\n          </button>\n        </div>\n\n        {/* Draggable Items */}\n        <div data-testid=\"draggable-section\" style={{ marginBottom: \"20px\" }}>\n          <h3>Draggable Items</h3>\n          <div style={{ display: \"flex\", gap: \"10px\", flexWrap: \"wrap\" }}>\n            {items.map((item, index) => (\n              <SimpleDraggable key={index} id={`item-${index}`}>\n                <div\n                  style={{\n                    padding: \"10px\",\n                    border: \"1px solid #ccc\",\n                    borderRadius: \"4px\",\n                    backgroundColor: \"#f9f9f9\",\n                  }}\n                >\n                  {item}\n                </div>\n              </SimpleDraggable>\n            ))}\n          </div>\n        </div>\n\n        {/* Drop Zone */}\n        <div style={{ marginBottom: \"20px\" }}>\n          <h3>Drop Zone</h3>\n          <SimpleDropZone id=\"main\" onDrop={handleDrop}>\n            <div style={{ padding: \"20px\", textAlign: \"center\" }}>\n              Drop items here\n              {droppedItems.length > 0 && (\n                <div data-testid=\"dropped-items\">\n                  Dropped: {droppedItems.join(\", \")}\n                </div>\n              )}\n            </div>\n          </SimpleDropZone>\n        </div>\n\n        {/* Virtual List */}\n        <div>\n          <h3>Virtual List</h3>\n          <SimpleVirtualList\n            items={virtualItems}\n            containerHeight={responsive.isMobile ? 200 : 300}\n          />\n        </div>\n      </div>\n    </SimpleDragProvider>\n  );\n};\n\n// Tests\ndescribe(\"Integration UI Tests\", () => {\n  beforeEach(() => {\n    // Reset window width\n    Object.defineProperty(window, \"innerWidth\", {\n      writable: true,\n      configurable: true,\n      value: 1024,\n    });\n  });\n\n  test(\"should render all components correctly\", () => {\n    render(<IntegratedUITest />);\n\n    expect(screen.getByTestId(\"integrated-ui\")).toBeInTheDocument();\n    expect(screen.getByTestId(\"responsive-info\")).toBeInTheDocument();\n    expect(screen.getByTestId(\"draggable-section\")).toBeInTheDocument();\n    expect(screen.getByTestId(\"dropzone-main\")).toBeInTheDocument();\n    expect(screen.getByTestId(\"virtual-list\")).toBeInTheDocument();\n  });\n\n  test(\"should show correct responsive state\", () => {\n    render(<IntegratedUITest />);\n\n    const info = screen.getByTestId(\"responsive-info\");\n    expect(info).toHaveTextContent(\"Desktop\");\n    expect(info).toHaveTextContent(\"1024\");\n  });\n\n  test(\"should handle responsive changes\", () => {\n    render(<IntegratedUITest />);\n\n    // Change to mobile\n    Object.defineProperty(window, \"innerWidth\", {\n      writable: true,\n      configurable: true,\n      value: 600,\n    });\n\n    fireEvent(window, new Event(\"resize\"));\n\n    const info = screen.getByTestId(\"responsive-info\");\n    expect(info).toHaveTextContent(\"600\");\n  });\n\n  test(\"should add new draggable items\", () => {\n    render(<IntegratedUITest />);\n\n    const addButton = screen.getByTestId(\"add-item\");\n    \n    // Should start with 3 items\n    expect(screen.getByTestId(\"draggable-item-0\")).toBeInTheDocument();\n    expect(screen.getByTestId(\"draggable-item-1\")).toBeInTheDocument();\n    expect(screen.getByTestId(\"draggable-item-2\")).toBeInTheDocument();\n\n    // Add a new item\n    fireEvent.click(addButton);\n\n    expect(screen.getByTestId(\"draggable-item-3\")).toBeInTheDocument();\n  });\n\n  test(\"should handle drag and drop interaction\", () => {\n    render(<IntegratedUITest />);\n\n    const draggable = screen.getByTestId(\"draggable-item-0\");\n    const dropzone = screen.getByTestId(\"dropzone-main\");\n\n    // Start drag\n    fireEvent.mouseDown(draggable);\n\n    // Should show visual feedback\n    expect(draggable).toHaveStyle({ opacity: \"0.5\" });\n\n    // Drop\n    fireEvent.mouseUp(dropzone);\n\n    // Should show dropped item\n    expect(screen.getByTestId(\"dropped-items\")).toHaveTextContent(\"item-0\");\n  });\n\n  test(\"should handle multiple drag and drop operations\", () => {\n    render(<IntegratedUITest />);\n\n    const draggable1 = screen.getByTestId(\"draggable-item-0\");\n    const draggable2 = screen.getByTestId(\"draggable-item-1\");\n    const dropzone = screen.getByTestId(\"dropzone-main\");\n\n    // Drop first item\n    fireEvent.mouseDown(draggable1);\n    fireEvent.mouseUp(dropzone);\n\n    // Drop second item\n    fireEvent.mouseDown(draggable2);\n    fireEvent.mouseUp(dropzone);\n\n    const droppedItems = screen.getByTestId(\"dropped-items\");\n    expect(droppedItems).toHaveTextContent(\"item-0, item-1\");\n  });\n\n  test(\"should render virtual list items\", () => {\n    render(<IntegratedUITest />);\n\n    const virtualList = screen.getByTestId(\"virtual-list\");\n    expect(virtualList).toBeInTheDocument();\n\n    // Should render some visible items\n    expect(screen.getByTestId(\"list-item-0\")).toHaveTextContent(\"Virtual Item 1\");\n    expect(screen.getByTestId(\"list-item-1\")).toHaveTextContent(\"Virtual Item 2\");\n  });\n\n  test(\"should handle virtual list scrolling\", () => {\n    render(<IntegratedUITest />);\n\n    const virtualList = screen.getByTestId(\"virtual-list\");\n\n    // Scroll down\n    fireEvent.scroll(virtualList, { target: { scrollTop: 250 } });\n\n    // Should render different items after scrolling\n    const items = screen.queryAllByTestId(/^list-item-/);\n    expect(items.length).toBeGreaterThan(0);\n  });\n\n  test(\"should combine responsive behavior with other features\", () => {\n    render(<IntegratedUITest />);\n\n    // Change to mobile\n    Object.defineProperty(window, \"innerWidth\", {\n      writable: true,\n      configurable: true,\n      value: 500,\n    });\n\n    fireEvent(window, new Event(\"resize\"));\n\n    // Should still work with drag and drop\n    const draggable = screen.getByTestId(\"draggable-item-0\");\n    const dropzone = screen.getByTestId(\"dropzone-main\");\n\n    fireEvent.mouseDown(draggable);\n    fireEvent.mouseUp(dropzone);\n\n    expect(screen.getByTestId(\"dropped-items\")).toHaveTextContent(\"item-0\");\n  });\n\n  test(\"should handle rapid interactions\", () => {\n    render(<IntegratedUITest />);\n\n    const addButton = screen.getByTestId(\"add-item\");\n    const dropzone = screen.getByTestId(\"dropzone-main\");\n\n    // Add multiple items quickly\n    fireEvent.click(addButton);\n    fireEvent.click(addButton);\n    fireEvent.click(addButton);\n\n    // Drag multiple items quickly\n    fireEvent.mouseDown(screen.getByTestId(\"draggable-item-0\"));\n    fireEvent.mouseUp(dropzone);\n\n    fireEvent.mouseDown(screen.getByTestId(\"draggable-item-1\"));\n    fireEvent.mouseUp(dropzone);\n\n    const droppedItems = screen.getByTestId(\"dropped-items\");\n    expect(droppedItems).toHaveTextContent(\"item-0, item-1\");\n  });\n\n  test(\"should maintain state across interactions\", () => {\n    render(<IntegratedUITest />);\n\n    const addButton = screen.getByTestId(\"add-item\");\n\n    // Add item\n    fireEvent.click(addButton);\n    expect(screen.getByTestId(\"draggable-item-3\")).toBeInTheDocument();\n\n    // Drag and drop\n    const draggable = screen.getByTestId(\"draggable-item-3\");\n    const dropzone = screen.getByTestId(\"dropzone-main\");\n\n    fireEvent.mouseDown(draggable);\n    fireEvent.mouseUp(dropzone);\n\n    // Both states should be maintained\n    expect(screen.getByTestId(\"draggable-item-3\")).toBeInTheDocument();\n    expect(screen.getByTestId(\"dropped-items\")).toHaveTextContent(\"item-3\");\n  });\n\n  test(\"should handle edge cases gracefully\", () => {\n    render(<IntegratedUITest />);\n\n    const dropzone = screen.getByTestId(\"dropzone-main\");\n\n    // Try to drop without dragging\n    fireEvent.mouseUp(dropzone);\n\n    // Should not crash or show dropped items\n    expect(screen.queryByTestId(\"dropped-items\")).not.toBeInTheDocument();\n  });\n});"],"names":["global","IntersectionObserver","jest","fn","mockImplementation","callback","observe","unobserve","disconnect","root","rootMargin","thresholds","requestAnimationFrame","setTimeout","useResponsive","width","setWidth","React","useState","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","isMobile","isTablet","isDesktop","DragContext","createContext","SimpleDragProvider","children","draggedItem","setDraggedItem","startDrag","item","endDrag","Provider","value","SimpleDraggable","id","context","useContext","handleMouseDown","div","data-testid","onMouseDown","style","cursor","opacity","SimpleDropZone","onDrop","handleMouseUp","onMouseUp","minHeight","border","backgroundColor","SimpleVirtualList","items","itemHeight","containerHeight","scrollTop","setScrollTop","visibleCount","Math","ceil","startIndex","floor","endIndex","min","length","visibleItems","slice","height","overflow","onScroll","e","currentTarget","position","map","index","top","IntegratedUITest","setItems","droppedItems","setDroppedItems","virtualItems","Array","from","_","i","responsive","handleDrop","prev","addItem","padding","margin","button","onClick","marginBottom","h3","display","gap","flexWrap","borderRadius","textAlign","join","describe","beforeEach","Object","defineProperty","writable","configurable","test","render","expect","screen","getByTestId","toBeInTheDocument","info","toHaveTextContent","fireEvent","Event","addButton","click","draggable","dropzone","mouseDown","toHaveStyle","mouseUp","draggable1","draggable2","virtualList","scroll","target","queryAllByTestId","toBeGreaterThan","queryByTestId","not"],"mappings":"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"}
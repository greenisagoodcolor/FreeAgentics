{"version":3,"names":["cov_qufzmcx4f","actualCoverage","s","MobileDrawer","f","MobilePanelStack","MobileTilingManager","default","_default","useMobileDetection","useTouchGestures","isMobile","setIsMobile","_react","useState","isTablet","setIsTablet","orientation","setOrientation","screenSize","setScreenSize","width","height","useEffect","checkDevice","window","innerWidth","innerHeight","b","addEventListener","removeEventListener","isOpen","onClose","children","title","drawerRef","useRef","handleDragEnd","event","info","offset","x","velocity","handleBackdropClick","e","target","currentTarget","document","body","style","overflow","_jsxruntime","jsx","_framermotion","AnimatePresence","jsxs","Fragment","motion","div","className","initial","opacity","animate","exit","onClick","ref","transition","type","duration","drag","dragConstraints","left","right","dragElastic","onDragEnd","_lucidereact","X","panels","activePanel","onPanelChange","currentPanel","setCurrentPanel","id","direction","setDirection","handlePanelChange","panelId","currentIndex","findIndex","p","newIndex","currentPanelData","find","variants","enter","center","zIndex","map","panel","icon","custom","stiffness","damping","content","isDrawerOpen","setIsDrawerOpen","currentView","setCurrentView","selectedPanel","setSelectedPanel","handlePanelSelect","handleBackToStack","selectedPanelData","Menu","Minimize2","MoreVertical","Maximize2","component","disabled","elementRef","options","onSwipeLeft","onSwipeRight","onSwipeUp","onSwipeDown","onPinch","threshold","element","current","startX","startY","startDistance","handleTouchStart","touches","length","clientX","clientY","dx","dy","Math","sqrt","handleTouchMove","distance","scale","handleTouchEnd","changedTouches","endX","endY","deltaX","deltaY","absDeltaX","abs","absDeltaY","max","passive"],"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/components/dashboard/MobileEnhancements.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { motion, AnimatePresence, PanInfo } from \"framer-motion\";\nimport { Menu, X, Maximize2, Minimize2, MoreVertical } from \"lucide-react\";\n\n// =============================================================================\n// MOBILE DETECTION HOOK\n// =============================================================================\n\nexport const useMobileDetection = () => {\n  const [isMobile, setIsMobile] = useState(false);\n  const [isTablet, setIsTablet] = useState(false);\n  const [orientation, setOrientation] = useState<\"portrait\" | \"landscape\">(\n    \"portrait\",\n  );\n  const [screenSize, setScreenSize] = useState({ width: 0, height: 0 });\n\n  useEffect(() => {\n    const checkDevice = () => {\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n\n      setScreenSize({ width, height });\n      setIsMobile(width < 768);\n      setIsTablet(width >= 768 && width < 1024);\n      setOrientation(width > height ? \"landscape\" : \"portrait\");\n    };\n\n    checkDevice();\n    window.addEventListener(\"resize\", checkDevice);\n    window.addEventListener(\"orientationchange\", checkDevice);\n\n    return () => {\n      window.removeEventListener(\"resize\", checkDevice);\n      window.removeEventListener(\"orientationchange\", checkDevice);\n    };\n  }, []);\n\n  return { isMobile, isTablet, orientation, screenSize };\n};\n\n// =============================================================================\n// MOBILE NAVIGATION DRAWER\n// =============================================================================\n\ninterface MobileDrawerProps {\n  isOpen: boolean;\n  onClose: () => void;\n  children: React.ReactNode;\n  title?: string;\n}\n\nexport const MobileDrawer: React.FC<MobileDrawerProps> = ({\n  isOpen,\n  onClose,\n  children,\n  title = \"Navigation\",\n}) => {\n  const drawerRef = useRef<HTMLDivElement>(null);\n\n  // Handle swipe to close\n  const handleDragEnd = (event: any, info: PanInfo) => {\n    if (info.offset.x < -100 || info.velocity.x < -500) {\n      onClose();\n    }\n  };\n\n  // Handle backdrop click\n  const handleBackdropClick = (e: React.MouseEvent) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  // Prevent body scroll when drawer is open\n  useEffect(() => {\n    if (isOpen) {\n      document.body.style.overflow = \"hidden\";\n    } else {\n      document.body.style.overflow = \"\";\n    }\n\n    return () => {\n      document.body.style.overflow = \"\";\n    };\n  }, [isOpen]);\n\n  return (\n    <AnimatePresence>\n      {isOpen && (\n        <>\n          {/* Backdrop */}\n          <motion.div\n            className=\"fixed inset-0 bg-black/50 z-40\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            onClick={handleBackdropClick}\n          />\n\n          {/* Drawer */}\n          <motion.div\n            ref={drawerRef}\n            className=\"fixed top-0 left-0 h-full w-80 max-w-[85vw] bg-[var(--bg-secondary)] border-r border-[var(--border-primary)] z-50 overflow-y-auto\"\n            initial={{ x: -320 }}\n            animate={{ x: 0 }}\n            exit={{ x: -320 }}\n            transition={{ type: \"tween\", duration: 0.3 }}\n            drag=\"x\"\n            dragConstraints={{ left: -320, right: 0 }}\n            dragElastic={0.2}\n            onDragEnd={handleDragEnd}\n          >\n            {/* Header */}\n            <div className=\"flex items-center justify-between p-4 border-b border-[var(--border-primary)]\">\n              <h2 className=\"text-lg font-semibold text-[var(--text-primary)]\">\n                {title}\n              </h2>\n              <button\n                onClick={onClose}\n                className=\"p-2 rounded-md hover:bg-[var(--bg-tertiary)] text-[var(--text-secondary)]\"\n              >\n                <X className=\"w-5 h-5\" />\n              </button>\n            </div>\n\n            {/* Content */}\n            <div className=\"p-4\">{children}</div>\n          </motion.div>\n        </>\n      )}\n    </AnimatePresence>\n  );\n};\n\n// =============================================================================\n// MOBILE PANEL STACK\n// =============================================================================\n\ninterface MobilePanelStackProps {\n  panels: Array<{\n    id: string;\n    title: string;\n    content: React.ReactNode;\n    icon?: React.ReactNode;\n  }>;\n  activePanel?: string;\n  onPanelChange?: (panelId: string) => void;\n}\n\nexport const MobilePanelStack: React.FC<MobilePanelStackProps> = ({\n  panels,\n  activePanel,\n  onPanelChange,\n}) => {\n  const [currentPanel, setCurrentPanel] = useState(\n    activePanel || panels[0]?.id,\n  );\n  const [direction, setDirection] = useState(0);\n\n  const handlePanelChange = (panelId: string) => {\n    const currentIndex = panels.findIndex((p) => p.id === currentPanel);\n    const newIndex = panels.findIndex((p) => p.id === panelId);\n\n    setDirection(newIndex > currentIndex ? 1 : -1);\n    setCurrentPanel(panelId);\n    onPanelChange?.(panelId);\n  };\n\n  const currentPanelData = panels.find((p) => p.id === currentPanel);\n\n  const variants = {\n    enter: (direction: number) => ({\n      x: direction > 0 ? 300 : -300,\n      opacity: 0,\n    }),\n    center: {\n      zIndex: 1,\n      x: 0,\n      opacity: 1,\n    },\n    exit: (direction: number) => ({\n      zIndex: 0,\n      x: direction < 0 ? 300 : -300,\n      opacity: 0,\n    }),\n  };\n\n  return (\n    <div className=\"mobile-panel-stack h-full flex flex-col\">\n      {/* Tab Bar */}\n      <div className=\"flex border-b border-[var(--border-primary)] bg-[var(--bg-secondary)]\">\n        {panels.map((panel) => (\n          <button\n            key={panel.id}\n            onClick={() => handlePanelChange(panel.id)}\n            className={`flex-1 flex items-center justify-center gap-2 p-3 text-sm font-medium transition-colors ${\n              currentPanel === panel.id\n                ? \"text-[var(--primary-amber)] border-b-2 border-[var(--primary-amber)]\"\n                : \"text-[var(--text-secondary)] hover:text-[var(--text-primary)]\"\n            }`}\n          >\n            {panel.icon}\n            <span className=\"truncate\">{panel.title}</span>\n          </button>\n        ))}\n      </div>\n\n      {/* Panel Content */}\n      <div className=\"flex-1 relative overflow-hidden\">\n        <AnimatePresence initial={false} custom={direction}>\n          <motion.div\n            key={currentPanel}\n            custom={direction}\n            variants={variants}\n            initial=\"enter\"\n            animate=\"center\"\n            exit=\"exit\"\n            transition={{\n              x: { type: \"spring\", stiffness: 300, damping: 30 },\n              opacity: { duration: 0.2 },\n            }}\n            className=\"absolute inset-0 overflow-auto\"\n          >\n            {currentPanelData?.content}\n          </motion.div>\n        </AnimatePresence>\n      </div>\n    </div>\n  );\n};\n\n// =============================================================================\n// MOBILE TILING MANAGER\n// =============================================================================\n\ninterface MobileTilingManagerProps {\n  children: React.ReactNode;\n  panels: Array<{\n    id: string;\n    title: string;\n    component: React.ReactNode;\n  }>;\n}\n\nexport const MobileTilingManager: React.FC<MobileTilingManagerProps> = ({\n  children,\n  panels,\n}) => {\n  const { isMobile, orientation } = useMobileDetection();\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n  const [currentView, setCurrentView] = useState<\"stack\" | \"single\">(\"stack\");\n  const [selectedPanel, setSelectedPanel] = useState<string | null>(null);\n\n  if (!isMobile) {\n    return <>{children}</>;\n  }\n\n  const handlePanelSelect = (panelId: string) => {\n    setSelectedPanel(panelId);\n    setCurrentView(\"single\");\n  };\n\n  const handleBackToStack = () => {\n    setCurrentView(\"stack\");\n    setSelectedPanel(null);\n  };\n\n  const selectedPanelData = selectedPanel\n    ? panels.find((p) => p.id === selectedPanel)\n    : null;\n\n  return (\n    <div className=\"mobile-tiling-manager h-full flex flex-col\">\n      {/* Mobile Header */}\n      <div className=\"mobile-header h-14 bg-[var(--bg-secondary)] border-b border-[var(--border-primary)] flex items-center justify-between px-4 flex-shrink-0\">\n        <div className=\"flex items-center gap-3\">\n          <button\n            onClick={() => setIsDrawerOpen(true)}\n            className=\"p-2 rounded-md hover:bg-[var(--bg-tertiary)] text-[var(--text-secondary)]\"\n          >\n            <Menu className=\"w-5 h-5\" />\n          </button>\n\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-6 h-6 rounded bg-[var(--primary-amber)] flex items-center justify-center\">\n              <span className=\"text-xs font-bold text-[var(--bg-primary)]\">\n                CN\n              </span>\n            </div>\n            <h1 className=\"text-sm font-semibold text-[var(--text-primary)]\">\n              {currentView === \"single\" && selectedPanelData\n                ? selectedPanelData.title\n                : \"Dashboard\"}\n            </h1>\n          </div>\n        </div>\n\n        <div className=\"flex items-center gap-2\">\n          {currentView === \"single\" && (\n            <button\n              onClick={handleBackToStack}\n              className=\"p-2 rounded-md hover:bg-[var(--bg-tertiary)] text-[var(--text-secondary)]\"\n            >\n              <Minimize2 className=\"w-4 h-4\" />\n            </button>\n          )}\n\n          <button className=\"p-2 rounded-md hover:bg-[var(--bg-tertiary)] text-[var(--text-secondary)]\">\n            <MoreVertical className=\"w-4 h-4\" />\n          </button>\n        </div>\n      </div>\n\n      {/* Content Area */}\n      <div className=\"flex-1 overflow-hidden\">\n        {currentView === \"stack\" ? (\n          <MobilePanelStack\n            panels={panels.map((panel) => ({\n              id: panel.id,\n              title: panel.title,\n              content: (\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <h3 className=\"text-lg font-semibold text-[var(--text-primary)]\">\n                      {panel.title}\n                    </h3>\n                    <button\n                      onClick={() => handlePanelSelect(panel.id)}\n                      className=\"p-2 rounded-md hover:bg-[var(--bg-tertiary)] text-[var(--text-secondary)]\"\n                      title=\"Expand\"\n                    >\n                      <Maximize2 className=\"w-4 h-4\" />\n                    </button>\n                  </div>\n                  <div className=\"max-h-64 overflow-hidden\">\n                    {panel.component}\n                  </div>\n                </div>\n              ),\n            }))}\n          />\n        ) : (\n          selectedPanelData && (\n            <div className=\"h-full p-4\">{selectedPanelData.component}</div>\n          )\n        )}\n      </div>\n\n      {/* Mobile Drawer */}\n      <MobileDrawer\n        isOpen={isDrawerOpen}\n        onClose={() => setIsDrawerOpen(false)}\n        title=\"Navigation\"\n      >\n        <div className=\"space-y-4\">\n          <div className=\"space-y-2\">\n            <h3 className=\"text-sm font-semibold text-[var(--text-primary)] uppercase tracking-wide\">\n              Panels\n            </h3>\n            {panels.map((panel) => (\n              <button\n                key={panel.id}\n                onClick={() => {\n                  handlePanelSelect(panel.id);\n                  setIsDrawerOpen(false);\n                }}\n                className=\"w-full text-left p-3 rounded-md hover:bg-[var(--bg-tertiary)] text-[var(--text-secondary)] hover:text-[var(--text-primary)] transition-colors\"\n              >\n                {panel.title}\n              </button>\n            ))}\n          </div>\n\n          <div className=\"border-t border-[var(--border-primary)] pt-4\">\n            <h3 className=\"text-sm font-semibold text-[var(--text-primary)] uppercase tracking-wide mb-2\">\n              Views\n            </h3>\n            <div className=\"space-y-2\">\n              <button\n                onClick={() => {\n                  setCurrentView(\"stack\");\n                  setIsDrawerOpen(false);\n                }}\n                className={`w-full text-left p-3 rounded-md transition-colors ${\n                  currentView === \"stack\"\n                    ? \"bg-[var(--primary-amber)] text-[var(--bg-primary)]\"\n                    : \"hover:bg-[var(--bg-tertiary)] text-[var(--text-secondary)] hover:text-[var(--text-primary)]\"\n                }`}\n              >\n                Stack View\n              </button>\n              <button\n                onClick={() => {\n                  if (selectedPanel) {\n                    setCurrentView(\"single\");\n                  }\n                  setIsDrawerOpen(false);\n                }}\n                disabled={!selectedPanel}\n                className={`w-full text-left p-3 rounded-md transition-colors ${\n                  currentView === \"single\"\n                    ? \"bg-[var(--primary-amber)] text-[var(--bg-primary)]\"\n                    : selectedPanel\n                      ? \"hover:bg-[var(--bg-tertiary)] text-[var(--text-secondary)] hover:text-[var(--text-primary)]\"\n                      : \"opacity-50 cursor-not-allowed text-[var(--text-muted)]\"\n                }`}\n              >\n                Single Panel\n              </button>\n            </div>\n          </div>\n        </div>\n      </MobileDrawer>\n    </div>\n  );\n};\n\n// =============================================================================\n// TOUCH GESTURES HOOK\n// =============================================================================\n\ninterface TouchGestureOptions {\n  onSwipeLeft?: () => void;\n  onSwipeRight?: () => void;\n  onSwipeUp?: () => void;\n  onSwipeDown?: () => void;\n  onPinch?: (scale: number) => void;\n  threshold?: number;\n}\n\nexport const useTouchGestures = (\n  elementRef: React.RefObject<HTMLElement>,\n  options: TouchGestureOptions,\n) => {\n  const {\n    onSwipeLeft,\n    onSwipeRight,\n    onSwipeUp,\n    onSwipeDown,\n    onPinch,\n    threshold = 50,\n  } = options;\n\n  useEffect(() => {\n    const element = elementRef.current;\n    if (!element) return;\n\n    let startX = 0;\n    let startY = 0;\n    let startDistance = 0;\n\n    const handleTouchStart = (e: TouchEvent) => {\n      if (e.touches.length === 1) {\n        startX = e.touches[0].clientX;\n        startY = e.touches[0].clientY;\n      } else if (e.touches.length === 2) {\n        const dx = e.touches[0].clientX - e.touches[1].clientX;\n        const dy = e.touches[0].clientY - e.touches[1].clientY;\n        startDistance = Math.sqrt(dx * dx + dy * dy);\n      }\n    };\n\n    const handleTouchMove = (e: TouchEvent) => {\n      if (e.touches.length === 2 && onPinch) {\n        const dx = e.touches[0].clientX - e.touches[1].clientX;\n        const dy = e.touches[0].clientY - e.touches[1].clientY;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        const scale = distance / startDistance;\n        onPinch(scale);\n      }\n    };\n\n    const handleTouchEnd = (e: TouchEvent) => {\n      if (e.changedTouches.length === 1) {\n        const endX = e.changedTouches[0].clientX;\n        const endY = e.changedTouches[0].clientY;\n\n        const deltaX = endX - startX;\n        const deltaY = endY - startY;\n\n        const absDeltaX = Math.abs(deltaX);\n        const absDeltaY = Math.abs(deltaY);\n\n        if (Math.max(absDeltaX, absDeltaY) > threshold) {\n          if (absDeltaX > absDeltaY) {\n            // Horizontal swipe\n            if (deltaX > 0) {\n              onSwipeRight?.();\n            } else {\n              onSwipeLeft?.();\n            }\n          } else {\n            // Vertical swipe\n            if (deltaY > 0) {\n              onSwipeDown?.();\n            } else {\n              onSwipeUp?.();\n            }\n          }\n        }\n      }\n    };\n\n    element.addEventListener(\"touchstart\", handleTouchStart, { passive: true });\n    element.addEventListener(\"touchmove\", handleTouchMove, { passive: true });\n    element.addEventListener(\"touchend\", handleTouchEnd, { passive: true });\n\n    return () => {\n      element.removeEventListener(\"touchstart\", handleTouchStart);\n      element.removeEventListener(\"touchmove\", handleTouchMove);\n      element.removeEventListener(\"touchend\", handleTouchEnd);\n    };\n  }, [\n    elementRef,\n    onSwipeLeft,\n    onSwipeRight,\n    onSwipeUp,\n    onSwipeDown,\n    onPinch,\n    threshold,\n  ]);\n};\n\nexport default {\n  useMobileDetection,\n  MobileDrawer,\n  MobilePanelStack,\n  MobileTilingManager,\n  useTouchGestures,\n};\n"],"mappingsuJa;IAAAA,aAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,aAAA;AAAAA,aAAA,GAAAE,CAAA;;;;;;;;;;;;;;;;;;;;EAlGAC,YAAY,WAAAA,CAAA;IAAA;IAAAH,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;WAAZC,YAAA;;EAkGAE,gBAAgB,WAAAA,CAAA;IAAA;IAAAL,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;WAAhBG,gBAAA;;EA+FAC,mBAAmB,WAAAA,CAAA;IAAA;IAAAN,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;WAAnBI,mBAAA;;EAuRbC,OAME,WAAAA,CAAA;IAAA;IAAAP,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;WANFM,QAAA;;EAngBaC,kBAAkB,WAAAA,CAAA;IAAA;IAAAT,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;WAAlBO,kBAAA;;EAsaAC,gBAAgB,WAAAA,CAAA;IAAA;IAAAV,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;WAAhBQ,gBAAA;;;;;;;;yEA9asC;;;kCACF;;;kCACW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMrD,MAAMD,kBAAA,GAAqBA,CAAA;EAAA;EAAAT,aAAA,GAAAI,CAAA;EAChC,MAAM,CAACO,QAAA,EAAUC,WAAA,CAAY;EAAA;EAAA,CAAAZ,aAAA,GAAAE,CAAA,QAAG,IAAAW,MAAA,CAAAC,QAAQ,EAAC;EACzC,MAAM,CAACC,QAAA,EAAUC,WAAA,CAAY;EAAA;EAAA,CAAAhB,aAAA,GAAAE,CAAA,QAAG,IAAAW,MAAA,CAAAC,QAAQ,EAAC;EACzC,MAAM,CAACG,WAAA,EAAaC,cAAA,CAAe;EAAA;EAAA,CAAAlB,aAAA,GAAAE,CAAA,QAAG,IAAAW,MAAA,CAAAC,QAAQ,EAC5C;EAEF,MAAM,CAACK,UAAA,EAAYC,aAAA,CAAc;EAAA;EAAA,CAAApB,aAAA,GAAAE,CAAA,QAAG,IAAAW,MAAA,CAAAC,QAAQ,EAAC;IAAEO,KAAA,EAAO;IAAGC,MAAA,EAAQ;EAAE;EAAA;EAAAtB,aAAA,GAAAE,CAAA;EAEnE,IAAAW,MAAA,CAAAU,SAAS,EAAC;IAAA;IAAAvB,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;IACR,MAAMsB,WAAA,GAAcA,CAAA;MAAA;MAAAxB,aAAA,GAAAI,CAAA;MAClB,MAAMiB,KAAA;MAAA;MAAA,CAAArB,aAAA,GAAAE,CAAA,QAAQuB,MAAA,CAAOC,UAAU;MAC/B,MAAMJ,MAAA;MAAA;MAAA,CAAAtB,aAAA,GAAAE,CAAA,QAASuB,MAAA,CAAOE,WAAW;MAAA;MAAA3B,aAAA,GAAAE,CAAA;MAEjCkB,aAAA,CAAc;QAAEC,KAAA;QAAOC;MAAO;MAAA;MAAAtB,aAAA,GAAAE,CAAA;MAC9BU,WAAA,CAAYS,KAAA,GAAQ;MAAA;MAAArB,aAAA,GAAAE,CAAA;MACpBc,WAAA;MAAY;MAAA,CAAAhB,aAAA,GAAA4B,CAAA,WAAAP,KAAA,IAAS;MAAA;MAAA,CAAArB,aAAA,GAAA4B,CAAA,WAAOP,KAAA,GAAQ;MAAA;MAAArB,aAAA,GAAAE,CAAA;MACpCgB,cAAA,CAAeG,KAAA,GAAQC,MAAA;MAAA;MAAA,CAAAtB,aAAA,GAAA4B,CAAA,WAAS;MAAA;MAAA,CAAA5B,aAAA,GAAA4B,CAAA,WAAc;IAChD;IAAA;IAAA5B,aAAA,GAAAE,CAAA;IAEAsB,WAAA;IAAA;IAAAxB,aAAA,GAAAE,CAAA;IACAuB,MAAA,CAAOI,gBAAgB,CAAC,UAAUL,WAAA;IAAA;IAAAxB,aAAA,GAAAE,CAAA;IAClCuB,MAAA,CAAOI,gBAAgB,CAAC,qBAAqBL,WAAA;IAAA;IAAAxB,aAAA,GAAAE,CAAA;IAE7C,OAAO;MAAA;MAAAF,aAAA,GAAAI,CAAA;MAAAJ,aAAA,GAAAE,CAAA;MACLuB,MAAA,CAAOK,mBAAmB,CAAC,UAAUN,WAAA;MAAA;MAAAxB,aAAA,GAAAE,CAAA;MACrCuB,MAAA,CAAOK,mBAAmB,CAAC,qBAAqBN,WAAA;IAClD;EACF,GAAG,EAAE;EAAA;EAAAxB,aAAA,GAAAE,CAAA;EAEL,OAAO;IAAES,QAAA;IAAUI,QAAA;IAAUE,WAAA;IAAaE;EAAW;AACvD;AAAA;AAAAnB,aAAA,GAAAE,CAAA;AAaO,MAAMC,YAAA,GAA4CA,CAAC;EACxD4B,MAAM;EACNC,OAAO;EACPC,QAAQ;EACRC,KAAA;EAAA;EAAA,CAAAlC,aAAA,GAAA4B,CAAA,WAAQ,YAAY;AAAA,CACrB;EAAA;EAAA5B,aAAA,GAAAI,CAAA;EACC,MAAM+B,SAAA;EAAA;EAAA,CAAAnC,aAAA,GAAAE,CAAA,QAAY,IAAAW,MAAA,CAAAuB,MAAM,EAAiB;EAEzC;EAAA;EAAApC,aAAA,GAAAE,CAAA;EACA,MAAMmC,aAAA,GAAgBA,CAACC,KAAA,EAAYC,IAAA;IAAA;IAAAvC,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;IACjC;IAAI;IAAA,CAAAF,aAAA,GAAA4B,CAAA,WAAAW,IAAA,CAAKC,MAAM,CAACC,CAAC,GAAG,CAAC;IAAA;IAAA,CAAAzC,aAAA,GAAA4B,CAAA,WAAOW,IAAA,CAAKG,QAAQ,CAACD,CAAC,GAAG,CAAC,MAAK;MAAA;MAAAzC,aAAA,GAAA4B,CAAA;MAAA5B,aAAA,GAAAE,CAAA;MAClD8B,OAAA;IACF;IAAA;IAAA;MAAAhC,aAAA,GAAA4B,CAAA;IAAA;EACF;EAEA;EAAA;EAAA5B,aAAA,GAAAE,CAAA;EACA,MAAMyC,mBAAA,GAAuBC,CAAA;IAAA;IAAA5C,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;IAC3B,IAAI0C,CAAA,CAAEC,MAAM,KAAKD,CAAA,CAAEE,aAAa,EAAE;MAAA;MAAA9C,aAAA,GAAA4B,CAAA;MAAA5B,aAAA,GAAAE,CAAA;MAChC8B,OAAA;IACF;IAAA;IAAA;MAAAhC,aAAA,GAAA4B,CAAA;IAAA;EACF;EAEA;EAAA;EAAA5B,aAAA,GAAAE,CAAA;EACA,IAAAW,MAAA,CAAAU,SAAS,EAAC;IAAA;IAAAvB,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;IACR,IAAI6B,MAAA,EAAQ;MAAA;MAAA/B,aAAA,GAAA4B,CAAA;MAAA5B,aAAA,GAAAE,CAAA;MACV6C,QAAA,CAASC,IAAI,CAACC,KAAK,CAACC,QAAQ,GAAG;IACjC,OAAO;MAAA;MAAAlD,aAAA,GAAA4B,CAAA;MAAA5B,aAAA,GAAAE,CAAA;MACL6C,QAAA,CAASC,IAAI,CAACC,KAAK,CAACC,QAAQ,GAAG;IACjC;IAAA;IAAAlD,aAAA,GAAAE,CAAA;IAEA,OAAO;MAAA;MAAAF,aAAA,GAAAI,CAAA;MAAAJ,aAAA,GAAAE,CAAA;MACL6C,QAAA,CAASC,IAAI,CAACC,KAAK,CAACC,QAAQ,GAAG;IACjC;EACF,GAAG,CAACnB,MAAA,CAAO;EAAA;EAAA/B,aAAA,GAAAE,CAAA;EAEX,oBACE,IAAAiD,WAAA,CAAAC,GAAA,EAACC,aAAA,CAAAC,eAAe;;IACb;IAAA,CAAAtD,aAAA,GAAA4B,CAAA,WAAAG,MAAA;IAAA;IAAA,CAAA/B,aAAA,GAAA4B,CAAA,wBACC,IAAAuB,WAAA,CAAAI,IAAA,EAAAJ,WAAA,CAAAK,QAAA;8BAEE,IAAAL,WAAA,CAAAC,GAAA,EAACC,aAAA,CAAAI,MAAM,CAACC,GAAG;QACTC,SAAA,EAAU;QACVC,OAAA,EAAS;UAAEC,OAAA,EAAS;QAAE;QACtBC,OAAA,EAAS;UAAED,OAAA,EAAS;QAAE;QACtBE,IAAA,EAAM;UAAEF,OAAA,EAAS;QAAE;QACnBG,OAAA,EAASrB;uBAIX,IAAAQ,WAAA,CAAAI,IAAA,EAACF,aAAA,CAAAI,MAAM,CAACC,GAAG;QACTO,GAAA,EAAK9B,SAAA;QACLwB,SAAA,EAAU;QACVC,OAAA,EAAS;UAAEnB,CAAA,EAAG,CAAC;QAAI;QACnBqB,OAAA,EAAS;UAAErB,CAAA,EAAG;QAAE;QAChBsB,IAAA,EAAM;UAAEtB,CAAA,EAAG,CAAC;QAAI;QAChByB,UAAA,EAAY;UAAEC,IAAA,EAAM;UAASC,QAAA,EAAU;QAAI;QAC3CC,IAAA,EAAK;QACLC,eAAA,EAAiB;UAAEC,IAAA,EAAM,CAAC;UAAKC,KAAA,EAAO;QAAE;QACxCC,WAAA,EAAa;QACbC,SAAA,EAAWrC,aAAA;gCAGX,IAAAc,WAAA,CAAAI,IAAA,EAAC;UAAII,SAAA,EAAU;kCACb,IAAAR,WAAA,CAAAC,GAAA,EAAC;YAAGO,SAAA,EAAU;sBACXzB;2BAEH,IAAAiB,WAAA,CAAAC,GAAA,EAAC;YACCY,OAAA,EAAShC,OAAA;YACT2B,SAAA,EAAU;sBAEV,iBAAAR,WAAA,CAAAC,GAAA,EAACuB,YAAA,CAAAC,CAAC;cAACjB,SAAA,EAAU;;;yBAKjB,IAAAR,WAAA,CAAAC,GAAA,EAAC;UAAIO,SAAA,EAAU;oBAAO1B;;;;;AAMlC;AAAA;AAAAjC,aAAA,GAAAE,CAAA;AAiBO,MAAMG,gBAAA,GAAoDA,CAAC;EAChEwE,MAAM;EACNC,WAAW;EACXC;AAAa,CACd;EAAA;EAAA/E,aAAA,GAAAI,CAAA;EACC,MAAM,CAAC4E,YAAA,EAAcC,eAAA,CAAgB;EAAA;EAAA,CAAAjF,aAAA,GAAAE,CAAA,QAAG,IAAAW,MAAA,CAAAC,QAAQ;EAC9C;EAAA,CAAAd,aAAA,GAAA4B,CAAA,WAAAkD,WAAA;EAAA;EAAA,CAAA9E,aAAA,GAAA4B,CAAA,WAAeiD,MAAM,CAAC,EAAE,EAAEK,EAAA;EAE5B,MAAM,CAACC,SAAA,EAAWC,YAAA,CAAa;EAAA;EAAA,CAAApF,aAAA,GAAAE,CAAA,QAAG,IAAAW,MAAA,CAAAC,QAAQ,EAAC;EAAA;EAAAd,aAAA,GAAAE,CAAA;EAE3C,MAAMmF,iBAAA,GAAqBC,OAAA;IAAA;IAAAtF,aAAA,GAAAI,CAAA;IACzB,MAAMmF,YAAA;IAAA;IAAA,CAAAvF,aAAA,GAAAE,CAAA,QAAe2E,MAAA,CAAOW,SAAS,CAAEC,CAAA,IAAM;MAAA;MAAAzF,aAAA,GAAAI,CAAA;MAAAJ,aAAA,GAAAE,CAAA;MAAA,OAAAuF,CAAA,CAAEP,EAAE,KAAKF,YAAA;IAAA;IACtD,MAAMU,QAAA;IAAA;IAAA,CAAA1F,aAAA,GAAAE,CAAA,QAAW2E,MAAA,CAAOW,SAAS,CAAEC,CAAA,IAAM;MAAA;MAAAzF,aAAA,GAAAI,CAAA;MAAAJ,aAAA,GAAAE,CAAA;MAAA,OAAAuF,CAAA,CAAEP,EAAE,KAAKI,OAAA;IAAA;IAAA;IAAAtF,aAAA,GAAAE,CAAA;IAElDkF,YAAA,CAAaM,QAAA,GAAWH,YAAA;IAAA;IAAA,CAAAvF,aAAA,GAAA4B,CAAA,WAAe;IAAA;IAAA,CAAA5B,aAAA,GAAA4B,CAAA,WAAI,CAAC;IAAA;IAAA5B,aAAA,GAAAE,CAAA;IAC5C+E,eAAA,CAAgBK,OAAA;IAAA;IAAAtF,aAAA,GAAAE,CAAA;IAChB6E,aAAA,GAAgBO,OAAA;EAClB;EAEA,MAAMK,gBAAA;EAAA;EAAA,CAAA3F,aAAA,GAAAE,CAAA,QAAmB2E,MAAA,CAAOe,IAAI,CAAEH,CAAA,IAAM;IAAA;IAAAzF,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;IAAA,OAAAuF,CAAA,CAAEP,EAAE,KAAKF,YAAA;EAAA;EAErD,MAAMa,QAAA;EAAA;EAAA,CAAA7F,aAAA,GAAAE,CAAA,QAAW;IACf4F,KAAA,EAAQX,SAAA,IAAuB;MAAA;MAAAnF,aAAA,GAAAI,CAAA;MAAAJ,aAAA,GAAAE,CAAA;MAAA;QAC7BuC,CAAA,EAAG0C,SAAA,GAAY;QAAA;QAAA,CAAAnF,aAAA,GAAA4B,CAAA,WAAI;QAAA;QAAA,CAAA5B,aAAA,GAAA4B,CAAA,WAAM,CAAC;QAC1BiC,OAAA,EAAS;MACX;IAAA;IACAkC,MAAA,EAAQ;MACNC,MAAA,EAAQ;MACRvD,CAAA,EAAG;MACHoB,OAAA,EAAS;IACX;IACAE,IAAA,EAAOoB,SAAA,IAAuB;MAAA;MAAAnF,aAAA,GAAAI,CAAA;MAAAJ,aAAA,GAAAE,CAAA;MAAA;QAC5B8F,MAAA,EAAQ;QACRvD,CAAA,EAAG0C,SAAA,GAAY;QAAA;QAAA,CAAAnF,aAAA,GAAA4B,CAAA,WAAI;QAAA;QAAA,CAAA5B,aAAA,GAAA4B,CAAA,WAAM,CAAC;QAC1BiC,OAAA,EAAS;MACX;IAAA;EACF;EAAA;EAAA7D,aAAA,GAAAE,CAAA;EAEA,oBACE,IAAAiD,WAAA,CAAAI,IAAA,EAAC;IAAII,SAAA,EAAU;4BAEb,IAAAR,WAAA,CAAAC,GAAA,EAAC;MAAIO,SAAA,EAAU;gBACZkB,MAAA,CAAOoB,GAAG,CAAEC,KAAA,IACX;QAAA;QAAAlG,aAAA,GAAAI,CAAA;QAAAJ,aAAA,GAAAE,CAAA;QAAA,OADW,aACX,IAAAiD,WAAA,CAAAI,IAAA,EAAC;UAECS,OAAA,EAASA,CAAA,KAAM;YAAA;YAAAhE,aAAA,GAAAI,CAAA;YAAAJ,aAAA,GAAAE,CAAA;YAAA,OAAAmF,iBAAA,CAAkBa,KAAA,CAAMhB,EAAE;UAAA;UACzCvB,SAAA,EAAW,2FACTqB,YAAA,KAAiBkB,KAAA,CAAMhB,EAAE;UAAA;UAAA,CAAAlF,aAAA,GAAA4B,CAAA,WACrB;UAAA;UAAA,CAAA5B,aAAA,GAAA4B,CAAA,WACA,kEACJ;qBAEDsE,KAAA,CAAMC,IAAI,E,aACX,IAAAhD,WAAA,CAAAC,GAAA,EAAC;YAAKO,SAAA,EAAU;sBAAYuC,KAAA,CAAMhE;;WAT7BgE,KAAA,CAAMhB,EAAE;MAAA;qBAenB,IAAA/B,WAAA,CAAAC,GAAA,EAAC;MAAIO,SAAA,EAAU;gBACb,iBAAAR,WAAA,CAAAC,GAAA,EAACC,aAAA,CAAAC,eAAe;QAACM,OAAA,EAAS;QAAOwC,MAAA,EAAQjB,SAAA;kBACvC,iBAAAhC,WAAA,CAAAC,GAAA,EAACC,aAAA,CAAAI,MAAM,CAACC,GAAG;UAET0C,MAAA,EAAQjB,SAAA;UACRU,QAAA,EAAUA,QAAA;UACVjC,OAAA,EAAQ;UACRE,OAAA,EAAQ;UACRC,IAAA,EAAK;UACLG,UAAA,EAAY;YACVzB,CAAA,EAAG;cAAE0B,IAAA,EAAM;cAAUkC,SAAA,EAAW;cAAKC,OAAA,EAAS;YAAG;YACjDzC,OAAA,EAAS;cAAEO,QAAA,EAAU;YAAI;UAC3B;UACAT,SAAA,EAAU;oBAETgC,gBAAA,EAAkBY;WAZdvB,YAAA;;;;AAkBjB;AAAA;AAAAhF,aAAA,GAAAE,CAAA;AAeO,MAAMI,mBAAA,GAA0DA,CAAC;EACtE2B,QAAQ;EACR4C;AAAM,CACP;EAAA;EAAA7E,aAAA,GAAAI,CAAA;EACC,MAAM;IAAEO,QAAQ;IAAEM;EAAW,CAAE;EAAA;EAAA,CAAAjB,aAAA,GAAAE,CAAA,QAAGO,kBAAA;EAClC,MAAM,CAAC+F,YAAA,EAAcC,eAAA,CAAgB;EAAA;EAAA,CAAAzG,aAAA,GAAAE,CAAA,QAAG,IAAAW,MAAA,CAAAC,QAAQ,EAAC;EACjD,MAAM,CAAC4F,WAAA,EAAaC,cAAA,CAAe;EAAA;EAAA,CAAA3G,aAAA,GAAAE,CAAA,QAAG,IAAAW,MAAA,CAAAC,QAAQ,EAAqB;EACnE,MAAM,CAAC8F,aAAA,EAAeC,gBAAA,CAAiB;EAAA;EAAA,CAAA7G,aAAA,GAAAE,CAAA,QAAG,IAAAW,MAAA,CAAAC,QAAQ,EAAgB;EAAA;EAAAd,aAAA,GAAAE,CAAA;EAElE,IAAI,CAACS,QAAA,EAAU;IAAA;IAAAX,aAAA,GAAA4B,CAAA;IAAA5B,aAAA,GAAAE,CAAA;IACb,oBAAO,IAAAiD,WAAA,CAAAC,GAAA,EAAAD,WAAA,CAAAK,QAAA;gBAAGvB;;EACZ;EAAA;EAAA;IAAAjC,aAAA,GAAA4B,CAAA;EAAA;EAAA5B,aAAA,GAAAE,CAAA;EAEA,MAAM4G,iBAAA,GAAqBxB,OAAA;IAAA;IAAAtF,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;IACzB2G,gBAAA,CAAiBvB,OAAA;IAAA;IAAAtF,aAAA,GAAAE,CAAA;IACjByG,cAAA,CAAe;EACjB;EAAA;EAAA3G,aAAA,GAAAE,CAAA;EAEA,MAAM6G,iBAAA,GAAoBA,CAAA;IAAA;IAAA/G,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;IACxByG,cAAA,CAAe;IAAA;IAAA3G,aAAA,GAAAE,CAAA;IACf2G,gBAAA,CAAiB;EACnB;EAEA,MAAMG,iBAAA;EAAA;EAAA,CAAAhH,aAAA,GAAAE,CAAA,SAAoB0G,aAAA;EAAA;EAAA,CAAA5G,aAAA,GAAA4B,CAAA,WACtBiD,MAAA,CAAOe,IAAI,CAAEH,CAAA,IAAM;IAAA;IAAAzF,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;IAAA,OAAAuF,CAAA,CAAEP,EAAE,KAAK0B,aAAA;EAAA;EAAA;EAAA,CAAA5G,aAAA,GAAA4B,CAAA,WAC5B;EAAA;EAAA5B,aAAA,GAAAE,CAAA;EAEJ,oBACE,IAAAiD,WAAA,CAAAI,IAAA,EAAC;IAAII,SAAA,EAAU;4BAEb,IAAAR,WAAA,CAAAI,IAAA,EAAC;MAAII,SAAA,EAAU;8BACb,IAAAR,WAAA,CAAAI,IAAA,EAAC;QAAII,SAAA,EAAU;gCACb,IAAAR,WAAA,CAAAC,GAAA,EAAC;UACCY,OAAA,EAASA,CAAA,KAAM;YAAA;YAAAhE,aAAA,GAAAI,CAAA;YAAAJ,aAAA,GAAAE,CAAA;YAAA,OAAAuG,eAAA,CAAgB;UAAA;UAC/B9C,SAAA,EAAU;oBAEV,iBAAAR,WAAA,CAAAC,GAAA,EAACuB,YAAA,CAAAsC,IAAI;YAACtD,SAAA,EAAU;;yBAGlB,IAAAR,WAAA,CAAAI,IAAA,EAAC;UAAII,SAAA,EAAU;kCACb,IAAAR,WAAA,CAAAC,GAAA,EAAC;YAAIO,SAAA,EAAU;sBACb,iBAAAR,WAAA,CAAAC,GAAA,EAAC;cAAKO,SAAA,EAAU;wBAA6C;;2BAI/D,IAAAR,WAAA,CAAAC,GAAA,EAAC;YAAGO,SAAA,EAAU;;YACX;YAAA,CAAA3D,aAAA,GAAA4B,CAAA,WAAA8E,WAAA,KAAgB;YAAA;YAAA,CAAA1G,aAAA,GAAA4B,CAAA,WAAYoF,iBAAA;YAAA;YAAA,CAAAhH,aAAA,GAAA4B,CAAA,WACzBoF,iBAAA,CAAkB9E,KAAK;YAAA;YAAA,CAAAlC,aAAA,GAAA4B,CAAA,WACvB;;;uBAKV,IAAAuB,WAAA,CAAAI,IAAA,EAAC;QAAII,SAAA,EAAU;;QACZ;QAAA,CAAA3D,aAAA,GAAA4B,CAAA,WAAA8E,WAAA,KAAgB;QAAA;QAAA,CAAA1G,aAAA,GAAA4B,CAAA,wBACf,IAAAuB,WAAA,CAAAC,GAAA,EAAC;UACCY,OAAA,EAAS+C,iBAAA;UACTpD,SAAA,EAAU;oBAEV,iBAAAR,WAAA,CAAAC,GAAA,EAACuB,YAAA,CAAAuC,SAAS;YAACvD,SAAA,EAAU;;0BAIzB,IAAAR,WAAA,CAAAC,GAAA,EAAC;UAAOO,SAAA,EAAU;oBAChB,iBAAAR,WAAA,CAAAC,GAAA,EAACuB,YAAA,CAAAwC,YAAY;YAACxD,SAAA,EAAU;;;;qBAM9B,IAAAR,WAAA,CAAAC,GAAA,EAAC;MAAIO,SAAA,EAAU;gBACZ+C,WAAA,KAAgB;MAAA;MAAA,cAAA1G,aAAA,GAAA4B,CAAA,WACf,IAAAuB,WAAA,CAAAC,GAAA,EAAC/C,gBAAA;QACCwE,MAAA,EAAQA,MAAA,CAAOoB,GAAG,CAAEC,KAAA,IAAW;UAAA;UAAAlG,aAAA,GAAAI,CAAA;UAAAJ,aAAA,GAAAE,CAAA;UAAA;YAC7BgF,EAAA,EAAIgB,KAAA,CAAMhB,EAAE;YACZhD,KAAA,EAAOgE,KAAA,CAAMhE,KAAK;YAClBqE,OAAA,eACE,IAAApD,WAAA,CAAAI,IAAA,EAAC;cAAII,SAAA,EAAU;sCACb,IAAAR,WAAA,CAAAI,IAAA,EAAC;gBAAII,SAAA,EAAU;wCACb,IAAAR,WAAA,CAAAC,GAAA,EAAC;kBAAGO,SAAA,EAAU;4BACXuC,KAAA,CAAMhE;iCAET,IAAAiB,WAAA,CAAAC,GAAA,EAAC;kBACCY,OAAA,EAASA,CAAA,KAAM;oBAAA;oBAAAhE,aAAA,GAAAI,CAAA;oBAAAJ,aAAA,GAAAE,CAAA;oBAAA,OAAA4G,iBAAA,CAAkBZ,KAAA,CAAMhB,EAAE;kBAAA;kBACzCvB,SAAA,EAAU;kBACVzB,KAAA,EAAM;4BAEN,iBAAAiB,WAAA,CAAAC,GAAA,EAACuB,YAAA,CAAAyC,SAAS;oBAACzD,SAAA,EAAU;;;+BAGzB,IAAAR,WAAA,CAAAC,GAAA,EAAC;gBAAIO,SAAA,EAAU;0BACZuC,KAAA,CAAMmB;;;UAIf;QAAA;;;;MAGF;MAAA,CAAArH,aAAA,GAAA4B,CAAA,WAAAoF,iBAAA;MAAA;MAAA,CAAAhH,aAAA,GAAA4B,CAAA,wBACE,IAAAuB,WAAA,CAAAC,GAAA,EAAC;QAAIO,SAAA,EAAU;kBAAcqD,iBAAA,CAAkBK;;qBAMrD,IAAAlE,WAAA,CAAAC,GAAA,EAACjD,YAAA;MACC4B,MAAA,EAAQyE,YAAA;MACRxE,OAAA,EAASA,CAAA,KAAM;QAAA;QAAAhC,aAAA,GAAAI,CAAA;QAAAJ,aAAA,GAAAE,CAAA;QAAA,OAAAuG,eAAA,CAAgB;MAAA;MAC/BvE,KAAA,EAAM;gBAEN,iBAAAiB,WAAA,CAAAI,IAAA,EAAC;QAAII,SAAA,EAAU;gCACb,IAAAR,WAAA,CAAAI,IAAA,EAAC;UAAII,SAAA,EAAU;kCACb,IAAAR,WAAA,CAAAC,GAAA,EAAC;YAAGO,SAAA,EAAU;sBAA2E;cAGxFkB,MAAA,CAAOoB,GAAG,CAAEC,KAAA,IACX;YAAA;YAAAlG,aAAA,GAAAI,CAAA;YAAAJ,aAAA,GAAAE,CAAA;YAAA,OADW,aACX,IAAAiD,WAAA,CAAAC,GAAA,EAAC;cAECY,OAAA,EAASA,CAAA;gBAAA;gBAAAhE,aAAA,GAAAI,CAAA;gBAAAJ,aAAA,GAAAE,CAAA;gBACP4G,iBAAA,CAAkBZ,KAAA,CAAMhB,EAAE;gBAAA;gBAAAlF,aAAA,GAAAE,CAAA;gBAC1BuG,eAAA,CAAgB;cAClB;cACA9C,SAAA,EAAU;wBAETuC,KAAA,CAAMhE;eAPFgE,KAAA,CAAMhB,EAAE;UAAA;yBAYnB,IAAA/B,WAAA,CAAAI,IAAA,EAAC;UAAII,SAAA,EAAU;kCACb,IAAAR,WAAA,CAAAC,GAAA,EAAC;YAAGO,SAAA,EAAU;sBAAgF;2BAG9F,IAAAR,WAAA,CAAAI,IAAA,EAAC;YAAII,SAAA,EAAU;oCACb,IAAAR,WAAA,CAAAC,GAAA,EAAC;cACCY,OAAA,EAASA,CAAA;gBAAA;gBAAAhE,aAAA,GAAAI,CAAA;gBAAAJ,aAAA,GAAAE,CAAA;gBACPyG,cAAA,CAAe;gBAAA;gBAAA3G,aAAA,GAAAE,CAAA;gBACfuG,eAAA,CAAgB;cAClB;cACA9C,SAAA,EAAW,qDACT+C,WAAA,KAAgB;cAAA;cAAA,CAAA1G,aAAA,GAAA4B,CAAA,WACZ;cAAA;cAAA,CAAA5B,aAAA,GAAA4B,CAAA,WACA,gGACJ;wBACH;6BAGD,IAAAuB,WAAA,CAAAC,GAAA,EAAC;cACCY,OAAA,EAASA,CAAA;gBAAA;gBAAAhE,aAAA,GAAAI,CAAA;gBAAAJ,aAAA,GAAAE,CAAA;gBACP,IAAI0G,aAAA,EAAe;kBAAA;kBAAA5G,aAAA,GAAA4B,CAAA;kBAAA5B,aAAA,GAAAE,CAAA;kBACjByG,cAAA,CAAe;gBACjB;gBAAA;gBAAA;kBAAA3G,aAAA,GAAA4B,CAAA;gBAAA;gBAAA5B,aAAA,GAAAE,CAAA;gBACAuG,eAAA,CAAgB;cAClB;cACAa,QAAA,EAAU,CAACV,aAAA;cACXjD,SAAA,EAAW,qDACT+C,WAAA,KAAgB;cAAA;cAAA,CAAA1G,aAAA,GAAA4B,CAAA,WACZ;cAAA;cAAA,CAAA5B,aAAA,GAAA4B,CAAA,WACAgF,aAAA;cAAA;cAAA,CAAA5G,aAAA,GAAA4B,CAAA,WACE;cAAA;cAAA,CAAA5B,aAAA,GAAA4B,CAAA,WACA,4DACN;wBACH;;;;;;;AASf;AAAA;AAAA5B,aAAA,GAAAE,CAAA;AAeO,MAAMQ,gBAAA,GAAmBA,CAC9B6G,UAAA,EACAC,OAAA;EAAA;EAAAxH,aAAA,GAAAI,CAAA;EAEA,MAAM;IACJqH,WAAW;IACXC,YAAY;IACZC,SAAS;IACTC,WAAW;IACXC,OAAO;IACPC,SAAA;IAAA;IAAA,CAAA9H,aAAA,GAAA4B,CAAA,WAAY,EAAE;EAAA,CACf;EAAA;EAAA,CAAA5B,aAAA,GAAAE,CAAA,SAAGsH,OAAA;EAAA;EAAAxH,aAAA,GAAAE,CAAA;EAEJ,IAAAW,MAAA,CAAAU,SAAS,EAAC;IAAA;IAAAvB,aAAA,GAAAI,CAAA;IACR,MAAM2H,OAAA;IAAA;IAAA,CAAA/H,aAAA,GAAAE,CAAA,SAAUqH,UAAA,CAAWS,OAAO;IAAA;IAAAhI,aAAA,GAAAE,CAAA;IAClC,IAAI,CAAC6H,OAAA,EAAS;MAAA;MAAA/H,aAAA,GAAA4B,CAAA;MAAA5B,aAAA,GAAAE,CAAA;MAAA;IAAA;IAAA;IAAA;MAAAF,aAAA,GAAA4B,CAAA;IAAA;IAEd,IAAIqG,MAAA;IAAA;IAAA,CAAAjI,aAAA,GAAAE,CAAA,SAAS;IACb,IAAIgI,MAAA;IAAA;IAAA,CAAAlI,aAAA,GAAAE,CAAA,SAAS;IACb,IAAIiI,aAAA;IAAA;IAAA,CAAAnI,aAAA,GAAAE,CAAA,SAAgB;IAAA;IAAAF,aAAA,GAAAE,CAAA;IAEpB,MAAMkI,gBAAA,GAAoBxF,CAAA;MAAA;MAAA5C,aAAA,GAAAI,CAAA;MAAAJ,aAAA,GAAAE,CAAA;MACxB,IAAI0C,CAAA,CAAEyF,OAAO,CAACC,MAAM,KAAK,GAAG;QAAA;QAAAtI,aAAA,GAAA4B,CAAA;QAAA5B,aAAA,GAAAE,CAAA;QAC1B+H,MAAA,GAASrF,CAAA,CAAEyF,OAAO,CAAC,EAAE,CAACE,OAAO;QAAA;QAAAvI,aAAA,GAAAE,CAAA;QAC7BgI,MAAA,GAAStF,CAAA,CAAEyF,OAAO,CAAC,EAAE,CAACG,OAAO;MAC/B,OAAO;QAAA;QAAAxI,aAAA,GAAA4B,CAAA;QAAA5B,aAAA,GAAAE,CAAA;QAAA,IAAI0C,CAAA,CAAEyF,OAAO,CAACC,MAAM,KAAK,GAAG;UAAA;UAAAtI,aAAA,GAAA4B,CAAA;UACjC,MAAM6G,EAAA;UAAA;UAAA,CAAAzI,aAAA,GAAAE,CAAA,SAAK0C,CAAA,CAAEyF,OAAO,CAAC,EAAE,CAACE,OAAO,GAAG3F,CAAA,CAAEyF,OAAO,CAAC,EAAE,CAACE,OAAO;UACtD,MAAMG,EAAA;UAAA;UAAA,CAAA1I,aAAA,GAAAE,CAAA,SAAK0C,CAAA,CAAEyF,OAAO,CAAC,EAAE,CAACG,OAAO,GAAG5F,CAAA,CAAEyF,OAAO,CAAC,EAAE,CAACG,OAAO;UAAA;UAAAxI,aAAA,GAAAE,CAAA;UACtDiI,aAAA,GAAgBQ,IAAA,CAAKC,IAAI,CAACH,EAAA,GAAKA,EAAA,GAAKC,EAAA,GAAKA,EAAA;QAC3C;QAAA;QAAA;UAAA1I,aAAA,GAAA4B,CAAA;QAAA;MAAA;IACF;IAAA;IAAA5B,aAAA,GAAAE,CAAA;IAEA,MAAM2I,eAAA,GAAmBjG,CAAA;MAAA;MAAA5C,aAAA,GAAAI,CAAA;MAAAJ,aAAA,GAAAE,CAAA;MACvB;MAAI;MAAA,CAAAF,aAAA,GAAA4B,CAAA,WAAAgB,CAAA,CAAEyF,OAAO,CAACC,MAAM,KAAK;MAAA;MAAA,CAAAtI,aAAA,GAAA4B,CAAA,WAAKiG,OAAA,GAAS;QAAA;QAAA7H,aAAA,GAAA4B,CAAA;QACrC,MAAM6G,EAAA;QAAA;QAAA,CAAAzI,aAAA,GAAAE,CAAA,SAAK0C,CAAA,CAAEyF,OAAO,CAAC,EAAE,CAACE,OAAO,GAAG3F,CAAA,CAAEyF,OAAO,CAAC,EAAE,CAACE,OAAO;QACtD,MAAMG,EAAA;QAAA;QAAA,CAAA1I,aAAA,GAAAE,CAAA,SAAK0C,CAAA,CAAEyF,OAAO,CAAC,EAAE,CAACG,OAAO,GAAG5F,CAAA,CAAEyF,OAAO,CAAC,EAAE,CAACG,OAAO;QACtD,MAAMM,QAAA;QAAA;QAAA,CAAA9I,aAAA,GAAAE,CAAA,SAAWyI,IAAA,CAAKC,IAAI,CAACH,EAAA,GAAKA,EAAA,GAAKC,EAAA,GAAKA,EAAA;QAC1C,MAAMK,KAAA;QAAA;QAAA,CAAA/I,aAAA,GAAAE,CAAA,SAAQ4I,QAAA,GAAWX,aAAA;QAAA;QAAAnI,aAAA,GAAAE,CAAA;QACzB2H,OAAA,CAAQkB,KAAA;MACV;MAAA;MAAA;QAAA/I,aAAA,GAAA4B,CAAA;MAAA;IACF;IAAA;IAAA5B,aAAA,GAAAE,CAAA;IAEA,MAAM8I,cAAA,GAAkBpG,CAAA;MAAA;MAAA5C,aAAA,GAAAI,CAAA;MAAAJ,aAAA,GAAAE,CAAA;MACtB,IAAI0C,CAAA,CAAEqG,cAAc,CAACX,MAAM,KAAK,GAAG;QAAA;QAAAtI,aAAA,GAAA4B,CAAA;QACjC,MAAMsH,IAAA;QAAA;QAAA,CAAAlJ,aAAA,GAAAE,CAAA,SAAO0C,CAAA,CAAEqG,cAAc,CAAC,EAAE,CAACV,OAAO;QACxC,MAAMY,IAAA;QAAA;QAAA,CAAAnJ,aAAA,GAAAE,CAAA,SAAO0C,CAAA,CAAEqG,cAAc,CAAC,EAAE,CAACT,OAAO;QAExC,MAAMY,MAAA;QAAA;QAAA,CAAApJ,aAAA,GAAAE,CAAA,SAASgJ,IAAA,GAAOjB,MAAA;QACtB,MAAMoB,MAAA;QAAA;QAAA,CAAArJ,aAAA,GAAAE,CAAA,SAASiJ,IAAA,GAAOjB,MAAA;QAEtB,MAAMoB,SAAA;QAAA;QAAA,CAAAtJ,aAAA,GAAAE,CAAA,SAAYyI,IAAA,CAAKY,GAAG,CAACH,MAAA;QAC3B,MAAMI,SAAA;QAAA;QAAA,CAAAxJ,aAAA,GAAAE,CAAA,SAAYyI,IAAA,CAAKY,GAAG,CAACF,MAAA;QAAA;QAAArJ,aAAA,GAAAE,CAAA;QAE3B,IAAIyI,IAAA,CAAKc,GAAG,CAACH,SAAA,EAAWE,SAAA,IAAa1B,SAAA,EAAW;UAAA;UAAA9H,aAAA,GAAA4B,CAAA;UAAA5B,aAAA,GAAAE,CAAA;UAC9C,IAAIoJ,SAAA,GAAYE,SAAA,EAAW;YAAA;YAAAxJ,aAAA,GAAA4B,CAAA;YAAA5B,aAAA,GAAAE,CAAA;YACzB;YACA,IAAIkJ,MAAA,GAAS,GAAG;cAAA;cAAApJ,aAAA,GAAA4B,CAAA;cAAA5B,aAAA,GAAAE,CAAA;cACdwH,YAAA;YACF,OAAO;cAAA;cAAA1H,aAAA,GAAA4B,CAAA;cAAA5B,aAAA,GAAAE,CAAA;cACLuH,WAAA;YACF;UACF,OAAO;YAAA;YAAAzH,aAAA,GAAA4B,CAAA;YAAA5B,aAAA,GAAAE,CAAA;YACL;YACA,IAAImJ,MAAA,GAAS,GAAG;cAAA;cAAArJ,aAAA,GAAA4B,CAAA;cAAA5B,aAAA,GAAAE,CAAA;cACd0H,WAAA;YACF,OAAO;cAAA;cAAA5H,aAAA,GAAA4B,CAAA;cAAA5B,aAAA,GAAAE,CAAA;cACLyH,SAAA;YACF;UACF;QACF;QAAA;QAAA;UAAA3H,aAAA,GAAA4B,CAAA;QAAA;MACF;MAAA;MAAA;QAAA5B,aAAA,GAAA4B,CAAA;MAAA;IACF;IAAA;IAAA5B,aAAA,GAAAE,CAAA;IAEA6H,OAAA,CAAQlG,gBAAgB,CAAC,cAAcuG,gBAAA,EAAkB;MAAEsB,OAAA,EAAS;IAAK;IAAA;IAAA1J,aAAA,GAAAE,CAAA;IACzE6H,OAAA,CAAQlG,gBAAgB,CAAC,aAAagH,eAAA,EAAiB;MAAEa,OAAA,EAAS;IAAK;IAAA;IAAA1J,aAAA,GAAAE,CAAA;IACvE6H,OAAA,CAAQlG,gBAAgB,CAAC,YAAYmH,cAAA,EAAgB;MAAEU,OAAA,EAAS;IAAK;IAAA;IAAA1J,aAAA,GAAAE,CAAA;IAErE,OAAO;MAAA;MAAAF,aAAA,GAAAI,CAAA;MAAAJ,aAAA,GAAAE,CAAA;MACL6H,OAAA,CAAQjG,mBAAmB,CAAC,cAAcsG,gBAAA;MAAA;MAAApI,aAAA,GAAAE,CAAA;MAC1C6H,OAAA,CAAQjG,mBAAmB,CAAC,aAAa+G,eAAA;MAAA;MAAA7I,aAAA,GAAAE,CAAA;MACzC6H,OAAA,CAAQjG,mBAAmB,CAAC,YAAYkH,cAAA;IAC1C;EACF,GAAG,CACDzB,UAAA,EACAE,WAAA,EACAC,YAAA,EACAC,SAAA,EACAC,WAAA,EACAC,OAAA,EACAC,SAAA,CACD;AACH;MAEAtH,QAAA;AAAA;AAAA,CAAAR,aAAA,GAAAE,CAAA,SAAe;EACbO,kBAAA;EACAN,YAAA;EACAE,gBAAA;EACAC,mBAAA;EACAI;AACF","ignoreList":[]}
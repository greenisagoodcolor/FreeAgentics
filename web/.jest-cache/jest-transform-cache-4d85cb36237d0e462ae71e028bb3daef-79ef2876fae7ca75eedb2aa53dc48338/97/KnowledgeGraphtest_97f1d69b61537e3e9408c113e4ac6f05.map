{"version":3,"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/__tests__/components/KnowledgeGraph.test.tsx"],"sourcesContent":["import React from \"react\";\nimport {\n  render,\n  screen,\n  fireEvent,\n  waitFor,\n  within,\n} from \"@testing-library/react\";\nimport KnowledgeGraph from \"@/components/KnowledgeGraph\";\nimport * as d3 from \"d3\";\n\n// Mock D3\njest.mock(\"d3\", () => ({\n  select: jest.fn().mockReturnThis(),\n  selectAll: jest.fn().mockReturnThis(),\n  append: jest.fn().mockReturnThis(),\n  attr: jest.fn().mockReturnThis(),\n  style: jest.fn().mockReturnThis(),\n  data: jest.fn().mockReturnThis(),\n  enter: jest.fn().mockReturnThis(),\n  exit: jest.fn().mockReturnThis(),\n  remove: jest.fn().mockReturnThis(),\n  on: jest.fn().mockReturnThis(),\n  transition: jest.fn().mockReturnThis(),\n  duration: jest.fn().mockReturnThis(),\n  ease: jest.fn().mockReturnThis(),\n  call: jest.fn().mockReturnThis(),\n  drag: jest.fn().mockReturnThis(),\n  forceSimulation: jest.fn(() => ({\n    nodes: jest.fn().mockReturnThis(),\n    links: jest.fn().mockReturnThis(),\n    force: jest.fn().mockReturnThis(),\n    alpha: jest.fn().mockReturnThis(),\n    restart: jest.fn().mockReturnThis(),\n    stop: jest.fn().mockReturnThis(),\n    on: jest.fn().mockReturnThis(),\n  })),\n  forceLink: jest.fn(() => ({\n    id: jest.fn().mockReturnThis(),\n    distance: jest.fn().mockReturnThis(),\n  })),\n  forceManyBody: jest.fn(() => ({\n    strength: jest.fn().mockReturnThis(),\n  })),\n  forceCenter: jest.fn(() => ({})),\n  forceCollide: jest.fn(() => ({\n    radius: jest.fn().mockReturnThis(),\n  })),\n  zoom: jest.fn(() => ({\n    scaleExtent: jest.fn().mockReturnThis(),\n    on: jest.fn().mockReturnThis(),\n  })),\n  zoomIdentity: {},\n  event: {\n    transform: { k: 1, x: 0, y: 0 },\n  },\n}));\n\ndescribe(\"KnowledgeGraph Component\", () => {\n  const mockKnowledge = [\n    {\n      id: \"1\",\n      title: \"Node 1\",\n      content: \"Content 1\",\n      tags: [\"tag1\", \"tag2\"],\n      timestamp: new Date(),\n    },\n    {\n      id: \"2\",\n      title: \"Node 2\",\n      content: \"Content 2\",\n      tags: [\"tag2\", \"tag3\"],\n      timestamp: new Date(),\n    },\n    {\n      id: \"3\",\n      title: \"Node 3\",\n      content: \"Content 3\",\n      tags: [\"tag1\"],\n      timestamp: new Date(),\n    },\n  ];\n\n  const mockProps = {\n    knowledge: mockKnowledge,\n    onSelectEntry: jest.fn(),\n    selectedEntry: null,\n  };\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe(\"Rendering\", () => {\n    it(\"renders without crashing\", () => {\n      render(\n        <KnowledgeGraph\n          knowledge={[]}\n          onSelectEntry={() => {}}\n          selectedEntry={null}\n        />,\n      );\n      expect(screen.getByText(/0 entries/)).toBeInTheDocument();\n    });\n\n    it(\"renders with knowledge data\", () => {\n      render(<KnowledgeGraph {...mockProps} />);\n      expect(d3.select).toHaveBeenCalled();\n      expect(d3.forceSimulation).toHaveBeenCalled();\n    });\n\n    it(\"renders controls when showing debug\", () => {\n      render(<KnowledgeGraph {...mockProps} />);\n      const debugButton = screen.getByText(\"Debug\");\n      fireEvent.click(debugButton);\n      expect(screen.getByText(/Canvas:/)).toBeInTheDocument();\n    });\n\n    it(\"displays knowledge entry count\", () => {\n      render(<KnowledgeGraph {...mockProps} />);\n      expect(\n        screen.getByText(`${mockKnowledge.length} entries`),\n      ).toBeInTheDocument();\n    });\n\n    it(\"displays tag count\", () => {\n      render(<KnowledgeGraph {...mockProps} />);\n      const uniqueTags = new Set(mockKnowledge.flatMap((k) => k.tags));\n      expect(screen.getByText(`${uniqueTags.size} tags`)).toBeInTheDocument();\n    });\n  });\n\n  describe(\"Interactions\", () => {\n    it(\"handles zoom controls\", () => {\n      render(<KnowledgeGraph {...mockProps} />);\n\n      const zoomInButton = screen.getByRole(\"button\", { name: /zoom.*in/i });\n      const zoomOutButton = screen.getByRole(\"button\", { name: /zoom.*out/i });\n\n      fireEvent.click(zoomInButton);\n      fireEvent.click(zoomOutButton);\n\n      expect(d3.select).toHaveBeenCalled();\n    });\n\n    it(\"handles reset button\", () => {\n      render(<KnowledgeGraph {...mockProps} />);\n\n      const resetButton = screen.getByText(\"Reset\");\n      fireEvent.click(resetButton);\n\n      expect(d3.select).toHaveBeenCalled();\n    });\n\n    it(\"handles canvas mouse interactions\", () => {\n      render(<KnowledgeGraph {...mockProps} />);\n\n      const canvas = screen.getByRole(\"img\", { hidden: true });\n\n      fireEvent.mouseDown(canvas);\n      fireEvent.mouseMove(canvas);\n      fireEvent.mouseUp(canvas);\n\n      expect(d3.select).toHaveBeenCalled();\n    });\n\n    it(\"calls onSelectEntry when knowledge entry is clicked\", () => {\n      const onSelectEntry = jest.fn();\n      render(\n        <KnowledgeGraph\n          knowledge={mockKnowledge}\n          onSelectEntry={onSelectEntry}\n          selectedEntry={null}\n        />,\n      );\n\n      const canvas = screen.getByRole(\"img\", { hidden: true });\n      fireEvent.mouseDown(canvas);\n\n      // Simulate clicking on a knowledge entry node\n      // Note: In a real test, you'd need to mock the node detection logic\n    });\n  });\n\n  describe(\"Visual States\", () => {\n    it(\"highlights selected entry\", () => {\n      render(\n        <KnowledgeGraph {...mockProps} selectedEntry={mockKnowledge[0]} />,\n      );\n      expect(d3.select).toHaveBeenCalled();\n    });\n\n    it(\"shows hovering effects\", () => {\n      render(<KnowledgeGraph {...mockProps} />);\n\n      const canvas = screen.getByRole(\"img\", { hidden: true });\n      fireEvent.mouseMove(canvas);\n\n      expect(d3.select).toHaveBeenCalled();\n    });\n\n    it(\"displays node labels at high zoom\", () => {\n      render(<KnowledgeGraph {...mockProps} />);\n\n      // Simulate zoom in\n      const zoomInButton = screen.getByRole(\"button\", { name: /zoom.*in/i });\n      fireEvent.click(zoomInButton);\n      fireEvent.click(zoomInButton);\n      fireEvent.click(zoomInButton);\n\n      expect(d3.select).toHaveBeenCalled();\n    });\n  });\n\n  describe(\"Tag Interactions\", () => {\n    it(\"shows tag selection panel\", () => {\n      render(<KnowledgeGraph {...mockProps} />);\n\n      const canvas = screen.getByRole(\"img\", { hidden: true });\n\n      // Simulate clicking on a tag node\n      fireEvent.mouseDown(canvas);\n    });\n\n    it(\"filters entries by tag\", () => {\n      const onSelectEntry = jest.fn();\n      render(\n        <KnowledgeGraph\n          knowledge={mockKnowledge}\n          onSelectEntry={onSelectEntry}\n          selectedEntry={null}\n        />,\n      );\n\n      // Simulate tag filtering\n      const canvas = screen.getByRole(\"img\", { hidden: true });\n      fireEvent.mouseDown(canvas);\n    });\n  });\n\n  describe(\"Performance\", () => {\n    it(\"handles large datasets efficiently\", () => {\n      const largeKnowledge = Array.from({ length: 100 }, (_, i) => ({\n        id: `entry${i}`,\n        title: `Entry ${i}`,\n        content: `Content ${i}`,\n        tags: [`tag${i % 10}`, `tag${(i + 1) % 10}`],\n        timestamp: new Date(),\n      }));\n\n      render(\n        <KnowledgeGraph\n          knowledge={largeKnowledge}\n          onSelectEntry={() => {}}\n          selectedEntry={null}\n        />,\n      );\n      expect(d3.forceSimulation).toHaveBeenCalled();\n    });\n\n    it(\"throttles render updates\", async (): Promise<void> => {\n      const { rerender } = render(<KnowledgeGraph {...mockProps} />);\n\n      // Rapid updates\n      for (let i = 0; i < 10; i++) {\n        rerender(<KnowledgeGraph {...mockProps} key={i} />);\n      }\n\n      await waitFor(() => {\n        expect(d3.select).toHaveBeenCalled();\n      });\n    });\n  });\n\n  describe(\"Error Handling\", () => {\n    it(\"handles invalid knowledge data gracefully\", () => {\n      const invalidKnowledge = [\n        {\n          id: null,\n          title: \"Invalid\",\n          content: \"\",\n          tags: [],\n          timestamp: new Date(),\n        },\n        {\n          id: \"valid\",\n          title: \"Valid\",\n          content: \"Valid content\",\n          tags: [\"tag\"],\n          timestamp: new Date(),\n        },\n      ];\n\n      render(\n        <KnowledgeGraph\n          knowledge={invalidKnowledge as any}\n          onSelectEntry={() => {}}\n          selectedEntry={null}\n        />,\n      );\n      expect(d3.select).toHaveBeenCalled();\n    });\n\n    it(\"handles empty knowledge array\", () => {\n      render(\n        <KnowledgeGraph\n          knowledge={[]}\n          onSelectEntry={() => {}}\n          selectedEntry={null}\n        />,\n      );\n      expect(screen.getByText(/0 entries/)).toBeInTheDocument();\n    });\n\n    it(\"displays error message on render failure\", () => {\n      // Mock D3 to throw error\n      (d3.select as jest.Mock).mockImplementationOnce(() => {\n        throw new Error(\"D3 error\");\n      });\n\n      // Error boundary would catch this in real app\n      expect(() => {\n        render(<KnowledgeGraph {...mockProps} />);\n      }).not.toThrow();\n    });\n  });\n\n  describe(\"Responsive Design\", () => {\n    it(\"adjusts to container size changes\", () => {\n      render(<KnowledgeGraph {...mockProps} />);\n\n      // Simulate window resize\n      fireEvent(window, new Event(\"resize\"));\n\n      expect(d3.select).toHaveBeenCalled();\n    });\n\n    it(\"maintains aspect ratio on resize\", () => {\n      const { container } = render(<KnowledgeGraph {...mockProps} />);\n\n      // Simulate container size change\n      Object.defineProperty(container.firstChild, \"clientWidth\", {\n        value: 800,\n        configurable: true,\n      });\n      Object.defineProperty(container.firstChild, \"clientHeight\", {\n        value: 600,\n        configurable: true,\n      });\n\n      fireEvent(window, new Event(\"resize\"));\n\n      expect(d3.select).toHaveBeenCalled();\n    });\n  });\n\n  describe(\"Debug Mode\", () => {\n    it(\"shows debug information when enabled\", () => {\n      render(<KnowledgeGraph {...mockProps} />);\n\n      const debugButton = screen.getByText(\"Debug\");\n      fireEvent.click(debugButton);\n\n      expect(screen.getByText(/Canvas:/)).toBeInTheDocument();\n      expect(screen.getByText(/Nodes:/)).toBeInTheDocument();\n      expect(screen.getByText(/Zoom:/)).toBeInTheDocument();\n    });\n\n    it(\"hides debug information when disabled\", () => {\n      render(<KnowledgeGraph {...mockProps} />);\n\n      const debugButton = screen.getByText(\"Debug\");\n      fireEvent.click(debugButton);\n      fireEvent.click(debugButton);\n\n      expect(screen.queryByText(/Canvas:/)).not.toBeInTheDocument();\n    });\n  });\n});\n"],"names":["jest","mock","select","fn","mockReturnThis","selectAll","append","attr","style","data","enter","exit","remove","on","transition","duration","ease","call","drag","forceSimulation","nodes","links","force","alpha","restart","stop","forceLink","id","distance","forceManyBody","strength","forceCenter","forceCollide","radius","zoom","scaleExtent","zoomIdentity","event","transform","k","x","y","describe","mockKnowledge","title","content","tags","timestamp","Date","mockProps","knowledge","onSelectEntry","selectedEntry","beforeEach","clearAllMocks","it","render","KnowledgeGraph","expect","screen","getByText","toBeInTheDocument","d3","toHaveBeenCalled","debugButton","fireEvent","click","length","uniqueTags","Set","flatMap","size","zoomInButton","getByRole","name","zoomOutButton","resetButton","canvas","hidden","mouseDown","mouseMove","mouseUp","largeKnowledge","Array","from","_","i","rerender","key","waitFor","invalidKnowledge","mockImplementationOnce","Error","not","toThrow","window","Event","container","Object","defineProperty","firstChild","value","configurable","queryByText"],"mappings":"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"}
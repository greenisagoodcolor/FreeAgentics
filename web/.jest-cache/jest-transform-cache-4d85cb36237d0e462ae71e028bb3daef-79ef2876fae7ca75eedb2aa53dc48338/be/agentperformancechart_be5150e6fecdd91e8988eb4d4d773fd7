674a2bf617b1dbaf1a43db75c55cf31a
"use client";
"use strict";

/* istanbul ignore next */
function cov_uo0nye7ux() {
  var path = "/Users/matthewmoroney/builds/FreeAgentics/web/components/agent-performance-chart.tsx";
  var hash = "ecf225eee8859ccc864dd0fe9bbb22f918a05a03";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewmoroney/builds/FreeAgentics/web/components/agent-performance-chart.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 37
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 14
        },
        end: {
          line: 13,
          column: 34
        }
      },
      "5": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 14,
          column: 38
        }
      },
      "6": {
        start: {
          line: 15,
          column: 15
        },
        end: {
          line: 15,
          column: 31
        }
      },
      "7": {
        start: {
          line: 17,
          column: 48
        },
        end: {
          line: 17,
          column: 81
        }
      },
      "8": {
        start: {
          line: 18,
          column: 46
        },
        end: {
          line: 18,
          column: 73
        }
      },
      "9": {
        start: {
          line: 20,
          column: 26
        },
        end: {
          line: 71,
          column: 5
        }
      },
      "10": {
        start: {
          line: 21,
          column: 31
        },
        end: {
          line: 21,
          column: 108
        }
      },
      "11": {
        start: {
          line: 21,
          column: 85
        },
        end: {
          line: 21,
          column: 107
        }
      },
      "12": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "13": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 32,
          column: 19
        }
      },
      "14": {
        start: {
          line: 25,
          column: 36
        },
        end: {
          line: 25,
          column: 58
        }
      },
      "15": {
        start: {
          line: 26,
          column: 20
        },
        end: {
          line: 31,
          column: 22
        }
      },
      "16": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 46,
          column: 19
        }
      },
      "17": {
        start: {
          line: 35,
          column: 36
        },
        end: {
          line: 35,
          column: 58
        }
      },
      "18": {
        start: {
          line: 36,
          column: 34
        },
        end: {
          line: 36,
          column: 54
        }
      },
      "19": {
        start: {
          line: 38,
          column: 38
        },
        end: {
          line: 38,
          column: 68
        }
      },
      "20": {
        start: {
          line: 39,
          column: 35
        },
        end: {
          line: 39,
          column: 59
        }
      },
      "21": {
        start: {
          line: 40,
          column: 20
        },
        end: {
          line: 45,
          column: 22
        }
      },
      "22": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 57,
          column: 19
        }
      },
      "23": {
        start: {
          line: 49,
          column: 36
        },
        end: {
          line: 49,
          column: 58
        }
      },
      "24": {
        start: {
          line: 51,
          column: 20
        },
        end: {
          line: 56,
          column: 22
        }
      },
      "25": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 69,
          column: 19
        }
      },
      "26": {
        start: {
          line: 60,
          column: 36
        },
        end: {
          line: 60,
          column: 58
        }
      },
      "27": {
        start: {
          line: 61,
          column: 45
        },
        end: {
          line: 61,
          column: 89
        }
      },
      "28": {
        start: {
          line: 62,
          column: 45
        },
        end: {
          line: 62,
          column: 130
        }
      },
      "29": {
        start: {
          line: 63,
          column: 20
        },
        end: {
          line: 68,
          column: 22
        }
      },
      "30": {
        start: {
          line: 72,
          column: 17
        },
        end: {
          line: 72,
          column: 32
        }
      },
      "31": {
        start: {
          line: 74,
          column: 23
        },
        end: {
          line: 85,
          column: 5
        }
      },
      "32": {
        start: {
          line: 75,
          column: 27
        },
        end: {
          line: 75,
          column: 49
        }
      },
      "33": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 84,
          column: 11
        }
      },
      "34": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 426,
          column: 7
        }
      },
      "35": {
        start: {
          line: 101,
          column: 60
        },
        end: {
          line: 101,
          column: 84
        }
      },
      "36": {
        start: {
          line: 147,
          column: 82
        },
        end: {
          line: 150,
          column: 64
        }
      },
      "37": {
        start: {
          line: 167,
          column: 76
        },
        end: {
          line: 237,
          column: 41
        }
      },
      "38": {
        start: {
          line: 241,
          column: 76
        },
        end: {
          line: 290,
          column: 41
        }
      },
      "39": {
        start: {
          line: 294,
          column: 76
        },
        end: {
          line: 346,
          column: 41
        }
      },
      "40": {
        start: {
          line: 350,
          column: 76
        },
        end: {
          line: 420,
          column: 41
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "AgentPerformanceChart",
        decl: {
          start: {
            line: 16,
            column: 9
          },
          end: {
            line: 16,
            column: 30
          }
        },
        loc: {
          start: {
            line: 16,
            column: 57
          },
          end: {
            line: 427,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 26
          },
          end: {
            line: 20,
            column: 27
          }
        },
        loc: {
          start: {
            line: 20,
            column: 30
          },
          end: {
            line: 71,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 80
          },
          end: {
            line: 21,
            column: 81
          }
        },
        loc: {
          start: {
            line: 21,
            column: 85
          },
          end: {
            line: 21,
            column: 107
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 24,
            column: 42
          },
          end: {
            line: 24,
            column: 43
          }
        },
        loc: {
          start: {
            line: 24,
            column: 51
          },
          end: {
            line: 32,
            column: 17
          }
        },
        line: 24
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 34,
            column: 42
          },
          end: {
            line: 34,
            column: 43
          }
        },
        loc: {
          start: {
            line: 34,
            column: 51
          },
          end: {
            line: 46,
            column: 17
          }
        },
        line: 34
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 48,
            column: 42
          },
          end: {
            line: 48,
            column: 43
          }
        },
        loc: {
          start: {
            line: 48,
            column: 51
          },
          end: {
            line: 57,
            column: 17
          }
        },
        line: 48
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 59,
            column: 42
          },
          end: {
            line: 59,
            column: 43
          }
        },
        loc: {
          start: {
            line: 59,
            column: 51
          },
          end: {
            line: 69,
            column: 17
          }
        },
        line: 59
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 74,
            column: 23
          },
          end: {
            line: 74,
            column: 24
          }
        },
        loc: {
          start: {
            line: 74,
            column: 49
          },
          end: {
            line: 85,
            column: 5
          }
        },
        line: 74
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 101,
            column: 51
          },
          end: {
            line: 101,
            column: 52
          }
        },
        loc: {
          start: {
            line: 101,
            column: 60
          },
          end: {
            line: 101,
            column: 84
          }
        },
        line: 101
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 147,
            column: 59
          },
          end: {
            line: 147,
            column: 60
          }
        },
        loc: {
          start: {
            line: 147,
            column: 82
          },
          end: {
            line: 150,
            column: 64
          }
        },
        line: 147
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 167,
            column: 47
          },
          end: {
            line: 167,
            column: 48
          }
        },
        loc: {
          start: {
            line: 167,
            column: 76
          },
          end: {
            line: 237,
            column: 41
          }
        },
        line: 167
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 241,
            column: 47
          },
          end: {
            line: 241,
            column: 48
          }
        },
        loc: {
          start: {
            line: 241,
            column: 76
          },
          end: {
            line: 290,
            column: 41
          }
        },
        line: 241
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 294,
            column: 47
          },
          end: {
            line: 294,
            column: 48
          }
        },
        loc: {
          start: {
            line: 294,
            column: 76
          },
          end: {
            line: 346,
            column: 41
          }
        },
        line: 294
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 350,
            column: 47
          },
          end: {
            line: 350,
            column: 48
          }
        },
        loc: {
          start: {
            line: 350,
            column: 76
          },
          end: {
            line: 420,
            column: 41
          }
        },
        line: 350
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 31
          },
          end: {
            line: 21,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 21,
            column: 57
          },
          end: {
            line: 21,
            column: 63
          }
        }, {
          start: {
            line: 21,
            column: 66
          },
          end: {
            line: 21,
            column: 108
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 23,
            column: 12
          },
          end: {
            line: 32,
            column: 19
          }
        }, {
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 46,
            column: 19
          }
        }, {
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 57,
            column: 19
          }
        }, {
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 69,
            column: 19
          }
        }],
        line: 22
      },
      "2": {
        loc: {
          start: {
            line: 28,
            column: 32
          },
          end: {
            line: 28,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 32
          },
          end: {
            line: 28,
            column: 57
          }
        }, {
          start: {
            line: 28,
            column: 61
          },
          end: {
            line: 28,
            column: 62
          }
        }],
        line: 28
      },
      "3": {
        loc: {
          start: {
            line: 29,
            column: 32
          },
          end: {
            line: 29,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 32
          },
          end: {
            line: 29,
            column: 57
          }
        }, {
          start: {
            line: 29,
            column: 61
          },
          end: {
            line: 29,
            column: 62
          }
        }],
        line: 29
      },
      "4": {
        loc: {
          start: {
            line: 30,
            column: 32
          },
          end: {
            line: 30,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 32
          },
          end: {
            line: 30,
            column: 62
          }
        }, {
          start: {
            line: 30,
            column: 66
          },
          end: {
            line: 30,
            column: 67
          }
        }],
        line: 30
      },
      "5": {
        loc: {
          start: {
            line: 36,
            column: 34
          },
          end: {
            line: 36,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 34
          },
          end: {
            line: 36,
            column: 48
          }
        }, {
          start: {
            line: 36,
            column: 52
          },
          end: {
            line: 36,
            column: 54
          }
        }],
        line: 36
      },
      "6": {
        loc: {
          start: {
            line: 61,
            column: 45
          },
          end: {
            line: 61,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 61,
            column: 55
          },
          end: {
            line: 61,
            column: 85
          }
        }, {
          start: {
            line: 61,
            column: 88
          },
          end: {
            line: 61,
            column: 89
          }
        }],
        line: 61
      },
      "7": {
        loc: {
          start: {
            line: 62,
            column: 45
          },
          end: {
            line: 62,
            column: 130
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 62,
            column: 55
          },
          end: {
            line: 62,
            column: 126
          }
        }, {
          start: {
            line: 62,
            column: 129
          },
          end: {
            line: 62,
            column: 130
          }
        }],
        line: 62
      },
      "8": {
        loc: {
          start: {
            line: 165,
            column: 24
          },
          end: {
            line: 238,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 24
          },
          end: {
            line: 165,
            column: 54
          }
        }, {
          start: {
            line: 165,
            column: 72
          },
          end: {
            line: 238,
            column: 26
          }
        }],
        line: 165
      },
      "9": {
        loc: {
          start: {
            line: 239,
            column: 24
          },
          end: {
            line: 291,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 239,
            column: 24
          },
          end: {
            line: 239,
            column: 50
          }
        }, {
          start: {
            line: 239,
            column: 68
          },
          end: {
            line: 291,
            column: 26
          }
        }],
        line: 239
      },
      "10": {
        loc: {
          start: {
            line: 292,
            column: 24
          },
          end: {
            line: 347,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 292,
            column: 24
          },
          end: {
            line: 292,
            column: 53
          }
        }, {
          start: {
            line: 292,
            column: 71
          },
          end: {
            line: 347,
            column: 26
          }
        }],
        line: 292
      },
      "11": {
        loc: {
          start: {
            line: 348,
            column: 24
          },
          end: {
            line: 421,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 348,
            column: 24
          },
          end: {
            line: 348,
            column: 55
          }
        }, {
          start: {
            line: 348,
            column: 73
          },
          end: {
            line: 421,
            column: 26
          }
        }],
        line: 348
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matthewmoroney/builds/FreeAgentics/web/components/agent-performance-chart.tsx"],
      sourcesContent: ["\"use client\";\n\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport type { Agent } from \"@/lib/types\";\nimport type { AgentDetailed } from \"@/lib/types/agent-api\";\nimport { useState } from \"react\";\n\ninterface AgentPerformanceChartProps {\n  agents: Agent[];\n  agentDetails: Record<string, AgentDetailed>;\n}\n\ntype MetricType = \"resources\" | \"goals\" | \"activity\" | \"efficiency\";\n\nexport default function AgentPerformanceChart({\n  agents,\n  agentDetails,\n}: AgentPerformanceChartProps) {\n  const [selectedMetric, setSelectedMetric] = useState<MetricType>(\"resources\");\n  const [selectedAgent, setSelectedAgent] = useState<string>(\"all\");\n\n  // Calculate metrics for visualization\n  const getMetricData = () => {\n    const filteredAgents =\n      selectedAgent === \"all\"\n        ? agents\n        : agents.filter((a) => a.id === selectedAgent);\n\n    switch (selectedMetric) {\n      case \"resources\":\n        return filteredAgents.map((agent) => {\n          const details = agentDetails[agent.id];\n          return {\n            name: agent.name,\n            energy: details?.resources.energy || 0,\n            health: details?.resources.health || 0,\n            memory: details?.resources.memory_used || 0,\n          };\n        });\n\n      case \"goals\":\n        return filteredAgents.map((agent) => {\n          const details = agentDetails[agent.id];\n          const goals = details?.goals || [];\n          // Mock data for goal status - in real app this would be tracked\n          const completed = Math.floor(goals.length * 0.6);\n          const active = goals.length - completed;\n          return {\n            name: agent.name,\n            completed,\n            active,\n            total: goals.length,\n          };\n        });\n\n      case \"activity\":\n        return filteredAgents.map((agent) => {\n          const details = agentDetails[agent.id];\n          // Mock activity scores\n          return {\n            name: agent.name,\n            interactions: Math.floor(Math.random() * 20),\n            movements: Math.floor(Math.random() * 50),\n            learningEvents: Math.floor(Math.random() * 10),\n          };\n        });\n\n      case \"efficiency\":\n        return filteredAgents.map((agent) => {\n          const details = agentDetails[agent.id];\n          const energyEfficiency = details ? 100 - details.resources.energy : 0;\n          const memoryEfficiency = details\n            ? (details.resources.memory_used /\n                details.resources.memory_capacity) *\n              100\n            : 0;\n          return {\n            name: agent.name,\n            energyEfficiency,\n            memoryEfficiency,\n            overallScore: (energyEfficiency + memoryEfficiency) / 2,\n          };\n        });\n    }\n  };\n\n  const data = getMetricData();\n\n  // Simple bar chart visualization\n  const renderBars = (value: number, maxValue: number, color: string) => {\n    const percentage = (value / maxValue) * 100;\n    return (\n      <div className=\"w-full bg-gray-200 rounded-full h-2\">\n        <div\n          className={`h-2 rounded-full ${color}`}\n          style={{ width: `${percentage}%` }}\n        />\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      <CardHeader>\n        <div className=\"flex items-center justify-between\">\n          <CardTitle>Performance Metrics</CardTitle>\n          <div className=\"flex gap-2\">\n            <Select\n              value={selectedMetric}\n              onValueChange={(value) => setSelectedMetric(value as MetricType)}\n            >\n              <SelectTrigger className=\"w-[180px]\">\n                <SelectValue placeholder=\"Select metric\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"resources\">Resources</SelectItem>\n                <SelectItem value=\"goals\">Goals</SelectItem>\n                <SelectItem value=\"activity\">Activity</SelectItem>\n                <SelectItem value=\"efficiency\">Efficiency</SelectItem>\n              </SelectContent>\n            </Select>\n            <Select value={selectedAgent} onValueChange={setSelectedAgent}>\n              <SelectTrigger className=\"w-[180px]\">\n                <SelectValue placeholder=\"Select agent\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All Agents</SelectItem>\n                {agents.map((agent) => (\n                  <SelectItem key={agent.id} value={agent.id}>\n                    {agent.name}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n        </div>\n      </CardHeader>\n      <CardContent className=\"flex-1 overflow-auto\">\n        <div className=\"space-y-4\">\n          {selectedMetric === \"resources\" && (\n            <div className=\"space-y-4\">\n              {(data as any[]).map((item, index) => (\n                <Card key={index} className=\"p-4\">\n                  <h4 className=\"font-medium mb-3\">{item.name}</h4>\n                  <div className=\"space-y-2\">\n                    <div>\n                      <div className=\"flex justify-between text-sm mb-1\">\n                        <span>Energy</span>\n                        <span>{item.energy}%</span>\n                      </div>\n                      {renderBars(item.energy, 100, \"bg-yellow-500\")}\n                    </div>\n                    <div>\n                      <div className=\"flex justify-between text-sm mb-1\">\n                        <span>Health</span>\n                        <span>{item.health}%</span>\n                      </div>\n                      {renderBars(item.health, 100, \"bg-red-500\")}\n                    </div>\n                    <div>\n                      <div className=\"flex justify-between text-sm mb-1\">\n                        <span>Memory</span>\n                        <span>{item.memory}MB</span>\n                      </div>\n                      {renderBars(item.memory, 100, \"bg-purple-500\")}\n                    </div>\n                  </div>\n                </Card>\n              ))}\n            </div>\n          )}\n\n          {selectedMetric === \"goals\" && (\n            <div className=\"space-y-4\">\n              {(data as any[]).map((item, index) => (\n                <Card key={index} className=\"p-4\">\n                  <h4 className=\"font-medium mb-3\">{item.name}</h4>\n                  <div className=\"grid grid-cols-3 gap-4 text-center\">\n                    <div>\n                      <div className=\"text-2xl font-bold text-green-500\">\n                        {item.completed}\n                      </div>\n                      <div className=\"text-sm text-muted-foreground\">\n                        Completed\n                      </div>\n                    </div>\n                    <div>\n                      <div className=\"text-2xl font-bold text-blue-500\">\n                        {item.active}\n                      </div>\n                      <div className=\"text-sm text-muted-foreground\">\n                        Active\n                      </div>\n                    </div>\n                    <div>\n                      <div className=\"text-2xl font-bold\">{item.total}</div>\n                      <div className=\"text-sm text-muted-foreground\">Total</div>\n                    </div>\n                  </div>\n                </Card>\n              ))}\n            </div>\n          )}\n\n          {selectedMetric === \"activity\" && (\n            <div className=\"space-y-4\">\n              {(data as any[]).map((item, index) => (\n                <Card key={index} className=\"p-4\">\n                  <h4 className=\"font-medium mb-3\">{item.name}</h4>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm\">Interactions</span>\n                      <span className=\"font-medium\">{item.interactions}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm\">Movements</span>\n                      <span className=\"font-medium\">{item.movements}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm\">Learning Events</span>\n                      <span className=\"font-medium\">{item.learningEvents}</span>\n                    </div>\n                  </div>\n                </Card>\n              ))}\n            </div>\n          )}\n\n          {selectedMetric === \"efficiency\" && (\n            <div className=\"space-y-4\">\n              {(data as any[]).map((item, index) => (\n                <Card key={index} className=\"p-4\">\n                  <h4 className=\"font-medium mb-3\">{item.name}</h4>\n                  <div className=\"space-y-2\">\n                    <div>\n                      <div className=\"flex justify-between text-sm mb-1\">\n                        <span>Energy Efficiency</span>\n                        <span>{item.energyEfficiency.toFixed(1)}%</span>\n                      </div>\n                      {renderBars(item.energyEfficiency, 100, \"bg-green-500\")}\n                    </div>\n                    <div>\n                      <div className=\"flex justify-between text-sm mb-1\">\n                        <span>Memory Efficiency</span>\n                        <span>{item.memoryEfficiency.toFixed(1)}%</span>\n                      </div>\n                      {renderBars(item.memoryEfficiency, 100, \"bg-blue-500\")}\n                    </div>\n                    <div className=\"mt-3 pt-3 border-t\">\n                      <div className=\"flex justify-between\">\n                        <span className=\"font-medium\">Overall Score</span>\n                        <span className=\"font-bold text-lg\">\n                          {item.overallScore.toFixed(1)}%\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </Card>\n              ))}\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </div>\n  );\n}\n"],
      names: ["AgentPerformanceChart", "agents", "agentDetails", "selectedMetric", "setSelectedMetric", "useState", "selectedAgent", "setSelectedAgent", "getMetricData", "filteredAgents", "filter", "a", "id", "map", "agent", "details", "name", "energy", "resources", "health", "memory", "memory_used", "goals", "completed", "Math", "floor", "length", "active", "total", "interactions", "random", "movements", "learningEvents", "energyEfficiency", "memoryEfficiency", "memory_capacity", "overallScore", "data", "renderBars", "value", "maxValue", "color", "percentage", "div", "className", "style", "width", "CardHeader", "CardTitle", "Select", "onValueChange", "SelectTrigger", "SelectValue", "placeholder", "SelectContent", "SelectItem", "CardContent", "item", "index", "Card", "h4", "span", "toFixed"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ecf225eee8859ccc864dd0fe9bbb22f918a05a03"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_uo0nye7ux = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_uo0nye7ux();
cov_uo0nye7ux().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_uo0nye7ux().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_uo0nye7ux().f[0]++;
    cov_uo0nye7ux().s[2]++;
    return AgentPerformanceChart;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_uo0nye7ux().s[3]++, require("react/jsx-runtime"));
const _card =
/* istanbul ignore next */
(cov_uo0nye7ux().s[4]++, require("./ui/card"));
const _select =
/* istanbul ignore next */
(cov_uo0nye7ux().s[5]++, require("./ui/select"));
const _react =
/* istanbul ignore next */
(cov_uo0nye7ux().s[6]++, require("react"));
function AgentPerformanceChart({
  agents,
  agentDetails
}) {
  /* istanbul ignore next */
  cov_uo0nye7ux().f[1]++;
  const [selectedMetric, setSelectedMetric] =
  /* istanbul ignore next */
  (cov_uo0nye7ux().s[7]++, (0, _react.useState)("resources"));
  const [selectedAgent, setSelectedAgent] =
  /* istanbul ignore next */
  (cov_uo0nye7ux().s[8]++, (0, _react.useState)("all"));
  // Calculate metrics for visualization
  /* istanbul ignore next */
  cov_uo0nye7ux().s[9]++;
  const getMetricData = () => {
    /* istanbul ignore next */
    cov_uo0nye7ux().f[2]++;
    const filteredAgents =
    /* istanbul ignore next */
    (cov_uo0nye7ux().s[10]++, selectedAgent === "all" ?
    /* istanbul ignore next */
    (cov_uo0nye7ux().b[0][0]++, agents) :
    /* istanbul ignore next */
    (cov_uo0nye7ux().b[0][1]++, agents.filter(a => {
      /* istanbul ignore next */
      cov_uo0nye7ux().f[3]++;
      cov_uo0nye7ux().s[11]++;
      return a.id === selectedAgent;
    })));
    /* istanbul ignore next */
    cov_uo0nye7ux().s[12]++;
    switch (selectedMetric) {
      case "resources":
        /* istanbul ignore next */
        cov_uo0nye7ux().b[1][0]++;
        cov_uo0nye7ux().s[13]++;
        return filteredAgents.map(agent => {
          /* istanbul ignore next */
          cov_uo0nye7ux().f[4]++;
          const details =
          /* istanbul ignore next */
          (cov_uo0nye7ux().s[14]++, agentDetails[agent.id]);
          /* istanbul ignore next */
          cov_uo0nye7ux().s[15]++;
          return {
            name: agent.name,
            energy:
            /* istanbul ignore next */
            (cov_uo0nye7ux().b[2][0]++, details?.resources.energy) ||
            /* istanbul ignore next */
            (cov_uo0nye7ux().b[2][1]++, 0),
            health:
            /* istanbul ignore next */
            (cov_uo0nye7ux().b[3][0]++, details?.resources.health) ||
            /* istanbul ignore next */
            (cov_uo0nye7ux().b[3][1]++, 0),
            memory:
            /* istanbul ignore next */
            (cov_uo0nye7ux().b[4][0]++, details?.resources.memory_used) ||
            /* istanbul ignore next */
            (cov_uo0nye7ux().b[4][1]++, 0)
          };
        });
      case "goals":
        /* istanbul ignore next */
        cov_uo0nye7ux().b[1][1]++;
        cov_uo0nye7ux().s[16]++;
        return filteredAgents.map(agent => {
          /* istanbul ignore next */
          cov_uo0nye7ux().f[5]++;
          const details =
          /* istanbul ignore next */
          (cov_uo0nye7ux().s[17]++, agentDetails[agent.id]);
          const goals =
          /* istanbul ignore next */
          (cov_uo0nye7ux().s[18]++,
          /* istanbul ignore next */
          (cov_uo0nye7ux().b[5][0]++, details?.goals) ||
          /* istanbul ignore next */
          (cov_uo0nye7ux().b[5][1]++, []));
          // Mock data for goal status - in real app this would be tracked
          const completed =
          /* istanbul ignore next */
          (cov_uo0nye7ux().s[19]++, Math.floor(goals.length * 0.6));
          const active =
          /* istanbul ignore next */
          (cov_uo0nye7ux().s[20]++, goals.length - completed);
          /* istanbul ignore next */
          cov_uo0nye7ux().s[21]++;
          return {
            name: agent.name,
            completed,
            active,
            total: goals.length
          };
        });
      case "activity":
        /* istanbul ignore next */
        cov_uo0nye7ux().b[1][2]++;
        cov_uo0nye7ux().s[22]++;
        return filteredAgents.map(agent => {
          /* istanbul ignore next */
          cov_uo0nye7ux().f[6]++;
          const details =
          /* istanbul ignore next */
          (cov_uo0nye7ux().s[23]++, agentDetails[agent.id]);
          // Mock activity scores
          /* istanbul ignore next */
          cov_uo0nye7ux().s[24]++;
          return {
            name: agent.name,
            interactions: Math.floor(Math.random() * 20),
            movements: Math.floor(Math.random() * 50),
            learningEvents: Math.floor(Math.random() * 10)
          };
        });
      case "efficiency":
        /* istanbul ignore next */
        cov_uo0nye7ux().b[1][3]++;
        cov_uo0nye7ux().s[25]++;
        return filteredAgents.map(agent => {
          /* istanbul ignore next */
          cov_uo0nye7ux().f[7]++;
          const details =
          /* istanbul ignore next */
          (cov_uo0nye7ux().s[26]++, agentDetails[agent.id]);
          const energyEfficiency =
          /* istanbul ignore next */
          (cov_uo0nye7ux().s[27]++, details ?
          /* istanbul ignore next */
          (cov_uo0nye7ux().b[6][0]++, 100 - details.resources.energy) :
          /* istanbul ignore next */
          (cov_uo0nye7ux().b[6][1]++, 0));
          const memoryEfficiency =
          /* istanbul ignore next */
          (cov_uo0nye7ux().s[28]++, details ?
          /* istanbul ignore next */
          (cov_uo0nye7ux().b[7][0]++, details.resources.memory_used / details.resources.memory_capacity * 100) :
          /* istanbul ignore next */
          (cov_uo0nye7ux().b[7][1]++, 0));
          /* istanbul ignore next */
          cov_uo0nye7ux().s[29]++;
          return {
            name: agent.name,
            energyEfficiency,
            memoryEfficiency,
            overallScore: (energyEfficiency + memoryEfficiency) / 2
          };
        });
    }
  };
  const data =
  /* istanbul ignore next */
  (cov_uo0nye7ux().s[30]++, getMetricData());
  // Simple bar chart visualization
  /* istanbul ignore next */
  cov_uo0nye7ux().s[31]++;
  const renderBars = (value, maxValue, color) => {
    /* istanbul ignore next */
    cov_uo0nye7ux().f[8]++;
    const percentage =
    /* istanbul ignore next */
    (cov_uo0nye7ux().s[32]++, value / maxValue * 100);
    /* istanbul ignore next */
    cov_uo0nye7ux().s[33]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "w-full bg-gray-200 rounded-full h-2",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: `h-2 rounded-full ${color}`,
        style: {
          width: `${percentage}%`
        }
      })
    });
  };
  /* istanbul ignore next */
  cov_uo0nye7ux().s[34]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "h-full flex flex-col",
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center justify-between",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
          children: "Performance Metrics"
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex gap-2",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_select.Select, {
            value: selectedMetric,
            onValueChange: value => {
              /* istanbul ignore next */
              cov_uo0nye7ux().f[9]++;
              cov_uo0nye7ux().s[35]++;
              return setSelectedMetric(value);
            },
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectTrigger, {
              className: "w-[180px]",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectValue, {
                placeholder: "Select metric"
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_select.SelectContent, {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                value: "resources",
                children: "Resources"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                value: "goals",
                children: "Goals"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                value: "activity",
                children: "Activity"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                value: "efficiency",
                children: "Efficiency"
              })]
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_select.Select, {
            value: selectedAgent,
            onValueChange: setSelectedAgent,
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectTrigger, {
              className: "w-[180px]",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectValue, {
                placeholder: "Select agent"
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_select.SelectContent, {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                value: "all",
                children: "All Agents"
              }), agents.map(agent => {
                /* istanbul ignore next */
                cov_uo0nye7ux().f[10]++;
                cov_uo0nye7ux().s[36]++;
                return /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                  value: agent.id,
                  children: agent.name
                }, agent.id);
              })]
            })]
          })]
        })]
      })
    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
      className: "flex-1 overflow-auto",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "space-y-4",
        children: [
        /* istanbul ignore next */
        (cov_uo0nye7ux().b[8][0]++, selectedMetric === "resources") &&
        /* istanbul ignore next */
        (cov_uo0nye7ux().b[8][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "space-y-4",
          children: data.map((item, index) => {
            /* istanbul ignore next */
            cov_uo0nye7ux().f[11]++;
            cov_uo0nye7ux().s[37]++;
            return /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
              className: "p-4",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
                className: "font-medium mb-3",
                children: item.name
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "space-y-2",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex justify-between text-sm mb-1",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      children: "Energy"
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                      children: [item.energy, "%"]
                    })]
                  }), renderBars(item.energy, 100, "bg-yellow-500")]
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex justify-between text-sm mb-1",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      children: "Health"
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                      children: [item.health, "%"]
                    })]
                  }), renderBars(item.health, 100, "bg-red-500")]
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex justify-between text-sm mb-1",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      children: "Memory"
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                      children: [item.memory, "MB"]
                    })]
                  }), renderBars(item.memory, 100, "bg-purple-500")]
                })]
              })]
            }, index);
          })
        })),
        /* istanbul ignore next */
        (cov_uo0nye7ux().b[9][0]++, selectedMetric === "goals") &&
        /* istanbul ignore next */
        (cov_uo0nye7ux().b[9][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "space-y-4",
          children: data.map((item, index) => {
            /* istanbul ignore next */
            cov_uo0nye7ux().f[12]++;
            cov_uo0nye7ux().s[38]++;
            return /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
              className: "p-4",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
                className: "font-medium mb-3",
                children: item.name
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "grid grid-cols-3 gap-4 text-center",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    className: "text-2xl font-bold text-green-500",
                    children: item.completed
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    className: "text-sm text-muted-foreground",
                    children: "Completed"
                  })]
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    className: "text-2xl font-bold text-blue-500",
                    children: item.active
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    className: "text-sm text-muted-foreground",
                    children: "Active"
                  })]
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    className: "text-2xl font-bold",
                    children: item.total
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    className: "text-sm text-muted-foreground",
                    children: "Total"
                  })]
                })]
              })]
            }, index);
          })
        })),
        /* istanbul ignore next */
        (cov_uo0nye7ux().b[10][0]++, selectedMetric === "activity") &&
        /* istanbul ignore next */
        (cov_uo0nye7ux().b[10][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "space-y-4",
          children: data.map((item, index) => {
            /* istanbul ignore next */
            cov_uo0nye7ux().f[13]++;
            cov_uo0nye7ux().s[39]++;
            return /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
              className: "p-4",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
                className: "font-medium mb-3",
                children: item.name
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "space-y-2",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex justify-between",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                    className: "text-sm",
                    children: "Interactions"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                    className: "font-medium",
                    children: item.interactions
                  })]
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex justify-between",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                    className: "text-sm",
                    children: "Movements"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                    className: "font-medium",
                    children: item.movements
                  })]
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex justify-between",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                    className: "text-sm",
                    children: "Learning Events"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                    className: "font-medium",
                    children: item.learningEvents
                  })]
                })]
              })]
            }, index);
          })
        })),
        /* istanbul ignore next */
        (cov_uo0nye7ux().b[11][0]++, selectedMetric === "efficiency") &&
        /* istanbul ignore next */
        (cov_uo0nye7ux().b[11][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "space-y-4",
          children: data.map((item, index) => {
            /* istanbul ignore next */
            cov_uo0nye7ux().f[14]++;
            cov_uo0nye7ux().s[40]++;
            return /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
              className: "p-4",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
                className: "font-medium mb-3",
                children: item.name
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "space-y-2",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex justify-between text-sm mb-1",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      children: "Energy Efficiency"
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                      children: [item.energyEfficiency.toFixed(1), "%"]
                    })]
                  }), renderBars(item.energyEfficiency, 100, "bg-green-500")]
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex justify-between text-sm mb-1",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      children: "Memory Efficiency"
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                      children: [item.memoryEfficiency.toFixed(1), "%"]
                    })]
                  }), renderBars(item.memoryEfficiency, 100, "bg-blue-500")]
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: "mt-3 pt-3 border-t",
                  children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex justify-between",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      className: "font-medium",
                      children: "Overall Score"
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                      className: "font-bold text-lg",
                      children: [item.overallScore.toFixed(1), "%"]
                    })]
                  })
                })]
              })]
            }, index);
          })
        }))]
      })
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
{"version":3,"names":["StrategicPositioningDashboard","cov_25beyv2z8q","f","businessModels","setBusinessModels","s","_react","useState","lastUpdate","setLastUpdate","Date","useEffect","generateMockData","coalitionNames","mockBusinessModels","map","name","index","coalitionId","marketShare","Math","random","growthRate","profitabilityScore","riskScore","uncertainty","profitability","risk","interval","setInterval","clearInterval","formatPercent","value","toFixed","_jsxruntime","jsxs","className","jsx","_lucidereact","Target","_badge","Badge","variant","toLocaleTimeString","_card","Card","CardContent","length","b","reduce","acc","bm","PieChart","TrendingUp","DollarSign","AlertTriangle","_tabs","Tabs","defaultValue","TabsList","TabsTrigger","TabsContent","model","CardHeader","CardTitle","_progress","Progress","_alert","Alert","AlertDescription","style","left","min","width","abs","Download","_button","Button"],"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/components/strategic-positioning-dashboard.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport {\n  TrendingUp,\n  Target,\n  BarChart3,\n  PieChart,\n  DollarSign,\n  AlertTriangle,\n  Download,\n} from \"lucide-react\";\n\ninterface BusinessModel {\n  coalitionId: string;\n  name: string;\n  marketShare: number;\n  growthRate: number;\n  profitabilityScore: number;\n  riskScore: number;\n  uncertainty: {\n    marketShare: [number, number];\n    growthRate: [number, number];\n    profitability: [number, number];\n    risk: [number, number];\n  };\n}\n\nexport function StrategicPositioningDashboard() {\n  const [businessModels, setBusinessModels] = useState<BusinessModel[]>([]);\n  const [lastUpdate, setLastUpdate] = useState<Date>(new Date());\n\n  useEffect(() => {\n    const generateMockData = () => {\n      const coalitionNames = [\n        \"AgentTech\",\n        \"DataCorp\",\n        \"InnovateCo\",\n        \"ScaleSoft\",\n        \"EdgeAI\",\n      ];\n\n      const mockBusinessModels: BusinessModel[] = coalitionNames.map(\n        (name, index) => ({\n          coalitionId: `coalition-${index + 1}`,\n          name,\n          marketShare: 10 + Math.random() * 30,\n          growthRate: 20 + Math.random() * 80,\n          profitabilityScore: 0.6 + Math.random() * 0.3,\n          riskScore: 0.2 + Math.random() * 0.4,\n          uncertainty: {\n            marketShare: [8 + Math.random() * 5, 35 + Math.random() * 10],\n            growthRate: [15 + Math.random() * 10, 90 + Math.random() * 20],\n            profitability: [\n              0.5 + Math.random() * 0.1,\n              0.85 + Math.random() * 0.1,\n            ],\n            risk: [0.1 + Math.random() * 0.1, 0.5 + Math.random() * 0.2],\n          },\n        }),\n      );\n\n      setBusinessModels(mockBusinessModels);\n      setLastUpdate(new Date());\n    };\n\n    generateMockData();\n    const interval = setInterval(generateMockData, 30000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const formatPercent = (value: number) => `${(value * 100).toFixed(1)}%`;\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900 flex items-center gap-3\">\n            <Target className=\"w-8 h-8 text-blue-600\" />\n            Strategic Positioning Dashboard\n          </h1>\n          <p className=\"text-gray-600 mt-1\">\n            Coalition business models with uncertainty quantification\n          </p>\n        </div>\n\n        <Badge variant=\"outline\">\n          Last updated: {lastUpdate.toLocaleTimeString()}\n        </Badge>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">\n                  Avg Market Share\n                </p>\n                <p className=\"text-2xl font-bold text-gray-900\">\n                  {businessModels.length > 0\n                    ? (\n                        businessModels.reduce(\n                          (acc, bm) => acc + bm.marketShare,\n                          0,\n                        ) / businessModels.length\n                      ).toFixed(1)\n                    : 0}\n                  %\n                </p>\n              </div>\n              <PieChart className=\"w-8 h-8 text-blue-500\" />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">\n                  Avg Growth Rate\n                </p>\n                <p className=\"text-2xl font-bold text-green-600\">\n                  {businessModels.length > 0\n                    ? (\n                        businessModels.reduce(\n                          (acc, bm) => acc + bm.growthRate,\n                          0,\n                        ) / businessModels.length\n                      ).toFixed(0)\n                    : 0}\n                  %\n                </p>\n              </div>\n              <TrendingUp className=\"w-8 h-8 text-green-500\" />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">\n                  Avg Profitability\n                </p>\n                <p className=\"text-2xl font-bold text-purple-600\">\n                  {businessModels.length > 0\n                    ? formatPercent(\n                        businessModels.reduce(\n                          (acc, bm) => acc + bm.profitabilityScore,\n                          0,\n                        ) / businessModels.length,\n                      )\n                    : \"0%\"}\n                </p>\n              </div>\n              <DollarSign className=\"w-8 h-8 text-purple-500\" />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">\n                  Avg Risk Score\n                </p>\n                <p className=\"text-2xl font-bold text-orange-600\">\n                  {businessModels.length > 0\n                    ? formatPercent(\n                        businessModels.reduce(\n                          (acc, bm) => acc + bm.riskScore,\n                          0,\n                        ) / businessModels.length,\n                      )\n                    : \"0%\"}\n                </p>\n              </div>\n              <AlertTriangle className=\"w-8 h-8 text-orange-500\" />\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      <Tabs defaultValue=\"models\" className=\"space-y-6\">\n        <TabsList className=\"grid w-full grid-cols-2\">\n          <TabsTrigger value=\"models\">Business Models</TabsTrigger>\n          <TabsTrigger value=\"uncertainty\">Uncertainty Analysis</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"models\" className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {businessModels.map((model) => (\n              <Card key={model.coalitionId}>\n                <CardHeader>\n                  <div className=\"flex items-center justify-between\">\n                    <CardTitle>{model.name}</CardTitle>\n                    <Badge\n                      variant={model.marketShare > 25 ? \"default\" : \"secondary\"}\n                    >\n                      {model.marketShare.toFixed(1)}% Market Share\n                    </Badge>\n                  </div>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div>\n                    <p className=\"text-xs text-gray-500 mb-2\">\n                      Performance Metrics\n                    </p>\n                    <div className=\"space-y-2\">\n                      <div className=\"flex justify-between items-center\">\n                        <span className=\"text-sm\">Growth Rate</span>\n                        <span className=\"font-medium text-green-600\">\n                          {model.growthRate.toFixed(0)}%\n                        </span>\n                      </div>\n                      <Progress value={model.growthRate} className=\"h-2\" />\n\n                      <div className=\"flex justify-between items-center\">\n                        <span className=\"text-sm\">Profitability</span>\n                        <span className=\"font-medium\">\n                          {formatPercent(model.profitabilityScore)}\n                        </span>\n                      </div>\n                      <Progress\n                        value={model.profitabilityScore * 100}\n                        className=\"h-2\"\n                      />\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"uncertainty\" className=\"space-y-6\">\n          <Alert>\n            <AlertTriangle className=\"w-4 h-4\" />\n            <AlertDescription>\n              All strategic projections include uncertainty bands and confidence\n              intervals based on Monte Carlo simulation and sensitivity\n              analysis.\n            </AlertDescription>\n          </Alert>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {businessModels.map((model) => (\n              <Card key={model.coalitionId}>\n                <CardHeader>\n                  <CardTitle>{model.name} - Uncertainty Analysis</CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div>\n                    <h5 className=\"font-semibold mb-3\">\n                      Market Share Confidence Bands\n                    </h5>\n                    <div className=\"space-y-2\">\n                      <div className=\"flex justify-between text-sm\">\n                        <span>Lower Bound</span>\n                        <span>\n                          {model.uncertainty.marketShare[0].toFixed(1)}%\n                        </span>\n                      </div>\n                      <div className=\"relative h-6 bg-gray-200 rounded\">\n                        <div\n                          className=\"absolute h-full bg-blue-500 rounded opacity-30\"\n                          style={{\n                            left: `${Math.min(model.uncertainty.marketShare[0], 50)}%`,\n                            width: `${Math.abs(model.uncertainty.marketShare[1] - model.uncertainty.marketShare[0])}%`,\n                          }}\n                        />\n                        <div\n                          className=\"absolute w-1 h-full bg-blue-700\"\n                          style={{\n                            left: `${Math.min(model.marketShare, 50)}%`,\n                          }}\n                        />\n                      </div>\n                      <div className=\"flex justify-between text-sm\">\n                        <span>Upper Bound</span>\n                        <span>\n                          {model.uncertainty.marketShare[1].toFixed(1)}%\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"bg-blue-50 p-3 rounded-lg\">\n                    <h6 className=\"font-semibold text-blue-900 mb-2\">\n                      Risk Assessment\n                    </h6>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-blue-700\">Risk Score</span>\n                      <span className=\"font-bold text-blue-900\">\n                        {formatPercent(model.riskScore)}\n                        (±\n                        {formatPercent(\n                          (model.uncertainty.risk[1] -\n                            model.uncertainty.risk[0]) /\n                            2,\n                        )}\n                        )\n                      </span>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </TabsContent>\n      </Tabs>\n\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Download className=\"w-5 h-5\" />\n            Export Strategic Analysis\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex gap-4\">\n            <Button variant=\"outline\">\n              <Download className=\"w-4 h-4 mr-2\" />\n              Export Analysis Data\n            </Button>\n          </div>\n          <p className=\"text-sm text-gray-600 mt-2\">\n            Export includes confidence intervals, uncertainty bands, and\n            statistical significance\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"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","ignoreList":[]}
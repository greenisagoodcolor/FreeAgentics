a85f3182705705c17c224405d7d09a2d
"use client";
"use strict";

/* istanbul ignore next */
function cov_r5q73m3j7() {
  var path = "/Users/matthewmoroney/builds/FreeAgentics/web/components/conversation-orchestration/change-history.tsx";
  var hash = "e656c164c909157444a0b51bb380242c04951ec5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewmoroney/builds/FreeAgentics/web/components/conversation-orchestration/change-history.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 29
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 14
        },
        end: {
          line: 14,
          column: 35
        }
      },
      "6": {
        start: {
          line: 15,
          column: 16
        },
        end: {
          line: 15,
          column: 39
        }
      },
      "7": {
        start: {
          line: 16,
          column: 15
        },
        end: {
          line: 16,
          column: 37
        }
      },
      "8": {
        start: {
          line: 17,
          column: 20
        },
        end: {
          line: 17,
          column: 48
        }
      },
      "9": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 18,
          column: 45
        }
      },
      "10": {
        start: {
          line: 19,
          column: 21
        },
        end: {
          line: 19,
          column: 44
        }
      },
      "11": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 51
        }
      },
      "12": {
        start: {
          line: 21,
          column: 39
        },
        end: {
          line: 21,
          column: 51
        }
      },
      "13": {
        start: {
          line: 22,
          column: 28
        },
        end: {
          line: 22,
          column: 41
        }
      },
      "14": {
        start: {
          line: 23,
          column: 27
        },
        end: {
          line: 23,
          column: 40
        }
      },
      "15": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 26,
          column: 20
        }
      },
      "16": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 66
        }
      },
      "17": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 31,
          column: 5
        }
      },
      "18": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 19
        }
      },
      "19": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "20": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 35,
          column: 10
        }
      },
      "21": {
        start: {
          line: 37,
          column: 16
        },
        end: {
          line: 37,
          column: 53
        }
      },
      "22": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "23": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 30
        }
      },
      "24": {
        start: {
          line: 41,
          column: 17
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "25": {
        start: {
          line: 44,
          column: 32
        },
        end: {
          line: 44,
          column: 88
        }
      },
      "26": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "27": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "28": {
        start: {
          line: 47,
          column: 23
        },
        end: {
          line: 47,
          column: 95
        }
      },
      "29": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 52,
          column: 13
        }
      },
      "30": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 49,
          column: 57
        }
      },
      "31": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 51,
          column: 39
        }
      },
      "32": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 25
        }
      },
      "33": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "34": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 31
        }
      },
      "35": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 18
        }
      },
      "36": {
        start: {
          line: 62,
          column: 50
        },
        end: {
          line: 62,
          column: 76
        }
      },
      "37": {
        start: {
          line: 65,
          column: 30
        },
        end: {
          line: 67,
          column: 5
        }
      },
      "38": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 52
        }
      },
      "39": {
        start: {
          line: 70,
          column: 27
        },
        end: {
          line: 83,
          column: 5
        }
      },
      "40": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 82,
          column: 9
        }
      },
      "41": {
        start: {
          line: 73,
          column: 16
        },
        end: {
          line: 73,
          column: 40
        }
      },
      "42": {
        start: {
          line: 75,
          column: 16
        },
        end: {
          line: 75,
          column: 41
        }
      },
      "43": {
        start: {
          line: 77,
          column: 16
        },
        end: {
          line: 77,
          column: 41
        }
      },
      "44": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 79,
          column: 38
        }
      },
      "45": {
        start: {
          line: 81,
          column: 16
        },
        end: {
          line: 81,
          column: 47
        }
      },
      "46": {
        start: {
          line: 86,
          column: 34
        },
        end: {
          line: 98,
          column: 5
        }
      },
      "47": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 34
        }
      },
      "48": {
        start: {
          line: 87,
          column: 22
        },
        end: {
          line: 87,
          column: 34
        }
      },
      "49": {
        start: {
          line: 88,
          column: 22
        },
        end: {
          line: 88,
          column: 98
        }
      },
      "50": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 91,
          column: 11
        }
      },
      "51": {
        start: {
          line: 89,
          column: 25
        },
        end: {
          line: 91,
          column: 11
        }
      },
      "52": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 94,
          column: 11
        }
      },
      "53": {
        start: {
          line: 92,
          column: 25
        },
        end: {
          line: 94,
          column: 11
        }
      },
      "54": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 97,
          column: 11
        }
      },
      "55": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 573,
          column: 7
        }
      },
      "56": {
        start: {
          line: 153,
          column: 111
        },
        end: {
          line: 237,
          column: 57
        }
      },
      "57": {
        start: {
          line: 302,
          column: 80
        },
        end: {
          line: 436,
          column: 51
        }
      },
      "58": {
        start: {
          line: 304,
          column: 57
        },
        end: {
          line: 304,
          column: 81
        }
      },
      "59": {
        start: {
          line: 350,
          column: 136
        },
        end: {
          line: 363,
          column: 81
        }
      },
      "60": {
        start: {
          line: 421,
          column: 68
        },
        end: {
          line: 421,
          column: 88
        }
      },
      "61": {
        start: {
          line: 422,
          column: 68
        },
        end: {
          line: 422,
          column: 85
        }
      },
      "62": {
        start: {
          line: 498,
          column: 162
        },
        end: {
          line: 515,
          column: 64
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 20,
            column: 9
          },
          end: {
            line: 20,
            column: 33
          }
        },
        loc: {
          start: {
            line: 20,
            column: 47
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 24,
            column: 39
          },
          end: {
            line: 24,
            column: 40
          }
        },
        loc: {
          start: {
            line: 24,
            column: 61
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 28,
            column: 9
          },
          end: {
            line: 28,
            column: 34
          }
        },
        loc: {
          start: {
            line: 28,
            column: 53
          },
          end: {
            line: 60,
            column: 1
          }
        },
        line: 28
      },
      "4": {
        name: "ChangeHistory",
        decl: {
          start: {
            line: 61,
            column: 9
          },
          end: {
            line: 61,
            column: 22
          }
        },
        loc: {
          start: {
            line: 61,
            column: 94
          },
          end: {
            line: 574,
            column: 1
          }
        },
        line: 61
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 65,
            column: 30
          },
          end: {
            line: 65,
            column: 31
          }
        },
        loc: {
          start: {
            line: 65,
            column: 43
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 65
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 70,
            column: 27
          },
          end: {
            line: 70,
            column: 28
          }
        },
        loc: {
          start: {
            line: 70,
            column: 40
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 70
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 86,
            column: 34
          },
          end: {
            line: 86,
            column: 35
          }
        },
        loc: {
          start: {
            line: 86,
            column: 45
          },
          end: {
            line: 98,
            column: 5
          }
        },
        line: 86
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 153,
            column: 80
          },
          end: {
            line: 153,
            column: 81
          }
        },
        loc: {
          start: {
            line: 153,
            column: 111
          },
          end: {
            line: 237,
            column: 57
          }
        },
        line: 153
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 302,
            column: 58
          },
          end: {
            line: 302,
            column: 59
          }
        },
        loc: {
          start: {
            line: 302,
            column: 80
          },
          end: {
            line: 436,
            column: 51
          }
        },
        line: 302
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 304,
            column: 53
          },
          end: {
            line: 304,
            column: 54
          }
        },
        loc: {
          start: {
            line: 304,
            column: 57
          },
          end: {
            line: 304,
            column: 81
          }
        },
        line: 304
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 350,
            column: 105
          },
          end: {
            line: 350,
            column: 106
          }
        },
        loc: {
          start: {
            line: 350,
            column: 136
          },
          end: {
            line: 363,
            column: 81
          }
        },
        line: 350
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 420,
            column: 73
          },
          end: {
            line: 420,
            column: 74
          }
        },
        loc: {
          start: {
            line: 420,
            column: 78
          },
          end: {
            line: 423,
            column: 65
          }
        },
        line: 420
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 498,
            column: 131
          },
          end: {
            line: 498,
            column: 132
          }
        },
        loc: {
          start: {
            line: 498,
            column: 162
          },
          end: {
            line: 515,
            column: 64
          }
        },
        line: 498
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 25,
            column: 15
          },
          end: {
            line: 25,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 25,
            column: 29
          },
          end: {
            line: 25,
            column: 45
          }
        }, {
          start: {
            line: 25,
            column: 48
          },
          end: {
            line: 25,
            column: 65
          }
        }],
        line: 25
      },
      "2": {
        loc: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "3": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 20
          }
        }, {
          start: {
            line: 29,
            column: 24
          },
          end: {
            line: 29,
            column: 27
          }
        }, {
          start: {
            line: 29,
            column: 31
          },
          end: {
            line: 29,
            column: 45
          }
        }],
        line: 29
      },
      "4": {
        loc: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "5": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 20
          }
        }, {
          start: {
            line: 32,
            column: 24
          },
          end: {
            line: 32,
            column: 47
          }
        }, {
          start: {
            line: 32,
            column: 51
          },
          end: {
            line: 32,
            column: 76
          }
        }],
        line: 32
      },
      "6": {
        loc: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "7": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 13
          }
        }, {
          start: {
            line: 38,
            column: 17
          },
          end: {
            line: 38,
            column: 31
          }
        }],
        line: 38
      },
      "8": {
        loc: {
          start: {
            line: 44,
            column: 32
          },
          end: {
            line: 44,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 32
          },
          end: {
            line: 44,
            column: 53
          }
        }, {
          start: {
            line: 44,
            column: 57
          },
          end: {
            line: 44,
            column: 88
          }
        }],
        line: 44
      },
      "9": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "10": {
        loc: {
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 46,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 46,
            column: 29
          }
        }, {
          start: {
            line: 46,
            column: 33
          },
          end: {
            line: 46,
            column: 79
          }
        }],
        line: 46
      },
      "11": {
        loc: {
          start: {
            line: 47,
            column: 23
          },
          end: {
            line: 47,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 47,
            column: 47
          },
          end: {
            line: 47,
            column: 88
          }
        }, {
          start: {
            line: 47,
            column: 91
          },
          end: {
            line: 47,
            column: 95
          }
        }],
        line: 47
      },
      "12": {
        loc: {
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 52,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 52,
            column: 13
          }
        }, {
          start: {
            line: 50,
            column: 19
          },
          end: {
            line: 52,
            column: 13
          }
        }],
        line: 48
      },
      "13": {
        loc: {
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 48,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 48,
            column: 20
          }
        }, {
          start: {
            line: 48,
            column: 25
          },
          end: {
            line: 48,
            column: 33
          }
        }, {
          start: {
            line: 48,
            column: 37
          },
          end: {
            line: 48,
            column: 45
          }
        }],
        line: 48
      },
      "14": {
        loc: {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "15": {
        loc: {
          start: {
            line: 61,
            column: 76
          },
          end: {
            line: 61,
            column: 90
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 61,
            column: 88
          },
          end: {
            line: 61,
            column: 90
          }
        }],
        line: 61
      },
      "16": {
        loc: {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 73,
            column: 40
          }
        }, {
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 75,
            column: 41
          }
        }, {
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 77,
            column: 41
          }
        }, {
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 79,
            column: 38
          }
        }, {
          start: {
            line: 80,
            column: 12
          },
          end: {
            line: 81,
            column: 47
          }
        }],
        line: 71
      },
      "17": {
        loc: {
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 87,
            column: 34
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 87,
            column: 34
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "18": {
        loc: {
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 91,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 91,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "19": {
        loc: {
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 94,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 94,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "20": {
        loc: {
          start: {
            line: 124,
            column: 20
          },
          end: {
            line: 275,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 20
          },
          end: {
            line: 124,
            column: 33
          }
        }, {
          start: {
            line: 124,
            column: 51
          },
          end: {
            line: 275,
            column: 22
          }
        }],
        line: 124
      },
      "21": {
        loc: {
          start: {
            line: 138,
            column: 49
          },
          end: {
            line: 138,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 138,
            column: 88
          },
          end: {
            line: 138,
            column: 97
          }
        }, {
          start: {
            line: 138,
            column: 100
          },
          end: {
            line: 138,
            column: 111
          }
        }],
        line: 138
      },
      "22": {
        loc: {
          start: {
            line: 160,
            column: 77
          },
          end: {
            line: 160,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 160,
            column: 102
          },
          end: {
            line: 160,
            column: 111
          }
        }, {
          start: {
            line: 160,
            column: 114
          },
          end: {
            line: 160,
            column: 125
          }
        }],
        line: 160
      },
      "23": {
        loc: {
          start: {
            line: 247,
            column: 61
          },
          end: {
            line: 247,
            column: 129
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 247,
            column: 108
          },
          end: {
            line: 247,
            column: 117
          }
        }, {
          start: {
            line: 247,
            column: 120
          },
          end: {
            line: 247,
            column: 129
          }
        }],
        line: 247
      },
      "24": {
        loc: {
          start: {
            line: 276,
            column: 20
          },
          end: {
            line: 287,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 276,
            column: 20
          },
          end: {
            line: 276,
            column: 33
          }
        }, {
          start: {
            line: 276,
            column: 37
          },
          end: {
            line: 276,
            column: 51
          }
        }, {
          start: {
            line: 276,
            column: 69
          },
          end: {
            line: 287,
            column: 22
          }
        }],
        line: 276
      },
      "25": {
        loc: {
          start: {
            line: 295,
            column: 28
          },
          end: {
            line: 438,
            column: 30
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 295,
            column: 65
          },
          end: {
            line: 298,
            column: 30
          }
        }, {
          start: {
            line: 298,
            column: 47
          },
          end: {
            line: 438,
            column: 30
          }
        }],
        line: 295
      },
      "26": {
        loc: {
          start: {
            line: 303,
            column: 88
          },
          end: {
            line: 303,
            column: 148
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 303,
            column: 122
          },
          end: {
            line: 303,
            column: 143
          }
        }, {
          start: {
            line: 303,
            column: 146
          },
          end: {
            line: 303,
            column: 148
          }
        }],
        line: 303
      },
      "27": {
        loc: {
          start: {
            line: 364,
            column: 68
          },
          end: {
            line: 371,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 364,
            column: 68
          },
          end: {
            line: 364,
            column: 99
          }
        }, {
          start: {
            line: 364,
            column: 117
          },
          end: {
            line: 371,
            column: 70
          }
        }],
        line: 364
      },
      "28": {
        loc: {
          start: {
            line: 376,
            column: 52
          },
          end: {
            line: 408,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 376,
            column: 52
          },
          end: {
            line: 376,
            column: 75
          }
        }, {
          start: {
            line: 376,
            column: 93
          },
          end: {
            line: 408,
            column: 54
          }
        }],
        line: 376
      },
      "29": {
        loc: {
          start: {
            line: 417,
            column: 60
          },
          end: {
            line: 431,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 417,
            column: 60
          },
          end: {
            line: 417,
            column: 82
          }
        }, {
          start: {
            line: 417,
            column: 86
          },
          end: {
            line: 417,
            column: 96
          }
        }, {
          start: {
            line: 417,
            column: 114
          },
          end: {
            line: 431,
            column: 62
          }
        }],
        line: 417
      },
      "30": {
        loc: {
          start: {
            line: 441,
            column: 20
          },
          end: {
            line: 569,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 441,
            column: 20
          },
          end: {
            line: 441,
            column: 35
          }
        }, {
          start: {
            line: 441,
            column: 53
          },
          end: {
            line: 569,
            column: 22
          }
        }],
        line: 441
      },
      "31": {
        loc: {
          start: {
            line: 519,
            column: 40
          },
          end: {
            line: 564,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 519,
            column: 40
          },
          end: {
            line: 519,
            column: 74
          }
        }, {
          start: {
            line: 519,
            column: 92
          },
          end: {
            line: 564,
            column: 42
          }
        }],
        line: 519
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0, 0, 0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0, 0],
      "30": [0, 0],
      "31": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matthewmoroney/builds/FreeAgentics/web/components/conversation-orchestration/change-history.tsx"],
      sourcesContent: ["\"use client\";\n\nimport React, { useState } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { ConversationPresetHistory, ABTestResults } from \"@/lib/types\";\nimport {\n  History,\n  RotateCcw,\n  GitBranch,\n  TrendingUp,\n  TrendingDown,\n  AlertTriangle,\n} from \"lucide-react\";\n\ninterface ChangeHistoryProps {\n  history: ConversationPresetHistory[];\n  abTestResults?: ABTestResults;\n  onRollback?: (historyItem: ConversationPresetHistory) => void;\n  onStartABTest?: () => void;\n  className?: string;\n}\n\nexport function ChangeHistory({\n  history,\n  abTestResults,\n  onRollback,\n  onStartABTest,\n  className = \"\",\n}: ChangeHistoryProps) {\n  const [selectedHistory, setSelectedHistory] =\n    useState<ConversationPresetHistory | null>(null);\n\n  /**\n   * Format timestamp for display\n   */\n  const formatTimestamp = (timestamp: string) => {\n    return new Date(timestamp).toLocaleString();\n  };\n\n  /**\n   * Get risk level color\n   */\n  const getRiskColor = (riskLevel: string) => {\n    switch (riskLevel) {\n      case \"low\":\n        return \"text-green-600\";\n      case \"medium\":\n        return \"text-yellow-600\";\n      case \"high\":\n        return \"text-orange-600\";\n      case \"critical\":\n        return \"text-red-600\";\n      default:\n        return \"text-muted-foreground\";\n    }\n  };\n\n  /**\n   * Get performance trend icon\n   */\n  const getPerformanceTrend = (metrics: any) => {\n    if (!metrics) return null;\n\n    const score =\n      (metrics.responseTime + metrics.qualityScore + metrics.userSatisfaction) /\n      3;\n    if (score > 0.7) return <TrendingUp className=\"h-4 w-4 text-green-500\" />;\n    if (score < 0.3) return <TrendingDown className=\"h-4 w-4 text-red-500\" />;\n    return <AlertTriangle className=\"h-4 w-4 text-yellow-500\" />;\n  };\n\n  return (\n    <Card className={className}>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <History className=\"h-5 w-5\" />\n          Change History\n          <Badge variant=\"outline\" className=\"ml-auto\">\n            {history.length} changes\n          </Badge>\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        {/* A/B Test Results */}\n        {abTestResults && (\n          <div className=\"space-y-3\">\n            <div className=\"flex items-center gap-2\">\n              <GitBranch className=\"h-4 w-4\" />\n              <h4 className=\"font-medium text-sm\">A/B Test Results</h4>\n              <Badge\n                variant={\n                  abTestResults.recommendation === \"A\" ? \"default\" : \"secondary\"\n                }\n              >\n                Recommend: {abTestResults.recommendation}\n              </Badge>\n            </div>\n\n            <Card className=\"border-dashed\">\n              <CardContent className=\"p-4 space-y-3\">\n                <div className=\"grid grid-cols-2 gap-4\">\n                  {abTestResults.metrics.map((metric, index) => (\n                    <div key={index} className=\"space-y-2\">\n                      <div className=\"flex items-center justify-between\">\n                        <Badge\n                          variant={\n                            metric.variant === \"A\" ? \"default\" : \"secondary\"\n                          }\n                        >\n                          Variant {metric.variant}\n                        </Badge>\n                        <span className=\"text-xs text-muted-foreground\">\n                          {metric.sampleSize} samples\n                        </span>\n                      </div>\n\n                      <div className=\"space-y-1 text-xs\">\n                        <div className=\"flex justify-between\">\n                          <span>Response Time:</span>\n                          <span>{metric.averageResponseTime.toFixed(0)}ms</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span>Quality Score:</span>\n                          <span>{(metric.qualityScore * 100).toFixed(0)}%</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span>Satisfaction:</span>\n                          <span>\n                            {(metric.userSatisfaction * 100).toFixed(0)}%\n                          </span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span>Error Rate:</span>\n                          <span>{(metric.errorRate * 100).toFixed(1)}%</span>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n\n                <Separator />\n\n                <div className=\"flex items-center justify-between text-xs\">\n                  <span>Statistical Significance:</span>\n                  <Badge\n                    variant={\n                      abTestResults.statisticalSignificance > 0.95\n                        ? \"default\"\n                        : \"outline\"\n                    }\n                  >\n                    {(abTestResults.statisticalSignificance * 100).toFixed(1)}%\n                  </Badge>\n                </div>\n\n                <div className=\"flex items-center justify-between text-xs\">\n                  <span>Confidence Interval:</span>\n                  <span>\n                    {abTestResults.confidenceInterval.lower.toFixed(2)} -{\" \"}\n                    {abTestResults.confidenceInterval.upper.toFixed(2)}\n                  </span>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        )}\n\n        {/* Start A/B Test Button */}\n        {onStartABTest && !abTestResults && (\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={onStartABTest}\n            className=\"w-full\"\n          >\n            <GitBranch className=\"h-4 w-4 mr-2\" />\n            Start A/B Test\n          </Button>\n        )}\n\n        {/* History List */}\n        <div className=\"space-y-3\">\n          <h4 className=\"font-medium text-sm\">Recent Changes</h4>\n\n          {history.length === 0 ? (\n            <div className=\"text-center py-8 text-muted-foreground text-sm\">\n              No changes recorded yet\n            </div>\n          ) : (\n            <ScrollArea className=\"h-64\">\n              <div className=\"space-y-3\">\n                {history.map((item) => (\n                  <Card\n                    key={item.id}\n                    className={`cursor-pointer transition-all ${\n                      selectedHistory?.id === item.id\n                        ? \"ring-2 ring-primary\"\n                        : \"\"\n                    }`}\n                    onClick={() => setSelectedHistory(item)}\n                  >\n                    <CardContent className=\"p-3 space-y-2\">\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center gap-2\">\n                          <Badge variant=\"outline\" className=\"text-xs\">\n                            v{item.version}\n                          </Badge>\n                          {getPerformanceTrend(item.performanceMetrics)}\n                        </div>\n                        <div className=\"text-xs text-muted-foreground\">\n                          {formatTimestamp(item.appliedAt)}\n                        </div>\n                      </div>\n\n                      <div className=\"text-sm\">\n                        <div className=\"flex items-center justify-between mb-1\">\n                          <span>Changes:</span>\n                          <Badge variant=\"secondary\" className=\"text-xs\">\n                            {item.changes.changes.length}\n                          </Badge>\n                        </div>\n\n                        <div className=\"space-y-1\">\n                          {item.changes.changes\n                            .slice(0, 2)\n                            .map((change, index) => (\n                              <div\n                                key={index}\n                                className=\"flex items-center justify-between text-xs\"\n                              >\n                                <span className=\"text-muted-foreground truncate\">\n                                  {change.path}\n                                </span>\n                                <Badge\n                                  variant=\"outline\"\n                                  className={`text-xs ${getRiskColor(change.riskLevel)}`}\n                                >\n                                  {change.riskLevel}\n                                </Badge>\n                              </div>\n                            ))}\n                          {item.changes.changes.length > 2 && (\n                            <div className=\"text-xs text-muted-foreground\">\n                              +{item.changes.changes.length - 2} more changes\n                            </div>\n                          )}\n                        </div>\n                      </div>\n\n                      {item.performanceMetrics && (\n                        <div className=\"pt-2 border-t space-y-1\">\n                          <div className=\"flex items-center justify-between text-xs\">\n                            <span>Quality Score:</span>\n                            <span>\n                              {(\n                                item.performanceMetrics.qualityScore * 100\n                              ).toFixed(0)}\n                              %\n                            </span>\n                          </div>\n                          <div className=\"flex items-center justify-between text-xs\">\n                            <span>Response Time:</span>\n                            <span>\n                              {item.performanceMetrics.responseTime.toFixed(0)}\n                              ms\n                            </span>\n                          </div>\n                        </div>\n                      )}\n\n                      <div className=\"flex items-center justify-between pt-2\">\n                        <Badge variant=\"outline\" className=\"text-xs\">\n                          {item.appliedBy}\n                        </Badge>\n                        {item.rollbackAvailable && onRollback && (\n                          <Button\n                            variant=\"ghost\"\n                            size=\"sm\"\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              onRollback(item);\n                            }}\n                            className=\"h-6 text-xs\"\n                          >\n                            <RotateCcw className=\"h-3 w-3 mr-1\" />\n                            Rollback\n                          </Button>\n                        )}\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            </ScrollArea>\n          )}\n        </div>\n\n        {/* Selected History Details */}\n        {selectedHistory && (\n          <div className=\"space-y-3\">\n            <Separator />\n            <h4 className=\"font-medium text-sm\">Change Details</h4>\n\n            <Card className=\"border-dashed\">\n              <CardContent className=\"p-4 space-y-3\">\n                <div className=\"flex items-center justify-between\">\n                  <Badge variant=\"outline\">\n                    Version {selectedHistory.version}\n                  </Badge>\n                  <div className=\"text-xs text-muted-foreground\">\n                    {formatTimestamp(selectedHistory.appliedAt)}\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <h5 className=\"font-medium text-xs\">Summary</h5>\n                  <div className=\"grid grid-cols-2 gap-2 text-xs\">\n                    <div>\n                      Total Changes:{\" \"}\n                      {selectedHistory.changes.summary.totalChanges}\n                    </div>\n                    <div>\n                      Affected Categories:{\" \"}\n                      {\n                        selectedHistory.changes.summary.affectedCategories\n                          .length\n                      }\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-1\">\n                    {Object.entries(\n                      selectedHistory.changes.summary.riskDistribution,\n                    ).map(([risk, count]) => (\n                      <div\n                        key={risk}\n                        className=\"flex items-center justify-between text-xs\"\n                      >\n                        <span className={getRiskColor(risk)}>{risk} risk:</span>\n                        <span>{count} changes</span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                {selectedHistory.performanceMetrics && (\n                  <div className=\"space-y-2\">\n                    <h5 className=\"font-medium text-xs\">Performance Impact</h5>\n                    <div className=\"grid grid-cols-2 gap-2 text-xs\">\n                      <div>\n                        Response Time:{\" \"}\n                        {selectedHistory.performanceMetrics.responseTime.toFixed(\n                          0,\n                        )}\n                        ms\n                      </div>\n                      <div>\n                        Quality Score:{\" \"}\n                        {(\n                          selectedHistory.performanceMetrics.qualityScore * 100\n                        ).toFixed(0)}\n                        %\n                      </div>\n                      <div>\n                        User Satisfaction:{\" \"}\n                        {(\n                          selectedHistory.performanceMetrics.userSatisfaction *\n                          100\n                        ).toFixed(0)}\n                        %\n                      </div>\n                      <div>\n                        Error Rate:{\" \"}\n                        {(\n                          selectedHistory.performanceMetrics.errorRate * 100\n                        ).toFixed(1)}\n                        %\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n"],
      names: ["ChangeHistory", "history", "abTestResults", "onRollback", "onStartABTest", "className", "selectedHistory", "setSelectedHistory", "useState", "formatTimestamp", "timestamp", "Date", "toLocaleString", "getRiskColor", "riskLevel", "getPerformanceTrend", "metrics", "score", "responseTime", "qualityScore", "userSatisfaction", "TrendingUp", "TrendingDown", "AlertTriangle", "Card", "CardHeader", "CardTitle", "History", "Badge", "variant", "length", "CardContent", "div", "GitBranch", "h4", "recommendation", "map", "metric", "index", "span", "sampleSize", "averageResponseTime", "toFixed", "errorRate", "Separator", "statisticalSignificance", "confidenceInterval", "lower", "upper", "Button", "size", "onClick", "ScrollArea", "item", "id", "version", "performanceMetrics", "appliedAt", "changes", "slice", "change", "path", "appliedBy", "rollbackAvailable", "e", "stopPropagation", "RotateCcw", "h5", "summary", "totalChanges", "affectedCategories", "Object", "entries", "riskDistribution", "risk", "count"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e656c164c909157444a0b51bb380242c04951ec5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_r5q73m3j7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_r5q73m3j7();
cov_r5q73m3j7().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_r5q73m3j7().s[1]++;
Object.defineProperty(exports, "ChangeHistory", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_r5q73m3j7().f[0]++;
    cov_r5q73m3j7().s[2]++;
    return ChangeHistory;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_r5q73m3j7().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_r5q73m3j7().s[4]++, _interop_require_wildcard(require("react")));
const _card =
/* istanbul ignore next */
(cov_r5q73m3j7().s[5]++, require("../ui/card"));
const _button =
/* istanbul ignore next */
(cov_r5q73m3j7().s[6]++, require("../ui/button"));
const _badge =
/* istanbul ignore next */
(cov_r5q73m3j7().s[7]++, require("../ui/badge"));
const _scrollarea =
/* istanbul ignore next */
(cov_r5q73m3j7().s[8]++, require("../ui/scroll-area"));
const _separator =
/* istanbul ignore next */
(cov_r5q73m3j7().s[9]++, require("../ui/separator"));
const _lucidereact =
/* istanbul ignore next */
(cov_r5q73m3j7().s[10]++, require("lucide-react"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_r5q73m3j7().f[1]++;
  cov_r5q73m3j7().s[11]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_r5q73m3j7().b[0][0]++;
    cov_r5q73m3j7().s[12]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_r5q73m3j7().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_r5q73m3j7().s[13]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_r5q73m3j7().s[14]++, new WeakMap());
  /* istanbul ignore next */
  cov_r5q73m3j7().s[15]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_r5q73m3j7().f[2]++;
    cov_r5q73m3j7().s[16]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_r5q73m3j7().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_r5q73m3j7().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_r5q73m3j7().f[3]++;
  cov_r5q73m3j7().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_r5q73m3j7().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_r5q73m3j7().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_r5q73m3j7().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_r5q73m3j7().b[2][0]++;
    cov_r5q73m3j7().s[18]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_r5q73m3j7().b[2][1]++;
  }
  cov_r5q73m3j7().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_r5q73m3j7().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_r5q73m3j7().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_r5q73m3j7().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_r5q73m3j7().b[4][0]++;
    cov_r5q73m3j7().s[20]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_r5q73m3j7().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_r5q73m3j7().s[21]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_r5q73m3j7().s[22]++;
  if (
  /* istanbul ignore next */
  (cov_r5q73m3j7().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_r5q73m3j7().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_r5q73m3j7().b[6][0]++;
    cov_r5q73m3j7().s[23]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_r5q73m3j7().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_r5q73m3j7().s[24]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_r5q73m3j7().s[25]++,
  /* istanbul ignore next */
  (cov_r5q73m3j7().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_r5q73m3j7().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_r5q73m3j7().s[26]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_r5q73m3j7().s[27]++;
    if (
    /* istanbul ignore next */
    (cov_r5q73m3j7().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_r5q73m3j7().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_r5q73m3j7().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_r5q73m3j7().s[28]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_r5q73m3j7().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_r5q73m3j7().b[11][1]++, null));
      /* istanbul ignore next */
      cov_r5q73m3j7().s[29]++;
      if (
      /* istanbul ignore next */
      (cov_r5q73m3j7().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_r5q73m3j7().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_r5q73m3j7().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_r5q73m3j7().b[12][0]++;
        cov_r5q73m3j7().s[30]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_r5q73m3j7().b[12][1]++;
        cov_r5q73m3j7().s[31]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_r5q73m3j7().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_r5q73m3j7().s[32]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_r5q73m3j7().s[33]++;
  if (cache) {
    /* istanbul ignore next */
    cov_r5q73m3j7().b[14][0]++;
    cov_r5q73m3j7().s[34]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_r5q73m3j7().b[14][1]++;
  }
  cov_r5q73m3j7().s[35]++;
  return newObj;
}
function ChangeHistory({
  history,
  abTestResults,
  onRollback,
  onStartABTest,
  className =
  /* istanbul ignore next */
  (cov_r5q73m3j7().b[15][0]++, "")
}) {
  /* istanbul ignore next */
  cov_r5q73m3j7().f[4]++;
  const [selectedHistory, setSelectedHistory] =
  /* istanbul ignore next */
  (cov_r5q73m3j7().s[36]++, (0, _react.useState)(null));
  /**
  * Format timestamp for display
  */
  /* istanbul ignore next */
  cov_r5q73m3j7().s[37]++;
  const formatTimestamp = timestamp => {
    /* istanbul ignore next */
    cov_r5q73m3j7().f[5]++;
    cov_r5q73m3j7().s[38]++;
    return new Date(timestamp).toLocaleString();
  };
  /**
  * Get risk level color
  */
  /* istanbul ignore next */
  cov_r5q73m3j7().s[39]++;
  const getRiskColor = riskLevel => {
    /* istanbul ignore next */
    cov_r5q73m3j7().f[6]++;
    cov_r5q73m3j7().s[40]++;
    switch (riskLevel) {
      case "low":
        /* istanbul ignore next */
        cov_r5q73m3j7().b[16][0]++;
        cov_r5q73m3j7().s[41]++;
        return "text-green-600";
      case "medium":
        /* istanbul ignore next */
        cov_r5q73m3j7().b[16][1]++;
        cov_r5q73m3j7().s[42]++;
        return "text-yellow-600";
      case "high":
        /* istanbul ignore next */
        cov_r5q73m3j7().b[16][2]++;
        cov_r5q73m3j7().s[43]++;
        return "text-orange-600";
      case "critical":
        /* istanbul ignore next */
        cov_r5q73m3j7().b[16][3]++;
        cov_r5q73m3j7().s[44]++;
        return "text-red-600";
      default:
        /* istanbul ignore next */
        cov_r5q73m3j7().b[16][4]++;
        cov_r5q73m3j7().s[45]++;
        return "text-muted-foreground";
    }
  };
  /**
  * Get performance trend icon
  */
  /* istanbul ignore next */
  cov_r5q73m3j7().s[46]++;
  const getPerformanceTrend = metrics => {
    /* istanbul ignore next */
    cov_r5q73m3j7().f[7]++;
    cov_r5q73m3j7().s[47]++;
    if (!metrics) {
      /* istanbul ignore next */
      cov_r5q73m3j7().b[17][0]++;
      cov_r5q73m3j7().s[48]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_r5q73m3j7().b[17][1]++;
    }
    const score =
    /* istanbul ignore next */
    (cov_r5q73m3j7().s[49]++, (metrics.responseTime + metrics.qualityScore + metrics.userSatisfaction) / 3);
    /* istanbul ignore next */
    cov_r5q73m3j7().s[50]++;
    if (score > 0.7) {
      /* istanbul ignore next */
      cov_r5q73m3j7().b[18][0]++;
      cov_r5q73m3j7().s[51]++;
      return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.TrendingUp, {
        className: "h-4 w-4 text-green-500"
      });
    } else
    /* istanbul ignore next */
    {
      cov_r5q73m3j7().b[18][1]++;
    }
    cov_r5q73m3j7().s[52]++;
    if (score < 0.3) {
      /* istanbul ignore next */
      cov_r5q73m3j7().b[19][0]++;
      cov_r5q73m3j7().s[53]++;
      return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.TrendingDown, {
        className: "h-4 w-4 text-red-500"
      });
    } else
    /* istanbul ignore next */
    {
      cov_r5q73m3j7().b[19][1]++;
    }
    cov_r5q73m3j7().s[54]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.AlertTriangle, {
      className: "h-4 w-4 text-yellow-500"
    });
  };
  /* istanbul ignore next */
  cov_r5q73m3j7().s[55]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
    className: className,
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardTitle, {
        className: "flex items-center gap-2",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.History, {
          className: "h-5 w-5"
        }), "Change History", /*#__PURE__*/(0, _jsxruntime.jsxs)(_badge.Badge, {
          variant: "outline",
          className: "ml-auto",
          children: [history.length, " changes"]
        })]
      })
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
      className: "space-y-4",
      children: [
      /* istanbul ignore next */
      (cov_r5q73m3j7().b[20][0]++, abTestResults) &&
      /* istanbul ignore next */
      (cov_r5q73m3j7().b[20][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "space-y-3",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex items-center gap-2",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.GitBranch, {
            className: "h-4 w-4"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
            className: "font-medium text-sm",
            children: "A/B Test Results"
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_badge.Badge, {
            variant: abTestResults.recommendation === "A" ?
            /* istanbul ignore next */
            (cov_r5q73m3j7().b[21][0]++, "default") :
            /* istanbul ignore next */
            (cov_r5q73m3j7().b[21][1]++, "secondary"),
            children: ["Recommend: ", abTestResults.recommendation]
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.Card, {
          className: "border-dashed",
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
            className: "p-4 space-y-3",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "grid grid-cols-2 gap-4",
              children: abTestResults.metrics.map((metric, index) => {
                /* istanbul ignore next */
                cov_r5q73m3j7().f[8]++;
                cov_r5q73m3j7().s[56]++;
                return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "space-y-2",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center justify-between",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_badge.Badge, {
                      variant: metric.variant === "A" ?
                      /* istanbul ignore next */
                      (cov_r5q73m3j7().b[22][0]++, "default") :
                      /* istanbul ignore next */
                      (cov_r5q73m3j7().b[22][1]++, "secondary"),
                      children: ["Variant ", metric.variant]
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                      className: "text-xs text-muted-foreground",
                      children: [metric.sampleSize, " samples"]
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "space-y-1 text-xs",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "flex justify-between",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                        children: "Response Time:"
                      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                        children: [metric.averageResponseTime.toFixed(0), "ms"]
                      })]
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "flex justify-between",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                        children: "Quality Score:"
                      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                        children: [(metric.qualityScore * 100).toFixed(0), "%"]
                      })]
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "flex justify-between",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                        children: "Satisfaction:"
                      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                        children: [(metric.userSatisfaction * 100).toFixed(0), "%"]
                      })]
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "flex justify-between",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                        children: "Error Rate:"
                      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                        children: [(metric.errorRate * 100).toFixed(1), "%"]
                      })]
                    })]
                  })]
                }, index);
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_separator.Separator, {}), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center justify-between text-xs",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                children: "Statistical Significance:"
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_badge.Badge, {
                variant: abTestResults.statisticalSignificance > 0.95 ?
                /* istanbul ignore next */
                (cov_r5q73m3j7().b[23][0]++, "default") :
                /* istanbul ignore next */
                (cov_r5q73m3j7().b[23][1]++, "outline"),
                children: [(abTestResults.statisticalSignificance * 100).toFixed(1), "%"]
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center justify-between text-xs",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                children: "Confidence Interval:"
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                children: [abTestResults.confidenceInterval.lower.toFixed(2), " -", " ", abTestResults.confidenceInterval.upper.toFixed(2)]
              })]
            })]
          })
        })]
      })),
      /* istanbul ignore next */
      (cov_r5q73m3j7().b[24][0]++, onStartABTest) &&
      /* istanbul ignore next */
      (cov_r5q73m3j7().b[24][1]++, !abTestResults) &&
      /* istanbul ignore next */
      (cov_r5q73m3j7().b[24][2]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
        variant: "outline",
        size: "sm",
        onClick: onStartABTest,
        className: "w-full",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.GitBranch, {
          className: "h-4 w-4 mr-2"
        }), "Start A/B Test"]
      })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "space-y-3",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
          className: "font-medium text-sm",
          children: "Recent Changes"
        }), history.length === 0 ?
        /* istanbul ignore next */
        (/*#__PURE__*/cov_r5q73m3j7().b[25][0]++, (0, _jsxruntime.jsx)("div", {
          className: "text-center py-8 text-muted-foreground text-sm",
          children: "No changes recorded yet"
        })) :
        /* istanbul ignore next */
        (/*#__PURE__*/cov_r5q73m3j7().b[25][1]++, (0, _jsxruntime.jsx)(_scrollarea.ScrollArea, {
          className: "h-64",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "space-y-3",
            children: history.map(item => {
              /* istanbul ignore next */
              cov_r5q73m3j7().f[9]++;
              cov_r5q73m3j7().s[57]++;
              return /*#__PURE__*/(0, _jsxruntime.jsx)(_card.Card, {
                className: `cursor-pointer transition-all ${selectedHistory?.id === item.id ?
                /* istanbul ignore next */
                (cov_r5q73m3j7().b[26][0]++, "ring-2 ring-primary") :
                /* istanbul ignore next */
                (cov_r5q73m3j7().b[26][1]++, "")}`,
                onClick: () => {
                  /* istanbul ignore next */
                  cov_r5q73m3j7().f[10]++;
                  cov_r5q73m3j7().s[58]++;
                  return setSelectedHistory(item);
                },
                children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
                  className: "p-3 space-y-2",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center justify-between",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "flex items-center gap-2",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_badge.Badge, {
                        variant: "outline",
                        className: "text-xs",
                        children: ["v", item.version]
                      }), getPerformanceTrend(item.performanceMetrics)]
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: "text-xs text-muted-foreground",
                      children: formatTimestamp(item.appliedAt)
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "text-sm",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "flex items-center justify-between mb-1",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                        children: "Changes:"
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_badge.Badge, {
                        variant: "secondary",
                        className: "text-xs",
                        children: item.changes.changes.length
                      })]
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "space-y-1",
                      children: [item.changes.changes.slice(0, 2).map((change, index) => {
                        /* istanbul ignore next */
                        cov_r5q73m3j7().f[11]++;
                        cov_r5q73m3j7().s[59]++;
                        return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                          className: "flex items-center justify-between text-xs",
                          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                            className: "text-muted-foreground truncate",
                            children: change.path
                          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_badge.Badge, {
                            variant: "outline",
                            className: `text-xs ${getRiskColor(change.riskLevel)}`,
                            children: change.riskLevel
                          })]
                        }, index);
                      }),
                      /* istanbul ignore next */
                      (cov_r5q73m3j7().b[27][0]++, item.changes.changes.length > 2) &&
                      /* istanbul ignore next */
                      (cov_r5q73m3j7().b[27][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                        className: "text-xs text-muted-foreground",
                        children: ["+", item.changes.changes.length - 2, " more changes"]
                      }))]
                    })]
                  }),
                  /* istanbul ignore next */
                  (cov_r5q73m3j7().b[28][0]++, item.performanceMetrics) &&
                  /* istanbul ignore next */
                  (cov_r5q73m3j7().b[28][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "pt-2 border-t space-y-1",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "flex items-center justify-between text-xs",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                        children: "Quality Score:"
                      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                        children: [(item.performanceMetrics.qualityScore * 100).toFixed(0), "%"]
                      })]
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "flex items-center justify-between text-xs",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                        children: "Response Time:"
                      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                        children: [item.performanceMetrics.responseTime.toFixed(0), "ms"]
                      })]
                    })]
                  })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center justify-between pt-2",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_badge.Badge, {
                      variant: "outline",
                      className: "text-xs",
                      children: item.appliedBy
                    }),
                    /* istanbul ignore next */
                    (cov_r5q73m3j7().b[29][0]++, item.rollbackAvailable) &&
                    /* istanbul ignore next */
                    (cov_r5q73m3j7().b[29][1]++, onRollback) &&
                    /* istanbul ignore next */
                    (cov_r5q73m3j7().b[29][2]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
                      variant: "ghost",
                      size: "sm",
                      onClick: e => {
                        /* istanbul ignore next */
                        cov_r5q73m3j7().f[12]++;
                        cov_r5q73m3j7().s[60]++;
                        e.stopPropagation();
                        /* istanbul ignore next */
                        cov_r5q73m3j7().s[61]++;
                        onRollback(item);
                      },
                      className: "h-6 text-xs",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.RotateCcw, {
                        className: "h-3 w-3 mr-1"
                      }), "Rollback"]
                    }))]
                  })]
                })
              }, item.id);
            })
          })
        }))]
      }),
      /* istanbul ignore next */
      (cov_r5q73m3j7().b[30][0]++, selectedHistory) &&
      /* istanbul ignore next */
      (cov_r5q73m3j7().b[30][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "space-y-3",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_separator.Separator, {}), /*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
          className: "font-medium text-sm",
          children: "Change Details"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.Card, {
          className: "border-dashed",
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
            className: "p-4 space-y-3",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center justify-between",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_badge.Badge, {
                variant: "outline",
                children: ["Version ", selectedHistory.version]
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "text-xs text-muted-foreground",
                children: formatTimestamp(selectedHistory.appliedAt)
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "space-y-2",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h5", {
                className: "font-medium text-xs",
                children: "Summary"
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "grid grid-cols-2 gap-2 text-xs",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  children: ["Total Changes:", " ", selectedHistory.changes.summary.totalChanges]
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  children: ["Affected Categories:", " ", selectedHistory.changes.summary.affectedCategories.length]
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "space-y-1",
                children: Object.entries(selectedHistory.changes.summary.riskDistribution).map(([risk, count]) => {
                  /* istanbul ignore next */
                  cov_r5q73m3j7().f[13]++;
                  cov_r5q73m3j7().s[62]++;
                  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center justify-between text-xs",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                      className: getRiskColor(risk),
                      children: [risk, " risk:"]
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                      children: [count, " changes"]
                    })]
                  }, risk);
                })
              })]
            }),
            /* istanbul ignore next */
            (cov_r5q73m3j7().b[31][0]++, selectedHistory.performanceMetrics) &&
            /* istanbul ignore next */
            (cov_r5q73m3j7().b[31][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "space-y-2",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h5", {
                className: "font-medium text-xs",
                children: "Performance Impact"
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "grid grid-cols-2 gap-2 text-xs",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  children: ["Response Time:", " ", selectedHistory.performanceMetrics.responseTime.toFixed(0), "ms"]
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  children: ["Quality Score:", " ", (selectedHistory.performanceMetrics.qualityScore * 100).toFixed(0), "%"]
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  children: ["User Satisfaction:", " ", (selectedHistory.performanceMetrics.userSatisfaction * 100).toFixed(0), "%"]
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  children: ["Error Rate:", " ", (selectedHistory.performanceMetrics.errorRate * 100).toFixed(1), "%"]
                })]
              })]
            }))]
          })
        })]
      }))]
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
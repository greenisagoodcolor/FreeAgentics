{"version":3,"names":["_default","iconMap","cov_20q51annvu","s","Search","_lucidereact","ShoppingCart","BookOpen","Shield","Brain","categoryColors","researcher","student","expert","generalist","contrarian","AgentCreationModal","template","isOpen","onClose","f","dispatch","_hooks","useAppDispatch","agentName","setAgentName","_react","useState","showAdvanced","setShowAdvanced","parameters","setParameters","defaultParameters","generateSuggestedNames","adjectives","suffixes","name","Math","floor","random","length","handleCreate","_agentSlice","createAgent","templateId","id","b","parameterOverrides","undefined","IconComponent","icon","_jsxruntime","jsx","_dialog","Dialog","open","onOpenChange","jsxs","DialogContent","className","DialogHeader","DialogTitle","style","color","_framermotion","motion","div","backgroundColor","borderColor","whileHover","scale","transition","type","stiffness","_badge","Badge","variant","category","_label","Label","htmlFor","_input","Input","value","onChange","e","target","placeholder","map","index","_button","Button","size","onClick","_accordion","Accordion","collapsible","AccordionItem","AccordionTrigger","AccordionContent","responseThreshold","toFixed","_slider","Slider","onValueChange","prev","max","min","step","turnTakingProbability","conversationEngagement","AgentTemplateSelector","templates","useAppSelector","state","agents","selectedTemplate","setSelectedTemplate","handleQuickStart","quickStartAgents","Sparkles","scrollSnapType","scrollbarWidth","scrollbarColor","Object","values","scrollSnapAlign","y","whileTap","damping","border","Plus","opacity","duration","defaultBiography","slice","_card","Card","CardHeader","CardTitle","CardContent","defaultKnowledgeDomains","domain"],"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/components/dashboard/AgentTemplateSelector.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Search,\n  ShoppingCart,\n  BookOpen,\n  Shield,\n  Brain,\n  Plus,\n  Sparkles,\n} from \"lucide-react\";\nimport { useAppDispatch, useAppSelector } from \"@/store/hooks\";\nimport {\n  createAgent,\n  quickStartAgents,\n  AgentTemplate,\n} from \"@/store/slices/agentSlice\";\nimport { cn } from \"@/lib/utils\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/components/ui/accordion\";\nimport { Slider } from \"@/components/ui/slider\";\n\nconst iconMap = {\n  Search,\n  ShoppingCart,\n  BookOpen,\n  Shield,\n  Brain,\n};\n\nconst categoryColors = {\n  researcher: \"#10B981\",\n  student: \"#8B5CF6\",\n  expert: \"#3B82F6\",\n  generalist: \"#F59E0B\",\n  contrarian: \"#EF4444\",\n};\n\ninterface AgentCreationModalProps {\n  template: AgentTemplate;\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nconst AgentCreationModal: React.FC<AgentCreationModalProps> = ({\n  template,\n  isOpen,\n  onClose,\n}) => {\n  const dispatch = useAppDispatch();\n  const [agentName, setAgentName] = useState(\"\");\n  const [showAdvanced, setShowAdvanced] = useState(false);\n  const [parameters, setParameters] = useState(template.defaultParameters);\n\n  const generateSuggestedNames = (template: AgentTemplate) => {\n    const adjectives = [\"Swift\", \"Wise\", \"Bold\", \"Keen\", \"Sharp\"];\n    const suffixes = [\"Alpha\", \"Beta\", \"Prime\", \"Neo\", \"Core\"];\n    return [\n      `${template.name} ${Math.floor(Math.random() * 100)}`,\n      `${adjectives[Math.floor(Math.random() * adjectives.length)]} ${template.name}`,\n      `${template.name} ${suffixes[Math.floor(Math.random() * suffixes.length)]}`,\n    ];\n  };\n\n  const handleCreate = () => {\n    dispatch(\n      createAgent({\n        templateId: template.id,\n        name: agentName || `${template.name} 1`,\n        parameterOverrides: showAdvanced ? parameters : undefined,\n      }),\n    );\n    onClose();\n    setAgentName(\"\");\n    setShowAdvanced(false);\n    setParameters(template.defaultParameters);\n  };\n\n  const IconComponent = iconMap[template.icon as keyof typeof iconMap];\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-md bg-[var(--bg-secondary)] border-[var(--bg-tertiary)]\">\n        <DialogHeader>\n          <DialogTitle className=\"font-ui text-[var(--text-primary)] flex items-center gap-2\">\n            <IconComponent\n              className=\"w-5 h-5\"\n              style={{ color: template.color }}\n            />\n            Create {template.name}\n          </DialogTitle>\n        </DialogHeader>\n\n        <div className=\"space-y-6\">\n          {/* Template Preview */}\n          <motion.div\n            className=\"agent-card mx-auto relative\"\n            style={{\n              backgroundColor: template.color + \"20\",\n              borderColor: template.color,\n            }}\n            whileHover={{ scale: 1.05 }}\n            transition={{ type: \"spring\", stiffness: 300 }}\n          >\n            <div className=\"p-2 text-center\">\n              <div\n                className=\"w-12 h-12 mx-auto mb-2 rounded-full flex items-center justify-center\"\n                style={{ backgroundColor: template.color }}\n              >\n                <IconComponent className=\"w-6 h-6 text-white\" />\n              </div>\n              <div className=\"text-xs font-medium text-[var(--text-primary)] truncate\">\n                {agentName || `${template.name} 1`}\n              </div>\n              <Badge\n                variant=\"secondary\"\n                className=\"text-xs mt-1\"\n                style={{\n                  backgroundColor: template.color + \"30\",\n                  color: template.color,\n                }}\n              >\n                {template.category}\n              </Badge>\n            </div>\n          </motion.div>\n\n          {/* Agent Name */}\n          <div className=\"space-y-2\">\n            <Label\n              htmlFor=\"agentName\"\n              className=\"font-ui text-sm text-[var(--text-primary)]\"\n            >\n              Agent Name\n            </Label>\n            <Input\n              id=\"agentName\"\n              value={agentName}\n              onChange={(e) => setAgentName(e.target.value)}\n              placeholder={`${template.name} 1`}\n              className=\"bg-[var(--bg-tertiary)] border-[var(--bg-tertiary)] text-[var(--text-primary)]\"\n            />\n            <div className=\"flex gap-1 flex-wrap\">\n              {generateSuggestedNames(template).map((name, index) => (\n                <Button\n                  key={index}\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => setAgentName(name)}\n                  className=\"text-xs h-6 px-2 bg-[var(--bg-tertiary)] border-[var(--bg-tertiary)] hover:bg-[var(--accent-primary)]\"\n                >\n                  {name}\n                </Button>\n              ))}\n            </div>\n          </div>\n\n          {/* Advanced Settings */}\n          <Accordion type=\"single\" collapsible>\n            <AccordionItem\n              value=\"advanced\"\n              className=\"border-[var(--bg-tertiary)]\"\n            >\n              <AccordionTrigger\n                className=\"text-[var(--text-primary)] hover:text-[var(--accent-primary)]\"\n                onClick={() => setShowAdvanced(!showAdvanced)}\n              >\n                Advanced Settings\n              </AccordionTrigger>\n              <AccordionContent className=\"space-y-4\">\n                <div className=\"space-y-3\">\n                  <div>\n                    <Label className=\"text-sm text-[var(--text-secondary)]\">\n                      Response Threshold:{\" \"}\n                      {parameters.responseThreshold.toFixed(2)}\n                    </Label>\n                    <Slider\n                      value={[parameters.responseThreshold]}\n                      onValueChange={([value]) =>\n                        setParameters((prev) => ({\n                          ...prev,\n                          responseThreshold: value,\n                        }))\n                      }\n                      max={1}\n                      min={0}\n                      step={0.05}\n                      className=\"mt-2\"\n                    />\n                  </div>\n                  <div>\n                    <Label className=\"text-sm text-[var(--text-secondary)]\">\n                      Turn-taking Probability:{\" \"}\n                      {parameters.turnTakingProbability.toFixed(2)}\n                    </Label>\n                    <Slider\n                      value={[parameters.turnTakingProbability]}\n                      onValueChange={([value]) =>\n                        setParameters((prev) => ({\n                          ...prev,\n                          turnTakingProbability: value,\n                        }))\n                      }\n                      max={1}\n                      min={0}\n                      step={0.05}\n                      className=\"mt-2\"\n                    />\n                  </div>\n                  <div>\n                    <Label className=\"text-sm text-[var(--text-secondary)]\">\n                      Conversation Engagement:{\" \"}\n                      {parameters.conversationEngagement.toFixed(2)}\n                    </Label>\n                    <Slider\n                      value={[parameters.conversationEngagement]}\n                      onValueChange={([value]) =>\n                        setParameters((prev) => ({\n                          ...prev,\n                          conversationEngagement: value,\n                        }))\n                      }\n                      max={1}\n                      min={0}\n                      step={0.05}\n                      className=\"mt-2\"\n                    />\n                  </div>\n                </div>\n              </AccordionContent>\n            </AccordionItem>\n          </Accordion>\n\n          {/* Action Buttons */}\n          <div className=\"flex gap-2\">\n            <Button\n              onClick={onClose}\n              variant=\"outline\"\n              className=\"flex-1 bg-[var(--bg-tertiary)] border-[var(--bg-tertiary)] hover:bg-[var(--bg-tertiary)]\"\n            >\n              Cancel\n            </Button>\n            <Button onClick={handleCreate} className=\"flex-1 btn-primary\">\n              Create Agent\n            </Button>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst AgentTemplateSelector: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const templates = useAppSelector((state) => state.agents.templates);\n  const [selectedTemplate, setSelectedTemplate] =\n    useState<AgentTemplate | null>(null);\n\n  const handleQuickStart = () => {\n    dispatch(quickStartAgents());\n  };\n\n  return (\n    <div className=\"p-6 space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h2 className=\"font-ui text-xl font-semibold text-[var(--text-primary)]\">\n            Agent Templates\n          </h2>\n          <p className=\"font-ui text-sm text-[var(--text-secondary)] mt-1\">\n            Create agents using pre-configured templates\n          </p>\n        </div>\n        <Button\n          onClick={handleQuickStart}\n          className=\"btn-primary flex items-center gap-2\"\n        >\n          <Sparkles className=\"w-4 h-4\" />\n          Quick Start\n        </Button>\n      </div>\n\n      {/* Template Selector - Horizontal Scrollable */}\n      <div className=\"relative\">\n        <div\n          className=\"flex gap-4 overflow-x-auto pb-4 scroll-smooth\"\n          style={{\n            scrollSnapType: \"x mandatory\",\n            scrollbarWidth: \"thin\",\n            scrollbarColor: \"var(--bg-tertiary) transparent\",\n          }}\n        >\n          {Object.values(templates).map((template) => {\n            const IconComponent =\n              iconMap[template.icon as keyof typeof iconMap];\n\n            return (\n              <motion.div\n                key={template.id}\n                className=\"agent-card flex-shrink-0 cursor-pointer relative overflow-hidden\"\n                style={{ scrollSnapAlign: \"start\" }}\n                whileHover={{ y: -4, scale: 1.02 }}\n                whileTap={{ scale: 0.98 }}\n                onClick={() => setSelectedTemplate(template)}\n                transition={{ type: \"spring\", stiffness: 300, damping: 20 }}\n              >\n                {/* Card Content */}\n                <div className=\"p-3 h-full flex flex-col items-center justify-between\">\n                  {/* Icon */}\n                  <div\n                    className=\"w-12 h-12 rounded-full flex items-center justify-center mb-2\"\n                    style={{ backgroundColor: template.color }}\n                  >\n                    <IconComponent className=\"w-6 h-6 text-white\" />\n                  </div>\n\n                  {/* Name */}\n                  <div className=\"text-center flex-1\">\n                    <div className=\"font-ui text-sm font-medium text-[var(--text-primary)] mb-1\">\n                      {template.name}\n                    </div>\n                    <Badge\n                      variant=\"secondary\"\n                      className=\"text-xs\"\n                      style={{\n                        backgroundColor: template.color + \"20\",\n                        color: template.color,\n                        border: `1px solid ${template.color}40`,\n                      }}\n                    >\n                      {template.category}\n                    </Badge>\n                  </div>\n\n                  {/* Add Button */}\n                  <motion.div\n                    className=\"mt-2\"\n                    whileHover={{ scale: 1.1 }}\n                    whileTap={{ scale: 0.9 }}\n                  >\n                    <div\n                      className=\"w-6 h-6 rounded-full flex items-center justify-center border-2\"\n                      style={{\n                        borderColor: template.color,\n                        backgroundColor: template.color + \"20\",\n                      }}\n                    >\n                      <Plus\n                        className=\"w-3 h-3\"\n                        style={{ color: template.color }}\n                      />\n                    </div>\n                  </motion.div>\n                </div>\n\n                {/* Hover Overlay */}\n                <motion.div\n                  className=\"absolute inset-0 bg-gradient-to-t from-black/60 to-transparent opacity-0 flex items-end p-2\"\n                  whileHover={{ opacity: 1 }}\n                  transition={{ duration: 0.2 }}\n                >\n                  <div className=\"text-xs text-white text-center w-full\">\n                    {template.defaultBiography.slice(0, 60)}...\n                  </div>\n                </motion.div>\n              </motion.div>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Template Details */}\n      <div className=\"grid grid-cols-1 gap-4\">\n        {Object.values(templates).map((template) => {\n          const IconComponent = iconMap[template.icon as keyof typeof iconMap];\n\n          return (\n            <Card\n              key={template.id}\n              className=\"bg-[var(--bg-secondary)] border-[var(--bg-tertiary)]\"\n            >\n              <CardHeader className=\"pb-3\">\n                <CardTitle className=\"flex items-center gap-3 text-[var(--text-primary)]\">\n                  <IconComponent\n                    className=\"w-5 h-5\"\n                    style={{ color: template.color }}\n                  />\n                  {template.name}\n                  <Badge\n                    variant=\"secondary\"\n                    style={{\n                      backgroundColor: template.color + \"20\",\n                      color: template.color,\n                    }}\n                  >\n                    {template.category}\n                  </Badge>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-3\">\n                <p className=\"text-sm text-[var(--text-secondary)] leading-relaxed\">\n                  {template.defaultBiography}\n                </p>\n                <div className=\"flex flex-wrap gap-1\">\n                  {template.defaultKnowledgeDomains.map((domain, index) => (\n                    <Badge\n                      key={index}\n                      variant=\"outline\"\n                      className=\"text-xs bg-[var(--bg-tertiary)] border-[var(--bg-tertiary)] text-[var(--text-secondary)]\"\n                    >\n                      {domain}\n                    </Badge>\n                  ))}\n                </div>\n                <div className=\"flex justify-end\">\n                  <Button\n                    onClick={() => setSelectedTemplate(template)}\n                    size=\"sm\"\n                    className=\"btn-primary\"\n                  >\n                    Create {template.name}\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n          );\n        })}\n      </div>\n\n      {/* Agent Creation Modal */}\n      {selectedTemplate && (\n        <AgentCreationModal\n          template={selectedTemplate}\n          isOpen={!!selectedTemplate}\n          onClose={() => setSelectedTemplate(null)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default AgentTemplateSelector;\n"],"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","ignoreList":[]}
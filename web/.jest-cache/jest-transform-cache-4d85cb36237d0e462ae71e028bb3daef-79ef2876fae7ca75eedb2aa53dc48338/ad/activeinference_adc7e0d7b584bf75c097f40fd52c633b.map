{"version":3,"names":["cov_ineumuc8z","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","calculateEpistemic","calculateExpectedFreeEnergy","calculatePragmatic","createActiveInferenceEngine","evaluateActionPolicy","minimizeVariationalFreeEnergy","performInference","predictSensoryOutcomes","selectAction","updateBeliefs","EPSILON","config","model","states","length","observations","actions","Error","Object","keys","transitionModel","uniformProb","initialBeliefs","uncertainty","forEach","state","engine","precision","learningRate","planningHorizon","actionConstraints","beliefs","actionHistory","getCurrentBeliefs","setBeliefs","calculateFreeEnergy","observation","accuracy","entries","prob","likelihood","observationModel","Math","log","complexity","prior","values","preference","preferences","cost","uncertaintyPenalty","freeEnergy","max","currentBeliefs","updatedBeliefs","totalPosterior","value","posterior","confidence","entropy","reduce","h","p","bestAction","minExpectedFE","Infinity","actionScores","actionCounts","action","frequency","maxFrequency","expectedFE","epistemic","pragmatic","recentActions","slice","actionFrequency","filter","a","varietyPenalty","scores","avgScore","exp","abs","push","min","selectedAction","beliefCertainty","overallConfidence","policy","totalEFE","totalEpistemic","totalPragmatic","step","finiteEpistemic","Number","isFinite","finitePragmatic","pow","timestep","predictBeliefEvolution","total","informationGain","currentEntropy","expectedEntropy","predictedBeliefs","explorationBonus","result","expectedPreference","predictions","outcome","contribution","options","maxIter","maxIterations","tolerance","prevFE","converged","iterations","gradient","delta","beliefsCopy","sum","fePlus","changed","update","newBelief","currentFE","obs","currentState","stateProb","transitions","nextState","transProb","obsProb","expectedReturn","totalUncertainty","feasibility","t","immediateReturn","includes","evolved","actionUncertaintyEffect"],"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/lib/active-inference.ts"],"sourcesContent":["/**\n * Active Inference Implementation\n *\n * Core implementation for active inference, free energy minimization,\n * and belief updating based on the Free Energy Principle.\n */\n\nexport interface GenerativeModel {\n  states: string[];\n  observations: string[];\n  actions: string[];\n  transitionModel: Record<string, Record<string, Record<string, number>>>;\n  observationModel: Record<string, Record<string, number>>;\n  preferences: Record<string, number>;\n}\n\nexport interface Beliefs {\n  states: Record<string, number>;\n  uncertainty: number;\n  converged?: boolean;\n  iterations?: number;\n}\n\nexport interface SensoryInput {\n  type: string;\n  value: string;\n  confidence: number;\n}\n\nexport interface Action {\n  type: string;\n  confidence: number;\n  expectedOutcome?: string;\n}\n\nexport type Policy = Array<{\n  action: string;\n  timestep: number;\n}>;\n\nexport interface ActiveInferenceConfig {\n  model: GenerativeModel;\n  precision?: number;\n  learningRate?: number;\n  planningHorizon?: number;\n  actionConstraints?: Record<string, { maxFrequency: number }>;\n}\n\nexport interface ActiveInferenceEngine {\n  model: GenerativeModel;\n  precision: number;\n  learningRate: number;\n  planningHorizon: number;\n  actionConstraints?: Record<string, { maxFrequency: number }>;\n  beliefs: Beliefs;\n  actionHistory: string[];\n  getCurrentBeliefs: () => Beliefs;\n  setBeliefs: (beliefs: Beliefs) => void;\n  calculateFreeEnergy: (beliefs: Beliefs, observation: string) => number;\n}\n\nexport interface InferenceResult {\n  beliefs: Beliefs;\n  selectedAction: Action;\n  freeEnergy: number;\n  confidence: number;\n}\n\nexport interface ExpectedFreeEnergy {\n  total: number;\n  epistemic: number;\n  pragmatic: number;\n}\n\nexport interface PolicyEvaluation {\n  expectedReturn: number;\n  uncertainty: number;\n  feasibility: number;\n}\n\nconst EPSILON = 1e-10;\n\nexport function createActiveInferenceEngine(\n  config: ActiveInferenceConfig,\n): ActiveInferenceEngine {\n  // Validate model\n  if (\n    !config.model.states.length ||\n    !config.model.observations.length ||\n    !config.model.actions.length\n  ) {\n    throw new Error(\n      \"Invalid generative model: missing states, observations, or actions\",\n    );\n  }\n\n  if (Object.keys(config.model.transitionModel).length === 0) {\n    throw new Error(\"Invalid generative model: empty transition model\");\n  }\n\n  // Initialize uniform beliefs\n  const uniformProb = 1.0 / config.model.states.length;\n  const initialBeliefs: Beliefs = {\n    states: {},\n    uncertainty: 1.0,\n  };\n\n  config.model.states.forEach((state) => {\n    initialBeliefs.states[state] = uniformProb;\n  });\n\n  const engine: ActiveInferenceEngine = {\n    model: config.model,\n    precision: config.precision || 1.0,\n    learningRate: config.learningRate || 0.1,\n    planningHorizon: config.planningHorizon || 3,\n    actionConstraints: config.actionConstraints,\n    beliefs: initialBeliefs,\n    actionHistory: [],\n\n    getCurrentBeliefs: function () {\n      return { ...this.beliefs };\n    },\n\n    setBeliefs: function (beliefs: Beliefs) {\n      this.beliefs = { ...beliefs };\n    },\n\n    calculateFreeEnergy: function (beliefs: Beliefs, observation: string) {\n      // Accuracy term (expected log likelihood)\n      let accuracy = 0;\n      Object.entries(beliefs.states).forEach(([state, prob]) => {\n        const likelihood =\n          this.model.observationModel[state]?.[observation] || EPSILON;\n        accuracy += prob * Math.log(likelihood + EPSILON);\n      });\n\n      // Complexity term (KL divergence from prior)\n      let complexity = 0;\n      const prior = 1.0 / this.model.states.length;\n      Object.values(beliefs.states).forEach((prob) => {\n        if (prob > 0) {\n          complexity += prob * Math.log((prob + EPSILON) / prior);\n        }\n      });\n\n      // Convert preference to a positive cost term\n      // Negative preferences (rewards) become positive costs\n      const preference = this.model.preferences[observation] || 0;\n      const cost = -preference; // Convert reward to cost\n\n      // Add uncertainty term\n      const uncertaintyPenalty = beliefs.uncertainty * 2.0;\n\n      // Free energy = -log likelihood + complexity + cost + uncertainty\n      const freeEnergy = -accuracy + complexity + cost + uncertaintyPenalty;\n\n      // Ensure free energy is positive by adding a constant if needed\n      return Math.max(0.01, freeEnergy);\n    },\n  };\n\n  return engine;\n}\n\nexport function updateBeliefs(\n  engine: ActiveInferenceEngine,\n  observation: SensoryInput,\n): Beliefs {\n  const currentBeliefs = engine.getCurrentBeliefs();\n  const updatedBeliefs: Beliefs = {\n    states: {},\n    uncertainty: currentBeliefs.uncertainty,\n  };\n\n  // Standard Bayesian belief update\n  let totalPosterior = 0;\n\n  engine.model.states.forEach((state) => {\n    const prior = currentBeliefs.states[state];\n    const likelihood =\n      engine.model.observationModel[state]?.[observation.value] || EPSILON;\n\n    const posterior = prior * likelihood;\n    updatedBeliefs.states[state] = posterior;\n    totalPosterior += posterior;\n  });\n\n  // Normalize to get standard Bayesian posterior\n  Object.keys(updatedBeliefs.states).forEach((state) => {\n    updatedBeliefs.states[state] /= totalPosterior;\n  });\n\n  // Apply confidence weighting by interpolating between prior and posterior\n  Object.keys(updatedBeliefs.states).forEach((state) => {\n    const prior = currentBeliefs.states[state];\n    const posterior = updatedBeliefs.states[state];\n    \n    // High confidence = use more of posterior, low confidence = use more of prior\n    updatedBeliefs.states[state] = \n      observation.confidence * posterior + \n      (1 - observation.confidence) * prior;\n  });\n\n  // Update uncertainty based on observation confidence and belief entropy\n  const entropy = Object.values(updatedBeliefs.states).reduce((h, p) => {\n    return p > 0 ? h - p * Math.log(p + EPSILON) : h;\n  }, 0);\n\n  updatedBeliefs.uncertainty =\n    (1 - observation.confidence) * 0.3 + entropy * 0.7;\n\n  // Don't modify engine state, just return the updated beliefs\n  return updatedBeliefs;\n}\n\nexport function selectAction(\n  engine: ActiveInferenceEngine,\n  beliefs: Beliefs,\n): Action {\n  let bestAction = \"\";\n  let minExpectedFE = Infinity;\n  const actionScores: Record<string, number> = {};\n\n  // Check action constraints\n  const actionCounts: Record<string, number> = {};\n  engine.actionHistory.forEach((action) => {\n    actionCounts[action] = (actionCounts[action] || 0) + 1;\n  });\n\n  engine.model.actions.forEach((action) => {\n    // Check constraints\n    if (engine.actionConstraints?.[action]) {\n      const frequency =\n        (actionCounts[action] || 0) / Math.max(engine.actionHistory.length, 1);\n      if (frequency >= engine.actionConstraints[action].maxFrequency) {\n        actionScores[action] = Infinity;\n        return;\n      }\n    }\n\n    // Calculate expected free energy for this action\n    let expectedFE = 0;\n\n    // Epistemic value (information gain)\n    const epistemic = calculateEpistemic(engine, beliefs, action);\n\n    // Pragmatic value (goal achievement)\n    const pragmatic = calculatePragmatic(engine, beliefs, action);\n\n    // Combine with precision weighting\n    expectedFE = engine.precision * pragmatic - epistemic;\n\n    // Add exploration bonus under high uncertainty\n    if (beliefs.uncertainty > 0.5 && action !== \"wait\") {\n      expectedFE -= beliefs.uncertainty * 0.5;\n    }\n\n    // Add action variety bonus to prevent getting stuck\n    const recentActions = engine.actionHistory.slice(-5);\n    const actionFrequency = recentActions.filter(a => a === action).length / Math.max(recentActions.length, 1);\n    const varietyPenalty = actionFrequency * 2.0; // Penalize repetitive actions\n    expectedFE += varietyPenalty;\n\n    actionScores[action] = expectedFE;\n\n    if (expectedFE < minExpectedFE) {\n      minExpectedFE = expectedFE;\n      bestAction = action;\n    }\n  });\n\n  // Calculate action confidence based on score differences\n  const scores = Object.values(actionScores).filter((s) => s !== Infinity);\n  const avgScore = scores.reduce((a, b) => a + b, 0) / scores.length;\n  const confidence = Math.exp(-Math.abs(minExpectedFE - avgScore));\n\n  engine.actionHistory.push(bestAction);\n\n  return {\n    type: bestAction,\n    confidence: Math.min(Math.max(confidence, 0.1), 1.0),\n  };\n}\n\nexport async function performInference(\n  engine: ActiveInferenceEngine,\n  observation: SensoryInput,\n): Promise<InferenceResult> {\n  // Update beliefs based on observation\n  const updatedBeliefs = updateBeliefs(engine, observation);\n\n  // Update the engine's beliefs for persistence across inferences\n  engine.setBeliefs(updatedBeliefs);\n\n  // Calculate current free energy\n  const freeEnergy = engine.calculateFreeEnergy(\n    updatedBeliefs,\n    observation.value,\n  );\n\n  // Select action that minimizes expected free energy\n  const selectedAction = selectAction(engine, updatedBeliefs);\n\n  // Overall confidence based on belief certainty and action confidence\n  const beliefCertainty = Math.max(...Object.values(updatedBeliefs.states));\n  const overallConfidence = (beliefCertainty + selectedAction.confidence) / 2;\n\n  return {\n    beliefs: updatedBeliefs,\n    selectedAction,\n    freeEnergy,\n    confidence: overallConfidence,\n  };\n}\n\nexport function calculateExpectedFreeEnergy(\n  engine: ActiveInferenceEngine,\n  policy: Policy,\n): ExpectedFreeEnergy {\n  let totalEFE = 0;\n  let totalEpistemic = 0;\n  let totalPragmatic = 0;\n\n  // Start with current beliefs\n  let beliefs = engine.getCurrentBeliefs();\n\n  policy.forEach((step) => {\n    const epistemic = calculateEpistemic(engine, beliefs, step.action);\n    const pragmatic = calculatePragmatic(engine, beliefs, step.action);\n\n    // Ensure finite values\n    const finiteEpistemic = Number.isFinite(epistemic) ? epistemic : 0;\n    const finitePragmatic = Number.isFinite(pragmatic) ? pragmatic : 0;\n\n    totalEpistemic += finiteEpistemic * Math.pow(0.9, step.timestep); // Discount future\n    totalPragmatic += finitePragmatic * Math.pow(0.9, step.timestep);\n\n    // Predict belief evolution\n    beliefs = predictBeliefEvolution(engine, beliefs, step.action);\n  });\n\n  totalEFE = engine.precision * totalPragmatic - totalEpistemic;\n\n  // Ensure all values are finite\n  return {\n    total: Number.isFinite(totalEFE) ? totalEFE : 0,\n    epistemic: Number.isFinite(totalEpistemic) ? totalEpistemic : 0,\n    pragmatic: Number.isFinite(totalPragmatic) ? totalPragmatic : 0,\n  };\n}\n\nexport function calculateEpistemic(\n  engine: ActiveInferenceEngine,\n  beliefs: Beliefs,\n  action: string,\n): number {\n  // Information gain: reduction in uncertainty about states\n  let informationGain = 0;\n\n  // Current entropy\n  const currentEntropy = Object.values(beliefs.states).reduce((h, p) => {\n    return p > 0 ? h - p * Math.log(p + EPSILON) : h;\n  }, 0);\n\n  // Expected entropy after action\n  let expectedEntropy = 0;\n  const predictedBeliefs = predictBeliefEvolution(engine, beliefs, action);\n\n  expectedEntropy = Object.values(predictedBeliefs.states).reduce((h, p) => {\n    return p > 0 ? h - p * Math.log(p + EPSILON) : h;\n  }, 0);\n\n  informationGain = currentEntropy - expectedEntropy;\n\n  // Add exploration bonus for uncertain states\n  const explorationBonus = beliefs.uncertainty * 0.3;\n\n  const result = Math.max(0, informationGain + explorationBonus);\n  \n  // Ensure finite result\n  return Number.isFinite(result) ? result : 0;\n}\n\nexport function calculatePragmatic(\n  engine: ActiveInferenceEngine,\n  beliefs: Beliefs,\n  action: string,\n): number {\n  // Expected preference satisfaction\n  let expectedPreference = 0;\n\n  // Predict outcomes for this action\n  const predictions = predictSensoryOutcomes(engine, beliefs, action);\n\n  Object.entries(predictions).forEach(([outcome, prob]) => {\n    const preference = engine.model.preferences[outcome] || 0;\n    const contribution = prob * preference;\n    \n    // Only add finite contributions\n    if (Number.isFinite(contribution)) {\n      expectedPreference += contribution;\n    }\n  });\n\n  // Ensure finite result\n  return Number.isFinite(expectedPreference) ? expectedPreference : 0;\n}\n\nexport async function minimizeVariationalFreeEnergy(\n  engine: ActiveInferenceEngine,\n  initialBeliefs: Beliefs,\n  observation: string,\n  options?: { maxIterations?: number; tolerance?: number },\n): Promise<Beliefs> {\n  const maxIter = options?.maxIterations || 100;\n  const tolerance = options?.tolerance || 0.001;\n\n  let beliefs = { ...initialBeliefs };\n  let prevFE = engine.calculateFreeEnergy(beliefs, observation);\n  let converged = false;\n  let iterations = 0;\n\n  while (iterations < maxIter && !converged) {\n    // Gradient descent on beliefs\n    const gradient: Record<string, number> = {};\n    const delta = 0.001;\n\n    engine.model.states.forEach((state) => {\n      // Finite difference approximation\n      const beliefsCopy = { ...beliefs };\n      beliefsCopy.states[state] = Math.min(beliefs.states[state] + delta, 1);\n\n      // Renormalize\n      const sum = Object.values(beliefsCopy.states).reduce((s, p) => s + p, 0);\n      Object.keys(beliefsCopy.states).forEach((s) => {\n        beliefsCopy.states[s] /= sum;\n      });\n\n      const fePlus = engine.calculateFreeEnergy(beliefsCopy, observation);\n      gradient[state] = (fePlus - prevFE) / delta;\n    });\n\n    // Update beliefs\n    let changed = false;\n    engine.model.states.forEach((state) => {\n      const update = -gradient[state] * engine.learningRate;\n      const newBelief = Math.max(\n        0,\n        Math.min(1, beliefs.states[state] + update),\n      );\n\n      if (Math.abs(newBelief - beliefs.states[state]) > tolerance) {\n        changed = true;\n      }\n\n      beliefs.states[state] = newBelief;\n    });\n\n    // Renormalize\n    const sum = Object.values(beliefs.states).reduce((s, p) => s + p, 0);\n    Object.keys(beliefs.states).forEach((state) => {\n      beliefs.states[state] /= sum;\n    });\n\n    // Check convergence\n    const currentFE = engine.calculateFreeEnergy(beliefs, observation);\n    if (!changed || Math.abs(currentFE - prevFE) < tolerance) {\n      converged = true;\n    }\n\n    prevFE = currentFE;\n    iterations++;\n  }\n\n  return {\n    ...beliefs,\n    converged,\n    iterations,\n  };\n}\n\nexport function predictSensoryOutcomes(\n  engine: ActiveInferenceEngine,\n  beliefs: Beliefs,\n  action: string,\n): Record<string, number> {\n  const predictions: Record<string, number> = {};\n\n  // Initialize predictions\n  engine.model.observations.forEach((obs) => {\n    predictions[obs] = 0;\n  });\n\n  // For each current state\n  Object.entries(beliefs.states).forEach(([currentState, stateProb]) => {\n    // Get transition probabilities for this action\n    const transitions =\n      engine.model.transitionModel[currentState]?.[action] || {};\n\n    // For each possible next state\n    Object.entries(transitions).forEach(([nextState, transProb]) => {\n      // Get observation probabilities for next state\n      const observations = engine.model.observationModel[nextState] || {};\n\n      // Accumulate prediction\n      Object.entries(observations).forEach(([obs, obsProb]) => {\n        predictions[obs] += stateProb * transProb * obsProb;\n      });\n    });\n  });\n\n  return predictions;\n}\n\nexport function evaluateActionPolicy(\n  engine: ActiveInferenceEngine,\n  policy: Policy,\n): PolicyEvaluation {\n  let expectedReturn = 0;\n  let totalUncertainty = 0;\n  let feasibility = 1.0;\n\n  let beliefs = engine.getCurrentBeliefs();\n\n  policy.forEach((step, t) => {\n    // Expected immediate reward\n    const predictions = predictSensoryOutcomes(engine, beliefs, step.action);\n    const immediateReturn = Object.entries(predictions).reduce(\n      (sum, [outcome, prob]) => {\n        const preference = engine.model.preferences[outcome] || 0;\n        return sum - prob * preference; // Negative because lower is better\n      },\n      0,\n    );\n\n    expectedReturn += immediateReturn * Math.pow(0.9, t);\n\n    // Accumulate uncertainty\n    totalUncertainty += beliefs.uncertainty * Math.pow(0.9, t);\n\n    // Check action feasibility\n    if (!engine.model.actions.includes(step.action)) {\n      feasibility *= 0.1;\n    }\n\n    // Evolve beliefs\n    beliefs = predictBeliefEvolution(engine, beliefs, step.action);\n  });\n\n  return {\n    expectedReturn,\n    uncertainty: totalUncertainty / policy.length,\n    feasibility,\n  };\n}\n\n// Helper function to predict belief evolution\nfunction predictBeliefEvolution(\n  engine: ActiveInferenceEngine,\n  beliefs: Beliefs,\n  action: string,\n): Beliefs {\n  const evolved: Beliefs = {\n    states: {},\n    uncertainty: beliefs.uncertainty,\n  };\n\n  // Initialize\n  engine.model.states.forEach((state) => {\n    evolved.states[state] = 0;\n  });\n\n  // Predict state evolution\n  Object.entries(beliefs.states).forEach(([currentState, prob]) => {\n    const transitions =\n      engine.model.transitionModel[currentState]?.[action] || {};\n\n    Object.entries(transitions).forEach(([nextState, transProb]) => {\n      evolved.states[nextState] += prob * transProb;\n    });\n  });\n\n  // Calculate uncertainty based on belief entropy and action effects\n  const entropy = Object.values(evolved.states).reduce((h, p) => {\n    return p > 0 ? h - p * Math.log(p + EPSILON) : h;\n  }, 0);\n\n  // Different actions affect uncertainty differently\n  let actionUncertaintyEffect = 1.0;\n  switch (action) {\n    case \"wait\":\n      actionUncertaintyEffect = 1.2; // Waiting increases uncertainty\n      break;\n    case \"move_forward\":\n      actionUncertaintyEffect = 0.9; // Moving reduces uncertainty through exploration\n      break;\n    case \"turn\":\n      actionUncertaintyEffect = 0.8; // Turning provides more information\n      break;\n    default:\n      actionUncertaintyEffect = 1.1;\n  }\n\n  // Update uncertainty based on entropy and action effects\n  evolved.uncertainty = Math.min(1.0, Math.max(0.1, \n    beliefs.uncertainty * actionUncertaintyEffect + entropy * 0.1\n  ));\n\n  return evolved;\n}\n"],"mappings":"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","ignoreList":[]}
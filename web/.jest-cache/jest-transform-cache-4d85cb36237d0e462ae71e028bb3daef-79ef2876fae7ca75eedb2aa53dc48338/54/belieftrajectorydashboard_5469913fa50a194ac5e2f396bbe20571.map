{"version":3,"names":["cov_178h7ytomn","actualCoverage","s","BeliefTrajectoryDashboard","f","default","_default","trajectoryData","agentId","realTimeUpdates","b","exportEnabled","svgRef","_react","useRef","selectedMetric","setSelectedMetric","useState","showDecisionPoints","setShowDecisionPoints","selectedTrajectoryPoint","setSelectedTrajectoryPoint","useEffect","current","length","svg","_d3","select","selectAll","remove","width","height","margin","top","right","bottom","left","innerWidth","innerHeight","g","append","attr","timeExtent","extent","d","Date","timestamp","xScale","scaleTime","domain","range","yExtent","yScale","scaleLinear","line","x","y","curve","curveMonotoneX","area","y0","value","confidence","confidence_level","Math","abs","y1","datum","decisionPoints","filter","decision_point","data","enter","style","on","event","text","action_taken","substring","xAxis","axisBottom","tickFormat","timeFormat","yAxis","axisLeft","toFixed","call","replace","l","toUpperCase","exportTrajectoryData","exportData","agent_id","trajectory_data","export_timestamp","toISOString","analysis_parameters","selected_metric","show_decision_points","blob","Blob","JSON","stringify","type","url","URL","createObjectURL","a","document","createElement","href","download","slice","body","appendChild","click","removeChild","revokeObjectURL","formatNumber","precision","toExponential","_jsxruntime","jsx","className","jsxs","_card","Card","CardHeader","CardTitle","_badge","Badge","variant","CardContent","onChange","e","target","checked","_button","Button","onClick","size","ref","border","toLocaleString","free_energy","entropy","convergence_metric","action_value","decision_confidence","reasoning","numerical_precision","sum_check","numerical_stability","condition_number","precision_error","reduce","sum","p","getTime"],"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/components/belief-trajectory-dashboard.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"./ui/card\";\nimport { Button } from \"./ui/button\";\nimport { Badge } from \"./ui/badge\";\n\n/**\n * Historical Belief Trajectory Analysis and Dashboard Component\n *\n * Temporal visualization of belief state evolution with decision point annotations\n * and comprehensive mathematical validation dashboard.\n *\n * Implements Task 37.5 requirements for temporal analysis and scientific reporting.\n */\n\ninterface BeliefTrajectoryPoint {\n  timestamp: string;\n  agent_id: string;\n  belief_distribution: number[];\n  free_energy: number;\n  entropy: number;\n  convergence_metric: number;\n  confidence_level: number;\n  decision_point?: {\n    action_taken: string;\n    action_value: number;\n    decision_confidence: number;\n    reasoning: string;\n  };\n  numerical_precision: {\n    sum_check: number;\n    numerical_stability: number;\n    condition_number: number;\n    precision_error: number;\n  };\n}\n\ninterface BeliefTrajectoryDashboardProps {\n  trajectoryData: BeliefTrajectoryPoint[];\n  agentId: string;\n  realTimeUpdates?: boolean;\n  exportEnabled?: boolean;\n}\n\nexport const BeliefTrajectoryDashboard: React.FC<\n  BeliefTrajectoryDashboardProps\n> = ({\n  trajectoryData,\n  agentId,\n  realTimeUpdates = true,\n  exportEnabled = true,\n}) => {\n  const svgRef = useRef<SVGSVGElement>(null);\n  const [selectedMetric, setSelectedMetric] = useState<string>(\"free_energy\");\n  const [showDecisionPoints, setShowDecisionPoints] = useState(true);\n  const [selectedTrajectoryPoint, setSelectedTrajectoryPoint] =\n    useState<BeliefTrajectoryPoint | null>(null);\n\n  // Main trajectory visualization using D3.js\n  useEffect(() => {\n    if (!svgRef.current || !trajectoryData.length) return;\n\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n\n    const width = 800;\n    const height = 400;\n    const margin = { top: 20, right: 80, bottom: 60, left: 80 };\n    const innerWidth = width - margin.left - margin.right;\n    const innerHeight = height - margin.top - margin.bottom;\n\n    const g = svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n    // Create scales\n    const timeExtent = d3.extent(\n      trajectoryData,\n      (d) => new Date(d.timestamp),\n    ) as [Date, Date];\n    const xScale = d3.scaleTime().domain(timeExtent).range([0, innerWidth]);\n\n    const yExtent = d3.extent(\n      trajectoryData,\n      (d) => d[selectedMetric as keyof BeliefTrajectoryPoint] as number,\n    ) as [number, number];\n    const yScale = d3.scaleLinear().domain(yExtent).range([innerHeight, 0]);\n\n    // Create line generator\n    const line = d3\n      .line<BeliefTrajectoryPoint>()\n      .x((d) => xScale(new Date(d.timestamp)))\n      .y((d) =>\n        yScale(d[selectedMetric as keyof BeliefTrajectoryPoint] as number),\n      )\n      .curve(d3.curveMonotoneX);\n\n    // Draw confidence band\n    const area = d3\n      .area<BeliefTrajectoryPoint>()\n      .x((d) => xScale(new Date(d.timestamp)))\n      .y0((d) => {\n        const value = d[\n          selectedMetric as keyof BeliefTrajectoryPoint\n        ] as number;\n        const confidence = d.confidence_level;\n        return yScale(value - (1 - confidence) * Math.abs(value));\n      })\n      .y1((d) => {\n        const value = d[\n          selectedMetric as keyof BeliefTrajectoryPoint\n        ] as number;\n        const confidence = d.confidence_level;\n        return yScale(value + (1 - confidence) * Math.abs(value));\n      })\n      .curve(d3.curveMonotoneX);\n\n    g.append(\"path\")\n      .datum(trajectoryData)\n      .attr(\"class\", \"confidence-band\")\n      .attr(\"d\", area)\n      .attr(\"fill\", \"#4f46e5\")\n      .attr(\"opacity\", 0.2);\n\n    // Draw main trajectory line\n    g.append(\"path\")\n      .datum(trajectoryData)\n      .attr(\"class\", \"trajectory-line\")\n      .attr(\"d\", line)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"#4f46e5\")\n      .attr(\"stroke-width\", 2);\n\n    // Add decision points\n    if (showDecisionPoints) {\n      const decisionPoints = trajectoryData.filter((d) => d.decision_point);\n\n      g.selectAll(\".decision-point\")\n        .data(decisionPoints)\n        .enter()\n        .append(\"circle\")\n        .attr(\"class\", \"decision-point\")\n        .attr(\"cx\", (d) => xScale(new Date(d.timestamp)))\n        .attr(\"cy\", (d) =>\n          yScale(d[selectedMetric as keyof BeliefTrajectoryPoint] as number),\n        )\n        .attr(\"r\", 6)\n        .attr(\"fill\", \"#ef4444\")\n        .attr(\"stroke\", \"#dc2626\")\n        .attr(\"stroke-width\", 2)\n        .style(\"cursor\", \"pointer\")\n        .on(\"click\", function (event, d) {\n          setSelectedTrajectoryPoint(d);\n        });\n\n      // Add decision annotations\n      g.selectAll(\".decision-annotation\")\n        .data(decisionPoints)\n        .enter()\n        .append(\"text\")\n        .attr(\"class\", \"decision-annotation\")\n        .attr(\"x\", (d) => xScale(new Date(d.timestamp)))\n        .attr(\n          \"y\",\n          (d) =>\n            yScale(d[selectedMetric as keyof BeliefTrajectoryPoint] as number) -\n            15,\n        )\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"font-size\", \"10px\")\n        .attr(\"font-weight\", \"bold\")\n        .attr(\"fill\", \"#ef4444\")\n        .text((d) => d.decision_point!.action_taken.substring(0, 8));\n    }\n\n    // Add axes\n    const xAxis = d3\n      .axisBottom(xScale)\n      .tickFormat(d3.timeFormat(\"%H:%M:%S\") as any);\n    const yAxis = d3\n      .axisLeft(yScale)\n      .tickFormat((d) => (d as number).toFixed(3));\n\n    g.append(\"g\")\n      .attr(\"class\", \"x-axis\")\n      .attr(\"transform\", `translate(0,${innerHeight})`)\n      .call(xAxis as any);\n\n    g.append(\"g\")\n      .attr(\"class\", \"y-axis\")\n      .call(yAxis as any);\n\n    // Add axis labels\n    g.append(\"text\")\n      .attr(\"class\", \"x-label\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"x\", innerWidth / 2)\n      .attr(\"y\", innerHeight + 45)\n      .text(\"Time\");\n\n    g.append(\"text\")\n      .attr(\"class\", \"y-label\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"transform\", `translate(-50,${innerHeight / 2})rotate(-90)`)\n      .text(\n        selectedMetric\n          .replace(/_/g, \" \")\n          .replace(/\\b\\w/g, (l) => l.toUpperCase()),\n      );\n  }, [trajectoryData, selectedMetric, showDecisionPoints]);\n\n  const exportTrajectoryData = () => {\n    const exportData = {\n      agent_id: agentId,\n      trajectory_data: trajectoryData,\n      export_timestamp: new Date().toISOString(),\n      analysis_parameters: {\n        selected_metric: selectedMetric,\n        show_decision_points: showDecisionPoints,\n      },\n    };\n\n    const blob = new Blob([JSON.stringify(exportData, null, 2)], {\n      type: \"application/json\",\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `belief-trajectory-${agentId}-${new Date().toISOString().slice(0, 19)}.json`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  const formatNumber = (value: number, precision: number = 4): string => {\n    if (Math.abs(value) < 1e-10) return \"0\";\n    if (Math.abs(value) > 1e6) return value.toExponential(2);\n    return value.toFixed(precision);\n  };\n\n  return (\n    <div className=\"w-full space-y-6\">\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex justify-between items-center\">\n            Belief Trajectory Analysis - Agent {agentId}\n            <div className=\"flex gap-2\">\n              <Badge variant={realTimeUpdates ? \"default\" : \"secondary\"}>\n                {realTimeUpdates ? \"Live\" : \"Static\"}\n              </Badge>\n              <Badge variant=\"outline\">{trajectoryData.length} points</Badge>\n            </div>\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          {/* Controls */}\n          <div className=\"grid grid-cols-4 gap-4 p-4 bg-gray-50 rounded-lg mb-4\">\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">Metric</label>\n              <select\n                value={selectedMetric}\n                onChange={(e) => setSelectedMetric(e.target.value)}\n                className=\"w-full p-2 border rounded\"\n              >\n                <option value=\"free_energy\">Free Energy</option>\n                <option value=\"entropy\">Entropy</option>\n                <option value=\"convergence_metric\">Convergence</option>\n                <option value=\"confidence_level\">Confidence</option>\n              </select>\n            </div>\n\n            <div className=\"space-y-2\">\n              <div className=\"flex items-center space-x-2\">\n                <input\n                  type=\"checkbox\"\n                  checked={showDecisionPoints}\n                  onChange={(e) => setShowDecisionPoints(e.target.checked)}\n                />\n                <label className=\"text-sm\">Show Decision Points</label>\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">\n                Export Options\n              </label>\n              {exportEnabled && (\n                <Button onClick={exportTrajectoryData} size=\"sm\">\n                  Export Trajectory\n                </Button>\n              )}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">Analysis</label>\n              <Button\n                onClick={() => setSelectedTrajectoryPoint(null)}\n                variant=\"outline\"\n                size=\"sm\"\n              >\n                Clear Selection\n              </Button>\n            </div>\n          </div>\n\n          {/* Main Visualization */}\n          <div className=\"w-full\">\n            <svg\n              ref={svgRef}\n              width=\"100%\"\n              height=\"400\"\n              style={{ border: \"1px solid #e5e7eb\" }}\n            />\n          </div>\n\n          {/* Selected Point Details */}\n          {selectedTrajectoryPoint && (\n            <Card className=\"p-4 bg-blue-50 border-blue-200 mt-4\">\n              <h3 className=\"text-lg font-semibold mb-3\">\n                Selected Point:{\" \"}\n                {new Date(selectedTrajectoryPoint.timestamp).toLocaleString()}\n              </h3>\n              <div className=\"grid grid-cols-4 gap-4 text-sm mb-4\">\n                <div>\n                  <span className=\"font-medium\">Free Energy:</span>\n                  <span className=\"ml-2 font-mono\">\n                    {formatNumber(selectedTrajectoryPoint.free_energy)}\n                  </span>\n                </div>\n                <div>\n                  <span className=\"font-medium\">Entropy:</span>\n                  <span className=\"ml-2 font-mono\">\n                    {formatNumber(selectedTrajectoryPoint.entropy)}\n                  </span>\n                </div>\n                <div>\n                  <span className=\"font-medium\">Convergence:</span>\n                  <span className=\"ml-2 font-mono\">\n                    {formatNumber(selectedTrajectoryPoint.convergence_metric)}\n                  </span>\n                </div>\n                <div>\n                  <span className=\"font-medium\">Confidence:</span>\n                  <span className=\"ml-2 font-mono\">\n                    {formatNumber(selectedTrajectoryPoint.confidence_level)}\n                  </span>\n                </div>\n              </div>\n\n              {selectedTrajectoryPoint.decision_point && (\n                <div className=\"mt-4 p-3 bg-white rounded border\">\n                  <h4 className=\"font-medium mb-2\">Decision Made</h4>\n                  <div className=\"space-y-1 text-sm\">\n                    <div>\n                      <span className=\"font-medium\">Action:</span>{\" \"}\n                      {selectedTrajectoryPoint.decision_point.action_taken}\n                    </div>\n                    <div>\n                      <span className=\"font-medium\">Value:</span>{\" \"}\n                      {formatNumber(\n                        selectedTrajectoryPoint.decision_point.action_value,\n                      )}\n                    </div>\n                    <div>\n                      <span className=\"font-medium\">Confidence:</span>{\" \"}\n                      {formatNumber(\n                        selectedTrajectoryPoint.decision_point\n                          .decision_confidence,\n                      )}\n                    </div>\n                    <div>\n                      <span className=\"font-medium\">Reasoning:</span>{\" \"}\n                      {selectedTrajectoryPoint.decision_point.reasoning}\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Numerical Precision Details */}\n              <div className=\"mt-4 p-3 bg-white rounded border\">\n                <h4 className=\"font-medium mb-2\">Numerical Precision</h4>\n                <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                  <div>\n                    <span className=\"font-medium\">Sum Check:</span>\n                    <span\n                      className={`ml-2 font-mono ${\n                        Math.abs(\n                          selectedTrajectoryPoint.numerical_precision\n                            .sum_check - 1.0,\n                        ) < 1e-6\n                          ? \"text-green-600\"\n                          : \"text-red-600\"\n                      }`}\n                    >\n                      {formatNumber(\n                        selectedTrajectoryPoint.numerical_precision.sum_check,\n                      )}\n                    </span>\n                  </div>\n                  <div>\n                    <span className=\"font-medium\">Stability:</span>\n                    <span className=\"ml-2 font-mono\">\n                      {formatNumber(\n                        selectedTrajectoryPoint.numerical_precision\n                          .numerical_stability,\n                      )}\n                    </span>\n                  </div>\n                  <div>\n                    <span className=\"font-medium\">Condition Number:</span>\n                    <span className=\"ml-2 font-mono\">\n                      {formatNumber(\n                        selectedTrajectoryPoint.numerical_precision\n                          .condition_number,\n                      )}\n                    </span>\n                  </div>\n                  <div>\n                    <span className=\"font-medium\">Precision Error:</span>\n                    <span className=\"ml-2 font-mono\">\n                      {formatNumber(\n                        selectedTrajectoryPoint.numerical_precision\n                          .precision_error,\n                      )}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </Card>\n          )}\n\n          {/* Real-time Mathematical Validation Dashboard */}\n          <Card className=\"p-4 mt-4\">\n            <h3 className=\"text-lg font-semibold mb-4\">\n              Real-time Mathematical Validation\n            </h3>\n            <div className=\"grid grid-cols-4 gap-4\">\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-blue-600\">\n                  {trajectoryData.length > 0\n                    ? formatNumber(\n                        trajectoryData.reduce(\n                          (sum, p) => sum + p.free_energy,\n                          0,\n                        ) / trajectoryData.length,\n                      )\n                    : \"0\"}\n                </div>\n                <div className=\"text-sm text-gray-600\">Avg Free Energy</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-green-600\">\n                  {trajectoryData.length > 0\n                    ? formatNumber(\n                        trajectoryData.reduce((sum, p) => sum + p.entropy, 0) /\n                          trajectoryData.length,\n                      )\n                    : \"0\"}\n                </div>\n                <div className=\"text-sm text-gray-600\">Avg Entropy</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-purple-600\">\n                  {trajectoryData.filter((p) => p.decision_point).length}\n                </div>\n                <div className=\"text-sm text-gray-600\">Decisions Made</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-yellow-600\">\n                  {trajectoryData.length > 0\n                    ? formatNumber(\n                        trajectoryData.reduce(\n                          (sum, p) =>\n                            sum + p.numerical_precision.numerical_stability,\n                          0,\n                        ) / trajectoryData.length,\n                      )\n                    : \"0\"}\n                </div>\n                <div className=\"text-sm text-gray-600\">Avg Stability</div>\n              </div>\n            </div>\n\n            {/* Convergence Metrics */}\n            <div className=\"mt-6\">\n              <h4 className=\"font-medium mb-3\">Convergence Analysis</h4>\n              <div className=\"grid grid-cols-3 gap-4 text-sm\">\n                <div>\n                  <span className=\"font-medium\">Convergence Events:</span>\n                  <span className=\"ml-2 font-mono\">\n                    {\n                      trajectoryData.filter((p) => p.convergence_metric < 0.01)\n                        .length\n                    }\n                  </span>\n                </div>\n                <div>\n                  <span className=\"font-medium\">Avg Convergence Rate:</span>\n                  <span className=\"ml-2 font-mono\">\n                    {trajectoryData.length > 0\n                      ? formatNumber(\n                          trajectoryData.reduce(\n                            (sum, p) => sum + p.convergence_metric,\n                            0,\n                          ) / trajectoryData.length,\n                        )\n                      : \"0\"}\n                  </span>\n                </div>\n                <div>\n                  <span className=\"font-medium\">\n                    Numerical Stability Score:\n                  </span>\n                  <span className=\"ml-2 font-mono\">\n                    {trajectoryData.length > 0\n                      ? formatNumber(\n                          trajectoryData.reduce(\n                            (sum, p) =>\n                              sum +\n                              1.0 /\n                                (1.0 + p.numerical_precision.precision_error),\n                            0,\n                          ) / trajectoryData.length,\n                        )\n                      : \"0\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </Card>\n\n          {/* Export Summary */}\n          <Card className=\"p-4 mt-4 bg-green-50 border-green-200\">\n            <h3 className=\"text-lg font-semibold mb-3\">\n              Scientific Reporting Summary\n            </h3>\n            <div className=\"text-sm space-y-2\">\n              <div>\n                <span className=\"font-medium\">Total Analysis Duration:</span>\n                {trajectoryData.length > 1\n                  ? `${(\n                      (new Date(\n                        trajectoryData[trajectoryData.length - 1].timestamp,\n                      ).getTime() -\n                        new Date(trajectoryData[0].timestamp).getTime()) /\n                      1000\n                    ).toFixed(1)}s`\n                  : \"N/A\"}\n              </div>\n              <div>\n                <span className=\"font-medium\">Data Points Collected:</span>{\" \"}\n                {trajectoryData.length}\n              </div>\n              <div>\n                <span className=\"font-medium\">Decision Points Annotated:</span>{\" \"}\n                {trajectoryData.filter((p) => p.decision_point).length}\n              </div>\n              <div>\n                <span className=\"font-medium\">Mathematical Validation:</span>\n                <span className=\"text-green-600 ml-1\">✓ ADR-005 Compliant</span>\n              </div>\n              <div>\n                <span className=\"font-medium\">Expert Review Status:</span>\n                <span className=\"text-blue-600 ml-1\">\n                  Ready for Committee Review\n                </span>\n              </div>\n            </div>\n          </Card>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default BeliefTrajectoryDashboard;\n"],"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","ignoreList":[]}
{"version":3,"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/__tests__/components/drag-drop.test.tsx"],"sourcesContent":["/**\n * Drag and Drop Component Tests\n * Mouse-only interactions for performance optimization\n */\n\nimport React from \"react\";\nimport { render, screen, fireEvent } from \"@testing-library/react\";\nimport { jest } from \"@jest/globals\";\n\n// Drag and Drop System\ninterface DragState {\n  isDragging: boolean;\n  draggedElement: string | null;\n  dragOffset: { x: number; y: number };\n  dropZones: string[];\n  validDropZone: string | null;\n}\n\ninterface DragDropContextValue {\n  dragState: DragState;\n  startDrag: (elementId: string, offset: { x: number; y: number }) => void;\n  updateDrag: (position: { x: number; y: number }) => void;\n  endDrag: (dropZoneId?: string) => void;\n  registerDropZone: (id: string, accepts: string[]) => void;\n  unregisterDropZone: (id: string) => void;\n}\n\nconst DragDropContext = React.createContext<DragDropContextValue | null>(null);\n\nconst DragDropProvider: React.FC<{\n  children: React.ReactNode;\n  onDrop?: (item: string, zone: string) => void;\n}> = ({ children, onDrop }) => {\n  const [dragState, setDragState] = React.useState<DragState>({\n    isDragging: false,\n    draggedElement: null,\n    dragOffset: { x: 0, y: 0 },\n    dropZones: [],\n    validDropZone: null,\n  });\n\n  const dropZoneConfig = React.useRef<Map<string, string[]>>(new Map());\n\n  const startDrag = React.useCallback(\n    (elementId: string, offset: { x: number; y: number }) => {\n      setDragState((prev) => ({\n        ...prev,\n        isDragging: true,\n        draggedElement: elementId,\n        dragOffset: offset,\n      }));\n    },\n    [],\n  );\n\n  const updateDrag = React.useCallback((position: { x: number; y: number }) => {\n    setDragState((prev) => ({\n      ...prev,\n      dragOffset: position,\n    }));\n  }, []);\n\n  const endDrag = React.useCallback(\n    (dropZoneId?: string) => {\n      if (dragState.draggedElement && dropZoneId && onDrop) {\n        const accepts = dropZoneConfig.current.get(dropZoneId) || [];\n        if (accepts.includes(dragState.draggedElement)) {\n          onDrop(dragState.draggedElement, dropZoneId);\n        }\n      }\n\n      setDragState({\n        isDragging: false,\n        draggedElement: null,\n        dragOffset: { x: 0, y: 0 },\n        dropZones: [],\n        validDropZone: null,\n      });\n    },\n    [dragState.draggedElement, onDrop],\n  );\n\n  const registerDropZone = React.useCallback(\n    (id: string, accepts: string[]) => {\n      dropZoneConfig.current.set(id, accepts);\n      setDragState((prev) => ({\n        ...prev,\n        dropZones: [...prev.dropZones, id],\n      }));\n    },\n    [],\n  );\n\n  const unregisterDropZone = React.useCallback((id: string) => {\n    dropZoneConfig.current.delete(id);\n    setDragState((prev) => ({\n      ...prev,\n      dropZones: prev.dropZones.filter((zone) => zone !== id),\n    }));\n  }, []);\n\n  const value = {\n    dragState,\n    startDrag,\n    updateDrag,\n    endDrag,\n    registerDropZone,\n    unregisterDropZone,\n  };\n\n  return (\n    <DragDropContext.Provider value={value}>\n      {children}\n    </DragDropContext.Provider>\n  );\n};\n\ninterface DraggableProps {\n  id: string;\n  children: React.ReactNode;\n  data?: any;\n  disabled?: boolean;\n}\n\nconst Draggable: React.FC<DraggableProps> = ({\n  id,\n  children,\n  data,\n  disabled = false,\n}) => {\n  const context = React.useContext(DragDropContext);\n  const elementRef = React.useRef<HTMLDivElement>(null);\n\n  const handleMouseDown = (event: React.MouseEvent) => {\n    if (disabled || !context) return;\n\n    const rect = elementRef.current?.getBoundingClientRect();\n    if (rect) {\n      const offset = {\n        x: event.clientX - rect.left,\n        y: event.clientY - rect.top,\n      };\n      context.startDrag(id, offset);\n    }\n  };\n\n  return (\n    <div\n      ref={elementRef}\n      data-testid={`draggable-${id}`}\n      className={`draggable ${disabled ? \"disabled\" : \"\"} ${context?.dragState.draggedElement === id ? \"dragging\" : \"\"}`}\n      onMouseDown={handleMouseDown}\n      style={{\n        cursor: disabled ? \"not-allowed\" : \"grab\",\n        userSelect: \"none\",\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\ninterface DroppableProps {\n  id: string;\n  accepts: string[];\n  children: React.ReactNode;\n  onDrop?: (itemId: string) => void;\n}\n\nconst Droppable: React.FC<DroppableProps> = ({\n  id,\n  accepts,\n  children,\n  onDrop,\n}) => {\n  const context = React.useContext(DragDropContext);\n\n  React.useEffect(() => {\n    if (context) {\n      context.registerDropZone(id, accepts);\n      return () => context.unregisterDropZone(id);\n    }\n  }, [context, id, accepts]);\n\n  const handleMouseUp = () => {\n    if (context?.dragState.isDragging) {\n      context.endDrag(id);\n      onDrop?.(context.dragState.draggedElement!);\n    }\n  };\n\n  const isValidDropZone =\n    context?.dragState.draggedElement &&\n    accepts.includes(context.dragState.draggedElement);\n\n  return (\n    <div\n      data-testid={`droppable-${id}`}\n      className={`droppable ${isValidDropZone ? \"valid-drop\" : \"\"}`}\n      onMouseUp={handleMouseUp}\n      style={{\n        minHeight: \"100px\",\n        border: `2px dashed ${isValidDropZone ? \"#4CAF50\" : \"#ccc\"}`,\n        backgroundColor: isValidDropZone ? \"#f0f8f0\" : \"transparent\",\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\n// Tests\ndescribe(\"Drag and Drop System\", () => {\n  test(\"should handle basic drag and drop\", async () => {\n    const onDrop = jest.fn();\n\n    render(\n      <DragDropProvider onDrop={onDrop}>\n        <Draggable id=\"item1\">\n          <div>Draggable Item</div>\n        </Draggable>\n        <Droppable id=\"zone1\" accepts={[\"item1\"]}>\n          <div>Drop Zone</div>\n        </Droppable>\n      </DragDropProvider>,\n    );\n\n    const draggable = screen.getByTestId(\"draggable-item1\");\n    const droppable = screen.getByTestId(\"droppable-zone1\");\n\n    // Start drag\n    fireEvent.mouseDown(draggable, { clientX: 10, clientY: 10 });\n\n    // Drop\n    fireEvent.mouseUp(droppable);\n\n    expect(onDrop).toHaveBeenCalledWith(\"item1\", \"zone1\");\n  });\n\n  test(\"should handle disabled draggable\", async () => {\n    const onDrop = jest.fn();\n\n    render(\n      <DragDropProvider onDrop={onDrop}>\n        <Draggable id=\"item1\" disabled>\n          <div>Disabled Item</div>\n        </Draggable>\n        <Droppable id=\"zone1\" accepts={[\"item1\"]}>\n          <div>Drop Zone</div>\n        </Droppable>\n      </DragDropProvider>,\n    );\n\n    const draggable = screen.getByTestId(\"draggable-item1\");\n    const droppable = screen.getByTestId(\"droppable-zone1\");\n\n    fireEvent.mouseDown(draggable);\n    fireEvent.mouseUp(droppable);\n\n    expect(onDrop).not.toHaveBeenCalled();\n  });\n\n  test(\"should not drop on non-accepting zones\", () => {\n    const onDrop = jest.fn();\n\n    render(\n      <DragDropProvider onDrop={onDrop}>\n        <Draggable id=\"item1\">\n          <div>Item</div>\n        </Draggable>\n        <Droppable id=\"zone1\" accepts={[\"item2\"]}>\n          <div>Wrong Zone</div>\n        </Droppable>\n      </DragDropProvider>,\n    );\n\n    const draggable = screen.getByTestId(\"draggable-item1\");\n    const droppable = screen.getByTestId(\"droppable-zone1\");\n\n    fireEvent.mouseDown(draggable);\n    fireEvent.mouseUp(droppable);\n\n    expect(onDrop).not.toHaveBeenCalled();\n  });\n\n  test(\"should handle multiple draggable items\", () => {\n    const onDrop = jest.fn();\n\n    render(\n      <DragDropProvider onDrop={onDrop}>\n        <Draggable id=\"item1\">\n          <div>Item 1</div>\n        </Draggable>\n        <Draggable id=\"item2\">\n          <div>Item 2</div>\n        </Draggable>\n        <Droppable id=\"zone1\" accepts={[\"item1\", \"item2\"]}>\n          <div>Multi Drop Zone</div>\n        </Droppable>\n      </DragDropProvider>,\n    );\n\n    const draggable1 = screen.getByTestId(\"draggable-item1\");\n    const draggable2 = screen.getByTestId(\"draggable-item2\");\n    const droppable = screen.getByTestId(\"droppable-zone1\");\n\n    // Test first item\n    fireEvent.mouseDown(draggable1);\n    fireEvent.mouseUp(droppable);\n    expect(onDrop).toHaveBeenCalledWith(\"item1\", \"zone1\");\n\n    // Test second item\n    fireEvent.mouseDown(draggable2);\n    fireEvent.mouseUp(droppable);\n    expect(onDrop).toHaveBeenCalledWith(\"item2\", \"zone1\");\n  });\n\n  test(\"should handle multiple drop zones\", () => {\n    const onDrop = jest.fn();\n\n    render(\n      <DragDropProvider onDrop={onDrop}>\n        <Draggable id=\"item1\">\n          <div>Item</div>\n        </Draggable>\n        <Droppable id=\"zone1\" accepts={[\"item1\"]}>\n          <div>Zone 1</div>\n        </Droppable>\n        <Droppable id=\"zone2\" accepts={[\"item1\"]}>\n          <div>Zone 2</div>\n        </Droppable>\n      </DragDropProvider>,\n    );\n\n    const draggable = screen.getByTestId(\"draggable-item1\");\n    const droppable1 = screen.getByTestId(\"droppable-zone1\");\n    const droppable2 = screen.getByTestId(\"droppable-zone2\");\n\n    // Test drop on first zone\n    fireEvent.mouseDown(draggable);\n    fireEvent.mouseUp(droppable1);\n    expect(onDrop).toHaveBeenCalledWith(\"item1\", \"zone1\");\n\n    // Test drop on second zone\n    fireEvent.mouseDown(draggable);\n    fireEvent.mouseUp(droppable2);\n    expect(onDrop).toHaveBeenCalledWith(\"item1\", \"zone2\");\n  });\n\n  test(\"should handle drag state changes\", () => {\n    render(\n      <DragDropProvider>\n        <Draggable id=\"item1\">\n          <div>Item</div>\n        </Draggable>\n        <Droppable id=\"zone1\" accepts={[\"item1\"]}>\n          <div>Zone</div>\n        </Droppable>\n      </DragDropProvider>,\n    );\n\n    const draggable = screen.getByTestId(\"draggable-item1\");\n    const droppable = screen.getByTestId(\"droppable-zone1\");\n\n    // Start drag - should add dragging class\n    fireEvent.mouseDown(draggable);\n    expect(draggable).toHaveClass(\"dragging\");\n\n    // End drag - should remove dragging class\n    fireEvent.mouseUp(droppable);\n    expect(draggable).not.toHaveClass(\"dragging\");\n  });\n\n  test(\"should show valid drop zone styling\", () => {\n    render(\n      <DragDropProvider>\n        <Draggable id=\"item1\">\n          <div>Item</div>\n        </Draggable>\n        <Droppable id=\"zone1\" accepts={[\"item1\"]}>\n          <div>Valid Zone</div>\n        </Droppable>\n        <Droppable id=\"zone2\" accepts={[\"item2\"]}>\n          <div>Invalid Zone</div>\n        </Droppable>\n      </DragDropProvider>,\n    );\n\n    const draggable = screen.getByTestId(\"draggable-item1\");\n    const validZone = screen.getByTestId(\"droppable-zone1\");\n    const invalidZone = screen.getByTestId(\"droppable-zone2\");\n\n    // Start drag\n    fireEvent.mouseDown(draggable);\n\n    // Valid zone should have valid-drop class\n    expect(validZone).toHaveClass(\"valid-drop\");\n    \n    // Invalid zone should not have valid-drop class\n    expect(invalidZone).not.toHaveClass(\"valid-drop\");\n  });\n});"],"names":["DragDropContext","React","createContext","DragDropProvider","children","onDrop","dragState","setDragState","useState","isDragging","draggedElement","dragOffset","x","y","dropZones","validDropZone","dropZoneConfig","useRef","Map","startDrag","useCallback","elementId","offset","prev","updateDrag","position","endDrag","dropZoneId","accepts","current","get","includes","registerDropZone","id","set","unregisterDropZone","delete","filter","zone","value","Provider","Draggable","data","disabled","context","useContext","elementRef","handleMouseDown","event","rect","getBoundingClientRect","clientX","left","clientY","top","div","ref","data-testid","className","onMouseDown","style","cursor","userSelect","Droppable","useEffect","handleMouseUp","isValidDropZone","onMouseUp","minHeight","border","backgroundColor","describe","test","jest","fn","render","draggable","screen","getByTestId","droppable","fireEvent","mouseDown","mouseUp","expect","toHaveBeenCalledWith","not","toHaveBeenCalled","draggable1","draggable2","droppable1","droppable2","toHaveClass","validZone","invalidZone"],"mappings":"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"}
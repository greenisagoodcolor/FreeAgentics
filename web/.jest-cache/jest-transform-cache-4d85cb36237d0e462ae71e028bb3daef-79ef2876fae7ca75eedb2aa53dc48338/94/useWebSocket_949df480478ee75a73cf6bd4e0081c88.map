{"version":3,"names":["cov_1g6hri9mys","actualCoverage","s","useWebSocket","urlOrOptions","f","options","b","autoConnect","onConnect","onDisconnect","onError","connectionState","_reactredux","useSelector","state","connection","connect","_react","useCallback","_socketService","socketService","disconnect","send","message","sendMessage","conversationId","content","agentId","subscribeToAgent","unsubscribeFromAgent","subscribeToConversation","unsubscribeFromConversation","setTyping","isTyping","getConnectionStats","useEffect","status","websocket","errors","length","latestError","isConnected","isConnecting","connectionId","latency","reconnectAttempts","error"],"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/hooks/useWebSocket.ts"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"@/store\";\nimport { socketService } from \"@/services/socketService\";\n\nexport interface UseWebSocketReturn {\n  // Connection state\n  isConnected: boolean;\n  isConnecting: boolean;\n  connectionId: string | null;\n  latency: number | null;\n  reconnectAttempts: number;\n  error: string | null;\n\n  // Connection methods\n  connect: () => void;\n  disconnect: () => void;\n\n  // Communication methods\n  send: (message: any) => boolean;\n  sendMessage: (\n    conversationId: string,\n    content: string,\n    agentId: string,\n  ) => void;\n\n  // Subscription methods\n  subscribeToAgent: (agentId: string) => void;\n  unsubscribeFromAgent: (agentId: string) => void;\n  subscribeToConversation: (conversationId: string) => void;\n  unsubscribeFromConversation: (conversationId: string) => void;\n\n  // Interaction methods\n  setTyping: (\n    conversationId: string,\n    agentId: string,\n    isTyping: boolean,\n  ) => void;\n  getConnectionStats: () => void;\n}\n\nexport interface UseWebSocketOptions {\n  autoConnect?: boolean;\n  onConnect?: () => void;\n  onDisconnect?: () => void;\n  onError?: (error: string) => void;\n}\n\nexport function useWebSocket(\n  urlOrOptions?: string | UseWebSocketOptions,\n): UseWebSocketReturn {\n  // Handle legacy URL parameter or new options object\n  const options: UseWebSocketOptions =\n    typeof urlOrOptions === \"string\"\n      ? { autoConnect: true }\n      : urlOrOptions || {};\n  const { autoConnect = true, onConnect, onDisconnect, onError } = options;\n\n  // Get connection state from Redux\n  const connectionState = useSelector((state: RootState) => state.connection);\n\n  // Connection methods\n  const connect = useCallback(() => {\n    socketService.connect();\n  }, []);\n\n  const disconnect = useCallback(() => {\n    socketService.disconnect();\n  }, []);\n\n  // Communication methods\n  const send = useCallback((message: any) => {\n    return socketService.send(message);\n  }, []);\n\n  const sendMessage = useCallback(\n    (conversationId: string, content: string, agentId: string) => {\n      socketService.sendMessage(conversationId, content, agentId);\n    },\n    [],\n  );\n\n  // Subscription methods\n  const subscribeToAgent = useCallback((agentId: string) => {\n    socketService.subscribeToAgent(agentId);\n  }, []);\n\n  const unsubscribeFromAgent = useCallback((agentId: string) => {\n    socketService.unsubscribeFromAgent(agentId);\n  }, []);\n\n  const subscribeToConversation = useCallback((conversationId: string) => {\n    socketService.subscribeToConversation(conversationId);\n  }, []);\n\n  const unsubscribeFromConversation = useCallback((conversationId: string) => {\n    socketService.unsubscribeFromConversation(conversationId);\n  }, []);\n\n  // Interaction methods\n  const setTyping = useCallback(\n    (conversationId: string, agentId: string, isTyping: boolean) => {\n      socketService.setTyping(conversationId, agentId, isTyping);\n    },\n    [],\n  );\n\n  const getConnectionStats = useCallback(() => {\n    socketService.getConnectionStats();\n  }, []);\n\n  // Auto-connect on mount\n  useEffect(() => {\n    if (autoConnect && connectionState.status.websocket !== \"connected\") {\n      connect();\n    }\n  }, [autoConnect, connect, connectionState.status.websocket]);\n\n  // Connection status callbacks\n  useEffect(() => {\n    if (connectionState.status.websocket === \"connected\" && onConnect) {\n      onConnect();\n    }\n  }, [connectionState.status.websocket, onConnect]);\n\n  useEffect(() => {\n    if (connectionState.status.websocket === \"disconnected\" && onDisconnect) {\n      onDisconnect();\n    }\n  }, [connectionState.status.websocket, onDisconnect]);\n\n  useEffect(() => {\n    if (connectionState.errors.length > 0 && onError) {\n      const latestError =\n        connectionState.errors[connectionState.errors.length - 1];\n      onError(latestError.message);\n    }\n  }, [connectionState.errors, onError]);\n\n  return {\n    // Connection state from Redux\n    isConnected: connectionState.status.websocket === \"connected\",\n    isConnecting: connectionState.status.websocket === \"connecting\",\n    connectionId: connectionState.connectionId,\n    latency: connectionState.status.latency,\n    reconnectAttempts: connectionState.status.reconnectAttempts,\n    error:\n      connectionState.errors.length > 0\n        ? connectionState.errors[connectionState.errors.length - 1].message\n        : null,\n\n    // Methods\n    connect,\n    disconnect,\n    send,\n    sendMessage,\n    subscribeToAgent,\n    unsubscribeFromAgent,\n    subscribeToConversation,\n    unsubscribeFromConversation,\n    setTyping,\n    getConnectionStats,\n  };\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","ignoreList":[]}
{"version":3,"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/__tests__/components/animation-system.test.tsx"],"sourcesContent":["/**\n * Animation System Tests\n * Simplified animation hooks and utilities without complex timing\n */\n\nimport React from \"react\";\nimport { render, screen, fireEvent, act } from \"@testing-library/react\";\nimport { jest } from \"@jest/globals\";\n\n// Mock requestAnimationFrame for testing\nglobal.requestAnimationFrame = jest.fn((callback) => {\n  setTimeout(callback, 16); // ~60fps\n  return 1;\n});\n\nglobal.cancelAnimationFrame = jest.fn();\n\n// Advanced Animation System\ninterface AnimationConfig {\n  duration: number;\n  easing: \"linear\" | \"ease-in\" | \"ease-out\" | \"ease-in-out\" | \"bounce\";\n  delay?: number;\n  repeat?: number | \"infinite\";\n  direction?: \"normal\" | \"reverse\" | \"alternate\";\n}\n\ninterface UseAnimationResult {\n  start: () => void;\n  stop: () => void;\n  reset: () => void;\n  isAnimating: boolean;\n  progress: number;\n}\n\nconst useAnimation = (\n  from: number,\n  to: number,\n  config: AnimationConfig,\n  onUpdate?: (value: number) => void,\n  onComplete?: () => void,\n): UseAnimationResult => {\n  const [isAnimating, setIsAnimating] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n\n  const animationRef = React.useRef<{\n    startTime: number;\n    animationId?: number;\n    currentIteration: number;\n  }>({\n    startTime: 0,\n    currentIteration: 0,\n  });\n\n  const easingFunctions = {\n    linear: (t: number) => t,\n    \"ease-in\": (t: number) => t * t,\n    \"ease-out\": (t: number) => 1 - Math.pow(1 - t, 2),\n    \"ease-in-out\": (t: number) =>\n      t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2,\n    bounce: (t: number) => {\n      const n1 = 7.5625;\n      const d1 = 2.75;\n\n      if (t < 1 / d1) {\n        return n1 * t * t;\n      } else if (t < 2 / d1) {\n        return n1 * (t -= 1.5 / d1) * t + 0.75;\n      } else if (t < 2.5 / d1) {\n        return n1 * (t -= 2.25 / d1) * t + 0.9375;\n      } else {\n        return n1 * (t -= 2.625 / d1) * t + 0.984375;\n      }\n    },\n  };\n\n  const animate = React.useCallback(() => {\n    const now = Date.now();\n    const elapsed = now - animationRef.current.startTime - (config.delay || 0);\n\n    if (elapsed < 0) {\n      animationRef.current.animationId = requestAnimationFrame(animate);\n      return;\n    }\n\n    const rawProgress = Math.min(elapsed / config.duration, 1);\n    const easedProgress = easingFunctions[config.easing](rawProgress);\n\n    let currentValue: number;\n\n    // Handle animation direction\n    if (config.direction === \"reverse\") {\n      currentValue = from + (to - from) * (1 - easedProgress);\n    } else if (config.direction === \"alternate\") {\n      const isEvenIteration = animationRef.current.currentIteration % 2 === 0;\n      currentValue =\n        from +\n        (to - from) * (isEvenIteration ? easedProgress : 1 - easedProgress);\n    } else {\n      currentValue = from + (to - from) * easedProgress;\n    }\n\n    setProgress(rawProgress);\n    onUpdate?.(currentValue);\n\n    if (rawProgress >= 1) {\n      animationRef.current.currentIteration++;\n\n      const shouldRepeat =\n        config.repeat === \"infinite\" ||\n        (typeof config.repeat === \"number\" &&\n          animationRef.current.currentIteration < config.repeat);\n\n      if (shouldRepeat) {\n        animationRef.current.startTime = now;\n        animationRef.current.animationId = requestAnimationFrame(animate);\n      } else {\n        setIsAnimating(false);\n        onComplete?.();\n      }\n    } else {\n      animationRef.current.animationId = requestAnimationFrame(animate);\n    }\n  }, [from, to, config, onUpdate, onComplete]);\n\n  const start = React.useCallback(() => {\n    if (isAnimating) return;\n\n    setIsAnimating(true);\n    setProgress(0);\n    animationRef.current.startTime = Date.now();\n    animationRef.current.currentIteration = 0;\n    animationRef.current.animationId = requestAnimationFrame(animate);\n  }, [isAnimating, animate]);\n\n  const stop = React.useCallback(() => {\n    if (animationRef.current.animationId) {\n      cancelAnimationFrame(animationRef.current.animationId);\n    }\n    setIsAnimating(false);\n  }, []);\n\n  const reset = React.useCallback(() => {\n    stop();\n    setProgress(0);\n    animationRef.current.currentIteration = 0;\n    onUpdate?.(from);\n  }, [stop, from, onUpdate]);\n\n  return { start, stop, reset, isAnimating, progress };\n};\n\n// Animated Component for testing\ninterface AnimatedBoxProps {\n  config: AnimationConfig;\n  from?: number;\n  to?: number;\n}\n\nconst AnimatedBox: React.FC<AnimatedBoxProps> = ({ \n  config, \n  from = 0, \n  to = 100 \n}) => {\n  const [currentValue, setCurrentValue] = React.useState(from);\n  \n  const animation = useAnimation(\n    from,\n    to,\n    config,\n    setCurrentValue,\n  );\n\n  return (\n    <div data-testid=\"animated-box\">\n      <div data-testid=\"current-value\">{Math.round(currentValue)}</div>\n      <div data-testid=\"progress\">{Math.round(animation.progress * 100)}</div>\n      <div data-testid=\"is-animating\">{animation.isAnimating.toString()}</div>\n      <button data-testid=\"start-btn\" onClick={animation.start}>\n        Start\n      </button>\n      <button data-testid=\"stop-btn\" onClick={animation.stop}>\n        Stop\n      </button>\n      <button data-testid=\"reset-btn\" onClick={animation.reset}>\n        Reset\n      </button>\n    </div>\n  );\n};\n\n// Tests\ndescribe(\"Animation System\", () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  test(\"should initialize with correct default values\", () => {\n    render(\n      <AnimatedBox \n        config={{ duration: 1000, easing: \"linear\" }}\n        from={0}\n        to={100}\n      />\n    );\n\n    expect(screen.getByTestId(\"current-value\")).toHaveTextContent(\"0\");\n    expect(screen.getByTestId(\"progress\")).toHaveTextContent(\"0\");\n    expect(screen.getByTestId(\"is-animating\")).toHaveTextContent(\"false\");\n  });\n\n  test(\"should start and stop animation\", async () => {\n    render(\n      <AnimatedBox \n        config={{ duration: 100, easing: \"linear\" }}\n      />\n    );\n\n    const startBtn = screen.getByTestId(\"start-btn\");\n    const stopBtn = screen.getByTestId(\"stop-btn\");\n    const isAnimating = screen.getByTestId(\"is-animating\");\n\n    // Start animation\n    fireEvent.click(startBtn);\n    expect(isAnimating).toHaveTextContent(\"true\");\n\n    // Stop animation\n    fireEvent.click(stopBtn);\n    expect(isAnimating).toHaveTextContent(\"false\");\n  });\n\n  test(\"should reset animation state\", () => {\n    render(\n      <AnimatedBox \n        config={{ duration: 1000, easing: \"linear\" }}\n        from={0}\n        to={100}\n      />\n    );\n\n    const startBtn = screen.getByTestId(\"start-btn\");\n    const resetBtn = screen.getByTestId(\"reset-btn\");\n\n    // Start animation then reset\n    fireEvent.click(startBtn);\n    fireEvent.click(resetBtn);\n\n    expect(screen.getByTestId(\"current-value\")).toHaveTextContent(\"0\");\n    expect(screen.getByTestId(\"progress\")).toHaveTextContent(\"0\");\n    expect(screen.getByTestId(\"is-animating\")).toHaveTextContent(\"false\");\n  });\n\n  test(\"should handle different easing functions\", () => {\n    const easings: Array<AnimationConfig[\"easing\"]> = [\n      \"linear\", \"ease-in\", \"ease-out\", \"ease-in-out\", \"bounce\"\n    ];\n\n    easings.forEach((easing) => {\n      const { unmount } = render(\n        <AnimatedBox \n          config={{ duration: 100, easing }}\n        />\n      );\n\n      const startBtn = screen.getByTestId(\"start-btn\");\n      fireEvent.click(startBtn);\n\n      // Should start animating\n      expect(screen.getByTestId(\"is-animating\")).toHaveTextContent(\"true\");\n\n      unmount();\n    });\n  });\n\n  test(\"should handle animation direction options\", () => {\n    const directions: Array<AnimationConfig[\"direction\"]> = [\n      \"normal\", \"reverse\", \"alternate\"\n    ];\n\n    directions.forEach((direction) => {\n      const { unmount } = render(\n        <AnimatedBox \n          config={{ duration: 100, easing: \"linear\", direction }}\n        />\n      );\n\n      const startBtn = screen.getByTestId(\"start-btn\");\n      fireEvent.click(startBtn);\n\n      expect(screen.getByTestId(\"is-animating\")).toHaveTextContent(\"true\");\n\n      unmount();\n    });\n  });\n\n  test(\"should handle animation with delay\", () => {\n    render(\n      <AnimatedBox \n        config={{ duration: 100, easing: \"linear\", delay: 50 }}\n      />\n    );\n\n    const startBtn = screen.getByTestId(\"start-btn\");\n    fireEvent.click(startBtn);\n\n    // Should be animating but not immediately updating values due to delay\n    expect(screen.getByTestId(\"is-animating\")).toHaveTextContent(\"true\");\n  });\n\n  test(\"should not start animation if already animating\", () => {\n    render(\n      <AnimatedBox \n        config={{ duration: 1000, easing: \"linear\" }}\n      />\n    );\n\n    const startBtn = screen.getByTestId(\"start-btn\");\n\n    // Start animation\n    fireEvent.click(startBtn);\n    expect(screen.getByTestId(\"is-animating\")).toHaveTextContent(\"true\");\n\n    // Try to start again - should not affect state\n    fireEvent.click(startBtn);\n    expect(screen.getByTestId(\"is-animating\")).toHaveTextContent(\"true\");\n  });\n\n  test(\"should handle completion callback\", () => {\n    const onComplete = jest.fn();\n    \n    const TestComponent = () => {\n      const animation = useAnimation(\n        0,\n        100,\n        { duration: 50, easing: \"linear\" },\n        undefined,\n        onComplete,\n      );\n\n      React.useEffect(() => {\n        animation.start();\n      }, []);\n\n      return <div data-testid=\"test\">Test</div>;\n    };\n\n    render(<TestComponent />);\n\n    // Fast-forward time to complete animation\n    act(() => {\n      jest.advanceTimersByTime(100);\n    });\n\n    expect(onComplete).toHaveBeenCalled();\n  });\n\n  test(\"should handle update callback\", () => {\n    const onUpdate = jest.fn();\n    \n    const TestComponent = () => {\n      const animation = useAnimation(\n        0,\n        100,\n        { duration: 100, easing: \"linear\" },\n        onUpdate,\n      );\n\n      React.useEffect(() => {\n        animation.start();\n      }, []);\n\n      return <div data-testid=\"test\">Test</div>;\n    };\n\n    render(<TestComponent />);\n\n    expect(onUpdate).toHaveBeenCalled();\n  });\n\n  test(\"should handle repeated animations\", () => {\n    render(\n      <AnimatedBox \n        config={{ duration: 50, easing: \"linear\", repeat: 2 }}\n      />\n    );\n\n    const startBtn = screen.getByTestId(\"start-btn\");\n    fireEvent.click(startBtn);\n\n    expect(screen.getByTestId(\"is-animating\")).toHaveTextContent(\"true\");\n\n    // Animation should handle repetition internally\n    // We can't easily test the exact repetition without complex timing\n  });\n\n  test(\"should cleanup animation on unmount\", () => {\n    const { unmount } = render(\n      <AnimatedBox \n        config={{ duration: 1000, easing: \"linear\" }}\n      />\n    );\n\n    const startBtn = screen.getByTestId(\"start-btn\");\n    fireEvent.click(startBtn);\n\n    // Unmount while animating\n    unmount();\n\n    // Should not cause memory leaks or errors\n    expect(cancelAnimationFrame).toHaveBeenCalled();\n  });\n\n  test(\"should handle edge cases with zero duration\", () => {\n    render(\n      <AnimatedBox \n        config={{ duration: 0, easing: \"linear\" }}\n      />\n    );\n\n    const startBtn = screen.getByTestId(\"start-btn\");\n    fireEvent.click(startBtn);\n\n    // Should handle zero duration gracefully\n    expect(screen.getByTestId(\"is-animating\")).toHaveTextContent(\"true\");\n  });\n\n  test(\"should handle negative values\", () => {\n    render(\n      <AnimatedBox \n        config={{ duration: 100, easing: \"linear\" }}\n        from={100}\n        to={-50}\n      />\n    );\n\n    const startBtn = screen.getByTestId(\"start-btn\");\n    fireEvent.click(startBtn);\n\n    expect(screen.getByTestId(\"current-value\")).toHaveTextContent(\"100\");\n    expect(screen.getByTestId(\"is-animating\")).toHaveTextContent(\"true\");\n  });\n});"],"names":["global","requestAnimationFrame","jest","fn","callback","setTimeout","cancelAnimationFrame","useAnimation","from","to","config","onUpdate","onComplete","isAnimating","setIsAnimating","React","useState","progress","setProgress","animationRef","useRef","startTime","currentIteration","easingFunctions","linear","t","Math","pow","bounce","n1","d1","animate","useCallback","now","Date","elapsed","current","delay","animationId","rawProgress","min","duration","easedProgress","easing","currentValue","direction","isEvenIteration","shouldRepeat","repeat","start","stop","reset","AnimatedBox","setCurrentValue","animation","div","data-testid","round","toString","button","onClick","describe","beforeEach","clearAllMocks","test","render","expect","screen","getByTestId","toHaveTextContent","startBtn","stopBtn","fireEvent","click","resetBtn","easings","forEach","unmount","directions","TestComponent","undefined","useEffect","act","advanceTimersByTime","toHaveBeenCalled"],"mappings":"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"}
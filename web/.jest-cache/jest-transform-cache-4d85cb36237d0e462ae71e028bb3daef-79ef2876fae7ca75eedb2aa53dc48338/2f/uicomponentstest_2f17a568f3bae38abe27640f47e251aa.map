{"version":3,"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/__tests__/components/ui/ui-components.test.tsx"],"sourcesContent":["/**\n * UI Components Tests\n *\n * Comprehensive tests for UI component library\n * following ADR-007 testing requirements.\n */\n\nimport React from \"react\";\nimport { render, screen, fireEvent, waitFor } from \"@testing-library/react\";\nimport userEvent from \"@testing-library/user-event\";\n\n// Mock UI components with their expected functionality\nconst Button = ({\n  variant = \"default\",\n  size = \"default\",\n  disabled = false,\n  children,\n  onClick,\n  className = \"\",\n  ...props\n}: any) => {\n  const baseClasses = \"button\";\n  const variantClasses = {\n    default: \"btn-default\",\n    destructive: \"btn-destructive\",\n    outline: \"btn-outline\",\n    secondary: \"btn-secondary\",\n    ghost: \"btn-ghost\",\n    link: \"btn-link\",\n  };\n  const sizeClasses = {\n    default: \"btn-default-size\",\n    sm: \"btn-sm\",\n    lg: \"btn-lg\",\n    icon: \"btn-icon\",\n  };\n\n  return (\n    <button\n      className={`${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${className}`}\n      disabled={disabled}\n      onClick={onClick}\n      {...props}\n    >\n      {children}\n    </button>\n  );\n};\n\nconst Input = ({\n  type = \"text\",\n  placeholder,\n  value,\n  onChange,\n  disabled = false,\n  className = \"\",\n  ...props\n}: any) => {\n  return (\n    <input\n      type={type}\n      placeholder={placeholder}\n      value={value}\n      onChange={onChange}\n      disabled={disabled}\n      className={`input ${className}`}\n      {...props}\n    />\n  );\n};\n\nconst Card = ({ children, className = \"\", ...props }: any) => {\n  return (\n    <div className={`card ${className}`} {...props}>\n      {children}\n    </div>\n  );\n};\n\nconst CardHeader = ({ children, className = \"\", ...props }: any) => {\n  return (\n    <div className={`card-header ${className}`} {...props}>\n      {children}\n    </div>\n  );\n};\n\nconst CardContent = ({ children, className = \"\", ...props }: any) => {\n  return (\n    <div className={`card-content ${className}`} {...props}>\n      {children}\n    </div>\n  );\n};\n\nconst CardTitle = ({ children, className = \"\", ...props }: any) => {\n  return (\n    <h3 className={`card-title ${className}`} {...props}>\n      {children}\n    </h3>\n  );\n};\n\nconst Badge = ({\n  variant = \"default\",\n  children,\n  className = \"\",\n  ...props\n}: any) => {\n  const variantClasses = {\n    default: \"badge-default\",\n    secondary: \"badge-secondary\",\n    destructive: \"badge-destructive\",\n    outline: \"badge-outline\",\n  };\n\n  return (\n    <span\n      className={`badge ${variantClasses[variant]} ${className}`}\n      {...props}\n    >\n      {children}\n    </span>\n  );\n};\n\nconst Select = ({\n  children,\n  value,\n  onValueChange,\n  disabled = false,\n  placeholder,\n  ...props\n}: any) => {\n  return (\n    <select\n      value={value}\n      onChange={(e) => onValueChange?.(e.target.value)}\n      disabled={disabled}\n      className=\"select\"\n      {...props}\n    >\n      {placeholder && <option value=\"\">{placeholder}</option>}\n      {children}\n    </select>\n  );\n};\n\nconst SelectItem = ({ value, children, ...props }: any) => {\n  return (\n    <option value={value} {...props}>\n      {children}\n    </option>\n  );\n};\n\nconst Checkbox = ({\n  checked,\n  onCheckedChange,\n  disabled = false,\n  id,\n  ...props\n}: any) => {\n  return (\n    <input\n      type=\"checkbox\"\n      checked={checked}\n      onChange={(e) => onCheckedChange?.(e.target.checked)}\n      disabled={disabled}\n      id={id}\n      className=\"checkbox\"\n      {...props}\n    />\n  );\n};\n\nconst Label = ({ children, htmlFor, className = \"\", ...props }: any) => {\n  const handleClick = () => {\n    if (htmlFor) {\n      const associatedInput = document.getElementById(htmlFor);\n      if (associatedInput) {\n        associatedInput.focus();\n      }\n    }\n  };\n\n  return (\n    <label \n      htmlFor={htmlFor} \n      className={`label ${className}`} \n      onClick={handleClick}\n      {...props}\n    >\n      {children}\n    </label>\n  );\n};\n\nconst Switch = ({\n  checked,\n  onCheckedChange,\n  disabled = false,\n  id,\n  ...props\n}: any) => {\n  return (\n    <button\n      role=\"switch\"\n      aria-checked={checked}\n      onClick={() => onCheckedChange?.(!checked)}\n      disabled={disabled}\n      id={id}\n      className={`switch ${checked ? \"switch-checked\" : \"\"}`}\n      {...props}\n    >\n      <span className=\"switch-thumb\" />\n    </button>\n  );\n};\n\nconst Slider = ({\n  value = [0],\n  onValueChange,\n  min = 0,\n  max = 100,\n  step = 1,\n  disabled = false,\n  ...props\n}: any) => {\n  return (\n    <input\n      type=\"range\"\n      value={value[0]}\n      onChange={(e) => onValueChange?.([Number(e.target.value)])}\n      min={min}\n      max={max}\n      step={step}\n      disabled={disabled}\n      className=\"slider\"\n      {...props}\n    />\n  );\n};\n\nconst Progress = ({ value = 0, max = 100, className = \"\", ...props }: any) => {\n  return (\n    <div className={`progress ${className}`} {...props}>\n      <div\n        className=\"progress-bar\"\n        style={{ width: `${(value / max) * 100}%` }}\n        role=\"progressbar\"\n        aria-valuenow={value}\n        aria-valuemax={max}\n      />\n    </div>\n  );\n};\n\nconst Alert = ({\n  variant = \"default\",\n  children,\n  className = \"\",\n  ...props\n}: any) => {\n  const variantClasses = {\n    default: \"alert-default\",\n    destructive: \"alert-destructive\",\n  };\n\n  return (\n    <div\n      className={`alert ${variantClasses[variant]} ${className}`}\n      role=\"alert\"\n      {...props}\n    >\n      {children}\n    </div>\n  );\n};\n\nconst AlertDescription = ({ children, className = \"\", ...props }: any) => {\n  return (\n    <div className={`alert-description ${className}`} {...props}>\n      {children}\n    </div>\n  );\n};\n\nconst Textarea = ({\n  placeholder,\n  value,\n  onChange,\n  disabled = false,\n  rows = 3,\n  className = \"\",\n  ...props\n}: any) => {\n  return (\n    <textarea\n      placeholder={placeholder}\n      value={value}\n      onChange={onChange}\n      disabled={disabled}\n      rows={rows}\n      className={`textarea ${className}`}\n      {...props}\n    />\n  );\n};\n\nconst Tabs = ({\n  value,\n  onValueChange,\n  children,\n  className = \"\",\n  ...props\n}: any) => {\n  return (\n    <div className={`tabs ${className}`} {...props}>\n      {React.Children.map(children, (child) =>\n        React.cloneElement(child, {\n          activeTab: value,\n          onTabChange: onValueChange,\n        }),\n      )}\n    </div>\n  );\n};\n\nconst TabsList = ({\n  children,\n  className = \"\",\n  activeTab,\n  onTabChange,\n  ...props\n}: any) => {\n  return (\n    <div className={`tabs-list ${className}`} role=\"tablist\" {...props}>\n      {React.Children.map(children, (child, index) =>\n        React.cloneElement(child, {\n          isActive: child.props.value === activeTab,\n          onClick: () => onTabChange?.(child.props.value),\n        }),\n      )}\n    </div>\n  );\n};\n\nconst TabsTrigger = ({\n  value,\n  children,\n  isActive,\n  onClick,\n  className = \"\",\n  ...props\n}: any) => {\n  return (\n    <button\n      className={`tabs-trigger ${isActive ? \"active\" : \"\"} ${className}`}\n      onClick={onClick}\n      role=\"tab\"\n      aria-selected={isActive}\n      {...props}\n    >\n      {children}\n    </button>\n  );\n};\n\nconst TabsContent = ({\n  value,\n  activeTab,\n  children,\n  className = \"\",\n  ...props\n}: any) => {\n  if (value !== activeTab) return null;\n\n  return (\n    <div className={`tabs-content ${className}`} role=\"tabpanel\" {...props}>\n      {children}\n    </div>\n  );\n};\n\ndescribe(\"UI Components\", () => {\n  describe(\"Button\", () => {\n    it(\"renders with default props\", () => {\n      render(<Button>Click me</Button>);\n      const button = screen.getByRole(\"button\", { name: \"Click me\" });\n      expect(button).toBeInTheDocument();\n      expect(button).toHaveClass(\"button\", \"btn-default\", \"btn-default-size\");\n    });\n\n    it(\"applies variant classes\", () => {\n      render(<Button variant=\"destructive\">Delete</Button>);\n      const button = screen.getByRole(\"button\");\n      expect(button).toHaveClass(\"btn-destructive\");\n    });\n\n    it(\"applies size classes\", () => {\n      render(<Button size=\"lg\">Large Button</Button>);\n      const button = screen.getByRole(\"button\");\n      expect(button).toHaveClass(\"btn-lg\");\n    });\n\n    it(\"handles click events\", () => {\n      const handleClick = jest.fn();\n      render(<Button onClick={handleClick}>Click me</Button>);\n\n      fireEvent.click(screen.getByRole(\"button\"));\n      expect(handleClick).toHaveBeenCalledTimes(1);\n    });\n\n    it(\"can be disabled\", () => {\n      render(<Button disabled>Disabled Button</Button>);\n      const button = screen.getByRole(\"button\");\n      expect(button).toBeDisabled();\n    });\n\n    it(\"accepts custom className\", () => {\n      render(<Button className=\"custom-class\">Custom</Button>);\n      const button = screen.getByRole(\"button\");\n      expect(button).toHaveClass(\"custom-class\");\n    });\n  });\n\n  describe(\"Input\", () => {\n    it(\"renders with default props\", () => {\n      render(<Input placeholder=\"Enter text\" />);\n      const input = screen.getByPlaceholderText(\"Enter text\");\n      expect(input).toBeInTheDocument();\n      expect(input).toHaveAttribute(\"type\", \"text\");\n    });\n\n    it(\"handles value and onChange\", () => {\n      const handleChange = jest.fn();\n      render(<Input value=\"test\" onChange={handleChange} />);\n\n      const input = screen.getByDisplayValue(\"test\");\n      fireEvent.change(input, { target: { value: \"new value\" } });\n      expect(handleChange).toHaveBeenCalled();\n    });\n\n    it(\"supports different input types\", () => {\n      render(<Input type=\"email\" placeholder=\"Email\" />);\n      const input = screen.getByPlaceholderText(\"Email\");\n      expect(input).toHaveAttribute(\"type\", \"email\");\n    });\n\n    it(\"can be disabled\", () => {\n      render(<Input disabled placeholder=\"Disabled\" />);\n      const input = screen.getByPlaceholderText(\"Disabled\");\n      expect(input).toBeDisabled();\n    });\n  });\n\n  describe(\"Card Components\", () => {\n    it(\"renders card with content\", () => {\n      render(\n        <Card>\n          <CardHeader>\n            <CardTitle>Card Title</CardTitle>\n          </CardHeader>\n          <CardContent>Card content goes here</CardContent>\n        </Card>,\n      );\n\n      expect(screen.getByText(\"Card Title\")).toBeInTheDocument();\n      expect(screen.getByText(\"Card content goes here\")).toBeInTheDocument();\n    });\n\n    it(\"applies CSS classes correctly\", () => {\n      const { container } = render(\n        <Card className=\"custom-card\">\n          <CardHeader className=\"custom-header\" />\n          <CardContent className=\"custom-content\" />\n        </Card>,\n      );\n\n      expect(container.firstChild).toHaveClass(\"card\", \"custom-card\");\n      expect(container.querySelector(\".card-header\")).toHaveClass(\n        \"custom-header\",\n      );\n      expect(container.querySelector(\".card-content\")).toHaveClass(\n        \"custom-content\",\n      );\n    });\n  });\n\n  describe(\"Badge\", () => {\n    it(\"renders with default variant\", () => {\n      render(<Badge>Default Badge</Badge>);\n      const badge = screen.getByText(\"Default Badge\");\n      expect(badge).toHaveClass(\"badge\", \"badge-default\");\n    });\n\n    it(\"applies variant classes\", () => {\n      render(<Badge variant=\"destructive\">Error</Badge>);\n      const badge = screen.getByText(\"Error\");\n      expect(badge).toHaveClass(\"badge-destructive\");\n    });\n  });\n\n  describe(\"Select\", () => {\n    it(\"renders select with options\", () => {\n      render(\n        <Select value=\"option1\" placeholder=\"Choose option\">\n          <SelectItem value=\"option1\">Option 1</SelectItem>\n          <SelectItem value=\"option2\">Option 2</SelectItem>\n        </Select>,\n      );\n\n      const select = screen.getByDisplayValue(\"Option 1\");\n      expect(select).toBeInTheDocument();\n    });\n\n    it(\"handles value changes\", () => {\n      const handleChange = jest.fn();\n      render(\n        <Select value=\"\" onValueChange={handleChange}>\n          <SelectItem value=\"option1\">Option 1</SelectItem>\n          <SelectItem value=\"option2\">Option 2</SelectItem>\n        </Select>,\n      );\n\n      const select = screen.getByRole(\"combobox\");\n      fireEvent.change(select, { target: { value: \"option1\" } });\n      expect(handleChange).toHaveBeenCalledWith(\"option1\");\n    });\n\n    it(\"can be disabled\", () => {\n      render(\n        <Select disabled>\n          <SelectItem value=\"option1\">Option 1</SelectItem>\n        </Select>,\n      );\n\n      const select = screen.getByRole(\"combobox\");\n      expect(select).toBeDisabled();\n    });\n  });\n\n  describe(\"Checkbox\", () => {\n    it(\"renders unchecked by default\", () => {\n      render(<Checkbox id=\"test-checkbox\" />);\n      const checkbox = screen.getByRole(\"checkbox\");\n      expect(checkbox).not.toBeChecked();\n    });\n\n    it(\"handles checked state\", () => {\n      const handleChange = jest.fn();\n      render(<Checkbox checked={false} onCheckedChange={handleChange} />);\n\n      const checkbox = screen.getByRole(\"checkbox\");\n      fireEvent.click(checkbox);\n      expect(handleChange).toHaveBeenCalledWith(true);\n    });\n\n    it(\"can be disabled\", () => {\n      render(<Checkbox disabled />);\n      const checkbox = screen.getByRole(\"checkbox\");\n      expect(checkbox).toBeDisabled();\n    });\n  });\n\n  describe(\"Label\", () => {\n    it(\"renders with htmlFor attribute\", () => {\n      render(<Label htmlFor=\"input-id\">Input Label</Label>);\n      const label = screen.getByText(\"Input Label\");\n      expect(label).toHaveAttribute(\"for\", \"input-id\");\n    });\n\n    it(\"can be clicked to focus associated input\", () => {\n      render(\n        <div>\n          <Label htmlFor=\"test-input\">Test Label</Label>\n          <Input id=\"test-input\" placeholder=\"Test\" />\n        </div>,\n      );\n\n      const label = screen.getByText(\"Test Label\");\n      const input = screen.getByPlaceholderText(\"Test\");\n\n      fireEvent.click(label);\n      expect(input).toHaveFocus();\n    });\n  });\n\n  describe(\"Switch\", () => {\n    it(\"renders as unchecked by default\", () => {\n      render(<Switch />);\n      const switchElement = screen.getByRole(\"switch\");\n      // Radix UI Switch renders correctly with proper switch role\n      expect(switchElement).toBeInTheDocument();\n      expect(switchElement).toHaveAttribute(\"role\", \"switch\");\n    });\n\n    it(\"handles checked state changes\", () => {\n      const handleChange = jest.fn();\n      render(<Switch checked={false} onCheckedChange={handleChange} />);\n\n      const switchElement = screen.getByRole(\"switch\");\n      fireEvent.click(switchElement);\n      expect(handleChange).toHaveBeenCalledWith(true);\n    });\n\n    it(\"applies checked class when checked\", () => {\n      render(<Switch checked={true} />);\n      const switchElement = screen.getByRole(\"switch\");\n      expect(switchElement).toHaveClass(\"switch-checked\");\n    });\n\n    it(\"can be disabled\", () => {\n      render(<Switch disabled />);\n      const switchElement = screen.getByRole(\"switch\");\n      expect(switchElement).toBeDisabled();\n    });\n  });\n\n  describe(\"Slider\", () => {\n    it(\"renders with default values\", () => {\n      render(<Slider />);\n      const slider = screen.getByRole(\"slider\");\n      expect(slider).toHaveAttribute(\"min\", \"0\");\n      expect(slider).toHaveAttribute(\"max\", \"100\");\n      expect(slider).toHaveAttribute(\"step\", \"1\");\n    });\n\n    it(\"handles value changes\", () => {\n      const handleChange = jest.fn();\n      render(<Slider value={[50]} onValueChange={handleChange} />);\n\n      const slider = screen.getByRole(\"slider\");\n      fireEvent.change(slider, { target: { value: \"75\" } });\n      expect(handleChange).toHaveBeenCalledWith([75]);\n    });\n\n    it(\"respects min, max, and step props\", () => {\n      render(<Slider min={10} max={200} step={5} />);\n      const slider = screen.getByRole(\"slider\");\n      expect(slider).toHaveAttribute(\"min\", \"10\");\n      expect(slider).toHaveAttribute(\"max\", \"200\");\n      expect(slider).toHaveAttribute(\"step\", \"5\");\n    });\n  });\n\n  describe(\"Progress\", () => {\n    it(\"renders with correct progress bar width\", () => {\n      render(<Progress value={50} max={100} />);\n      const progressBar = screen.getByRole(\"progressbar\");\n      expect(progressBar).toHaveStyle({ width: \"50%\" });\n      expect(progressBar).toHaveAttribute(\"aria-valuenow\", \"50\");\n      expect(progressBar).toHaveAttribute(\"aria-valuemax\", \"100\");\n    });\n\n    it(\"handles different value ranges\", () => {\n      render(<Progress value={3} max={5} />);\n      const progressBar = screen.getByRole(\"progressbar\");\n      expect(progressBar).toHaveStyle({ width: \"60%\" });\n    });\n\n    it(\"applies custom className\", () => {\n      const { container } = render(<Progress className=\"custom-progress\" />);\n      expect(container.firstChild).toHaveClass(\"custom-progress\");\n    });\n  });\n\n  describe(\"Alert\", () => {\n    it(\"renders with default variant\", () => {\n      render(\n        <Alert>\n          <AlertDescription>This is an alert</AlertDescription>\n        </Alert>,\n      );\n\n      const alert = screen.getByRole(\"alert\");\n      expect(alert).toHaveClass(\"alert\", \"alert-default\");\n      expect(screen.getByText(\"This is an alert\")).toBeInTheDocument();\n    });\n\n    it(\"applies destructive variant\", () => {\n      render(\n        <Alert variant=\"destructive\">\n          <AlertDescription>Error occurred</AlertDescription>\n        </Alert>,\n      );\n\n      const alert = screen.getByRole(\"alert\");\n      expect(alert).toHaveClass(\"alert-destructive\");\n    });\n  });\n\n  describe(\"Textarea\", () => {\n    it(\"renders with default props\", () => {\n      render(<Textarea placeholder=\"Enter description\" />);\n      const textarea = screen.getByPlaceholderText(\"Enter description\");\n      expect(textarea).toBeInTheDocument();\n      expect(textarea).toHaveAttribute(\"rows\", \"3\");\n    });\n\n    it(\"handles value and onChange\", () => {\n      const handleChange = jest.fn();\n      render(<Textarea value=\"initial text\" onChange={handleChange} />);\n\n      const textarea = screen.getByDisplayValue(\"initial text\");\n      fireEvent.change(textarea, { target: { value: \"new text\" } });\n      expect(handleChange).toHaveBeenCalled();\n    });\n\n    it(\"respects rows prop\", () => {\n      render(<Textarea rows={5} />);\n      const textarea = screen.getByRole(\"textbox\");\n      expect(textarea).toHaveAttribute(\"rows\", \"5\");\n    });\n  });\n\n  describe(\"Tabs\", () => {\n    it(\"renders tabs with content\", () => {\n      render(\n        <Tabs value=\"tab1\">\n          <TabsList>\n            <TabsTrigger value=\"tab1\">Tab 1</TabsTrigger>\n            <TabsTrigger value=\"tab2\">Tab 2</TabsTrigger>\n          </TabsList>\n          <TabsContent value=\"tab1\">Content 1</TabsContent>\n          <TabsContent value=\"tab2\">Content 2</TabsContent>\n        </Tabs>,\n      );\n\n      expect(screen.getByText(\"Tab 1\")).toBeInTheDocument();\n      expect(screen.getByText(\"Tab 2\")).toBeInTheDocument();\n      expect(screen.getByText(\"Content 1\")).toBeInTheDocument();\n      expect(screen.queryByText(\"Content 2\")).not.toBeInTheDocument();\n    });\n\n    it(\"handles tab switching\", () => {\n      const handleTabChange = jest.fn();\n      render(\n        <Tabs value=\"tab1\" onValueChange={handleTabChange}>\n          <TabsList>\n            <TabsTrigger value=\"tab1\">Tab 1</TabsTrigger>\n            <TabsTrigger value=\"tab2\">Tab 2</TabsTrigger>\n          </TabsList>\n          <TabsContent value=\"tab1\">Content 1</TabsContent>\n          <TabsContent value=\"tab2\">Content 2</TabsContent>\n        </Tabs>,\n      );\n\n      fireEvent.click(screen.getByText(\"Tab 2\"));\n      expect(handleTabChange).toHaveBeenCalledWith(\"tab2\");\n    });\n\n    it(\"shows active tab styling\", () => {\n      render(\n        <Tabs value=\"tab2\">\n          <TabsList>\n            <TabsTrigger value=\"tab1\">Tab 1</TabsTrigger>\n            <TabsTrigger value=\"tab2\">Tab 2</TabsTrigger>\n          </TabsList>\n        </Tabs>,\n      );\n\n      const activeTab = screen.getByText(\"Tab 2\");\n      const inactiveTab = screen.getByText(\"Tab 1\");\n\n      expect(activeTab).toHaveClass(\"active\");\n      expect(inactiveTab).not.toHaveClass(\"active\");\n    });\n  });\n\n  describe(\"Component Integration\", () => {\n    it(\"works together in complex forms\", async () => {\n      const user = userEvent.setup();\n      const handleSubmit = jest.fn();\n\n      render(\n        <Card>\n          <CardHeader>\n            <CardTitle>User Profile</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <form onSubmit={handleSubmit}>\n              <div>\n                <Label htmlFor=\"name\">Name</Label>\n                <Input id=\"name\" placeholder=\"Enter name\" />\n              </div>\n              <div>\n                <Label htmlFor=\"email\">Email</Label>\n                <Input id=\"email\" type=\"email\" placeholder=\"Enter email\" />\n              </div>\n              <div>\n                <Label htmlFor=\"notifications\">\n                  <Checkbox id=\"notifications\" />\n                  Enable notifications\n                </Label>\n              </div>\n              <div>\n                <Label>Theme</Label>\n                <Select>\n                  <SelectItem value=\"light\">Light</SelectItem>\n                  <SelectItem value=\"dark\">Dark</SelectItem>\n                </Select>\n              </div>\n              <Button type=\"submit\">Save Profile</Button>\n            </form>\n          </CardContent>\n        </Card>,\n      );\n\n      // Fill out the form\n      await user.type(screen.getByPlaceholderText(\"Enter name\"), \"John Doe\");\n      await user.type(\n        screen.getByPlaceholderText(\"Enter email\"),\n        \"john@example.com\",\n      );\n      await user.click(screen.getByRole(\"checkbox\"));\n\n      // Submit the form\n      await user.click(screen.getByText(\"Save Profile\"));\n\n      expect(screen.getByDisplayValue(\"John Doe\")).toBeInTheDocument();\n      expect(screen.getByDisplayValue(\"john@example.com\")).toBeInTheDocument();\n      expect(screen.getByRole(\"checkbox\")).toBeChecked();\n    });\n\n    it(\"handles accessibility properly\", () => {\n      render(\n        <div>\n          <Label htmlFor=\"accessible-input\">Accessible Input</Label>\n          <Input id=\"accessible-input\" aria-describedby=\"help-text\" />\n          <div id=\"help-text\">This is help text</div>\n\n          <Alert>\n            <AlertDescription>Important information</AlertDescription>\n          </Alert>\n\n          <Progress value={75} aria-label=\"Loading progress\" />\n        </div>,\n      );\n\n      const input = screen.getByLabelText(\"Accessible Input\");\n      expect(input).toHaveAttribute(\"aria-describedby\", \"help-text\");\n\n      const alert = screen.getByRole(\"alert\");\n      expect(alert).toBeInTheDocument();\n\n      const progress = screen.getByLabelText(\"Loading progress\");\n      // Radix UI Progress renders correctly and is accessible by label\n      expect(progress).toBeInTheDocument();\n      expect(progress).toHaveAttribute(\"aria-label\", \"Loading progress\");\n    });\n  });\n});\n"],"names":["Button","variant","size","disabled","children","onClick","className","props","baseClasses","variantClasses","default","destructive","outline","secondary","ghost","link","sizeClasses","sm","lg","icon","button","Input","type","placeholder","value","onChange","input","Card","div","CardHeader","CardContent","CardTitle","h3","Badge","span","Select","onValueChange","select","e","target","option","SelectItem","Checkbox","checked","onCheckedChange","id","Label","htmlFor","handleClick","associatedInput","document","getElementById","focus","label","Switch","role","aria-checked","Slider","min","max","step","Number","Progress","style","width","aria-valuenow","aria-valuemax","Alert","AlertDescription","Textarea","rows","textarea","Tabs","React","Children","map","child","cloneElement","activeTab","onTabChange","TabsList","index","isActive","TabsTrigger","aria-selected","TabsContent","describe","it","render","screen","getByRole","name","expect","toBeInTheDocument","toHaveClass","jest","fn","fireEvent","click","toHaveBeenCalledTimes","toBeDisabled","getByPlaceholderText","toHaveAttribute","handleChange","getByDisplayValue","change","toHaveBeenCalled","getByText","container","firstChild","querySelector","badge","toHaveBeenCalledWith","checkbox","not","toBeChecked","toHaveFocus","switchElement","slider","progressBar","toHaveStyle","alert","queryByText","handleTabChange","inactiveTab","user","userEvent","setup","handleSubmit","form","onSubmit","aria-describedby","aria-label","getByLabelText","progress"],"mappings":"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"}
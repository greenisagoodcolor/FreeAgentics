{"version":3,"names":["MetricsPanel","view","cov_1twa28z033","f","router","s","_navigation","useRouter","agents","b","_hooks","useAppSelector","state","conversations","analytics","metrics","totalAgents","Object","keys","length","activeAgents","values","filter","a","status","totalMessages","reduce","total","conv","messages","avgResponseTime","averageResponseTime","label","value","toString","change","trend","icon","_lucidereact","Users","color","toFixed","Activity","toLocaleString","MessageSquare","Zap","Brain","TrendingUp","_jsxruntime","jsx","className","jsxs","map","metric","index","Icon","onClick","push","Presentation"],"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/app/dashboard/components/panels/MetricsPanel/index.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { useAppSelector } from \"@/store/hooks\";\nimport { DashboardView } from \"../../../../page\";\nimport {\n  Activity,\n  Users,\n  MessageSquare,\n  Brain,\n  TrendingUp,\n  Zap,\n  Presentation,\n} from \"lucide-react\";\n\ninterface MetricsPanelProps {\n  view: DashboardView;\n}\n\nexport default function MetricsPanel({ view }: MetricsPanelProps) {\n  const router = useRouter();\n\n  // Redux state\n  const agents = useAppSelector((state) => state.agents?.agents) || {};\n  const conversations =\n    useAppSelector((state) => state.conversations?.conversations) || {};\n  const analytics = useAppSelector((state) => state.analytics) || {\n    metrics: {},\n  };\n\n  // Calculate metrics\n  const totalAgents = Object.keys(agents).length;\n  const activeAgents = Object.values(agents).filter(\n    (a: any) => a.status === \"active\",\n  ).length;\n  const totalMessages = Object.values(conversations).reduce(\n    (total: number, conv: any) => {\n      return total + (conv.messages?.length || 0);\n    },\n    0,\n  );\n  const avgResponseTime = (analytics as any).metrics?.averageResponseTime || 0;\n\n  const metrics = [\n    {\n      label: \"TOTAL AGENTS\",\n      value: totalAgents.toString(),\n      change: \"+2\",\n      trend: \"up\",\n      icon: Users,\n      color: \"text-blue-400\",\n    },\n    {\n      label: \"ACTIVE AGENTS\",\n      value: activeAgents.toString(),\n      change: `${((activeAgents / totalAgents) * 100 || 0).toFixed(0)}%`,\n      trend: \"up\",\n      icon: Activity,\n      color: \"text-green-400\",\n    },\n    {\n      label: \"TOTAL MESSAGES\",\n      value: totalMessages.toLocaleString(),\n      change: \"+156\",\n      trend: \"up\",\n      icon: MessageSquare,\n      color: \"text-purple-400\",\n    },\n    {\n      label: \"AVG RESPONSE\",\n      value: `${avgResponseTime.toFixed(0)}ms`,\n      change: \"-12ms\",\n      trend: \"down\",\n      icon: Zap,\n      color: \"text-yellow-400\",\n    },\n    {\n      label: \"KNOWLEDGE NODES\",\n      value: \"1,247\",\n      change: \"+89\",\n      trend: \"up\",\n      icon: Brain,\n      color: \"text-indigo-400\",\n    },\n    {\n      label: \"SYSTEM HEALTH\",\n      value: \"99.9%\",\n      change: \"+0.1%\",\n      trend: \"up\",\n      icon: TrendingUp,\n      color: \"text-emerald-400\",\n    },\n  ];\n\n  return (\n    <div className=\"h-full bg-[var(--bg-primary)] p-4\">\n      <div className=\"grid grid-cols-7 gap-4 h-full\">\n        {metrics.map((metric, index) => {\n          const Icon = metric.icon;\n          return (\n            <div\n              key={metric.label}\n              className=\"bg-[var(--bg-secondary)] border border-[var(--bg-tertiary)] rounded-lg p-4 flex flex-col justify-between\"\n            >\n              <div className=\"flex items-center justify-between mb-2\">\n                <Icon className={`w-5 h-5 ${metric.color}`} />\n                <span\n                  className={`text-xs font-mono ${\n                    metric.trend === \"up\" ? \"text-green-400\" : \"text-red-400\"\n                  }`}\n                >\n                  {metric.change}\n                </span>\n              </div>\n\n              <div>\n                <div className=\"text-2xl font-bold font-mono text-[var(--text-primary)] mb-1\">\n                  {metric.value}\n                </div>\n                <div className=\"text-xs text-[var(--text-secondary)] font-mono\">\n                  {metric.label}\n                </div>\n              </div>\n            </div>\n          );\n        })}\n\n        {/* CEO Demo Button */}\n        <div\n          className=\"bg-[var(--bg-secondary)] border border-[var(--primary-amber)] rounded-lg p-4 flex flex-col justify-center items-center cursor-pointer hover:bg-[var(--bg-tertiary)] transition-colors\"\n          onClick={() => router.push(\"/dashboard?view=ceo-demo\")}\n        >\n          <Presentation className=\"w-8 h-8 text-[var(--primary-amber)] mb-2\" />\n          <div className=\"text-sm font-bold text-[var(--primary-amber)] font-mono\">\n            CEO DEMO\n          </div>\n          <div className=\"text-xs text-[var(--text-secondary)] font-mono mt-1\">\n            Launch Demo\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"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","ignoreList":[]}
90a94b221769b20443e384fc8556f9eb
"use client";
"use strict";

/* istanbul ignore next */
function cov_luq6hq4nf() {
  var path = "/Users/matthewmoroney/builds/FreeAgentics/web/components/free-energy-landscape-viz.tsx";
  var hash = "39a152805736709a72eb52405c2a83f767fe6339";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewmoroney/builds/FreeAgentics/web/components/free-energy-landscape-viz.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 38
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 24
        }
      },
      "6": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 48
        }
      },
      "7": {
        start: {
          line: 21,
          column: 29
        },
        end: {
          line: 21,
          column: 72
        }
      },
      "8": {
        start: {
          line: 22,
          column: 26
        },
        end: {
          line: 22,
          column: 66
        }
      },
      "9": {
        start: {
          line: 23,
          column: 14
        },
        end: {
          line: 23,
          column: 34
        }
      },
      "10": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 38
        }
      },
      "11": {
        start: {
          line: 25,
          column: 15
        },
        end: {
          line: 25,
          column: 36
        }
      },
      "12": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 38
        }
      },
      "13": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 51
        }
      },
      "14": {
        start: {
          line: 28,
          column: 39
        },
        end: {
          line: 28,
          column: 51
        }
      },
      "15": {
        start: {
          line: 29,
          column: 28
        },
        end: {
          line: 29,
          column: 41
        }
      },
      "16": {
        start: {
          line: 30,
          column: 27
        },
        end: {
          line: 30,
          column: 40
        }
      },
      "17": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 33,
          column: 20
        }
      },
      "18": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 66
        }
      },
      "19": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "20": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 19
        }
      },
      "21": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "22": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 42,
          column: 10
        }
      },
      "23": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 53
        }
      },
      "24": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "25": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 30
        }
      },
      "26": {
        start: {
          line: 48,
          column: 17
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "27": {
        start: {
          line: 51,
          column: 32
        },
        end: {
          line: 51,
          column: 88
        }
      },
      "28": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "29": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "30": {
        start: {
          line: 54,
          column: 23
        },
        end: {
          line: 54,
          column: 95
        }
      },
      "31": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 59,
          column: 13
        }
      },
      "32": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 56,
          column: 57
        }
      },
      "33": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 39
        }
      },
      "34": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 62,
          column: 25
        }
      },
      "35": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 65,
          column: 5
        }
      },
      "36": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 31
        }
      },
      "37": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 66,
          column: 18
        }
      },
      "38": {
        start: {
          line: 68,
          column: 31
        },
        end: {
          line: 517,
          column: 1
        }
      },
      "39": {
        start: {
          line: 69,
          column: 19
        },
        end: {
          line: 69,
          column: 43
        }
      },
      "40": {
        start: {
          line: 70,
          column: 46
        },
        end: {
          line: 70,
          column: 72
        }
      },
      "41": {
        start: {
          line: 71,
          column: 50
        },
        end: {
          line: 74,
          column: 6
        }
      },
      "42": {
        start: {
          line: 75,
          column: 60
        },
        end: {
          line: 78,
          column: 6
        }
      },
      "43": {
        start: {
          line: 79,
          column: 40
        },
        end: {
          line: 79,
          column: 65
        }
      },
      "44": {
        start: {
          line: 80,
          column: 36
        },
        end: {
          line: 80,
          column: 67
        }
      },
      "45": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 163,
          column: 7
        }
      },
      "46": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 52
        }
      },
      "47": {
        start: {
          line: 83,
          column: 45
        },
        end: {
          line: 83,
          column: 52
        }
      },
      "48": {
        start: {
          line: 84,
          column: 20
        },
        end: {
          line: 84,
          column: 46
        }
      },
      "49": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 36
        }
      },
      "50": {
        start: {
          line: 86,
          column: 22
        },
        end: {
          line: 86,
          column: 25
        }
      },
      "51": {
        start: {
          line: 87,
          column: 23
        },
        end: {
          line: 87,
          column: 26
        }
      },
      "52": {
        start: {
          line: 88,
          column: 23
        },
        end: {
          line: 93,
          column: 9
        }
      },
      "53": {
        start: {
          line: 94,
          column: 27
        },
        end: {
          line: 94,
          column: 61
        }
      },
      "54": {
        start: {
          line: 95,
          column: 28
        },
        end: {
          line: 95,
          column: 63
        }
      },
      "55": {
        start: {
          line: 97,
          column: 18
        },
        end: {
          line: 97,
          column: 94
        }
      },
      "56": {
        start: {
          line: 99,
          column: 24
        },
        end: {
          line: 99,
          column: 50
        }
      },
      "57": {
        start: {
          line: 99,
          column: 46
        },
        end: {
          line: 99,
          column: 49
        }
      },
      "58": {
        start: {
          line: 100,
          column: 24
        },
        end: {
          line: 100,
          column: 50
        }
      },
      "59": {
        start: {
          line: 100,
          column: 46
        },
        end: {
          line: 100,
          column: 49
        }
      },
      "60": {
        start: {
          line: 101,
          column: 29
        },
        end: {
          line: 101,
          column: 65
        }
      },
      "61": {
        start: {
          line: 101,
          column: 51
        },
        end: {
          line: 101,
          column: 64
        }
      },
      "62": {
        start: {
          line: 102,
          column: 23
        },
        end: {
          line: 105,
          column: 10
        }
      },
      "63": {
        start: {
          line: 106,
          column: 23
        },
        end: {
          line: 109,
          column: 10
        }
      },
      "64": {
        start: {
          line: 110,
          column: 33
        },
        end: {
          line: 110,
          column: 97
        }
      },
      "65": {
        start: {
          line: 111,
          column: 38
        },
        end: {
          line: 114,
          column: 10
        }
      },
      "66": {
        start: {
          line: 116,
          column: 29
        },
        end: {
          line: 116,
          column: 209
        }
      },
      "67": {
        start: {
          line: 116,
          column: 46
        },
        end: {
          line: 116,
          column: 208
        }
      },
      "68": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 124,
          column: 9
        }
      },
      "69": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 77
        }
      },
      "70": {
        start: {
          line: 120,
          column: 15
        },
        end: {
          line: 124,
          column: 9
        }
      },
      "71": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 106
        }
      },
      "72": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 81
        }
      },
      "73": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 128,
          column: 9
        }
      },
      "74": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 76
        }
      },
      "75": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 132,
          column: 9
        }
      },
      "76": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 93
        }
      },
      "77": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 136,
          column: 9
        }
      },
      "78": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 74
        }
      },
      "79": {
        start: {
          line: 138,
          column: 22
        },
        end: {
          line: 138,
          column: 114
        }
      },
      "80": {
        start: {
          line: 138,
          column: 61
        },
        end: {
          line: 138,
          column: 113
        }
      },
      "81": {
        start: {
          line: 139,
          column: 22
        },
        end: {
          line: 139,
          column: 112
        }
      },
      "82": {
        start: {
          line: 139,
          column: 59
        },
        end: {
          line: 139,
          column: 111
        }
      },
      "83": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 140,
          column: 107
        }
      },
      "84": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 58
        }
      },
      "85": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 143,
          column: 167
        }
      },
      "86": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 144,
          column: 179
        }
      },
      "87": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 148,
          column: 9
        }
      },
      "88": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 81
        }
      },
      "89": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 75
        }
      },
      "90": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 152,
          column: 82
        }
      },
      "91": {
        start: {
          line: 165,
          column: 26
        },
        end: {
          line: 167,
          column: 5
        }
      },
      "92": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 166,
          column: 267
        }
      },
      "93": {
        start: {
          line: 166,
          column: 119
        },
        end: {
          line: 166,
          column: 130
        }
      },
      "94": {
        start: {
          line: 166,
          column: 148
        },
        end: {
          line: 166,
          column: 159
        }
      },
      "95": {
        start: {
          line: 166,
          column: 192
        },
        end: {
          line: 166,
          column: 217
        }
      },
      "96": {
        start: {
          line: 168,
          column: 30
        },
        end: {
          line: 189,
          column: 5
        }
      },
      "97": {
        start: {
          line: 170,
          column: 33
        },
        end: {
          line: 173,
          column: 25
        }
      },
      "98": {
        start: {
          line: 175,
          column: 25
        },
        end: {
          line: 175,
          column: 43
        }
      },
      "99": {
        start: {
          line: 176,
          column: 22
        },
        end: {
          line: 176,
          column: 68
        }
      },
      "100": {
        start: {
          line: 177,
          column: 22
        },
        end: {
          line: 177,
          column: 68
        }
      },
      "101": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 186,
          column: 9
        }
      },
      "102": {
        start: {
          line: 178,
          column: 20
        },
        end: {
          line: 178,
          column: 21
        }
      },
      "103": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 185,
          column: 13
        }
      },
      "104": {
        start: {
          line: 179,
          column: 24
        },
        end: {
          line: 179,
          column: 25
        }
      },
      "105": {
        start: {
          line: 180,
          column: 26
        },
        end: {
          line: 180,
          column: 56
        }
      },
      "106": {
        start: {
          line: 181,
          column: 26
        },
        end: {
          line: 181,
          column: 56
        }
      },
      "107": {
        start: {
          line: 183,
          column: 32
        },
        end: {
          line: 183,
          column: 196
        }
      },
      "108": {
        start: {
          line: 183,
          column: 58
        },
        end: {
          line: 183,
          column: 195
        }
      },
      "109": {
        start: {
          line: 184,
          column: 16
        },
        end: {
          line: 184,
          column: 59
        }
      },
      "110": {
        start: {
          line: 187,
          column: 25
        },
        end: {
          line: 187,
          column: 51
        }
      },
      "111": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 250
        }
      },
      "112": {
        start: {
          line: 188,
          column: 138
        },
        end: {
          line: 188,
          column: 157
        }
      },
      "113": {
        start: {
          line: 188,
          column: 205
        },
        end: {
          line: 188,
          column: 224
        }
      },
      "114": {
        start: {
          line: 190,
          column: 30
        },
        end: {
          line: 200,
          column: 5
        }
      },
      "115": {
        start: {
          line: 192,
          column: 24
        },
        end: {
          line: 192,
          column: 83
        }
      },
      "116": {
        start: {
          line: 192,
          column: 53
        },
        end: {
          line: 192,
          column: 64
        }
      },
      "117": {
        start: {
          line: 192,
          column: 71
        },
        end: {
          line: 192,
          column: 82
        }
      },
      "118": {
        start: {
          line: 193,
          column: 32
        },
        end: {
          line: 198,
          column: 10
        }
      },
      "119": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 199,
          column: 271
        }
      },
      "120": {
        start: {
          line: 199,
          column: 119
        },
        end: {
          line: 199,
          column: 148
        }
      },
      "121": {
        start: {
          line: 199,
          column: 168
        },
        end: {
          line: 199,
          column: 193
        }
      },
      "122": {
        start: {
          line: 201,
          column: 37
        },
        end: {
          line: 204,
          column: 5
        }
      },
      "123": {
        start: {
          line: 202,
          column: 21
        },
        end: {
          line: 202,
          column: 98
        }
      },
      "124": {
        start: {
          line: 202,
          column: 39
        },
        end: {
          line: 202,
          column: 51
        }
      },
      "125": {
        start: {
          line: 202,
          column: 60
        },
        end: {
          line: 202,
          column: 72
        }
      },
      "126": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 203,
          column: 284
        }
      },
      "127": {
        start: {
          line: 203,
          column: 132
        },
        end: {
          line: 203,
          column: 144
        }
      },
      "128": {
        start: {
          line: 203,
          column: 270
        },
        end: {
          line: 203,
          column: 282
        }
      },
      "129": {
        start: {
          line: 205,
          column: 37
        },
        end: {
          line: 207,
          column: 5
        }
      },
      "130": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 206,
          column: 369
        }
      },
      "131": {
        start: {
          line: 206,
          column: 65
        },
        end: {
          line: 206,
          column: 84
        }
      },
      "132": {
        start: {
          line: 206,
          column: 164
        },
        end: {
          line: 206,
          column: 175
        }
      },
      "133": {
        start: {
          line: 206,
          column: 193
        },
        end: {
          line: 206,
          column: 204
        }
      },
      "134": {
        start: {
          line: 206,
          column: 221
        },
        end: {
          line: 206,
          column: 243
        }
      },
      "135": {
        start: {
          line: 206,
          column: 286
        },
        end: {
          line: 206,
          column: 322
        }
      },
      "136": {
        start: {
          line: 208,
          column: 36
        },
        end: {
          line: 210,
          column: 5
        }
      },
      "137": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 209,
          column: 312
        }
      },
      "138": {
        start: {
          line: 209,
          column: 131
        },
        end: {
          line: 209,
          column: 142
        }
      },
      "139": {
        start: {
          line: 209,
          column: 160
        },
        end: {
          line: 209,
          column: 171
        }
      },
      "140": {
        start: {
          line: 209,
          column: 188
        },
        end: {
          line: 209,
          column: 215
        }
      },
      "141": {
        start: {
          line: 211,
          column: 39
        },
        end: {
          line: 216,
          column: 5
        }
      },
      "142": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 213,
          column: 196
        }
      },
      "143": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 215,
          column: 204
        }
      },
      "144": {
        start: {
          line: 217,
          column: 27
        },
        end: {
          line: 235,
          column: 5
        }
      },
      "145": {
        start: {
          line: 218,
          column: 29
        },
        end: {
          line: 218,
          column: 32
        }
      },
      "146": {
        start: {
          line: 219,
          column: 28
        },
        end: {
          line: 219,
          column: 30
        }
      },
      "147": {
        start: {
          line: 220,
          column: 23
        },
        end: {
          line: 220,
          column: 146
        }
      },
      "148": {
        start: {
          line: 222,
          column: 25
        },
        end: {
          line: 222,
          column: 168
        }
      },
      "149": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 223,
          column: 217
        }
      },
      "150": {
        start: {
          line: 223,
          column: 107
        },
        end: {
          line: 223,
          column: 120
        }
      },
      "151": {
        start: {
          line: 223,
          column: 146
        },
        end: {
          line: 223,
          column: 215
        }
      },
      "152": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 225,
          column: 125
        }
      },
      "153": {
        start: {
          line: 227,
          column: 28
        },
        end: {
          line: 230,
          column: 10
        }
      },
      "154": {
        start: {
          line: 231,
          column: 27
        },
        end: {
          line: 231,
          column: 123
        }
      },
      "155": {
        start: {
          line: 231,
          column: 70
        },
        end: {
          line: 231,
          column: 122
        }
      },
      "156": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 232,
          column: 94
        }
      },
      "157": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 234,
          column: 149
        }
      },
      "158": {
        start: {
          line: 236,
          column: 35
        },
        end: {
          line: 244,
          column: 5
        }
      },
      "159": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 243,
          column: 11
        }
      },
      "160": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 238,
          column: 32
        }
      },
      "161": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 240,
          column: 77
        }
      },
      "162": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 242,
          column: 77
        }
      },
      "163": {
        start: {
          line: 245,
          column: 4
        },
        end: {
          line: 516,
          column: 7
        }
      },
      "164": {
        start: {
          line: 292,
          column: 72
        },
        end: {
          line: 297,
          column: 56
        }
      },
      "165": {
        start: {
          line: 295,
          column: 65
        },
        end: {
          line: 295,
          column: 82
        }
      },
      "166": {
        start: {
          line: 436,
          column: 134
        },
        end: {
          line: 451,
          column: 75
        }
      },
      "167": {
        start: {
          line: 518,
          column: 17
        },
        end: {
          line: 518,
          column: 39
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 28
          },
          end: {
            line: 13,
            column: 29
          }
        },
        loc: {
          start: {
            line: 13,
            column: 39
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 13
          },
          end: {
            line: 16,
            column: 14
          }
        },
        loc: {
          start: {
            line: 16,
            column: 24
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 27,
            column: 9
          },
          end: {
            line: 27,
            column: 33
          }
        },
        loc: {
          start: {
            line: 27,
            column: 47
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 27
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 31,
            column: 39
          },
          end: {
            line: 31,
            column: 40
          }
        },
        loc: {
          start: {
            line: 31,
            column: 61
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      },
      "5": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 35,
            column: 9
          },
          end: {
            line: 35,
            column: 34
          }
        },
        loc: {
          start: {
            line: 35,
            column: 53
          },
          end: {
            line: 67,
            column: 1
          }
        },
        line: 35
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 68,
            column: 31
          },
          end: {
            line: 68,
            column: 32
          }
        },
        loc: {
          start: {
            line: 68,
            column: 195
          },
          end: {
            line: 517,
            column: 1
          }
        },
        line: 68
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 82,
            column: 26
          },
          end: {
            line: 82,
            column: 27
          }
        },
        loc: {
          start: {
            line: 82,
            column: 30
          },
          end: {
            line: 153,
            column: 5
          }
        },
        line: 82
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 99,
            column: 41
          },
          end: {
            line: 99,
            column: 42
          }
        },
        loc: {
          start: {
            line: 99,
            column: 46
          },
          end: {
            line: 99,
            column: 49
          }
        },
        line: 99
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 100,
            column: 41
          },
          end: {
            line: 100,
            column: 42
          }
        },
        loc: {
          start: {
            line: 100,
            column: 46
          },
          end: {
            line: 100,
            column: 49
          }
        },
        line: 100
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 101,
            column: 46
          },
          end: {
            line: 101,
            column: 47
          }
        },
        loc: {
          start: {
            line: 101,
            column: 51
          },
          end: {
            line: 101,
            column: 64
          }
        },
        line: 101
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 116,
            column: 41
          },
          end: {
            line: 116,
            column: 42
          }
        },
        loc: {
          start: {
            line: 116,
            column: 46
          },
          end: {
            line: 116,
            column: 208
          }
        },
        line: 116
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 138,
            column: 56
          },
          end: {
            line: 138,
            column: 57
          }
        },
        loc: {
          start: {
            line: 138,
            column: 61
          },
          end: {
            line: 138,
            column: 113
          }
        },
        line: 138
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 139,
            column: 54
          },
          end: {
            line: 139,
            column: 55
          }
        },
        loc: {
          start: {
            line: 139,
            column: 59
          },
          end: {
            line: 139,
            column: 111
          }
        },
        line: 139
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 165,
            column: 26
          },
          end: {
            line: 165,
            column: 27
          }
        },
        loc: {
          start: {
            line: 165,
            column: 65
          },
          end: {
            line: 167,
            column: 5
          }
        },
        line: 165
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 166,
            column: 114
          },
          end: {
            line: 166,
            column: 115
          }
        },
        loc: {
          start: {
            line: 166,
            column: 119
          },
          end: {
            line: 166,
            column: 130
          }
        },
        line: 166
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 166,
            column: 143
          },
          end: {
            line: 166,
            column: 144
          }
        },
        loc: {
          start: {
            line: 166,
            column: 148
          },
          end: {
            line: 166,
            column: 159
          }
        },
        line: 166
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 166,
            column: 187
          },
          end: {
            line: 166,
            column: 188
          }
        },
        loc: {
          start: {
            line: 166,
            column: 192
          },
          end: {
            line: 166,
            column: 217
          }
        },
        line: 166
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 168,
            column: 30
          },
          end: {
            line: 168,
            column: 31
          }
        },
        loc: {
          start: {
            line: 168,
            column: 84
          },
          end: {
            line: 189,
            column: 5
          }
        },
        line: 168
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 183,
            column: 44
          },
          end: {
            line: 183,
            column: 45
          }
        },
        loc: {
          start: {
            line: 183,
            column: 58
          },
          end: {
            line: 183,
            column: 195
          }
        },
        line: 183
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 188,
            column: 133
          },
          end: {
            line: 188,
            column: 134
          }
        },
        loc: {
          start: {
            line: 188,
            column: 138
          },
          end: {
            line: 188,
            column: 157
          }
        },
        line: 188
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 188,
            column: 200
          },
          end: {
            line: 188,
            column: 201
          }
        },
        loc: {
          start: {
            line: 188,
            column: 205
          },
          end: {
            line: 188,
            column: 224
          }
        },
        line: 188
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 190,
            column: 30
          },
          end: {
            line: 190,
            column: 31
          }
        },
        loc: {
          start: {
            line: 190,
            column: 69
          },
          end: {
            line: 200,
            column: 5
          }
        },
        line: 190
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 192,
            column: 48
          },
          end: {
            line: 192,
            column: 49
          }
        },
        loc: {
          start: {
            line: 192,
            column: 53
          },
          end: {
            line: 192,
            column: 64
          }
        },
        line: 192
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 192,
            column: 66
          },
          end: {
            line: 192,
            column: 67
          }
        },
        loc: {
          start: {
            line: 192,
            column: 71
          },
          end: {
            line: 192,
            column: 82
          }
        },
        line: 192
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 199,
            column: 111
          },
          end: {
            line: 199,
            column: 112
          }
        },
        loc: {
          start: {
            line: 199,
            column: 119
          },
          end: {
            line: 199,
            column: 148
          }
        },
        line: 199
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 199,
            column: 163
          },
          end: {
            line: 199,
            column: 164
          }
        },
        loc: {
          start: {
            line: 199,
            column: 168
          },
          end: {
            line: 199,
            column: 193
          }
        },
        line: 199
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 201,
            column: 37
          },
          end: {
            line: 201,
            column: 38
          }
        },
        loc: {
          start: {
            line: 201,
            column: 70
          },
          end: {
            line: 204,
            column: 5
          }
        },
        line: 201
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 202,
            column: 34
          },
          end: {
            line: 202,
            column: 35
          }
        },
        loc: {
          start: {
            line: 202,
            column: 39
          },
          end: {
            line: 202,
            column: 51
          }
        },
        line: 202
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 202,
            column: 55
          },
          end: {
            line: 202,
            column: 56
          }
        },
        loc: {
          start: {
            line: 202,
            column: 60
          },
          end: {
            line: 202,
            column: 72
          }
        },
        line: 202
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 203,
            column: 127
          },
          end: {
            line: 203,
            column: 128
          }
        },
        loc: {
          start: {
            line: 203,
            column: 132
          },
          end: {
            line: 203,
            column: 144
          }
        },
        line: 203
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 203,
            column: 265
          },
          end: {
            line: 203,
            column: 266
          }
        },
        loc: {
          start: {
            line: 203,
            column: 270
          },
          end: {
            line: 203,
            column: 282
          }
        },
        line: 203
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 205,
            column: 37
          },
          end: {
            line: 205,
            column: 38
          }
        },
        loc: {
          start: {
            line: 205,
            column: 87
          },
          end: {
            line: 207,
            column: 5
          }
        },
        line: 205
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 206,
            column: 60
          },
          end: {
            line: 206,
            column: 61
          }
        },
        loc: {
          start: {
            line: 206,
            column: 65
          },
          end: {
            line: 206,
            column: 84
          }
        },
        line: 206
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 206,
            column: 159
          },
          end: {
            line: 206,
            column: 160
          }
        },
        loc: {
          start: {
            line: 206,
            column: 164
          },
          end: {
            line: 206,
            column: 175
          }
        },
        line: 206
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 206,
            column: 188
          },
          end: {
            line: 206,
            column: 189
          }
        },
        loc: {
          start: {
            line: 206,
            column: 193
          },
          end: {
            line: 206,
            column: 204
          }
        },
        line: 206
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 206,
            column: 216
          },
          end: {
            line: 206,
            column: 217
          }
        },
        loc: {
          start: {
            line: 206,
            column: 221
          },
          end: {
            line: 206,
            column: 243
          }
        },
        line: 206
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 206,
            column: 281
          },
          end: {
            line: 206,
            column: 282
          }
        },
        loc: {
          start: {
            line: 206,
            column: 286
          },
          end: {
            line: 206,
            column: 322
          }
        },
        line: 206
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 208,
            column: 36
          },
          end: {
            line: 208,
            column: 37
          }
        },
        loc: {
          start: {
            line: 208,
            column: 65
          },
          end: {
            line: 210,
            column: 5
          }
        },
        line: 208
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 209,
            column: 126
          },
          end: {
            line: 209,
            column: 127
          }
        },
        loc: {
          start: {
            line: 209,
            column: 131
          },
          end: {
            line: 209,
            column: 142
          }
        },
        line: 209
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 209,
            column: 155
          },
          end: {
            line: 209,
            column: 156
          }
        },
        loc: {
          start: {
            line: 209,
            column: 160
          },
          end: {
            line: 209,
            column: 171
          }
        },
        line: 209
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 209,
            column: 183
          },
          end: {
            line: 209,
            column: 184
          }
        },
        loc: {
          start: {
            line: 209,
            column: 188
          },
          end: {
            line: 209,
            column: 215
          }
        },
        line: 209
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 211,
            column: 39
          },
          end: {
            line: 211,
            column: 40
          }
        },
        loc: {
          start: {
            line: 211,
            column: 73
          },
          end: {
            line: 216,
            column: 5
          }
        },
        line: 211
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 217,
            column: 27
          },
          end: {
            line: 217,
            column: 28
          }
        },
        loc: {
          start: {
            line: 217,
            column: 75
          },
          end: {
            line: 235,
            column: 5
          }
        },
        line: 217
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 223,
            column: 102
          },
          end: {
            line: 223,
            column: 103
          }
        },
        loc: {
          start: {
            line: 223,
            column: 107
          },
          end: {
            line: 223,
            column: 120
          }
        },
        line: 223
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 223,
            column: 141
          },
          end: {
            line: 223,
            column: 142
          }
        },
        loc: {
          start: {
            line: 223,
            column: 146
          },
          end: {
            line: 223,
            column: 215
          }
        },
        line: 223
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 231,
            column: 65
          },
          end: {
            line: 231,
            column: 66
          }
        },
        loc: {
          start: {
            line: 231,
            column: 70
          },
          end: {
            line: 231,
            column: 122
          }
        },
        line: 231
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 236,
            column: 35
          },
          end: {
            line: 236,
            column: 36
          }
        },
        loc: {
          start: {
            line: 236,
            column: 80
          },
          end: {
            line: 244,
            column: 5
          }
        },
        line: 236
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 237,
            column: 91
          },
          end: {
            line: 237,
            column: 92
          }
        },
        loc: {
          start: {
            line: 237,
            column: 110
          },
          end: {
            line: 239,
            column: 9
          }
        },
        line: 237
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 239,
            column: 27
          },
          end: {
            line: 239,
            column: 28
          }
        },
        loc: {
          start: {
            line: 239,
            column: 46
          },
          end: {
            line: 241,
            column: 9
          }
        },
        line: 239
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 241,
            column: 26
          },
          end: {
            line: 241,
            column: 27
          }
        },
        loc: {
          start: {
            line: 241,
            column: 45
          },
          end: {
            line: 243,
            column: 9
          }
        },
        line: 241
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 292,
            column: 50
          },
          end: {
            line: 292,
            column: 51
          }
        },
        loc: {
          start: {
            line: 292,
            column: 72
          },
          end: {
            line: 297,
            column: 56
          }
        },
        line: 292
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 295,
            column: 61
          },
          end: {
            line: 295,
            column: 62
          }
        },
        loc: {
          start: {
            line: 295,
            column: 65
          },
          end: {
            line: 295,
            column: 82
          }
        },
        line: 295
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 436,
            column: 105
          },
          end: {
            line: 436,
            column: 106
          }
        },
        loc: {
          start: {
            line: 436,
            column: 134
          },
          end: {
            line: 451,
            column: 75
          }
        },
        line: 436
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 32,
            column: 15
          },
          end: {
            line: 32,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 32,
            column: 29
          },
          end: {
            line: 32,
            column: 45
          }
        }, {
          start: {
            line: 32,
            column: 48
          },
          end: {
            line: 32,
            column: 65
          }
        }],
        line: 32
      },
      "2": {
        loc: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "3": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 20
          }
        }, {
          start: {
            line: 36,
            column: 24
          },
          end: {
            line: 36,
            column: 27
          }
        }, {
          start: {
            line: 36,
            column: 31
          },
          end: {
            line: 36,
            column: 45
          }
        }],
        line: 36
      },
      "4": {
        loc: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "5": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 20
          }
        }, {
          start: {
            line: 39,
            column: 24
          },
          end: {
            line: 39,
            column: 47
          }
        }, {
          start: {
            line: 39,
            column: 51
          },
          end: {
            line: 39,
            column: 76
          }
        }],
        line: 39
      },
      "6": {
        loc: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "7": {
        loc: {
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 45,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 45,
            column: 13
          }
        }, {
          start: {
            line: 45,
            column: 17
          },
          end: {
            line: 45,
            column: 31
          }
        }],
        line: 45
      },
      "8": {
        loc: {
          start: {
            line: 51,
            column: 32
          },
          end: {
            line: 51,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 32
          },
          end: {
            line: 51,
            column: 53
          }
        }, {
          start: {
            line: 51,
            column: 57
          },
          end: {
            line: 51,
            column: 88
          }
        }],
        line: 51
      },
      "9": {
        loc: {
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "10": {
        loc: {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 53,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 53,
            column: 29
          }
        }, {
          start: {
            line: 53,
            column: 33
          },
          end: {
            line: 53,
            column: 79
          }
        }],
        line: 53
      },
      "11": {
        loc: {
          start: {
            line: 54,
            column: 23
          },
          end: {
            line: 54,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 54,
            column: 47
          },
          end: {
            line: 54,
            column: 88
          }
        }, {
          start: {
            line: 54,
            column: 91
          },
          end: {
            line: 54,
            column: 95
          }
        }],
        line: 54
      },
      "12": {
        loc: {
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        }, {
          start: {
            line: 57,
            column: 19
          },
          end: {
            line: 59,
            column: 13
          }
        }],
        line: 55
      },
      "13": {
        loc: {
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 55,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 55,
            column: 20
          }
        }, {
          start: {
            line: 55,
            column: 25
          },
          end: {
            line: 55,
            column: 33
          }
        }, {
          start: {
            line: 55,
            column: 37
          },
          end: {
            line: 55,
            column: 45
          }
        }],
        line: 55
      },
      "14": {
        loc: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "15": {
        loc: {
          start: {
            line: 68,
            column: 88
          },
          end: {
            line: 68,
            column: 110
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 68,
            column: 106
          },
          end: {
            line: 68,
            column: 110
          }
        }],
        line: 68
      },
      "16": {
        loc: {
          start: {
            line: 68,
            column: 112
          },
          end: {
            line: 68,
            column: 134
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 68,
            column: 130
          },
          end: {
            line: 68,
            column: 134
          }
        }],
        line: 68
      },
      "17": {
        loc: {
          start: {
            line: 68,
            column: 136
          },
          end: {
            line: 68,
            column: 158
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 68,
            column: 154
          },
          end: {
            line: 68,
            column: 158
          }
        }],
        line: 68
      },
      "18": {
        loc: {
          start: {
            line: 68,
            column: 160
          },
          end: {
            line: 68,
            column: 190
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 68,
            column: 186
          },
          end: {
            line: 68,
            column: 190
          }
        }],
        line: 68
      },
      "19": {
        loc: {
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 83,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 83,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "20": {
        loc: {
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 83,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 83,
            column: 27
          }
        }, {
          start: {
            line: 83,
            column: 31
          },
          end: {
            line: 83,
            column: 43
          }
        }],
        line: 83
      },
      "21": {
        loc: {
          start: {
            line: 116,
            column: 46
          },
          end: {
            line: 116,
            column: 208
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 46
          },
          end: {
            line: 116,
            column: 81
          }
        }, {
          start: {
            line: 116,
            column: 85
          },
          end: {
            line: 116,
            column: 120
          }
        }, {
          start: {
            line: 116,
            column: 124
          },
          end: {
            line: 116,
            column: 164
          }
        }, {
          start: {
            line: 116,
            column: 168
          },
          end: {
            line: 116,
            column: 208
          }
        }],
        line: 116
      },
      "22": {
        loc: {
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        }, {
          start: {
            line: 120,
            column: 15
          },
          end: {
            line: 124,
            column: 9
          }
        }],
        line: 118
      },
      "23": {
        loc: {
          start: {
            line: 120,
            column: 15
          },
          end: {
            line: 124,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 15
          },
          end: {
            line: 124,
            column: 9
          }
        }, {
          start: {
            line: 122,
            column: 15
          },
          end: {
            line: 124,
            column: 9
          }
        }],
        line: 120
      },
      "24": {
        loc: {
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 128,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 128,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "25": {
        loc: {
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 132,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 132,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "26": {
        loc: {
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "27": {
        loc: {
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 134,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 134,
            column: 27
          }
        }, {
          start: {
            line: 134,
            column: 31
          },
          end: {
            line: 134,
            column: 59
          }
        }],
        line: 134
      },
      "28": {
        loc: {
          start: {
            line: 138,
            column: 62
          },
          end: {
            line: 138,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 138,
            column: 86
          },
          end: {
            line: 138,
            column: 87
          }
        }, {
          start: {
            line: 138,
            column: 90
          },
          end: {
            line: 138,
            column: 101
          }
        }],
        line: 138
      },
      "29": {
        loc: {
          start: {
            line: 139,
            column: 60
          },
          end: {
            line: 139,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 139,
            column: 84
          },
          end: {
            line: 139,
            column: 85
          }
        }, {
          start: {
            line: 139,
            column: 88
          },
          end: {
            line: 139,
            column: 99
          }
        }],
        line: 139
      },
      "30": {
        loc: {
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 148,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 148,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "31": {
        loc: {
          start: {
            line: 183,
            column: 58
          },
          end: {
            line: 183,
            column: 195
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 183,
            column: 184
          },
          end: {
            line: 183,
            column: 188
          }
        }, {
          start: {
            line: 183,
            column: 191
          },
          end: {
            line: 183,
            column: 195
          }
        }],
        line: 183
      },
      "32": {
        loc: {
          start: {
            line: 231,
            column: 71
          },
          end: {
            line: 231,
            column: 110
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 231,
            column: 95
          },
          end: {
            line: 231,
            column: 96
          }
        }, {
          start: {
            line: 231,
            column: 99
          },
          end: {
            line: 231,
            column: 110
          }
        }],
        line: 231
      },
      "33": {
        loc: {
          start: {
            line: 259,
            column: 49
          },
          end: {
            line: 259,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 259,
            column: 67
          },
          end: {
            line: 259,
            column: 76
          }
        }, {
          start: {
            line: 259,
            column: 79
          },
          end: {
            line: 259,
            column: 90
          }
        }],
        line: 259
      },
      "34": {
        loc: {
          start: {
            line: 260,
            column: 50
          },
          end: {
            line: 260,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 260,
            column: 68
          },
          end: {
            line: 260,
            column: 79
          }
        }, {
          start: {
            line: 260,
            column: 82
          },
          end: {
            line: 260,
            column: 90
          }
        }],
        line: 260
      },
      "35": {
        loc: {
          start: {
            line: 293,
            column: 61
          },
          end: {
            line: 293,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 293,
            column: 81
          },
          end: {
            line: 293,
            column: 90
          }
        }, {
          start: {
            line: 293,
            column: 93
          },
          end: {
            line: 293,
            column: 102
          }
        }],
        line: 293
      },
      "36": {
        loc: {
          start: {
            line: 366,
            column: 32
          },
          end: {
            line: 459,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 366,
            column: 32
          },
          end: {
            line: 366,
            column: 45
          }
        }, {
          start: {
            line: 366,
            column: 63
          },
          end: {
            line: 459,
            column: 34
          }
        }],
        line: 366
      },
      "37": {
        loc: {
          start: {
            line: 422,
            column: 77
          },
          end: {
            line: 422,
            column: 134
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 422,
            column: 111
          },
          end: {
            line: 422,
            column: 120
          }
        }, {
          start: {
            line: 422,
            column: 123
          },
          end: {
            line: 422,
            column: 134
          }
        }],
        line: 422
      },
      "38": {
        loc: {
          start: {
            line: 423,
            column: 78
          },
          end: {
            line: 423,
            column: 124
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 423,
            column: 112
          },
          end: {
            line: 423,
            column: 117
          }
        }, {
          start: {
            line: 423,
            column: 120
          },
          end: {
            line: 423,
            column: 124
          }
        }],
        line: 423
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0],
      "17": [0],
      "18": [0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0, 0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matthewmoroney/builds/FreeAgentics/web/components/free-energy-landscape-viz.tsx"],
      sourcesContent: ["\"use client\";\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"./ui/card\";\nimport { Button } from \"./ui/button\";\nimport { Badge } from \"./ui/badge\";\nimport { Slider } from \"./ui/slider\";\n\n/**\n * Free Energy Landscape Visualization Component\n *\n * Interactive D3.js visualization of free energy surfaces with decision boundaries,\n * convergence tracking, and uncertainty regions for scientific publication quality.\n *\n * Implements Task 37.3 requirements for mathematical rigor and real-time updates.\n */\n\ninterface FreeEnergyDataPoint {\n  x: number;\n  y: number;\n  free_energy: number;\n  belief_state: number[];\n  uncertainty: number;\n  decision_boundary: boolean;\n  convergence_score: number;\n}\n\ninterface DecisionBoundary {\n  path: Array<[number, number]>;\n  confidence: number;\n  boundary_type: string;\n}\n\ninterface ConvergencePoint {\n  x: number;\n  y: number;\n  timestamp: string;\n  convergence_value: number;\n  stability: number;\n}\n\ninterface FreeEnergyLandscapeProps {\n  data: FreeEnergyDataPoint[];\n  decisionBoundaries: DecisionBoundary[];\n  convergencePoints: ConvergencePoint[];\n  agentId: string;\n  realTimeUpdates?: boolean;\n  showUncertainty?: boolean;\n  showConvergence?: boolean;\n  mathematicalAnnotations?: boolean;\n}\n\nexport const FreeEnergyLandscapeViz: React.FC<FreeEnergyLandscapeProps> = ({\n  data,\n  decisionBoundaries,\n  convergencePoints,\n  agentId,\n  realTimeUpdates = true,\n  showUncertainty = true,\n  showConvergence = true,\n  mathematicalAnnotations = true,\n}) => {\n  const svgRef = useRef<SVGSVGElement>(null);\n  const [selectedPoint, setSelectedPoint] =\n    useState<FreeEnergyDataPoint | null>(null);\n  const [energyThreshold, setEnergyThreshold] = useState([0, 10]);\n  const [uncertaintyThreshold, setUncertaintyThreshold] = useState([0, 1]);\n  const [timeSlider, setTimeSlider] = useState(100); // Percentage through time series\n  const [viewMode, setViewMode] = useState<\"surface\" | \"contour\" | \"heatmap\">(\n    \"surface\",\n  );\n\n  // D3 visualization setup\n  useEffect(() => {\n    if (!svgRef.current || !data.length) return;\n\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n\n    const width = 800;\n    const height = 600;\n    const margin = { top: 20, right: 80, bottom: 60, left: 80 };\n    const innerWidth = width - margin.left - margin.right;\n    const innerHeight = height - margin.top - margin.bottom;\n\n    // Create main group\n    const g = svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n    // Create scales\n    const xExtent = d3.extent(data, (d) => d.x) as [number, number];\n    const yExtent = d3.extent(data, (d) => d.y) as [number, number];\n    const energyExtent = d3.extent(data, (d) => d.free_energy) as [\n      number,\n      number,\n    ];\n\n    const xScale = d3.scaleLinear().domain(xExtent).range([0, innerWidth]);\n\n    const yScale = d3.scaleLinear().domain(yExtent).range([innerHeight, 0]);\n\n    const energyColorScale = d3\n      .scaleSequential(d3.interpolateViridis)\n      .domain(energyExtent);\n\n    const uncertaintyColorScale = d3\n      .scaleSequential(d3.interpolateReds)\n      .domain([0, 1]);\n\n    // Filter data based on thresholds\n    const filteredData = data.filter(\n      (d) =>\n        d.free_energy >= energyThreshold[0] &&\n        d.free_energy <= energyThreshold[1] &&\n        d.uncertainty >= uncertaintyThreshold[0] &&\n        d.uncertainty <= uncertaintyThreshold[1],\n    );\n\n    // Render based on view mode\n    if (viewMode === \"heatmap\") {\n      renderHeatmap(g, filteredData, xScale, yScale, energyColorScale);\n    } else if (viewMode === \"contour\") {\n      renderContourPlot(\n        g,\n        filteredData,\n        xScale,\n        yScale,\n        energyColorScale,\n        innerWidth,\n        innerHeight,\n      );\n    } else {\n      renderSurfacePlot(g, filteredData, xScale, yScale, energyColorScale);\n    }\n\n    // Render decision boundaries\n    if (decisionBoundaries.length > 0) {\n      renderDecisionBoundaries(g, decisionBoundaries, xScale, yScale);\n    }\n\n    // Render uncertainty regions\n    if (showUncertainty) {\n      renderUncertaintyRegions(\n        g,\n        filteredData,\n        xScale,\n        yScale,\n        uncertaintyColorScale,\n      );\n    }\n\n    // Render convergence points\n    if (showConvergence && convergencePoints.length > 0) {\n      renderConvergencePoints(g, convergencePoints, xScale, yScale);\n    }\n\n    // Add axes\n    const xAxis = d3\n      .axisBottom(xScale)\n      .tickFormat((d) => (typeof d === \"number\" ? d : d.valueOf()).toFixed(2));\n    const yAxis = d3\n      .axisLeft(yScale)\n      .tickFormat((d) => (typeof d === \"number\" ? d : d.valueOf()).toFixed(2));\n\n    g.append(\"g\")\n      .attr(\"class\", \"x-axis\")\n      .attr(\"transform\", `translate(0,${innerHeight})`)\n      .call(xAxis);\n\n    g.append(\"g\").attr(\"class\", \"y-axis\").call(yAxis);\n\n    // Add axis labels\n    g.append(\"text\")\n      .attr(\"class\", \"x-label\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"x\", innerWidth / 2)\n      .attr(\"y\", innerHeight + 40)\n      .text(\"Belief State Dimension 1\");\n\n    g.append(\"text\")\n      .attr(\"class\", \"y-label\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"transform\", `translate(-50,${innerHeight / 2})rotate(-90)`)\n      .text(\"Belief State Dimension 2\");\n\n    // Add mathematical annotations\n    if (mathematicalAnnotations) {\n      addMathematicalAnnotations(g, innerWidth, innerHeight, energyExtent);\n    }\n\n    // Add color legend\n    addColorLegend(svg, energyColorScale, energyExtent, width, height);\n\n    // Add interaction handlers\n    addInteractionHandlers(g, filteredData, xScale, yScale, setSelectedPoint);\n  }, [\n    data,\n    decisionBoundaries,\n    convergencePoints,\n    energyThreshold,\n    uncertaintyThreshold,\n    viewMode,\n    showUncertainty,\n    showConvergence,\n    mathematicalAnnotations,\n  ]);\n\n  // Rendering functions\n  const renderHeatmap = (\n    g: d3.Selection<SVGGElement, unknown, null, undefined>,\n    data: FreeEnergyDataPoint[],\n    xScale: d3.ScaleLinear<number, number>,\n    yScale: d3.ScaleLinear<number, number>,\n    colorScale: d3.ScaleSequential<string>,\n  ) => {\n    g.selectAll(\".energy-point\")\n      .data(data)\n      .enter()\n      .append(\"circle\")\n      .attr(\"class\", \"energy-point\")\n      .attr(\"cx\", (d) => xScale(d.x))\n      .attr(\"cy\", (d) => yScale(d.y))\n      .attr(\"r\", 3)\n      .attr(\"fill\", (d) => colorScale(d.free_energy))\n      .attr(\"opacity\", 0.8)\n      .style(\"cursor\", \"pointer\");\n  };\n\n  const renderContourPlot = (\n    g: d3.Selection<SVGGElement, unknown, null, undefined>,\n    data: FreeEnergyDataPoint[],\n    xScale: d3.ScaleLinear<number, number>,\n    yScale: d3.ScaleLinear<number, number>,\n    colorScale: d3.ScaleSequential<string>,\n    width: number,\n    height: number,\n  ) => {\n    // Create contour generator\n    const contourGenerator = d3.contours().size([50, 50]).thresholds(10);\n\n    // Convert data to grid for contouring\n    const gridData = new Array(50 * 50);\n    const xStep = (xScale.domain()[1] - xScale.domain()[0]) / 50;\n    const yStep = (yScale.domain()[1] - yScale.domain()[0]) / 50;\n\n    for (let i = 0; i < 50; i++) {\n      for (let j = 0; j < 50; j++) {\n        const x = xScale.domain()[0] + i * xStep;\n        const y = yScale.domain()[0] + j * yStep;\n\n        // Find nearest data point\n        const nearest = data.reduce((prev, curr) =>\n          Math.sqrt(Math.pow(curr.x - x, 2) + Math.pow(curr.y - y, 2)) <\n          Math.sqrt(Math.pow(prev.x - x, 2) + Math.pow(prev.y - y, 2))\n            ? curr\n            : prev,\n        );\n\n        gridData[i + j * 50] = nearest.free_energy;\n      }\n    }\n\n    const contours = contourGenerator(gridData);\n\n    g.selectAll(\".contour\")\n      .data(contours)\n      .enter()\n      .append(\"path\")\n      .attr(\"class\", \"contour\")\n      .attr(\"d\", d3.geoPath())\n      .attr(\"fill\", (d) => colorScale(d.value))\n      .attr(\"fill-opacity\", 0.3)\n      .attr(\"stroke\", (d) => colorScale(d.value))\n      .attr(\"stroke-width\", 1);\n  };\n\n  const renderSurfacePlot = (\n    g: d3.Selection<SVGGElement, unknown, null, undefined>,\n    data: FreeEnergyDataPoint[],\n    xScale: d3.ScaleLinear<number, number>,\n    yScale: d3.ScaleLinear<number, number>,\n    colorScale: d3.ScaleSequential<string>,\n  ) => {\n    // Create Voronoi diagram for smooth surface\n    const voronoi = d3.Delaunay.from(\n      data,\n      (d) => xScale(d.x),\n      (d) => yScale(d.y),\n    );\n    const voronoiPolygons = voronoi.voronoi([\n      0,\n      0,\n      xScale.range()[1],\n      yScale.range()[0],\n    ]);\n\n    g.selectAll(\".voronoi-cell\")\n      .data(data)\n      .enter()\n      .append(\"path\")\n      .attr(\"class\", \"voronoi-cell\")\n      .attr(\"d\", (d, i) => voronoiPolygons.renderCell(i))\n      .attr(\"fill\", (d) => colorScale(d.free_energy))\n      .attr(\"fill-opacity\", 0.6)\n      .attr(\"stroke\", \"white\")\n      .attr(\"stroke-width\", 0.5);\n  };\n\n  const renderDecisionBoundaries = (\n    g: d3.Selection<SVGGElement, unknown, null, undefined>,\n    boundaries: DecisionBoundary[],\n    xScale: d3.ScaleLinear<number, number>,\n    yScale: d3.ScaleLinear<number, number>,\n  ) => {\n    const line = d3\n      .line<[number, number]>()\n      .x((d) => xScale(d[0]))\n      .y((d) => yScale(d[1]))\n      .curve(d3.curveCardinal);\n\n    g.selectAll(\".decision-boundary\")\n      .data(boundaries)\n      .enter()\n      .append(\"path\")\n      .attr(\"class\", \"decision-boundary\")\n      .attr(\"d\", (d) => line(d.path))\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"#ff6b6b\")\n      .attr(\"stroke-width\", 2)\n      .attr(\"stroke-dasharray\", \"5,5\")\n      .attr(\"opacity\", (d) => d.confidence);\n  };\n\n  const renderUncertaintyRegions = (\n    g: d3.Selection<SVGGElement, unknown, null, undefined>,\n    data: FreeEnergyDataPoint[],\n    xScale: d3.ScaleLinear<number, number>,\n    yScale: d3.ScaleLinear<number, number>,\n    uncertaintyColorScale: d3.ScaleSequential<string>,\n  ) => {\n    g.selectAll(\".uncertainty-region\")\n      .data(data.filter((d) => d.uncertainty > 0.5))\n      .enter()\n      .append(\"circle\")\n      .attr(\"class\", \"uncertainty-region\")\n      .attr(\"cx\", (d) => xScale(d.x))\n      .attr(\"cy\", (d) => yScale(d.y))\n      .attr(\"r\", (d) => 5 + d.uncertainty * 10)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", (d) => uncertaintyColorScale(d.uncertainty))\n      .attr(\"stroke-width\", 2)\n      .attr(\"opacity\", 0.6);\n  };\n\n  const renderConvergencePoints = (\n    g: d3.Selection<SVGGElement, unknown, null, undefined>,\n    points: ConvergencePoint[],\n    xScale: d3.ScaleLinear<number, number>,\n    yScale: d3.ScaleLinear<number, number>,\n  ) => {\n    g.selectAll(\".convergence-point\")\n      .data(points)\n      .enter()\n      .append(\"circle\")\n      .attr(\"class\", \"convergence-point\")\n      .attr(\"cx\", (d) => xScale(d.x))\n      .attr(\"cy\", (d) => yScale(d.y))\n      .attr(\"r\", (d) => 3 + d.convergence_value * 5)\n      .attr(\"fill\", \"#4ecdc4\")\n      .attr(\"stroke\", \"#2d9cdb\")\n      .attr(\"stroke-width\", 2)\n      .attr(\"opacity\", 0.8);\n  };\n\n  const addMathematicalAnnotations = (\n    g: d3.Selection<SVGGElement, unknown, null, undefined>,\n    width: number,\n    height: number,\n    energyExtent: [number, number],\n  ) => {\n    // Add free energy equation\n    g.append(\"text\")\n      .attr(\"x\", width - 200)\n      .attr(\"y\", 30)\n      .attr(\"class\", \"math-annotation\")\n      .style(\"font-family\", \"KaTeX_Main\")\n      .style(\"font-size\", \"12px\")\n      .text(\"F = -log P(o) + KL[Q(s)||P(s)]\");\n\n    // Add energy range annotation\n    g.append(\"text\")\n      .attr(\"x\", width - 200)\n      .attr(\"y\", 50)\n      .attr(\"class\", \"energy-range\")\n      .style(\"font-size\", \"10px\")\n      .text(\n        `Energy range: [${energyExtent[0].toFixed(2)}, ${energyExtent[1].toFixed(2)}]`,\n      );\n  };\n\n  const addColorLegend = (\n    svg: d3.Selection<SVGSVGElement, unknown, null, undefined>,\n    colorScale: d3.ScaleSequential<string>,\n    energyExtent: [number, number],\n    width: number,\n    height: number,\n  ) => {\n    const legendHeight = 200;\n    const legendWidth = 20;\n\n    const legend = svg\n      .append(\"g\")\n      .attr(\"class\", \"color-legend\")\n      .attr(\n        \"transform\",\n        `translate(${width - 60}, ${(height - legendHeight) / 2})`,\n      );\n\n    // Create gradient\n    const gradient = svg\n      .append(\"defs\")\n      .append(\"linearGradient\")\n      .attr(\"id\", \"energy-gradient\")\n      .attr(\"x1\", \"0%\")\n      .attr(\"y1\", \"100%\")\n      .attr(\"x2\", \"0%\")\n      .attr(\"y2\", \"0%\");\n\n    gradient\n      .selectAll(\"stop\")\n      .data(d3.range(0, 1.1, 0.1))\n      .enter()\n      .append(\"stop\")\n      .attr(\"offset\", (d) => `${d * 100}%`)\n      .attr(\"stop-color\", (d) =>\n        colorScale(energyExtent[0] + d * (energyExtent[1] - energyExtent[0])),\n      );\n\n    // Add legend rectangle\n    legend\n      .append(\"rect\")\n      .attr(\"width\", legendWidth)\n      .attr(\"height\", legendHeight)\n      .style(\"fill\", \"url(#energy-gradient)\");\n\n    // Add legend axis\n    const legendScale = d3\n      .scaleLinear()\n      .domain(energyExtent)\n      .range([legendHeight, 0]);\n\n    const legendAxis = d3\n      .axisRight(legendScale)\n      .tickFormat((d) => (typeof d === \"number\" ? d : d.valueOf()).toFixed(1));\n\n    legend\n      .append(\"g\")\n      .attr(\"transform\", `translate(${legendWidth}, 0)`)\n      .call(legendAxis);\n\n    // Add legend title\n    legend\n      .append(\"text\")\n      .attr(\"x\", legendWidth / 2)\n      .attr(\"y\", -10)\n      .attr(\"text-anchor\", \"middle\")\n      .style(\"font-size\", \"12px\")\n      .text(\"Free Energy\");\n  };\n\n  const addInteractionHandlers = (\n    g: d3.Selection<SVGGElement, unknown, null, undefined>,\n    data: FreeEnergyDataPoint[],\n    xScale: d3.ScaleLinear<number, number>,\n    yScale: d3.ScaleLinear<number, number>,\n    setSelectedPoint: (point: FreeEnergyDataPoint | null) => void,\n  ) => {\n    g.selectAll(\".energy-point, .voronoi-cell\")\n      .style(\"cursor\", \"pointer\")\n      .on(\"click\", function (event, d) {\n        setSelectedPoint(d as FreeEnergyDataPoint);\n      })\n      .on(\"mouseover\", function (event, d) {\n        d3.select(this).transition().duration(200).attr(\"opacity\", 1.0);\n      })\n      .on(\"mouseout\", function (event, d) {\n        d3.select(this).transition().duration(200).attr(\"opacity\", 0.8);\n      });\n  };\n\n  return (\n    <div className=\"w-full space-y-4\">\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex justify-between items-center\">\n            Free Energy Landscape - Agent {agentId}\n            <div className=\"flex gap-2\">\n              <Badge variant={realTimeUpdates ? \"default\" : \"secondary\"}>\n                {realTimeUpdates ? \"Real-time\" : \"Static\"}\n              </Badge>\n              <Badge variant=\"outline\">{data.length} data points</Badge>\n            </div>\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          {/* Controls */}\n          <div className=\"flex gap-4 mb-4 p-4 bg-gray-50 rounded-lg\">\n            <div className=\"flex-1\">\n              <label className=\"block text-sm font-medium mb-2\">\n                View Mode\n              </label>\n              <div className=\"flex gap-2\">\n                {([\"surface\", \"contour\", \"heatmap\"] as const).map((mode) => (\n                  <Button\n                    key={mode}\n                    variant={viewMode === mode ? \"default\" : \"outline\"}\n                    size=\"sm\"\n                    onClick={() => setViewMode(mode)}\n                  >\n                    {mode.charAt(0).toUpperCase() + mode.slice(1)}\n                  </Button>\n                ))}\n              </div>\n            </div>\n\n            <div className=\"flex-1\">\n              <label className=\"block text-sm font-medium mb-2\">\n                Energy Threshold: [{energyThreshold[0].toFixed(1)},{\" \"}\n                {energyThreshold[1].toFixed(1)}]\n              </label>\n              <Slider\n                value={energyThreshold}\n                onValueChange={setEnergyThreshold}\n                min={0}\n                max={20}\n                step={0.1}\n                className=\"w-full\"\n              />\n            </div>\n\n            <div className=\"flex-1\">\n              <label className=\"block text-sm font-medium mb-2\">\n                Uncertainty Threshold: [{uncertaintyThreshold[0].toFixed(2)},{\" \"}\n                {uncertaintyThreshold[1].toFixed(2)}]\n              </label>\n              <Slider\n                value={uncertaintyThreshold}\n                onValueChange={setUncertaintyThreshold}\n                min={0}\n                max={1}\n                step={0.01}\n                className=\"w-full\"\n              />\n            </div>\n          </div>\n\n          {/* Main visualization */}\n          <div className=\"flex gap-4\">\n            <div className=\"flex-1\">\n              <svg\n                ref={svgRef}\n                width=\"800\"\n                height=\"600\"\n                className=\"border rounded-lg\"\n                style={{ background: \"white\" }}\n              />\n            </div>\n\n            {/* Selected point details */}\n            {selectedPoint && (\n              <div className=\"w-80\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"text-lg\">Point Details</CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-3\">\n                    <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                      <div>Position:</div>\n                      <div className=\"font-mono\">\n                        ({selectedPoint.x.toFixed(3)},{\" \"}\n                        {selectedPoint.y.toFixed(3)})\n                      </div>\n\n                      <div>Free Energy:</div>\n                      <div className=\"font-mono font-semibold\">\n                        {selectedPoint.free_energy.toFixed(4)}\n                      </div>\n\n                      <div>Uncertainty:</div>\n                      <div className=\"font-mono\">\n                        {selectedPoint.uncertainty.toFixed(4)}\n                      </div>\n\n                      <div>Convergence:</div>\n                      <div className=\"font-mono\">\n                        {selectedPoint.convergence_score.toFixed(4)}\n                      </div>\n\n                      <div>Decision Boundary:</div>\n                      <div>\n                        <Badge\n                          variant={\n                            selectedPoint.decision_boundary\n                              ? \"default\"\n                              : \"secondary\"\n                          }\n                        >\n                          {selectedPoint.decision_boundary ? \"Yes\" : \"No\"}\n                        </Badge>\n                      </div>\n                    </div>\n\n                    <div>\n                      <h4 className=\"font-semibold mb-2\">Belief State</h4>\n                      <div className=\"space-y-1\">\n                        {selectedPoint.belief_state.map((belief, idx) => (\n                          <div\n                            key={idx}\n                            className=\"flex justify-between text-xs\"\n                          >\n                            <span>State {idx}:</span>\n                            <span className=\"font-mono\">\n                              {belief.toFixed(4)}\n                            </span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </div>\n            )}\n          </div>\n\n          {/* Mathematical information */}\n          <div className=\"mt-4 p-4 bg-blue-50 rounded-lg\">\n            <h3 className=\"font-semibold mb-2\">Mathematical Foundation</h3>\n            <div className=\"grid grid-cols-2 gap-4 text-sm\">\n              <div>\n                <strong>Free Energy:</strong> F = -log P(o) + KL[Q(s)||P(s)]\n              </div>\n              <div>\n                <strong>Decision Boundaries:</strong> \u2207F = 0\n              </div>\n              <div>\n                <strong>Uncertainty:</strong> H[Q(s)] = -\u03A3 Q(s) log Q(s)\n              </div>\n              <div>\n                <strong>Convergence:</strong> ||Q_t - Q_{\"t-1\"}|| {\"<\"} \u03B5\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default FreeEnergyLandscapeViz;\n"],
      names: ["FreeEnergyLandscapeViz", "data", "decisionBoundaries", "convergencePoints", "agentId", "realTimeUpdates", "showUncertainty", "showConvergence", "mathematicalAnnotations", "svgRef", "useRef", "selectedPoint", "setSelectedPoint", "useState", "energyThreshold", "setEnergyThreshold", "uncertaintyThreshold", "setUncertaintyThreshold", "timeSlider", "setTimeSlider", "viewMode", "setViewMode", "useEffect", "current", "length", "svg", "d3", "select", "selectAll", "remove", "width", "height", "margin", "top", "right", "bottom", "left", "innerWidth", "innerHeight", "g", "append", "attr", "xExtent", "extent", "d", "x", "yExtent", "y", "energyExtent", "free_energy", "xScale", "scaleLinear", "domain", "range", "yScale", "energyColorScale", "scaleSequential", "interpolateViridis", "uncertaintyColorScale", "interpolateReds", "filteredData", "filter", "uncertainty", "renderHeatmap", "renderContourPlot", "renderSurfacePlot", "renderDecisionBoundaries", "renderUncertaintyRegions", "renderConvergencePoints", "xAxis", "axisBottom", "tickFormat", "valueOf", "toFixed", "yAxis", "axisLeft", "call", "text", "addMathematicalAnnotations", "addColorLegend", "addInteractionHandlers", "colorScale", "enter", "style", "contourGenerator", "contours", "size", "thresholds", "gridData", "Array", "xStep", "yStep", "i", "j", "nearest", "reduce", "prev", "curr", "Math", "sqrt", "pow", "geoPath", "value", "voronoi", "Delaunay", "from", "voronoiPolygons", "renderCell", "boundaries", "line", "curve", "curveCardinal", "path", "confidence", "points", "convergence_value", "legendHeight", "legendWidth", "legend", "gradient", "legendScale", "legendAxis", "axisRight", "on", "event", "transition", "duration", "div", "className", "Card", "CardHeader", "CardTitle", "Badge", "variant", "CardContent", "label", "map", "mode", "Button", "onClick", "charAt", "toUpperCase", "slice", "Slider", "onValueChange", "min", "max", "step", "ref", "background", "convergence_score", "decision_boundary", "h4", "belief_state", "belief", "idx", "span", "h3", "strong"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "39a152805736709a72eb52405c2a83f767fe6339"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_luq6hq4nf = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_luq6hq4nf();
cov_luq6hq4nf().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_luq6hq4nf().f[0]++;
  cov_luq6hq4nf().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_luq6hq4nf().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_luq6hq4nf().s[3]++;
_export(exports, {
  FreeEnergyLandscapeViz: function () {
    /* istanbul ignore next */
    cov_luq6hq4nf().f[1]++;
    cov_luq6hq4nf().s[4]++;
    return FreeEnergyLandscapeViz;
  },
  default: function () {
    /* istanbul ignore next */
    cov_luq6hq4nf().f[2]++;
    cov_luq6hq4nf().s[5]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_luq6hq4nf().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_luq6hq4nf().s[7]++, _interop_require_wildcard(require("react")));
const _d3 =
/* istanbul ignore next */
(/*#__PURE__*/cov_luq6hq4nf().s[8]++, _interop_require_wildcard(require("d3")));
const _card =
/* istanbul ignore next */
(cov_luq6hq4nf().s[9]++, require("./ui/card"));
const _button =
/* istanbul ignore next */
(cov_luq6hq4nf().s[10]++, require("./ui/button"));
const _badge =
/* istanbul ignore next */
(cov_luq6hq4nf().s[11]++, require("./ui/badge"));
const _slider =
/* istanbul ignore next */
(cov_luq6hq4nf().s[12]++, require("./ui/slider"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_luq6hq4nf().f[3]++;
  cov_luq6hq4nf().s[13]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_luq6hq4nf().b[0][0]++;
    cov_luq6hq4nf().s[14]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_luq6hq4nf().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_luq6hq4nf().s[15]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_luq6hq4nf().s[16]++, new WeakMap());
  /* istanbul ignore next */
  cov_luq6hq4nf().s[17]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_luq6hq4nf().f[4]++;
    cov_luq6hq4nf().s[18]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_luq6hq4nf().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_luq6hq4nf().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_luq6hq4nf().f[5]++;
  cov_luq6hq4nf().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_luq6hq4nf().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_luq6hq4nf().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_luq6hq4nf().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_luq6hq4nf().b[2][0]++;
    cov_luq6hq4nf().s[20]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_luq6hq4nf().b[2][1]++;
  }
  cov_luq6hq4nf().s[21]++;
  if (
  /* istanbul ignore next */
  (cov_luq6hq4nf().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_luq6hq4nf().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_luq6hq4nf().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_luq6hq4nf().b[4][0]++;
    cov_luq6hq4nf().s[22]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_luq6hq4nf().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_luq6hq4nf().s[23]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_luq6hq4nf().s[24]++;
  if (
  /* istanbul ignore next */
  (cov_luq6hq4nf().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_luq6hq4nf().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_luq6hq4nf().b[6][0]++;
    cov_luq6hq4nf().s[25]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_luq6hq4nf().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_luq6hq4nf().s[26]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_luq6hq4nf().s[27]++,
  /* istanbul ignore next */
  (cov_luq6hq4nf().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_luq6hq4nf().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_luq6hq4nf().s[28]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_luq6hq4nf().s[29]++;
    if (
    /* istanbul ignore next */
    (cov_luq6hq4nf().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_luq6hq4nf().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_luq6hq4nf().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_luq6hq4nf().s[30]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_luq6hq4nf().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_luq6hq4nf().b[11][1]++, null));
      /* istanbul ignore next */
      cov_luq6hq4nf().s[31]++;
      if (
      /* istanbul ignore next */
      (cov_luq6hq4nf().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_luq6hq4nf().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_luq6hq4nf().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_luq6hq4nf().b[12][0]++;
        cov_luq6hq4nf().s[32]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_luq6hq4nf().b[12][1]++;
        cov_luq6hq4nf().s[33]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_luq6hq4nf().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_luq6hq4nf().s[34]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_luq6hq4nf().s[35]++;
  if (cache) {
    /* istanbul ignore next */
    cov_luq6hq4nf().b[14][0]++;
    cov_luq6hq4nf().s[36]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_luq6hq4nf().b[14][1]++;
  }
  cov_luq6hq4nf().s[37]++;
  return newObj;
}
/* istanbul ignore next */
cov_luq6hq4nf().s[38]++;
const FreeEnergyLandscapeViz = ({
  data,
  decisionBoundaries,
  convergencePoints,
  agentId,
  realTimeUpdates =
  /* istanbul ignore next */
  (cov_luq6hq4nf().b[15][0]++, true),
  showUncertainty =
  /* istanbul ignore next */
  (cov_luq6hq4nf().b[16][0]++, true),
  showConvergence =
  /* istanbul ignore next */
  (cov_luq6hq4nf().b[17][0]++, true),
  mathematicalAnnotations =
  /* istanbul ignore next */
  (cov_luq6hq4nf().b[18][0]++, true)
}) => {
  /* istanbul ignore next */
  cov_luq6hq4nf().f[6]++;
  const svgRef =
  /* istanbul ignore next */
  (cov_luq6hq4nf().s[39]++, (0, _react.useRef)(null));
  const [selectedPoint, setSelectedPoint] =
  /* istanbul ignore next */
  (cov_luq6hq4nf().s[40]++, (0, _react.useState)(null));
  const [energyThreshold, setEnergyThreshold] =
  /* istanbul ignore next */
  (cov_luq6hq4nf().s[41]++, (0, _react.useState)([0, 10]));
  const [uncertaintyThreshold, setUncertaintyThreshold] =
  /* istanbul ignore next */
  (cov_luq6hq4nf().s[42]++, (0, _react.useState)([0, 1]));
  const [timeSlider, setTimeSlider] =
  /* istanbul ignore next */
  (cov_luq6hq4nf().s[43]++, (0, _react.useState)(100)); // Percentage through time series
  const [viewMode, setViewMode] =
  /* istanbul ignore next */
  (cov_luq6hq4nf().s[44]++, (0, _react.useState)("surface"));
  // D3 visualization setup
  /* istanbul ignore next */
  cov_luq6hq4nf().s[45]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_luq6hq4nf().f[7]++;
    cov_luq6hq4nf().s[46]++;
    if (
    /* istanbul ignore next */
    (cov_luq6hq4nf().b[20][0]++, !svgRef.current) ||
    /* istanbul ignore next */
    (cov_luq6hq4nf().b[20][1]++, !data.length)) {
      /* istanbul ignore next */
      cov_luq6hq4nf().b[19][0]++;
      cov_luq6hq4nf().s[47]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_luq6hq4nf().b[19][1]++;
    }
    const svg =
    /* istanbul ignore next */
    (cov_luq6hq4nf().s[48]++, _d3.select(svgRef.current));
    /* istanbul ignore next */
    cov_luq6hq4nf().s[49]++;
    svg.selectAll("*").remove();
    const width =
    /* istanbul ignore next */
    (cov_luq6hq4nf().s[50]++, 800);
    const height =
    /* istanbul ignore next */
    (cov_luq6hq4nf().s[51]++, 600);
    const margin =
    /* istanbul ignore next */
    (cov_luq6hq4nf().s[52]++, {
      top: 20,
      right: 80,
      bottom: 60,
      left: 80
    });
    const innerWidth =
    /* istanbul ignore next */
    (cov_luq6hq4nf().s[53]++, width - margin.left - margin.right);
    const innerHeight =
    /* istanbul ignore next */
    (cov_luq6hq4nf().s[54]++, height - margin.top - margin.bottom);
    // Create main group
    const g =
    /* istanbul ignore next */
    (cov_luq6hq4nf().s[55]++, svg.append("g").attr("transform", `translate(${margin.left},${margin.top})`));
    // Create scales
    const xExtent =
    /* istanbul ignore next */
    (cov_luq6hq4nf().s[56]++, _d3.extent(data, d => {
      /* istanbul ignore next */
      cov_luq6hq4nf().f[8]++;
      cov_luq6hq4nf().s[57]++;
      return d.x;
    }));
    const yExtent =
    /* istanbul ignore next */
    (cov_luq6hq4nf().s[58]++, _d3.extent(data, d => {
      /* istanbul ignore next */
      cov_luq6hq4nf().f[9]++;
      cov_luq6hq4nf().s[59]++;
      return d.y;
    }));
    const energyExtent =
    /* istanbul ignore next */
    (cov_luq6hq4nf().s[60]++, _d3.extent(data, d => {
      /* istanbul ignore next */
      cov_luq6hq4nf().f[10]++;
      cov_luq6hq4nf().s[61]++;
      return d.free_energy;
    }));
    const xScale =
    /* istanbul ignore next */
    (cov_luq6hq4nf().s[62]++, _d3.scaleLinear().domain(xExtent).range([0, innerWidth]));
    const yScale =
    /* istanbul ignore next */
    (cov_luq6hq4nf().s[63]++, _d3.scaleLinear().domain(yExtent).range([innerHeight, 0]));
    const energyColorScale =
    /* istanbul ignore next */
    (cov_luq6hq4nf().s[64]++, _d3.scaleSequential(_d3.interpolateViridis).domain(energyExtent));
    const uncertaintyColorScale =
    /* istanbul ignore next */
    (cov_luq6hq4nf().s[65]++, _d3.scaleSequential(_d3.interpolateReds).domain([0, 1]));
    // Filter data based on thresholds
    const filteredData =
    /* istanbul ignore next */
    (cov_luq6hq4nf().s[66]++, data.filter(d => {
      /* istanbul ignore next */
      cov_luq6hq4nf().f[11]++;
      cov_luq6hq4nf().s[67]++;
      return /* istanbul ignore next */(cov_luq6hq4nf().b[21][0]++, d.free_energy >= energyThreshold[0]) &&
      /* istanbul ignore next */
      (cov_luq6hq4nf().b[21][1]++, d.free_energy <= energyThreshold[1]) &&
      /* istanbul ignore next */
      (cov_luq6hq4nf().b[21][2]++, d.uncertainty >= uncertaintyThreshold[0]) &&
      /* istanbul ignore next */
      (cov_luq6hq4nf().b[21][3]++, d.uncertainty <= uncertaintyThreshold[1]);
    }));
    // Render based on view mode
    /* istanbul ignore next */
    cov_luq6hq4nf().s[68]++;
    if (viewMode === "heatmap") {
      /* istanbul ignore next */
      cov_luq6hq4nf().b[22][0]++;
      cov_luq6hq4nf().s[69]++;
      renderHeatmap(g, filteredData, xScale, yScale, energyColorScale);
    } else {
      /* istanbul ignore next */
      cov_luq6hq4nf().b[22][1]++;
      cov_luq6hq4nf().s[70]++;
      if (viewMode === "contour") {
        /* istanbul ignore next */
        cov_luq6hq4nf().b[23][0]++;
        cov_luq6hq4nf().s[71]++;
        renderContourPlot(g, filteredData, xScale, yScale, energyColorScale, innerWidth, innerHeight);
      } else {
        /* istanbul ignore next */
        cov_luq6hq4nf().b[23][1]++;
        cov_luq6hq4nf().s[72]++;
        renderSurfacePlot(g, filteredData, xScale, yScale, energyColorScale);
      }
    }
    // Render decision boundaries
    /* istanbul ignore next */
    cov_luq6hq4nf().s[73]++;
    if (decisionBoundaries.length > 0) {
      /* istanbul ignore next */
      cov_luq6hq4nf().b[24][0]++;
      cov_luq6hq4nf().s[74]++;
      renderDecisionBoundaries(g, decisionBoundaries, xScale, yScale);
    } else
    /* istanbul ignore next */
    {
      cov_luq6hq4nf().b[24][1]++;
    }
    // Render uncertainty regions
    cov_luq6hq4nf().s[75]++;
    if (showUncertainty) {
      /* istanbul ignore next */
      cov_luq6hq4nf().b[25][0]++;
      cov_luq6hq4nf().s[76]++;
      renderUncertaintyRegions(g, filteredData, xScale, yScale, uncertaintyColorScale);
    } else
    /* istanbul ignore next */
    {
      cov_luq6hq4nf().b[25][1]++;
    }
    // Render convergence points
    cov_luq6hq4nf().s[77]++;
    if (
    /* istanbul ignore next */
    (cov_luq6hq4nf().b[27][0]++, showConvergence) &&
    /* istanbul ignore next */
    (cov_luq6hq4nf().b[27][1]++, convergencePoints.length > 0)) {
      /* istanbul ignore next */
      cov_luq6hq4nf().b[26][0]++;
      cov_luq6hq4nf().s[78]++;
      renderConvergencePoints(g, convergencePoints, xScale, yScale);
    } else
    /* istanbul ignore next */
    {
      cov_luq6hq4nf().b[26][1]++;
    }
    // Add axes
    const xAxis =
    /* istanbul ignore next */
    (cov_luq6hq4nf().s[79]++, _d3.axisBottom(xScale).tickFormat(d => {
      /* istanbul ignore next */
      cov_luq6hq4nf().f[12]++;
      cov_luq6hq4nf().s[80]++;
      return (typeof d === "number" ?
      /* istanbul ignore next */
      (cov_luq6hq4nf().b[28][0]++, d) :
      /* istanbul ignore next */
      (cov_luq6hq4nf().b[28][1]++, d.valueOf())).toFixed(2);
    }));
    const yAxis =
    /* istanbul ignore next */
    (cov_luq6hq4nf().s[81]++, _d3.axisLeft(yScale).tickFormat(d => {
      /* istanbul ignore next */
      cov_luq6hq4nf().f[13]++;
      cov_luq6hq4nf().s[82]++;
      return (typeof d === "number" ?
      /* istanbul ignore next */
      (cov_luq6hq4nf().b[29][0]++, d) :
      /* istanbul ignore next */
      (cov_luq6hq4nf().b[29][1]++, d.valueOf())).toFixed(2);
    }));
    /* istanbul ignore next */
    cov_luq6hq4nf().s[83]++;
    g.append("g").attr("class", "x-axis").attr("transform", `translate(0,${innerHeight})`).call(xAxis);
    /* istanbul ignore next */
    cov_luq6hq4nf().s[84]++;
    g.append("g").attr("class", "y-axis").call(yAxis);
    // Add axis labels
    /* istanbul ignore next */
    cov_luq6hq4nf().s[85]++;
    g.append("text").attr("class", "x-label").attr("text-anchor", "middle").attr("x", innerWidth / 2).attr("y", innerHeight + 40).text("Belief State Dimension 1");
    /* istanbul ignore next */
    cov_luq6hq4nf().s[86]++;
    g.append("text").attr("class", "y-label").attr("text-anchor", "middle").attr("transform", `translate(-50,${innerHeight / 2})rotate(-90)`).text("Belief State Dimension 2");
    // Add mathematical annotations
    /* istanbul ignore next */
    cov_luq6hq4nf().s[87]++;
    if (mathematicalAnnotations) {
      /* istanbul ignore next */
      cov_luq6hq4nf().b[30][0]++;
      cov_luq6hq4nf().s[88]++;
      addMathematicalAnnotations(g, innerWidth, innerHeight, energyExtent);
    } else
    /* istanbul ignore next */
    {
      cov_luq6hq4nf().b[30][1]++;
    }
    // Add color legend
    cov_luq6hq4nf().s[89]++;
    addColorLegend(svg, energyColorScale, energyExtent, width, height);
    // Add interaction handlers
    /* istanbul ignore next */
    cov_luq6hq4nf().s[90]++;
    addInteractionHandlers(g, filteredData, xScale, yScale, setSelectedPoint);
  }, [data, decisionBoundaries, convergencePoints, energyThreshold, uncertaintyThreshold, viewMode, showUncertainty, showConvergence, mathematicalAnnotations]);
  // Rendering functions
  /* istanbul ignore next */
  cov_luq6hq4nf().s[91]++;
  const renderHeatmap = (g, data, xScale, yScale, colorScale) => {
    /* istanbul ignore next */
    cov_luq6hq4nf().f[14]++;
    cov_luq6hq4nf().s[92]++;
    g.selectAll(".energy-point").data(data).enter().append("circle").attr("class", "energy-point").attr("cx", d => {
      /* istanbul ignore next */
      cov_luq6hq4nf().f[15]++;
      cov_luq6hq4nf().s[93]++;
      return xScale(d.x);
    }).attr("cy", d => {
      /* istanbul ignore next */
      cov_luq6hq4nf().f[16]++;
      cov_luq6hq4nf().s[94]++;
      return yScale(d.y);
    }).attr("r", 3).attr("fill", d => {
      /* istanbul ignore next */
      cov_luq6hq4nf().f[17]++;
      cov_luq6hq4nf().s[95]++;
      return colorScale(d.free_energy);
    }).attr("opacity", 0.8).style("cursor", "pointer");
  };
  /* istanbul ignore next */
  cov_luq6hq4nf().s[96]++;
  const renderContourPlot = (g, data, xScale, yScale, colorScale, width, height) => {
    /* istanbul ignore next */
    cov_luq6hq4nf().f[18]++;
    // Create contour generator
    const contourGenerator =
    /* istanbul ignore next */
    (cov_luq6hq4nf().s[97]++, _d3.contours().size([50, 50]).thresholds(10));
    // Convert data to grid for contouring
    const gridData =
    /* istanbul ignore next */
    (cov_luq6hq4nf().s[98]++, new Array(50 * 50));
    const xStep =
    /* istanbul ignore next */
    (cov_luq6hq4nf().s[99]++, (xScale.domain()[1] - xScale.domain()[0]) / 50);
    const yStep =
    /* istanbul ignore next */
    (cov_luq6hq4nf().s[100]++, (yScale.domain()[1] - yScale.domain()[0]) / 50);
    /* istanbul ignore next */
    cov_luq6hq4nf().s[101]++;
    for (let i =
    /* istanbul ignore next */
    (cov_luq6hq4nf().s[102]++, 0); i < 50; i++) {
      /* istanbul ignore next */
      cov_luq6hq4nf().s[103]++;
      for (let j =
      /* istanbul ignore next */
      (cov_luq6hq4nf().s[104]++, 0); j < 50; j++) {
        const x =
        /* istanbul ignore next */
        (cov_luq6hq4nf().s[105]++, xScale.domain()[0] + i * xStep);
        const y =
        /* istanbul ignore next */
        (cov_luq6hq4nf().s[106]++, yScale.domain()[0] + j * yStep);
        // Find nearest data point
        const nearest =
        /* istanbul ignore next */
        (cov_luq6hq4nf().s[107]++, data.reduce((prev, curr) => {
          /* istanbul ignore next */
          cov_luq6hq4nf().f[19]++;
          cov_luq6hq4nf().s[108]++;
          return Math.sqrt(Math.pow(curr.x - x, 2) + Math.pow(curr.y - y, 2)) < Math.sqrt(Math.pow(prev.x - x, 2) + Math.pow(prev.y - y, 2)) ?
          /* istanbul ignore next */
          (cov_luq6hq4nf().b[31][0]++, curr) :
          /* istanbul ignore next */
          (cov_luq6hq4nf().b[31][1]++, prev);
        }));
        /* istanbul ignore next */
        cov_luq6hq4nf().s[109]++;
        gridData[i + j * 50] = nearest.free_energy;
      }
    }
    const contours =
    /* istanbul ignore next */
    (cov_luq6hq4nf().s[110]++, contourGenerator(gridData));
    /* istanbul ignore next */
    cov_luq6hq4nf().s[111]++;
    g.selectAll(".contour").data(contours).enter().append("path").attr("class", "contour").attr("d", _d3.geoPath()).attr("fill", d => {
      /* istanbul ignore next */
      cov_luq6hq4nf().f[20]++;
      cov_luq6hq4nf().s[112]++;
      return colorScale(d.value);
    }).attr("fill-opacity", 0.3).attr("stroke", d => {
      /* istanbul ignore next */
      cov_luq6hq4nf().f[21]++;
      cov_luq6hq4nf().s[113]++;
      return colorScale(d.value);
    }).attr("stroke-width", 1);
  };
  /* istanbul ignore next */
  cov_luq6hq4nf().s[114]++;
  const renderSurfacePlot = (g, data, xScale, yScale, colorScale) => {
    /* istanbul ignore next */
    cov_luq6hq4nf().f[22]++;
    // Create Voronoi diagram for smooth surface
    const voronoi =
    /* istanbul ignore next */
    (cov_luq6hq4nf().s[115]++, _d3.Delaunay.from(data, d => {
      /* istanbul ignore next */
      cov_luq6hq4nf().f[23]++;
      cov_luq6hq4nf().s[116]++;
      return xScale(d.x);
    }, d => {
      /* istanbul ignore next */
      cov_luq6hq4nf().f[24]++;
      cov_luq6hq4nf().s[117]++;
      return yScale(d.y);
    }));
    const voronoiPolygons =
    /* istanbul ignore next */
    (cov_luq6hq4nf().s[118]++, voronoi.voronoi([0, 0, xScale.range()[1], yScale.range()[0]]));
    /* istanbul ignore next */
    cov_luq6hq4nf().s[119]++;
    g.selectAll(".voronoi-cell").data(data).enter().append("path").attr("class", "voronoi-cell").attr("d", (d, i) => {
      /* istanbul ignore next */
      cov_luq6hq4nf().f[25]++;
      cov_luq6hq4nf().s[120]++;
      return voronoiPolygons.renderCell(i);
    }).attr("fill", d => {
      /* istanbul ignore next */
      cov_luq6hq4nf().f[26]++;
      cov_luq6hq4nf().s[121]++;
      return colorScale(d.free_energy);
    }).attr("fill-opacity", 0.6).attr("stroke", "white").attr("stroke-width", 0.5);
  };
  /* istanbul ignore next */
  cov_luq6hq4nf().s[122]++;
  const renderDecisionBoundaries = (g, boundaries, xScale, yScale) => {
    /* istanbul ignore next */
    cov_luq6hq4nf().f[27]++;
    const line =
    /* istanbul ignore next */
    (cov_luq6hq4nf().s[123]++, _d3.line().x(d => {
      /* istanbul ignore next */
      cov_luq6hq4nf().f[28]++;
      cov_luq6hq4nf().s[124]++;
      return xScale(d[0]);
    }).y(d => {
      /* istanbul ignore next */
      cov_luq6hq4nf().f[29]++;
      cov_luq6hq4nf().s[125]++;
      return yScale(d[1]);
    }).curve(_d3.curveCardinal));
    /* istanbul ignore next */
    cov_luq6hq4nf().s[126]++;
    g.selectAll(".decision-boundary").data(boundaries).enter().append("path").attr("class", "decision-boundary").attr("d", d => {
      /* istanbul ignore next */
      cov_luq6hq4nf().f[30]++;
      cov_luq6hq4nf().s[127]++;
      return line(d.path);
    }).attr("fill", "none").attr("stroke", "#ff6b6b").attr("stroke-width", 2).attr("stroke-dasharray", "5,5").attr("opacity", d => {
      /* istanbul ignore next */
      cov_luq6hq4nf().f[31]++;
      cov_luq6hq4nf().s[128]++;
      return d.confidence;
    });
  };
  /* istanbul ignore next */
  cov_luq6hq4nf().s[129]++;
  const renderUncertaintyRegions = (g, data, xScale, yScale, uncertaintyColorScale) => {
    /* istanbul ignore next */
    cov_luq6hq4nf().f[32]++;
    cov_luq6hq4nf().s[130]++;
    g.selectAll(".uncertainty-region").data(data.filter(d => {
      /* istanbul ignore next */
      cov_luq6hq4nf().f[33]++;
      cov_luq6hq4nf().s[131]++;
      return d.uncertainty > 0.5;
    })).enter().append("circle").attr("class", "uncertainty-region").attr("cx", d => {
      /* istanbul ignore next */
      cov_luq6hq4nf().f[34]++;
      cov_luq6hq4nf().s[132]++;
      return xScale(d.x);
    }).attr("cy", d => {
      /* istanbul ignore next */
      cov_luq6hq4nf().f[35]++;
      cov_luq6hq4nf().s[133]++;
      return yScale(d.y);
    }).attr("r", d => {
      /* istanbul ignore next */
      cov_luq6hq4nf().f[36]++;
      cov_luq6hq4nf().s[134]++;
      return 5 + d.uncertainty * 10;
    }).attr("fill", "none").attr("stroke", d => {
      /* istanbul ignore next */
      cov_luq6hq4nf().f[37]++;
      cov_luq6hq4nf().s[135]++;
      return uncertaintyColorScale(d.uncertainty);
    }).attr("stroke-width", 2).attr("opacity", 0.6);
  };
  /* istanbul ignore next */
  cov_luq6hq4nf().s[136]++;
  const renderConvergencePoints = (g, points, xScale, yScale) => {
    /* istanbul ignore next */
    cov_luq6hq4nf().f[38]++;
    cov_luq6hq4nf().s[137]++;
    g.selectAll(".convergence-point").data(points).enter().append("circle").attr("class", "convergence-point").attr("cx", d => {
      /* istanbul ignore next */
      cov_luq6hq4nf().f[39]++;
      cov_luq6hq4nf().s[138]++;
      return xScale(d.x);
    }).attr("cy", d => {
      /* istanbul ignore next */
      cov_luq6hq4nf().f[40]++;
      cov_luq6hq4nf().s[139]++;
      return yScale(d.y);
    }).attr("r", d => {
      /* istanbul ignore next */
      cov_luq6hq4nf().f[41]++;
      cov_luq6hq4nf().s[140]++;
      return 3 + d.convergence_value * 5;
    }).attr("fill", "#4ecdc4").attr("stroke", "#2d9cdb").attr("stroke-width", 2).attr("opacity", 0.8);
  };
  /* istanbul ignore next */
  cov_luq6hq4nf().s[141]++;
  const addMathematicalAnnotations = (g, width, height, energyExtent) => {
    /* istanbul ignore next */
    cov_luq6hq4nf().f[42]++;
    cov_luq6hq4nf().s[142]++;
    // Add free energy equation
    g.append("text").attr("x", width - 200).attr("y", 30).attr("class", "math-annotation").style("font-family", "KaTeX_Main").style("font-size", "12px").text("F = -log P(o) + KL[Q(s)||P(s)]");
    // Add energy range annotation
    /* istanbul ignore next */
    cov_luq6hq4nf().s[143]++;
    g.append("text").attr("x", width - 200).attr("y", 50).attr("class", "energy-range").style("font-size", "10px").text(`Energy range: [${energyExtent[0].toFixed(2)}, ${energyExtent[1].toFixed(2)}]`);
  };
  /* istanbul ignore next */
  cov_luq6hq4nf().s[144]++;
  const addColorLegend = (svg, colorScale, energyExtent, width, height) => {
    /* istanbul ignore next */
    cov_luq6hq4nf().f[43]++;
    const legendHeight =
    /* istanbul ignore next */
    (cov_luq6hq4nf().s[145]++, 200);
    const legendWidth =
    /* istanbul ignore next */
    (cov_luq6hq4nf().s[146]++, 20);
    const legend =
    /* istanbul ignore next */
    (cov_luq6hq4nf().s[147]++, svg.append("g").attr("class", "color-legend").attr("transform", `translate(${width - 60}, ${(height - legendHeight) / 2})`));
    // Create gradient
    const gradient =
    /* istanbul ignore next */
    (cov_luq6hq4nf().s[148]++, svg.append("defs").append("linearGradient").attr("id", "energy-gradient").attr("x1", "0%").attr("y1", "100%").attr("x2", "0%").attr("y2", "0%"));
    /* istanbul ignore next */
    cov_luq6hq4nf().s[149]++;
    gradient.selectAll("stop").data(_d3.range(0, 1.1, 0.1)).enter().append("stop").attr("offset", d => {
      /* istanbul ignore next */
      cov_luq6hq4nf().f[44]++;
      cov_luq6hq4nf().s[150]++;
      return `${d * 100}%`;
    }).attr("stop-color", d => {
      /* istanbul ignore next */
      cov_luq6hq4nf().f[45]++;
      cov_luq6hq4nf().s[151]++;
      return colorScale(energyExtent[0] + d * (energyExtent[1] - energyExtent[0]));
    });
    // Add legend rectangle
    /* istanbul ignore next */
    cov_luq6hq4nf().s[152]++;
    legend.append("rect").attr("width", legendWidth).attr("height", legendHeight).style("fill", "url(#energy-gradient)");
    // Add legend axis
    const legendScale =
    /* istanbul ignore next */
    (cov_luq6hq4nf().s[153]++, _d3.scaleLinear().domain(energyExtent).range([legendHeight, 0]));
    const legendAxis =
    /* istanbul ignore next */
    (cov_luq6hq4nf().s[154]++, _d3.axisRight(legendScale).tickFormat(d => {
      /* istanbul ignore next */
      cov_luq6hq4nf().f[46]++;
      cov_luq6hq4nf().s[155]++;
      return (typeof d === "number" ?
      /* istanbul ignore next */
      (cov_luq6hq4nf().b[32][0]++, d) :
      /* istanbul ignore next */
      (cov_luq6hq4nf().b[32][1]++, d.valueOf())).toFixed(1);
    }));
    /* istanbul ignore next */
    cov_luq6hq4nf().s[156]++;
    legend.append("g").attr("transform", `translate(${legendWidth}, 0)`).call(legendAxis);
    // Add legend title
    /* istanbul ignore next */
    cov_luq6hq4nf().s[157]++;
    legend.append("text").attr("x", legendWidth / 2).attr("y", -10).attr("text-anchor", "middle").style("font-size", "12px").text("Free Energy");
  };
  /* istanbul ignore next */
  cov_luq6hq4nf().s[158]++;
  const addInteractionHandlers = (g, data, xScale, yScale, setSelectedPoint) => {
    /* istanbul ignore next */
    cov_luq6hq4nf().f[47]++;
    cov_luq6hq4nf().s[159]++;
    g.selectAll(".energy-point, .voronoi-cell").style("cursor", "pointer").on("click", function (event, d) {
      /* istanbul ignore next */
      cov_luq6hq4nf().f[48]++;
      cov_luq6hq4nf().s[160]++;
      setSelectedPoint(d);
    }).on("mouseover", function (event, d) {
      /* istanbul ignore next */
      cov_luq6hq4nf().f[49]++;
      cov_luq6hq4nf().s[161]++;
      _d3.select(this).transition().duration(200).attr("opacity", 1.0);
    }).on("mouseout", function (event, d) {
      /* istanbul ignore next */
      cov_luq6hq4nf().f[50]++;
      cov_luq6hq4nf().s[162]++;
      _d3.select(this).transition().duration(200).attr("opacity", 0.8);
    });
  };
  /* istanbul ignore next */
  cov_luq6hq4nf().s[163]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: "w-full space-y-4",
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardTitle, {
          className: "flex justify-between items-center",
          children: ["Free Energy Landscape - Agent ", agentId, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex gap-2",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_badge.Badge, {
              variant: realTimeUpdates ?
              /* istanbul ignore next */
              (cov_luq6hq4nf().b[33][0]++, "default") :
              /* istanbul ignore next */
              (cov_luq6hq4nf().b[33][1]++, "secondary"),
              children: realTimeUpdates ?
              /* istanbul ignore next */
              (cov_luq6hq4nf().b[34][0]++, "Real-time") :
              /* istanbul ignore next */
              (cov_luq6hq4nf().b[34][1]++, "Static")
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_badge.Badge, {
              variant: "outline",
              children: [data.length, " data points"]
            })]
          })]
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex gap-4 mb-4 p-4 bg-gray-50 rounded-lg",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex-1",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: "block text-sm font-medium mb-2",
              children: "View Mode"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "flex gap-2",
              children: ["surface", "contour", "heatmap"].map(mode => {
                /* istanbul ignore next */
                cov_luq6hq4nf().f[51]++;
                cov_luq6hq4nf().s[164]++;
                return /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
                  variant: viewMode === mode ?
                  /* istanbul ignore next */
                  (cov_luq6hq4nf().b[35][0]++, "default") :
                  /* istanbul ignore next */
                  (cov_luq6hq4nf().b[35][1]++, "outline"),
                  size: "sm",
                  onClick: () => {
                    /* istanbul ignore next */
                    cov_luq6hq4nf().f[52]++;
                    cov_luq6hq4nf().s[165]++;
                    return setViewMode(mode);
                  },
                  children: mode.charAt(0).toUpperCase() + mode.slice(1)
                }, mode);
              })
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex-1",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
              className: "block text-sm font-medium mb-2",
              children: ["Energy Threshold: [", energyThreshold[0].toFixed(1), ",", " ", energyThreshold[1].toFixed(1), "]"]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_slider.Slider, {
              value: energyThreshold,
              onValueChange: setEnergyThreshold,
              min: 0,
              max: 20,
              step: 0.1,
              className: "w-full"
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex-1",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
              className: "block text-sm font-medium mb-2",
              children: ["Uncertainty Threshold: [", uncertaintyThreshold[0].toFixed(2), ",", " ", uncertaintyThreshold[1].toFixed(2), "]"]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_slider.Slider, {
              value: uncertaintyThreshold,
              onValueChange: setUncertaintyThreshold,
              min: 0,
              max: 1,
              step: 0.01,
              className: "w-full"
            })]
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex gap-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "flex-1",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)("svg", {
              ref: svgRef,
              width: "800",
              height: "600",
              className: "border rounded-lg",
              style: {
                background: "white"
              }
            })
          }),
          /* istanbul ignore next */
          (cov_luq6hq4nf().b[36][0]++, selectedPoint) &&
          /* istanbul ignore next */
          (cov_luq6hq4nf().b[36][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "w-80",
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
                children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
                  className: "text-lg",
                  children: "Point Details"
                })
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
                className: "space-y-3",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "grid grid-cols-2 gap-2 text-sm",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    children: "Position:"
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "font-mono",
                    children: ["(", selectedPoint.x.toFixed(3), ",", " ", selectedPoint.y.toFixed(3), ")"]
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    children: "Free Energy:"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    className: "font-mono font-semibold",
                    children: selectedPoint.free_energy.toFixed(4)
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    children: "Uncertainty:"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    className: "font-mono",
                    children: selectedPoint.uncertainty.toFixed(4)
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    children: "Convergence:"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    className: "font-mono",
                    children: selectedPoint.convergence_score.toFixed(4)
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    children: "Decision Boundary:"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    children: /*#__PURE__*/(0, _jsxruntime.jsx)(_badge.Badge, {
                      variant: selectedPoint.decision_boundary ?
                      /* istanbul ignore next */
                      (cov_luq6hq4nf().b[37][0]++, "default") :
                      /* istanbul ignore next */
                      (cov_luq6hq4nf().b[37][1]++, "secondary"),
                      children: selectedPoint.decision_boundary ?
                      /* istanbul ignore next */
                      (cov_luq6hq4nf().b[38][0]++, "Yes") :
                      /* istanbul ignore next */
                      (cov_luq6hq4nf().b[38][1]++, "No")
                    })
                  })]
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
                    className: "font-semibold mb-2",
                    children: "Belief State"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    className: "space-y-1",
                    children: selectedPoint.belief_state.map((belief, idx) => {
                      /* istanbul ignore next */
                      cov_luq6hq4nf().f[53]++;
                      cov_luq6hq4nf().s[166]++;
                      return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                        className: "flex justify-between text-xs",
                        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                          children: ["State ", idx, ":"]
                        }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                          className: "font-mono",
                          children: belief.toFixed(4)
                        })]
                      }, idx);
                    })
                  })]
                })]
              })]
            })
          }))]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "mt-4 p-4 bg-blue-50 rounded-lg",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
            className: "font-semibold mb-2",
            children: "Mathematical Foundation"
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "grid grid-cols-2 gap-4 text-sm",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("strong", {
                children: "Free Energy:"
              }), " F = -log P(o) + KL[Q(s)||P(s)]"]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("strong", {
                children: "Decision Boundaries:"
              }), " ∇F = 0"]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("strong", {
                children: "Uncertainty:"
              }), " H[Q(s)] = -Σ Q(s) log Q(s)"]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("strong", {
                children: "Convergence:"
              }), " ||Q_t - Q_", "t-1", "|| ", "<", " ε"]
            })]
          })]
        })]
      })]
    })
  });
};
const _default =
/* istanbul ignore next */
(cov_luq6hq4nf().s[167]++, FreeEnergyLandscapeViz);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
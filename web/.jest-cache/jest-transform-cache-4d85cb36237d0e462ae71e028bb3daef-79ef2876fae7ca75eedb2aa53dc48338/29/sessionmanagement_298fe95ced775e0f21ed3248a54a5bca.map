{"version":3,"names":["clearSessionId","cov_5tjphjta0","f","s","getApiKeyFromSession","getSessionId","setSessionId","storeSessionId","validateStoredSession","provider","_browsercheck","isBrowser","b","console","log","sessionId","localStorage","getItem","error","setItem","removeItem","response","fetch","method","headers","body","JSON","stringify","ok","data","json","apiKey","storedSessionId"],"sources":["/Users/matthewmoroney/builds/FreeAgentics/web/lib/session-management.ts"],"sourcesContent":["import { isBrowser } from \"./browser-check\";\n\nexport function getSessionId(provider: string): string | null {\n  if (!isBrowser) {\n    console.log(\"getSessionId called on server, returning null\");\n    return null;\n  }\n\n  try {\n    const sessionId = localStorage.getItem(`api_session_${provider}`);\n    console.log(`Retrieved session ID for provider ${provider}:`, sessionId);\n    return sessionId;\n  } catch (error) {\n    console.error(\"Error getting session ID:\", error);\n    return null;\n  }\n}\n\nexport function setSessionId(provider: string, sessionId: string): void {\n  if (!isBrowser) {\n    console.log(\"setSessionId called on server, skipping\");\n    return;\n  }\n\n  try {\n    localStorage.setItem(`api_session_${provider}`, sessionId);\n    console.log(`Stored session ID for provider ${provider}:`, sessionId);\n  } catch (error) {\n    console.error(\"Error setting session ID:\", error);\n  }\n}\n\nexport function clearSessionId(provider: string): void {\n  if (!isBrowser) {\n    console.log(\"clearSessionId called on server, skipping\");\n    return;\n  }\n\n  try {\n    localStorage.removeItem(`api_session_${provider}`);\n    console.log(`Cleared session ID for provider ${provider}`);\n  } catch (error) {\n    console.error(\"Error clearing session ID:\", error);\n  }\n}\n\nexport function storeSessionId(provider: string, sessionId: string): void {\n  if (!isBrowser) {\n    console.log(\"storeSessionId called on server, skipping\");\n    return;\n  }\n\n  try {\n    localStorage.setItem(`api_session_${provider}`, sessionId);\n    console.log(`Stored session ID for provider ${provider}:`, sessionId);\n  } catch (error) {\n    console.error(\"Error storing session ID:\", error);\n  }\n}\n\nexport async function getApiKeyFromSession(\n  provider: string,\n): Promise<string | null> {\n  try {\n    const sessionId = getSessionId(provider);\n    if (!sessionId) return null;\n\n    const response = await fetch(\"/api/api-key/retrieve\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ provider, sessionId }),\n    });\n\n    if (!response.ok) return null;\n    const data = await response.json();\n    return data.apiKey;\n  } catch (error) {\n    console.error(\"Error retrieving API key:\", error);\n    return null;\n  }\n}\n\nexport function validateStoredSession(\n  provider: string,\n  sessionId: string,\n): boolean {\n  const storedSessionId = getSessionId(provider);\n  return storedSessionId === sessionId;\n}\n"],"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","ignoreList":[]}
a4daf7fc6920f9d6ed7ba9f01dbb7032
"use client";
"use strict";

/* istanbul ignore next */
function cov_1agcils75q() {
  var path = "/Users/matthewmoroney/builds/FreeAgentics/web/contexts/llm-context.tsx";
  var hash = "cf078307b67bbeebba2c708e7c14364bf341a8e6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewmoroney/builds/FreeAgentics/web/contexts/llm-context.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 27
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 22
        }
      },
      "6": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 48
        }
      },
      "7": {
        start: {
          line: 21,
          column: 29
        },
        end: {
          line: 21,
          column: 72
        }
      },
      "8": {
        start: {
          line: 22,
          column: 19
        },
        end: {
          line: 22,
          column: 47
        }
      },
      "9": {
        start: {
          line: 23,
          column: 25
        },
        end: {
          line: 23,
          column: 60
        }
      },
      "10": {
        start: {
          line: 24,
          column: 22
        },
        end: {
          line: 24,
          column: 53
        }
      },
      "11": {
        start: {
          line: 25,
          column: 21
        },
        end: {
          line: 25,
          column: 51
        }
      },
      "12": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 51
        }
      },
      "13": {
        start: {
          line: 27,
          column: 39
        },
        end: {
          line: 27,
          column: 51
        }
      },
      "14": {
        start: {
          line: 28,
          column: 28
        },
        end: {
          line: 28,
          column: 41
        }
      },
      "15": {
        start: {
          line: 29,
          column: 27
        },
        end: {
          line: 29,
          column: 40
        }
      },
      "16": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 32,
          column: 20
        }
      },
      "17": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 66
        }
      },
      "18": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "19": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 19
        }
      },
      "20": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "21": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 41,
          column: 10
        }
      },
      "22": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 53
        }
      },
      "23": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "24": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 30
        }
      },
      "25": {
        start: {
          line: 47,
          column: 17
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "26": {
        start: {
          line: 50,
          column: 32
        },
        end: {
          line: 50,
          column: 88
        }
      },
      "27": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "28": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 59,
          column: 9
        }
      },
      "29": {
        start: {
          line: 53,
          column: 23
        },
        end: {
          line: 53,
          column: 95
        }
      },
      "30": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 58,
          column: 13
        }
      },
      "31": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 57
        }
      },
      "32": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 39
        }
      },
      "33": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 25
        }
      },
      "34": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 64,
          column: 5
        }
      },
      "35": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 31
        }
      },
      "36": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 65,
          column: 18
        }
      },
      "37": {
        start: {
          line: 67,
          column: 15
        },
        end: {
          line: 67,
          column: 60
        }
      },
      "38": {
        start: {
          line: 69,
          column: 33
        },
        end: {
          line: 77,
          column: 2
        }
      },
      "39": {
        start: {
          line: 73,
          column: 28
        },
        end: {
          line: 73,
          column: 33
        }
      },
      "40": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 79,
          column: 41
        }
      },
      "41": {
        start: {
          line: 80,
          column: 36
        },
        end: {
          line: 80,
          column: 62
        }
      },
      "42": {
        start: {
          line: 81,
          column: 44
        },
        end: {
          line: 81,
          column: 71
        }
      },
      "43": {
        start: {
          line: 83,
          column: 29
        },
        end: {
          line: 83,
          column: 87
        }
      },
      "44": {
        start: {
          line: 84,
          column: 25
        },
        end: {
          line: 84,
          column: 99
        }
      },
      "45": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 88,
          column: 7
        }
      },
      "46": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 143,
          column: 7
        }
      },
      "47": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 60
        }
      },
      "48": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 96,
          column: 9
        }
      },
      "49": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 70
        }
      },
      "50": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 30
        }
      },
      "51": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 19
        }
      },
      "52": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 140,
          column: 9
        }
      },
      "53": {
        start: {
          line: 98,
          column: 35
        },
        end: {
          line: 98,
          column: 61
        }
      },
      "54": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 105,
          column: 15
        }
      },
      "55": {
        start: {
          line: 107,
          column: 35
        },
        end: {
          line: 129,
          column: 13
        }
      },
      "56": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 40
        }
      },
      "57": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 136,
          column: 15
        }
      },
      "58": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 138,
          column: 67
        }
      },
      "59": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 30
        }
      },
      "60": {
        start: {
          line: 145,
          column: 27
        },
        end: {
          line: 193,
          column: 5
        }
      },
      "61": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 151,
          column: 11
        }
      },
      "62": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 155,
          column: 9
        }
      },
      "63": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 52
        }
      },
      "64": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 19
        }
      },
      "65": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 192,
          column: 9
        }
      },
      "66": {
        start: {
          line: 158,
          column: 36
        },
        end: {
          line: 181,
          column: 13
        }
      },
      "67": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 183,
          column: 41
        }
      },
      "68": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 189,
          column: 13
        }
      },
      "69": {
        start: {
          line: 186,
          column: 16
        },
        end: {
          line: 186,
          column: 61
        }
      },
      "70": {
        start: {
          line: 188,
          column: 16
        },
        end: {
          line: 188,
          column: 77
        }
      },
      "71": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 60
        }
      },
      "72": {
        start: {
          line: 195,
          column: 25
        },
        end: {
          line: 208,
          column: 5
        }
      },
      "73": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 196,
          column: 43
        }
      },
      "74": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 207,
          column: 9
        }
      },
      "75": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 203,
          column: 13
        }
      },
      "76": {
        start: {
          line: 199,
          column: 16
        },
        end: {
          line: 199,
          column: 57
        }
      },
      "77": {
        start: {
          line: 201,
          column: 16
        },
        end: {
          line: 201,
          column: 75
        }
      },
      "78": {
        start: {
          line: 202,
          column: 16
        },
        end: {
          line: 202,
          column: 29
        }
      },
      "79": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 205,
          column: 58
        }
      },
      "80": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 206,
          column: 25
        }
      },
      "81": {
        start: {
          line: 210,
          column: 18
        },
        end: {
          line: 218,
          column: 5
        }
      },
      "82": {
        start: {
          line: 219,
          column: 4
        },
        end: {
          line: 225,
          column: 7
        }
      },
      "83": {
        start: {
          line: 226,
          column: 4
        },
        end: {
          line: 229,
          column: 7
        }
      },
      "84": {
        start: {
          line: 232,
          column: 4
        },
        end: {
          line: 232,
          column: 38
        }
      },
      "85": {
        start: {
          line: 233,
          column: 20
        },
        end: {
          line: 233,
          column: 54
        }
      },
      "86": {
        start: {
          line: 234,
          column: 4
        },
        end: {
          line: 240,
          column: 7
        }
      },
      "87": {
        start: {
          line: 241,
          column: 4
        },
        end: {
          line: 241,
          column: 19
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 17
          },
          end: {
            line: 13,
            column: 18
          }
        },
        loc: {
          start: {
            line: 13,
            column: 28
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 12
          },
          end: {
            line: 16,
            column: 13
          }
        },
        loc: {
          start: {
            line: 16,
            column: 23
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 26,
            column: 9
          },
          end: {
            line: 26,
            column: 33
          }
        },
        loc: {
          start: {
            line: 26,
            column: 47
          },
          end: {
            line: 33,
            column: 1
          }
        },
        line: 26
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 30,
            column: 39
          },
          end: {
            line: 30,
            column: 40
          }
        },
        loc: {
          start: {
            line: 30,
            column: 61
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "5": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 34,
            column: 9
          },
          end: {
            line: 34,
            column: 34
          }
        },
        loc: {
          start: {
            line: 34,
            column: 53
          },
          end: {
            line: 66,
            column: 1
          }
        },
        line: 34
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 72,
            column: 20
          },
          end: {
            line: 72,
            column: 21
          }
        },
        loc: {
          start: {
            line: 72,
            column: 24
          },
          end: {
            line: 72,
            column: 26
          }
        },
        line: 72
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 73,
            column: 18
          },
          end: {
            line: 73,
            column: 19
          }
        },
        loc: {
          start: {
            line: 73,
            column: 28
          },
          end: {
            line: 73,
            column: 33
          }
        },
        line: 73
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 75,
            column: 21
          },
          end: {
            line: 75,
            column: 22
          }
        },
        loc: {
          start: {
            line: 75,
            column: 25
          },
          end: {
            line: 75,
            column: 27
          }
        },
        line: 75
      },
      "9": {
        name: "LLMProvider",
        decl: {
          start: {
            line: 78,
            column: 9
          },
          end: {
            line: 78,
            column: 20
          }
        },
        loc: {
          start: {
            line: 78,
            column: 35
          },
          end: {
            line: 230,
            column: 1
          }
        },
        line: 78
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 90,
            column: 26
          },
          end: {
            line: 90,
            column: 27
          }
        },
        loc: {
          start: {
            line: 90,
            column: 30
          },
          end: {
            line: 141,
            column: 5
          }
        },
        line: 90
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 145,
            column: 27
          },
          end: {
            line: 145,
            column: 28
          }
        },
        loc: {
          start: {
            line: 145,
            column: 42
          },
          end: {
            line: 193,
            column: 5
          }
        },
        line: 145
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 195,
            column: 25
          },
          end: {
            line: 195,
            column: 26
          }
        },
        loc: {
          start: {
            line: 195,
            column: 35
          },
          end: {
            line: 208,
            column: 5
          }
        },
        line: 195
      },
      "13": {
        name: "useLLM",
        decl: {
          start: {
            line: 231,
            column: 9
          },
          end: {
            line: 231,
            column: 15
          }
        },
        loc: {
          start: {
            line: 231,
            column: 18
          },
          end: {
            line: 242,
            column: 1
          }
        },
        line: 231
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 31,
            column: 15
          },
          end: {
            line: 31,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 31,
            column: 29
          },
          end: {
            line: 31,
            column: 45
          }
        }, {
          start: {
            line: 31,
            column: 48
          },
          end: {
            line: 31,
            column: 65
          }
        }],
        line: 31
      },
      "2": {
        loc: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "3": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 20
          }
        }, {
          start: {
            line: 35,
            column: 24
          },
          end: {
            line: 35,
            column: 27
          }
        }, {
          start: {
            line: 35,
            column: 31
          },
          end: {
            line: 35,
            column: 45
          }
        }],
        line: 35
      },
      "4": {
        loc: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "5": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 20
          }
        }, {
          start: {
            line: 38,
            column: 24
          },
          end: {
            line: 38,
            column: 47
          }
        }, {
          start: {
            line: 38,
            column: 51
          },
          end: {
            line: 38,
            column: 76
          }
        }],
        line: 38
      },
      "6": {
        loc: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "7": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 13
          }
        }, {
          start: {
            line: 44,
            column: 17
          },
          end: {
            line: 44,
            column: 31
          }
        }],
        line: 44
      },
      "8": {
        loc: {
          start: {
            line: 50,
            column: 32
          },
          end: {
            line: 50,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 32
          },
          end: {
            line: 50,
            column: 53
          }
        }, {
          start: {
            line: 50,
            column: 57
          },
          end: {
            line: 50,
            column: 88
          }
        }],
        line: 50
      },
      "9": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "10": {
        loc: {
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 52,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 52,
            column: 29
          }
        }, {
          start: {
            line: 52,
            column: 33
          },
          end: {
            line: 52,
            column: 79
          }
        }],
        line: 52
      },
      "11": {
        loc: {
          start: {
            line: 53,
            column: 23
          },
          end: {
            line: 53,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 53,
            column: 47
          },
          end: {
            line: 53,
            column: 88
          }
        }, {
          start: {
            line: 53,
            column: 91
          },
          end: {
            line: 53,
            column: 95
          }
        }],
        line: 53
      },
      "12": {
        loc: {
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        }, {
          start: {
            line: 56,
            column: 19
          },
          end: {
            line: 58,
            column: 13
          }
        }],
        line: 54
      },
      "13": {
        loc: {
          start: {
            line: 54,
            column: 16
          },
          end: {
            line: 54,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 16
          },
          end: {
            line: 54,
            column: 20
          }
        }, {
          start: {
            line: 54,
            column: 25
          },
          end: {
            line: 54,
            column: 33
          }
        }, {
          start: {
            line: 54,
            column: 37
          },
          end: {
            line: 54,
            column: 45
          }
        }],
        line: 54
      },
      "14": {
        loc: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "15": {
        loc: {
          start: {
            line: 70,
            column: 12
          },
          end: {
            line: 70,
            column: 128
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 70,
            column: 73
          },
          end: {
            line: 70,
            column: 105
          }
        }, {
          start: {
            line: 70,
            column: 108
          },
          end: {
            line: 70,
            column: 128
          }
        }],
        line: 70
      },
      "16": {
        loc: {
          start: {
            line: 76,
            column: 16
          },
          end: {
            line: 76,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 76,
            column: 77
          },
          end: {
            line: 76,
            column: 94
          }
        }, {
          start: {
            line: 76,
            column: 97
          },
          end: {
            line: 76,
            column: 108
          }
        }],
        line: 76
      },
      "17": {
        loc: {
          start: {
            line: 84,
            column: 25
          },
          end: {
            line: 84,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 84,
            column: 44
          },
          end: {
            line: 84,
            column: 76
          }
        }, {
          start: {
            line: 84,
            column: 79
          },
          end: {
            line: 84,
            column: 99
          }
        }],
        line: 84
      },
      "18": {
        loc: {
          start: {
            line: 87,
            column: 20
          },
          end: {
            line: 87,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 87,
            column: 39
          },
          end: {
            line: 87,
            column: 56
          }
        }, {
          start: {
            line: 87,
            column: 59
          },
          end: {
            line: 87,
            column: 70
          }
        }],
        line: 87
      },
      "19": {
        loc: {
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "20": {
        loc: {
          start: {
            line: 104,
            column: 30
          },
          end: {
            line: 104,
            column: 118
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 30
          },
          end: {
            line: 104,
            column: 44
          }
        }, {
          start: {
            line: 104,
            column: 48
          },
          end: {
            line: 104,
            column: 82
          }
        }, {
          start: {
            line: 104,
            column: 86
          },
          end: {
            line: 104,
            column: 118
          }
        }],
        line: 104
      },
      "21": {
        loc: {
          start: {
            line: 108,
            column: 26
          },
          end: {
            line: 108,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 26
          },
          end: {
            line: 108,
            column: 50
          }
        }, {
          start: {
            line: 108,
            column: 54
          },
          end: {
            line: 108,
            column: 62
          }
        }],
        line: 108
      },
      "22": {
        loc: {
          start: {
            line: 109,
            column: 23
          },
          end: {
            line: 109,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 109,
            column: 23
          },
          end: {
            line: 109,
            column: 44
          }
        }, {
          start: {
            line: 109,
            column: 48
          },
          end: {
            line: 109,
            column: 56
          }
        }],
        line: 109
      },
      "23": {
        loc: {
          start: {
            line: 110,
            column: 29
          },
          end: {
            line: 110,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 110,
            column: 79
          },
          end: {
            line: 110,
            column: 105
          }
        }, {
          start: {
            line: 110,
            column: 108
          },
          end: {
            line: 110,
            column: 111
          }
        }],
        line: 110
      },
      "24": {
        loc: {
          start: {
            line: 111,
            column: 27
          },
          end: {
            line: 111,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 111,
            column: 75
          },
          end: {
            line: 111,
            column: 99
          }
        }, {
          start: {
            line: 111,
            column: 102
          },
          end: {
            line: 111,
            column: 106
          }
        }],
        line: 111
      },
      "25": {
        loc: {
          start: {
            line: 112,
            column: 22
          },
          end: {
            line: 112,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 112,
            column: 65
          },
          end: {
            line: 112,
            column: 84
          }
        }, {
          start: {
            line: 112,
            column: 87
          },
          end: {
            line: 112,
            column: 90
          }
        }],
        line: 112
      },
      "26": {
        loc: {
          start: {
            line: 113,
            column: 34
          },
          end: {
            line: 113,
            column: 124
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 113,
            column: 89
          },
          end: {
            line: 113,
            column: 120
          }
        }, {
          start: {
            line: 113,
            column: 123
          },
          end: {
            line: 113,
            column: 124
          }
        }],
        line: 113
      },
      "27": {
        loc: {
          start: {
            line: 114,
            column: 33
          },
          end: {
            line: 114,
            column: 121
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 114,
            column: 87
          },
          end: {
            line: 114,
            column: 117
          }
        }, {
          start: {
            line: 114,
            column: 120
          },
          end: {
            line: 114,
            column: 121
          }
        }],
        line: 114
      },
      "28": {
        loc: {
          start: {
            line: 115,
            column: 35
          },
          end: {
            line: 115,
            column: 132
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 115,
            column: 92
          },
          end: {
            line: 115,
            column: 124
          }
        }, {
          start: {
            line: 115,
            column: 127
          },
          end: {
            line: 115,
            column: 132
          }
        }],
        line: 115
      },
      "29": {
        loc: {
          start: {
            line: 117,
            column: 19
          },
          end: {
            line: 119,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 117,
            column: 19
          },
          end: {
            line: 117,
            column: 41
          }
        }, {
          start: {
            line: 117,
            column: 45
          },
          end: {
            line: 119,
            column: 17
          }
        }],
        line: 117
      },
      "30": {
        loc: {
          start: {
            line: 120,
            column: 19
          },
          end: {
            line: 122,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 19
          },
          end: {
            line: 120,
            column: 50
          }
        }, {
          start: {
            line: 120,
            column: 54
          },
          end: {
            line: 122,
            column: 17
          }
        }],
        line: 120
      },
      "31": {
        loc: {
          start: {
            line: 123,
            column: 19
          },
          end: {
            line: 125,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 19
          },
          end: {
            line: 123,
            column: 76
          }
        }, {
          start: {
            line: 123,
            column: 80
          },
          end: {
            line: 125,
            column: 17
          }
        }],
        line: 123
      },
      "32": {
        loc: {
          start: {
            line: 126,
            column: 19
          },
          end: {
            line: 128,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 126,
            column: 19
          },
          end: {
            line: 126,
            column: 75
          }
        }, {
          start: {
            line: 126,
            column: 79
          },
          end: {
            line: 128,
            column: 17
          }
        }],
        line: 126
      },
      "33": {
        loc: {
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "34": {
        loc: {
          start: {
            line: 152,
            column: 12
          },
          end: {
            line: 152,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 152,
            column: 12
          },
          end: {
            line: 152,
            column: 24
          }
        }, {
          start: {
            line: 152,
            column: 28
          },
          end: {
            line: 152,
            column: 59
          }
        }],
        line: 152
      },
      "35": {
        loc: {
          start: {
            line: 160,
            column: 26
          },
          end: {
            line: 160,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 160,
            column: 26
          },
          end: {
            line: 160,
            column: 46
          }
        }, {
          start: {
            line: 160,
            column: 50
          },
          end: {
            line: 160,
            column: 68
          }
        }, {
          start: {
            line: 160,
            column: 72
          },
          end: {
            line: 160,
            column: 80
          }
        }],
        line: 160
      },
      "36": {
        loc: {
          start: {
            line: 161,
            column: 23
          },
          end: {
            line: 161,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 161,
            column: 23
          },
          end: {
            line: 161,
            column: 40
          }
        }, {
          start: {
            line: 161,
            column: 44
          },
          end: {
            line: 161,
            column: 59
          }
        }, {
          start: {
            line: 161,
            column: 63
          },
          end: {
            line: 161,
            column: 71
          }
        }],
        line: 161
      },
      "37": {
        loc: {
          start: {
            line: 162,
            column: 29
          },
          end: {
            line: 162,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 162,
            column: 29
          },
          end: {
            line: 162,
            column: 52
          }
        }, {
          start: {
            line: 162,
            column: 56
          },
          end: {
            line: 162,
            column: 77
          }
        }, {
          start: {
            line: 162,
            column: 81
          },
          end: {
            line: 162,
            column: 84
          }
        }],
        line: 162
      },
      "38": {
        loc: {
          start: {
            line: 163,
            column: 27
          },
          end: {
            line: 163,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 163,
            column: 27
          },
          end: {
            line: 163,
            column: 48
          }
        }, {
          start: {
            line: 163,
            column: 52
          },
          end: {
            line: 163,
            column: 71
          }
        }, {
          start: {
            line: 163,
            column: 75
          },
          end: {
            line: 163,
            column: 79
          }
        }],
        line: 163
      },
      "39": {
        loc: {
          start: {
            line: 164,
            column: 22
          },
          end: {
            line: 164,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 164,
            column: 22
          },
          end: {
            line: 164,
            column: 38
          }
        }, {
          start: {
            line: 164,
            column: 42
          },
          end: {
            line: 164,
            column: 56
          }
        }, {
          start: {
            line: 164,
            column: 60
          },
          end: {
            line: 164,
            column: 63
          }
        }],
        line: 164
      },
      "40": {
        loc: {
          start: {
            line: 165,
            column: 34
          },
          end: {
            line: 165,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 34
          },
          end: {
            line: 165,
            column: 62
          }
        }, {
          start: {
            line: 165,
            column: 66
          },
          end: {
            line: 165,
            column: 92
          }
        }, {
          start: {
            line: 165,
            column: 96
          },
          end: {
            line: 165,
            column: 97
          }
        }],
        line: 165
      },
      "41": {
        loc: {
          start: {
            line: 166,
            column: 33
          },
          end: {
            line: 166,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 166,
            column: 33
          },
          end: {
            line: 166,
            column: 60
          }
        }, {
          start: {
            line: 166,
            column: 64
          },
          end: {
            line: 166,
            column: 89
          }
        }, {
          start: {
            line: 166,
            column: 93
          },
          end: {
            line: 166,
            column: 94
          }
        }],
        line: 166
      },
      "42": {
        loc: {
          start: {
            line: 167,
            column: 35
          },
          end: {
            line: 167,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 167,
            column: 35
          },
          end: {
            line: 167,
            column: 64
          }
        }, {
          start: {
            line: 167,
            column: 68
          },
          end: {
            line: 167,
            column: 95
          }
        }, {
          start: {
            line: 167,
            column: 99
          },
          end: {
            line: 167,
            column: 104
          }
        }],
        line: 167
      },
      "43": {
        loc: {
          start: {
            line: 169,
            column: 19
          },
          end: {
            line: 171,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 169,
            column: 19
          },
          end: {
            line: 169,
            column: 51
          }
        }, {
          start: {
            line: 169,
            column: 55
          },
          end: {
            line: 171,
            column: 17
          }
        }],
        line: 169
      },
      "44": {
        loc: {
          start: {
            line: 172,
            column: 19
          },
          end: {
            line: 174,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 19
          },
          end: {
            line: 172,
            column: 60
          }
        }, {
          start: {
            line: 172,
            column: 64
          },
          end: {
            line: 174,
            column: 17
          }
        }],
        line: 172
      },
      "45": {
        loc: {
          start: {
            line: 175,
            column: 19
          },
          end: {
            line: 177,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 175,
            column: 19
          },
          end: {
            line: 175,
            column: 66
          }
        }, {
          start: {
            line: 175,
            column: 70
          },
          end: {
            line: 177,
            column: 17
          }
        }],
        line: 175
      },
      "46": {
        loc: {
          start: {
            line: 178,
            column: 19
          },
          end: {
            line: 180,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 178,
            column: 19
          },
          end: {
            line: 178,
            column: 65
          }
        }, {
          start: {
            line: 178,
            column: 69
          },
          end: {
            line: 180,
            column: 17
          }
        }],
        line: 178
      },
      "47": {
        loc: {
          start: {
            line: 185,
            column: 12
          },
          end: {
            line: 189,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 12
          },
          end: {
            line: 189,
            column: 13
          }
        }, {
          start: {
            line: 187,
            column: 19
          },
          end: {
            line: 189,
            column: 13
          }
        }],
        line: 185
      },
      "48": {
        loc: {
          start: {
            line: 185,
            column: 16
          },
          end: {
            line: 185,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 185,
            column: 16
          },
          end: {
            line: 185,
            column: 28
          }
        }, {
          start: {
            line: 185,
            column: 32
          },
          end: {
            line: 185,
            column: 81
          }
        }],
        line: 185
      },
      "49": {
        loc: {
          start: {
            line: 198,
            column: 12
          },
          end: {
            line: 203,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 12
          },
          end: {
            line: 203,
            column: 13
          }
        }, {
          start: {
            line: 200,
            column: 19
          },
          end: {
            line: 203,
            column: 13
          }
        }],
        line: 198
      },
      "50": {
        loc: {
          start: {
            line: 198,
            column: 16
          },
          end: {
            line: 198,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 198,
            column: 16
          },
          end: {
            line: 198,
            column: 28
          }
        }, {
          start: {
            line: 198,
            column: 32
          },
          end: {
            line: 198,
            column: 79
          }
        }],
        line: 198
      },
      "51": {
        loc: {
          start: {
            line: 217,
            column: 20
          },
          end: {
            line: 217,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 217,
            column: 39
          },
          end: {
            line: 217,
            column: 56
          }
        }, {
          start: {
            line: 217,
            column: 59
          },
          end: {
            line: 217,
            column: 70
          }
        }],
        line: 217
      },
      "52": {
        loc: {
          start: {
            line: 221,
            column: 20
          },
          end: {
            line: 221,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 221,
            column: 39
          },
          end: {
            line: 221,
            column: 56
          }
        }, {
          start: {
            line: 221,
            column: 59
          },
          end: {
            line: 221,
            column: 70
          }
        }],
        line: 221
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0, 0],
      "36": [0, 0, 0],
      "37": [0, 0, 0],
      "38": [0, 0, 0],
      "39": [0, 0, 0],
      "40": [0, 0, 0],
      "41": [0, 0, 0],
      "42": [0, 0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matthewmoroney/builds/FreeAgentics/web/contexts/llm-context.tsx"],
      sourcesContent: ["\"use client\";\n\nimport React, {\n  createContext,\n  useContext,\n  useEffect,\n  useState,\n  useCallback,\n} from \"react\";\nimport type { LLMSettings } from \"@/lib/llm-settings\";\nimport { llmClient } from \"@/lib/llm-client\";\nimport { llmSecureClient } from \"@/lib/llm-secure-client\";\nimport { isFeatureEnabled } from \"@/lib/feature-flags\";\nimport { createLogger } from \"@/lib/debug-logger\";\n\nconst logger = createLogger(\"LLM-CONTEXT\");\n\n// Create the context with default values\nexport interface ILLMContextType {\n  // Client management\n  client: typeof llmClient | typeof llmSecureClient | null;\n  clientType: \"LLMClient\" | \"LLMSecureClient\" | null;\n\n  // Settings management\n  settings: LLMSettings | null;\n  updateSettings: (newSettings: Partial<LLMSettings>) => void;\n  saveSettings: () => Promise<boolean>;\n\n  // Status\n  isProcessing: boolean;\n  setIsProcessing: (processing: boolean) => void;\n}\n\n// Create context with default values\nconst LLMContext = createContext<ILLMContextType>({\n  client: isFeatureEnabled(\"useSecureApiStorage\") ? llmSecureClient : llmClient,\n  settings: null,\n  updateSettings: () => {},\n  saveSettings: async () => false,\n  isProcessing: false,\n  setIsProcessing: () => {},\n  clientType: isFeatureEnabled(\"useSecureApiStorage\")\n    ? \"LLMSecureClient\"\n    : \"LLMClient\",\n});\n\n// Provider component\nexport function LLMProvider({ children }: { children: React.ReactNode }) {\n  logger.info(\"LLMProvider rendering\");\n  const [settings, setSettings] = useState<LLMSettings | null>(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  // Determine which client to use based on feature flag\n  const useSecureStorage = isFeatureEnabled(\"useSecureApiStorage\");\n  const activeClient = useSecureStorage ? llmSecureClient : llmClient;\n\n  logger.info(\"LLMProvider using client:\", {\n    useSecureStorage,\n    clientType: useSecureStorage ? \"LLMSecureClient\" : \"LLMClient\",\n  });\n\n  // Load initial settings from the client\n  useEffect(() => {\n    logger.info(\"Loading initial settings from client\");\n\n    if (!activeClient) {\n      logger.info(\"No active client available, using defaults\");\n      setSettings(null);\n      return;\n    }\n\n    try {\n      const clientSettings = activeClient.getSettings();\n      logger.info(\"Retrieved settings from client:\", {\n        provider: clientSettings?.provider,\n        model: clientSettings?.model,\n        hasApiKey: !!clientSettings?.apiKey,\n        hasApiKeySessionId: !!clientSettings?.apiKeySessionId,\n        hasServerRef:\n          clientSettings &&\n          typeof clientSettings === \"object\" &&\n          \"__server_ref\" in clientSettings,\n      });\n\n      // Create clean merged settings with robust null/undefined handling\n      const mergedSettings: LLMSettings = {\n        provider: clientSettings?.provider || \"openai\",\n        model: clientSettings?.model || \"gpt-4o\",\n        temperature:\n          typeof clientSettings?.temperature === \"number\"\n            ? clientSettings.temperature\n            : 0.7,\n        maxTokens:\n          typeof clientSettings?.maxTokens === \"number\"\n            ? clientSettings.maxTokens\n            : 1024,\n        topP:\n          typeof clientSettings?.topP === \"number\" ? clientSettings.topP : 0.9,\n        frequencyPenalty:\n          typeof clientSettings?.frequencyPenalty === \"number\"\n            ? clientSettings.frequencyPenalty\n            : 0,\n        presencePenalty:\n          typeof clientSettings?.presencePenalty === \"number\"\n            ? clientSettings.presencePenalty\n            : 0,\n        systemFingerprint:\n          typeof clientSettings?.systemFingerprint === \"boolean\"\n            ? clientSettings.systemFingerprint\n            : false,\n        // Handle optional properties - only include if they have valid values\n        ...(clientSettings?.apiKey && { apiKey: clientSettings.apiKey }),\n        ...(clientSettings?.apiKeySessionId && {\n          apiKeySessionId: clientSettings.apiKeySessionId,\n        }),\n        ...(typeof clientSettings?.maxAutonomousMessages === \"number\" && {\n          maxAutonomousMessages: clientSettings.maxAutonomousMessages,\n        }),\n        ...(typeof clientSettings?.conversationCooldown === \"number\" && {\n          conversationCooldown: clientSettings.conversationCooldown,\n        }),\n      };\n\n      setSettings(mergedSettings);\n\n      logger.info(\"LLM context initialized with settings:\", {\n        provider: mergedSettings.provider,\n        model: mergedSettings.model,\n        hasApiKey: !!mergedSettings.apiKey,\n        hasApiKeySessionId: !!mergedSettings.apiKeySessionId,\n      });\n    } catch (error) {\n      logger.error(\"Error loading initial settings:\", error);\n      setSettings(null);\n    }\n  }, [activeClient]);\n\n  // Update settings in the client\n  const updateSettings = (newSettings: Partial<LLMSettings>) => {\n    logger.info(\"updateSettings called with:\", {\n      provider: newSettings.provider,\n      model: newSettings.model,\n      hasApiKey: !!newSettings.apiKey,\n      hasApiKeySessionId: !!newSettings.apiKeySessionId,\n    });\n\n    if (!newSettings || typeof newSettings !== \"object\") {\n      logger.error(\"Invalid settings update\");\n      return;\n    }\n\n    try {\n      // Merge new settings with current settings, ensuring required fields are present\n      const updatedSettings: LLMSettings = {\n        // Provide defaults for required fields\n        provider: newSettings.provider || settings?.provider || \"openai\",\n        model: newSettings.model || settings?.model || \"gpt-4o\",\n        temperature: newSettings.temperature ?? settings?.temperature ?? 0.7,\n        maxTokens: newSettings.maxTokens ?? settings?.maxTokens ?? 1024,\n        topP: newSettings.topP ?? settings?.topP ?? 0.9,\n        frequencyPenalty:\n          newSettings.frequencyPenalty ?? settings?.frequencyPenalty ?? 0,\n        presencePenalty:\n          newSettings.presencePenalty ?? settings?.presencePenalty ?? 0,\n        systemFingerprint:\n          newSettings.systemFingerprint ?? settings?.systemFingerprint ?? false,\n        // Handle optional properties\n        ...(newSettings.apiKey !== undefined && { apiKey: newSettings.apiKey }),\n        ...(newSettings.apiKeySessionId !== undefined && {\n          apiKeySessionId: newSettings.apiKeySessionId,\n        }),\n        ...(newSettings.maxAutonomousMessages !== undefined && {\n          maxAutonomousMessages: newSettings.maxAutonomousMessages,\n        }),\n        ...(newSettings.conversationCooldown !== undefined && {\n          conversationCooldown: newSettings.conversationCooldown,\n        }),\n      };\n\n      // Update local state\n      setSettings(updatedSettings);\n\n      // Update client settings\n      if (activeClient && typeof activeClient.updateSettings === \"function\") {\n        activeClient.updateSettings(updatedSettings);\n      } else {\n        logger.error(\"activeClient.updateSettings is not available\");\n      }\n    } catch (error) {\n      logger.error(\"Error updating settings:\", error);\n    }\n  };\n\n  // Save settings to the server\n  const saveSettings = async (): Promise<boolean> => {\n    logger.info(\"saveSettings called\");\n    try {\n      if (activeClient && typeof activeClient.saveSettings === \"function\") {\n        return await activeClient.saveSettings();\n      } else {\n        logger.error(\"activeClient.saveSettings is not available\");\n        return false;\n      }\n    } catch (error) {\n      logger.error(\"Error saving settings:\", error);\n      return false;\n    }\n  };\n\n  // Context value\n  const value = {\n    client: activeClient,\n    settings,\n    updateSettings,\n    saveSettings,\n    isProcessing,\n    setIsProcessing,\n    clientType: (useSecureStorage ? \"LLMSecureClient\" : \"LLMClient\") as\n      | \"LLMSecureClient\"\n      | \"LLMClient\",\n  };\n\n  logger.info(\"LLMProvider rendering with context value:\", {\n    clientAvailable: !!value.client,\n    clientType: useSecureStorage ? \"LLMSecureClient\" : \"LLMClient\",\n    settingsProvider: value.settings?.provider,\n    settingsModel: value.settings?.model,\n    isProcessing: value.isProcessing,\n  });\n\n  return <LLMContext.Provider value={value}>{children}</LLMContext.Provider>;\n}\n\n// Hook to use the LLM context\nexport function useLLM() {\n  logger.info(\"useLLM hook called\");\n  const context = useContext(LLMContext);\n  logger.info(\"useLLM returning context with:\", {\n    clientAvailable: !!context.client,\n    clientType: context.clientType,\n    settingsProvider: context.settings?.provider,\n    settingsModel: context.settings?.model,\n    isProcessing: context.isProcessing,\n  });\n  return context;\n}\n"],
      names: ["LLMProvider", "useLLM", "logger", "createLogger", "LLMContext", "createContext", "client", "isFeatureEnabled", "llmSecureClient", "llmClient", "settings", "updateSettings", "saveSettings", "isProcessing", "setIsProcessing", "clientType", "children", "info", "setSettings", "useState", "useSecureStorage", "activeClient", "useEffect", "clientSettings", "getSettings", "provider", "model", "hasApiKey", "apiKey", "hasApiKeySessionId", "apiKeySessionId", "hasServerRef", "mergedSettings", "temperature", "maxTokens", "topP", "frequencyPenalty", "presencePenalty", "systemFingerprint", "maxAutonomousMessages", "conversationCooldown", "error", "newSettings", "updatedSettings", "undefined", "value", "clientAvailable", "settingsProvider", "settingsModel", "Provider", "context", "useContext"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "cf078307b67bbeebba2c708e7c14364bf341a8e6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1agcils75q = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1agcils75q();
cov_1agcils75q().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1agcils75q().f[0]++;
  cov_1agcils75q().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1agcils75q().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1agcils75q().s[3]++;
_export(exports, {
  LLMProvider: function () {
    /* istanbul ignore next */
    cov_1agcils75q().f[1]++;
    cov_1agcils75q().s[4]++;
    return LLMProvider;
  },
  useLLM: function () {
    /* istanbul ignore next */
    cov_1agcils75q().f[2]++;
    cov_1agcils75q().s[5]++;
    return useLLM;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1agcils75q().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_1agcils75q().s[7]++, _interop_require_wildcard(require("react")));
const _llmclient =
/* istanbul ignore next */
(cov_1agcils75q().s[8]++, require("../lib/llm-client"));
const _llmsecureclient =
/* istanbul ignore next */
(cov_1agcils75q().s[9]++, require("../lib/llm-secure-client"));
const _featureflags =
/* istanbul ignore next */
(cov_1agcils75q().s[10]++, require("../lib/feature-flags"));
const _debuglogger =
/* istanbul ignore next */
(cov_1agcils75q().s[11]++, require("../lib/debug-logger"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1agcils75q().f[3]++;
  cov_1agcils75q().s[12]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1agcils75q().b[0][0]++;
    cov_1agcils75q().s[13]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1agcils75q().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1agcils75q().s[14]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1agcils75q().s[15]++, new WeakMap());
  /* istanbul ignore next */
  cov_1agcils75q().s[16]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1agcils75q().f[4]++;
    cov_1agcils75q().s[17]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1agcils75q().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1agcils75q().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1agcils75q().f[5]++;
  cov_1agcils75q().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_1agcils75q().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1agcils75q().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1agcils75q().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1agcils75q().b[2][0]++;
    cov_1agcils75q().s[19]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1agcils75q().b[2][1]++;
  }
  cov_1agcils75q().s[20]++;
  if (
  /* istanbul ignore next */
  (cov_1agcils75q().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1agcils75q().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1agcils75q().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1agcils75q().b[4][0]++;
    cov_1agcils75q().s[21]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1agcils75q().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1agcils75q().s[22]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1agcils75q().s[23]++;
  if (
  /* istanbul ignore next */
  (cov_1agcils75q().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1agcils75q().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1agcils75q().b[6][0]++;
    cov_1agcils75q().s[24]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1agcils75q().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1agcils75q().s[25]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1agcils75q().s[26]++,
  /* istanbul ignore next */
  (cov_1agcils75q().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1agcils75q().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1agcils75q().s[27]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1agcils75q().s[28]++;
    if (
    /* istanbul ignore next */
    (cov_1agcils75q().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1agcils75q().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1agcils75q().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1agcils75q().s[29]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1agcils75q().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1agcils75q().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1agcils75q().s[30]++;
      if (
      /* istanbul ignore next */
      (cov_1agcils75q().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1agcils75q().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1agcils75q().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1agcils75q().b[12][0]++;
        cov_1agcils75q().s[31]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1agcils75q().b[12][1]++;
        cov_1agcils75q().s[32]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1agcils75q().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1agcils75q().s[33]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1agcils75q().s[34]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1agcils75q().b[14][0]++;
    cov_1agcils75q().s[35]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1agcils75q().b[14][1]++;
  }
  cov_1agcils75q().s[36]++;
  return newObj;
}
const logger =
/* istanbul ignore next */
(cov_1agcils75q().s[37]++, (0, _debuglogger.createLogger)("LLM-CONTEXT"));
// Create context with default values
const LLMContext =
/* istanbul ignore next */
(/*#__PURE__*/cov_1agcils75q().s[38]++, (0, _react.createContext)({
  client: (0, _featureflags.isFeatureEnabled)("useSecureApiStorage") ?
  /* istanbul ignore next */
  (cov_1agcils75q().b[15][0]++, _llmsecureclient.llmSecureClient) :
  /* istanbul ignore next */
  (cov_1agcils75q().b[15][1]++, _llmclient.llmClient),
  settings: null,
  updateSettings: () => {
    /* istanbul ignore next */
    cov_1agcils75q().f[6]++;
  },
  saveSettings: async () => {
    /* istanbul ignore next */
    cov_1agcils75q().f[7]++;
    cov_1agcils75q().s[39]++;
    return false;
  },
  isProcessing: false,
  setIsProcessing: () => {
    /* istanbul ignore next */
    cov_1agcils75q().f[8]++;
  },
  clientType: (0, _featureflags.isFeatureEnabled)("useSecureApiStorage") ?
  /* istanbul ignore next */
  (cov_1agcils75q().b[16][0]++, "LLMSecureClient") :
  /* istanbul ignore next */
  (cov_1agcils75q().b[16][1]++, "LLMClient")
}));
function LLMProvider({
  children
}) {
  /* istanbul ignore next */
  cov_1agcils75q().f[9]++;
  cov_1agcils75q().s[40]++;
  logger.info("LLMProvider rendering");
  const [settings, setSettings] =
  /* istanbul ignore next */
  (cov_1agcils75q().s[41]++, (0, _react.useState)(null));
  const [isProcessing, setIsProcessing] =
  /* istanbul ignore next */
  (cov_1agcils75q().s[42]++, (0, _react.useState)(false));
  // Determine which client to use based on feature flag
  const useSecureStorage =
  /* istanbul ignore next */
  (cov_1agcils75q().s[43]++, (0, _featureflags.isFeatureEnabled)("useSecureApiStorage"));
  const activeClient =
  /* istanbul ignore next */
  (cov_1agcils75q().s[44]++, useSecureStorage ?
  /* istanbul ignore next */
  (cov_1agcils75q().b[17][0]++, _llmsecureclient.llmSecureClient) :
  /* istanbul ignore next */
  (cov_1agcils75q().b[17][1]++, _llmclient.llmClient));
  /* istanbul ignore next */
  cov_1agcils75q().s[45]++;
  logger.info("LLMProvider using client:", {
    useSecureStorage,
    clientType: useSecureStorage ?
    /* istanbul ignore next */
    (cov_1agcils75q().b[18][0]++, "LLMSecureClient") :
    /* istanbul ignore next */
    (cov_1agcils75q().b[18][1]++, "LLMClient")
  });
  // Load initial settings from the client
  /* istanbul ignore next */
  cov_1agcils75q().s[46]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1agcils75q().f[10]++;
    cov_1agcils75q().s[47]++;
    logger.info("Loading initial settings from client");
    /* istanbul ignore next */
    cov_1agcils75q().s[48]++;
    if (!activeClient) {
      /* istanbul ignore next */
      cov_1agcils75q().b[19][0]++;
      cov_1agcils75q().s[49]++;
      logger.info("No active client available, using defaults");
      /* istanbul ignore next */
      cov_1agcils75q().s[50]++;
      setSettings(null);
      /* istanbul ignore next */
      cov_1agcils75q().s[51]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1agcils75q().b[19][1]++;
    }
    cov_1agcils75q().s[52]++;
    try {
      const clientSettings =
      /* istanbul ignore next */
      (cov_1agcils75q().s[53]++, activeClient.getSettings());
      /* istanbul ignore next */
      cov_1agcils75q().s[54]++;
      logger.info("Retrieved settings from client:", {
        provider: clientSettings?.provider,
        model: clientSettings?.model,
        hasApiKey: !!clientSettings?.apiKey,
        hasApiKeySessionId: !!clientSettings?.apiKeySessionId,
        hasServerRef:
        /* istanbul ignore next */
        (cov_1agcils75q().b[20][0]++, clientSettings) &&
        /* istanbul ignore next */
        (cov_1agcils75q().b[20][1]++, typeof clientSettings === "object") &&
        /* istanbul ignore next */
        (cov_1agcils75q().b[20][2]++, "__server_ref" in clientSettings)
      });
      // Create clean merged settings with robust null/undefined handling
      const mergedSettings =
      /* istanbul ignore next */
      (cov_1agcils75q().s[55]++, {
        provider:
        /* istanbul ignore next */
        (cov_1agcils75q().b[21][0]++, clientSettings?.provider) ||
        /* istanbul ignore next */
        (cov_1agcils75q().b[21][1]++, "openai"),
        model:
        /* istanbul ignore next */
        (cov_1agcils75q().b[22][0]++, clientSettings?.model) ||
        /* istanbul ignore next */
        (cov_1agcils75q().b[22][1]++, "gpt-4o"),
        temperature: typeof clientSettings?.temperature === "number" ?
        /* istanbul ignore next */
        (cov_1agcils75q().b[23][0]++, clientSettings.temperature) :
        /* istanbul ignore next */
        (cov_1agcils75q().b[23][1]++, 0.7),
        maxTokens: typeof clientSettings?.maxTokens === "number" ?
        /* istanbul ignore next */
        (cov_1agcils75q().b[24][0]++, clientSettings.maxTokens) :
        /* istanbul ignore next */
        (cov_1agcils75q().b[24][1]++, 1024),
        topP: typeof clientSettings?.topP === "number" ?
        /* istanbul ignore next */
        (cov_1agcils75q().b[25][0]++, clientSettings.topP) :
        /* istanbul ignore next */
        (cov_1agcils75q().b[25][1]++, 0.9),
        frequencyPenalty: typeof clientSettings?.frequencyPenalty === "number" ?
        /* istanbul ignore next */
        (cov_1agcils75q().b[26][0]++, clientSettings.frequencyPenalty) :
        /* istanbul ignore next */
        (cov_1agcils75q().b[26][1]++, 0),
        presencePenalty: typeof clientSettings?.presencePenalty === "number" ?
        /* istanbul ignore next */
        (cov_1agcils75q().b[27][0]++, clientSettings.presencePenalty) :
        /* istanbul ignore next */
        (cov_1agcils75q().b[27][1]++, 0),
        systemFingerprint: typeof clientSettings?.systemFingerprint === "boolean" ?
        /* istanbul ignore next */
        (cov_1agcils75q().b[28][0]++, clientSettings.systemFingerprint) :
        /* istanbul ignore next */
        (cov_1agcils75q().b[28][1]++, false),
        // Handle optional properties - only include if they have valid values
        ...(
        /* istanbul ignore next */
        (cov_1agcils75q().b[29][0]++, clientSettings?.apiKey) &&
        /* istanbul ignore next */
        (cov_1agcils75q().b[29][1]++, {
          apiKey: clientSettings.apiKey
        })),
        ...(
        /* istanbul ignore next */
        (cov_1agcils75q().b[30][0]++, clientSettings?.apiKeySessionId) &&
        /* istanbul ignore next */
        (cov_1agcils75q().b[30][1]++, {
          apiKeySessionId: clientSettings.apiKeySessionId
        })),
        ...(
        /* istanbul ignore next */
        (cov_1agcils75q().b[31][0]++, typeof clientSettings?.maxAutonomousMessages === "number") &&
        /* istanbul ignore next */
        (cov_1agcils75q().b[31][1]++, {
          maxAutonomousMessages: clientSettings.maxAutonomousMessages
        })),
        ...(
        /* istanbul ignore next */
        (cov_1agcils75q().b[32][0]++, typeof clientSettings?.conversationCooldown === "number") &&
        /* istanbul ignore next */
        (cov_1agcils75q().b[32][1]++, {
          conversationCooldown: clientSettings.conversationCooldown
        }))
      });
      /* istanbul ignore next */
      cov_1agcils75q().s[56]++;
      setSettings(mergedSettings);
      /* istanbul ignore next */
      cov_1agcils75q().s[57]++;
      logger.info("LLM context initialized with settings:", {
        provider: mergedSettings.provider,
        model: mergedSettings.model,
        hasApiKey: !!mergedSettings.apiKey,
        hasApiKeySessionId: !!mergedSettings.apiKeySessionId
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1agcils75q().s[58]++;
      logger.error("Error loading initial settings:", error);
      /* istanbul ignore next */
      cov_1agcils75q().s[59]++;
      setSettings(null);
    }
  }, [activeClient]);
  // Update settings in the client
  /* istanbul ignore next */
  cov_1agcils75q().s[60]++;
  const updateSettings = newSettings => {
    /* istanbul ignore next */
    cov_1agcils75q().f[11]++;
    cov_1agcils75q().s[61]++;
    logger.info("updateSettings called with:", {
      provider: newSettings.provider,
      model: newSettings.model,
      hasApiKey: !!newSettings.apiKey,
      hasApiKeySessionId: !!newSettings.apiKeySessionId
    });
    /* istanbul ignore next */
    cov_1agcils75q().s[62]++;
    if (
    /* istanbul ignore next */
    (cov_1agcils75q().b[34][0]++, !newSettings) ||
    /* istanbul ignore next */
    (cov_1agcils75q().b[34][1]++, typeof newSettings !== "object")) {
      /* istanbul ignore next */
      cov_1agcils75q().b[33][0]++;
      cov_1agcils75q().s[63]++;
      logger.error("Invalid settings update");
      /* istanbul ignore next */
      cov_1agcils75q().s[64]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1agcils75q().b[33][1]++;
    }
    cov_1agcils75q().s[65]++;
    try {
      // Merge new settings with current settings, ensuring required fields are present
      const updatedSettings =
      /* istanbul ignore next */
      (cov_1agcils75q().s[66]++, {
        // Provide defaults for required fields
        provider:
        /* istanbul ignore next */
        (cov_1agcils75q().b[35][0]++, newSettings.provider) ||
        /* istanbul ignore next */
        (cov_1agcils75q().b[35][1]++, settings?.provider) ||
        /* istanbul ignore next */
        (cov_1agcils75q().b[35][2]++, "openai"),
        model:
        /* istanbul ignore next */
        (cov_1agcils75q().b[36][0]++, newSettings.model) ||
        /* istanbul ignore next */
        (cov_1agcils75q().b[36][1]++, settings?.model) ||
        /* istanbul ignore next */
        (cov_1agcils75q().b[36][2]++, "gpt-4o"),
        temperature:
        /* istanbul ignore next */
        (cov_1agcils75q().b[37][0]++, newSettings.temperature) ??
        /* istanbul ignore next */
        (cov_1agcils75q().b[37][1]++, settings?.temperature) ??
        /* istanbul ignore next */
        (cov_1agcils75q().b[37][2]++, 0.7),
        maxTokens:
        /* istanbul ignore next */
        (cov_1agcils75q().b[38][0]++, newSettings.maxTokens) ??
        /* istanbul ignore next */
        (cov_1agcils75q().b[38][1]++, settings?.maxTokens) ??
        /* istanbul ignore next */
        (cov_1agcils75q().b[38][2]++, 1024),
        topP:
        /* istanbul ignore next */
        (cov_1agcils75q().b[39][0]++, newSettings.topP) ??
        /* istanbul ignore next */
        (cov_1agcils75q().b[39][1]++, settings?.topP) ??
        /* istanbul ignore next */
        (cov_1agcils75q().b[39][2]++, 0.9),
        frequencyPenalty:
        /* istanbul ignore next */
        (cov_1agcils75q().b[40][0]++, newSettings.frequencyPenalty) ??
        /* istanbul ignore next */
        (cov_1agcils75q().b[40][1]++, settings?.frequencyPenalty) ??
        /* istanbul ignore next */
        (cov_1agcils75q().b[40][2]++, 0),
        presencePenalty:
        /* istanbul ignore next */
        (cov_1agcils75q().b[41][0]++, newSettings.presencePenalty) ??
        /* istanbul ignore next */
        (cov_1agcils75q().b[41][1]++, settings?.presencePenalty) ??
        /* istanbul ignore next */
        (cov_1agcils75q().b[41][2]++, 0),
        systemFingerprint:
        /* istanbul ignore next */
        (cov_1agcils75q().b[42][0]++, newSettings.systemFingerprint) ??
        /* istanbul ignore next */
        (cov_1agcils75q().b[42][1]++, settings?.systemFingerprint) ??
        /* istanbul ignore next */
        (cov_1agcils75q().b[42][2]++, false),
        // Handle optional properties
        ...(
        /* istanbul ignore next */
        (cov_1agcils75q().b[43][0]++, newSettings.apiKey !== undefined) &&
        /* istanbul ignore next */
        (cov_1agcils75q().b[43][1]++, {
          apiKey: newSettings.apiKey
        })),
        ...(
        /* istanbul ignore next */
        (cov_1agcils75q().b[44][0]++, newSettings.apiKeySessionId !== undefined) &&
        /* istanbul ignore next */
        (cov_1agcils75q().b[44][1]++, {
          apiKeySessionId: newSettings.apiKeySessionId
        })),
        ...(
        /* istanbul ignore next */
        (cov_1agcils75q().b[45][0]++, newSettings.maxAutonomousMessages !== undefined) &&
        /* istanbul ignore next */
        (cov_1agcils75q().b[45][1]++, {
          maxAutonomousMessages: newSettings.maxAutonomousMessages
        })),
        ...(
        /* istanbul ignore next */
        (cov_1agcils75q().b[46][0]++, newSettings.conversationCooldown !== undefined) &&
        /* istanbul ignore next */
        (cov_1agcils75q().b[46][1]++, {
          conversationCooldown: newSettings.conversationCooldown
        }))
      });
      // Update local state
      /* istanbul ignore next */
      cov_1agcils75q().s[67]++;
      setSettings(updatedSettings);
      // Update client settings
      /* istanbul ignore next */
      cov_1agcils75q().s[68]++;
      if (
      /* istanbul ignore next */
      (cov_1agcils75q().b[48][0]++, activeClient) &&
      /* istanbul ignore next */
      (cov_1agcils75q().b[48][1]++, typeof activeClient.updateSettings === "function")) {
        /* istanbul ignore next */
        cov_1agcils75q().b[47][0]++;
        cov_1agcils75q().s[69]++;
        activeClient.updateSettings(updatedSettings);
      } else {
        /* istanbul ignore next */
        cov_1agcils75q().b[47][1]++;
        cov_1agcils75q().s[70]++;
        logger.error("activeClient.updateSettings is not available");
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1agcils75q().s[71]++;
      logger.error("Error updating settings:", error);
    }
  };
  // Save settings to the server
  /* istanbul ignore next */
  cov_1agcils75q().s[72]++;
  const saveSettings = async () => {
    /* istanbul ignore next */
    cov_1agcils75q().f[12]++;
    cov_1agcils75q().s[73]++;
    logger.info("saveSettings called");
    /* istanbul ignore next */
    cov_1agcils75q().s[74]++;
    try {
      /* istanbul ignore next */
      cov_1agcils75q().s[75]++;
      if (
      /* istanbul ignore next */
      (cov_1agcils75q().b[50][0]++, activeClient) &&
      /* istanbul ignore next */
      (cov_1agcils75q().b[50][1]++, typeof activeClient.saveSettings === "function")) {
        /* istanbul ignore next */
        cov_1agcils75q().b[49][0]++;
        cov_1agcils75q().s[76]++;
        return await activeClient.saveSettings();
      } else {
        /* istanbul ignore next */
        cov_1agcils75q().b[49][1]++;
        cov_1agcils75q().s[77]++;
        logger.error("activeClient.saveSettings is not available");
        /* istanbul ignore next */
        cov_1agcils75q().s[78]++;
        return false;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1agcils75q().s[79]++;
      logger.error("Error saving settings:", error);
      /* istanbul ignore next */
      cov_1agcils75q().s[80]++;
      return false;
    }
  };
  // Context value
  const value =
  /* istanbul ignore next */
  (cov_1agcils75q().s[81]++, {
    client: activeClient,
    settings,
    updateSettings,
    saveSettings,
    isProcessing,
    setIsProcessing,
    clientType: useSecureStorage ?
    /* istanbul ignore next */
    (cov_1agcils75q().b[51][0]++, "LLMSecureClient") :
    /* istanbul ignore next */
    (cov_1agcils75q().b[51][1]++, "LLMClient")
  });
  /* istanbul ignore next */
  cov_1agcils75q().s[82]++;
  logger.info("LLMProvider rendering with context value:", {
    clientAvailable: !!value.client,
    clientType: useSecureStorage ?
    /* istanbul ignore next */
    (cov_1agcils75q().b[52][0]++, "LLMSecureClient") :
    /* istanbul ignore next */
    (cov_1agcils75q().b[52][1]++, "LLMClient"),
    settingsProvider: value.settings?.provider,
    settingsModel: value.settings?.model,
    isProcessing: value.isProcessing
  });
  /* istanbul ignore next */
  cov_1agcils75q().s[83]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(LLMContext.Provider, {
    value: value,
    children: children
  });
}
function useLLM() {
  /* istanbul ignore next */
  cov_1agcils75q().f[13]++;
  cov_1agcils75q().s[84]++;
  logger.info("useLLM hook called");
  const context =
  /* istanbul ignore next */
  (cov_1agcils75q().s[85]++, (0, _react.useContext)(LLMContext));
  /* istanbul ignore next */
  cov_1agcils75q().s[86]++;
  logger.info("useLLM returning context with:", {
    clientAvailable: !!context.client,
    clientType: context.clientType,
    settingsProvider: context.settings?.provider,
    settingsModel: context.settings?.model,
    isProcessing: context.isProcessing
  });
  /* istanbul ignore next */
  cov_1agcils75q().s[87]++;
  return context;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
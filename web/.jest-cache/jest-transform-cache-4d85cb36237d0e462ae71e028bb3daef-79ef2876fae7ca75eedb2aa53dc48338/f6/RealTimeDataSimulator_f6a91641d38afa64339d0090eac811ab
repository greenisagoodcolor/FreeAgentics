715aef50df94d5de1689beb81c06be67
"use client";
"use strict";

/* istanbul ignore next */
function cov_1pnmoujenw() {
  var path = "/Users/matthewmoroney/builds/FreeAgentics/web/components/dashboard/RealTimeDataSimulator.tsx";
  var hash = "746e9916a93731dce232efbc966834d5692d89d7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/matthewmoroney/builds/FreeAgentics/web/components/dashboard/RealTimeDataSimulator.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 31,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 33
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 32
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 36
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 31
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 24
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 31
        }
      },
      "10": {
        start: {
          line: 32,
          column: 20
        },
        end: {
          line: 32,
          column: 48
        }
      },
      "11": {
        start: {
          line: 33,
          column: 29
        },
        end: {
          line: 33,
          column: 72
        }
      },
      "12": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 51
        }
      },
      "13": {
        start: {
          line: 35,
          column: 39
        },
        end: {
          line: 35,
          column: 51
        }
      },
      "14": {
        start: {
          line: 36,
          column: 28
        },
        end: {
          line: 36,
          column: 41
        }
      },
      "15": {
        start: {
          line: 37,
          column: 27
        },
        end: {
          line: 37,
          column: 40
        }
      },
      "16": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 40,
          column: 20
        }
      },
      "17": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 66
        }
      },
      "18": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 45,
          column: 5
        }
      },
      "19": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 19
        }
      },
      "20": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "21": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 49,
          column: 10
        }
      },
      "22": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 51,
          column: 53
        }
      },
      "23": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "24": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 30
        }
      },
      "25": {
        start: {
          line: 55,
          column: 17
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "26": {
        start: {
          line: 58,
          column: 32
        },
        end: {
          line: 58,
          column: 88
        }
      },
      "27": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 68,
          column: 5
        }
      },
      "28": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "29": {
        start: {
          line: 61,
          column: 23
        },
        end: {
          line: 61,
          column: 95
        }
      },
      "30": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 66,
          column: 13
        }
      },
      "31": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 57
        }
      },
      "32": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 65,
          column: 39
        }
      },
      "33": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 69,
          column: 25
        }
      },
      "34": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 72,
          column: 5
        }
      },
      "35": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 31
        }
      },
      "36": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 73,
          column: 18
        }
      },
      "37": {
        start: {
          line: 75,
          column: 38
        },
        end: {
          line: 75,
          column: 72
        }
      },
      "38": {
        start: {
          line: 76,
          column: 24
        },
        end: {
          line: 82,
          column: 1
        }
      },
      "39": {
        start: {
          line: 77,
          column: 20
        },
        end: {
          line: 77,
          column: 62
        }
      },
      "40": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 80,
          column: 5
        }
      },
      "41": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 84
        }
      },
      "42": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 81,
          column: 19
        }
      },
      "43": {
        start: {
          line: 83,
          column: 29
        },
        end: {
          line: 376,
          column: 1
        }
      },
      "44": {
        start: {
          line: 84,
          column: 42
        },
        end: {
          line: 84,
          column: 69
        }
      },
      "45": {
        start: {
          line: 85,
          column: 54
        },
        end: {
          line: 85,
          column: 90
        }
      },
      "46": {
        start: {
          line: 86,
          column: 34
        },
        end: {
          line: 86,
          column: 57
        }
      },
      "47": {
        start: {
          line: 87,
          column: 40
        },
        end: {
          line: 87,
          column: 63
        }
      },
      "48": {
        start: {
          line: 88,
          column: 42
        },
        end: {
          line: 88,
          column: 66
        }
      },
      "49": {
        start: {
          line: 89,
          column: 50
        },
        end: {
          line: 89,
          column: 74
        }
      },
      "50": {
        start: {
          line: 90,
          column: 52
        },
        end: {
          line: 90,
          column: 76
        }
      },
      "51": {
        start: {
          line: 91,
          column: 36
        },
        end: {
          line: 91,
          column: 63
        }
      },
      "52": {
        start: {
          line: 92,
          column: 53
        },
        end: {
          line: 92,
          column: 79
        }
      },
      "53": {
        start: {
          line: 93,
          column: 24
        },
        end: {
          line: 93,
          column: 44
        }
      },
      "54": {
        start: {
          line: 94,
          column: 31
        },
        end: {
          line: 94,
          column: 51
        }
      },
      "55": {
        start: {
          line: 95,
          column: 29
        },
        end: {
          line: 95,
          column: 49
        }
      },
      "56": {
        start: {
          line: 96,
          column: 33
        },
        end: {
          line: 96,
          column: 53
        }
      },
      "57": {
        start: {
          line: 98,
          column: 36
        },
        end: {
          line: 108,
          column: 10
        }
      },
      "58": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 107,
          column: 9
        }
      },
      "59": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 46
        }
      },
      "60": {
        start: {
          line: 101,
          column: 15
        },
        end: {
          line: 107,
          column: 9
        }
      },
      "61": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 41
        }
      },
      "62": {
        start: {
          line: 103,
          column: 15
        },
        end: {
          line: 107,
          column: 9
        }
      },
      "63": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 41
        }
      },
      "64": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 49
        }
      },
      "65": {
        start: {
          line: 110,
          column: 32
        },
        end: {
          line: 123,
          column: 10
        }
      },
      "66": {
        start: {
          line: 111,
          column: 20
        },
        end: {
          line: 111,
          column: 30
        }
      },
      "67": {
        start: {
          line: 112,
          column: 28
        },
        end: {
          line: 112,
          column: 51
        }
      },
      "68": {
        start: {
          line: 113,
          column: 23
        },
        end: {
          line: 113,
          column: 49
        }
      },
      "69": {
        start: {
          line: 114,
          column: 31
        },
        end: {
          line: 114,
          column: 64
        }
      },
      "70": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 122,
          column: 10
        }
      },
      "71": {
        start: {
          line: 125,
          column: 34
        },
        end: {
          line: 185,
          column: 10
        }
      },
      "72": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 45
        }
      },
      "73": {
        start: {
          line: 126,
          column: 33
        },
        end: {
          line: 126,
          column: 45
        }
      },
      "74": {
        start: {
          line: 127,
          column: 23
        },
        end: {
          line: 132,
          column: 9
        }
      },
      "75": {
        start: {
          line: 133,
          column: 24
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "76": {
        start: {
          line: 139,
          column: 24
        },
        end: {
          line: 144,
          column: 9
        }
      },
      "77": {
        start: {
          line: 145,
          column: 28
        },
        end: {
          line: 145,
          column: 77
        }
      },
      "78": {
        start: {
          line: 146,
          column: 29
        },
        end: {
          line: 146,
          column: 35
        }
      },
      "79": {
        start: {
          line: 147,
          column: 23
        },
        end: {
          line: 147,
          column: 36
        }
      },
      "80": {
        start: {
          line: 148,
          column: 31
        },
        end: {
          line: 148,
          column: 32
        }
      },
      "81": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 155,
          column: 9
        }
      },
      "82": {
        start: {
          line: 149,
          column: 20
        },
        end: {
          line: 149,
          column: 21
        }
      },
      "83": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 43
        }
      },
      "84": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 154,
          column: 13
        }
      },
      "85": {
        start: {
          line: 152,
          column: 16
        },
        end: {
          line: 152,
          column: 44
        }
      },
      "86": {
        start: {
          line: 153,
          column: 16
        },
        end: {
          line: 153,
          column: 22
        }
      },
      "87": {
        start: {
          line: 156,
          column: 25
        },
        end: {
          line: 177,
          column: 9
        }
      },
      "88": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 184,
          column: 10
        }
      },
      "89": {
        start: {
          line: 187,
          column: 36
        },
        end: {
          line: 251,
          column: 10
        }
      },
      "90": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 46
        }
      },
      "91": {
        start: {
          line: 188,
          column: 34
        },
        end: {
          line: 188,
          column: 46
        }
      },
      "92": {
        start: {
          line: 189,
          column: 22
        },
        end: {
          line: 194,
          column: 9
        }
      },
      "93": {
        start: {
          line: 195,
          column: 21
        },
        end: {
          line: 195,
          column: 68
        }
      },
      "94": {
        start: {
          line: 196,
          column: 24
        },
        end: {
          line: 202,
          column: 9
        }
      },
      "95": {
        start: {
          line: 203,
          column: 24
        },
        end: {
          line: 208,
          column: 9
        }
      },
      "96": {
        start: {
          line: 209,
          column: 19
        },
        end: {
          line: 209,
          column: 21
        }
      },
      "97": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 243,
          column: 9
        }
      },
      "98": {
        start: {
          line: 213,
          column: 16
        },
        end: {
          line: 223,
          column: 18
        }
      },
      "99": {
        start: {
          line: 224,
          column: 16
        },
        end: {
          line: 224,
          column: 22
        }
      },
      "100": {
        start: {
          line: 226,
          column: 16
        },
        end: {
          line: 236,
          column: 18
        }
      },
      "101": {
        start: {
          line: 237,
          column: 16
        },
        end: {
          line: 237,
          column: 22
        }
      },
      "102": {
        start: {
          line: 239,
          column: 16
        },
        end: {
          line: 241,
          column: 18
        }
      },
      "103": {
        start: {
          line: 242,
          column: 16
        },
        end: {
          line: 242,
          column: 22
        }
      },
      "104": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 250,
          column: 10
        }
      },
      "105": {
        start: {
          line: 253,
          column: 28
        },
        end: {
          line: 307,
          column: 6
        }
      },
      "106": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 254,
          column: 40
        }
      },
      "107": {
        start: {
          line: 254,
          column: 33
        },
        end: {
          line: 254,
          column: 40
        }
      },
      "108": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 255,
          column: 29
        }
      },
      "109": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 256,
          column: 27
        }
      },
      "110": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 271,
          column: 27
        }
      },
      "111": {
        start: {
          line: 259,
          column: 12
        },
        end: {
          line: 259,
          column: 33
        }
      },
      "112": {
        start: {
          line: 259,
          column: 26
        },
        end: {
          line: 259,
          column: 33
        }
      },
      "113": {
        start: {
          line: 260,
          column: 31
        },
        end: {
          line: 260,
          column: 52
        }
      },
      "114": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 261,
          column: 50
        }
      },
      "115": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 262,
          column: 48
        }
      },
      "116": {
        start: {
          line: 263,
          column: 12
        },
        end: {
          line: 263,
          column: 63
        }
      },
      "117": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 270,
          column: 15
        }
      },
      "118": {
        start: {
          line: 265,
          column: 32
        },
        end: {
          line: 268,
          column: 17
        }
      },
      "119": {
        start: {
          line: 269,
          column: 16
        },
        end: {
          line: 269,
          column: 42
        }
      },
      "120": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 285,
          column: 17
        }
      },
      "121": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 274,
          column: 33
        }
      },
      "122": {
        start: {
          line: 274,
          column: 26
        },
        end: {
          line: 274,
          column: 33
        }
      },
      "123": {
        start: {
          line: 275,
          column: 29
        },
        end: {
          line: 275,
          column: 52
        }
      },
      "124": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 284,
          column: 13
        }
      },
      "125": {
        start: {
          line: 277,
          column: 16
        },
        end: {
          line: 283,
          column: 19
        }
      },
      "126": {
        start: {
          line: 278,
          column: 36
        },
        end: {
          line: 281,
          column: 21
        }
      },
      "127": {
        start: {
          line: 282,
          column: 20
        },
        end: {
          line: 282,
          column: 46
        }
      },
      "128": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 299,
          column: 17
        }
      },
      "129": {
        start: {
          line: 288,
          column: 12
        },
        end: {
          line: 288,
          column: 33
        }
      },
      "130": {
        start: {
          line: 288,
          column: 26
        },
        end: {
          line: 288,
          column: 33
        }
      },
      "131": {
        start: {
          line: 289,
          column: 27
        },
        end: {
          line: 289,
          column: 52
        }
      },
      "132": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 298,
          column: 13
        }
      },
      "133": {
        start: {
          line: 291,
          column: 16
        },
        end: {
          line: 297,
          column: 19
        }
      },
      "134": {
        start: {
          line: 292,
          column: 36
        },
        end: {
          line: 295,
          column: 21
        }
      },
      "135": {
        start: {
          line: 296,
          column: 20
        },
        end: {
          line: 296,
          column: 46
        }
      },
      "136": {
        start: {
          line: 309,
          column: 27
        },
        end: {
          line: 321,
          column: 10
        }
      },
      "137": {
        start: {
          line: 310,
          column: 8
        },
        end: {
          line: 310,
          column: 68
        }
      },
      "138": {
        start: {
          line: 310,
          column: 33
        },
        end: {
          line: 310,
          column: 68
        }
      },
      "139": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 311,
          column: 82
        }
      },
      "140": {
        start: {
          line: 311,
          column: 40
        },
        end: {
          line: 311,
          column: 82
        }
      },
      "141": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 312,
          column: 78
        }
      },
      "142": {
        start: {
          line: 312,
          column: 38
        },
        end: {
          line: 312,
          column: 78
        }
      },
      "143": {
        start: {
          line: 313,
          column: 8
        },
        end: {
          line: 313,
          column: 86
        }
      },
      "144": {
        start: {
          line: 313,
          column: 42
        },
        end: {
          line: 313,
          column: 86
        }
      },
      "145": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 314,
          column: 40
        }
      },
      "146": {
        start: {
          line: 315,
          column: 8
        },
        end: {
          line: 315,
          column: 47
        }
      },
      "147": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 316,
          column: 45
        }
      },
      "148": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 317,
          column: 49
        }
      },
      "149": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 318,
          column: 30
        }
      },
      "150": {
        start: {
          line: 319,
          column: 8
        },
        end: {
          line: 319,
          column: 45
        }
      },
      "151": {
        start: {
          line: 320,
          column: 8
        },
        end: {
          line: 320,
          column: 22
        }
      },
      "152": {
        start: {
          line: 323,
          column: 28
        },
        end: {
          line: 325,
          column: 10
        }
      },
      "153": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 324,
          column: 26
        }
      },
      "154": {
        start: {
          line: 327,
          column: 29
        },
        end: {
          line: 329,
          column: 10
        }
      },
      "155": {
        start: {
          line: 328,
          column: 8
        },
        end: {
          line: 328,
          column: 27
        }
      },
      "156": {
        start: {
          line: 331,
          column: 30
        },
        end: {
          line: 341,
          column: 6
        }
      },
      "157": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 332,
          column: 41
        }
      },
      "158": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 337,
          column: 9
        }
      },
      "159": {
        start: {
          line: 335,
          column: 12
        },
        end: {
          line: 335,
          column: 29
        }
      },
      "160": {
        start: {
          line: 336,
          column: 12
        },
        end: {
          line: 336,
          column: 45
        }
      },
      "161": {
        start: {
          line: 343,
          column: 4
        },
        end: {
          line: 349,
          column: 7
        }
      },
      "162": {
        start: {
          line: 344,
          column: 8
        },
        end: {
          line: 346,
          column: 10
        }
      },
      "163": {
        start: {
          line: 345,
          column: 12
        },
        end: {
          line: 345,
          column: 29
        }
      },
      "164": {
        start: {
          line: 351,
          column: 4
        },
        end: {
          line: 357,
          column: 7
        }
      },
      "165": {
        start: {
          line: 352,
          column: 8
        },
        end: {
          line: 352,
          column: 26
        }
      },
      "166": {
        start: {
          line: 353,
          column: 8
        },
        end: {
          line: 353,
          column: 30
        }
      },
      "167": {
        start: {
          line: 358,
          column: 18
        },
        end: {
          line: 371,
          column: 5
        }
      },
      "168": {
        start: {
          line: 372,
          column: 4
        },
        end: {
          line: 375,
          column: 7
        }
      },
      "169": {
        start: {
          line: 377,
          column: 25
        },
        end: {
          line: 430,
          column: 1
        }
      },
      "170": {
        start: {
          line: 378,
          column: 68
        },
        end: {
          line: 378,
          column: 85
        }
      },
      "171": {
        start: {
          line: 379,
          column: 27
        },
        end: {
          line: 392,
          column: 5
        }
      },
      "172": {
        start: {
          line: 380,
          column: 8
        },
        end: {
          line: 391,
          column: 9
        }
      },
      "173": {
        start: {
          line: 382,
          column: 16
        },
        end: {
          line: 382,
          column: 40
        }
      },
      "174": {
        start: {
          line: 384,
          column: 16
        },
        end: {
          line: 384,
          column: 40
        }
      },
      "175": {
        start: {
          line: 386,
          column: 16
        },
        end: {
          line: 386,
          column: 38
        }
      },
      "176": {
        start: {
          line: 388,
          column: 16
        },
        end: {
          line: 388,
          column: 43
        }
      },
      "177": {
        start: {
          line: 390,
          column: 16
        },
        end: {
          line: 390,
          column: 43
        }
      },
      "178": {
        start: {
          line: 393,
          column: 26
        },
        end: {
          line: 396,
          column: 5
        }
      },
      "179": {
        start: {
          line: 394,
          column: 8
        },
        end: {
          line: 394,
          column: 48
        }
      },
      "180": {
        start: {
          line: 394,
          column: 26
        },
        end: {
          line: 394,
          column: 48
        }
      },
      "181": {
        start: {
          line: 395,
          column: 8
        },
        end: {
          line: 395,
          column: 47
        }
      },
      "182": {
        start: {
          line: 397,
          column: 4
        },
        end: {
          line: 429,
          column: 7
        }
      },
      "183": {
        start: {
          line: 431,
          column: 24
        },
        end: {
          line: 509,
          column: 1
        }
      },
      "184": {
        start: {
          line: 432,
          column: 41
        },
        end: {
          line: 432,
          column: 58
        }
      },
      "185": {
        start: {
          line: 433,
          column: 26
        },
        end: {
          line: 433,
          column: 61
        }
      },
      "186": {
        start: {
          line: 434,
          column: 4
        },
        end: {
          line: 442,
          column: 5
        }
      },
      "187": {
        start: {
          line: 435,
          column: 8
        },
        end: {
          line: 441,
          column: 11
        }
      },
      "188": {
        start: {
          line: 443,
          column: 4
        },
        end: {
          line: 508,
          column: 7
        }
      },
      "189": {
        start: {
          line: 510,
          column: 26
        },
        end: {
          line: 555,
          column: 1
        }
      },
      "190": {
        start: {
          line: 511,
          column: 45
        },
        end: {
          line: 511,
          column: 62
        }
      },
      "191": {
        start: {
          line: 512,
          column: 4
        },
        end: {
          line: 520,
          column: 5
        }
      },
      "192": {
        start: {
          line: 513,
          column: 8
        },
        end: {
          line: 519,
          column: 11
        }
      },
      "193": {
        start: {
          line: 521,
          column: 4
        },
        end: {
          line: 554,
          column: 7
        }
      },
      "194": {
        start: {
          line: 524,
          column: 85
        },
        end: {
          line: 548,
          column: 72
        }
      },
      "195": {
        start: {
          line: 556,
          column: 17
        },
        end: {
          line: 562,
          column: 1
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 23
          },
          end: {
            line: 13,
            column: 24
          }
        },
        loc: {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 22
          },
          end: {
            line: 16,
            column: 23
          }
        },
        loc: {
          start: {
            line: 16,
            column: 33
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 26
          },
          end: {
            line: 19,
            column: 27
          }
        },
        loc: {
          start: {
            line: 19,
            column: 37
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 21
          },
          end: {
            line: 22,
            column: 22
          }
        },
        loc: {
          start: {
            line: 22,
            column: 32
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 13
          },
          end: {
            line: 25,
            column: 14
          }
        },
        loc: {
          start: {
            line: 25,
            column: 24
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 28,
            column: 21
          },
          end: {
            line: 28,
            column: 22
          }
        },
        loc: {
          start: {
            line: 28,
            column: 32
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "7": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 34,
            column: 9
          },
          end: {
            line: 34,
            column: 33
          }
        },
        loc: {
          start: {
            line: 34,
            column: 47
          },
          end: {
            line: 41,
            column: 1
          }
        },
        line: 34
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 38,
            column: 39
          },
          end: {
            line: 38,
            column: 40
          }
        },
        loc: {
          start: {
            line: 38,
            column: 61
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 38
      },
      "9": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 42,
            column: 9
          },
          end: {
            line: 42,
            column: 34
          }
        },
        loc: {
          start: {
            line: 42,
            column: 53
          },
          end: {
            line: 74,
            column: 1
          }
        },
        line: 42
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 76,
            column: 24
          },
          end: {
            line: 76,
            column: 25
          }
        },
        loc: {
          start: {
            line: 76,
            column: 28
          },
          end: {
            line: 82,
            column: 1
          }
        },
        line: 76
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 83,
            column: 29
          },
          end: {
            line: 83,
            column: 30
          }
        },
        loc: {
          start: {
            line: 83,
            column: 45
          },
          end: {
            line: 376,
            column: 1
          }
        },
        line: 83
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 98,
            column: 60
          },
          end: {
            line: 98,
            column: 61
          }
        },
        loc: {
          start: {
            line: 98,
            column: 78
          },
          end: {
            line: 108,
            column: 5
          }
        },
        line: 98
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 110,
            column: 56
          },
          end: {
            line: 110,
            column: 57
          }
        },
        loc: {
          start: {
            line: 110,
            column: 60
          },
          end: {
            line: 123,
            column: 5
          }
        },
        line: 110
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 125,
            column: 58
          },
          end: {
            line: 125,
            column: 59
          }
        },
        loc: {
          start: {
            line: 125,
            column: 62
          },
          end: {
            line: 185,
            column: 5
          }
        },
        line: 125
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 187,
            column: 60
          },
          end: {
            line: 187,
            column: 61
          }
        },
        loc: {
          start: {
            line: 187,
            column: 64
          },
          end: {
            line: 251,
            column: 5
          }
        },
        line: 187
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 253,
            column: 52
          },
          end: {
            line: 253,
            column: 53
          }
        },
        loc: {
          start: {
            line: 253,
            column: 56
          },
          end: {
            line: 300,
            column: 5
          }
        },
        line: 253
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 258,
            column: 56
          },
          end: {
            line: 258,
            column: 57
          }
        },
        loc: {
          start: {
            line: 258,
            column: 60
          },
          end: {
            line: 271,
            column: 9
          }
        },
        line: 258
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 264,
            column: 27
          },
          end: {
            line: 264,
            column: 28
          }
        },
        loc: {
          start: {
            line: 264,
            column: 35
          },
          end: {
            line: 270,
            column: 13
          }
        },
        line: 264
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 273,
            column: 54
          },
          end: {
            line: 273,
            column: 55
          }
        },
        loc: {
          start: {
            line: 273,
            column: 58
          },
          end: {
            line: 285,
            column: 9
          }
        },
        line: 273
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 277,
            column: 35
          },
          end: {
            line: 277,
            column: 36
          }
        },
        loc: {
          start: {
            line: 277,
            column: 43
          },
          end: {
            line: 283,
            column: 17
          }
        },
        line: 277
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 287,
            column: 58
          },
          end: {
            line: 287,
            column: 59
          }
        },
        loc: {
          start: {
            line: 287,
            column: 62
          },
          end: {
            line: 299,
            column: 9
          }
        },
        line: 287
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 291,
            column: 36
          },
          end: {
            line: 291,
            column: 37
          }
        },
        loc: {
          start: {
            line: 291,
            column: 44
          },
          end: {
            line: 297,
            column: 17
          }
        },
        line: 291
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 309,
            column: 51
          },
          end: {
            line: 309,
            column: 52
          }
        },
        loc: {
          start: {
            line: 309,
            column: 55
          },
          end: {
            line: 321,
            column: 5
          }
        },
        line: 309
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 323,
            column: 52
          },
          end: {
            line: 323,
            column: 53
          }
        },
        loc: {
          start: {
            line: 323,
            column: 56
          },
          end: {
            line: 325,
            column: 5
          }
        },
        line: 323
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 327,
            column: 53
          },
          end: {
            line: 327,
            column: 54
          }
        },
        loc: {
          start: {
            line: 327,
            column: 57
          },
          end: {
            line: 329,
            column: 5
          }
        },
        line: 327
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 331,
            column: 54
          },
          end: {
            line: 331,
            column: 55
          }
        },
        loc: {
          start: {
            line: 331,
            column: 66
          },
          end: {
            line: 338,
            column: 5
          }
        },
        line: 331
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 343,
            column: 26
          },
          end: {
            line: 343,
            column: 27
          }
        },
        loc: {
          start: {
            line: 343,
            column: 30
          },
          end: {
            line: 347,
            column: 5
          }
        },
        line: 343
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 344,
            column: 15
          },
          end: {
            line: 344,
            column: 16
          }
        },
        loc: {
          start: {
            line: 344,
            column: 19
          },
          end: {
            line: 346,
            column: 9
          }
        },
        line: 344
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 351,
            column: 26
          },
          end: {
            line: 351,
            column: 27
          }
        },
        loc: {
          start: {
            line: 351,
            column: 30
          },
          end: {
            line: 354,
            column: 5
          }
        },
        line: 351
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 377,
            column: 25
          },
          end: {
            line: 377,
            column: 26
          }
        },
        loc: {
          start: {
            line: 377,
            column: 29
          },
          end: {
            line: 430,
            column: 1
          }
        },
        line: 377
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 379,
            column: 27
          },
          end: {
            line: 379,
            column: 28
          }
        },
        loc: {
          start: {
            line: 379,
            column: 31
          },
          end: {
            line: 392,
            column: 5
          }
        },
        line: 379
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 393,
            column: 26
          },
          end: {
            line: 393,
            column: 27
          }
        },
        loc: {
          start: {
            line: 393,
            column: 30
          },
          end: {
            line: 396,
            column: 5
          }
        },
        line: 393
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 431,
            column: 24
          },
          end: {
            line: 431,
            column: 25
          }
        },
        loc: {
          start: {
            line: 431,
            column: 28
          },
          end: {
            line: 509,
            column: 1
          }
        },
        line: 431
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 510,
            column: 26
          },
          end: {
            line: 510,
            column: 27
          }
        },
        loc: {
          start: {
            line: 510,
            column: 30
          },
          end: {
            line: 555,
            column: 1
          }
        },
        line: 510
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 524,
            column: 52
          },
          end: {
            line: 524,
            column: 53
          }
        },
        loc: {
          start: {
            line: 524,
            column: 85
          },
          end: {
            line: 548,
            column: 72
          }
        },
        line: 524
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "1": {
        loc: {
          start: {
            line: 39,
            column: 15
          },
          end: {
            line: 39,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 39,
            column: 29
          },
          end: {
            line: 39,
            column: 45
          }
        }, {
          start: {
            line: 39,
            column: 48
          },
          end: {
            line: 39,
            column: 65
          }
        }],
        line: 39
      },
      "2": {
        loc: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "3": {
        loc: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 43,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 43,
            column: 20
          }
        }, {
          start: {
            line: 43,
            column: 24
          },
          end: {
            line: 43,
            column: 27
          }
        }, {
          start: {
            line: 43,
            column: 31
          },
          end: {
            line: 43,
            column: 45
          }
        }],
        line: 43
      },
      "4": {
        loc: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "5": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 46,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 46,
            column: 20
          }
        }, {
          start: {
            line: 46,
            column: 24
          },
          end: {
            line: 46,
            column: 47
          }
        }, {
          start: {
            line: 46,
            column: 51
          },
          end: {
            line: 46,
            column: 76
          }
        }],
        line: 46
      },
      "6": {
        loc: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "7": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 52,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 52,
            column: 13
          }
        }, {
          start: {
            line: 52,
            column: 17
          },
          end: {
            line: 52,
            column: 31
          }
        }],
        line: 52
      },
      "8": {
        loc: {
          start: {
            line: 58,
            column: 32
          },
          end: {
            line: 58,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 32
          },
          end: {
            line: 58,
            column: 53
          }
        }, {
          start: {
            line: 58,
            column: 57
          },
          end: {
            line: 58,
            column: 88
          }
        }],
        line: 58
      },
      "9": {
        loc: {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "10": {
        loc: {
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 60,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 60,
            column: 29
          }
        }, {
          start: {
            line: 60,
            column: 33
          },
          end: {
            line: 60,
            column: 79
          }
        }],
        line: 60
      },
      "11": {
        loc: {
          start: {
            line: 61,
            column: 23
          },
          end: {
            line: 61,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 61,
            column: 47
          },
          end: {
            line: 61,
            column: 88
          }
        }, {
          start: {
            line: 61,
            column: 91
          },
          end: {
            line: 61,
            column: 95
          }
        }],
        line: 61
      },
      "12": {
        loc: {
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        }, {
          start: {
            line: 64,
            column: 19
          },
          end: {
            line: 66,
            column: 13
          }
        }],
        line: 62
      },
      "13": {
        loc: {
          start: {
            line: 62,
            column: 16
          },
          end: {
            line: 62,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 16
          },
          end: {
            line: 62,
            column: 20
          }
        }, {
          start: {
            line: 62,
            column: 25
          },
          end: {
            line: 62,
            column: 33
          }
        }, {
          start: {
            line: 62,
            column: 37
          },
          end: {
            line: 62,
            column: 45
          }
        }],
        line: 62
      },
      "14": {
        loc: {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "15": {
        loc: {
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "16": {
        loc: {
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 107,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 107,
            column: 9
          }
        }, {
          start: {
            line: 101,
            column: 15
          },
          end: {
            line: 107,
            column: 9
          }
        }],
        line: 99
      },
      "17": {
        loc: {
          start: {
            line: 101,
            column: 15
          },
          end: {
            line: 107,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 15
          },
          end: {
            line: 107,
            column: 9
          }
        }, {
          start: {
            line: 103,
            column: 15
          },
          end: {
            line: 107,
            column: 9
          }
        }],
        line: 101
      },
      "18": {
        loc: {
          start: {
            line: 103,
            column: 15
          },
          end: {
            line: 107,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 15
          },
          end: {
            line: 107,
            column: 9
          }
        }, {
          start: {
            line: 105,
            column: 15
          },
          end: {
            line: 107,
            column: 9
          }
        }],
        line: 103
      },
      "19": {
        loc: {
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 126,
            column: 45
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 126,
            column: 45
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "20": {
        loc: {
          start: {
            line: 151,
            column: 12
          },
          end: {
            line: 154,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 12
          },
          end: {
            line: 154,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      },
      "21": {
        loc: {
          start: {
            line: 182,
            column: 22
          },
          end: {
            line: 182,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 182,
            column: 54
          },
          end: {
            line: 182,
            column: 81
          }
        }, {
          start: {
            line: 182,
            column: 84
          },
          end: {
            line: 182,
            column: 93
          }
        }],
        line: 182
      },
      "22": {
        loc: {
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 188,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 188,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      },
      "23": {
        loc: {
          start: {
            line: 210,
            column: 8
          },
          end: {
            line: 243,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 211,
            column: 12
          },
          end: {
            line: 211,
            column: 30
          }
        }, {
          start: {
            line: 212,
            column: 12
          },
          end: {
            line: 224,
            column: 22
          }
        }, {
          start: {
            line: 225,
            column: 12
          },
          end: {
            line: 237,
            column: 22
          }
        }, {
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 242,
            column: 22
          }
        }],
        line: 210
      },
      "24": {
        loc: {
          start: {
            line: 246,
            column: 20
          },
          end: {
            line: 246,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 246,
            column: 44
          },
          end: {
            line: 246,
            column: 51
          }
        }, {
          start: {
            line: 246,
            column: 54
          },
          end: {
            line: 246,
            column: 63
          }
        }],
        line: 246
      },
      "25": {
        loc: {
          start: {
            line: 247,
            column: 20
          },
          end: {
            line: 247,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 247,
            column: 44
          },
          end: {
            line: 247,
            column: 51
          }
        }, {
          start: {
            line: 247,
            column: 54
          },
          end: {
            line: 247,
            column: 63
          }
        }],
        line: 247
      },
      "26": {
        loc: {
          start: {
            line: 254,
            column: 8
          },
          end: {
            line: 254,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 254,
            column: 8
          },
          end: {
            line: 254,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 254
      },
      "27": {
        loc: {
          start: {
            line: 259,
            column: 12
          },
          end: {
            line: 259,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 259,
            column: 12
          },
          end: {
            line: 259,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 259
      },
      "28": {
        loc: {
          start: {
            line: 274,
            column: 12
          },
          end: {
            line: 274,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 274,
            column: 12
          },
          end: {
            line: 274,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 274
      },
      "29": {
        loc: {
          start: {
            line: 276,
            column: 12
          },
          end: {
            line: 284,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 276,
            column: 12
          },
          end: {
            line: 284,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 276
      },
      "30": {
        loc: {
          start: {
            line: 288,
            column: 12
          },
          end: {
            line: 288,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 288,
            column: 12
          },
          end: {
            line: 288,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 288
      },
      "31": {
        loc: {
          start: {
            line: 290,
            column: 12
          },
          end: {
            line: 298,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 290,
            column: 12
          },
          end: {
            line: 298,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 290
      },
      "32": {
        loc: {
          start: {
            line: 310,
            column: 8
          },
          end: {
            line: 310,
            column: 68
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 310,
            column: 8
          },
          end: {
            line: 310,
            column: 68
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 310
      },
      "33": {
        loc: {
          start: {
            line: 311,
            column: 8
          },
          end: {
            line: 311,
            column: 82
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 311,
            column: 8
          },
          end: {
            line: 311,
            column: 82
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 311
      },
      "34": {
        loc: {
          start: {
            line: 312,
            column: 8
          },
          end: {
            line: 312,
            column: 78
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 312,
            column: 8
          },
          end: {
            line: 312,
            column: 78
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 312
      },
      "35": {
        loc: {
          start: {
            line: 313,
            column: 8
          },
          end: {
            line: 313,
            column: 86
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 313,
            column: 8
          },
          end: {
            line: 313,
            column: 86
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 313
      },
      "36": {
        loc: {
          start: {
            line: 334,
            column: 8
          },
          end: {
            line: 337,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 334,
            column: 8
          },
          end: {
            line: 337,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 334
      },
      "37": {
        loc: {
          start: {
            line: 380,
            column: 8
          },
          end: {
            line: 391,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 381,
            column: 12
          },
          end: {
            line: 382,
            column: 40
          }
        }, {
          start: {
            line: 383,
            column: 12
          },
          end: {
            line: 384,
            column: 40
          }
        }, {
          start: {
            line: 385,
            column: 12
          },
          end: {
            line: 386,
            column: 38
          }
        }, {
          start: {
            line: 387,
            column: 12
          },
          end: {
            line: 388,
            column: 43
          }
        }, {
          start: {
            line: 389,
            column: 12
          },
          end: {
            line: 390,
            column: 43
          }
        }],
        line: 380
      },
      "38": {
        loc: {
          start: {
            line: 394,
            column: 8
          },
          end: {
            line: 394,
            column: 48
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 394,
            column: 8
          },
          end: {
            line: 394,
            column: 48
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 394
      },
      "39": {
        loc: {
          start: {
            line: 404,
            column: 31
          },
          end: {
            line: 404,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 404,
            column: 45
          },
          end: {
            line: 404,
            column: 74
          }
        }, {
          start: {
            line: 404,
            column: 77
          },
          end: {
            line: 404,
            column: 83
          }
        }],
        line: 404
      },
      "40": {
        loc: {
          start: {
            line: 413,
            column: 12
          },
          end: {
            line: 427,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 413,
            column: 12
          },
          end: {
            line: 413,
            column: 23
          }
        }, {
          start: {
            line: 413,
            column: 41
          },
          end: {
            line: 427,
            column: 14
          }
        }],
        line: 413
      },
      "41": {
        loc: {
          start: {
            line: 434,
            column: 4
          },
          end: {
            line: 442,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 434,
            column: 4
          },
          end: {
            line: 442,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 434
      },
      "42": {
        loc: {
          start: {
            line: 434,
            column: 8
          },
          end: {
            line: 434,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 434,
            column: 8
          },
          end: {
            line: 434,
            column: 20
          }
        }, {
          start: {
            line: 434,
            column: 24
          },
          end: {
            line: 434,
            column: 38
          }
        }],
        line: 434
      },
      "43": {
        loc: {
          start: {
            line: 512,
            column: 4
          },
          end: {
            line: 520,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 512,
            column: 4
          },
          end: {
            line: 520,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 512
      },
      "44": {
        loc: {
          start: {
            line: 549,
            column: 12
          },
          end: {
            line: 552,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 549,
            column: 12
          },
          end: {
            line: 549,
            column: 40
          }
        }, {
          start: {
            line: 549,
            column: 58
          },
          end: {
            line: 552,
            column: 14
          }
        }],
        line: 549
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0, 0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0, 0, 0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/matthewmoroney/builds/FreeAgentics/web/components/dashboard/RealTimeDataSimulator.tsx"],
      sourcesContent: ["\"use client\";\n\nimport React, { useEffect, useState, useCallback, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"@/store\";\n\n// =============================================================================\n// REAL-TIME DATA TYPES\n// =============================================================================\n\ninterface MetricsData {\n  timestamp: number;\n  cpuUsage: number;\n  memoryUsage: number;\n  networkLatency: number;\n  activeConnections: number;\n  systemLoad: number;\n}\n\ninterface AgentActivity {\n  agentId: string;\n  action: \"thinking\" | \"responding\" | \"idle\" | \"error\";\n  timestamp: number;\n  duration?: number;\n  message?: string;\n}\n\ninterface KnowledgeGraphUpdate {\n  type: \"node_added\" | \"node_updated\" | \"edge_added\" | \"edge_removed\";\n  nodeId?: string;\n  edgeId?: string;\n  data: any;\n  timestamp: number;\n}\n\n// =============================================================================\n// REAL-TIME DATA CONTEXT\n// =============================================================================\n\ninterface RealTimeContextType {\n  isConnected: boolean;\n  connectionQuality: \"excellent\" | \"good\" | \"poor\" | \"disconnected\";\n  latency: number;\n  lastUpdate: number;\n  metricsData: MetricsData[];\n  agentActivities: AgentActivity[];\n  knowledgeUpdates: KnowledgeGraphUpdate[];\n  startSimulation: () => void;\n  stopSimulation: () => void;\n  pauseSimulation: () => void;\n  resumeSimulation: () => void;\n  setUpdateInterval: (interval: number) => void;\n}\n\nconst RealTimeContext = React.createContext<RealTimeContextType | null>(null);\n\nexport const useRealTimeData = () => {\n  const context = React.useContext(RealTimeContext);\n  if (!context) {\n    throw new Error(\"useRealTimeData must be used within RealTimeDataProvider\");\n  }\n  return context;\n};\n\n// =============================================================================\n// REAL-TIME DATA PROVIDER\n// =============================================================================\n\nexport const RealTimeDataProvider: React.FC<{ children: React.ReactNode }> = ({\n  children,\n}) => {\n  const [isConnected, setIsConnected] = useState(false);\n  const [connectionQuality, setConnectionQuality] = useState<\n    \"excellent\" | \"good\" | \"poor\" | \"disconnected\"\n  >(\"disconnected\");\n  const [latency, setLatency] = useState(0);\n  const [lastUpdate, setLastUpdate] = useState(0);\n  const [metricsData, setMetricsData] = useState<MetricsData[]>([]);\n  const [agentActivities, setAgentActivities] = useState<AgentActivity[]>([]);\n  const [knowledgeUpdates, setKnowledgeUpdates] = useState<\n    KnowledgeGraphUpdate[]\n  >([]);\n  const [isPaused, setIsPaused] = useState(false);\n  const [updateInterval, setUpdateIntervalState] = useState(1000); // 1 second\n\n  const intervalRef = useRef<number>();\n  const metricsIntervalRef = useRef<number>();\n  const agentIntervalRef = useRef<number>();\n  const knowledgeIntervalRef = useRef<number>();\n\n  // Simulate connection quality based on latency\n  const updateConnectionQuality = useCallback((currentLatency: number) => {\n    if (currentLatency < 50) {\n      setConnectionQuality(\"excellent\");\n    } else if (currentLatency < 150) {\n      setConnectionQuality(\"good\");\n    } else if (currentLatency < 500) {\n      setConnectionQuality(\"poor\");\n    } else {\n      setConnectionQuality(\"disconnected\");\n    }\n  }, []);\n\n  // Generate realistic metrics data\n  const generateMetricsData = useCallback((): MetricsData => {\n    const now = Date.now();\n    const baseLatency = 12 + Math.random() * 20; // 12-32ms base\n    const jitter = (Math.random() - 0.5) * 10; // \xB15ms jitter\n    const currentLatency = Math.max(1, baseLatency + jitter);\n\n    return {\n      timestamp: now,\n      cpuUsage: Math.max(\n        0,\n        Math.min(100, 20 + Math.sin(now / 10000) * 15 + Math.random() * 10),\n      ),\n      memoryUsage: Math.max(\n        0,\n        Math.min(100, 45 + Math.sin(now / 15000) * 20 + Math.random() * 5),\n      ),\n      networkLatency: currentLatency,\n      activeConnections: Math.floor(\n        150 + Math.sin(now / 20000) * 50 + Math.random() * 20,\n      ),\n      systemLoad: Math.max(\n        0,\n        Math.min(5, 1.2 + Math.sin(now / 12000) * 0.8 + Math.random() * 0.3),\n      ),\n    };\n  }, []);\n\n  // Generate agent activity\n  const generateAgentActivity = useCallback((): AgentActivity | null => {\n    if (Math.random() > 0.3) return null; // 30% chance of activity\n\n    const agents = [\"agent-1\", \"agent-2\", \"agent-3\", \"agent-4\"];\n    const actions: AgentActivity[\"action\"][] = [\n      \"thinking\",\n      \"responding\",\n      \"idle\",\n      \"error\",\n    ];\n    const weights = [0.4, 0.3, 0.25, 0.05]; // Weighted probabilities\n\n    const randomAgent = agents[Math.floor(Math.random() * agents.length)];\n\n    let selectedAction: AgentActivity[\"action\"] = \"idle\";\n    const random = Math.random();\n    let cumulativeWeight = 0;\n\n    for (let i = 0; i < actions.length; i++) {\n      cumulativeWeight += weights[i];\n      if (random <= cumulativeWeight) {\n        selectedAction = actions[i];\n        break;\n      }\n    }\n\n    const messages = {\n      thinking: [\n        \"Analyzing data patterns...\",\n        \"Processing user query...\",\n        \"Evaluating options...\",\n      ],\n      responding: [\n        \"Generating response...\",\n        \"Formatting output...\",\n        \"Sending message...\",\n      ],\n      idle: [\"Waiting for input...\", \"Monitoring system...\", \"Standing by...\"],\n      error: [\n        \"Connection timeout\",\n        \"Processing error\",\n        \"Invalid input detected\",\n      ],\n    };\n\n    return {\n      agentId: randomAgent,\n      action: selectedAction,\n      timestamp: Date.now(),\n      duration:\n        selectedAction === \"thinking\" ? 2000 + Math.random() * 3000 : undefined,\n      message:\n        messages[selectedAction][\n          Math.floor(Math.random() * messages[selectedAction].length)\n        ],\n    };\n  }, []);\n\n  // Generate knowledge graph updates\n  const generateKnowledgeUpdate =\n    useCallback((): KnowledgeGraphUpdate | null => {\n      if (Math.random() > 0.15) return null; // 15% chance of update\n\n      const types: KnowledgeGraphUpdate[\"type\"][] = [\n        \"node_added\",\n        \"node_updated\",\n        \"edge_added\",\n        \"edge_removed\",\n      ];\n      const type = types[Math.floor(Math.random() * types.length)];\n\n      const nodeIds = [\n        \"belief-1\",\n        \"fact-2\",\n        \"hypothesis-3\",\n        \"concept-4\",\n        \"relation-5\",\n      ];\n      const edgeIds = [\"edge-1\", \"edge-2\", \"edge-3\", \"edge-4\"];\n\n      let data: any = {};\n\n      switch (type) {\n        case \"node_added\":\n        case \"node_updated\":\n          data = {\n            id: `node-${Date.now()}`,\n            label: `New Concept ${Math.floor(Math.random() * 1000)}`,\n            type: [\"belief\", \"fact\", \"hypothesis\"][\n              Math.floor(Math.random() * 3)\n            ],\n            confidence: Math.random(),\n            agent: `agent-${Math.floor(Math.random() * 4) + 1}`,\n          };\n          break;\n        case \"edge_added\":\n          data = {\n            id: `edge-${Date.now()}`,\n            source: nodeIds[Math.floor(Math.random() * nodeIds.length)],\n            target: nodeIds[Math.floor(Math.random() * nodeIds.length)],\n            type: [\"supports\", \"contradicts\", \"related\"][\n              Math.floor(Math.random() * 3)\n            ],\n            strength: Math.random(),\n          };\n          break;\n        case \"edge_removed\":\n          data = {\n            id: edgeIds[Math.floor(Math.random() * edgeIds.length)],\n          };\n          break;\n      }\n\n      return {\n        type,\n        nodeId: type.includes(\"node\") ? data.id : undefined,\n        edgeId: type.includes(\"edge\") ? data.id : undefined,\n        data,\n        timestamp: Date.now(),\n      };\n    }, []);\n\n  // Start simulation\n  const startSimulation = useCallback(() => {\n    if (intervalRef.current) return; // Already running\n\n    setIsConnected(true);\n    setIsPaused(false);\n\n    // Metrics update loop\n    metricsIntervalRef.current = window.setInterval(() => {\n      if (isPaused) return;\n\n      const newMetrics = generateMetricsData();\n      setLatency(newMetrics.networkLatency);\n      setLastUpdate(newMetrics.timestamp);\n      updateConnectionQuality(newMetrics.networkLatency);\n\n      setMetricsData((prev) => {\n        const updated = [...prev, newMetrics];\n        return updated.slice(-50); // Keep last 50 data points\n      });\n    }, updateInterval);\n\n    // Agent activity loop\n    agentIntervalRef.current = window.setInterval(() => {\n      if (isPaused) return;\n\n      const activity = generateAgentActivity();\n      if (activity) {\n        setAgentActivities((prev) => {\n          const updated = [...prev, activity];\n          return updated.slice(-20); // Keep last 20 activities\n        });\n      }\n    }, 2000);\n\n    // Knowledge graph update loop\n    knowledgeIntervalRef.current = window.setInterval(() => {\n      if (isPaused) return;\n\n      const update = generateKnowledgeUpdate();\n      if (update) {\n        setKnowledgeUpdates((prev) => {\n          const updated = [...prev, update];\n          return updated.slice(-10); // Keep last 10 updates\n        });\n      }\n    }, 5000);\n  }, [\n    generateMetricsData,\n    generateAgentActivity,\n    generateKnowledgeUpdate,\n    updateConnectionQuality,\n    updateInterval,\n    isPaused,\n  ]);\n\n  // Stop simulation\n  const stopSimulation = useCallback(() => {\n    if (intervalRef.current) clearInterval(intervalRef.current);\n    if (metricsIntervalRef.current) clearInterval(metricsIntervalRef.current);\n    if (agentIntervalRef.current) clearInterval(agentIntervalRef.current);\n    if (knowledgeIntervalRef.current)\n      clearInterval(knowledgeIntervalRef.current);\n\n    intervalRef.current = undefined;\n    metricsIntervalRef.current = undefined;\n    agentIntervalRef.current = undefined;\n    knowledgeIntervalRef.current = undefined;\n\n    setIsConnected(false);\n    setConnectionQuality(\"disconnected\");\n    setLatency(0);\n  }, []);\n\n  // Pause simulation\n  const pauseSimulation = useCallback(() => {\n    setIsPaused(true);\n  }, []);\n\n  // Resume simulation\n  const resumeSimulation = useCallback(() => {\n    setIsPaused(false);\n  }, []);\n\n  // Set update interval\n  const setUpdateInterval = useCallback(\n    (interval: number) => {\n      setUpdateIntervalState(interval);\n\n      // Restart with new interval if currently running\n      if (intervalRef.current) {\n        stopSimulation();\n        setTimeout(startSimulation, 100);\n      }\n    },\n    [startSimulation, stopSimulation],\n  );\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      stopSimulation();\n    };\n  }, [stopSimulation]);\n\n  // Auto-start simulation\n  useEffect(() => {\n    startSimulation();\n    return stopSimulation;\n  }, [startSimulation, stopSimulation]);\n\n  const value: RealTimeContextType = {\n    isConnected,\n    connectionQuality,\n    latency,\n    lastUpdate,\n    metricsData,\n    agentActivities,\n    knowledgeUpdates,\n    startSimulation,\n    stopSimulation,\n    pauseSimulation,\n    resumeSimulation,\n    setUpdateInterval,\n  };\n\n  return (\n    <RealTimeContext.Provider value={value}>\n      {children}\n    </RealTimeContext.Provider>\n  );\n};\n\n// =============================================================================\n// CONNECTION STATUS COMPONENT\n// =============================================================================\n\nexport const ConnectionStatus: React.FC = () => {\n  const { isConnected, connectionQuality, latency, lastUpdate } =\n    useRealTimeData();\n\n  const getStatusColor = () => {\n    switch (connectionQuality) {\n      case \"excellent\":\n        return \"var(--success)\";\n      case \"good\":\n        return \"var(--warning)\";\n      case \"poor\":\n        return \"var(--error)\";\n      case \"disconnected\":\n        return \"var(--text-muted)\";\n      default:\n        return \"var(--text-muted)\";\n    }\n  };\n\n  const getStatusText = () => {\n    if (!isConnected) return \"DISCONNECTED\";\n    return connectionQuality.toUpperCase();\n  };\n\n  return (\n    <div className=\"connection-status flex items-center gap-2 text-sm font-mono\">\n      <div\n        className=\"status-dot\"\n        style={{\n          background: getStatusColor(),\n          boxShadow: isConnected ? `0 0 8px ${getStatusColor()}` : \"none\",\n        }}\n      />\n      <span style={{ color: getStatusColor() }}>{getStatusText()}</span>\n      {isConnected && (\n        <>\n          <span className=\"text-[var(--text-tertiary)]\">\u2022</span>\n          <span className=\"text-[var(--text-secondary)]\">\n            {Math.round(latency)}ms\n          </span>\n        </>\n      )}\n    </div>\n  );\n};\n\n// =============================================================================\n// REAL-TIME METRICS DISPLAY\n// =============================================================================\n\nexport const RealTimeMetrics: React.FC = () => {\n  const { metricsData, isConnected } = useRealTimeData();\n  const latestMetrics = metricsData[metricsData.length - 1];\n\n  if (!isConnected || !latestMetrics) {\n    return (\n      <div className=\"real-time-metrics opacity-50\">\n        <div className=\"text-sm text-[var(--text-secondary)]\">\n          No real-time data\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"real-time-metrics grid grid-cols-2 md:grid-cols-4 gap-4 text-sm font-mono\">\n      <div className=\"metric\">\n        <div className=\"text-[var(--text-tertiary)]\">CPU</div>\n        <div className=\"text-[var(--text-primary)]\">\n          {latestMetrics.cpuUsage.toFixed(1)}%\n        </div>\n      </div>\n      <div className=\"metric\">\n        <div className=\"text-[var(--text-tertiary)]\">MEM</div>\n        <div className=\"text-[var(--text-primary)]\">\n          {latestMetrics.memoryUsage.toFixed(1)}%\n        </div>\n      </div>\n      <div className=\"metric\">\n        <div className=\"text-[var(--text-tertiary)]\">LAT</div>\n        <div className=\"text-[var(--text-primary)]\">\n          {Math.round(latestMetrics.networkLatency)}ms\n        </div>\n      </div>\n      <div className=\"metric\">\n        <div className=\"text-[var(--text-tertiary)]\">CONN</div>\n        <div className=\"text-[var(--text-primary)]\">\n          {latestMetrics.activeConnections}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// =============================================================================\n// AGENT ACTIVITY FEED\n// =============================================================================\n\nexport const AgentActivityFeed: React.FC = () => {\n  const { agentActivities, isConnected } = useRealTimeData();\n\n  if (!isConnected) {\n    return (\n      <div className=\"agent-activity-feed opacity-50\">\n        <div className=\"text-sm text-[var(--text-secondary)]\">\n          Activity feed offline\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"agent-activity-feed max-h-48 overflow-y-auto space-y-2\">\n      {agentActivities\n        .slice(-5)\n        .reverse()\n        .map((activity, index) => (\n          <div\n            key={`${activity.agentId}-${activity.timestamp}-${index}`}\n            className=\"activity-item flex items-center gap-3 p-2 rounded bg-[var(--bg-tertiary)]\"\n          >\n            <div className={`status-dot ${activity.action}`} />\n            <div className=\"flex-1 min-w-0\">\n              <div className=\"text-sm font-semibold text-[var(--text-primary)]\">\n                {activity.agentId.toUpperCase()}\n              </div>\n              <div className=\"text-xs text-[var(--text-secondary)] truncate\">\n                {activity.message}\n              </div>\n            </div>\n            <div className=\"text-xs text-[var(--text-tertiary)] font-mono\">\n              {new Date(activity.timestamp).toLocaleTimeString()}\n            </div>\n          </div>\n        ))}\n      {agentActivities.length === 0 && (\n        <div className=\"text-sm text-[var(--text-secondary)] text-center py-4\">\n          No recent activity\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default {\n  RealTimeDataProvider,\n  useRealTimeData,\n  ConnectionStatus,\n  RealTimeMetrics,\n  AgentActivityFeed,\n};\n"],
      names: ["AgentActivityFeed", "ConnectionStatus", "RealTimeDataProvider", "RealTimeMetrics", "useRealTimeData", "RealTimeContext", "React", "createContext", "context", "useContext", "Error", "children", "isConnected", "setIsConnected", "useState", "connectionQuality", "setConnectionQuality", "latency", "setLatency", "lastUpdate", "setLastUpdate", "metricsData", "setMetricsData", "agentActivities", "setAgentActivities", "knowledgeUpdates", "setKnowledgeUpdates", "isPaused", "setIsPaused", "updateInterval", "setUpdateIntervalState", "intervalRef", "useRef", "metricsIntervalRef", "agentIntervalRef", "knowledgeIntervalRef", "updateConnectionQuality", "useCallback", "currentLatency", "generateMetricsData", "now", "Date", "baseLatency", "Math", "random", "jitter", "max", "timestamp", "cpuUsage", "min", "sin", "memoryUsage", "networkLatency", "activeConnections", "floor", "systemLoad", "generateAgentActivity", "agents", "actions", "weights", "randomAgent", "length", "selectedAction", "cumulativeWeight", "i", "messages", "thinking", "responding", "idle", "error", "agentId", "action", "duration", "undefined", "message", "generateKnowledgeUpdate", "types", "type", "nodeIds", "edgeIds", "data", "id", "label", "confidence", "agent", "source", "target", "strength", "nodeId", "includes", "edgeId", "startSimulation", "current", "window", "setInterval", "newMetrics", "prev", "updated", "slice", "activity", "update", "stopSimulation", "clearInterval", "pauseSimulation", "resumeSimulation", "setUpdateInterval", "interval", "setTimeout", "useEffect", "value", "Provider", "getStatusColor", "getStatusText", "toUpperCase", "div", "className", "style", "background", "boxShadow", "span", "color", "round", "latestMetrics", "toFixed", "reverse", "map", "index", "toLocaleTimeString"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "746e9916a93731dce232efbc966834d5692d89d7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1pnmoujenw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1pnmoujenw();
cov_1pnmoujenw().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1pnmoujenw().f[0]++;
  cov_1pnmoujenw().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1pnmoujenw().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1pnmoujenw().s[3]++;
_export(exports, {
  AgentActivityFeed: function () {
    /* istanbul ignore next */
    cov_1pnmoujenw().f[1]++;
    cov_1pnmoujenw().s[4]++;
    return AgentActivityFeed;
  },
  ConnectionStatus: function () {
    /* istanbul ignore next */
    cov_1pnmoujenw().f[2]++;
    cov_1pnmoujenw().s[5]++;
    return ConnectionStatus;
  },
  RealTimeDataProvider: function () {
    /* istanbul ignore next */
    cov_1pnmoujenw().f[3]++;
    cov_1pnmoujenw().s[6]++;
    return RealTimeDataProvider;
  },
  RealTimeMetrics: function () {
    /* istanbul ignore next */
    cov_1pnmoujenw().f[4]++;
    cov_1pnmoujenw().s[7]++;
    return RealTimeMetrics;
  },
  default: function () {
    /* istanbul ignore next */
    cov_1pnmoujenw().f[5]++;
    cov_1pnmoujenw().s[8]++;
    return _default;
  },
  useRealTimeData: function () {
    /* istanbul ignore next */
    cov_1pnmoujenw().f[6]++;
    cov_1pnmoujenw().s[9]++;
    return useRealTimeData;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1pnmoujenw().s[10]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_1pnmoujenw().s[11]++, _interop_require_wildcard(require("react")));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1pnmoujenw().f[7]++;
  cov_1pnmoujenw().s[12]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1pnmoujenw().b[0][0]++;
    cov_1pnmoujenw().s[13]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1pnmoujenw().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1pnmoujenw().s[14]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1pnmoujenw().s[15]++, new WeakMap());
  /* istanbul ignore next */
  cov_1pnmoujenw().s[16]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1pnmoujenw().f[8]++;
    cov_1pnmoujenw().s[17]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1pnmoujenw().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1pnmoujenw().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1pnmoujenw().f[9]++;
  cov_1pnmoujenw().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_1pnmoujenw().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1pnmoujenw().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1pnmoujenw().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1pnmoujenw().b[2][0]++;
    cov_1pnmoujenw().s[19]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1pnmoujenw().b[2][1]++;
  }
  cov_1pnmoujenw().s[20]++;
  if (
  /* istanbul ignore next */
  (cov_1pnmoujenw().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1pnmoujenw().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1pnmoujenw().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1pnmoujenw().b[4][0]++;
    cov_1pnmoujenw().s[21]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1pnmoujenw().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1pnmoujenw().s[22]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1pnmoujenw().s[23]++;
  if (
  /* istanbul ignore next */
  (cov_1pnmoujenw().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1pnmoujenw().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1pnmoujenw().b[6][0]++;
    cov_1pnmoujenw().s[24]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1pnmoujenw().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1pnmoujenw().s[25]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1pnmoujenw().s[26]++,
  /* istanbul ignore next */
  (cov_1pnmoujenw().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1pnmoujenw().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1pnmoujenw().s[27]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1pnmoujenw().s[28]++;
    if (
    /* istanbul ignore next */
    (cov_1pnmoujenw().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1pnmoujenw().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1pnmoujenw().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1pnmoujenw().s[29]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1pnmoujenw().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1pnmoujenw().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1pnmoujenw().s[30]++;
      if (
      /* istanbul ignore next */
      (cov_1pnmoujenw().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1pnmoujenw().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1pnmoujenw().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1pnmoujenw().b[12][0]++;
        cov_1pnmoujenw().s[31]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1pnmoujenw().b[12][1]++;
        cov_1pnmoujenw().s[32]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1pnmoujenw().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1pnmoujenw().s[33]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1pnmoujenw().s[34]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1pnmoujenw().b[14][0]++;
    cov_1pnmoujenw().s[35]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1pnmoujenw().b[14][1]++;
  }
  cov_1pnmoujenw().s[36]++;
  return newObj;
}
const RealTimeContext =
/* istanbul ignore next */
(/*#__PURE__*/cov_1pnmoujenw().s[37]++, _react.default.createContext(null));
/* istanbul ignore next */
cov_1pnmoujenw().s[38]++;
const useRealTimeData = () => {
  /* istanbul ignore next */
  cov_1pnmoujenw().f[10]++;
  const context =
  /* istanbul ignore next */
  (cov_1pnmoujenw().s[39]++, _react.default.useContext(RealTimeContext));
  /* istanbul ignore next */
  cov_1pnmoujenw().s[40]++;
  if (!context) {
    /* istanbul ignore next */
    cov_1pnmoujenw().b[15][0]++;
    cov_1pnmoujenw().s[41]++;
    throw new Error("useRealTimeData must be used within RealTimeDataProvider");
  } else
  /* istanbul ignore next */
  {
    cov_1pnmoujenw().b[15][1]++;
  }
  cov_1pnmoujenw().s[42]++;
  return context;
};
/* istanbul ignore next */
cov_1pnmoujenw().s[43]++;
const RealTimeDataProvider = ({
  children
}) => {
  /* istanbul ignore next */
  cov_1pnmoujenw().f[11]++;
  const [isConnected, setIsConnected] =
  /* istanbul ignore next */
  (cov_1pnmoujenw().s[44]++, (0, _react.useState)(false));
  const [connectionQuality, setConnectionQuality] =
  /* istanbul ignore next */
  (cov_1pnmoujenw().s[45]++, (0, _react.useState)("disconnected"));
  const [latency, setLatency] =
  /* istanbul ignore next */
  (cov_1pnmoujenw().s[46]++, (0, _react.useState)(0));
  const [lastUpdate, setLastUpdate] =
  /* istanbul ignore next */
  (cov_1pnmoujenw().s[47]++, (0, _react.useState)(0));
  const [metricsData, setMetricsData] =
  /* istanbul ignore next */
  (cov_1pnmoujenw().s[48]++, (0, _react.useState)([]));
  const [agentActivities, setAgentActivities] =
  /* istanbul ignore next */
  (cov_1pnmoujenw().s[49]++, (0, _react.useState)([]));
  const [knowledgeUpdates, setKnowledgeUpdates] =
  /* istanbul ignore next */
  (cov_1pnmoujenw().s[50]++, (0, _react.useState)([]));
  const [isPaused, setIsPaused] =
  /* istanbul ignore next */
  (cov_1pnmoujenw().s[51]++, (0, _react.useState)(false));
  const [updateInterval, setUpdateIntervalState] =
  /* istanbul ignore next */
  (cov_1pnmoujenw().s[52]++, (0, _react.useState)(1000)); // 1 second
  const intervalRef =
  /* istanbul ignore next */
  (cov_1pnmoujenw().s[53]++, (0, _react.useRef)());
  const metricsIntervalRef =
  /* istanbul ignore next */
  (cov_1pnmoujenw().s[54]++, (0, _react.useRef)());
  const agentIntervalRef =
  /* istanbul ignore next */
  (cov_1pnmoujenw().s[55]++, (0, _react.useRef)());
  const knowledgeIntervalRef =
  /* istanbul ignore next */
  (cov_1pnmoujenw().s[56]++, (0, _react.useRef)());
  // Simulate connection quality based on latency
  const updateConnectionQuality =
  /* istanbul ignore next */
  (cov_1pnmoujenw().s[57]++, (0, _react.useCallback)(currentLatency => {
    /* istanbul ignore next */
    cov_1pnmoujenw().f[12]++;
    cov_1pnmoujenw().s[58]++;
    if (currentLatency < 50) {
      /* istanbul ignore next */
      cov_1pnmoujenw().b[16][0]++;
      cov_1pnmoujenw().s[59]++;
      setConnectionQuality("excellent");
    } else {
      /* istanbul ignore next */
      cov_1pnmoujenw().b[16][1]++;
      cov_1pnmoujenw().s[60]++;
      if (currentLatency < 150) {
        /* istanbul ignore next */
        cov_1pnmoujenw().b[17][0]++;
        cov_1pnmoujenw().s[61]++;
        setConnectionQuality("good");
      } else {
        /* istanbul ignore next */
        cov_1pnmoujenw().b[17][1]++;
        cov_1pnmoujenw().s[62]++;
        if (currentLatency < 500) {
          /* istanbul ignore next */
          cov_1pnmoujenw().b[18][0]++;
          cov_1pnmoujenw().s[63]++;
          setConnectionQuality("poor");
        } else {
          /* istanbul ignore next */
          cov_1pnmoujenw().b[18][1]++;
          cov_1pnmoujenw().s[64]++;
          setConnectionQuality("disconnected");
        }
      }
    }
  }, []));
  // Generate realistic metrics data
  const generateMetricsData =
  /* istanbul ignore next */
  (cov_1pnmoujenw().s[65]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1pnmoujenw().f[13]++;
    const now =
    /* istanbul ignore next */
    (cov_1pnmoujenw().s[66]++, Date.now());
    const baseLatency =
    /* istanbul ignore next */
    (cov_1pnmoujenw().s[67]++, 12 + Math.random() * 20); // 12-32ms base
    const jitter =
    /* istanbul ignore next */
    (cov_1pnmoujenw().s[68]++, (Math.random() - 0.5) * 10); // ±5ms jitter
    const currentLatency =
    /* istanbul ignore next */
    (cov_1pnmoujenw().s[69]++, Math.max(1, baseLatency + jitter));
    /* istanbul ignore next */
    cov_1pnmoujenw().s[70]++;
    return {
      timestamp: now,
      cpuUsage: Math.max(0, Math.min(100, 20 + Math.sin(now / 10000) * 15 + Math.random() * 10)),
      memoryUsage: Math.max(0, Math.min(100, 45 + Math.sin(now / 15000) * 20 + Math.random() * 5)),
      networkLatency: currentLatency,
      activeConnections: Math.floor(150 + Math.sin(now / 20000) * 50 + Math.random() * 20),
      systemLoad: Math.max(0, Math.min(5, 1.2 + Math.sin(now / 12000) * 0.8 + Math.random() * 0.3))
    };
  }, []));
  // Generate agent activity
  const generateAgentActivity =
  /* istanbul ignore next */
  (cov_1pnmoujenw().s[71]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1pnmoujenw().f[14]++;
    cov_1pnmoujenw().s[72]++;
    if (Math.random() > 0.3) {
      /* istanbul ignore next */
      cov_1pnmoujenw().b[19][0]++;
      cov_1pnmoujenw().s[73]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1pnmoujenw().b[19][1]++;
    } // 30% chance of activity
    const agents =
    /* istanbul ignore next */
    (cov_1pnmoujenw().s[74]++, ["agent-1", "agent-2", "agent-3", "agent-4"]);
    const actions =
    /* istanbul ignore next */
    (cov_1pnmoujenw().s[75]++, ["thinking", "responding", "idle", "error"]);
    const weights =
    /* istanbul ignore next */
    (cov_1pnmoujenw().s[76]++, [0.4, 0.3, 0.25, 0.05]); // Weighted probabilities
    const randomAgent =
    /* istanbul ignore next */
    (cov_1pnmoujenw().s[77]++, agents[Math.floor(Math.random() * agents.length)]);
    let selectedAction =
    /* istanbul ignore next */
    (cov_1pnmoujenw().s[78]++, "idle");
    const random =
    /* istanbul ignore next */
    (cov_1pnmoujenw().s[79]++, Math.random());
    let cumulativeWeight =
    /* istanbul ignore next */
    (cov_1pnmoujenw().s[80]++, 0);
    /* istanbul ignore next */
    cov_1pnmoujenw().s[81]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1pnmoujenw().s[82]++, 0); i < actions.length; i++) {
      /* istanbul ignore next */
      cov_1pnmoujenw().s[83]++;
      cumulativeWeight += weights[i];
      /* istanbul ignore next */
      cov_1pnmoujenw().s[84]++;
      if (random <= cumulativeWeight) {
        /* istanbul ignore next */
        cov_1pnmoujenw().b[20][0]++;
        cov_1pnmoujenw().s[85]++;
        selectedAction = actions[i];
        /* istanbul ignore next */
        cov_1pnmoujenw().s[86]++;
        break;
      } else
      /* istanbul ignore next */
      {
        cov_1pnmoujenw().b[20][1]++;
      }
    }
    const messages =
    /* istanbul ignore next */
    (cov_1pnmoujenw().s[87]++, {
      thinking: ["Analyzing data patterns...", "Processing user query...", "Evaluating options..."],
      responding: ["Generating response...", "Formatting output...", "Sending message..."],
      idle: ["Waiting for input...", "Monitoring system...", "Standing by..."],
      error: ["Connection timeout", "Processing error", "Invalid input detected"]
    });
    /* istanbul ignore next */
    cov_1pnmoujenw().s[88]++;
    return {
      agentId: randomAgent,
      action: selectedAction,
      timestamp: Date.now(),
      duration: selectedAction === "thinking" ?
      /* istanbul ignore next */
      (cov_1pnmoujenw().b[21][0]++, 2000 + Math.random() * 3000) :
      /* istanbul ignore next */
      (cov_1pnmoujenw().b[21][1]++, undefined),
      message: messages[selectedAction][Math.floor(Math.random() * messages[selectedAction].length)]
    };
  }, []));
  // Generate knowledge graph updates
  const generateKnowledgeUpdate =
  /* istanbul ignore next */
  (cov_1pnmoujenw().s[89]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1pnmoujenw().f[15]++;
    cov_1pnmoujenw().s[90]++;
    if (Math.random() > 0.15) {
      /* istanbul ignore next */
      cov_1pnmoujenw().b[22][0]++;
      cov_1pnmoujenw().s[91]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1pnmoujenw().b[22][1]++;
    } // 15% chance of update
    const types =
    /* istanbul ignore next */
    (cov_1pnmoujenw().s[92]++, ["node_added", "node_updated", "edge_added", "edge_removed"]);
    const type =
    /* istanbul ignore next */
    (cov_1pnmoujenw().s[93]++, types[Math.floor(Math.random() * types.length)]);
    const nodeIds =
    /* istanbul ignore next */
    (cov_1pnmoujenw().s[94]++, ["belief-1", "fact-2", "hypothesis-3", "concept-4", "relation-5"]);
    const edgeIds =
    /* istanbul ignore next */
    (cov_1pnmoujenw().s[95]++, ["edge-1", "edge-2", "edge-3", "edge-4"]);
    let data =
    /* istanbul ignore next */
    (cov_1pnmoujenw().s[96]++, {});
    /* istanbul ignore next */
    cov_1pnmoujenw().s[97]++;
    switch (type) {
      case "node_added":
        /* istanbul ignore next */
        cov_1pnmoujenw().b[23][0]++;
      case "node_updated":
        /* istanbul ignore next */
        cov_1pnmoujenw().b[23][1]++;
        cov_1pnmoujenw().s[98]++;
        data = {
          id: `node-${Date.now()}`,
          label: `New Concept ${Math.floor(Math.random() * 1000)}`,
          type: ["belief", "fact", "hypothesis"][Math.floor(Math.random() * 3)],
          confidence: Math.random(),
          agent: `agent-${Math.floor(Math.random() * 4) + 1}`
        };
        /* istanbul ignore next */
        cov_1pnmoujenw().s[99]++;
        break;
      case "edge_added":
        /* istanbul ignore next */
        cov_1pnmoujenw().b[23][2]++;
        cov_1pnmoujenw().s[100]++;
        data = {
          id: `edge-${Date.now()}`,
          source: nodeIds[Math.floor(Math.random() * nodeIds.length)],
          target: nodeIds[Math.floor(Math.random() * nodeIds.length)],
          type: ["supports", "contradicts", "related"][Math.floor(Math.random() * 3)],
          strength: Math.random()
        };
        /* istanbul ignore next */
        cov_1pnmoujenw().s[101]++;
        break;
      case "edge_removed":
        /* istanbul ignore next */
        cov_1pnmoujenw().b[23][3]++;
        cov_1pnmoujenw().s[102]++;
        data = {
          id: edgeIds[Math.floor(Math.random() * edgeIds.length)]
        };
        /* istanbul ignore next */
        cov_1pnmoujenw().s[103]++;
        break;
    }
    /* istanbul ignore next */
    cov_1pnmoujenw().s[104]++;
    return {
      type,
      nodeId: type.includes("node") ?
      /* istanbul ignore next */
      (cov_1pnmoujenw().b[24][0]++, data.id) :
      /* istanbul ignore next */
      (cov_1pnmoujenw().b[24][1]++, undefined),
      edgeId: type.includes("edge") ?
      /* istanbul ignore next */
      (cov_1pnmoujenw().b[25][0]++, data.id) :
      /* istanbul ignore next */
      (cov_1pnmoujenw().b[25][1]++, undefined),
      data,
      timestamp: Date.now()
    };
  }, []));
  // Start simulation
  const startSimulation =
  /* istanbul ignore next */
  (cov_1pnmoujenw().s[105]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1pnmoujenw().f[16]++;
    cov_1pnmoujenw().s[106]++;
    if (intervalRef.current) {
      /* istanbul ignore next */
      cov_1pnmoujenw().b[26][0]++;
      cov_1pnmoujenw().s[107]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1pnmoujenw().b[26][1]++;
    } // Already running
    cov_1pnmoujenw().s[108]++;
    setIsConnected(true);
    /* istanbul ignore next */
    cov_1pnmoujenw().s[109]++;
    setIsPaused(false);
    // Metrics update loop
    /* istanbul ignore next */
    cov_1pnmoujenw().s[110]++;
    metricsIntervalRef.current = window.setInterval(() => {
      /* istanbul ignore next */
      cov_1pnmoujenw().f[17]++;
      cov_1pnmoujenw().s[111]++;
      if (isPaused) {
        /* istanbul ignore next */
        cov_1pnmoujenw().b[27][0]++;
        cov_1pnmoujenw().s[112]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1pnmoujenw().b[27][1]++;
      }
      const newMetrics =
      /* istanbul ignore next */
      (cov_1pnmoujenw().s[113]++, generateMetricsData());
      /* istanbul ignore next */
      cov_1pnmoujenw().s[114]++;
      setLatency(newMetrics.networkLatency);
      /* istanbul ignore next */
      cov_1pnmoujenw().s[115]++;
      setLastUpdate(newMetrics.timestamp);
      /* istanbul ignore next */
      cov_1pnmoujenw().s[116]++;
      updateConnectionQuality(newMetrics.networkLatency);
      /* istanbul ignore next */
      cov_1pnmoujenw().s[117]++;
      setMetricsData(prev => {
        /* istanbul ignore next */
        cov_1pnmoujenw().f[18]++;
        const updated =
        /* istanbul ignore next */
        (cov_1pnmoujenw().s[118]++, [...prev, newMetrics]);
        /* istanbul ignore next */
        cov_1pnmoujenw().s[119]++;
        return updated.slice(-50); // Keep last 50 data points
      });
    }, updateInterval);
    // Agent activity loop
    /* istanbul ignore next */
    cov_1pnmoujenw().s[120]++;
    agentIntervalRef.current = window.setInterval(() => {
      /* istanbul ignore next */
      cov_1pnmoujenw().f[19]++;
      cov_1pnmoujenw().s[121]++;
      if (isPaused) {
        /* istanbul ignore next */
        cov_1pnmoujenw().b[28][0]++;
        cov_1pnmoujenw().s[122]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1pnmoujenw().b[28][1]++;
      }
      const activity =
      /* istanbul ignore next */
      (cov_1pnmoujenw().s[123]++, generateAgentActivity());
      /* istanbul ignore next */
      cov_1pnmoujenw().s[124]++;
      if (activity) {
        /* istanbul ignore next */
        cov_1pnmoujenw().b[29][0]++;
        cov_1pnmoujenw().s[125]++;
        setAgentActivities(prev => {
          /* istanbul ignore next */
          cov_1pnmoujenw().f[20]++;
          const updated =
          /* istanbul ignore next */
          (cov_1pnmoujenw().s[126]++, [...prev, activity]);
          /* istanbul ignore next */
          cov_1pnmoujenw().s[127]++;
          return updated.slice(-20); // Keep last 20 activities
        });
      } else
      /* istanbul ignore next */
      {
        cov_1pnmoujenw().b[29][1]++;
      }
    }, 2000);
    // Knowledge graph update loop
    /* istanbul ignore next */
    cov_1pnmoujenw().s[128]++;
    knowledgeIntervalRef.current = window.setInterval(() => {
      /* istanbul ignore next */
      cov_1pnmoujenw().f[21]++;
      cov_1pnmoujenw().s[129]++;
      if (isPaused) {
        /* istanbul ignore next */
        cov_1pnmoujenw().b[30][0]++;
        cov_1pnmoujenw().s[130]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1pnmoujenw().b[30][1]++;
      }
      const update =
      /* istanbul ignore next */
      (cov_1pnmoujenw().s[131]++, generateKnowledgeUpdate());
      /* istanbul ignore next */
      cov_1pnmoujenw().s[132]++;
      if (update) {
        /* istanbul ignore next */
        cov_1pnmoujenw().b[31][0]++;
        cov_1pnmoujenw().s[133]++;
        setKnowledgeUpdates(prev => {
          /* istanbul ignore next */
          cov_1pnmoujenw().f[22]++;
          const updated =
          /* istanbul ignore next */
          (cov_1pnmoujenw().s[134]++, [...prev, update]);
          /* istanbul ignore next */
          cov_1pnmoujenw().s[135]++;
          return updated.slice(-10); // Keep last 10 updates
        });
      } else
      /* istanbul ignore next */
      {
        cov_1pnmoujenw().b[31][1]++;
      }
    }, 5000);
  }, [generateMetricsData, generateAgentActivity, generateKnowledgeUpdate, updateConnectionQuality, updateInterval, isPaused]));
  // Stop simulation
  const stopSimulation =
  /* istanbul ignore next */
  (cov_1pnmoujenw().s[136]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1pnmoujenw().f[23]++;
    cov_1pnmoujenw().s[137]++;
    if (intervalRef.current) {
      /* istanbul ignore next */
      cov_1pnmoujenw().b[32][0]++;
      cov_1pnmoujenw().s[138]++;
      clearInterval(intervalRef.current);
    } else
    /* istanbul ignore next */
    {
      cov_1pnmoujenw().b[32][1]++;
    }
    cov_1pnmoujenw().s[139]++;
    if (metricsIntervalRef.current) {
      /* istanbul ignore next */
      cov_1pnmoujenw().b[33][0]++;
      cov_1pnmoujenw().s[140]++;
      clearInterval(metricsIntervalRef.current);
    } else
    /* istanbul ignore next */
    {
      cov_1pnmoujenw().b[33][1]++;
    }
    cov_1pnmoujenw().s[141]++;
    if (agentIntervalRef.current) {
      /* istanbul ignore next */
      cov_1pnmoujenw().b[34][0]++;
      cov_1pnmoujenw().s[142]++;
      clearInterval(agentIntervalRef.current);
    } else
    /* istanbul ignore next */
    {
      cov_1pnmoujenw().b[34][1]++;
    }
    cov_1pnmoujenw().s[143]++;
    if (knowledgeIntervalRef.current) {
      /* istanbul ignore next */
      cov_1pnmoujenw().b[35][0]++;
      cov_1pnmoujenw().s[144]++;
      clearInterval(knowledgeIntervalRef.current);
    } else
    /* istanbul ignore next */
    {
      cov_1pnmoujenw().b[35][1]++;
    }
    cov_1pnmoujenw().s[145]++;
    intervalRef.current = undefined;
    /* istanbul ignore next */
    cov_1pnmoujenw().s[146]++;
    metricsIntervalRef.current = undefined;
    /* istanbul ignore next */
    cov_1pnmoujenw().s[147]++;
    agentIntervalRef.current = undefined;
    /* istanbul ignore next */
    cov_1pnmoujenw().s[148]++;
    knowledgeIntervalRef.current = undefined;
    /* istanbul ignore next */
    cov_1pnmoujenw().s[149]++;
    setIsConnected(false);
    /* istanbul ignore next */
    cov_1pnmoujenw().s[150]++;
    setConnectionQuality("disconnected");
    /* istanbul ignore next */
    cov_1pnmoujenw().s[151]++;
    setLatency(0);
  }, []));
  // Pause simulation
  const pauseSimulation =
  /* istanbul ignore next */
  (cov_1pnmoujenw().s[152]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1pnmoujenw().f[24]++;
    cov_1pnmoujenw().s[153]++;
    setIsPaused(true);
  }, []));
  // Resume simulation
  const resumeSimulation =
  /* istanbul ignore next */
  (cov_1pnmoujenw().s[154]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1pnmoujenw().f[25]++;
    cov_1pnmoujenw().s[155]++;
    setIsPaused(false);
  }, []));
  // Set update interval
  const setUpdateInterval =
  /* istanbul ignore next */
  (cov_1pnmoujenw().s[156]++, (0, _react.useCallback)(interval => {
    /* istanbul ignore next */
    cov_1pnmoujenw().f[26]++;
    cov_1pnmoujenw().s[157]++;
    setUpdateIntervalState(interval);
    // Restart with new interval if currently running
    /* istanbul ignore next */
    cov_1pnmoujenw().s[158]++;
    if (intervalRef.current) {
      /* istanbul ignore next */
      cov_1pnmoujenw().b[36][0]++;
      cov_1pnmoujenw().s[159]++;
      stopSimulation();
      /* istanbul ignore next */
      cov_1pnmoujenw().s[160]++;
      setTimeout(startSimulation, 100);
    } else
    /* istanbul ignore next */
    {
      cov_1pnmoujenw().b[36][1]++;
    }
  }, [startSimulation, stopSimulation]));
  // Cleanup on unmount
  /* istanbul ignore next */
  cov_1pnmoujenw().s[161]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1pnmoujenw().f[27]++;
    cov_1pnmoujenw().s[162]++;
    return () => {
      /* istanbul ignore next */
      cov_1pnmoujenw().f[28]++;
      cov_1pnmoujenw().s[163]++;
      stopSimulation();
    };
  }, [stopSimulation]);
  // Auto-start simulation
  /* istanbul ignore next */
  cov_1pnmoujenw().s[164]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1pnmoujenw().f[29]++;
    cov_1pnmoujenw().s[165]++;
    startSimulation();
    /* istanbul ignore next */
    cov_1pnmoujenw().s[166]++;
    return stopSimulation;
  }, [startSimulation, stopSimulation]);
  const value =
  /* istanbul ignore next */
  (cov_1pnmoujenw().s[167]++, {
    isConnected,
    connectionQuality,
    latency,
    lastUpdate,
    metricsData,
    agentActivities,
    knowledgeUpdates,
    startSimulation,
    stopSimulation,
    pauseSimulation,
    resumeSimulation,
    setUpdateInterval
  });
  /* istanbul ignore next */
  cov_1pnmoujenw().s[168]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(RealTimeContext.Provider, {
    value: value,
    children: children
  });
};
/* istanbul ignore next */
cov_1pnmoujenw().s[169]++;
const ConnectionStatus = () => {
  /* istanbul ignore next */
  cov_1pnmoujenw().f[30]++;
  const {
    isConnected,
    connectionQuality,
    latency,
    lastUpdate
  } =
  /* istanbul ignore next */
  (cov_1pnmoujenw().s[170]++, useRealTimeData());
  /* istanbul ignore next */
  cov_1pnmoujenw().s[171]++;
  const getStatusColor = () => {
    /* istanbul ignore next */
    cov_1pnmoujenw().f[31]++;
    cov_1pnmoujenw().s[172]++;
    switch (connectionQuality) {
      case "excellent":
        /* istanbul ignore next */
        cov_1pnmoujenw().b[37][0]++;
        cov_1pnmoujenw().s[173]++;
        return "var(--success)";
      case "good":
        /* istanbul ignore next */
        cov_1pnmoujenw().b[37][1]++;
        cov_1pnmoujenw().s[174]++;
        return "var(--warning)";
      case "poor":
        /* istanbul ignore next */
        cov_1pnmoujenw().b[37][2]++;
        cov_1pnmoujenw().s[175]++;
        return "var(--error)";
      case "disconnected":
        /* istanbul ignore next */
        cov_1pnmoujenw().b[37][3]++;
        cov_1pnmoujenw().s[176]++;
        return "var(--text-muted)";
      default:
        /* istanbul ignore next */
        cov_1pnmoujenw().b[37][4]++;
        cov_1pnmoujenw().s[177]++;
        return "var(--text-muted)";
    }
  };
  /* istanbul ignore next */
  cov_1pnmoujenw().s[178]++;
  const getStatusText = () => {
    /* istanbul ignore next */
    cov_1pnmoujenw().f[32]++;
    cov_1pnmoujenw().s[179]++;
    if (!isConnected) {
      /* istanbul ignore next */
      cov_1pnmoujenw().b[38][0]++;
      cov_1pnmoujenw().s[180]++;
      return "DISCONNECTED";
    } else
    /* istanbul ignore next */
    {
      cov_1pnmoujenw().b[38][1]++;
    }
    cov_1pnmoujenw().s[181]++;
    return connectionQuality.toUpperCase();
  };
  /* istanbul ignore next */
  cov_1pnmoujenw().s[182]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "connection-status flex items-center gap-2 text-sm font-mono",
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "status-dot",
      style: {
        background: getStatusColor(),
        boxShadow: isConnected ?
        /* istanbul ignore next */
        (cov_1pnmoujenw().b[39][0]++, `0 0 8px ${getStatusColor()}`) :
        /* istanbul ignore next */
        (cov_1pnmoujenw().b[39][1]++, "none")
      }
    }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
      style: {
        color: getStatusColor()
      },
      children: getStatusText()
    }),
    /* istanbul ignore next */
    (cov_1pnmoujenw().b[40][0]++, isConnected) &&
    /* istanbul ignore next */
    (cov_1pnmoujenw().b[40][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
        className: "text-[var(--text-tertiary)]",
        children: "•"
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
        className: "text-[var(--text-secondary)]",
        children: [Math.round(latency), "ms"]
      })]
    }))]
  });
};
/* istanbul ignore next */
cov_1pnmoujenw().s[183]++;
const RealTimeMetrics = () => {
  /* istanbul ignore next */
  cov_1pnmoujenw().f[33]++;
  const {
    metricsData,
    isConnected
  } =
  /* istanbul ignore next */
  (cov_1pnmoujenw().s[184]++, useRealTimeData());
  const latestMetrics =
  /* istanbul ignore next */
  (cov_1pnmoujenw().s[185]++, metricsData[metricsData.length - 1]);
  /* istanbul ignore next */
  cov_1pnmoujenw().s[186]++;
  if (
  /* istanbul ignore next */
  (cov_1pnmoujenw().b[42][0]++, !isConnected) ||
  /* istanbul ignore next */
  (cov_1pnmoujenw().b[42][1]++, !latestMetrics)) {
    /* istanbul ignore next */
    cov_1pnmoujenw().b[41][0]++;
    cov_1pnmoujenw().s[187]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "real-time-metrics opacity-50",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "text-sm text-[var(--text-secondary)]",
        children: "No real-time data"
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_1pnmoujenw().b[41][1]++;
  }
  cov_1pnmoujenw().s[188]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "real-time-metrics grid grid-cols-2 md:grid-cols-4 gap-4 text-sm font-mono",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "metric",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "text-[var(--text-tertiary)]",
        children: "CPU"
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "text-[var(--text-primary)]",
        children: [latestMetrics.cpuUsage.toFixed(1), "%"]
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "metric",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "text-[var(--text-tertiary)]",
        children: "MEM"
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "text-[var(--text-primary)]",
        children: [latestMetrics.memoryUsage.toFixed(1), "%"]
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "metric",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "text-[var(--text-tertiary)]",
        children: "LAT"
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "text-[var(--text-primary)]",
        children: [Math.round(latestMetrics.networkLatency), "ms"]
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "metric",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "text-[var(--text-tertiary)]",
        children: "CONN"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "text-[var(--text-primary)]",
        children: latestMetrics.activeConnections
      })]
    })]
  });
};
/* istanbul ignore next */
cov_1pnmoujenw().s[189]++;
const AgentActivityFeed = () => {
  /* istanbul ignore next */
  cov_1pnmoujenw().f[34]++;
  const {
    agentActivities,
    isConnected
  } =
  /* istanbul ignore next */
  (cov_1pnmoujenw().s[190]++, useRealTimeData());
  /* istanbul ignore next */
  cov_1pnmoujenw().s[191]++;
  if (!isConnected) {
    /* istanbul ignore next */
    cov_1pnmoujenw().b[43][0]++;
    cov_1pnmoujenw().s[192]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "agent-activity-feed opacity-50",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "text-sm text-[var(--text-secondary)]",
        children: "Activity feed offline"
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_1pnmoujenw().b[43][1]++;
  }
  cov_1pnmoujenw().s[193]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "agent-activity-feed max-h-48 overflow-y-auto space-y-2",
    children: [agentActivities.slice(-5).reverse().map((activity, index) => {
      /* istanbul ignore next */
      cov_1pnmoujenw().f[35]++;
      cov_1pnmoujenw().s[194]++;
      return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "activity-item flex items-center gap-3 p-2 rounded bg-[var(--bg-tertiary)]",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: `status-dot ${activity.action}`
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex-1 min-w-0",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "text-sm font-semibold text-[var(--text-primary)]",
            children: activity.agentId.toUpperCase()
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "text-xs text-[var(--text-secondary)] truncate",
            children: activity.message
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "text-xs text-[var(--text-tertiary)] font-mono",
          children: new Date(activity.timestamp).toLocaleTimeString()
        })]
      }, `${activity.agentId}-${activity.timestamp}-${index}`);
    }),
    /* istanbul ignore next */
    (cov_1pnmoujenw().b[44][0]++, agentActivities.length === 0) &&
    /* istanbul ignore next */
    (cov_1pnmoujenw().b[44][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "text-sm text-[var(--text-secondary)] text-center py-4",
      children: "No recent activity"
    }))]
  });
};
const _default =
/* istanbul ignore next */
(cov_1pnmoujenw().s[195]++, {
  RealTimeDataProvider,
  useRealTimeData,
  ConnectionStatus,
  RealTimeMetrics,
  AgentActivityFeed
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
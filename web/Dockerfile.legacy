# Multi-stage Frontend Dockerfile for FreeAgentics Next.js app with security optimizations
FROM node:18.20.4-alpine AS base

# Security: Update packages and install minimal dependencies
RUN apk update && apk upgrade && apk add --no-cache \
    # Required for npm native modules
    libc6-compat \
    # Security scanning
    dumb-init \
    && rm -rf /var/cache/apk/*

# Security: Create non-root user with minimal privileges
RUN addgroup -g 1001 -S nodejs \
    && adduser -S -u 1001 -G nodejs nextjs

# Install dependencies only when needed
FROM base AS deps
WORKDIR /app

# Copy package files first for better caching
COPY package.json package-lock.json* ./

# Security: Audit packages and install only production dependencies
RUN npm ci --only=production --omit=dev --audit=false --fund=false \
    && npm cache clean --force

# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /app

# Copy package files and install all dependencies (including dev)
COPY package.json package-lock.json* ./
RUN npm ci --audit=false --fund=false

# Copy source code
COPY . .

# Security and performance environment variables
ENV NEXT_TELEMETRY_DISABLED=1 \
    NODE_ENV=production \
    NPM_CONFIG_AUDIT=false \
    NPM_CONFIG_FUND=false

# Build the application with optimizations
RUN npm run build

# Production image with minimal attack surface
FROM base AS runner
WORKDIR /app

# Production environment variables
ENV NODE_ENV=production \
    NEXT_TELEMETRY_DISABLED=1 \
    PORT=3000 \
    HOSTNAME="0.0.0.0"

# Copy built application from builder stage
COPY --from=builder --chown=nextjs:nodejs /app/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

# Security: Create secure directories and set permissions
RUN mkdir -p /app/tmp /app/logs \
    && chown -R nextjs:nodejs /app \
    && chmod -R 755 /app \
    && chmod 700 /app/tmp

# Security: Switch to non-root user
USER nextjs

# Expose application port
EXPOSE 3000

# Security: Add container metadata labels for vulnerability scanning
LABEL maintainer="FreeAgentics Team" \
      version="0.0.1" \
      description="FreeAgentics Multi-Agent AI Platform Frontend" \
      security.scan="required" \
      org.opencontainers.image.source="https://github.com/leonvanbokhorst/FreeAgentics" \
      org.opencontainers.image.version="0.0.1" \
      org.opencontainers.image.created="2025-07-07" \
      org.opencontainers.image.title="FreeAgentics Frontend" \
      org.opencontainers.image.description="Production-ready Next.js frontend"

# Enhanced health check with better timeout handling
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1

# Security: Use dumb-init to handle signals properly
ENTRYPOINT ["dumb-init", "--"]
CMD ["node", "server.js"]

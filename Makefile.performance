# Performance Benchmark Makefile

.PHONY: benchmark benchmark-ci benchmark-full benchmark-memory benchmark-coordination benchmark-cache benchmark-single
.PHONY: benchmark-clean benchmark-results benchmark-report benchmark-watch

# Default target
benchmark: benchmark-ci

# CI benchmark suite (fast, for automated runs)
benchmark-ci:
	@echo "Running CI performance benchmarks..."
	python tests/performance/ci_performance_benchmarks.py --output-dir tests/performance/ci_results

# Full benchmark suite (comprehensive, for manual runs)
benchmark-full:
	@echo "Running full performance benchmark suite..."
	python tests/performance/ci_performance_benchmarks.py --output-dir tests/performance/ci_results --verbose

# Individual benchmark types
benchmark-memory:
	@echo "Running memory regression benchmarks..."
	python -c "from tests.performance.ci_performance_benchmarks import MemoryRegressionBenchmark; b = MemoryRegressionBenchmark(); print(b.run())"

benchmark-coordination:
	@echo "Running coordination performance benchmarks..."
	python -c "from tests.performance.ci_performance_benchmarks import MultiAgentCoordinationBenchmark; b = MultiAgentCoordinationBenchmark(); print(b.run())"

benchmark-cache:
	@echo "Running cache performance benchmarks..."
	python -c "from tests.performance.ci_performance_benchmarks import CachePerformanceBenchmark; b = CachePerformanceBenchmark(); print(b.run())"

benchmark-single:
	@echo "Running single agent inference benchmarks..."
	python -c "from tests.performance.ci_performance_benchmarks import SingleAgentInferenceBenchmark; b = SingleAgentInferenceBenchmark(); print(b.run())"

# Utility targets
benchmark-clean:
	@echo "Cleaning benchmark results..."
	rm -rf tests/performance/ci_results/*
	rm -rf performance_artifacts/*

benchmark-results:
	@echo "Showing latest benchmark results..."
	@if [ -f "tests/performance/ci_results/latest_results.json" ]; then \
		cat tests/performance/ci_results/latest_results.json | jq '.summary'; \
	else \
		echo "No benchmark results found. Run 'make benchmark' first."; \
	fi

benchmark-report:
	@echo "Generating benchmark report..."
	@if [ -f "tests/performance/ci_results/latest_results.json" ]; then \
		ls -la tests/performance/ci_results/*.md | head -1 | xargs cat; \
	else \
		echo "No benchmark results found. Run 'make benchmark' first."; \
	fi

benchmark-watch:
	@echo "Running benchmarks in watch mode..."
	@while true; do \
		make benchmark-ci; \
		echo "Benchmarks completed. Waiting 60 seconds..."; \
		sleep 60; \
	done

# Help target
benchmark-help:
	@echo "Performance Benchmark Targets:"
	@echo "  benchmark          - Run CI benchmark suite (default)"
	@echo "  benchmark-ci       - Run CI benchmark suite"
	@echo "  benchmark-full     - Run full benchmark suite with verbose output"
	@echo "  benchmark-memory   - Run memory regression benchmarks only"
	@echo "  benchmark-coordination - Run coordination benchmarks only"
	@echo "  benchmark-cache    - Run cache performance benchmarks only"
	@echo "  benchmark-single   - Run single agent benchmarks only"
	@echo "  benchmark-clean    - Clean benchmark results"
	@echo "  benchmark-results  - Show latest benchmark results summary"
	@echo "  benchmark-report   - Show latest benchmark report"
	@echo "  benchmark-watch    - Run benchmarks continuously"
	@echo "  benchmark-help     - Show this help message"

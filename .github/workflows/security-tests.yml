jobs:
  security-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        env:
          POSTGRES_DB: freeagentics_test
          POSTGRES_PASSWORD: postgres
        image: postgres:14
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout
          5s --health-retries 5
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    - name: Install dependencies
      run: "\n                                pip install --upgrade pip\n        \
        \                        pip install -r requirements.txt\n               \
        \                 pip install -r requirements-dev.txt\n                  \
        \          "
    - name: Run security test suite
      run: "\n                                python -m pytest tests/security/comprehensive_security_test_suite.py\
        \ -v\n                            "
    - name: Run penetration tests
      run: "\n                                python tests/security/run_comprehensive_penetration_tests.py\n\
        \                            "
    - name: Check security headers
      run: "\n                                python -m pytest tests/unit/test_security_headers_validation.py\
        \ -v\n                            "
    - name: OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        args: --enableRetired --enableExperimental
        format: ALL
        path: .
        project: FreeAgentics
    - name: Run Bandit Security Scan
      run: "\n                                pip install bandit\n               \
        \                 bandit -r . -f json -o bandit-report.json \n    \
        \                        "
    - name: Run Safety Check
      run: "\n                                pip install safety\n               \
        \                 safety check --json > safety-report.json \n     \
        \                       "
    - name: OWASP ZAP Baseline Scan
      uses: zaproxy/action-baseline@v0.7.0
      with:
        allow_issue_writing: false
        fail_action: true
        target: http://localhost:8000
    - if: always()
      name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: "\n                                    security_test_report.json\n \
          \                                   bandit-report.json\n               \
          \                     safety-report.json\n                             \
          \       zap_report.html\n                                "
    - name: Security gate check
      run: "\n                                python tests/security/check_security_gates.py\n\
        \                            "
name: Security Testing
'on':
  pull_request:
    branches:
    - main
  push:
    branches:
    - main
    - develop

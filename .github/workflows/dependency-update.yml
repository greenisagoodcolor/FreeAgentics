name: Dependency Updates

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  update-python-dependencies:
    name: Update Python Dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pip-tools

      - name: Update requirements files
        run: |
          # Update core dependencies
          pip-compile --upgrade --resolver=backtracking requirements-core.in -o requirements-core.txt

          # Update dev dependencies
          pip-compile --upgrade --resolver=backtracking requirements-dev.in -o requirements-dev.txt

          # Update production dependencies
          pip-compile --upgrade --resolver=backtracking requirements-production.in -o requirements-production.txt

      - name: Run security check
        run: |
          pip install safety
          safety check || echo "Security issues found, will be noted in PR"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update Python dependencies'
          title: 'Automated Python Dependency Updates'
          body: |
            ## Python Dependency Updates

            This PR contains automated updates to Python dependencies.

            ### Security Check Results
            ```
            $(safety check || echo "Some security issues detected - please review")
            ```

            ### Testing Required
            - [ ] All tests pass
            - [ ] No breaking changes
            - [ ] Security scan clean
            - [ ] Performance benchmarks stable

            Please review the changes and ensure compatibility before merging.
          branch: deps/python-updates
          delete-branch: true
          labels: |
            dependencies
            python
            automated

  update-node-dependencies:
    name: Update Node Dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Update npm dependencies
        run: |
          # Update root dependencies
          npx npm-check-updates -u
          npm install

          # Update frontend dependencies
          cd web
          npx npm-check-updates -u
          npm install

      - name: Run audit
        run: |
          npm audit || echo "Vulnerabilities found, will be noted in PR"
          cd web && npm audit || echo "Vulnerabilities found in web, will be noted in PR"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update Node.js dependencies'
          title: 'Automated Node.js Dependency Updates'
          body: |
            ## Node.js Dependency Updates

            This PR contains automated updates to Node.js dependencies.

            ### Audit Results
            ```
            $(npm audit || echo "Some vulnerabilities detected - please review")
            ```

            ### Frontend Audit Results
            ```
            $(cd web && npm audit || echo "Some vulnerabilities detected - please review")
            ```

            ### Testing Required
            - [ ] All tests pass
            - [ ] Build succeeds
            - [ ] No console errors
            - [ ] UI components work correctly

            Please review the changes and ensure compatibility before merging.
          branch: deps/node-updates
          delete-branch: true
          labels: |
            dependencies
            javascript
            automated

  update-docker-base-images:
    name: Update Docker Base Images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for base image updates
        id: check
        run: |
          # Check Python base image
          CURRENT_PYTHON=$(grep "FROM python:" Dockerfile | head -1 | cut -d: -f2 | cut -d' ' -f1)
          LATEST_PYTHON=$(curl -s https://hub.docker.com/v2/repositories/library/python/tags/?page_size=100 | jq -r '.results[] | select(.name | test("^3.11.[0-9]+-slim$")) | .name' | sort -V | tail -1)

          # Check Node base image
          CURRENT_NODE=$(grep "FROM node:" web/Dockerfile | head -1 | cut -d: -f2 | cut -d' ' -f1)
          LATEST_NODE=$(curl -s https://hub.docker.com/v2/repositories/library/node/tags/?page_size=100 | jq -r '.results[] | select(.name | test("^18.[0-9.]+-alpine$")) | .name' | sort -V | tail -1)

          # Check Nginx base image
          CURRENT_NGINX=$(grep "FROM nginx:" nginx/Dockerfile | head -1 | cut -d: -f2 | cut -d' ' -f1)
          LATEST_NGINX=$(curl -s https://hub.docker.com/v2/repositories/library/nginx/tags/?page_size=100 | jq -r '.results[] | select(.name | test("^1.25.[0-9]+-alpine$")) | .name' | sort -V | tail -1)

          echo "python_current=$CURRENT_PYTHON" >> $GITHUB_OUTPUT
          echo "python_latest=$LATEST_PYTHON" >> $GITHUB_OUTPUT
          echo "node_current=$CURRENT_NODE" >> $GITHUB_OUTPUT
          echo "node_latest=$LATEST_NODE" >> $GITHUB_OUTPUT
          echo "nginx_current=$CURRENT_NGINX" >> $GITHUB_OUTPUT
          echo "nginx_latest=$LATEST_NGINX" >> $GITHUB_OUTPUT

      - name: Update Dockerfiles
        run: |
          # Update Python base image
          if [ "${{ steps.check.outputs.python_current }}" != "${{ steps.check.outputs.python_latest }}" ]; then
            sed -i "s/FROM python:${{ steps.check.outputs.python_current }}/FROM python:${{ steps.check.outputs.python_latest }}/g" Dockerfile*
          fi

          # Update Node base image
          if [ "${{ steps.check.outputs.node_current }}" != "${{ steps.check.outputs.node_latest }}" ]; then
            sed -i "s/FROM node:${{ steps.check.outputs.node_current }}/FROM node:${{ steps.check.outputs.node_latest }}/g" web/Dockerfile*
          fi

          # Update Nginx base image
          if [ "${{ steps.check.outputs.nginx_current }}" != "${{ steps.check.outputs.nginx_latest }}" ]; then
            sed -i "s/FROM nginx:${{ steps.check.outputs.nginx_current }}/FROM nginx:${{ steps.check.outputs.nginx_latest }}/g" nginx/Dockerfile
          fi

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update Docker base images'
          title: 'Automated Docker Base Image Updates'
          body: |
            ## Docker Base Image Updates

            This PR contains automated updates to Docker base images.

            ### Updates
            - Python: `${{ steps.check.outputs.python_current }}` → `${{ steps.check.outputs.python_latest }}`
            - Node.js: `${{ steps.check.outputs.node_current }}` → `${{ steps.check.outputs.node_latest }}`
            - Nginx: `${{ steps.check.outputs.nginx_current }}` → `${{ steps.check.outputs.nginx_latest }}`

            ### Testing Required
            - [ ] Images build successfully
            - [ ] Container security scans pass
            - [ ] Application starts correctly
            - [ ] No compatibility issues

            Please review the changes and test thoroughly before merging.
          branch: deps/docker-updates
          delete-branch: true
          labels: |
            dependencies
            docker
            automated

  security-advisory-check:
    name: Security Advisory Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check GitHub Security Advisories
        uses: actions/github-script@v7
        with:
          script: |
            const { data: vulnerabilities } = await github.rest.dependabot.listAlertsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open'
            });

            if (vulnerabilities.length > 0) {
              const critical = vulnerabilities.filter(v => v.security_advisory.severity === 'critical');
              const high = vulnerabilities.filter(v => v.security_advisory.severity === 'high');

              let issueBody = '## Security Vulnerabilities Detected\n\n';
              issueBody += `Found ${vulnerabilities.length} vulnerabilities:\n`;
              issueBody += `- Critical: ${critical.length}\n`;
              issueBody += `- High: ${high.length}\n\n`;

              issueBody += '### Details\n\n';
              vulnerabilities.forEach(vuln => {
                issueBody += `#### ${vuln.security_advisory.summary}\n`;
                issueBody += `- Package: ${vuln.dependency.package.name}\n`;
                issueBody += `- Severity: ${vuln.security_advisory.severity}\n`;
                issueBody += `- Fixed in: ${vuln.security_advisory.first_patched_version?.identifier || 'No fix available'}\n\n`;
              });

              // Create or update issue
              const issues = await github.rest.issues.listForRepo({
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: 'security,dependencies',
                state: 'open'
              });

              const existingIssue = issues.data.find(i => i.title.includes('Security Advisory Alert'));

              if (existingIssue) {
                await github.rest.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: existingIssue.number,
                  body: issueBody
                });
              } else {
                await github.rest.issues.create({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  title: 'Security Advisory Alert - Action Required',
                  body: issueBody,
                  labels: ['security', 'dependencies', 'priority:high']
                });
              }
            }

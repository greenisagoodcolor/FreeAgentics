{
  "timestamp": "2025-07-19T23:29:04.773158",
  "gates": {
    "pre_commit": {
      "passed": false,
      "output": "trim trailing whitespace.................................................Passed\nfix end of files.........................................................Passed\ncheck yaml...............................................................Passed\ncheck json...............................................................Passed\ncheck toml...............................................................Passed\ncheck for merge conflicts................................................Passed\ncheck for case conflicts.................................................Passed\ncheck docstring is first.................................................Passed\ncheck python ast.........................................................Passed\ndebug statements (python)................................................Passed\nblack....................................................................Failed\n- hook id: black\n- files were modified by this hook\n\nreformatted security/testing/dast_integration.py\n\nAll done! \u2728 \ud83c\udf70 \u2728\n1 file reformatted, 625 files left unchanged.\n\nisort....................................................................Passed\nflake8...................................................................Passed\nmypy.....................................................................Failed\n- hook id: mypy\n- exit code: 1\n\nconfig/env_validator.py:218: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]\nscripts/test_production_deployment.py:195: error: Returning Any from function\ndeclared to return \"bool\"  [no-any-return]\n            return self.test_results[\"deployment_tests\"].get(\n            ^\nscripts/test_production_deployment.py:254: error: Returning Any from function\ndeclared to return \"bool\"  [no-any-return]\n            return self.test_results[\"deployment_tests\"].get(\n            ^\nscripts/test_production_deployment.py:355: error: Returning Any from function\ndeclared to return \"bool\"  [no-any-return]\n            return self.test_results[\"scaling_tests\"].get(\n            ^\nscripts/test_production_deployment.py:491: error: Returning Any from function\ndeclared to return \"bool\"  [no-any-return]\n            return self.test_results[\"rollback_tests\"].get(\n            ^\nscripts/test_production_deployment.py:675: error: Returning Any from function\ndeclared to return \"bool\"  [no-any-return]\n            return self.test_results[\"deployment_tests\"].get(\n            ^\nscripts/test_multistage_builds.py:24: error: Need type annotation for\n\"build_results\" (hint: \"build_results: dict[<type>, <type>] = ...\") \n[var-annotated]\n            self.build_results = {}\n            ^~~~~~~~~~~~~~~~~~\nscripts/security/validate_release_security.py:361: error: Returning Any from\nfunction declared to return \"bool\"  [no-any-return]\n            return report[\"passed\"]\n            ^~~~~~~~~~~~~~~~~~~~~~~\nscripts/security/run_security_tests.py:346: error: Returning Any from function\ndeclared to return \"dict[Any, Any]\"  [no-any-return]\n            return self.results\n            ^~~~~~~~~~~~~~~~~~~\nscripts/security/run_security_tests.py:396: error: Returning Any from function\ndeclared to return \"bool\"  [no-any-return]\n            return report[\"tests_failed\"] == 0\n            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nscripts/security/generate_security_report.py:477: error: Unsupported operand\ntypes for + (\"object\" and \"int\")  [operator]\n                    results[severity][\"count\"] += 1\n                    ^\nscripts/security/generate_security_report.py:478: error: Argument 1 to \"len\"\nhas incompatible type \"object\"; expected \"Sized\"  [arg-type]\n                    if len(results[severity][\"examples\"]) < 3:\n                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nscripts/security/generate_security_report.py:479: error: \"object\" has no\nattribute \"append\"  [attr-defined]\n                        results[severity][\"examples\"].append(result[\"test_...\n                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nscripts/memory_profiler_simplified.py:175: error: Need type annotation for\n\"hotspots\"  [var-annotated]\n            hotspots = {\"large_arrays\": [], \"recommendations\": []}\n                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nscripts/coverage-analyze-gaps.py:49: error: Returning Any from function\ndeclared to return \"dict[Any, Any]\"  [no-any-return]\n                    return json.load(f)\n                    ^~~~~~~~~~~~~~~~~~~\nscripts/coverage-analyze-gaps.py:70: error: Need type annotation for \"gaps\" \n[var-annotated]\n            gaps = {\n                   ^\nscripts/coverage-analyze-gaps.py:107: error: \"Collection[Any]\" has no attribute\n\"append\"  [attr-defined]\n                    gaps[\"zero_coverage\"].append(module_info)\n                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\nscripts/coverage-analyze-gaps.py:109: error: \"Collection[Any]\" has no attribute\n\"append\"  [attr-defined]\n                    gaps[\"low_coverage\"].append(module_info)\n                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~\nscripts/coverage-analyze-gaps.py:113: error: \"Collection[Any]\" has no attribute\n\"append\"  [attr-defined]\n                    gaps[\"critical_gaps\"].append(module_info)\n                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\nscripts/coverage-analyze-gaps.py:117: error: \"Collection[Any]\" has no attribute\n\"append\"  [attr-defined]\n                    gaps[\"gnn_specific\"].append(module_info)\n                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~\nscripts/coverage-analyze-gaps.py:120: error: Value of type \"Collection[Any]\" is\nnot indexable  [index]\n                gaps[\"by_category\"][module_info[\"category\"]].append(module...\n                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nscripts/coverage-analyze-gaps.py:129: error: \"Collection[Any]\" has no attribute\n\"sort\"  [attr-defined]\n                gaps[key].sort(key=lambda x: x[\"coverage\"])\n                ^~~~~~~~~~~~~~\nscripts/coverage-analyze-gaps.py:188: error: Incompatible return value type\n(got \"list[dict[str, Sequence[Any]]]\", expected \"list[str]\")  [return-value]\n            return recommendations\n                   ^~~~~~~~~~~~~~~\nscripts/batch_fix_flake8.py:25: error: Need type annotation for \"stats\" (hint:\n\"stats: dict[<type>, <type>] = ...\")  [var-annotated]\n            stats = {}\n            ^~~~~\nscripts/batch_fix_flake8.py:260: error: Dict entry 0 has incompatible type\n\"str\": \"str\"; expected \"str\": \"int\"  [dict-item]\n            \"directory\": directory,\n            ^~~~~~~~~~~~~~~~~~~~~~\nscripts/batch_fix_flake8.py:265: error: Dict entry 5 has incompatible type\n\"str\": \"dict[str, int]\"; expected \"str\": \"int\"  [dict-item]\n            \"stats\": after_stats,\n            ^~~~~~~~~~~~~~~~~~~~\nscripts/analyze_agent_memory.py:135: error: Need type annotation for \"analysis\"\n [var-annotated]\n            analysis = {\"data_structures\": {}, \"recommendations\": []}\n                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nscripts/analyze_agent_memory.py:153: error: Unsupported target for indexed\nassignment (\"Collection[Any]\")  [index]\n            analysis[\"data_structures\"][\"beliefs\"] = {\n            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nscripts/analyze_agent_memory.py:165: error: Value of type \"Collection[Any]\" is\nnot indexable  [index]\n                f\"(save {analysis['data_structures']['beliefs']['savings_p...\n                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nscripts/analyze_agent_memory.py:184: error: Unsupported target for indexed\nassignment (\"Collection[Any]\")  [index]\n            analysis[\"data_structures\"][\"transitions\"] = {\n            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nscripts/analyze_agent_memory.py:196: error: Value of type \"Collection[Any]\" is\nnot indexable  [index]\n                f\"(save {analysis['data_structures']['transitions']['savin...\n                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nscripts/analyze_agent_memory.py:203: error: Value of type \"Collection[Any]\" is\nnot indexable  [index]\n            if analysis[\"data_structures\"][\"beliefs\"][\"savings_percent\"] >...\n               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nscripts/analyze_agent_memory.py:204: error: \"Collection[Any]\" has no attribute\n\"append\"  [attr-defined]\n                analysis[\"recommendations\"].append(\n                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nscripts/analyze_agent_memory.py:206: error: Value of type \"Collection[Any]\" is\nnot indexable  [index]\n                    f\"{analysis['data_structures']['beliefs']['savings_per...\n                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nscripts/analyze_agent_memory.py:209: error: Value of type \"Collection[Any]\" is\nnot indexable  [index]\n            if analysis[\"data_structures\"][\"transitions\"][\"savings_percent...\n               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nscripts/analyze_agent_memory.py:210: error: \"Collection[Any]\" has no attribute\n\"append\"  [attr-defined]\n                analysis[\"recommendations\"].append(\n                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nscripts/analyze_agent_memory.py:212: error: Value of type \"Collection[Any]\" is\nnot indexable  [index]\n                    f\"{analysis['data_structures']['transitions']['savings...\n                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nscripts/analyze_agent_memory.py:325: error: Need type annotation for \"plan\" \n[var-annotated]\n            plan = {\n                   ^\nscripts/analyze_agent_memory.py:416: error: Value of type \"Collection[Any]\" is\nnot indexable  [index]\n                f\"\\nExpected memory reduction: {plan['expected_savings']['...\n                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~...\nscripts/analyze_agent_memory.py:419: error: Value of type \"Collection[Any]\" is\nnot indexable  [index]\n                f\"New footprint: {plan['expected_savings']['new_footprint'...\n                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nknowledge_graph/nlp_entity_extractor.py:75: error: Need type annotation for\n\"_entity_cache\" (hint: \"_entity_cache: dict[<type>, <type>] = ...\") \n[var-annotated]\n            self._entity_cache = {}\n            ^~~~~~~~~~~~~~~~~~\nknowledge_graph/nlp_entity_extractor.py:390: error: Need type annotation for\n\"grouped\" (hint: \"grouped: dict[<type>, <type>] = ...\")  [var-annotated]\n            grouped = {}\n            ^~~~~~~\nknowledge_graph/nlp_entity_extractor.py:413: error: Need type annotation for\n\"relationships\" (hint: \"relationships: list[<type>] = ...\")  [var-annotated]\n            relationships = []\n            ^~~~~~~~~~~~~\nknowledge_graph/fallback_classes.py:16: error: No return value expected \n[return-value]\n            return True\n            ^~~~~~~~~~~\nknowledge_graph/fallback_classes.py:20: error: No return value expected \n[return-value]\n            return True\n            ^~~~~~~~~~~\nknowledge_graph/fallback_classes.py:61: error: No return value expected \n[return-value]\n            return True\n            ^~~~~~~~~~~\nknowledge_graph/fallback_classes.py:65: error: No return value expected \n[return-value]\n            return True\n            ^~~~~~~~~~~\ninference/gnn/validator.py:377: error: Returning Any from function declared to\nreturn \"ValidationResult\"  [no-any-return]\n                return self._create_validation_result(\n                ^\ninference/gnn/h3_spatial_integration.py:37: error: Need type annotation for\n\"h3_cache\" (hint: \"h3_cache: dict[<type>, <type>] = ...\")  [var-annotated]\n            self.h3_cache = {}\n            ^~~~~~~~~~~~~\ninference/gnn/h3_spatial_integration.py:57: error: Returning Any from function\ndeclared to return \"str | None\"  [no-any-return]\n            return self.h3_cache[cache_key]\n            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\ninference/gnn/h3_spatial_integration.py:65: error: Returning Any from function\ndeclared to return \"tuple[float, float] | None\"  [no-any-return]\n                return h3.cell_to_latlng(h3_index)\n                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\ninference/gnn/h3_spatial_integration.py:89: error: Returning Any from function\ndeclared to return \"int | None\"  [no-any-return]\n                return h3.grid_distance(h3_index1, h3_index2)\n                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\ninference/gnn/h3_spatial_integration.py:214: error: Need type annotation for\n\"relationships\"  [var-annotated]\n            relationships = {\n                            ^\ninference/gnn/h3_spatial_integration.py:234: error: \"Collection[Any]\" has no\nattribute \"append\"  [attr-defined]\n                relationships[\"neighbor_counts\"].append(neighbor_count)\n                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\ninference/gnn/h3_spatial_integration.py:278: error: Need type annotation for\n\"cluster\" (hint: \"cluster: set[<type>] = ...\")  [var-annotated]\n                    cluster = set()\n                    ^~~~~~~\ninference/gnn/feature_extractor.py:327: error: Incompatible types in assignment\n(expression has type \"list[str]\", variable has type \"set[str]\")  [assignment]\n            numerical_fields = sorted(numerical_fields)\n                               ^~~~~~~~~~~~~~~~~~~~~~~~\ninference/gnn/feature_extractor.py:419: error: Need type annotation for\n\"adj_list\"  [var-annotated]\n            adj_list = {i: set() for i in range(num_nodes)}\n                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\ninference/active/gmn_parser.py:138: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]\ninference/active/gmn_parser.py:139: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]\ninference/active/gmn_parser.py:140: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]\ndatabase/query_optimizer.py:46: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]\ndatabase/query_optimizer.py:47: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]\ndatabase/query_optimizer.py:48: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]\ndatabase/query_optimizer.py:111: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]\ndatabase/query_optimizer.py:112: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]\ndatabase/indexing_strategy.py:29: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]\ndatabase/indexing_strategy.py:30: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]\ndatabase/indexing_strategy.py:31: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]\ndatabase/indexing_strategy.py:32: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]\ndatabase/indexing_strategy.py:489: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]\ndatabase/indexing_strategy.py:490: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]\nconfig/rate_limiting.py:256: error: Function \"builtins.any\" is not valid as a\ntype  [valid-type]\n        def get_redis_config(self) -> Dict[str, any]:\n                                                ^\nconfig/rate_limiting.py:256: note: Perhaps you meant \"typing.Any\" instead of \"any\"?\nconfig/rate_limiting.py:278: error: Function \"builtins.any\" is not valid as a\ntype  [valid-type]\n        def get_monitoring_config(self) -> Dict[str, any]:\n                                                     ^\nconfig/rate_limiting.py:278: note: Perhaps you meant \"typing.Any\" instead of \"any\"?\nconfig/rate_limiting.py:296: error: Returning Any from function declared to\nreturn \"bool\"  [no-any-return]\n            return self.enabled\n            ^~~~~~~~~~~~~~~~~~~\nbenchmarks/ci_integration.py:96: error: Returning Any from function declared to\nreturn \"dict[str, Any]\"  [no-any-return]\n                    return json.load(f)\n                    ^~~~~~~~~~~~~~~~~~~\nbenchmarks/ci_integration.py:123: error: Returning Any from function declared\nto return \"dict[str, Any] | None\"  [no-any-return]\n            return self.baseline_data.get(key)\n            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nbenchmarks/ci_integration.py:138: error: Returning Any from function declared\nto return \"list[dict[str, Any]]\"  [no-any-return]\n                    return json.load(f)\n                    ^~~~~~~~~~~~~~~~~~~\nbenchmarks/ci_integration.py:348: error: Incompatible types in assignment\n(expression has type \"str\", variable has type \"tuple[Any, Any]\")  [assignment]\n                key = f\"{category}.{benchmark}\"\n                      ^~~~~~~~~~~~~~~~~~~~~~~~~\nauth/security_logging.py:102: error: Variable \"auth.security_logging.Base\" is\nnot valid as a type  [valid-type]\n    class SecurityAuditLog(Base):\n                           ^\nauth/security_logging.py:102: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases\nauth/security_logging.py:102: error: Invalid base class \"Base\"  [misc]\n    class SecurityAuditLog(Base):\n                           ^\nauth/security_logging.py:144: error: Dict entry 0 has incompatible type \"str\":\n\"dict[str, bool]\"; expected \"str\": \"int\"  [dict-item]\n                {\"connect_args\": {\"check_same_thread\": False}}\n                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nauth/security_logging.py:160: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]\nauth/security_logging.py:161: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]\nauth/security_logging.py:162: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]\nauth/security_logging.py:203: error: Incompatible types in assignment\n(expression has type \"int\", target has type \"Collection[str]\")  [assignment]\n                    log_entry[\"status_code\"] = status_code\n                                               ^~~~~~~~~~~\nauth/security_logging.py:267: error: Returning Any from function declared to\nreturn \"str\"  [no-any-return]\n                return forwarded.split(\",\")[0].strip()\n                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nauth/security_logging.py:270: error: Returning Any from function declared to\nreturn \"str\"  [no-any-return]\n                return real_ip\n                ^~~~~~~~~~~~~~\nauth/security_logging.py:271: error: Returning Any from function declared to\nreturn \"str\"  [no-any-return]\n            return request.client.host if request.client else \"unknown\"\n            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nauth/security_logging.py:408: error: Unsupported target for indexed assignment\n(\"object\")  [index]\n                        summary[\"by_type\"][event_type] = (\n                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nauth/security_logging.py:409: error: \"object\" has no attribute \"get\" \n[attr-defined]\n                            summary[\"by_type\"].get(event_type, 0) + 1\n                            ^~~~~~~~~~~~~~~~~~~~~~\nauth/security_logging.py:414: error: Unsupported target for indexed assignment\n(\"object\")  [index]\n                        summary[\"by_severity\"][severity] = (\n                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nauth/security_logging.py:415: error: \"object\" has no attribute \"get\" \n[attr-defined]\n                            summary[\"by_severity\"].get(severity, 0) + 1\n                            ^~~~~~~~~~~~~~~~~~~~~~~~~~\nauth/security_logging.py:420: error: Unsupported operand types for + (\"object\"\nand \"int\")  [operator]\n                            summary[\"failed_logins\"] += 1\n                            ^\nauth/security_logging.py:424: error: Unsupported target for indexed assignment\n(\"object\")  [index]\n                            summary[\"top_ips\"][event.ip_address] = (\n                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nauth/security_logging.py:425: error: \"object\" has no attribute \"get\" \n[attr-defined]\n                                summary[\"top_ips\"].get(event.ip_address, 0...\n                                ^~~~~~~~~~~~~~~~~~~~~~\nauth/security_logging.py:431: error: \"object\" has no attribute \"items\" \n[attr-defined]\n                            summary[\"top_ips\"].items(),\n                            ^~~~~~~~~~~~~~~~~~~~~~~~\nauth/https_enforcement.py:461: error: Function \"builtins.any\" is not valid as a\ntype  [valid-type]\n        def generate_aws_alb_config(self) -> Dict[str, any]:\n                                                       ^\nauth/https_enforcement.py:461: note: Perhaps you meant \"typing.Any\" instead of \"any\"?\nagents/type_adapter.py:87: error: Returning Any from function declared to\nreturn \"str\"  [no-any-return]\n                    return status.value\n                    ^~~~~~~~~~~~~~~~~~~\nagents/type_adapter.py:98: error: Returning Any from function declared to\nreturn \"str\"  [no-any-return]\n                    return (\n                    ^\nagents/type_adapter.py:117: error: Returning Any from function declared to\nreturn \"tuple[Any, ...] | list[Any] | dict[Any, Any] | None\"  [no-any-return]\n                return agent.position\n                ^~~~~~~~~~~~~~~~~~~~~\nagents/type_adapter.py:120: error: Returning Any from function declared to\nreturn \"tuple[Any, ...] | list[Any] | dict[Any, Any] | None\"  [no-any-return]\n                return agent[\"position\"]\n                ^~~~~~~~~~~~~~~~~~~~~~~~\nagents/type_adapter.py:251: error: Returning Any from function declared to\nreturn \"list[Any] | dict[Any, Any]\"  [no-any-return]\n                return coalition.members\n                ^~~~~~~~~~~~~~~~~~~~~~~~\nagents/type_adapter.py:272: error: Returning Any from function declared to\nreturn \"list[Any] | dict[Any, Any]\"  [no-any-return]\n                    return coalition[\"members\"]\n                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~\nagents/type_adapter.py:274: error: Returning Any from function declared to\nreturn \"list[Any] | dict[Any, Any]\"  [no-any-return]\n                    return coalition[\"agents\"]\n                    ^~~~~~~~~~~~~~~~~~~~~~~~~~\nagents/type_adapter.py:316: error: Returning Any from function declared to\nreturn \"str\"  [no-any-return]\n                    return status.value\n                    ^~~~~~~~~~~~~~~~~~~\nagents/type_adapter.py:321: error: Returning Any from function declared to\nreturn \"str\"  [no-any-return]\n                return status.value if hasattr(status, \"value\") else str(s...\n                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...\nagents/pymdp_error_handling.py:67: error: Need type annotation for\n\"operation_failures\" (hint: \"operation_failures: dict[<type>, <type>] = ...\") \n[var-annotated]\n            self.operation_failures = {}\n            ^~~~~~~~~~~~~~~~~~~~~~~\nagents/pymdp_error_handling.py:68: error: Need type annotation for\n\"recovery_stats\" (hint: \"recovery_stats: dict[<type>, <type>] = ...\") \n[var-annotated]\n            self.recovery_stats = {}\n            ^~~~~~~~~~~~~~~~~~~\nagents/pymdp_error_handling.py:426: error: Returning Any from function declared\nto return \"int\"  [no-any-return]\n        return safe_numpy_conversion(value, int, default)\n        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nagents/pymdp_adapter.py:179: error: Returning Any from function declared to\nreturn \"list[int]\"  [no-any-return]\n                return observation.astype(int).tolist()\n                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nagents/pymdp_adapter.py:227: error: Returning Any from function declared to\nreturn \"list[Any]\"  [no-any-return]\n                return beliefs_result.tolist()\n                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nagents/memory_optimization/memory_profiler.py:110: error: Need type annotation\nfor \"snapshots\"  [var-annotated]\n            self.snapshots = deque(maxlen=max_snapshots)\n                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~\nagents/memory_optimization/memory_profiler.py:300: error: Incompatible types in\nassignment (expression has type \"MemorySnapshot\", variable has type \"Snapshot\") \n[assignment]\n                snapshot = MemorySnapshot(\n                           ^\nagents/memory_optimization/memory_profiler.py:318: error: Incompatible return\nvalue type (got \"Snapshot\", expected \"MemorySnapshot\")  [return-value]\n                return snapshot\n                       ^~~~~~~~\nagents/memory_optimization/matrix_pooling.py:269: error: Unsupported operand\ntypes for + (\"object\" and \"int\")  [operator]\n                    self.global_stats[\"total_pools\"] += 1\n                    ^\nagents/memory_optimization/matrix_pooling.py:346: error: Value of type \"object\"\nis not indexable  [index]\n                self.global_stats[\"operation_counts\"][operation] += 1\n                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nagents/memory_optimization/matrix_pooling.py:346: error: Unsupported target for\nindexed assignment (\"object\")  [index]\n                self.global_stats[\"operation_counts\"][operation] += 1\n                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nagents/memory_optimization/enhanced_memory_profiler.py:112: error: Need type\nannotation for \"snapshots\"  [var-annotated]\n            self.snapshots = deque(maxlen=100)\n                             ^~~~~~~~~~~~~~~~~\nagents/memory_optimization/enhanced_memory_profiler.py:113: error: Need type\nannotation for \"hotspots\" (hint: \"hotspots: list[<type>] = ...\") \n[var-annotated]\n            self.hotspots = []\n            ^~~~~~~~~~~~~\nagents/memory_optimization/enhanced_memory_profiler.py:346: error: Need type\nannotation for \"hotspots\" (hint: \"hotspots: list[<type>] = ...\") \n[var-annotated]\n                hotspots = []\n                ^~~~~~~~\nagents/memory_optimization/enhanced_memory_profiler.py:491: error: Returning\nAny from function declared to return \"float\"  [no-any-return]\n                    return asizeof.asizeof(agent_obj) / 1024 / 1024\n                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nagents/memory_optimization/belief_compression.py:43: error: Returning Any from\nfunction declared to return \"int\"  [no-any-return]\n            return data_bytes + indices_bytes + overhead\n            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nagents/memory_optimization/belief_compression.py:77: error: Need type\nannotation for \"_component_cache\" (hint:\n\"_component_cache: dict[<type>, <type>] = ...\")  [var-annotated]\n            self._component_cache = {}\n            ^~~~~~~~~~~~~~~~~~~~~\nagents/memory_optimization/belief_compression.py:228: error: Need type\nannotation for \"shape_groups\" (hint: \"shape_groups: dict[<type>, <type>] = ...\")\n [var-annotated]\n            shape_groups = {}\n            ^~~~~~~~~~~~\nagents/memory_optimization/belief_compression.py:265: error: Need type\nannotation for \"available\"  [var-annotated]\n            self.available = deque(maxlen=pool_size)\n                             ^~~~~~~~~~~~~~~~~~~~~~~\nagents/memory_optimization/belief_compression.py:266: error: Need type\nannotation for \"in_use\" (hint: \"in_use: set[<type>] = ...\")  [var-annotated]\n            self.in_use = set()\n            ^~~~~~~~~~~\nagents/memory_optimization/belief_compression.py:302: error: Returning Any from\nfunction declared to return \"SparseBeliefState\"  [no-any-return]\n            return belief\n            ^~~~~~~~~~~~~\nagents/error_handling.py:122: error: Need type annotation for \"error_history\"\n(hint: \"error_history: list[<type>] = ...\")  [var-annotated]\n            self.error_history = []\n            ^~~~~~~~~~~~~~~~~~\nagents/error_handling.py:222: error: Need type annotation for \"error_counts\"\n(hint: \"error_counts: dict[<type>, <type>] = ...\")  [var-annotated]\n            error_counts = {}\n            ^~~~~~~~~~~~\nagents/error_handling.py:396: error: Returning Any from function declared to\nreturn \"str\"  [no-any-return]\n            return valid_actions[action_idx]\n            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nagents/connection_pool_manager.py:474: error: Need type annotation for\n\"performance_metrics\" (hint: \"performance_metrics: dict[<type>, <type>] = ...\") \n[var-annotated]\n            self.performance_metrics = {}\n            ^~~~~~~~~~~~~~~~~~~~~~~~\nagents/connection_pool_manager.py:535: error: Need type annotation for\n\"metrics_history\" (hint: \"metrics_history: list[<type>] = ...\")  [var-annotated]\n            self.metrics_history = []\n            ^~~~~~~~~~~~~~~~~~~~\nknowledge_graph/storage.py:347: error: Unused \"type: ignore\" comment \n[unused-ignore]\n                        id=node_model.id,  
    },
    "pytest": {
      "passed": false,
      "coverage": 0,
      "output": "Exit code: 1, Coverage: 0%"
    },
    "npm_build": {
      "passed": true,
      "output": "Build successful"
    },
    "docker_build": {
      "passed": true,
      "output": "Docker build successful"
    },
    "flake8": {
      "passed": false,
      "errors": 7722,
      "output": "7722 errors found"
    },
    "mypy": {
      "passed": false,
      "errors": 879,
      "output": "879 errors found"
    }
  },
  "summary": {
    "passed": 2,
    "failed": 4,
    "total": 6
  }
}

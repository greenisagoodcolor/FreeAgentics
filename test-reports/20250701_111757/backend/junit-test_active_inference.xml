<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="24" failures="0" skipped="2" tests="47" time="1.942" timestamp="2025-07-01T11:18:12.945035" hostname="Matthews-MacBook-Air.local"><testcase classname="tests.unit.test_active_inference.TestInferenceConfig" name="test_default_config" time="0.000" /><testcase classname="tests.unit.test_active_inference.TestInferenceConfig" name="test_custom_config" time="0.000" /><testcase classname="tests.unit.test_active_inference.TestInferenceConfig" name="test_config_immutability" time="0.000" /><testcase classname="tests.unit.test_active_inference.TestInferenceConfig" name="test_config_validation" time="0.000" /><testcase classname="tests.unit.test_active_inference.TestInferenceAlgorithm" name="test_device_selection_cpu" time="0.000" /><testcase classname="tests.unit.test_active_inference.TestInferenceAlgorithm" name="test_device_selection_gpu" time="0.000"><skipped type="pytest.skip" message="CUDA not available">/Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py:98: CUDA not available</skipped></testcase><testcase classname="tests.unit.test_active_inference.TestInferenceAlgorithm" name="test_abstract_method_enforcement" time="0.000" /><testcase classname="tests.unit.test_active_inference.TestVariationalMessagePassing" name="test_initialization" time="0.000" /><testcase classname="tests.unit.test_active_inference.TestVariationalMessagePassing" name="test_discrete_observation_inference" time="0.000"><error message="failed on setup with &quot;file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 125&#10;      def test_discrete_observation_inference(&#10;file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52&#10;  @pytest.fixture&#10;  def simple_generative_model(model_dimensions, model_parameters):&#10;E       fixture 'model_dimensions' not found&#10;&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52&quot;">file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 125
      def test_discrete_observation_inference(
file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52
  @pytest.fixture
  def simple_generative_model(model_dimensions, model_parameters):
E       fixture 'model_dimensions' not found
&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52</error></testcase><testcase classname="tests.unit.test_active_inference.TestVariationalMessagePassing" name="test_continuous_observation_inference" time="0.000"><error message="failed on setup with &quot;file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 139&#10;      def test_continuous_observation_inference(self, inference_config, continuous_generative_model):&#10;file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 154&#10;  @pytest.fixture&#10;  def continuous_generative_model(model_parameters):&#10;E       fixture 'model_parameters' not found&#10;&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:154&quot;">file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 139
      def test_continuous_observation_inference(self, inference_config, continuous_generative_model):
file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 154
  @pytest.fixture
  def continuous_generative_model(model_parameters):
E       fixture 'model_parameters' not found
&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:154</error></testcase><testcase classname="tests.unit.test_active_inference.TestVariationalMessagePassing" name="test_prior_belief_integration" time="0.000"><error message="failed on setup with &quot;file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 150&#10;      def test_prior_belief_integration(&#10;file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52&#10;  @pytest.fixture&#10;  def simple_generative_model(model_dimensions, model_parameters):&#10;E       fixture 'model_dimensions' not found&#10;&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52&quot;">file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 150
      def test_prior_belief_integration(
file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52
  @pytest.fixture
  def simple_generative_model(model_dimensions, model_parameters):
E       fixture 'model_dimensions' not found
&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52</error></testcase><testcase classname="tests.unit.test_active_inference.TestVariationalMessagePassing" name="test_sequence_inference" time="0.000"><error message="failed on setup with &quot;file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 168&#10;      def test_sequence_inference(&#10;file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52&#10;  @pytest.fixture&#10;  def simple_generative_model(model_dimensions, model_parameters):&#10;E       fixture 'model_dimensions' not found&#10;&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52&quot;">file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 168
      def test_sequence_inference(
file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52
  @pytest.fixture
  def simple_generative_model(model_dimensions, model_parameters):
E       fixture 'model_dimensions' not found
&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52</error></testcase><testcase classname="tests.unit.test_active_inference.TestVariationalMessagePassing" name="test_convergence" time="0.000"><error message="failed on setup with &quot;file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 181&#10;      def test_convergence(self, inference_config, simple_generative_model):&#10;file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52&#10;  @pytest.fixture&#10;  def simple_generative_model(model_dimensions, model_parameters):&#10;E       fixture 'model_dimensions' not found&#10;&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52&quot;">file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 181
      def test_convergence(self, inference_config, simple_generative_model):
file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52
  @pytest.fixture
  def simple_generative_model(model_dimensions, model_parameters):
E       fixture 'model_dimensions' not found
&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52</error></testcase><testcase classname="tests.unit.test_active_inference.TestVariationalMessagePassing" name="test_multi_modal_observations" time="0.000"><error message="failed on setup with &quot;file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 199&#10;      def test_multi_modal_observations(&#10;file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52&#10;  @pytest.fixture&#10;  def simple_generative_model(model_dimensions, model_parameters):&#10;E       fixture 'model_dimensions' not found&#10;&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52&quot;">file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 199
      def test_multi_modal_observations(
file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52
  @pytest.fixture
  def simple_generative_model(model_dimensions, model_parameters):
E       fixture 'model_dimensions' not found
&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52</error></testcase><testcase classname="tests.unit.test_active_inference.TestVariationalMessagePassing" name="test_edge_cases" time="0.000"><error message="failed on setup with &quot;file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 219&#10;      def test_edge_cases(self, inference_config, simple_generative_model):&#10;file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52&#10;  @pytest.fixture&#10;  def simple_generative_model(model_dimensions, model_parameters):&#10;E       fixture 'model_dimensions' not found&#10;&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52&quot;">file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 219
      def test_edge_cases(self, inference_config, simple_generative_model):
file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52
  @pytest.fixture
  def simple_generative_model(model_dimensions, model_parameters):
E       fixture 'model_dimensions' not found
&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52</error></testcase><testcase classname="tests.unit.test_active_inference.TestVariationalMessagePassing" name="test_numerical_stability" time="0.000"><error message="failed on setup with &quot;file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 233&#10;      def test_numerical_stability(self, inference_config, simple_generative_model):&#10;file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52&#10;  @pytest.fixture&#10;  def simple_generative_model(model_dimensions, model_parameters):&#10;E       fixture 'model_dimensions' not found&#10;&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52&quot;">file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 233
      def test_numerical_stability(self, inference_config, simple_generative_model):
file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52
  @pytest.fixture
  def simple_generative_model(model_dimensions, model_parameters):
E       fixture 'model_dimensions' not found
&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52</error></testcase><testcase classname="tests.unit.test_active_inference.TestBeliefPropagation" name="test_initialization" time="0.000" /><testcase classname="tests.unit.test_active_inference.TestBeliefPropagation" name="test_message_passing" time="0.000"><error message="failed on setup with &quot;file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 258&#10;      def test_message_passing(self, inference_config, simple_generative_model):&#10;file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52&#10;  @pytest.fixture&#10;  def simple_generative_model(model_dimensions, model_parameters):&#10;E       fixture 'model_dimensions' not found&#10;&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52&quot;">file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 258
      def test_message_passing(self, inference_config, simple_generative_model):
file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52
  @pytest.fixture
  def simple_generative_model(model_dimensions, model_parameters):
E       fixture 'model_dimensions' not found
&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52</error></testcase><testcase classname="tests.unit.test_active_inference.TestBeliefPropagation" name="test_loopy_belief_propagation" time="0.002" /><testcase classname="tests.unit.test_active_inference.TestGradientDescentInference" name="test_initialization" time="0.000" /><testcase classname="tests.unit.test_active_inference.TestGradientDescentInference" name="test_gradient_descent" time="0.000"><error message="failed on setup with &quot;file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 317&#10;      def test_gradient_descent(self, inference_config, simple_generative_model):&#10;file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52&#10;  @pytest.fixture&#10;  def simple_generative_model(model_dimensions, model_parameters):&#10;E       fixture 'model_dimensions' not found&#10;&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52&quot;">file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 317
      def test_gradient_descent(self, inference_config, simple_generative_model):
file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52
  @pytest.fixture
  def simple_generative_model(model_dimensions, model_parameters):
E       fixture 'model_dimensions' not found
&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52</error></testcase><testcase classname="tests.unit.test_active_inference.TestGradientDescentInference" name="test_natural_gradient" time="0.000"><error message="failed on setup with &quot;file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 328&#10;      def test_natural_gradient(self, inference_config, simple_generative_model):&#10;file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52&#10;  @pytest.fixture&#10;  def simple_generative_model(model_dimensions, model_parameters):&#10;E       fixture 'model_dimensions' not found&#10;&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52&quot;">file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 328
      def test_natural_gradient(self, inference_config, simple_generative_model):
file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52
  @pytest.fixture
  def simple_generative_model(model_dimensions, model_parameters):
E       fixture 'model_dimensions' not found
&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52</error></testcase><testcase classname="tests.unit.test_active_inference.TestNaturalGradientInference" name="test_initialization" time="0.000" /><testcase classname="tests.unit.test_active_inference.TestNaturalGradientInference" name="test_fisher_information_matrix" time="0.000"><error message="failed on setup with &quot;file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 348&#10;      def test_fisher_information_matrix(self, inference_config, simple_generative_model):&#10;file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52&#10;  @pytest.fixture&#10;  def simple_generative_model(model_dimensions, model_parameters):&#10;E       fixture 'model_dimensions' not found&#10;&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52&quot;">file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 348
      def test_fisher_information_matrix(self, inference_config, simple_generative_model):
file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52
  @pytest.fixture
  def simple_generative_model(model_dimensions, model_parameters):
E       fixture 'model_dimensions' not found
&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52</error></testcase><testcase classname="tests.unit.test_active_inference.TestExpectationMaximization" name="test_initialization" time="0.000" /><testcase classname="tests.unit.test_active_inference.TestExpectationMaximization" name="test_em_steps" time="0.000"><error message="failed on setup with &quot;file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 366&#10;      def test_em_steps(self, inference_config, simple_generative_model):&#10;file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52&#10;  @pytest.fixture&#10;  def simple_generative_model(model_dimensions, model_parameters):&#10;E       fixture 'model_dimensions' not found&#10;&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52&quot;">file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 366
      def test_em_steps(self, inference_config, simple_generative_model):
file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52
  @pytest.fixture
  def simple_generative_model(model_dimensions, model_parameters):
E       fixture 'model_dimensions' not found
&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52</error></testcase><testcase classname="tests.unit.test_active_inference.TestParticleFilterInference" name="test_initialization" time="0.000" /><testcase classname="tests.unit.test_active_inference.TestParticleFilterInference" name="test_particle_filtering" time="0.000"><error message="failed on setup with &quot;file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 384&#10;      def test_particle_filtering(self, inference_config, continuous_generative_model):&#10;file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 154&#10;  @pytest.fixture&#10;  def continuous_generative_model(model_parameters):&#10;E       fixture 'model_parameters' not found&#10;&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:154&quot;">file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 384
      def test_particle_filtering(self, inference_config, continuous_generative_model):
file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 154
  @pytest.fixture
  def continuous_generative_model(model_parameters):
E       fixture 'model_parameters' not found
&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:154</error></testcase><testcase classname="tests.unit.test_active_inference.TestHierarchicalInference" name="test_hierarchical_model_inference" time="0.000"><error message="failed on setup with &quot;file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 405&#10;      def test_hierarchical_model_inference(self, inference_config, hierarchical_generative_model):&#10;file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 226&#10;  @pytest.fixture&#10;  def hierarchical_generative_model(model_parameters):&#10;E       fixture 'model_parameters' not found&#10;&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:226&quot;">file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 405
      def test_hierarchical_model_inference(self, inference_config, hierarchical_generative_model):
file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 226
  @pytest.fixture
  def hierarchical_generative_model(model_parameters):
E       fixture 'model_parameters' not found
&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:226</error></testcase><testcase classname="tests.unit.test_active_inference.TestHierarchicalInference" name="test_top_down_bottom_up_integration" time="0.000"><error message="failed on setup with &quot;file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 422&#10;      def test_top_down_bottom_up_integration(self, hierarchical_generative_model):&#10;file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 226&#10;  @pytest.fixture&#10;  def hierarchical_generative_model(model_parameters):&#10;E       fixture 'model_parameters' not found&#10;&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:226&quot;">file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 422
      def test_top_down_bottom_up_integration(self, hierarchical_generative_model):
file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 226
  @pytest.fixture
  def hierarchical_generative_model(model_parameters):
E       fixture 'model_parameters' not found
&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:226</error></testcase><testcase classname="tests.unit.test_active_inference.TestPerformanceOptimization" name="test_gpu_acceleration" time="0.000"><skipped type="pytest.skip" message="CUDA not available">/Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py:441: CUDA not available</skipped></testcase><testcase classname="tests.unit.test_active_inference.TestPerformanceOptimization" name="test_batch_inference" time="0.000"><error message="failed on setup with &quot;file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 454&#10;      def test_batch_inference(self, inference_config, simple_generative_model):&#10;file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52&#10;  @pytest.fixture&#10;  def simple_generative_model(model_dimensions, model_parameters):&#10;E       fixture 'model_dimensions' not found&#10;&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52&quot;">file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 454
      def test_batch_inference(self, inference_config, simple_generative_model):
file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52
  @pytest.fixture
  def simple_generative_model(model_dimensions, model_parameters):
E       fixture 'model_dimensions' not found
&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52</error></testcase><testcase classname="tests.unit.test_active_inference.TestPerformanceOptimization" name="test_sparse_computations" time="0.002" /><testcase classname="tests.unit.test_active_inference.TestIntegration" name="test_end_to_end_inference_loop" time="0.001"><error message="failed on setup with &quot;file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 515&#10;      def test_end_to_end_inference_loop(&#10;file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52&#10;  @pytest.fixture&#10;  def simple_generative_model(model_dimensions, model_parameters):&#10;E       fixture 'model_dimensions' not found&#10;&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52&quot;">file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 515
      def test_end_to_end_inference_loop(
file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52
  @pytest.fixture
  def simple_generative_model(model_dimensions, model_parameters):
E       fixture 'model_dimensions' not found
&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52</error></testcase><testcase classname="tests.unit.test_active_inference.TestIntegration" name="test_action_selection_loop" time="0.000"><error message="failed on setup with &quot;file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 547&#10;      def test_action_selection_loop(&#10;file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52&#10;  @pytest.fixture&#10;  def simple_generative_model(model_dimensions, model_parameters):&#10;E       fixture 'model_dimensions' not found&#10;&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52&quot;">file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 547
      def test_action_selection_loop(
file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52
  @pytest.fixture
  def simple_generative_model(model_dimensions, model_parameters):
E       fixture 'model_dimensions' not found
&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52</error></testcase><testcase classname="tests.unit.test_active_inference.TestCreateInferenceAlgorithm" name="test_create_vmp" time="0.000" /><testcase classname="tests.unit.test_active_inference.TestCreateInferenceAlgorithm" name="test_create_bp" time="0.000" /><testcase classname="tests.unit.test_active_inference.TestCreateInferenceAlgorithm" name="test_create_gradient_descent" time="0.001" /><testcase classname="tests.unit.test_active_inference.TestCreateInferenceAlgorithm" name="test_create_natural_gradient" time="0.000" /><testcase classname="tests.unit.test_active_inference.TestCreateInferenceAlgorithm" name="test_create_em" time="0.000" /><testcase classname="tests.unit.test_active_inference.TestCreateInferenceAlgorithm" name="test_create_particle_filter" time="0.000" /><testcase classname="tests.unit.test_active_inference.TestCreateInferenceAlgorithm" name="test_invalid_algorithm" time="0.000" /><testcase classname="tests.unit.test_active_inference.TestActiveInferenceEngine" name="test_engine_initialization" time="0.000"><error message="failed on setup with &quot;file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 615&#10;      def test_engine_initialization(self, inference_config, simple_generative_model):&#10;file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52&#10;  @pytest.fixture&#10;  def simple_generative_model(model_dimensions, model_parameters):&#10;E       fixture 'model_dimensions' not found&#10;&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52&quot;">file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 615
      def test_engine_initialization(self, inference_config, simple_generative_model):
file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52
  @pytest.fixture
  def simple_generative_model(model_dimensions, model_parameters):
E       fixture 'model_dimensions' not found
&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52</error></testcase><testcase classname="tests.unit.test_active_inference.TestActiveInferenceEngine" name="test_engine_step" time="0.000"><error message="failed on setup with &quot;file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 622&#10;      def test_engine_step(self, inference_config, simple_generative_model):&#10;file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52&#10;  @pytest.fixture&#10;  def simple_generative_model(model_dimensions, model_parameters):&#10;E       fixture 'model_dimensions' not found&#10;&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52&quot;">file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 622
      def test_engine_step(self, inference_config, simple_generative_model):
file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52
  @pytest.fixture
  def simple_generative_model(model_dimensions, model_parameters):
E       fixture 'model_dimensions' not found
&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52</error></testcase><testcase classname="tests.unit.test_active_inference.TestActiveInferenceEngine" name="test_engine_run_inference" time="0.000"><error message="failed on setup with &quot;file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 632&#10;      def test_engine_run_inference(&#10;file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52&#10;  @pytest.fixture&#10;  def simple_generative_model(model_dimensions, model_parameters):&#10;E       fixture 'model_dimensions' not found&#10;&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52&quot;">file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 632
      def test_engine_run_inference(
file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52
  @pytest.fixture
  def simple_generative_model(model_dimensions, model_parameters):
E       fixture 'model_dimensions' not found
&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52</error></testcase><testcase classname="tests.unit.test_active_inference.TestActiveInferenceEngine" name="test_engine_reset" time="0.000"><error message="failed on setup with &quot;file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 645&#10;      def test_engine_reset(self, inference_config, simple_generative_model):&#10;file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52&#10;  @pytest.fixture&#10;  def simple_generative_model(model_dimensions, model_parameters):&#10;E       fixture 'model_dimensions' not found&#10;&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52&quot;">file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 645
      def test_engine_reset(self, inference_config, simple_generative_model):
file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52
  @pytest.fixture
  def simple_generative_model(model_dimensions, model_parameters):
E       fixture 'model_dimensions' not found
&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52</error></testcase><testcase classname="tests.unit.test_active_inference.TestActiveInferenceEngine" name="test_engine_with_different_algorithms" time="0.000"><error message="failed on setup with &quot;file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 659&#10;      def test_engine_with_different_algorithms(self, simple_generative_model):&#10;file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52&#10;  @pytest.fixture&#10;  def simple_generative_model(model_dimensions, model_parameters):&#10;E       fixture 'model_dimensions' not found&#10;&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory&#10;&gt;       use 'pytest --fixtures [testpath]' for help on them.&#10;&#10;/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52&quot;">file /Users/matthewmoroney/builds/FreeAgentics/tests/unit/test_active_inference.py, line 659
      def test_engine_with_different_algorithms(self, simple_generative_model):
file /Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py, line 52
  @pytest.fixture
  def simple_generative_model(model_dimensions, model_parameters):
E       fixture 'model_dimensions' not found
&gt;       available fixtures: _pytest_bdd_example, anyio_backend, anyio_backend_name, anyio_backend_options, benchmark, benchmark_weave, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, class_mocker, continuous_generative_model, cov, doctest_namespace, event_loop, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, hierarchical_generative_model, inference_config, mocker, module_mocker, monkeypatch, no_cover, package_mocker, pytestbdd_stepdef_given_trace, pytestbdd_stepdef_then_trace, pytestbdd_stepdef_when_trace, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, respx_mock, sample_beliefs, sample_observations, sample_policies, session_mocker, simple_generative_model, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory
&gt;       use 'pytest --fixtures [testpath]' for help on them.

/Users/matthewmoroney/builds/FreeAgentics/tests/fixtures/active_inference_fixtures.py:52</error></testcase></testsuite></testsuites>
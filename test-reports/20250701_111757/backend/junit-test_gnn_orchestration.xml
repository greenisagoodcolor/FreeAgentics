<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="1" skipped="0" tests="22" time="2.035" timestamp="2025-07-01T11:19:41.158107" hostname="Matthews-MacBook-Air.local"><testcase classname="tests.unit.test_gnn_orchestration.TestGNNIntegrationConfig" name="test_default_config" time="0.000" /><testcase classname="tests.unit.test_gnn_orchestration.TestGNNIntegrationConfig" name="test_custom_config" time="0.000" /><testcase classname="tests.unit.test_gnn_orchestration.TestDirectGraphMapper" name="test_initialization" time="0.001" /><testcase classname="tests.unit.test_gnn_orchestration.TestDirectGraphMapper" name="test_map_to_states" time="0.001" /><testcase classname="tests.unit.test_gnn_orchestration.TestDirectGraphMapper" name="test_map_with_node_indices" time="0.000" /><testcase classname="tests.unit.test_gnn_orchestration.TestLearnedGraphMapper" name="test_initialization" time="0.000" /><testcase classname="tests.unit.test_gnn_orchestration.TestLearnedGraphMapper" name="test_map_to_states" time="0.001" /><testcase classname="tests.unit.test_gnn_orchestration.TestLearnedGraphMapper" name="test_map_to_observations" time="0.001" /><testcase classname="tests.unit.test_gnn_orchestration.TestGraphFeatureAggregator" name="test_mean_aggregation" time="0.000" /><testcase classname="tests.unit.test_gnn_orchestration.TestGraphFeatureAggregator" name="test_max_aggregation" time="0.000" /><testcase classname="tests.unit.test_gnn_orchestration.TestGraphFeatureAggregator" name="test_single_graph_aggregation" time="0.000" /><testcase classname="tests.unit.test_gnn_orchestration.TestGNNActiveInferenceAdapter" name="test_initialization" time="0.001" /><testcase classname="tests.unit.test_gnn_orchestration.TestGNNActiveInferenceAdapter" name="test_process_graph" time="0.002" /><testcase classname="tests.unit.test_gnn_orchestration.TestGNNActiveInferenceAdapter" name="test_graph_to_beliefs" time="0.001" /><testcase classname="tests.unit.test_gnn_orchestration.TestGNNActiveInferenceAdapter" name="test_update_beliefs_with_graph" time="0.005"><failure message="assert torch.Size([1, 1, 4]) == (1, 4)&#10;  At index 1 diff: 1 != 4&#10;  Left contains one more item: 4&#10;  Full diff:&#10;  - (1, 4)&#10;  + torch.Size([1, 1, 4])">tests/unit/test_gnn_orchestration.py:217: in test_update_beliefs_with_graph
    assert updated_beliefs.shape == (1, 4)
E   assert torch.Size([1, 1, 4]) == (1, 4)
E     At index 1 diff: 1 != 4
E     Left contains one more item: 4
E     Full diff:
E     - (1, 4)
E     + torch.Size([1, 1, 4])</failure></testcase><testcase classname="tests.unit.test_gnn_orchestration.TestHierarchicalGraphIntegration" name="test_initialization" time="0.019" /><testcase classname="tests.unit.test_gnn_orchestration.TestHierarchicalGraphIntegration" name="test_set_generative_models" time="0.003" /><testcase classname="tests.unit.test_gnn_orchestration.TestHierarchicalGraphIntegration" name="test_process_hierarchical_graph" time="0.001" /><testcase classname="tests.unit.test_gnn_orchestration.TestFactoryFunction" name="test_create_standard_adapter" time="0.001" /><testcase classname="tests.unit.test_gnn_orchestration.TestFactoryFunction" name="test_create_hierarchical_adapter" time="0.001" /><testcase classname="tests.unit.test_gnn_orchestration.TestFactoryFunction" name="test_invalid_adapter_type" time="0.000" /><testcase classname="tests.unit.test_gnn_orchestration.TestFactoryFunction" name="test_missing_required_params" time="0.000" /></testsuite></testsuites>
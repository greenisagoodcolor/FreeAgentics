apiVersion: v1
kind: Secret
metadata:
  name: freeagentics-secrets
  namespace: freeagentics-prod
  labels:
    app: freeagentics
    component: secrets
type: Opaque
stringData:
  # Database Configuration
  postgres-password: "REPLACE_WITH_SECURE_PASSWORD"
  database-url: "postgresql://freeagentics:REPLACE_WITH_SECURE_PASSWORD@postgres:5432/freeagentics"

  # Redis Configuration
  redis-password: "REPLACE_WITH_SECURE_REDIS_PASSWORD"
  redis-url: "redis://:REPLACE_WITH_SECURE_REDIS_PASSWORD@redis:6379"

  # Application Security
  secret-key: "REPLACE_WITH_SECURE_SECRET_KEY_32_CHARS_MIN"
  jwt-secret: "REPLACE_WITH_SECURE_JWT_SECRET_32_CHARS_MIN"

  # External Services (if applicable)
  openai-api-key: "REPLACE_WITH_OPENAI_API_KEY"
  slack-webhook: "REPLACE_WITH_SLACK_WEBHOOK_URL"

  # SSL/TLS Configuration
  ssl-cert: |
    -----BEGIN CERTIFICATE-----
    # REPLACE_WITH_SSL_CERTIFICATE_CONTENT
    -----END CERTIFICATE-----
  ssl-key: |
    -----BEGIN PRIVATE KEY-----
    # REPLACE_WITH_SSL_PRIVATE_KEY_CONTENT
    -----END PRIVATE KEY-----

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: freeagentics-config
  namespace: freeagentics-prod
  labels:
    app: freeagentics
    component: config
data:
  # Application Configuration
  environment: "production"
  log-level: "INFO"
  access-token-expire-minutes: "30"
  refresh-token-expire-days: "7"
  https-only: "true"
  secure-cookies: "true"

  # Database Configuration
  postgres-db: "freeagentics"
  postgres-user: "freeagentics"

  # Monitoring Configuration
  prometheus-enabled: "true"
  grafana-enabled: "true"
  alertmanager-enabled: "true"

  # Security Configuration
  rate-limit-requests: "100"
  rate-limit-window: "60"

  # Domain Configuration
  domain: "yourdomain.com"

  # Backup Configuration
  backup-schedule: "0 2 * * *"
  backup-retention-days: "30"

coalitions/coordination_types.py:166: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
        def create_coordination_task(
        ^
agents/type_adapter.py:109: error: Missing type parameters for generic type
"tuple"  [type-arg]
    ...   def get_position(agent: Any) -> Optional[Union[tuple, list, dict]]:
                                                         ^
agents/type_adapter.py:109: error: Missing type parameters for generic type
"list"  [type-arg]
    ...   def get_position(agent: Any) -> Optional[Union[tuple, list, dict]]:
                                                                ^
agents/type_adapter.py:109: error: Missing type parameters for generic type
"dict"  [type-arg]
    ...   def get_position(agent: Any) -> Optional[Union[tuple, list, dict]]:
                                                                      ^
agents/type_adapter.py:242: error: Missing type parameters for generic type
"list"  [type-arg]
        def get_members(coalition: Any) -> Union[list, dict]:
                                                 ^
agents/type_adapter.py:242: error: Missing type parameters for generic type
"dict"  [type-arg]
        def get_members(coalition: Any) -> Union[list, dict]:
                                                       ^
security/owasp_assessment_focused.py:95: error: Function is missing a return
type annotation  [no-untyped-def]
        def add_finding(
        ^
security/owasp_assessment_focused.py:121: error: Function is missing a return
type annotation  [no-untyped-def]
        def test_a01_broken_access_control(self):
        ^
security/owasp_assessment_focused.py:121: note: Use "-> None" if function does not return a value
security/owasp_assessment_focused.py:126: error: Need type annotation for
"api_files" (hint: "api_files: list[<type>] = ...")  [var-annotated]
            api_files = []
            ^~~~~~~~~
security/owasp_assessment_focused.py:208: error: Argument "file_path" to
"add_finding" of "FocusedOWASPAssessment" has incompatible type "object";
expected "str | None"  [arg-type]
                        file_path=endpoint["file"],
                                  ^~~~~~~~~~~~~~~~
security/owasp_assessment_focused.py:209: error: Argument "line_number" to
"add_finding" of "FocusedOWASPAssessment" has incompatible type "object";
expected "int | None"  [arg-type]
                        line_number=endpoint["line"],
                                    ^~~~~~~~~~~~~~~~
security/owasp_assessment_focused.py:210: error: Argument "evidence" to
"add_finding" of "FocusedOWASPAssessment" has incompatible type "object";
expected "str | None"  [arg-type]
                        evidence=endpoint["endpoint"],
                                 ^~~~~~~~~~~~~~~~~~~~
security/owasp_assessment_focused.py:216: error: Function is missing a return
type annotation  [no-untyped-def]
        def test_a02_cryptographic_failures(self):
        ^
security/owasp_assessment_focused.py:216: note: Use "-> None" if function does not return a value
security/owasp_assessment_focused.py:221: error: Need type annotation for
"app_files" (hint: "app_files: list[<type>] = ...")  [var-annotated]
            app_files = []
            ^~~~~~~~~
security/owasp_assessment_focused.py:278: error: Function is missing a return
type annotation  [no-untyped-def]
        def test_a03_injection(self):
        ^
security/owasp_assessment_focused.py:278: note: Use "-> None" if function does not return a value
security/owasp_assessment_focused.py:282: error: Need type annotation for
"app_files" (hint: "app_files: list[<type>] = ...")  [var-annotated]
            app_files = []
            ^~~~~~~~~
security/owasp_assessment_focused.py:332: error: Function is missing a return
type annotation  [no-untyped-def]
        def test_a04_insecure_design(self):
        ^
security/owasp_assessment_focused.py:332: note: Use "-> None" if function does not return a value
security/owasp_assessment_focused.py:399: error: Function is missing a return
type annotation  [no-untyped-def]
        def test_a05_security_misconfiguration(self):
        ^
security/owasp_assessment_focused.py:399: note: Use "-> None" if function does not return a value
security/owasp_assessment_focused.py:404: error: Need type annotation for
"config_files" (hint: "config_files: list[<type>] = ...")  [var-annotated]
            config_files = []
            ^~~~~~~~~~~~
security/owasp_assessment_focused.py:438: error: Function is missing a return
type annotation  [no-untyped-def]
        def test_a06_vulnerable_components(self):
        ^
security/owasp_assessment_focused.py:438: note: Use "-> None" if function does not return a value
security/owasp_assessment_focused.py:474: error: Function is missing a return
type annotation  [no-untyped-def]
        def test_a07_auth_failures(self):
        ^
security/owasp_assessment_focused.py:474: note: Use "-> None" if function does not return a value
security/owasp_assessment_focused.py:479: error: Need type annotation for
"auth_files" (hint: "auth_files: list[<type>] = ...")  [var-annotated]
            auth_files = []
            ^~~~~~~~~~
security/owasp_assessment_focused.py:534: error: Function is missing a return
type annotation  [no-untyped-def]
        def test_a08_software_integrity(self):
        ^
security/owasp_assessment_focused.py:534: note: Use "-> None" if function does not return a value
security/owasp_assessment_focused.py:539: error: Need type annotation for
"app_files" (hint: "app_files: list[<type>] = ...")  [var-annotated]
            app_files = []
            ^~~~~~~~~
security/owasp_assessment_focused.py:579: error: Function is missing a return
type annotation  [no-untyped-def]
        def test_a09_logging_monitoring(self):
        ^
security/owasp_assessment_focused.py:579: note: Use "-> None" if function does not return a value
security/owasp_assessment_focused.py:584: error: Need type annotation for
"security_log_files" (hint: "security_log_files: list[<type>] = ...")
[var-annotated]
            security_log_files = []
            ^~~~~~~~~~~~~~~~~~
security/owasp_assessment_focused.py:646: error: Function is missing a return
type annotation  [no-untyped-def]
        def test_a10_ssrf(self):
        ^
security/owasp_assessment_focused.py:646: note: Use "-> None" if function does not return a value
security/owasp_assessment_focused.py:651: error: Need type annotation for
"app_files" (hint: "app_files: list[<type>] = ...")  [var-annotated]
            app_files = []
            ^~~~~~~~~
security/owasp_assessment_focused.py:746: error: Function is missing a return
type annotation  [no-untyped-def]
        def run_focused_assessment(self):
        ^
security/owasp_assessment_focused.py:757: error: Call to untyped function
"test_a01_broken_access_control" in typed context  [no-untyped-call]
            self.test_a01_broken_access_control()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/owasp_assessment_focused.py:758: error: Call to untyped function
"test_a02_cryptographic_failures" in typed context  [no-untyped-call]
            self.test_a02_cryptographic_failures()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/owasp_assessment_focused.py:759: error: Call to untyped function
"test_a03_injection" in typed context  [no-untyped-call]
            self.test_a03_injection()
            ^~~~~~~~~~~~~~~~~~~~~~~~~
security/owasp_assessment_focused.py:760: error: Call to untyped function
"test_a04_insecure_design" in typed context  [no-untyped-call]
            self.test_a04_insecure_design()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/owasp_assessment_focused.py:761: error: Call to untyped function
"test_a05_security_misconfiguration" in typed context  [no-untyped-call]
            self.test_a05_security_misconfiguration()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/owasp_assessment_focused.py:762: error: Call to untyped function
"test_a06_vulnerable_components" in typed context  [no-untyped-call]
            self.test_a06_vulnerable_components()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/owasp_assessment_focused.py:763: error: Call to untyped function
"test_a07_auth_failures" in typed context  [no-untyped-call]
            self.test_a07_auth_failures()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/owasp_assessment_focused.py:764: error: Call to untyped function
"test_a08_software_integrity" in typed context  [no-untyped-call]
            self.test_a08_software_integrity()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/owasp_assessment_focused.py:765: error: Call to untyped function
"test_a09_logging_monitoring" in typed context  [no-untyped-call]
            self.test_a09_logging_monitoring()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/owasp_assessment_focused.py:766: error: Call to untyped function
"test_a10_ssrf" in typed context  [no-untyped-call]
            self.test_a10_ssrf()
            ^~~~~~~~~~~~~~~~~~~~
security/owasp_assessment_focused.py:796: error: Function is missing a return
type annotation  [no-untyped-def]
    def main():
    ^
security/owasp_assessment_focused.py:796: note: Use "-> None" if function does not return a value
security/owasp_assessment_focused.py:799: error: Call to untyped function
"run_focused_assessment" in typed context  [no-untyped-call]
        report = assessor.run_focused_assessment()
                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/owasp_assessment_focused.py:817: error: Call to untyped function
"main" in typed context  [no-untyped-call]
        main()
        ^~~~~~
security/owasp_assessment_2024_comprehensive.py:57: error: Function is missing
a return type annotation  [no-untyped-def]
        def add_finding(
        ^
security/owasp_assessment_2024_comprehensive.py:83: error: Function is missing
a return type annotation  [no-untyped-def]
        def analyze_file_for_patterns(self, file_path: Path, content: str)...
        ^
security/owasp_assessment_2024_comprehensive.py:126: error: Function is missing
a return type annotation  [no-untyped-def]
        def test_a01_broken_access_control(self):
        ^
security/owasp_assessment_2024_comprehensive.py:126: note: Use "-> None" if function does not return a value
security/owasp_assessment_2024_comprehensive.py:179: error: Function is missing
a return type annotation  [no-untyped-def]
        def test_a02_cryptographic_failures(self):
        ^
security/owasp_assessment_2024_comprehensive.py:179: note: Use "-> None" if function does not return a value
security/owasp_assessment_2024_comprehensive.py:236: error: Function is missing
a return type annotation  [no-untyped-def]
        def test_a03_injection(self):
        ^
security/owasp_assessment_2024_comprehensive.py:236: note: Use "-> None" if function does not return a value
security/owasp_assessment_2024_comprehensive.py:263: error: Function is missing
a return type annotation  [no-untyped-def]
        def test_a04_insecure_design(self):
        ^
security/owasp_assessment_2024_comprehensive.py:263: note: Use "-> None" if function does not return a value
security/owasp_assessment_2024_comprehensive.py:316: error: Function is missing
a return type annotation  [no-untyped-def]
        def test_a05_security_misconfiguration(self):
        ^
security/owasp_assessment_2024_comprehensive.py:316: note: Use "-> None" if function does not return a value
security/owasp_assessment_2024_comprehensive.py:383: error: Function is missing
a return type annotation  [no-untyped-def]
        def test_a06_vulnerable_components(self):
        ^
security/owasp_assessment_2024_comprehensive.py:383: note: Use "-> None" if function does not return a value
security/owasp_assessment_2024_comprehensive.py:433: error: Function is missing
a return type annotation  [no-untyped-def]
        def test_a07_auth_failures(self):
        ^
security/owasp_assessment_2024_comprehensive.py:433: note: Use "-> None" if function does not return a value
security/owasp_assessment_2024_comprehensive.py:481: error: Function is missing
a return type annotation  [no-untyped-def]
        def test_a08_software_integrity(self):
        ^
security/owasp_assessment_2024_comprehensive.py:481: note: Use "-> None" if function does not return a value
security/owasp_assessment_2024_comprehensive.py:522: error: Function is missing
a return type annotation  [no-untyped-def]
        def test_a09_logging_monitoring(self):
        ^
security/owasp_assessment_2024_comprehensive.py:522: note: Use "-> None" if function does not return a value
security/owasp_assessment_2024_comprehensive.py:573: error: Function is missing
a return type annotation  [no-untyped-def]
        def test_a10_ssrf(self):
        ^
security/owasp_assessment_2024_comprehensive.py:573: note: Use "-> None" if function does not return a value
security/owasp_assessment_2024_comprehensive.py:672: error: Function is missing
a return type annotation  [no-untyped-def]
        def run_comprehensive_assessment(self):
        ^
security/owasp_assessment_2024_comprehensive.py:684: error: Call to untyped
function "test_a01_broken_access_control" in typed context  [no-untyped-call]
            self.test_a01_broken_access_control()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/owasp_assessment_2024_comprehensive.py:685: error: Call to untyped
function "test_a02_cryptographic_failures" in typed context  [no-untyped-call]
            self.test_a02_cryptographic_failures()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/owasp_assessment_2024_comprehensive.py:686: error: Call to untyped
function "test_a03_injection" in typed context  [no-untyped-call]
            self.test_a03_injection()
            ^~~~~~~~~~~~~~~~~~~~~~~~~
security/owasp_assessment_2024_comprehensive.py:687: error: Call to untyped
function "test_a04_insecure_design" in typed context  [no-untyped-call]
            self.test_a04_insecure_design()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/owasp_assessment_2024_comprehensive.py:688: error: Call to untyped
function "test_a05_security_misconfiguration" in typed context
[no-untyped-call]
            self.test_a05_security_misconfiguration()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/owasp_assessment_2024_comprehensive.py:689: error: Call to untyped
function "test_a06_vulnerable_components" in typed context  [no-untyped-call]
            self.test_a06_vulnerable_components()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/owasp_assessment_2024_comprehensive.py:690: error: Call to untyped
function "test_a07_auth_failures" in typed context  [no-untyped-call]
            self.test_a07_auth_failures()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/owasp_assessment_2024_comprehensive.py:691: error: Call to untyped
function "test_a08_software_integrity" in typed context  [no-untyped-call]
            self.test_a08_software_integrity()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/owasp_assessment_2024_comprehensive.py:692: error: Call to untyped
function "test_a09_logging_monitoring" in typed context  [no-untyped-call]
            self.test_a09_logging_monitoring()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/owasp_assessment_2024_comprehensive.py:693: error: Call to untyped
function "test_a10_ssrf" in typed context  [no-untyped-call]
            self.test_a10_ssrf()
            ^~~~~~~~~~~~~~~~~~~~
security/owasp_assessment_2024_comprehensive.py:733: error: Function is missing
a return type annotation  [no-untyped-def]
        def generate_task_completion_summary(self, report: Dict[str, Any])...
        ^
security/owasp_assessment_2024_comprehensive.py:793: error: Function is missing
a return type annotation  [no-untyped-def]
    def main():
    ^
security/owasp_assessment_2024_comprehensive.py:793: note: Use "-> None" if function does not return a value
security/owasp_assessment_2024_comprehensive.py:812: error: Call to untyped
function "run_comprehensive_assessment" in typed context  [no-untyped-call]
        report = assessor.run_comprehensive_assessment()
                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/owasp_assessment_2024_comprehensive.py:831: error: Call to untyped
function "main" in typed context  [no-untyped-call]
        main()
        ^~~~~~
knowledge_graph/fallback_classes.py:26: error: Function is missing a type
annotation  [no-untyped-def]
        def __init__(self, path):
        ^
knowledge_graph/fallback_classes.py:174: error: Function is missing a return
type annotation  [no-untyped-def]
    def create_all_fallback_classes():
    ^
inference/gnn/validator.py:105: error: Missing type parameters for generic type
"Callable"  [type-arg]
            self._custom_rules: Dict[str, Callable] = {}
                                          ^
inference/gnn/validator.py:108: error: Function is missing a type annotation
[no-untyped-def]
        def _process_parse_result(self, model_config):
        ^
inference/gnn/validator.py:143: error: Function is missing a type annotation
[no-untyped-def]
        def _validate_basic_structure(self, model_config):
        ^
inference/gnn/validator.py:154: error: Function is missing a type annotation
[no-untyped-def]
        def _validate_architecture_section(self, model_config):
        ^
inference/gnn/validator.py:192: error: Function is missing a type annotation
[no-untyped-def]
        def _run_comprehensive_validations(
        ^
inference/gnn/validator.py:247: error: Call to untyped function
"_apply_custom_rules" in typed context  [no-untyped-call]
            custom_errors, custom_warnings = self._apply_custom_rules(
                                             ^
inference/gnn/validator.py:255: error: Function is missing a type annotation
[no-untyped-def]
        def _apply_custom_rules(self, model_config, original_parse_result=...
        ^
inference/gnn/validator.py:278: error: Function is missing a type annotation
for one or more arguments  [no-untyped-def]
        def _create_validation_result(
        ^
inference/gnn/validator.py:337: error: Call to untyped function
"_process_parse_result" in typed context  [no-untyped-call]
                    ) = self._process_parse_result(model_config)
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
inference/gnn/validator.py:345: error: Call to untyped function
"_validate_basic_structure" in typed context  [no-untyped-call]
                basic_errors = self._validate_basic_structure(model_config...
                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
inference/gnn/validator.py:349: error: Call to untyped function
"_validate_architecture_section" in typed context  [no-untyped-call]
                arch_errors = self._validate_architecture_section(model_co...
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
inference/gnn/validator.py:353: error: Call to untyped function
"_run_comprehensive_validations" in typed context  [no-untyped-call]
                comp_errors, comp_warnings = self._run_comprehensive_valid...
                                             ^
inference/gnn/validator.py:726: error: Missing type parameters for generic type
"set"  [type-arg]
            def has_cycle(node: str, visited: set, rec_stack: set) -> bool...
                                              ^
inference/gnn/model.py:22: error: Function is missing a return type annotation
[no-untyped-def]
        def build(self):
        ^
inference/gnn/model.py:22: note: Use "-> None" if function does not return a value
inference/gnn/model.py:29: error: Function is missing a type annotation
[no-untyped-def]
        def forward(self, x, edge_index):
        ^
agents/error_handling.py:104: error: Incompatible types in assignment
(expression has type "datetime", variable has type "None")  [assignment]
            self.last_error_time = datetime.now()
                                   ^~~~~~~~~~~~~~
agents/error_handling.py:122: error: Need type annotation for "error_history"
(hint: "error_history: list[<type>] = ...")  [var-annotated]
            self.error_history = []
            ^~~~~~~~~~~~~~~~~~
agents/error_handling.py:222: error: Need type annotation for "error_counts"
(hint: "error_counts: dict[<type>, <type>] = ...")  [var-annotated]
            error_counts = {}
            ^~~~~~~~~~~~
agents/error_handling.py:237: error: Missing type parameters for generic type
"Callable"  [type-arg]
    ...andling(operation_name: str, fallback_result: Any = None) -> Callable:
                                                                    ^
agents/error_handling.py:245: error: Missing type parameters for generic type
"Callable"  [type-arg]
        def decorator(func: Callable) -> Callable:
                            ^
agents/error_handling.py:247: error: Function is missing a type annotation
[no-untyped-def]
            def wrapper(self, *args, **kwargs):
            ^
agents/error_handling.py:293: error: Missing type parameters for generic type
"Callable"  [type-arg]
    ...operation(operation_name: str, default_value: Any = None) -> Callable:
                                                                    ^
agents/error_handling.py:301: error: Missing type parameters for generic type
"Callable"  [type-arg]
        def decorator(func: Callable) -> Callable:
                            ^
agents/error_handling.py:303: error: Function is missing a type annotation
[no-untyped-def]
            def wrapper(self, *args, **kwargs):
            ^
agents/error_handling.py:386: error: Missing type parameters for generic type
"list"  [type-arg]
    def validate_action(action: Any, valid_actions: list) -> str:
                                                    ^
agents/error_handling.py:396: error: Returning Any from function declared to
return "str"  [no-any-return]
            return valid_actions[action_idx]
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
monitoring/cleanup_performance_artifacts.py:437: error: Function is missing a
return type annotation  [no-untyped-def]
    def main():
    ^
monitoring/cleanup_performance_artifacts.py:437: note: Use "-> None" if function does not return a value
monitoring/cleanup_performance_artifacts.py:473: error: Call to untyped
function "main" in typed context  [no-untyped-call]
        main()
        ^~~~~~
security/testing/sast_scanner.py:681: error: Function is missing a return type
annotation  [no-untyped-def]
    def main():
    ^
security/testing/sast_scanner.py:681: note: Use "-> None" if function does not return a value
security/testing/sast_scanner.py:743: error: Call to untyped function "main" in
typed context  [no-untyped-call]
        main()
        ^~~~~~
examples/simple_demo.py:28: error: Need type annotation for "visited" (hint:
"visited: set[<type>] = ...")  [var-annotated]
            self.visited = set()
            ^~~~~~~~~~~~
examples/simple_demo.py:31: error: Missing type parameters for generic type
"dict"  [type-arg]
        def perceive(self, world_state: dict) -> dict:
                                        ^
examples/simple_demo.py:42: error: Missing type parameters for generic type
"dict"  [type-arg]
        def decide_action(self, observation: dict) -> str:
                                             ^
examples/simple_demo.py:104: error: Need type annotation for "agents" (hint:
"agents: dict[<type>, <type>] = ...")  [var-annotated]
            self.agents = {}
            ^~~~~~~~~~~
examples/simple_demo.py:118: error: Function is missing a return type
annotation  [no-untyped-def]
        def add_agent(self, agent: SimpleAgent):
        ^
examples/simple_demo.py:123: error: Missing type parameters for generic type
"dict"  [type-arg]
    ...   def get_world_state(self, agent_position: Tuple[int, int]) -> dict:
                                                                        ^
examples/simple_demo.py:140: error: Function is missing a return type
annotation  [no-untyped-def]
        def step(self):
        ^
examples/simple_demo.py:140: note: Use "-> None" if function does not return a value
examples/simple_demo.py:170: error: Function is missing a return type
annotation  [no-untyped-def]
        def display(self):
        ^
examples/simple_demo.py:170: note: Use "-> None" if function does not return a value
examples/simple_demo.py:194: error: Function is missing a return type
annotation  [no-untyped-def]
    def run_demo():
    ^
examples/simple_demo.py:194: note: Use "-> None" if function does not return a value
examples/simple_demo.py:217: error: Call to untyped function "step" in typed
context  [no-untyped-call]
            world.step()
            ^~~~~~~~~~~~
examples/simple_demo.py:221: error: Call to untyped function "display" in typed
context  [no-untyped-call]
                world.display()
                ^~~~~~~~~~~~~~~
examples/simple_demo.py:242: error: Call to untyped function "run_demo" in
typed context  [no-untyped-call]
        run_demo()
        ^~~~~~~~~~
agents/memory_optimization/gc_tuning.py:26: error: Incompatible types in
assignment (expression has type "None", variable has type Module)  [assignment]
        psutil = None
                 ^~~~
agents/memory_optimization/gc_tuning.py:90: error: Call to untyped function
"_apply_gc_settings" in typed context  [no-untyped-call]
            self._apply_gc_settings()
            ^~~~~~~~~~~~~~~~~~~~~~~~~
agents/memory_optimization/gc_tuning.py:99: error: Function is missing a return
type annotation  [no-untyped-def]
        def _apply_gc_settings(self):
        ^
agents/memory_optimization/gc_tuning.py:99: note: Use "-> None" if function does not return a value
agents/memory_optimization/gc_tuning.py:110: error: Function is missing a
return type annotation  [no-untyped-def]
        def _gc_callback(self, phase: str, info: Dict[str, Any]):
        ^
agents/memory_optimization/gc_tuning.py:129: error: Call to untyped function
"_auto_tune_thresholds" in typed context  [no-untyped-call]
                        self._auto_tune_thresholds()
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/memory_optimization/gc_tuning.py:131: error: Function is missing a
return type annotation  [no-untyped-def]
        def _update_stats(self, generation: int, duration_ms: float):
        ^
agents/memory_optimization/gc_tuning.py:167: error: Function is missing a
return type annotation  [no-untyped-def]
        def _auto_tune_thresholds(self):
        ^
agents/memory_optimization/gc_tuning.py:167: note: Use "-> None" if function does not return a value
agents/memory_optimization/gc_tuning.py:197: error: Call to untyped function
"_increase_thresholds" in typed context  [no-untyped-call]
                self._increase_thresholds()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/memory_optimization/gc_tuning.py:203: error: Call to untyped function
"_decrease_thresholds" in typed context  [no-untyped-call]
                self._decrease_thresholds()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/memory_optimization/gc_tuning.py:216: error: Call to untyped function
"_apply_gc_settings" in typed context  [no-untyped-call]
            self._apply_gc_settings()
            ^~~~~~~~~~~~~~~~~~~~~~~~~
agents/memory_optimization/gc_tuning.py:218: error: Function is missing a
return type annotation  [no-untyped-def]
        def _increase_thresholds(self):
        ^
agents/memory_optimization/gc_tuning.py:218: note: Use "-> None" if function does not return a value
agents/memory_optimization/gc_tuning.py:233: error: Function is missing a
return type annotation  [no-untyped-def]
        def _decrease_thresholds(self):
        ^
agents/memory_optimization/gc_tuning.py:233: note: Use "-> None" if function does not return a value
agents/memory_optimization/gc_tuning.py:248: error: Function is missing a
return type annotation  [no-untyped-def]
        def update_memory_pressure(self, pressure: float):
        ^
agents/memory_optimization/gc_tuning.py:257: error: Function is missing a
return type annotation  [no-untyped-def]
        def update_agent_count(self, count: int):
        ^
agents/memory_optimization/gc_tuning.py:338: error: Function is missing a
return type annotation  [no-untyped-def]
        def shutdown(self):
        ^
agents/memory_optimization/gc_tuning.py:338: note: Use "-> None" if function does not return a value
agents/memory_optimization/gc_tuning.py:364: error: Function is missing a
return type annotation  [no-untyped-def]
        def batch_operation(self, disable_gc: bool = True):
        ^
agents/memory_optimization/gc_tuning.py:387: error: Function is missing a
return type annotation  [no-untyped-def]
        def low_latency(self):
        ^
agents/memory_optimization/gc_tuning.py:400: error: Call to untyped function
"_apply_gc_settings" in typed context  [no-untyped-call]
                self.tuner._apply_gc_settings()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/memory_optimization/gc_tuning.py:408: error: Call to untyped function
"_apply_gc_settings" in typed context  [no-untyped-call]
                    self.tuner._apply_gc_settings()
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/memory_optimization/gc_tuning.py:427: error: Function is missing a
return type annotation  [no-untyped-def]
    def optimize_gc_for_agents(agent_count: int, memory_limit_mb: float):
    ^
agents/memory_optimization/gc_tuning.py:449: error: Call to untyped function
"_auto_tune_thresholds" in typed context  [no-untyped-call]
            tuner._auto_tune_thresholds()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
benchmarks/ci_integration.py:96: error: Returning Any from function declared to
return "dict[str, Any]"  [no-any-return]
                    return json.load(f)
                    ^~~~~~~~~~~~~~~~~~~
benchmarks/ci_integration.py:99: error: Function is missing a return type
annotation  [no-untyped-def]
        def save_baseline(self):
        ^
benchmarks/ci_integration.py:99: note: Use "-> None" if function does not return a value
benchmarks/ci_integration.py:104: error: Function is missing a return type
annotation  [no-untyped-def]
        def update_baseline(self, results: List[PerformanceResult]):
        ^
benchmarks/ci_integration.py:116: error: Call to untyped function
"save_baseline" in typed context  [no-untyped-call]
            self.save_baseline()
            ^~~~~~~~~~~~~~~~~~~~
benchmarks/ci_integration.py:138: error: Returning Any from function declared
to return "list[dict[str, Any]]"  [no-any-return]
                    return json.load(f)
                    ^~~~~~~~~~~~~~~~~~~
benchmarks/ci_integration.py:141: error: Function is missing a return type
annotation  [no-untyped-def]
        def save_history(self):
        ^
benchmarks/ci_integration.py:141: note: Use "-> None" if function does not return a value
benchmarks/ci_integration.py:146: error: Function is missing a return type
annotation  [no-untyped-def]
        def add_results(self, results: List[PerformanceResult]):
        ^
benchmarks/ci_integration.py:159: error: Call to untyped function
"save_history" in typed context  [no-untyped-call]
            self.save_history()
            ^~~~~~~~~~~~~~~~~~~
benchmarks/ci_integration.py:338: error: Function is missing a return type
annotation  [no-untyped-def]
        def generate_trend_report(self, output_file: Path):
        ^
benchmarks/ci_integration.py:348: error: Incompatible types in assignment
(expression has type "str", variable has type "tuple[Any, Any]")  [assignment]
                key = f"{category}.{benchmark}"
                      ^~~~~~~~~~~~~~~~~~~~~~~~~
benchmarks/ci_integration.py:368: error: Function is missing a return type
annotation  [no-untyped-def]
        def update_baseline(
        ^
benchmarks/ci_integration.py:426: error: Function is missing a return type
annotation  [no-untyped-def]
    def main():
    ^
benchmarks/ci_integration.py:426: note: Use "-> None" if function does not return a value
benchmarks/ci_integration.py:545: error: Call to untyped function "main" in
typed context  [no-untyped-call]
        main()
        ^~~~~~
world/grid_world.py:36: error: Function is missing a type annotation for one or
more arguments  [no-untyped-def]
        def __eq__(self, other) -> bool:
        ^
world/grid_world.py:44: error: Function is missing a type annotation for one or
more arguments  [no-untyped-def]
        def __lt__(self, other) -> bool:
        ^
observability/rate_limiting_metrics.py:165: error: Function is missing a type
annotation  [no-untyped-def]
        def __init__(self, app):
        ^
observability/rate_limiting_metrics.py:169: error: Function is missing a type
annotation  [no-untyped-def]
        async def __call__(self, scope, receive, send):
        ^
observability/rate_limiting_metrics.py:180: error: Function is missing a type
annotation  [no-untyped-def]
                async def send_wrapper(message):
                ^
knowledge_graph/graph_engine.py:64: error: Function is missing a return type
annotation  [no-untyped-def]
        def update(self, properties: Dict[str, Any]):
        ^
knowledge_graph/graph_engine.py:168: error: Call to untyped function
"_update_version" in typed context  [no-untyped-call]
            self._update_version()
            ^~~~~~~~~~~~~~~~~~~~~~
knowledge_graph/graph_engine.py:201: error: Call to untyped function
"_update_version" in typed context  [no-untyped-call]
            self._update_version()
            ^~~~~~~~~~~~~~~~~~~~~~
knowledge_graph/graph_engine.py:232: error: Call to untyped function
"_update_version" in typed context  [no-untyped-call]
            self._update_version()
            ^~~~~~~~~~~~~~~~~~~~~~
knowledge_graph/graph_engine.py:269: error: Call to untyped function
"_update_version" in typed context  [no-untyped-call]
            self._update_version()
            ^~~~~~~~~~~~~~~~~~~~~~
knowledge_graph/graph_engine.py:385: error: Function is missing a return type
annotation  [no-untyped-def]
        def merge(
        ^
knowledge_graph/graph_engine.py:496: error: Function is missing a return type
annotation  [no-untyped-def]
        def save_to_file(self, filepath: str):
        ^
knowledge_graph/graph_engine.py:548: error: Function is missing a return type
annotation  [no-untyped-def]
        def _update_version(self):
        ^
knowledge_graph/graph_engine.py:548: note: Use "-> None" if function does not return a value
inference/active/gmn_parser.py:84: error: Missing type parameters for generic
type "Dict"  [type-arg]
        def validate(gmn_dict: Dict) -> Tuple[bool, List[str]]:
                               ^
inference/active/gmn_parser.py:136: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
inference/active/gmn_parser.py:136: note: Use "-> None" if function does not return a value
inference/active/gmn_parser.py:631: error: Call to untyped function "GMNParser"
in typed context  [no-untyped-call]
        parser = GMNParser()
                 ^~~~~~~~~~~
agents/pymdp_error_handling.py:73: error: Missing type parameters for generic
type "Callable"  [type-arg]
            operation_func: Callable,
                            ^
agents/pymdp_error_handling.py:74: error: Missing type parameters for generic
type "Callable"  [type-arg]
            fallback_func: Optional[Callable] = None,
                                    ^
agents/pymdp_adapter.py:28: error: Function is missing a return type annotation
 [no-untyped-def]
        def __init__(self):
        ^
agents/pymdp_adapter.py:28: note: Use "-> None" if function does not return a value
agents/pymdp_adapter.py:187: error: Function is missing a type annotation for
one or more arguments  [no-untyped-def]
        def _process_beliefs_result(
        ^
agents/optimized_threadpool_manager.py:28: error: Incompatible types in
assignment (expression has type "None", variable has type "float")  [assignment]
        timestamp: float = None
                           ^~~~
agents/optimized_threadpool_manager.py:30: error: Function is missing a return
type annotation  [no-untyped-def]
        def __post_init__(self):
        ^
agents/optimized_threadpool_manager.py:30: note: Use "-> None" if function does not return a value
agents/optimized_threadpool_manager.py:107: error: Missing type parameters for
generic type "PriorityQueue"  [type-arg]
            self.priority_queue: queue.PriorityQueue = queue.PriorityQueue...
                                 ^
agents/optimized_threadpool_manager.py:110: error: Missing type parameters for
generic type "Future"  [type-arg]
            self.active_futures: Dict[Future, AgentTask] = {}
                                      ^
agents/optimized_threadpool_manager.py:161: error: Missing type parameters for
generic type "Future"  [type-arg]
        ) -> Future:
             ^
agents/optimized_threadpool_manager.py:186: error: Function is missing a return
type annotation  [no-untyped-def]
            def execute_task():
            ^
agents/optimized_threadpool_manager.py:422: error: Function is missing a return
type annotation  [no-untyped-def]
    def benchmark_threadpool_manager():
    ^
agents/optimized_threadpool_manager.py:432: error: Function is missing a type
annotation  [no-untyped-def]
            def __init__(self, agent_id):
            ^
agents/optimized_threadpool_manager.py:436: error: Function is missing a type
annotation  [no-untyped-def]
            def step(self, observation):
            ^
agents/optimized_threadpool_manager.py:457: error: Call to untyped function
"MockPyMDPAgent" in typed context  [no-untyped-call]
                    agent = MockPyMDPAgent(f"agent-{i}")
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/optimized_threadpool_manager.py:499: error: Call to untyped function
"benchmark_threadpool_manager" in typed context  [no-untyped-call]
        benchmark_threadpool_manager()
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/hard_failure_handlers.py:146: error: Function is missing a return type
annotation  [no-untyped-def]
    def safe_pymdp_operation_hard_failure(
    ^
agents/hard_failure_handlers.py:151: error: Function is missing a type
annotation  [no-untyped-def]
        def decorator(func):
        ^
agents/hard_failure_handlers.py:152: error: Function is missing a type
annotation  [no-untyped-def]
            def wrapper(*args, **kwargs):
            ^
agents/hard_failure_handlers.py:218: error: Function is missing a return type
annotation  [no-untyped-def]
    def with_error_handling_hard_failure(
    ^
agents/hard_failure_handlers.py:223: error: Function is missing a type
annotation  [no-untyped-def]
        def decorator(func):
        ^
agents/hard_failure_handlers.py:224: error: Function is missing a type
annotation  [no-untyped-def]
            def wrapper(*args, **kwargs):
            ^
agents/fallback_handlers.py:131: error: Function is missing a return type
annotation  [no-untyped-def]
    def safe_pymdp_operation_fallback(
    ^
agents/fallback_handlers.py:136: error: Function is missing a type annotation
[no-untyped-def]
        def decorator(func):
        ^
agents/fallback_handlers.py:137: error: Function is missing a type annotation
[no-untyped-def]
            def wrapper(*args, **kwargs):
            ^
agents/fallback_handlers.py:167: error: Function is missing a return type
annotation  [no-untyped-def]
    def with_error_handling_fallback(
    ^
agents/fallback_handlers.py:172: error: Function is missing a type annotation
[no-untyped-def]
        def decorator(func):
        ^
agents/fallback_handlers.py:173: error: Function is missing a type annotation
[no-untyped-def]
            def wrapper(*args, **kwargs):
            ^
agents/memory_optimization/memory_profiler.py:34: error: Incompatible types in
assignment (expression has type "None", variable has type Module)  [assignment]
        psutil = None
                 ^~~~
agents/memory_optimization/memory_profiler.py:63: error: Missing type
parameters for generic type "deque"  [type-arg]
        allocations: deque = field(default_factory=lambda: deque(maxlen=10...
                     ^
agents/memory_optimization/memory_profiler.py:65: error: Function is missing a
return type annotation  [no-untyped-def]
        def __post_init__(self):
        ^
agents/memory_optimization/memory_profiler.py:65: note: Use "-> None" if function does not return a value
agents/memory_optimization/memory_profiler.py:70: error: Function is missing a
return type annotation  [no-untyped-def]
        def record_allocation(self, size: int):
        ^
agents/memory_optimization/memory_profiler.py:78: error: Function is missing a
return type annotation  [no-untyped-def]
        def record_deallocation(self, size: int):
        ^
agents/memory_optimization/memory_profiler.py:110: error: Need type annotation
for "snapshots"  [var-annotated]
            self.snapshots = deque(maxlen=max_snapshots)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/memory_optimization/memory_profiler.py:115: error: Missing type
parameters for generic type "WeakValueDictionary"  [type-arg]
            self._agent_objects: weakref.WeakValueDictionary = (
                                 ^
agents/memory_optimization/memory_profiler.py:138: error: Function is missing a
return type annotation  [no-untyped-def]
        def start_monitoring(self):
        ^
agents/memory_optimization/memory_profiler.py:138: note: Use "-> None" if function does not return a value
agents/memory_optimization/memory_profiler.py:150: error: Function is missing a
return type annotation  [no-untyped-def]
        def stop_monitoring(self):
        ^
agents/memory_optimization/memory_profiler.py:150: note: Use "-> None" if function does not return a value
agents/memory_optimization/memory_profiler.py:157: error: Function is missing a
return type annotation  [no-untyped-def]
        def _monitor_loop(self):
        ^
agents/memory_optimization/memory_profiler.py:157: note: Use "-> None" if function does not return a value
agents/memory_optimization/memory_profiler.py:162: error: Call to untyped
function "_detect_memory_leaks" in typed context  [no-untyped-call]
                    self._detect_memory_leaks()
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/memory_optimization/memory_profiler.py:167: error: Function is missing a
return type annotation  [no-untyped-def]
        def register_agent(self, agent_id: str, agent_object: Any):
        ^
agents/memory_optimization/memory_profiler.py:178: error: Function is missing a
return type annotation  [no-untyped-def]
        def unregister_agent(self, agent_id: str):
        ^
agents/memory_optimization/memory_profiler.py:189: error: Function is missing a
return type annotation  [no-untyped-def]
        def profile_operation(self, operation_name: str):
        ^
agents/memory_optimization/memory_profiler.py:300: error: Incompatible types in
assignment (expression has type "MemorySnapshot", variable has type "Snapshot")
[assignment]
                snapshot = MemorySnapshot(
                           ^
agents/memory_optimization/memory_profiler.py:318: error: Incompatible return
value type (got "Snapshot", expected "MemorySnapshot")  [return-value]
                return snapshot
                       ^~~~~~~~
agents/memory_optimization/memory_profiler.py:341: error: Function is missing a
return type annotation  [no-untyped-def]
        def _detect_memory_leaks(self):
        ^
agents/memory_optimization/memory_profiler.py:341: note: Use "-> None" if function does not return a value
agents/memory_optimization/memory_profiler.py:511: error: Function is missing a
return type annotation  [no-untyped-def]
        def shutdown(self):
        ^
agents/memory_optimization/memory_profiler.py:511: note: Use "-> None" if function does not return a value
agents/memory_optimization/memory_profiler.py:513: error: Call to untyped
function "stop_monitoring" in typed context  [no-untyped-call]
            self.stop_monitoring()
            ^~~~~~~~~~~~~~~~~~~~~~
agents/memory_optimization/matrix_pooling.py:35: error: Function is missing a
return type annotation  [no-untyped-def]
        def __post_init__(self):
        ^
agents/memory_optimization/matrix_pooling.py:35: note: Use "-> None" if function does not return a value
agents/memory_optimization/matrix_pooling.py:73: error: Incompatible default
for argument "dtype" (default has type "type[floating[Any]]", argument has type
"dtype[Any]")  [assignment]
            dtype: np.dtype = np.float32,
                              ^~~~~~~~~~
agents/memory_optimization/matrix_pooling.py:101: error: Call to untyped
function "_preallocate" in typed context  [no-untyped-call]
            self._preallocate()
            ^~~~~~~~~~~~~~~~~~~
agents/memory_optimization/matrix_pooling.py:103: error: Function is missing a
return type annotation  [no-untyped-def]
        def _preallocate(self):
        ^
agents/memory_optimization/matrix_pooling.py:103: note: Use "-> None" if function does not return a value
agents/memory_optimization/matrix_pooling.py:163: error: Function is missing a
return type annotation  [no-untyped-def]
        def release(self, matrix: PooledMatrix):
        ^
agents/memory_optimization/matrix_pooling.py:196: error: Function is missing a
return type annotation  [no-untyped-def]
        def clear(self):
        ^
agents/memory_optimization/matrix_pooling.py:196: note: Use "-> None" if function does not return a value
agents/memory_optimization/matrix_pooling.py:225: error: Missing type
parameters for generic type "deque"  [type-arg]
            self._temp_matrices: Dict[str, deque] = defaultdict(deque)
                                           ^
agents/memory_optimization/matrix_pooling.py:236: error: Incompatible default
for argument "dtype" (default has type "type[floating[Any]]", argument has type
"dtype[Any]")  [assignment]
            self, shape: Tuple[int, ...], dtype: np.dtype = np.float32
                                                            ^~~~~~~~~~
agents/memory_optimization/matrix_pooling.py:269: error: Unsupported operand
types for + ("object" and "int")  [operator]
                    self.global_stats["total_pools"] += 1
                    ^
agents/memory_optimization/matrix_pooling.py:277: error: Function is missing a
return type annotation  [no-untyped-def]
        def allocate_matrix(
        ^
agents/memory_optimization/matrix_pooling.py:278: error: Incompatible default
for argument "dtype" (default has type "type[floating[Any]]", argument has type
"dtype[Any]")  [assignment]
            self, shape: Tuple[int, ...], dtype: np.dtype = np.float32
                                                            ^~~~~~~~~~
agents/memory_optimization/matrix_pooling.py:298: error: Function is missing a
return type annotation  [no-untyped-def]
        def allocate_einsum_operands(
        ^
agents/memory_optimization/matrix_pooling.py:299: error: Incompatible default
for argument "dtype" (default has type "type[floating[Any]]", argument has type
"dtype[Any]")  [assignment]
            self, *shapes: Tuple[int, ...], dtype: np.dtype = np.float32
                                                              ^~~~~~~~~~
agents/memory_optimization/matrix_pooling.py:332: error: Missing type
parameters for generic type "NDArray"  [type-arg]
            *operands: NDArray,
                       ^
agents/memory_optimization/matrix_pooling.py:334: error: Missing type
parameters for generic type "NDArray"  [type-arg]
        ) -> NDArray:
             ^
agents/memory_optimization/matrix_pooling.py:346: error: Value of type "object"
is not indexable  [index]
                self.global_stats["operation_counts"][operation] += 1
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/memory_optimization/matrix_pooling.py:346: error: Unsupported target for
indexed assignment ("object")  [index]
                self.global_stats["operation_counts"][operation] += 1
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/memory_optimization/matrix_pooling.py:357: error: Returning Any from
function declared to return "ndarray[tuple[Any, ...], dtype[Any]]"
[no-any-return]
                    return np.dot(a, b)
                    ^~~~~~~~~~~~~~~~~~~
agents/memory_optimization/matrix_pooling.py:370: error: Returning Any from
function declared to return "ndarray[tuple[Any, ...], dtype[Any]]"
[no-any-return]
                    return out.copy()  # Return copy to avoid pool corrupt...
                    ^~~~~~~~~~~~~~~~~
agents/memory_optimization/matrix_pooling.py:380: error: Returning Any from
function declared to return "ndarray[tuple[Any, ...], dtype[Any]]"
[no-any-return]
                    return np.dot(a, b)
                    ^~~~~~~~~~~~~~~~~~~
agents/memory_optimization/matrix_pooling.py:386: error: Returning Any from
function declared to return "ndarray[tuple[Any, ...], dtype[Any]]"
[no-any-return]
                    return result
                    ^~~~~~~~~~~~~
agents/memory_optimization/matrix_pooling.py:390: error: Returning Any from
function declared to return "ndarray[tuple[Any, ...], dtype[Any]]"
[no-any-return]
                    return out.copy()
                    ^~~~~~~~~~~~~~~~~
agents/memory_optimization/matrix_pooling.py:406: error: Returning Any from
function declared to return "ndarray[tuple[Any, ...], dtype[Any]]"
[no-any-return]
                    return result
                    ^~~~~~~~~~~~~
agents/memory_optimization/matrix_pooling.py:410: error: Returning Any from
function declared to return "ndarray[tuple[Any, ...], dtype[Any]]"
[no-any-return]
                        return out.copy()
                        ^~~~~~~~~~~~~~~~~
agents/memory_optimization/matrix_pooling.py:444: error: Function is missing a
return type annotation  [no-untyped-def]
        def clear_all(self):
        ^
agents/memory_optimization/matrix_pooling.py:444: note: Use "-> None" if function does not return a value
agents/memory_optimization/matrix_pooling.py:448: error: Call to untyped
function "clear" in typed context  [no-untyped-call]
                    pool.clear()
                    ^~~~~~~~~~~~
agents/memory_optimization/matrix_pooling.py:477: error: Function is missing a
return type annotation  [no-untyped-def]
    def pooled_matrix(shape: Tuple[int, ...], dtype: np.dtype = np.float32...
    ^
agents/memory_optimization/matrix_pooling.py:477: error: Incompatible default
for argument "dtype" (default has type "type[floating[Any]]", argument has type
"dtype[Any]")  [assignment]
    ...f pooled_matrix(shape: Tuple[int, ...], dtype: np.dtype = np.float32):
                                                                 ^~~~~~~~~~
agents/memory_optimization/matrix_pooling.py:492: error: Missing type
parameters for generic type "NDArray"  [type-arg]
    def pooled_dot(a: NDArray, b: NDArray) -> NDArray:
                      ^
agents/memory_optimization/matrix_pooling.py:506: error: Missing type
parameters for generic type "NDArray"  [type-arg]
    def pooled_matmul(a: NDArray, b: NDArray) -> NDArray:
                         ^
agents/memory_optimization/matrix_pooling.py:520: error: Missing type
parameters for generic type "NDArray"  [type-arg]
    def pooled_einsum(subscripts: str, *operands: NDArray) -> NDArray:
                                                  ^
agents/memory_optimization/matrix_pooling.py:531: error: Argument 2 to
"optimize_matrix_operation" of "MatrixOperationPool" has incompatible type
"str"; expected "ndarray[tuple[Any, ...], dtype[Any]]"  [arg-type]
    ... return pool.optimize_matrix_operation("einsum", subscripts, *operands...
                                                        ^~~~~~~~~~
agents/memory_optimization/enhanced_memory_profiler.py:33: error: Incompatible
types in assignment (expression has type "None", variable has type Module)
[assignment]
        psutil = None
                 ^~~~
agents/memory_optimization/enhanced_memory_profiler.py:112: error: Need type
annotation for "snapshots"  [var-annotated]
            self.snapshots = deque(maxlen=100)
                             ^~~~~~~~~~~~~~~~~
agents/memory_optimization/enhanced_memory_profiler.py:113: error: Need type
annotation for "hotspots" (hint: "hotspots: list[<type>] = ...")
[var-annotated]
            self.hotspots = []
            ^~~~~~~~~~~~~
agents/memory_optimization/enhanced_memory_profiler.py:128: error: Missing type
parameters for generic type "deque"  [type-arg]
            self._allocation_trends: Dict[str, deque] = defaultdict(
                                               ^
agents/memory_optimization/enhanced_memory_profiler.py:140: error: Function is
missing a return type annotation  [no-untyped-def]
        def start_profiling(self, tools: List[str] = None):
        ^
agents/memory_optimization/enhanced_memory_profiler.py:140: error: Incompatible
default for argument "tools" (default has type "None", argument has type
"list[str]")  [assignment]
        def start_profiling(self, tools: List[str] = None):
                                                     ^~~~
agents/memory_optimization/enhanced_memory_profiler.py:140: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
agents/memory_optimization/enhanced_memory_profiler.py:140: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
agents/memory_optimization/enhanced_memory_profiler.py:175: error: Function is
missing a return type annotation  [no-untyped-def]
        def stop_profiling(self):
        ^
agents/memory_optimization/enhanced_memory_profiler.py:175: note: Use "-> None" if function does not return a value
agents/memory_optimization/enhanced_memory_profiler.py:196: error: Function is
missing a return type annotation  [no-untyped-def]
        def start_monitoring(self):
        ^
agents/memory_optimization/enhanced_memory_profiler.py:196: note: Use "-> None" if function does not return a value
agents/memory_optimization/enhanced_memory_profiler.py:209: error: Function is
missing a return type annotation  [no-untyped-def]
        def _monitor_loop(self):
        ^
agents/memory_optimization/enhanced_memory_profiler.py:209: note: Use "-> None" if function does not return a value
agents/memory_optimization/enhanced_memory_profiler.py:215: error: Call to
untyped function "_detect_memory_leaks" in typed context  [no-untyped-call]
                    self._detect_memory_leaks()
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/memory_optimization/enhanced_memory_profiler.py:346: error: Need type
annotation for "hotspots" (hint: "hotspots: list[<type>] = ...")
[var-annotated]
                hotspots = []
                ^~~~~~~~
agents/memory_optimization/enhanced_memory_profiler.py:403: error: Function is
missing a return type annotation  [no-untyped-def]
        def _detect_memory_leaks(self):
        ^
agents/memory_optimization/enhanced_memory_profiler.py:403: note: Use "-> None" if function does not return a value
agents/memory_optimization/enhanced_memory_profiler.py:428: error: Function is
missing a return type annotation  [no-untyped-def]
        def register_agent(self, agent_id: str, agent_obj: Any):
        ^
agents/memory_optimization/enhanced_memory_profiler.py:450: error: Function is
missing a return type annotation  [no-untyped-def]
        def update_agent_memory(self, agent_id: str, agent_obj: Any):
        ^
agents/memory_optimization/enhanced_memory_profiler.py:491: error: Returning
Any from function declared to return "float"  [no-any-return]
                    return asizeof.asizeof(agent_obj) / 1024 / 1024
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/memory_optimization/enhanced_memory_profiler.py:573: error: Function is
missing a return type annotation  [no-untyped-def]
        def profile_operation(self, operation_name: str):
        ^
agents/memory_optimization/belief_compression.py:265: error: Missing type
parameters for generic type "deque"  [type-arg]
            self.available: deque = deque(maxlen=pool_size)
                            ^
agents/memory_optimization/belief_compression.py:269: error: Call to untyped
function "_initialize_pool" in typed context  [no-untyped-call]
            self._initialize_pool()
            ^~~~~~~~~~~~~~~~~~~~~~~
agents/memory_optimization/belief_compression.py:271: error: Function is
missing a return type annotation  [no-untyped-def]
        def _initialize_pool(self):
        ^
agents/memory_optimization/belief_compression.py:271: note: Use "-> None" if function does not return a value
agents/memory_optimization/belief_compression.py:322: error: Function is
missing a return type annotation  [no-untyped-def]
        def clear(self):
        ^
agents/memory_optimization/belief_compression.py:322: note: Use "-> None" if function does not return a value
agents/memory_optimization/belief_compression.py:326: error: Call to untyped
function "_initialize_pool" in typed context  [no-untyped-call]
            self._initialize_pool()
            ^~~~~~~~~~~~~~~~~~~~~~~
websocket/circuit_breaker.py:97: error: Missing type parameters for generic
type "Callable"  [type-arg]
            self._listeners: List[Callable] = []
                                  ^
websocket/circuit_breaker.py:103: error: Call to untyped function
"_check_timeout" in typed context  [no-untyped-call]
            self._check_timeout()
            ^~~~~~~~~~~~~~~~~~~~~
websocket/circuit_breaker.py:125: error: Call to untyped function
"_check_timeout" in typed context  [no-untyped-call]
            self._check_timeout()
            ^~~~~~~~~~~~~~~~~~~~~
websocket/circuit_breaker.py:172: error: Call to untyped function
"_record_success" in typed context  [no-untyped-call]
                self._record_success()
                ^~~~~~~~~~~~~~~~~~~~~~
websocket/circuit_breaker.py:176: error: Call to untyped function
"_record_failure" in typed context  [no-untyped-call]
                    self._record_failure()
                    ^~~~~~~~~~~~~~~~~~~~~~
websocket/circuit_breaker.py:210: error: Call to untyped function
"_record_success" in typed context  [no-untyped-call]
                self._record_success()
                ^~~~~~~~~~~~~~~~~~~~~~
websocket/circuit_breaker.py:214: error: Call to untyped function
"_record_failure" in typed context  [no-untyped-call]
                    self._record_failure()
                    ^~~~~~~~~~~~~~~~~~~~~~
websocket/circuit_breaker.py:217: error: Function is missing a return type
annotation  [no-untyped-def]
        def _record_success(self):
        ^
websocket/circuit_breaker.py:217: note: Use "-> None" if function does not return a value
websocket/circuit_breaker.py:227: error: Function is missing a return type
annotation  [no-untyped-def]
        def _record_failure(self):
        ^
websocket/circuit_breaker.py:227: note: Use "-> None" if function does not return a value
websocket/circuit_breaker.py:239: error: Function is missing a return type
annotation  [no-untyped-def]
        def _check_timeout(self):
        ^
websocket/circuit_breaker.py:239: note: Use "-> None" if function does not return a value
websocket/circuit_breaker.py:246: error: Function is missing a return type
annotation  [no-untyped-def]
        def _transition_to(self, new_state: CircuitState):
        ^
websocket/circuit_breaker.py:272: error: Function is missing a return type
annotation  [no-untyped-def]
        def add_listener(
        ^
websocket/circuit_breaker.py:278: error: Function is missing a return type
annotation  [no-untyped-def]
        def remove_listener(
        ^
websocket/circuit_breaker.py:285: error: Function is missing a return type
annotation  [no-untyped-def]
        def _notify_listeners(
        ^
websocket/circuit_breaker.py:295: error: Function is missing a return type
annotation  [no-untyped-def]
        def reset(self):
        ^
websocket/circuit_breaker.py:295: note: Use "-> None" if function does not return a value
websocket/circuit_breaker.py:303: error: Missing type parameters for generic
type "dict"  [type-arg]
        def get_status(self) -> dict:
                                ^
websocket/circuit_breaker.py:324: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
websocket/circuit_breaker.py:324: note: Use "-> None" if function does not return a value
websocket/circuit_breaker.py:327: error: Function is missing a return type
annotation  [no-untyped-def]
        def register(self, breaker: CircuitBreaker):
        ^
websocket/circuit_breaker.py:339: error: Missing type parameters for generic
type "dict"  [type-arg]
        def get_status_all(self) -> dict[str, dict]:
                                              ^
websocket/circuit_breaker.py:346: error: Function is missing a return type
annotation  [no-untyped-def]
        def reset_all(self):
        ^
websocket/circuit_breaker.py:346: note: Use "-> None" if function does not return a value
websocket/circuit_breaker.py:349: error: Call to untyped function "reset" in
typed context  [no-untyped-call]
                breaker.reset()
                ^~~~~~~~~~~~~~~
websocket/circuit_breaker.py:353: error: Call to untyped function
"CircuitBreakerRegistry" in typed context  [no-untyped-call]
    circuit_breaker_registry = CircuitBreakerRegistry()
                               ^~~~~~~~~~~~~~~~~~~~~~~~
security/owasp_assessment.py:36: error: Function is missing a return type
annotation  [no-untyped-def]
        def add_finding(
        ^
security/owasp_assessment.py:60: error: Function is missing a return type
annotation  [no-untyped-def]
        def test_a01_broken_access_control(self):
        ^
security/owasp_assessment.py:60: note: Use "-> None" if function does not return a value
security/owasp_assessment.py:103: error: Function is missing a return type
annotation  [no-untyped-def]
        def test_a02_cryptographic_failures(self):
        ^
security/owasp_assessment.py:103: note: Use "-> None" if function does not return a value
security/owasp_assessment.py:150: error: Function is missing a return type
annotation  [no-untyped-def]
        def test_a03_injection(self):
        ^
security/owasp_assessment.py:150: note: Use "-> None" if function does not return a value
security/owasp_assessment.py:231: error: Function is missing a return type
annotation  [no-untyped-def]
        def test_a04_insecure_design(self):
        ^
security/owasp_assessment.py:231: note: Use "-> None" if function does not return a value
security/owasp_assessment.py:269: error: Function is missing a return type
annotation  [no-untyped-def]
        def test_a05_security_misconfiguration(self):
        ^
security/owasp_assessment.py:269: note: Use "-> None" if function does not return a value
security/owasp_assessment.py:343: error: Function is missing a return type
annotation  [no-untyped-def]
        def test_a06_vulnerable_components(self):
        ^
security/owasp_assessment.py:343: note: Use "-> None" if function does not return a value
security/owasp_assessment.py:356: error: Function is missing a return type
annotation  [no-untyped-def]
        def test_a07_auth_failures(self):
        ^
security/owasp_assessment.py:356: note: Use "-> None" if function does not return a value
security/owasp_assessment.py:401: error: Function is missing a return type
annotation  [no-untyped-def]
        def test_a08_software_integrity(self):
        ^
security/owasp_assessment.py:401: note: Use "-> None" if function does not return a value
security/owasp_assessment.py:411: error: Function is missing a return type
annotation  [no-untyped-def]
        def test_a09_logging_monitoring(self):
        ^
security/owasp_assessment.py:411: note: Use "-> None" if function does not return a value
security/owasp_assessment.py:437: error: Function is missing a return type
annotation  [no-untyped-def]
        def test_a10_ssrf(self):
        ^
security/owasp_assessment.py:437: note: Use "-> None" if function does not return a value
security/owasp_assessment.py:459: error: Need type annotation for
"category_counts" (hint: "category_counts: dict[<type>, <type>] = ...")
[var-annotated]
            category_counts = {}
            ^~~~~~~~~~~~~~~
security/owasp_assessment.py:476: error: Function is missing a return type
annotation  [no-untyped-def]
        def run_assessment(self):
        ^
security/owasp_assessment.py:486: error: Call to untyped function
"test_a01_broken_access_control" in typed context  [no-untyped-call]
            self.test_a01_broken_access_control()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/owasp_assessment.py:487: error: Call to untyped function
"test_a02_cryptographic_failures" in typed context  [no-untyped-call]
            self.test_a02_cryptographic_failures()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/owasp_assessment.py:488: error: Call to untyped function
"test_a03_injection" in typed context  [no-untyped-call]
            self.test_a03_injection()
            ^~~~~~~~~~~~~~~~~~~~~~~~~
security/owasp_assessment.py:489: error: Call to untyped function
"test_a04_insecure_design" in typed context  [no-untyped-call]
            self.test_a04_insecure_design()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/owasp_assessment.py:490: error: Call to untyped function
"test_a05_security_misconfiguration" in typed context  [no-untyped-call]
            self.test_a05_security_misconfiguration()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/owasp_assessment.py:491: error: Call to untyped function
"test_a06_vulnerable_components" in typed context  [no-untyped-call]
            self.test_a06_vulnerable_components()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/owasp_assessment.py:492: error: Call to untyped function
"test_a07_auth_failures" in typed context  [no-untyped-call]
            self.test_a07_auth_failures()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/owasp_assessment.py:493: error: Call to untyped function
"test_a08_software_integrity" in typed context  [no-untyped-call]
            self.test_a08_software_integrity()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/owasp_assessment.py:494: error: Call to untyped function
"test_a09_logging_monitoring" in typed context  [no-untyped-call]
            self.test_a09_logging_monitoring()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/owasp_assessment.py:495: error: Call to untyped function
"test_a10_ssrf" in typed context  [no-untyped-call]
            self.test_a10_ssrf()
            ^~~~~~~~~~~~~~~~~~~~
security/owasp_assessment.py:524: error: Function is missing a return type
annotation  [no-untyped-def]
    def main():
    ^
security/owasp_assessment.py:524: note: Use "-> None" if function does not return a value
security/owasp_assessment.py:547: error: Call to untyped function
"run_assessment" in typed context  [no-untyped-call]
        report = assessor.run_assessment()
                 ^~~~~~~~~~~~~~~~~~~~~~~~~
security/owasp_assessment.py:555: error: Call to untyped function "main" in
typed context  [no-untyped-call]
        main()
        ^~~~~~
security/soar/playbook_engine.py:268: error: Need type annotation for
"forensic_data" (hint: "forensic_data: dict[<type>, <type>] = ...")
[var-annotated]
                forensic_data = {}
                ^~~~~~~~~~~~~
security/soar/playbook_engine.py:382: error: Need type annotation for
"active_executions" (hint: "active_executions: dict[<type>, <type>] = ...")
[var-annotated]
            self.active_executions = {}
            ^~~~~~~~~~~~~~~~~~~~~~
security/soar/playbook_engine.py:383: error: Need type annotation for
"execution_history" (hint: "execution_history: list[<type>] = ...")
[var-annotated]
            self.execution_history = []
            ^~~~~~~~~~~~~~~~~~~~~~
security/soar/playbook_engine.py:392: error: Need type annotation for
"playbooks" (hint: "playbooks: dict[<type>, <type>] = ...")  [var-annotated]
            self.playbooks = {}
            ^~~~~~~~~~~~~~
security/soar/playbook_engine.py:393: error: Call to untyped function
"_load_playbooks" in typed context  [no-untyped-call]
            self._load_playbooks()
            ^~~~~~~~~~~~~~~~~~~~~~
security/soar/playbook_engine.py:395: error: Function is missing a return type
annotation  [no-untyped-def]
        def _load_playbooks(self):
        ^
security/soar/playbook_engine.py:395: note: Use "-> None" if function does not return a value
security/soar/playbook_engine.py:413: error: Function is missing a return type
annotation  [no-untyped-def]
        def register_action(self, action_type: str, action_class: type):
        ^
security/soar/playbook_engine.py:415: error: Incompatible types in assignment
(expression has type "type", target has type "type[PlaybookAction]")
[assignment]
            self.action_registry[action_type] = action_class
                                                ^~~~~~~~~~~~
security/soar/playbook_engine.py:415: note: "type.__call__" has type "Callable[[VarArg(Any), KwArg(Any)], Any]"
security/soar/playbook_engine.py:513: error: Cannot instantiate abstract class
"PlaybookAction" with abstract attribute "execute"  [abstract]
                action = action_class(action_id, action_config)
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/soar/playbook_engine.py:554: error: Returning Any from function
declared to return "PlaybookContext | None"  [no-any-return]
                    return self.active_executions[execution_id]
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/soar/playbook_engine.py:559: error: Returning Any from function
declared to return "PlaybookContext | None"  [no-any-return]
                        return context
                        ^~~~~~~~~~~~~~
security/soar/playbook_engine.py:652: error: Function is missing a return type
annotation  [no-untyped-def]
    def save_example_playbook(playbook_dir: str = "./playbooks"):
    ^
security/encryption/quantum_resistant.py:210: error: Call to untyped function
"_setup_keys" in typed context  [no-untyped-call]
            self._setup_keys()
            ^~~~~~~~~~~~~~~~~~
security/encryption/quantum_resistant.py:212: error: Function is missing a
return type annotation  [no-untyped-def]
        def _setup_keys(self):
        ^
security/encryption/quantum_resistant.py:212: note: Use "-> None" if function does not return a value
security/encryption/quantum_resistant.py:217: error: Incompatible types in
assignment (expression has type "bytes", variable has type "None")  [assignment]
            self.private_key = os.urandom(32)
                               ^~~~~~~~~~~~~~
security/encryption/quantum_resistant.py:218: error: Incompatible types in
assignment (expression has type "bytes", variable has type "None")  [assignment]
            self.public_key = hashlib.sha256(self.private_key).digest()
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/encryption/quantum_resistant.py:218: error: Argument 1 to "sha256" has
incompatible type "None"; expected "Buffer"  [arg-type]
            self.public_key = hashlib.sha256(self.private_key).digest()
                                             ^~~~~~~~~~~~~~~~
security/encryption/field_encryptor.py:115: error: Call to untyped function
"_cleanup_cache" in typed context  [no-untyped-call]
                    self._cleanup_cache()
                    ^~~~~~~~~~~~~~~~~~~~~
security/encryption/field_encryptor.py:142: error: Function is missing a return
type annotation  [no-untyped-def]
        def _cleanup_cache(self):
        ^
security/encryption/field_encryptor.py:142: note: Use "-> None" if function does not return a value
security/encryption/field_encryptor.py:162: error: Call to untyped function
"_ensure_transit_engine" in typed context  [no-untyped-call]
            self._ensure_transit_engine()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/encryption/field_encryptor.py:164: error: Function is missing a return
type annotation  [no-untyped-def]
        def _ensure_transit_engine(self):
        ^
security/encryption/field_encryptor.py:164: note: Use "-> None" if function does not return a value
security/encryption/field_encryptor.py:270: error: Function is missing a return
type annotation  [no-untyped-def]
        def _track_performance(self, operation: str):
        ^
security/encryption/field_encryptor.py:479: error: Function is missing a return
type annotation  [no-untyped-def]
        def clear_cache(self):
        ^
security/encryption/field_encryptor.py:479: note: Use "-> None" if function does not return a value
security/encryption/field_encryptor.py:494: error: Function is missing a return
type annotation  [no-untyped-def]
        def encrypted_field(self, field_name: str, key_id: Optional[str] =...
        ^
security/encryption/field_encryptor.py:499: error: Function is missing a type
annotation  [no-untyped-def]
            def decorator(prop):
            ^
security/encryption/field_encryptor.py:501: error: Function is missing a type
annotation  [no-untyped-def]
                def getter(instance):
                ^
security/encryption/field_encryptor.py:512: error: Function is missing a type
annotation  [no-untyped-def]
                def setter(instance, value):
                ^
security/encryption/field_encryptor.py:527: error: Function is missing a return
type annotation  [no-untyped-def]
        def encrypt_model_fields(self, fields_config: Dict[str, Optional[s...
        ^
security/encryption/field_encryptor.py:535: error: Function is missing a return
type annotation  [no-untyped-def]
            def decorator(cls):
            ^
security/encryption/field_encryptor.py:538: error: Function is missing a type
annotation  [no-untyped-def]
                def new_init(instance, *args, **kwargs):
                ^
security/encryption/field_encryptor.py:569: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
    def create_field_encryptor(
    ^
observability/performance_monitor.py:115: error: Function is missing a return
type annotation  [no-untyped-def]
        def start_monitoring(self):
        ^
observability/performance_monitor.py:115: note: Use "-> None" if function does not return a value
observability/performance_monitor.py:121: error: Incompatible types in
assignment (expression has type "Thread", variable has type "None")
[assignment]
            self.monitor_thread = threading.Thread(
                                  ^
observability/performance_monitor.py:124: error: "None" has no attribute
"start"  [attr-defined]
            self.monitor_thread.start()
            ^~~~~~~~~~~~~~~~~~~~~~~~~
observability/performance_monitor.py:127: error: Function is missing a return
type annotation  [no-untyped-def]
        def stop_monitoring(self):
        ^
observability/performance_monitor.py:127: note: Use "-> None" if function does not return a value
observability/performance_monitor.py:134: error: Function is missing a return
type annotation  [no-untyped-def]
        def _monitor_loop(self):
        ^
observability/performance_monitor.py:134: note: Use "-> None" if function does not return a value
observability/performance_monitor.py:221: error: Function is missing a return
type annotation  [no-untyped-def]
                def cpu_work():
                ^
observability/performance_monitor.py:224: error: Incompatible types in
assignment (expression has type "float", variable has type "int")  [assignment]
                        result += math.sqrt(i)
                        ^~~~~~~~~~~~~~~~~~~~~~
observability/performance_monitor.py:230: error: Call to untyped function
"cpu_work" in typed context  [no-untyped-call]
                    cpu_work()
                    ^~~~~~~~~~
observability/performance_monitor.py:251: error: Function is missing a return
type annotation  [no-untyped-def]
        def _check_alerts(self, metrics: PerformanceMetrics):
        ^
observability/performance_monitor.py:271: error: Function is missing a return
type annotation  [no-untyped-def]
        def _add_alert(
        ^
observability/performance_monitor.py:295: error: Function is missing a return
type annotation  [no-untyped-def]
        def time_api_request(self):
        ^
observability/performance_monitor.py:308: error: Function is missing a return
type annotation  [no-untyped-def]
        def time_db_query(self):
        ^
observability/performance_monitor.py:320: error: Function is missing a return
type annotation  [no-untyped-def]
        def time_agent_step(self):
        ^
observability/performance_monitor.py:333: error: Function is missing a return
type annotation  [no-untyped-def]
        def update_db_connections(self, count: int):
        ^
observability/performance_monitor.py:337: error: Function is missing a return
type annotation  [no-untyped-def]
        def update_db_pool_size(self, size: int):
        ^
observability/performance_monitor.py:341: error: Function is missing a return
type annotation  [no-untyped-def]
        def update_agent_count(self, count: int):
        ^
observability/performance_monitor.py:345: error: Function is missing a return
type annotation  [no-untyped-def]
        def update_agent_memory(self, memory_mb: float):
        ^
observability/performance_monitor.py:349: error: Function is missing a return
type annotation  [no-untyped-def]
        def update_websocket_connections(self, count: int):
        ^
observability/performance_monitor.py:353: error: Function is missing a return
type annotation  [no-untyped-def]
        def log_websocket_message(self):
        ^
observability/performance_monitor.py:353: note: Use "-> None" if function does not return a value
observability/performance_monitor.py:357: error: Function is missing a return
type annotation  [no-untyped-def]
        def update_api_error_rate(self, error_rate: float):
        ^
observability/performance_monitor.py:518: error: Function is missing a return
type annotation  [no-untyped-def]
        def force_garbage_collection(self):
        ^
observability/performance_monitor.py:557: error: Function is missing a return
type annotation  [no-untyped-def]
    def start_performance_monitoring():
    ^
observability/performance_monitor.py:557: note: Use "-> None" if function does not return a value
observability/performance_monitor.py:559: error: Call to untyped function
"start_monitoring" in typed context  [no-untyped-call]
        performance_monitor.start_monitoring()
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/performance_monitor.py:562: error: Function is missing a return
type annotation  [no-untyped-def]
    def stop_performance_monitoring():
    ^
observability/performance_monitor.py:562: note: Use "-> None" if function does not return a value
observability/performance_monitor.py:564: error: Call to untyped function
"stop_monitoring" in typed context  [no-untyped-call]
        performance_monitor.stop_monitoring()
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/distributed_tracing.py:37: error: Function is missing a return
type annotation  [no-untyped-def]
        def finish(self, status: str = "ok", error: Optional[str] = None):
        ^
observability/distributed_tracing.py:44: error: Function is missing a return
type annotation  [no-untyped-def]
        def add_tag(self, key: str, value: Any):
        ^
observability/distributed_tracing.py:48: error: Function is missing a return
type annotation  [no-untyped-def]
        def add_log(self, message: str, level: str = "info", **kwargs):
        ^
observability/distributed_tracing.py:48: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
        def add_log(self, message: str, level: str = "info", **kwargs):
        ^
observability/distributed_tracing.py:89: error: Function is missing a return
type annotation  [no-untyped-def]
        def add_span(self, span: TraceSpan):
        ^
observability/distributed_tracing.py:113: error: Function is missing a return
type annotation  [no-untyped-def]
        def finish(self):
        ^
observability/distributed_tracing.py:113: note: Use "-> None" if function does not return a value
observability/distributed_tracing.py:152: error: Function is missing a return
type annotation  [no-untyped-def]
        async def start(self):
        ^
observability/distributed_tracing.py:152: note: Use "-> None" if function does not return a value
observability/distributed_tracing.py:161: error: Incompatible types in
assignment (expression has type "Task[Any]", variable has type "None")
[assignment]
            self.cleanup_task = asyncio.create_task(self._cleanup_loop())
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/distributed_tracing.py:161: error: Call to untyped function
"_cleanup_loop" in typed context  [no-untyped-call]
            self.cleanup_task = asyncio.create_task(self._cleanup_loop())
                                                    ^~~~~~~~~~~~~~~~~~~~
observability/distributed_tracing.py:165: error: Function is missing a return
type annotation  [no-untyped-def]
        async def stop(self):
        ^
observability/distributed_tracing.py:165: note: Use "-> None" if function does not return a value
observability/distributed_tracing.py:235: error: Function is missing a return
type annotation  [no-untyped-def]
        def finish_span(
        ^
observability/distributed_tracing.py:255: error: Call to untyped function
"finish" in typed context  [no-untyped-call]
                    trace.finish()
                    ^~~~~~~~~~~~~~
observability/distributed_tracing.py:311: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _cleanup_loop(self):
        ^
observability/distributed_tracing.py:311: note: Use "-> None" if function does not return a value
observability/distributed_tracing.py:315: error: Call to untyped function
"_cleanup_old_traces" in typed context  [no-untyped-call]
                    await self._cleanup_old_traces()
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
observability/distributed_tracing.py:323: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _cleanup_old_traces(self):
        ^
observability/distributed_tracing.py:363: error: Function is missing a return
type annotation  [no-untyped-def]
    async def trace_span(
    ^
observability/distributed_tracing.py:383: error: Function is missing a type
annotation  [no-untyped-def]
        def __init__(self, *args, **kwargs):
        ^
observability/distributed_tracing.py:388: error: Function is missing a return
type annotation  [no-untyped-def]
        def set_tracer(self, tracer: DistributedTracer):
        ^
observability/distributed_tracing.py:392: error: Function is missing a return
type annotation  [no-untyped-def]
        async def trace_operation(
        ^
observability/distributed_tracing.py:392: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
        async def trace_operation(
        ^
observability/distributed_tracing.py:437: error: Function is missing a return
type annotation  [no-untyped-def]
    async def start_distributed_tracing(service_name: str = "freeagentics"...
    ^
observability/distributed_tracing.py:440: error: Call to untyped function
"start" in typed context  [no-untyped-call]
        await tracer.start()
              ^~~~~~~~~~~~~~
observability/distributed_tracing.py:444: error: Function is missing a return
type annotation  [no-untyped-def]
    async def stop_distributed_tracing():
    ^
observability/distributed_tracing.py:444: note: Use "-> None" if function does not return a value
observability/distributed_tracing.py:449: error: Call to untyped function
"stop" in typed context  [no-untyped-call]
            await _distributed_tracer.stop()
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~
observability/distributed_tracing.py:454: error: Function is missing a return
type annotation  [no-untyped-def]
    async def trace_agent_coordination(
    ^
observability/distributed_tracing.py:454: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
    async def trace_agent_coordination(
    ^
observability/distributed_tracing.py:482: error: Function is missing a return
type annotation  [no-untyped-def]
    async def trace_belief_update(
    ^
observability/distributed_tracing.py:482: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
    async def trace_belief_update(
    ^
observability/distributed_tracing.py:503: error: Function is missing a return
type annotation  [no-untyped-def]
    async def trace_inference_step(
    ^
observability/distributed_tracing.py:503: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
    async def trace_inference_step(
    ^
monitoring/performance_regression_detector.py:408: error: Function is missing a
return type annotation  [no-untyped-def]
        def save_report(self, report: RegressionReport, filename: str = No...
        ^
monitoring/performance_regression_detector.py:408: error: Incompatible default
for argument "filename" (default has type "None", argument has type "str")
[assignment]
    ...def save_report(self, report: RegressionReport, filename: str = None):
                                                                       ^~~~
monitoring/performance_regression_detector.py:408: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
monitoring/performance_regression_detector.py:408: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
monitoring/performance_regression_detector.py:426: error: Function is missing a
return type annotation  [no-untyped-def]
        def print_report(self, report: RegressionReport):
        ^
monitoring/performance_regression_detector.py:467: error: Function is missing a
return type annotation  [no-untyped-def]
    def main():
    ^
monitoring/performance_regression_detector.py:467: note: Use "-> None" if function does not return a value
monitoring/performance_regression_detector.py:531: error: Call to untyped
function "main" in typed context  [no-untyped-call]
        main()
        ^~~~~~
knowledge_graph/query.py:448: error: Function is missing a return type
annotation  [no-untyped-def]
            def trace_causal_chain(node_id: str, chain: List[str]):
            ^
knowledge_graph/query.py:606: error: Function is missing a return type
annotation  [no-untyped-def]
        def clear_cache(self):
        ^
knowledge_graph/query.py:606: note: Use "-> None" if function does not return a value
knowledge_graph/evolution.py:252: error: Missing type parameters for generic
type "frozenset"  [type-arg]
            property_groups: Dict[frozenset, List[Any]] = {}
                                  ^
knowledge_graph/evolution.py:673: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
knowledge_graph/evolution.py:673: note: Use "-> None" if function does not return a value
knowledge_graph/evolution.py:685: error: Function is missing a return type
annotation  [no-untyped-def]
        def add_operator(self, operator: MutationOperator):
        ^
inference/active/gmn_validation.py:64: error: Function is missing a return type
annotation  [no-untyped-def]
        def add_error(self, validator: str, message: str, **kwargs):
        ^
inference/active/gmn_validation.py:64: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
        def add_error(self, validator: str, message: str, **kwargs):
        ^
inference/active/gmn_validation.py:75: error: Function is missing a return type
annotation  [no-untyped-def]
        def add_warning(self, validator: str, message: str, **kwargs):
        ^
inference/active/gmn_validation.py:75: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
        def add_warning(self, validator: str, message: str, **kwargs):
        ^
inference/active/gmn_validation.py:89: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
inference/active/gmn_validation.py:89: note: Use "-> None" if function does not return a value
inference/active/gmn_validation.py:168: error: Item "None" of
"dict[str, Any] | None" has no attribute "get"  [union-attr]
                    f"Line {error.context.get('line', '?')}: {error.messag...
                            ^~~~~~~~~~~~~~~~~
inference/active/gmn_validation.py:177: error: Function is missing a return
type annotation  [no-untyped-def]
        def _validate_top_level_structure(
        ^
inference/active/gmn_validation.py:196: error: Function is missing a return
type annotation  [no-untyped-def]
        def _validate_nodes_structure(
        ^
inference/active/gmn_validation.py:245: error: Function is missing a return
type annotation  [no-untyped-def]
        def _validate_edges_structure(
        ^
inference/active/gmn_validation.py:283: error: Function is missing a return
type annotation  [no-untyped-def]
        def __init__(self):
        ^
inference/active/gmn_validation.py:283: note: Use "-> None" if function does not return a value
inference/active/gmn_validation.py:335: error: Key expression in dictionary
comprehension has incompatible type "Any | None"; expected type "str"  [misc]
            return {node.get("name"): node for node in nodes if "name" in ...
                    ^~~~~~~~~~~~~~~~
inference/active/gmn_validation.py:337: error: Function is missing a return
type annotation  [no-untyped-def]
        def _validate_node_references(
        ^
inference/active/gmn_validation.py:362: error: Function is missing a return
type annotation  [no-untyped-def]
        def _validate_edge_relationships(
        ^
inference/active/gmn_validation.py:377: error: Argument 1 to "get" of "dict"
has incompatible type "Any | None"; expected "str"  [arg-type]
                from_node = nodes_by_name.get(from_node_name)
                                              ^~~~~~~~~~~~~~
inference/active/gmn_validation.py:378: error: Argument 1 to "get" of "dict"
has incompatible type "Any | None"; expected "str"  [arg-type]
                to_node = nodes_by_name.get(to_node_name)
                                            ^~~~~~~~~~~~
inference/active/gmn_validation.py:413: error: Function is missing a return
type annotation  [no-untyped-def]
        def _validate_circular_dependencies(
        ^
inference/active/gmn_validation.py:418: error: Need type annotation for "graph"
(hint: "graph: dict[<type>, <type>] = ...")  [var-annotated]
            graph = {}
            ^~~~~
inference/active/gmn_validation.py:432: error: Function is missing a type
annotation  [no-untyped-def]
            def has_cycle(node):
            ^
inference/active/gmn_validation.py:442: error: Call to untyped function
"has_cycle" in typed context  [no-untyped-call]
                    if has_cycle(neighbor):
                       ^~~~~~~~~~~~~~~~~~~
inference/active/gmn_validation.py:450: error: Call to untyped function
"has_cycle" in typed context  [no-untyped-call]
                    if has_cycle(node):
                       ^~~~~~~~~~~~~~~
inference/active/gmn_validation.py:457: error: Function is missing a return
type annotation  [no-untyped-def]
        def _validate_required_connections(
        ^
inference/active/gmn_validation.py:465: error: Need type annotation for
"dependencies" (hint: "dependencies: dict[<type>, <type>] = ...")
[var-annotated]
            dependencies = {}
            ^~~~~~~~~~~~
inference/active/gmn_validation.py:497: error: Function is missing a return
type annotation  [no-untyped-def]
        def _validate_node_usage(
        ^
inference/active/gmn_validation.py:536: error: Function is missing a return
type annotation  [no-untyped-def]
        def __init__(self):
        ^
inference/active/gmn_validation.py:536: note: Use "-> None" if function does not return a value
inference/active/gmn_validation.py:574: error: Function is missing a return
type annotation  [no-untyped-def]
        def _validate_probability_distributions(
        ^
inference/active/gmn_validation.py:664: error: Function is missing a return
type annotation  [no-untyped-def]
        def _validate_dimensions(
        ^
inference/active/gmn_validation.py:706: error: Function is missing a return
type annotation  [no-untyped-def]
        def _validate_numerical_ranges(
        ^
inference/active/gmn_validation.py:762: error: Function is missing a return
type annotation  [no-untyped-def]
        def _validate_matrix_constraints(
        ^
inference/active/gmn_validation.py:812: error: Function is missing a return
type annotation  [no-untyped-def]
        def __init__(self):
        ^
inference/active/gmn_validation.py:812: note: Use "-> None" if function does not return a value
inference/active/gmn_validation.py:857: error: Function is missing a return
type annotation  [no-untyped-def]
        def _validate_node_types(
        ^
inference/active/gmn_validation.py:885: error: Function is missing a return
type annotation  [no-untyped-def]
        def _validate_edge_types(
        ^
inference/active/gmn_validation.py:899: error: Function is missing a return
type annotation  [no-untyped-def]
        def _validate_attribute_types(
        ^
inference/active/gmn_validation.py:955: error: Function is missing a return
type annotation  [no-untyped-def]
        def __init__(self):
        ^
inference/active/gmn_validation.py:955: note: Use "-> None" if function does not return a value
inference/active/gmn_validation.py:996: error: Function is missing a return
type annotation  [no-untyped-def]
        def _validate_business_rules(
        ^
inference/active/gmn_validation.py:1036: error: Function is missing a return
type annotation  [no-untyped-def]
        def _validate_preference_constraints(
        ^
inference/active/gmn_validation.py:1070: error: Function is missing a return
type annotation  [no-untyped-def]
        def _validate_constraint_consistency(
        ^
inference/active/gmn_validation.py:1095: error: Function is missing a return
type annotation  [no-untyped-def]
        def __init__(self):
        ^
inference/active/gmn_validation.py:1095: note: Use "-> None" if function does not return a value
inference/active/gmn_validation.py:1097: error: Call to untyped function
"GMNSyntaxValidator" in typed context  [no-untyped-call]
            self.syntax_validator = GMNSyntaxValidator()
                                    ^~~~~~~~~~~~~~~~~~~~
inference/active/gmn_validation.py:1098: error: Call to untyped function
"GMNSemanticValidator" in typed context  [no-untyped-call]
            self.semantic_validator = GMNSemanticValidator()
                                      ^~~~~~~~~~~~~~~~~~~~~~
inference/active/gmn_validation.py:1099: error: Call to untyped function
"GMNMathematicalValidator" in typed context  [no-untyped-call]
            self.mathematical_validator = GMNMathematicalValidator()
                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
inference/active/gmn_validation.py:1100: error: Call to untyped function
"GMNTypeValidator" in typed context  [no-untyped-call]
            self.type_validator = GMNTypeValidator()
                                  ^~~~~~~~~~~~~~~~~~
inference/active/gmn_validation.py:1101: error: Call to untyped function
"GMNConstraintValidator" in typed context  [no-untyped-call]
            self.constraint_validator = GMNConstraintValidator()
                                        ^~~~~~~~~~~~~~~~~~~~~~~~
inference/active/gmn_validation.py:1120: error: "object" has no attribute
"validate"  [attr-defined]
                    result = validator.validate(spec)
                             ^~~~~~~~~~~~~~~~~~
inference/active/gmn_validation.py:1141: error: Returning Any from function
declared to return "ValidationResult"  [no-any-return]
            return result
            ^~~~~~~~~~~~~
inference/active/gmn_validation.py:1156: error: Function is missing a return
type annotation  [no-untyped-def]
        def _add_reality_checks(
        ^
examples/llm_error_handling_demo.py:42: error: Missing type parameters for
generic type "Dict"  [type-arg]
            context: Optional[Dict] = None,
                              ^
examples/llm_error_handling_demo.py:45: error: Missing type parameters for
generic type "Dict"  [type-arg]
        ) -> Union[str, Dict]:
                        ^
examples/llm_error_handling_demo.py:91: error: Missing type parameters for
generic type "Dict"  [type-arg]
        async def get_model_info(self) -> Dict:
                                          ^
examples/llm_error_handling_demo.py:107: error: Missing type parameters for
generic type "Dict"  [type-arg]
        def get_stats(self) -> Dict:
                               ^
examples/llm_error_handling_demo.py:115: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
        def configure(
        ^
examples/llm_error_handling_demo.py:179: error: Return type
"GenerationResponse | str" of "generate" incompatible with return type
"GenerationResponse" in supertype "BaseProvider"  [override]
        def generate(
        ^
examples/llm_error_handling_demo.py:179: error: Return type
"GenerationResponse | str" of "generate" incompatible with return type
"GenerationResponse" in supertype "ILLMProvider"  [override]
        def generate(
        ^
examples/demo_matrix_pooling.py:34: error: Function is missing a return type
annotation  [no-untyped-def]
    def print_memory_usage(label: str):
    ^
examples/demo_matrix_pooling.py:41: error: Function is missing a return type
annotation  [no-untyped-def]
    def demonstrate_basic_pooling():
    ^
examples/demo_matrix_pooling.py:41: note: Use "-> None" if function does not return a value
examples/demo_matrix_pooling.py:49: error: Argument 2 to "pooled_matrix" has
incompatible type "type[floating[Any]]"; expected "dtype[Any]"  [arg-type]
        with pooled_matrix((100, 100), np.float32) as matrix:
                                       ^~~~~~~~~~
examples/demo_matrix_pooling.py:60: error: Argument 2 to "pooled_matrix" has
incompatible type "type[floating[Any]]"; expected "dtype[Any]"  [arg-type]
            with pooled_matrix((50, 50), np.float32) as m:
                                         ^~~~~~~~~~
examples/demo_matrix_pooling.py:80: error: Function is missing a return type
annotation  [no-untyped-def]
    def demonstrate_matrix_operations():
    ^
examples/demo_matrix_pooling.py:80: note: Use "-> None" if function does not return a value
examples/demo_matrix_pooling.py:126: error: Function is missing a return type
annotation  [no-untyped-def]
    def demonstrate_memory_efficiency():
    ^
examples/demo_matrix_pooling.py:126: note: Use "-> None" if function does not return a value
examples/demo_matrix_pooling.py:149: error: Call to untyped function
"clear_all" in typed context  [no-untyped-call]
        pool.clear_all()  # Start fresh
        ^~~~~~~~~~~~~~~~
examples/demo_matrix_pooling.py:176: error: Function is missing a return type
annotation  [no-untyped-def]
    def demonstrate_pymdp_integration():
    ^
examples/demo_matrix_pooling.py:176: note: Use "-> None" if function does not return a value
examples/demo_matrix_pooling.py:217: error: Argument 2 to "pooled_matrix" has
incompatible type "type[floating[Any]]"; expected "dtype[Any]"  [arg-type]
            with pooled_matrix((num_states,), np.float32) as posterior:
                                              ^~~~~~~~~~
examples/demo_matrix_pooling.py:252: error: Function is missing a return type
annotation  [no-untyped-def]
    def demonstrate_advanced_pooling():
    ^
examples/demo_matrix_pooling.py:252: note: Use "-> None" if function does not return a value
examples/demo_matrix_pooling.py:273: error: Argument 2 to "allocate_matrix" of
"MatrixOperationPool" has incompatible type "type[floating[Any]]"; expected
"dtype[Any]"  [arg-type]
    ...h pool.allocate_matrix((batch_size, hidden_dim), np.float32) as hidden...
                                                        ^~~~~~~~~~
examples/demo_matrix_pooling.py:278: error: Argument 2 to "allocate_matrix" of
"MatrixOperationPool" has incompatible type "type[floating[Any]]"; expected
"dtype[Any]"  [arg-type]
                (batch_size, action_dim), np.float32
                                          ^~~~~~~~~~
examples/demo_matrix_pooling.py:313: error: Function is missing a return type
annotation  [no-untyped-def]
    def main():
    ^
examples/demo_matrix_pooling.py:313: note: Use "-> None" if function does not return a value
examples/demo_matrix_pooling.py:319: error: Call to untyped function
"demonstrate_basic_pooling" in typed context  [no-untyped-call]
        demonstrate_basic_pooling()
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_matrix_pooling.py:320: error: Call to untyped function
"demonstrate_matrix_operations" in typed context  [no-untyped-call]
        demonstrate_matrix_operations()
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_matrix_pooling.py:321: error: Call to untyped function
"demonstrate_memory_efficiency" in typed context  [no-untyped-call]
        demonstrate_memory_efficiency()
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_matrix_pooling.py:322: error: Call to untyped function
"demonstrate_pymdp_integration" in typed context  [no-untyped-call]
        demonstrate_pymdp_integration()
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_matrix_pooling.py:323: error: Call to untyped function
"demonstrate_advanced_pooling" in typed context  [no-untyped-call]
        demonstrate_advanced_pooling()
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_matrix_pooling.py:353: error: Call to untyped function "main" in
typed context  [no-untyped-call]
        main()
        ^~~~~~
examples/demo_gmn_versioned_storage.py:15: error: Module
"inference.active.gmn_parser" has no attribute "GMNSpecification"
[attr-defined]
    from inference.active.gmn_parser import GMNParser, GMNSpecification
    ^
examples/demo_gmn_versioned_storage.py:18: error: Function is missing a return
type annotation  [no-untyped-def]
    def demo_gmn_storage_with_real_data():
    ^
examples/demo_gmn_versioned_storage.py:18: note: Use "-> None" if function does not return a value
examples/demo_gmn_versioned_storage.py:25: error: Call to untyped function
"GMNParser" in typed context  [no-untyped-call]
        parser = GMNParser()
                 ^~~~~~~~~~~
examples/demo_gmn_versioned_storage.py:57: error: "GMNParser" has no attribute
"parse_text"  [attr-defined]
                    parsed_dict = parser.parse_text(gmn_text)
                                  ^~~~~~~~~~~~~~~~~
examples/demo_gmn_versioned_storage.py:231: error: Call to untyped function
"demo_gmn_storage_with_real_data" in typed context  [no-untyped-call]
            demo_gmn_storage_with_real_data()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
database/optimized_db.py:33: error: Function is missing a return type
annotation  [no-untyped-def]
        def get_performance_monitor():
        ^
database/optimized_db.py:35: error: Function is missing a type annotation
[no-untyped-def]
                def record_metric(self, *args, **kwargs):
                ^
database/optimized_db.py:92: error: Function is missing a return type
annotation  [no-untyped-def]
        def update(self, execution_time: float, error: bool = False):
        ^
database/optimized_db.py:117: error: Function is missing a return type
annotation  [no-untyped-def]
        def update_usage(self, query_time: float, error: bool = False):
        ^
database/optimized_db.py:148: error: Missing type parameters for generic type
"Task"  [type-arg]
            self.health_check_task: Optional[asyncio.Task] = None
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
database/optimized_db.py:156: error: Need type annotation for "query_cache"
[var-annotated]
            self.query_cache = cachetools.TTLCache(
                               ^
database/optimized_db.py:159: error: Need type annotation for
"prepared_statements"  [var-annotated]
            self.prepared_statements = cachetools.LRUCache(
                                       ^
database/optimized_db.py:165: error: Function is missing a return type
annotation  [no-untyped-def]
        async def initialize(self):
        ^
database/optimized_db.py:165: note: Use "-> None" if function does not return a value
database/optimized_db.py:191: error: Call to untyped function
"_health_check_loop" in typed context  [no-untyped-call]
    ...    self.health_check_task = asyncio.create_task(self._health_check_lo...
                                                        ^~~~~~~~~~~~~~~~~~~~~...
database/optimized_db.py:203: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _health_check_loop(self):
        ^
database/optimized_db.py:203: note: Use "-> None" if function does not return a value
database/optimized_db.py:208: error: Call to untyped function
"_check_pool_health" in typed context  [no-untyped-call]
                    await self._check_pool_health()
                          ^~~~~~~~~~~~~~~~~~~~~~~~~
database/optimized_db.py:209: error: Call to untyped function
"_check_auto_scaling" in typed context  [no-untyped-call]
                    await self._check_auto_scaling()
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
database/optimized_db.py:213: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _check_pool_health(self):
        ^
database/optimized_db.py:213: note: Use "-> None" if function does not return a value
database/optimized_db.py:241: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _check_auto_scaling(self):
        ^
database/optimized_db.py:241: note: Use "-> None" if function does not return a value
database/optimized_db.py:270: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _scale_up_pool(self, pool: asyncpg.Pool, pool_name: str)...
        ^
database/optimized_db.py:281: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _scale_down_pool(self, pool: asyncpg.Pool, pool_name: st...
        ^
database/optimized_db.py:322: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _release_connection(
        ^
database/optimized_db.py:338: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _update_query_stats(
        ^
database/optimized_db.py:363: error: Function is missing a return type
annotation  [no-untyped-def]
        async def get_connection(self, read_only: bool = False):
        ^
database/optimized_db.py:381: error: Function is missing a type annotation for
one or more arguments  [no-untyped-def]
        async def execute_query(
        ^
database/optimized_db.py:429: error: Missing type parameters for generic type
"Tuple"  [type-arg]
            self, query: str, args_list: List[Tuple], batch_size: int = 10...
                                              ^
database/optimized_db.py:461: error: Function is missing a type annotation for
one or more arguments  [no-untyped-def]
        async def execute_prepared(
        ^
database/optimized_db.py:486: error: Function is missing a return type
annotation  [no-untyped-def]
        async def begin_transaction(self, read_only: bool = False):
        ^
database/optimized_db.py:574: error: Function is missing a return type
annotation  [no-untyped-def]
        async def close(self):
        ^
database/optimized_db.py:574: note: Use "-> None" if function does not return a value
database/optimized_db.py:601: error: Function is missing a return type
annotation  [no-untyped-def]
    async def initialize_optimized_db(config: DatabaseConfig):
    ^
database/optimized_db.py:605: error: Call to untyped function "initialize" in
typed context  [no-untyped-call]
        await _optimized_db.initialize()
              ^~~~~~~~~~~~~~~~~~~~~~~~~~
database/optimized_db.py:618: error: Function is missing a return type
annotation  [no-untyped-def]
    async def close_optimized_db():
    ^
database/optimized_db.py:618: note: Use "-> None" if function does not return a value
database/optimized_db.py:622: error: Call to untyped function "close" in typed
context  [no-untyped-call]
            await _optimized_db.close()
                  ^~~~~~~~~~~~~~~~~~~~~
database/optimized_db.py:627: error: Function is missing a type annotation for
one or more arguments  [no-untyped-def]
    async def execute_query(
    ^
database/optimized_db.py:638: error: Missing type parameters for generic type
"Tuple"  [type-arg]
        query: str, args_list: List[Tuple], batch_size: int = 1000
                                    ^
database/optimized_db.py:646: error: Function is missing a return type
annotation  [no-untyped-def]
    async def get_connection(read_only: bool = False):
    ^
database/optimized_db.py:660: error: Function is missing a return type
annotation  [no-untyped-def]
    async def benchmark_database_performance():
    ^
database/optimized_db.py:660: note: Use "-> None" if function does not return a value
database/optimized_db.py:727: error: Call to untyped function
"close_optimized_db" in typed context  [no-untyped-call]
            await close_optimized_db()
                  ^~~~~~~~~~~~~~~~~~~~
database/optimized_db.py:733: error: Call to untyped function
"benchmark_database_performance" in typed context  [no-untyped-call]
        asyncio.run(benchmark_database_performance())
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/resilient_db.py:23: error: Function is missing a type annotation for one or
more arguments  [no-untyped-def]
    async def create_pool(database_url: str, **kwargs) -> asyncpg.Pool:
    ^
api/resilient_db.py:78: error: Function is missing a type annotation for one or
more arguments  [no-untyped-def]
    async def execute_query(query: str, *args) -> Any:
    ^
api/resilient_db.py:97: error: Item "None" of "Any | None" has no attribute
"release"  [union-attr]
            await _pool.release(connection)
                  ^~~~~~~~~~~~~
api/resilient_db.py:100: error: Function is missing a return type annotation
[no-untyped-def]
    async def close_pool():
    ^
api/resilient_db.py:100: note: Use "-> None" if function does not return a value
coalitions/coalition_manager.py:41: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
coalitions/coalition_manager.py:41: note: Use "-> None" if function does not return a value
coalitions/coalition_manager.py:56: error: Missing type parameters for generic
type "Callable"  [type-arg]
            self.event_handlers: Dict[str, List[Callable]] = {}
                                                ^
coalitions/coalition_manager.py:457: error: Function is missing a return type
annotation  [no-untyped-def]
        def _monitoring_loop(self):
        ^
coalitions/coalition_manager.py:457: note: Use "-> None" if function does not return a value
coalitions/coalition_manager.py:461: error: Call to untyped function
"_monitor_coalitions" in typed context  [no-untyped-call]
                    self._monitor_coalitions()
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~
coalitions/coalition_manager.py:467: error: Function is missing a return type
annotation  [no-untyped-def]
        def _monitor_coalitions(self):
        ^
coalitions/coalition_manager.py:467: note: Use "-> None" if function does not return a value
coalitions/coalition_manager.py:528: error: Function is missing a return type
annotation  [no-untyped-def]
        def add_event_handler(
        ^
coalitions/coalition_manager.py:543: error: Function is missing a return type
annotation  [no-untyped-def]
        def _emit_event(
        ^
coalitions/coalition_manager.py:576: error: Function is missing a return type
annotation  [no-untyped-def]
        def _update_formation_stats(
        ^
agents/threading_optimization_implementation.py:27: error: Function is missing
a type annotation  [no-untyped-def]
        def __init__(self, min_workers=2, max_workers=32, workload_detecto...
        ^
agents/threading_optimization_implementation.py:43: error: Need type annotation
for "_task_times"  [var-annotated]
            self._task_times = deque(maxlen=100)
                               ^~~~~~~~~~~~~~~~~
agents/threading_optimization_implementation.py:61: error: Function is missing
a type annotation  [no-untyped-def]
        def submit(self, fn, /, *args, **kwargs):
        ^
agents/threading_optimization_implementation.py:65: error: Function is missing
a type annotation  [no-untyped-def]
            def timed_fn(*args, **kwargs):
            ^
agents/threading_optimization_implementation.py:72: error: Call to untyped
function "_maybe_resize" in typed context  [no-untyped-call]
                    self._maybe_resize()
                    ^~~~~~~~~~~~~~~~~~~~
agents/threading_optimization_implementation.py:78: error: Function is missing
a return type annotation  [no-untyped-def]
        def _maybe_resize(self):
        ^
agents/threading_optimization_implementation.py:78: note: Use "-> None" if function does not return a value
agents/threading_optimization_implementation.py:106: error: Function is missing
a return type annotation  [no-untyped-def]
        def __init__(self):
        ^
agents/threading_optimization_implementation.py:106: note: Use "-> None" if function does not return a value
agents/threading_optimization_implementation.py:111: error: Need type
annotation for "_shards"  [var-annotated]
            self._shards = [dict() for _ in range(16)]
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/threading_optimization_implementation.py:158: error: Need type
annotation for "threads" (hint: "threads: list[<type>] = ...")  [var-annotated]
            self.threads = []
            ^~~~~~~~~~~~
agents/threading_optimization_implementation.py:159: error: Need type
annotation for "work_queues"  [var-annotated]
            self.work_queues = [deque() for _ in range(num_threads)]
                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/threading_optimization_implementation.py:162: error: Call to untyped
function "_start_threads" in typed context  [no-untyped-call]
            self._start_threads()
            ^~~~~~~~~~~~~~~~~~~~~
agents/threading_optimization_implementation.py:164: error: Function is missing
a return type annotation  [no-untyped-def]
        def _start_threads(self):
        ^
agents/threading_optimization_implementation.py:164: note: Use "-> None" if function does not return a value
agents/threading_optimization_implementation.py:173: error: Function is missing
a return type annotation  [no-untyped-def]
        def _worker(self, thread_id: int):
        ^
agents/threading_optimization_implementation.py:213: error: Function is missing
a return type annotation  [no-untyped-def]
        def submit(self, task: Callable):
        ^
agents/threading_optimization_implementation.py:213: error: Missing type
parameters for generic type "Callable"  [type-arg]
        def submit(self, task: Callable):
                               ^
agents/threading_optimization_implementation.py:232: error: Function is missing
a return type annotation  [no-untyped-def]
        def shutdown(self):
        ^
agents/threading_optimization_implementation.py:232: note: Use "-> None" if function does not return a value
agents/threading_optimization_implementation.py:245: error: Function is missing
a return type annotation  [no-untyped-def]
        def __init__(self):
        ^
agents/threading_optimization_implementation.py:245: note: Use "-> None" if function does not return a value
agents/threading_optimization_implementation.py:247: error: Call to untyped
function "LockFreeAgentRegistry" in typed context  [no-untyped-call]
            self.agent_registry = LockFreeAgentRegistry()
                                  ^~~~~~~~~~~~~~~~~~~~~~~
agents/threading_optimization_implementation.py:248: error: Call to untyped
function "AdaptiveThreadPoolExecutor" in typed context  [no-untyped-call]
            self.thread_pool = AdaptiveThreadPoolExecutor()
                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/threading_optimization_implementation.py:252: error: Function is missing
a return type annotation  [no-untyped-def]
        def start(self):
        ^
agents/threading_optimization_implementation.py:252: note: Use "-> None" if function does not return a value
agents/threading_optimization_implementation.py:260: error: Function is missing
a return type annotation  [no-untyped-def]
        def _run_event_loop(self):
        ^
agents/threading_optimization_implementation.py:260: note: Use "-> None" if function does not return a value
agents/threading_optimization_implementation.py:263: error: Item "None" of
"Any | None" has no attribute "run_forever"  [union-attr]
            self._loop.run_forever()
            ^~~~~~~~~~~~~~~~~~~~~~
agents/threading_optimization_implementation.py:265: error: Function is missing
a return type annotation  [no-untyped-def]
        async def save_agent_state_async(
        ^
agents/threading_optimization_implementation.py:278: error: Function is missing
a return type annotation  [no-untyped-def]
        async def broadcast_event_async(self, event: Dict[str, Any]):
        ^
agents/threading_optimization_implementation.py:285: error: Function is missing
a return type annotation  [no-untyped-def]
        def step_agent_optimized(self, agent_id: str, observation: Any):
        ^
agents/threading_optimization_implementation.py:292: error: Call to untyped
function "submit" in typed context  [no-untyped-call]
            future = self.thread_pool.submit(agent.step, observation)
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/threading_optimization_implementation.py:298: error: Argument 2 to
"run_coroutine_threadsafe" has incompatible type "Any | None"; expected
"AbstractEventLoop"  [arg-type]
                self._loop,
                ^~~~~~~~~~
agents/threading_optimization_implementation.py:319: error: Need type
annotation for "available"  [var-annotated]
            self.available = queue.Queue(maxsize=max_arrays)
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/threading_optimization_implementation.py:332: error: Returning Any from
function declared to return "ndarray[tuple[Any, ...], dtype[Any]]"
[no-any-return]
                return self.available.get_nowait()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/threading_optimization_implementation.py:335: error: Returning Any from
function declared to return "ndarray[tuple[Any, ...], dtype[Any]]"
[no-any-return]
                return self.all_arrays[0].copy()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/threading_optimization_implementation.py:337: error: Function is missing
a return type annotation  [no-untyped-def]
        def release(self, array: np.ndarray):
        ^
agents/threading_optimization_implementation.py:348: error: Function is missing
a return type annotation  [no-untyped-def]
    def benchmark_optimizations():
    ^
agents/threading_optimization_implementation.py:359: error: Function is missing
a return type annotation  [no-untyped-def]
        def io_task():
        ^
agents/threading_optimization_implementation.py:363: error: Function is missing
a return type annotation  [no-untyped-def]
        def cpu_task():
        ^
agents/threading_optimization_implementation.py:377: error: Call to untyped
function "AdaptiveThreadPoolExecutor" in typed context  [no-untyped-call]
        pool = AdaptiveThreadPoolExecutor()
               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/threading_optimization_implementation.py:378: error: Call to untyped
function "submit" in typed context  [no-untyped-call]
        futures = [pool.submit(io_task) for _ in range(100)]
                   ^~~~~~~~~~~~~~~~~~~~
agents/threading_optimization_implementation.py:397: error: Function is missing
a type annotation  [no-untyped-def]
        def standard_register(agent_id, agent):
        ^
agents/threading_optimization_implementation.py:414: error: Call to untyped
function "LockFreeAgentRegistry" in typed context  [no-untyped-call]
        lockfree_registry = LockFreeAgentRegistry()
                            ^~~~~~~~~~~~~~~~~~~~~~~
agents/threading_optimization_implementation.py:438: error: Function is missing
a type annotation  [no-untyped-def]
        def variable_work(duration):
        ^
agents/threading_optimization_implementation.py:457: error: Need type
annotation for "results"  [var-annotated]
        results = queue.Queue()
                  ^~~~~~~~~~~~~
agents/threading_optimization_implementation.py:462: error: Call to untyped
function "variable_work" in typed context  [no-untyped-call]
    ...      ws_pool.submit(lambda d=duration: results.put(variable_work(d)))
                                                           ^~~~~~~~~~~~~~~~
agents/threading_optimization_implementation.py:469: error: Call to untyped
function "shutdown" in typed context  [no-untyped-call]
        ws_pool.shutdown()
        ^~~~~~~~~~~~~~~~~~
agents/threading_optimization_implementation.py:479: error: Call to untyped
function "benchmark_optimizations" in typed context  [no-untyped-call]
        benchmark_optimizations()
        ^~~~~~~~~~~~~~~~~~~~~~~~~
agents/performance_optimizer.py:45: error: Need type annotation for "cache"
(hint: "cache: dict[<type>, <type>] = ...")  [var-annotated]
            self.cache = {}
            ^~~~~~~~~~
agents/performance_optimizer.py:46: error: Need type annotation for
"access_times" (hint: "access_times: dict[<type>, <type>] = ...")
[var-annotated]
            self.access_times = {}
            ^~~~~~~~~~~~~~~~~
agents/performance_optimizer.py:55: error: Returning Any from function declared
to return "ndarray[tuple[Any, ...], dtype[Any]] | None"  [no-any-return]
                    return self.cache[key]
                    ^~~~~~~~~~~~~~~~~~~~~~
agents/performance_optimizer.py:64: error: Argument "key" to "min" has
incompatible type overloaded function; expected
"Callable[[Any], SupportsDunderLT[Any] | SupportsDunderGT[Any]]"  [arg-type]
    ...                   self.access_times.keys(), key=self.access_times.get
                                                        ^~~~~~~~~~~~~~~~~~~~~
agents/performance_optimizer.py:89: error: Need type annotation for
"available_agents" (hint: "available_agents: list[<type>] = ...")
[var-annotated]
            self.available_agents = []
            ^~~~~~~~~~~~~~~~~~~~~
agents/performance_optimizer.py:90: error: Need type annotation for
"active_agents" (hint: "active_agents: dict[<type>, <type>] = ...")
[var-annotated]
            self.active_agents = {}
            ^~~~~~~~~~~~~~~~~~
agents/performance_optimizer.py:99: error: Returning Any from function declared
to return "str | None"  [no-any-return]
                    return agent_id
                    ^~~~~~~~~~~~~~~
agents/performance_optimizer.py:103: error: Returning Any from function
declared to return "str | None"  [no-any-return]
                    return agent_id
                    ^~~~~~~~~~~~~~~
agents/performance_optimizer.py:129: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
        async def run_inference(
        ^
agents/performance_optimizer.py:150: error: Dict entry 0 has incompatible type
"str": "str"; expected "str": "float"  [dict-item]
                return None, {"error": str(e)}
                              ^~~~~~~~~~~~~~~
agents/performance_optimizer.py:152: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
        def _sync_inference(self, agent, observation: Any) -> Any:
        ^
agents/performance_optimizer.py:176: error: Incompatible return value type (got
"list[tuple[Any, dict[str, float]] | BaseException]", expected
"list[tuple[Any, dict[str, float]]]")  [return-value]
            return await asyncio.gather(*tasks, return_exceptions=True)
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/performance_optimizer.py:179: error: Function is missing a return type
annotation  [no-untyped-def]
    def performance_monitor(operation_name: str):
    ^
agents/performance_optimizer.py:182: error: Function is missing a type
annotation  [no-untyped-def]
        def decorator(func):
        ^
agents/performance_optimizer.py:184: error: Function is missing a type
annotation  [no-untyped-def]
            def wrapper(self, *args, **kwargs):
            ^
agents/performance_optimizer.py:221: error: Returning Any from function
declared to return "ndarray[tuple[Any, ...], dtype[Any]]"  [no-any-return]
                return matrix / np.sum(matrix)
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/performance_optimizer.py:223: error: Returning Any from function
declared to return "ndarray[tuple[Any, ...], dtype[Any]]"  [no-any-return]
                return matrix / np.sum(matrix, axis=0, keepdims=True)
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/performance_optimizer.py:231: error: Returning Any from function
declared to return "ndarray[tuple[Any, ...], dtype[Any]]"  [no-any-return]
                return csr_matrix(matrix)
                ^~~~~~~~~~~~~~~~~~~~~~~~~
agents/performance_optimizer.py:236: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
    def benchmark_inference(agent, num_steps: int = 100) -> Dict[str, floa...
    ^
agents/performance_optimizer.py:267: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
agents/performance_optimizer.py:267: note: Use "-> None" if function does not return a value
agents/performance_optimizer.py:273: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
        def optimize_agent(self, agent) -> None:
        ^
agents/performance_optimizer.py:291: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
        def _optimized_get_cached_matrix(
        ^
agents/performance_optimizer.py:296: error: Function "builtins.callable" is not
valid as a type  [valid-type]
            normalization_func: callable,
                                ^
agents/performance_optimizer.py:296: note: Perhaps you meant "typing.Callable" instead of "callable"?
agents/performance_optimizer.py:309: error: callable? not callable  [misc]
            normalized_matrix = normalization_func(matrix_data)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/performance_optimizer.py:318: error: Need type annotation for "results"
[var-annotated]
            results = {"single_agent": {}, "multi_agent": {}, "memory_usag...
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
agents/memory_optimization/lifecycle_manager.py:31: error: Incompatible types
in assignment (expression has type "None", variable has type Module)
[assignment]
        psutil = None
                 ^~~~
agents/memory_optimization/lifecycle_manager.py:84: error: Missing type
parameters for generic type "deque"  [type-arg]
        memory_snapshots: deque = field(default_factory=lambda: deque(maxl...
                          ^
agents/memory_optimization/lifecycle_manager.py:87: error: Missing type
parameters for generic type "Dict"  [type-arg]
        lifecycle_events: List[Tuple[float, str, Dict]] = field(
                                                 ^
agents/memory_optimization/lifecycle_manager.py:91: error: Function is missing
a return type annotation  [no-untyped-def]
        def __post_init__(self):
        ^
agents/memory_optimization/lifecycle_manager.py:91: note: Use "-> None" if function does not return a value
agents/memory_optimization/lifecycle_manager.py:100: error: Function is missing
a return type annotation  [no-untyped-def]
        def record_lifecycle_event(
        ^
agents/memory_optimization/lifecycle_manager.py:101: error: Missing type
parameters for generic type "Dict"  [type-arg]
            self, event: str, metadata: Optional[Dict] = None
                                                 ^
agents/memory_optimization/lifecycle_manager.py:108: error: Function is missing
a return type annotation  [no-untyped-def]
        def update_memory_usage(
        ^
agents/memory_optimization/lifecycle_manager.py:169: error: Missing type
parameters for generic type "WeakSet"  [type-arg]
            self._agent_refs: weakref.WeakSet = weakref.WeakSet()
                              ^
agents/memory_optimization/lifecycle_manager.py:173: error: Missing type
parameters for generic type "Tuple"  [type-arg]
            self._belief_pools: Dict[Tuple, CompressedBeliefPool] = {}
                                     ^
agents/memory_optimization/lifecycle_manager.py:192: error: Call to untyped
function "_start_cleanup_thread" in typed context  [no-untyped-call]
            self._start_cleanup_thread()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/memory_optimization/lifecycle_manager.py:254: error: Function is missing
a return type annotation  [no-untyped-def]
        def unregister_agent(self, agent_id: str, force_cleanup: bool = Tr...
        ^
agents/memory_optimization/lifecycle_manager.py:336: error: Function is missing
a return type annotation  [no-untyped-def]
        def agent_memory_context(self, agent_id: str):
        ^
agents/memory_optimization/lifecycle_manager.py:386: error: Call to untyped
function "clear" in typed context  [no-untyped-call]
                    profile.belief_pool.clear()
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/memory_optimization/lifecycle_manager.py:619: error: Function is missing
a return type annotation  [no-untyped-def]
        def shutdown(self):
        ^
agents/memory_optimization/lifecycle_manager.py:619: note: Use "-> None" if function does not return a value
agents/memory_optimization/lifecycle_manager.py:636: error: Call to untyped
function "clear" in typed context  [no-untyped-call]
                pool.clear()
                ^~~~~~~~~~~~
agents/memory_optimization/lifecycle_manager.py:640: error: Call to untyped
function "clear_all" in typed context  [no-untyped-call]
                self._matrix_pool.clear_all()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/memory_optimization/lifecycle_manager.py:665: error: Function is missing
a return type annotation  [no-untyped-def]
        def _setup_agent_resources(self, profile: AgentMemoryProfile):
        ^
agents/memory_optimization/lifecycle_manager.py:673: error: Argument "dtype" to
"CompressedBeliefPool" has incompatible type "type[floating[Any]]"; expected
"dtype[Any]"  [arg-type]
    ...             pool_size=10, belief_shape=belief_shape, dtype=np.float32
                                                                   ^~~~~~~~~~
agents/memory_optimization/lifecycle_manager.py:678: error: Function is missing
a return type annotation  [no-untyped-def]
        def _cleanup_agent_resources(self, profile: AgentMemoryProfile):
        ^
agents/memory_optimization/lifecycle_manager.py:682: error: Call to untyped
function "clear" in typed context  [no-untyped-call]
                profile.belief_pool.clear()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/memory_optimization/lifecycle_manager.py:693: error: Function is missing
a return type annotation  [no-untyped-def]
        def _release_matrix_pool_refs(self, profile: AgentMemoryProfile):
        ^
agents/memory_optimization/lifecycle_manager.py:697: error: Function is missing
a return type annotation  [no-untyped-def]
        def _check_agent_state_transition(self, profile: AgentMemoryProfil...
        ^
agents/memory_optimization/lifecycle_manager.py:716: error: Function is missing
a return type annotation  [no-untyped-def]
        def _start_cleanup_thread(self):
        ^
agents/memory_optimization/lifecycle_manager.py:716: note: Use "-> None" if function does not return a value
agents/memory_optimization/lifecycle_manager.py:719: error: Function is missing
a return type annotation  [no-untyped-def]
            def cleanup_worker():
            ^
agents/memory_optimization/lifecycle_manager.py:719: note: Use "-> None" if function does not return a value
agents/memory_optimization/lifecycle_manager.py:750: error: Function is missing
a return type annotation  [no-untyped-def]
    def managed_agent_memory(
    ^
agents/memory_optimization/efficient_structures.py:45: error: Function is
missing a return type annotation  [no-untyped-def]
        def update_stats(self, dense_mb: float, efficient_mb: float):
        ^
agents/memory_optimization/efficient_structures.py:60: error: Incompatible
default for argument "dtype" (default has type "type[floating[Any]]", argument
has type "dtype[Any]")  [assignment]
            dtype: np.dtype = np.float32,
                              ^~~~~~~~~~
agents/memory_optimization/efficient_structures.py:117: error: Function is
missing a return type annotation  [no-untyped-def]
        def update(self, values: np.ndarray, indices: Optional[np.ndarray]...
        ^
agents/memory_optimization/efficient_structures.py:136: error: Call to untyped
function "_update_memory_stats" in typed context  [no-untyped-call]
                self._update_memory_stats()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/memory_optimization/efficient_structures.py:166: error: Returning Any
from function declared to return "ndarray[tuple[Any, ...], dtype[Any]]"
[no-any-return]
                    return self.dense.flat[indices]
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/memory_optimization/efficient_structures.py:187: error: Call to untyped
function "_update_memory_stats" in typed context  [no-untyped-call]
                    self._update_memory_stats()
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/memory_optimization/efficient_structures.py:205: error: Function is
missing a return type annotation  [no-untyped-def]
        def _update_memory_stats(self):
        ^
agents/memory_optimization/efficient_structures.py:205: note: Use "-> None" if function does not return a value
agents/memory_optimization/efficient_structures.py:211: error: Argument 1 to
"update_stats" of "MemoryStats" has incompatible type "floating[_64Bit]";
expected "float"  [arg-type]
            self.stats.update_stats(dense_mb, current_mb)
                                    ^~~~~~~~
agents/memory_optimization/efficient_structures.py:220: error: Incompatible
default for argument "dtype" (default has type "type[floating[Any]]", argument
has type "dtype[Any]")  [assignment]
            dtype: np.dtype = np.float32,
                              ^~~~~~~~~~
agents/memory_optimization/efficient_structures.py:243: error: Incompatible
types in assignment (expression has type "None", variable has type
"_TemporaryFileWrapper[bytes]")  [assignment]
                self._temp_file = None
                                  ^~~~
agents/memory_optimization/efficient_structures.py:251: error: Call to untyped
function "_initialize_file" in typed context  [no-untyped-call]
            self._initialize_file()
            ^~~~~~~~~~~~~~~~~~~~~~~
agents/memory_optimization/efficient_structures.py:256: error: Argument 2 to
"mmap" has incompatible type "signedinteger[_64Bit]"; expected "int"  [arg-type]
                self._file.fileno(), self.buffer_size, access=mmap.ACCESS_...
                                     ^~~~~~~~~~~~~~~~
agents/memory_optimization/efficient_structures.py:268: error: Function is
missing a return type annotation  [no-untyped-def]
        def _initialize_file(self):
        ^
agents/memory_optimization/efficient_structures.py:268: note: Use "-> None" if function does not return a value
agents/memory_optimization/efficient_structures.py:279: error: Function is
missing a return type annotation  [no-untyped-def]
        def sync(self):
        ^
agents/memory_optimization/efficient_structures.py:279: note: Use "-> None" if function does not return a value
agents/memory_optimization/efficient_structures.py:284: error: Function is
missing a return type annotation  [no-untyped-def]
        def resize(self, new_shape: Tuple[int, ...]):
        ^
agents/memory_optimization/efficient_structures.py:305: error: Call to untyped
function "_initialize_file" in typed context  [no-untyped-call]
                self._initialize_file()
                ^~~~~~~~~~~~~~~~~~~~~~~
agents/memory_optimization/efficient_structures.py:310: error: Argument 2 to
"mmap" has incompatible type "signedinteger[_64Bit]"; expected "int"  [arg-type]
                    self._file.fileno(), self.buffer_size, access=mmap.ACC...
                                         ^~~~~~~~~~~~~~~~
agents/memory_optimization/efficient_structures.py:339: error: Function is
missing a return type annotation  [no-untyped-def]
        def _cleanup(mmap_obj, file_obj, filename: str):
        ^
agents/memory_optimization/efficient_structures.py:339: error: Function is
missing a type annotation for one or more arguments  [no-untyped-def]
        def _cleanup(mmap_obj, file_obj, filename: str):
        ^
agents/memory_optimization/efficient_structures.py:370: error: Incompatible
types in assignment (expression has type "type[unsignedinteger[Any]]", variable
has type "type[unsignedinteger[Any]]")  [assignment]
                self.action_dtype = np.uint16
                                    ^~~~~~~~~
agents/memory_optimization/efficient_structures.py:372: error: Incompatible
types in assignment (expression has type "type[unsignedinteger[Any]]", variable
has type "type[unsignedinteger[Any]]")  [assignment]
                self.action_dtype = np.uint32
                                    ^~~~~~~~~
agents/memory_optimization/efficient_structures.py:386: error: Function is
missing a return type annotation  [no-untyped-def]
        def add_action(self, action: int, timestamp: float, reward: float ...
        ^
agents/memory_optimization/efficient_structures.py:485: error: Function is
missing a return type annotation  [no-untyped-def]
        def compress_old_entries(self, keep_recent: int = 100):
        ^
agents/memory_optimization/efficient_structures.py:576: error: Function is
missing a return type annotation  [no-untyped-def]
        def add_state(self, state: np.ndarray, timestamp: float):
        ^
agents/memory_optimization/efficient_structures.py:595: error: Argument 1 to
"append" of "deque" has incompatible type "tuple[int, Any, float]"; expected
"ndarray[tuple[Any, ...], dtype[Any]]"  [arg-type]
                        (len(self._deltas), state.copy(), timestamp)
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/memory_optimization/efficient_structures.py:772: error: Non-overlapping
container check (element type: "int", container item type: "str")
[comparison-overlap]
                if node_id in self._node_index:
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/memory_optimization/efficient_structures.py:791: error: Invalid index
type "int" for "dict[str, int]"; expected type "str"  [index]
                self._node_index[node_id] = index
                                 ^~~~~~~
agents/memory_optimization/efficient_structures.py:820: error: Non-overlapping
container check (element type: "int", container item type: "str")
[comparison-overlap]
                    source_id not in self._node_index
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/memory_optimization/efficient_structures.py:821: error: Non-overlapping
container check (element type: "int", container item type: "str")
[comparison-overlap]
                    or target_id not in self._node_index
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/memory_optimization/efficient_structures.py:871: error: Non-overlapping
container check (element type: "int", container item type: "str")
[comparison-overlap]
                if node_id not in self._node_index:
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/memory_optimization/efficient_structures.py:874: error: Invalid index
type "int" for "dict[str, int]"; expected type "str"  [index]
                index = self._node_index[node_id]
                                         ^~~~~~~
agents/memory_optimization/efficient_structures.py:875: error: Returning Any
from function declared to return "ndarray[tuple[Any, ...], dtype[Any]] | None"
[no-any-return]
                return self._node_features[index].toarray().flatten()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/memory_optimization/efficient_structures.py:877: error: Function is
missing a return type annotation  [no-untyped-def]
        def compact_storage(self):
        ^
agents/memory_optimization/efficient_structures.py:877: note: Use "-> None" if function does not return a value
agents/memory_optimization/efficient_structures.py:978: error: Argument "dtype"
to "MemoryMappedBuffer" has incompatible type "type[floating[Any]]"; expected
"dtype[Any]"  [arg-type]
            return MemoryMappedBuffer(buffer_shape, dtype=np.float32)
                                                          ^~~~~~~~~~
agents/memory_optimization/efficient_structures.py:981: error: Argument "dtype"
to "LazyBeliefArray" has incompatible type "type[floating[Any]]"; expected
"dtype[Any]"  [arg-type]
            return LazyBeliefArray(shape, dtype=np.float32)
                                                ^~~~~~~~~~
agents/memory_optimization/efficient_structures.py:984: error: Function is
missing a return type annotation  [no-untyped-def]
    def benchmark_data_structures():
    ^
agents/memory_optimization/efficient_structures.py:993: error: Argument "dtype"
to "LazyBeliefArray" has incompatible type "type[floating[Any]]"; expected
"dtype[Any]"  [arg-type]
        lazy_belief = LazyBeliefArray(belief_shape, dtype=np.float32)
                                                          ^~~~~~~~~~
security/zero_trust/mtls_manager.py:184: error: Incompatible return value type
(got
"tuple[Certificate, DHPrivateKey | Ed25519PrivateKey | Ed448PrivateKey | RSAPrivateKey | DSAPrivateKey | EllipticCurvePrivateKey | X25519PrivateKey | X448PrivateKey]",
expected "tuple[Certificate, RSAPrivateKey]")  [return-value]
            return ca_cert, ca_key
                   ^~~~~~~~~~~~~~~
security/soar/incident_manager.py:193: error: Call to untyped function
"_load_cases" in typed context  [no-untyped-call]
            self._load_cases()
            ^~~~~~~~~~~~~~~~~~
security/soar/incident_manager.py:196: error: Call to untyped function
"_start_background_tasks" in typed context  [no-untyped-call]
            self._start_background_tasks()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/soar/incident_manager.py:198: error: Function is missing a return type
annotation  [no-untyped-def]
        def _load_cases(self):
        ^
security/soar/incident_manager.py:198: note: Use "-> None" if function does not return a value
security/soar/incident_manager.py:229: error: Function is missing a return type
annotation  [no-untyped-def]
        def _save_cases(self):
        ^
security/soar/incident_manager.py:229: note: Use "-> None" if function does not return a value
security/soar/incident_manager.py:258: error: Function is missing a return type
annotation  [no-untyped-def]
        def _start_background_tasks(self):
        ^
security/soar/incident_manager.py:258: note: Use "-> None" if function does not return a value
security/soar/incident_manager.py:329: error: Call to untyped function
"_save_cases" in typed context  [no-untyped-call]
                self._save_cases()
                ^~~~~~~~~~~~~~~~~~
security/soar/incident_manager.py:342: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _auto_triage(self, case: IncidentCase):
        ^
security/soar/incident_manager.py:377: error: Call to untyped function
"_save_cases" in typed context  [no-untyped-call]
                    self._save_cases()
                    ^~~~~~~~~~~~~~~~~~
security/soar/incident_manager.py:382: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _execute_incident_playbooks(self, case: IncidentCase):
        ^
security/soar/incident_manager.py:475: error: Call to untyped function
"_save_cases" in typed context  [no-untyped-call]
                self._save_cases()
                ^~~~~~~~~~~~~~~~~~
security/soar/incident_manager.py:500: error: Call to untyped function
"_save_cases" in typed context  [no-untyped-call]
                self._save_cases()
                ^~~~~~~~~~~~~~~~~~
security/soar/incident_manager.py:538: error: Call to untyped function
"_save_cases" in typed context  [no-untyped-call]
                self._save_cases()
                ^~~~~~~~~~~~~~~~~~
security/soar/incident_manager.py:541: error: Function is missing a return type
annotation  [no-untyped-def]
        def _add_timeline_entry(
        ^
security/soar/incident_manager.py:619: error: Function is missing a return type
annotation  [no-untyped-def]
        def _escalation_monitor(self):
        ^
security/soar/incident_manager.py:619: note: Use "-> None" if function does not return a value
security/soar/incident_manager.py:662: error: Function is missing a return type
annotation  [no-untyped-def]
        def _metrics_calculator(self):
        ^
security/soar/incident_manager.py:662: note: Use "-> None" if function does not return a value
security/soar/incident_manager.py:749: error: Need type annotation for
"status_counts"  [var-annotated]
                status_counts = defaultdict(int)
                ^~~~~~~~~~~~~
security/soar/incident_manager.py:754: error: Need type annotation for
"severity_counts"  [var-annotated]
                severity_counts = defaultdict(int)
                ^~~~~~~~~~~~~~~
security/soar/incident_manager.py:759: error: Need type annotation for
"type_counts"  [var-annotated]
                type_counts = defaultdict(int)
                ^~~~~~~~~~~
observability/memory_optimizer.py:104: error: Function is missing a return type
annotation  [no-untyped-def]
        def acquire(self):
        ^
observability/memory_optimizer.py:116: error: Function is missing a type
annotation  [no-untyped-def]
        def release(self, obj):
        ^
observability/memory_optimizer.py:174: error: Function is missing a return type
annotation  [no-untyped-def]
        def start_monitoring(self):
        ^
observability/memory_optimizer.py:174: note: Use "-> None" if function does not return a value
observability/memory_optimizer.py:180: error: Incompatible types in assignment
(expression has type "Thread", variable has type "None")  [assignment]
            self.monitor_thread = threading.Thread(
                                  ^
observability/memory_optimizer.py:183: error: "None" has no attribute "start"
[attr-defined]
            self.monitor_thread.start()
            ^~~~~~~~~~~~~~~~~~~~~~~~~
observability/memory_optimizer.py:186: error: Function is missing a return type
annotation  [no-untyped-def]
        def stop_monitoring(self):
        ^
observability/memory_optimizer.py:186: note: Use "-> None" if function does not return a value
observability/memory_optimizer.py:193: error: Function is missing a return type
annotation  [no-untyped-def]
        def _monitor_loop(self):
        ^
observability/memory_optimizer.py:193: note: Use "-> None" if function does not return a value
observability/memory_optimizer.py:199: error: Call to untyped function
"_detect_memory_leaks" in typed context  [no-untyped-call]
                    self._detect_memory_leaks()
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/memory_optimizer.py:243: error: Function is missing a return type
annotation  [no-untyped-def]
        def _detect_memory_leaks(self):
        ^
observability/memory_optimizer.py:243: note: Use "-> None" if function does not return a value
observability/memory_optimizer.py:250: error: Call to untyped function
"_detect_leaks_with_pympler" in typed context  [no-untyped-call]
                self._detect_leaks_with_pympler()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/memory_optimizer.py:252: error: Call to untyped function
"_detect_leaks_basic" in typed context  [no-untyped-call]
                self._detect_leaks_basic()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~
observability/memory_optimizer.py:254: error: Function is missing a return type
annotation  [no-untyped-def]
        def _detect_leaks_with_pympler(self):
        ^
observability/memory_optimizer.py:254: note: Use "-> None" if function does not return a value
observability/memory_optimizer.py:296: error: "list[Any]" has no attribute
"popleft"  [attr-defined]
                        self.object_tracking[obj_type].popleft()
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/memory_optimizer.py:301: error: Function is missing a return type
annotation  [no-untyped-def]
        def _detect_leaks_basic(self):
        ^
observability/memory_optimizer.py:301: note: Use "-> None" if function does not return a value
observability/memory_optimizer.py:305: error: Need type annotation for
"type_counts"  [var-annotated]
            type_counts = defaultdict(int)
            ^~~~~~~~~~~
observability/memory_optimizer.py:313: error: Invalid index type "str" for
"defaultdict[type, list[Any]]"; expected type "type"  [index]
                if len(self.object_tracking[obj_type]) > 0:
                                            ^~~~~~~~
observability/memory_optimizer.py:314: error: Invalid index type "str" for
"defaultdict[type, list[Any]]"; expected type "type"  [index]
                    previous_count = self.object_tracking[obj_type][-1]
                                                          ^~~~~~~~
observability/memory_optimizer.py:333: error: Invalid index type "str" for
"defaultdict[type, list[Any]]"; expected type "type"  [index]
                self.object_tracking[obj_type].append(count)
                                     ^~~~~~~~
observability/memory_optimizer.py:334: error: Invalid index type "str" for
"defaultdict[type, list[Any]]"; expected type "type"  [index]
                if len(self.object_tracking[obj_type]) > 100:
                                            ^~~~~~~~
observability/memory_optimizer.py:335: error: "list[Any]" has no attribute
"popleft"  [attr-defined]
                    self.object_tracking[obj_type].popleft()
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/memory_optimizer.py:335: error: Invalid index type "str" for
"defaultdict[type, list[Any]]"; expected type "type"  [index]
                    self.object_tracking[obj_type].popleft()
                                         ^~~~~~~~
observability/memory_optimizer.py:356: error: Function is missing a return type
annotation  [no-untyped-def]
        def clear_leak_detections(self):
        ^
observability/memory_optimizer.py:356: note: Use "-> None" if function does not return a value
observability/memory_optimizer.py:432: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
observability/memory_optimizer.py:432: note: Use "-> None" if function does not return a value
observability/memory_optimizer.py:435: error: Need type annotation for
"collection_times"  [var-annotated]
            self.collection_times = deque(maxlen=100)
                                    ^~~~~~~~~~~~~~~~~
observability/memory_optimizer.py:438: error: Function is missing a return type
annotation  [no-untyped-def]
        def enable_tuning(self, workload_type: str = "mixed"):
        ^
observability/memory_optimizer.py:461: error: Function is missing a return type
annotation  [no-untyped-def]
        def disable_tuning(self):
        ^
observability/memory_optimizer.py:461: note: Use "-> None" if function does not return a value
observability/memory_optimizer.py:520: error: Call to untyped function
"GarbageCollectionTuner" in typed context  [no-untyped-call]
            self.gc_tuner = GarbageCollectionTuner()
                            ^~~~~~~~~~~~~~~~~~~~~~~~
observability/memory_optimizer.py:532: error: Function is missing a return type
annotation  [no-untyped-def]
        def start_optimization(self, workload_type: str = "mixed"):
        ^
observability/memory_optimizer.py:535: error: Call to untyped function
"start_monitoring" in typed context  [no-untyped-call]
            self.profiler.start_monitoring()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/memory_optimizer.py:541: error: Call to untyped function
"_create_default_pools" in typed context  [no-untyped-call]
            self._create_default_pools()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/memory_optimizer.py:547: error: Function is missing a return type
annotation  [no-untyped-def]
        def stop_optimization(self):
        ^
observability/memory_optimizer.py:547: note: Use "-> None" if function does not return a value
observability/memory_optimizer.py:549: error: Call to untyped function
"stop_monitoring" in typed context  [no-untyped-call]
            self.profiler.stop_monitoring()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/memory_optimizer.py:550: error: Call to untyped function
"disable_tuning" in typed context  [no-untyped-call]
            self.gc_tuner.disable_tuning()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/memory_optimizer.py:553: error: Function is missing a return type
annotation  [no-untyped-def]
        def _create_default_pools(self):
        ^
observability/memory_optimizer.py:576: error: Function is missing a return type
annotation  [no-untyped-def]
        def create_object_pool(
        ^
observability/memory_optimizer.py:586: error: Function is missing a type
annotation  [no-untyped-def]
        def register_weak_ref(self, obj):
        ^
observability/memory_optimizer.py:597: error: Function is missing a return type
annotation  [no-untyped-def]
        def optimize_memory(self):
        ^
observability/memory_optimizer.py:597: note: Use "-> None" if function does not return a value
observability/memory_optimizer.py:683: error: Function is missing a return type
annotation  [no-untyped-def]
        def memory_tracking(self, operation_name: str):
        ^
observability/memory_optimizer.py:716: error: Function is missing a return type
annotation  [no-untyped-def]
    def start_memory_optimization(workload_type: str = "mixed"):
    ^
observability/memory_optimizer.py:721: error: Function is missing a return type
annotation  [no-untyped-def]
    def stop_memory_optimization():
    ^
observability/memory_optimizer.py:721: note: Use "-> None" if function does not return a value
observability/memory_optimizer.py:723: error: Call to untyped function
"stop_optimization" in typed context  [no-untyped-call]
        memory_optimizer.stop_optimization()
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/memory_optimizer.py:731: error: Function is missing a return type
annotation  [no-untyped-def]
    def force_memory_optimization():
    ^
observability/memory_optimizer.py:731: note: Use "-> None" if function does not return a value
observability/memory_optimizer.py:733: error: Call to untyped function
"optimize_memory" in typed context  [no-untyped-call]
        memory_optimizer.optimize_memory()
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/memory_optimizer.py:737: error: Function is missing a return type
annotation  [no-untyped-def]
    def benchmark_memory_optimization():
    ^
observability/memory_optimizer.py:737: note: Use "-> None" if function does not return a value
observability/memory_optimizer.py:771: error: Call to untyped function
"force_memory_optimization" in typed context  [no-untyped-call]
            force_memory_optimization()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/memory_optimizer.py:785: error: Call to untyped function
"stop_memory_optimization" in typed context  [no-untyped-call]
            stop_memory_optimization()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~
observability/memory_optimizer.py:791: error: Call to untyped function
"benchmark_memory_optimization" in typed context  [no-untyped-call]
        benchmark_memory_optimization()
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_efficient_data_structures.py:40: error: Function is missing a
return type annotation  [no-untyped-def]
    def demo_lazy_belief_arrays():
    ^
examples/demo_efficient_data_structures.py:40: note: Use "-> None" if function does not return a value
examples/demo_efficient_data_structures.py:49: error: Argument "dtype" to
"LazyBeliefArray" has incompatible type "type[floating[Any]]"; expected
"dtype[Any]"  [arg-type]
            shape, dtype=np.float32, sparsity_threshold=0.8
                         ^~~~~~~~~~
examples/demo_efficient_data_structures.py:98: error: Function is missing a
return type annotation  [no-untyped-def]
    def demo_memory_mapped_buffers():
    ^
examples/demo_efficient_data_structures.py:98: note: Use "-> None" if function does not return a value
examples/demo_efficient_data_structures.py:106: error: Argument "dtype" to
"MemoryMappedBuffer" has incompatible type "type[floating[Any]]"; expected
"dtype[Any]"  [arg-type]
        buffer = MemoryMappedBuffer(shape, dtype=np.float32)
                                                 ^~~~~~~~~~
examples/demo_efficient_data_structures.py:116: error: Call to untyped function
"sync" in typed context  [no-untyped-call]
        buffer.sync()  # Ensure written to disk
        ^~~~~~~~~~~~~
examples/demo_efficient_data_structures.py:155: error: Function is missing a
return type annotation  [no-untyped-def]
    def demo_compact_action_history():
    ^
examples/demo_efficient_data_structures.py:155: note: Use "-> None" if function does not return a value
examples/demo_efficient_data_structures.py:221: error: Function is missing a
return type annotation  [no-untyped-def]
    def demo_efficient_temporal_sequence():
    ^
examples/demo_efficient_data_structures.py:221: note: Use "-> None" if function does not return a value
examples/demo_efficient_data_structures.py:249: error: Incompatible types in
assignment (expression has type "ndarray[tuple[Any, ...], dtype[float64]]",
variable has type "ndarray[tuple[Any, ...], dtype[floating[_32Bit]]]")
[assignment]
            base_state = new_state
                         ^~~~~~~~~
examples/demo_efficient_data_structures.py:296: error: Function is missing a
return type annotation  [no-untyped-def]
    def demo_compact_knowledge_graph():
    ^
examples/demo_efficient_data_structures.py:296: note: Use "-> None" if function does not return a value
examples/demo_efficient_data_structures.py:372: error: Incompatible types in
assignment (expression has type "ndarray[tuple[Any, ...], dtype[Any]] | None",
variable has type "ndarray[tuple[int], dtype[floating[_32Bit]]]")  [assignment]
            features = kg.get_node_features(node_id)
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_efficient_data_structures.py:391: error: Call to untyped function
"compact_storage" in typed context  [no-untyped-call]
        kg.compact_storage()
        ^~~~~~~~~~~~~~~~~~~~
examples/demo_efficient_data_structures.py:403: error: Function is missing a
return type annotation  [no-untyped-def]
    def demo_performance_benchmarking():
    ^
examples/demo_efficient_data_structures.py:403: note: Use "-> None" if function does not return a value
examples/demo_efficient_data_structures.py:410: error: Call to untyped function
"benchmark_data_structures" in typed context  [no-untyped-call]
        results = benchmark_data_structures()
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_efficient_data_structures.py:451: error: Function is missing a
return type annotation  [no-untyped-def]
    def demo_factory_functions():
    ^
examples/demo_efficient_data_structures.py:451: note: Use "-> None" if function does not return a value
examples/demo_efficient_data_structures.py:489: error: Item "LazyBeliefArray"
of "LazyBeliefArray | MemoryMappedBuffer" has no attribute "_finalizer"
[union-attr]
            large_buffer._finalizer()
            ^~~~~~~~~~~~~~~~~~~~~~~
examples/demo_efficient_data_structures.py:501: error: Function is missing a
return type annotation  [no-untyped-def]
    def main():
    ^
examples/demo_efficient_data_structures.py:501: note: Use "-> None" if function does not return a value
examples/demo_efficient_data_structures.py:508: error: Call to untyped function
"demo_lazy_belief_arrays" in typed context  [no-untyped-call]
            demo_lazy_belief_arrays()
            ^~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_efficient_data_structures.py:509: error: Call to untyped function
"demo_memory_mapped_buffers" in typed context  [no-untyped-call]
            demo_memory_mapped_buffers()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_efficient_data_structures.py:510: error: Call to untyped function
"demo_compact_action_history" in typed context  [no-untyped-call]
            demo_compact_action_history()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_efficient_data_structures.py:511: error: Call to untyped function
"demo_efficient_temporal_sequence" in typed context  [no-untyped-call]
            demo_efficient_temporal_sequence()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_efficient_data_structures.py:512: error: Call to untyped function
"demo_compact_knowledge_graph" in typed context  [no-untyped-call]
            demo_compact_knowledge_graph()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_efficient_data_structures.py:513: error: Call to untyped function
"demo_performance_benchmarking" in typed context  [no-untyped-call]
            demo_performance_benchmarking()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_efficient_data_structures.py:514: error: Call to untyped function
"demo_factory_functions" in typed context  [no-untyped-call]
            demo_factory_functions()
            ^~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_efficient_data_structures.py:537: error: Call to untyped function
"main" in typed context  [no-untyped-call]
        main()
        ^~~~~~
examples/demo_agent_memory_lifecycle.py:38: error: Function is missing a return
type annotation  [no-untyped-def]
    def demo_basic_lifecycle():
    ^
examples/demo_agent_memory_lifecycle.py:38: note: Use "-> None" if function does not return a value
examples/demo_agent_memory_lifecycle.py:97: error: Function is missing a return
type annotation  [no-untyped-def]
    def demo_memory_context_manager():
    ^
examples/demo_agent_memory_lifecycle.py:97: note: Use "-> None" if function does not return a value
examples/demo_agent_memory_lifecycle.py:122: error: Item "None" of
"AgentMemoryProfile | None" has no attribute "state"  [union-attr]
        print(f"\n2. Agent state after context: {final_profile.state}")
                                                ^~~~~~~~~~~~~~~~~~~~
examples/demo_agent_memory_lifecycle.py:123: error: Item "None" of
"AgentMemoryProfile | None" has no attribute "lifecycle_events"  [union-attr]
        print(f"   Lifecycle events: {len(final_profile.lifecycle_events)}...
                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_agent_memory_lifecycle.py:126: error: Function is missing a
return type annotation  [no-untyped-def]
    def demo_memory_pressure_cleanup():
    ^
examples/demo_agent_memory_lifecycle.py:126: note: Use "-> None" if function does not return a value
examples/demo_agent_memory_lifecycle.py:181: error: Function is missing a
return type annotation  [no-untyped-def]
    def demo_lifecycle_events_tracking():
    ^
examples/demo_agent_memory_lifecycle.py:181: note: Use "-> None" if function does not return a value
examples/demo_agent_memory_lifecycle.py:227: error: Function is missing a
return type annotation  [no-untyped-def]
    def demo_agent_pool_simulation():
    ^
examples/demo_agent_memory_lifecycle.py:227: note: Use "-> None" if function does not return a value
examples/demo_agent_memory_lifecycle.py:283: error: Incompatible types in
assignment (expression has type "AgentMemoryProfile | None", variable has type
"AgentMemoryProfile")  [assignment]
                profile = manager.get_agent_profile(agent_id)
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_agent_memory_lifecycle.py:308: error: Incompatible types in
assignment (expression has type "AgentMemoryProfile | None", variable has type
"AgentMemoryProfile")  [assignment]
                profile = manager.get_agent_profile(agent_id)
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_agent_memory_lifecycle.py:338: error: Function is missing a
return type annotation  [no-untyped-def]
    def main():
    ^
examples/demo_agent_memory_lifecycle.py:338: note: Use "-> None" if function does not return a value
examples/demo_agent_memory_lifecycle.py:345: error: Call to untyped function
"demo_basic_lifecycle" in typed context  [no-untyped-call]
            demo_basic_lifecycle()
            ^~~~~~~~~~~~~~~~~~~~~~
examples/demo_agent_memory_lifecycle.py:346: error: Call to untyped function
"demo_memory_context_manager" in typed context  [no-untyped-call]
            demo_memory_context_manager()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_agent_memory_lifecycle.py:347: error: Call to untyped function
"demo_memory_pressure_cleanup" in typed context  [no-untyped-call]
            demo_memory_pressure_cleanup()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_agent_memory_lifecycle.py:348: error: Call to untyped function
"demo_lifecycle_events_tracking" in typed context  [no-untyped-call]
            demo_lifecycle_events_tracking()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_agent_memory_lifecycle.py:349: error: Call to untyped function
"demo_agent_pool_simulation" in typed context  [no-untyped-call]
            demo_agent_pool_simulation()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_agent_memory_lifecycle.py:372: error: Call to untyped function
"shutdown" in typed context  [no-untyped-call]
            manager.shutdown()
            ^~~~~~~~~~~~~~~~~~
examples/demo_agent_memory_lifecycle.py:377: error: Call to untyped function
"main" in typed context  [no-untyped-call]
        main()
        ^~~~~~
database/indexing_strategy.py:27: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
database/indexing_strategy.py:27: note: Use "-> None" if function does not return a value
database/indexing_strategy.py:95: error: No overload variant of "__getitem__"
of "Row" matches argument type "str"  [call-overload]
                self.index_stats[idx["index"]] = idx
                                 ^~~~~~~~~~~~
database/indexing_strategy.py:95: note: Possible overload variants:
database/indexing_strategy.py:95: note:     def __getitem__(self, int, /) -> Any
database/indexing_strategy.py:95: note:     def __getitem__(self, slice, /) -> Sequence[Any]
database/indexing_strategy.py:95: error: Incompatible types in assignment
(expression has type "Row[Any]", target has type "dict[str, Any]")  [assignment]
                self.index_stats[idx["index"]] = idx
                                                 ^~~
database/indexing_strategy.py:224: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
database/indexing_strategy.py:224: note: Use "-> None" if function does not return a value
database/indexing_strategy.py:277: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _create_partitions(
        ^
database/indexing_strategy.py:290: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _create_monthly_partitions(
        ^
database/indexing_strategy.py:326: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _create_daily_partitions(
        ^
database/indexing_strategy.py:357: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _create_yearly_partitions(
        ^
database/indexing_strategy.py:487: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
database/indexing_strategy.py:487: note: Use "-> None" if function does not return a value
database/indexing_strategy.py:492: error: Function is missing a return type
annotation  [no-untyped-def]
        def analyze_query_pattern(
        ^
database/indexing_strategy.py:503: error: Function is missing a return type
annotation  [no-untyped-def]
        def _analyze_composite_opportunity(
        ^
database/indexing_strategy.py:573: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
database/indexing_strategy.py:573: note: Use "-> None" if function does not return a value
database/indexing_strategy.py:591: error: Argument "days" to "timedelta" has
incompatible type "int | None"; expected "float"  [arg-type]
                interval = timedelta(days=task_config["interval_days"])
                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
database/indexing_strategy.py:593: error: No overload variant of "__sub__" of
"datetime" matches argument type "int"  [operator]
                if last_run is None or current_time - last_run > interval:
                                       ^~~~~~~~~~~~~~~~~~~~~~~
database/indexing_strategy.py:593: note: Possible overload variants:
database/indexing_strategy.py:593: note:     def __sub__(self, datetime, /) -> timedelta
database/indexing_strategy.py:593: note:     def __sub__(self, timedelta, /) -> datetime
database/indexing_strategy.py:599: error: Unsupported operand types for +
("int" and "timedelta")  [operator]
    ...                           (current_time - (last_run + interval)).days
                                                              ^~~~~~~~
database/indexing_strategy.py:710: error: Incompatible types in assignment
(expression has type "datetime", target has type "int | None")  [assignment]
    ...        self.maintenance_tasks[task_name]["last_run"] = datetime.now()
                                                               ^~~~~~~~~~~~~~
database/indexing_strategy.py:719: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _perform_analyze(
        ^
database/indexing_strategy.py:737: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _perform_vacuum(
        ^
database/indexing_strategy.py:749: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _perform_reindex(
        ^
database/indexing_strategy.py:786: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
database/indexing_strategy.py:786: note: Use "-> None" if function does not return a value
database/indexing_strategy.py:788: error: Call to untyped function
"IndexUsageMonitor" in typed context  [no-untyped-call]
            self.usage_monitor = IndexUsageMonitor()
                                 ^~~~~~~~~~~~~~~~~~~
database/indexing_strategy.py:789: error: Call to untyped function
"PartitioningStrategy" in typed context  [no-untyped-call]
            self.partitioning = PartitioningStrategy()
                                ^~~~~~~~~~~~~~~~~~~~~~
database/indexing_strategy.py:790: error: Call to untyped function
"CompositeIndexDesigner" in typed context  [no-untyped-call]
            self.composite_designer = CompositeIndexDesigner()
                                      ^~~~~~~~~~~~~~~~~~~~~~~~
database/indexing_strategy.py:791: error: Call to untyped function
"IndexMaintenanceScheduler" in typed context  [no-untyped-call]
            self.maintenance_scheduler = IndexMaintenanceScheduler()
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
database/indexing_strategy.py:938: error: Call to untyped function
"IndexingStrategy" in typed context  [no-untyped-call]
            _indexing_strategy = IndexingStrategy()
                                 ^~~~~~~~~~~~~~~~~~
database/connection_manager.py:47: error: Function is missing a type annotation
for one or more arguments  [no-untyped-def]
        def execute_with_retry(self, func, *args, **kwargs) -> Any:
        ^
database/connection_manager.py:99: error: Function is missing a return type
annotation  [no-untyped-def]
            def create_connection():
            ^
database/connection_manager.py:109: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
        def create_engine_with_pool_config(self, **engine_kwargs) -> Engin...
        ^
agents/optimized_agent_manager.py:77: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
agents/optimized_agent_manager.py:77: note: Use "-> None" if function does not return a value
agents/optimized_agent_manager.py:79: error: Need type annotation for "queue"
[var-annotated]
            self.queue = deque()
                         ^~~~~~~
agents/optimized_agent_manager.py:84: error: Function is missing a type
annotation  [no-untyped-def]
        def push(self, item):
        ^
agents/optimized_agent_manager.py:90: error: Function is missing a return type
annotation  [no-untyped-def]
        def pop(self):
        ^
agents/optimized_agent_manager.py:97: error: Function is missing a return type
annotation  [no-untyped-def]
        def steal(self):
        ^
agents/optimized_agent_manager.py:105: error: Function is missing a return type
annotation  [no-untyped-def]
        def size(self):
        ^
agents/optimized_agent_manager.py:110: error: Function is missing a return type
annotation  [no-untyped-def]
        def is_empty(self):
        ^
agents/optimized_agent_manager.py:129: error: Call to untyped function
"WorkStealingQueue" in typed context  [no-untyped-call]
                WorkStealingQueue() for _ in range(self.num_workers)
                ^~~~~~~~~~~~~~~~~~~
agents/optimized_agent_manager.py:144: error: Call to untyped function
"_start_workers" in typed context  [no-untyped-call]
            self._start_workers()
            ^~~~~~~~~~~~~~~~~~~~~
agents/optimized_agent_manager.py:173: error: Function is missing a return type
annotation  [no-untyped-def]
        def _start_workers(self):
        ^
agents/optimized_agent_manager.py:173: note: Use "-> None" if function does not return a value
agents/optimized_agent_manager.py:185: error: Function is missing a return type
annotation  [no-untyped-def]
        def _worker_loop(self, worker_id: int):
        ^
agents/optimized_agent_manager.py:194: error: Call to untyped function "pop" in
typed context  [no-untyped-call]
                task = my_queue.pop()
                       ^~~~~~~~~~~~~~
agents/optimized_agent_manager.py:200: error: Call to untyped function "steal"
in typed context  [no-untyped-call]
                            stolen_task = self.work_queues[victim_id].stea...
                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/optimized_agent_manager.py:222: error: Call to untyped function
"_update_workload_detection" in typed context  [no-untyped-call]
                        self._update_workload_detection()
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/optimized_agent_manager.py:231: error: Function is missing a return type
annotation  [no-untyped-def]
        def _update_workload_detection(self):
        ^
agents/optimized_agent_manager.py:231: note: Use "-> None" if function does not return a value
agents/optimized_agent_manager.py:253: error: Call to untyped function
"_resize_pool" in typed context  [no-untyped-call]
                self._resize_pool()
                ^~~~~~~~~~~~~~~~~~~
agents/optimized_agent_manager.py:254: error: Incompatible types in assignment
(expression has type "float", variable has type "int")  [assignment]
                self.last_resize_time = current_time
                                        ^~~~~~~~~~~~
agents/optimized_agent_manager.py:256: error: Function is missing a return type
annotation  [no-untyped-def]
        def _resize_pool(self):
        ^
agents/optimized_agent_manager.py:256: note: Use "-> None" if function does not return a value
agents/optimized_agent_manager.py:270: error: Function is missing a return type
annotation  [no-untyped-def]
        def submit(self, fn: Callable, *args, **kwargs):
        ^
agents/optimized_agent_manager.py:270: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
        def submit(self, fn: Callable, *args, **kwargs):
        ^
agents/optimized_agent_manager.py:270: error: Missing type parameters for
generic type "Callable"  [type-arg]
        def submit(self, fn: Callable, *args, **kwargs):
                             ^
agents/optimized_agent_manager.py:277: error: Call to untyped function "size"
in typed context  [no-untyped-call]
                size = work_queue.size()
                       ^~~~~~~~~~~~~~~~~
agents/optimized_agent_manager.py:286: error: Incompatible types in assignment
(expression has type "Callable[..., Any]", variable has type
"tuple[Callable[..., Any], tuple[Any, ...], dict[str, Any]]")  [assignment]
                task = fn
                       ^~
agents/optimized_agent_manager.py:288: error: Call to untyped function "push"
in typed context  [no-untyped-call]
            self.work_queues[target_worker].push(task)
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/optimized_agent_manager.py:293: error: Call to untyped function "size"
in typed context  [no-untyped-call]
            queue_sizes = [q.size() for q in self.work_queues]
                           ^~~~~~~~
agents/optimized_agent_manager.py:314: error: Function is missing a return type
annotation  [no-untyped-def]
        def shutdown(self):
        ^
agents/optimized_agent_manager.py:314: note: Use "-> None" if function does not return a value
agents/optimized_agent_manager.py:341: error: Function is missing a return type
annotation  [no-untyped-def]
        def register(self, agent_id: str, agent: Any):
        ^
agents/optimized_agent_manager.py:428: error: Function is missing a return type
annotation  [no-untyped-def]
        def release(self, block: np.ndarray):
        ^
agents/optimized_agent_manager.py:455: error: Incompatible default for argument
"config" (default has type "None", argument has type "OptimizationConfig")
[assignment]
        def __init__(self, config: OptimizationConfig = None):
                                                        ^~~~
agents/optimized_agent_manager.py:455: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
agents/optimized_agent_manager.py:455: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
agents/optimized_agent_manager.py:493: error: Call to untyped function
"_initialize_async_io" in typed context  [no-untyped-call]
                self._initialize_async_io()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/optimized_agent_manager.py:496: error: Call to untyped function
"_start_batch_processor" in typed context  [no-untyped-call]
            self._start_batch_processor()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/optimized_agent_manager.py:502: error: Function is missing a return type
annotation  [no-untyped-def]
        def _initialize_async_io(self):
        ^
agents/optimized_agent_manager.py:502: note: Use "-> None" if function does not return a value
agents/optimized_agent_manager.py:504: error: Incompatible types in assignment
(expression has type "AbstractEventLoop", variable has type "None")
[assignment]
            self.async_loop = asyncio.new_event_loop()
                              ^~~~~~~~~~~~~~~~~~~~~~~~
agents/optimized_agent_manager.py:505: error: Incompatible types in assignment
(expression has type "Thread", variable has type "None")  [assignment]
            self.async_thread = threading.Thread(
                                ^
agents/optimized_agent_manager.py:508: error: "None" has no attribute "start"
[attr-defined]
            self.async_thread.start()
            ^~~~~~~~~~~~~~~~~~~~~~~
agents/optimized_agent_manager.py:510: error: Function is missing a return type
annotation  [no-untyped-def]
        def _run_async_loop(self):
        ^
agents/optimized_agent_manager.py:510: note: Use "-> None" if function does not return a value
agents/optimized_agent_manager.py:513: error: "None" has no attribute
"run_forever"  [attr-defined]
            self.async_loop.run_forever()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/optimized_agent_manager.py:515: error: Function is missing a return type
annotation  [no-untyped-def]
        def _start_batch_processor(self):
        ^
agents/optimized_agent_manager.py:515: note: Use "-> None" if function does not return a value
agents/optimized_agent_manager.py:517: error: Incompatible types in assignment
(expression has type "Thread", variable has type "None")  [assignment]
            self.batch_processor = threading.Thread(
                                   ^
agents/optimized_agent_manager.py:522: error: "None" has no attribute "start"
[attr-defined]
            self.batch_processor.start()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~
agents/optimized_agent_manager.py:524: error: Function is missing a return type
annotation  [no-untyped-def]
        def _batch_processing_loop(self):
        ^
agents/optimized_agent_manager.py:524: note: Use "-> None" if function does not return a value
agents/optimized_agent_manager.py:556: error: Function is missing a return type
annotation  [no-untyped-def]
        def _process_batch(self, batch: List[Any]):
        ^
agents/optimized_agent_manager.py:595: error: Function is missing a return type
annotation  [no-untyped-def]
        def _process_agent_step_batch(self, operations: List[Dict[str, Any...
        ^
agents/optimized_agent_manager.py:635: error: Function is missing a return type
annotation  [no-untyped-def]
        def _process_agent_update_batch(self, operations: List[Dict[str, A...
        ^
agents/optimized_agent_manager.py:653: error: Function is missing a return type
annotation  [no-untyped-def]
        def _process_single_operation(self, operation: Dict[str, Any]):
        ^
agents/optimized_agent_manager.py:659: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _async_save_agent_state(self, agent_id: str, state: Any)...
        ^
agents/optimized_agent_manager.py:670: error: Function is missing a return type
annotation  [no-untyped-def]
        def register_agent(self, agent_id: str, agent: Any):
        ^
agents/optimized_agent_manager.py:696: error: Function is missing a return type
annotation  [no-untyped-def]
        def step_agents_async(self, observations: Dict[str, Any]):
        ^
agents/optimized_agent_manager.py:704: error: Argument 1 to "put" of "Queue"
has incompatible type "dict[str, Any]"; expected "AgentBatch"  [arg-type]
                self.batch_queue.put(operation)
                                     ^~~~~~~~~
agents/optimized_agent_manager.py:706: error: Function is missing a return type
annotation  [no-untyped-def]
        def update_agent(self, agent_id: str, update: Dict[str, Any]):
        ^
agents/optimized_agent_manager.py:713: error: Argument 1 to "put" of "Queue"
has incompatible type "dict[str, Collection[str]]"; expected "AgentBatch"
[arg-type]
            self.batch_queue.put(operation)
                                 ^~~~~~~~~
agents/optimized_agent_manager.py:749: error: Function is missing a return type
annotation  [no-untyped-def]
        def force_batch_processing(self):
        ^
agents/optimized_agent_manager.py:749: note: Use "-> None" if function does not return a value
agents/optimized_agent_manager.py:755: error: Function is missing a return type
annotation  [no-untyped-def]
        def shutdown(self):
        ^
agents/optimized_agent_manager.py:755: note: Use "-> None" if function does not return a value
agents/optimized_agent_manager.py:765: error: Call to untyped function
"shutdown" in typed context  [no-untyped-call]
            self.thread_pool.shutdown()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/optimized_agent_manager.py:778: error: Incompatible default for argument
"config" (default has type "None", argument has type "OptimizationConfig")
[assignment]
        config: OptimizationConfig = None,
                                     ^~~~
agents/optimized_agent_manager.py:778: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
agents/optimized_agent_manager.py:778: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
agents/optimized_agent_manager.py:788: error: Function is missing a return type
annotation  [no-untyped-def]
    def benchmark_optimized_manager():
    ^
agents/optimized_agent_manager.py:801: error: Function is missing a type
annotation  [no-untyped-def]
            def step(self, observation):
            ^
agents/optimized_agent_manager.py:807: error: Function is missing a type
annotation  [no-untyped-def]
            def update(self, update_data):
            ^
agents/optimized_agent_manager.py:876: error: Call to untyped function
"shutdown" in typed context  [no-untyped-call]
            manager.shutdown()
            ^~~~~~~~~~~~~~~~~~
agents/optimized_agent_manager.py:882: error: Call to untyped function
"benchmark_optimized_manager" in typed context  [no-untyped-call]
        benchmark_optimized_manager()
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/memory_optimization/agent_memory_optimizer.py:118: error: Function is
missing a return type annotation  [no-untyped-def]
        def __init__(self):
        ^
agents/memory_optimization/agent_memory_optimizer.py:118: note: Use "-> None" if function does not return a value
agents/memory_optimization/agent_memory_optimizer.py:125: error: Missing type
parameters for generic type "Tuple"  [type-arg]
            self._transition_matrices: Dict[Tuple, np.ndarray] = {}
                                            ^
agents/memory_optimization/agent_memory_optimizer.py:126: error: Missing type
parameters for generic type "Tuple"  [type-arg]
            self._observation_matrices: Dict[Tuple, np.ndarray] = {}
                                             ^
agents/memory_optimization/agent_memory_optimizer.py:133: error: Missing type
parameters for generic type "Callable"  [type-arg]
            initializer: Optional[Callable] = None,
                                  ^
agents/memory_optimization/agent_memory_optimizer.py:185: error: Function is
missing a return type annotation  [no-untyped-def]
        def release_parameter(self, name: str):
        ^
agents/memory_optimization/agent_memory_optimizer.py:258: error: Function is
missing a return type annotation  [no-untyped-def]
        def deallocate(self, agent_id: str):
        ^
agents/memory_optimization/agent_memory_optimizer.py:285: error: Function is
missing a return type annotation  [no-untyped-def]
        def write_observation(self, agent_id: str, observation: np.ndarray...
        ^
agents/memory_optimization/agent_memory_optimizer.py:343: error: Function is
missing a return type annotation  [no-untyped-def]
        def cleanup(self):
        ^
agents/memory_optimization/agent_memory_optimizer.py:343: note: Use "-> None" if function does not return a value
agents/memory_optimization/agent_memory_optimizer.py:372: error: Function is
missing a return type annotation  [no-untyped-def]
        def append(self, item: Any):
        ^
agents/memory_optimization/agent_memory_optimizer.py:441: error: Function is
missing a return type annotation  [no-untyped-def]
        def __init__(self):
        ^
agents/memory_optimization/agent_memory_optimizer.py:441: note: Use "-> None" if function does not return a value
agents/memory_optimization/agent_memory_optimizer.py:450: error: Function is
missing a return type annotation  [no-untyped-def]
        def get_buffer(self, shape: Tuple[int, ...], dtype: type = np.floa...
        ^
agents/memory_optimization/agent_memory_optimizer.py:502: error: Call to
untyped function "SharedAgentParameters" in typed context  [no-untyped-call]
            self.shared_params = SharedAgentParameters()
                                 ^~~~~~~~~~~~~~~~~~~~~~~
agents/memory_optimization/agent_memory_optimizer.py:504: error: Call to
untyped function "SharedComputationPool" in typed context  [no-untyped-call]
            self.computation_pool = SharedComputationPool()
                                    ^~~~~~~~~~~~~~~~~~~~~~~
knowledge_graph/storage.py:347: error: Argument "id" to "KnowledgeNode" has
incompatible type "Column[str]"; expected "str"  [arg-type]
                        id=node_model.id,
                           ^~~~~~~~~~~~~
knowledge_graph/storage.py:349: error: Argument "label" to "KnowledgeNode" has
incompatible type "Column[str]"; expected "str"  [arg-type]
                        label=node_model.label,
                              ^~~~~~~~~~~~~~~~
knowledge_graph/storage.py:350: error: Argument "properties" to "KnowledgeNode"
has incompatible type "Column[Any] | dict[Never, Never]"; expected
"dict[str, Any]"  [arg-type]
                        properties=node_model.properties or {},
                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
knowledge_graph/storage.py:351: error: Argument "created_at" to "KnowledgeNode"
has incompatible type "Column[datetime]"; expected "datetime"  [arg-type]
                        created_at=node_model.created_at,
                                   ^~~~~~~~~~~~~~~~~~~~~
knowledge_graph/storage.py:352: error: Argument "updated_at" to "KnowledgeNode"
has incompatible type "Column[datetime]"; expected "datetime"  [arg-type]
                        updated_at=node_model.updated_at,
                                   ^~~~~~~~~~~~~~~~~~~~~
knowledge_graph/storage.py:353: error: Argument "version" to "KnowledgeNode"
has incompatible type "Column[int]"; expected "int"  [arg-type]
                        version=node_model.version,
                                ^~~~~~~~~~~~~~~~~~
knowledge_graph/storage.py:354: error: Argument "confidence" to "KnowledgeNode"
has incompatible type "Column[float]"; expected "float"  [arg-type]
                        confidence=node_model.confidence,
                                   ^~~~~~~~~~~~~~~~~~~~~
knowledge_graph/storage.py:355: error: Argument "source" to "KnowledgeNode" has
incompatible type "Column[str]"; expected "str | None"  [arg-type]
                        source=node_model.source,
                               ^~~~~~~~~~~~~~~~~
knowledge_graph/storage.py:374: error: Argument "id" to "KnowledgeEdge" has
incompatible type "Column[str]"; expected "str"  [arg-type]
                        id=edge_model.id,
                           ^~~~~~~~~~~~~
knowledge_graph/storage.py:375: error: Argument "source_id" to "KnowledgeEdge"
has incompatible type "Column[str]"; expected "str"  [arg-type]
                        source_id=edge_model.source_id,
                                  ^~~~~~~~~~~~~~~~~~~~
knowledge_graph/storage.py:376: error: Argument "target_id" to "KnowledgeEdge"
has incompatible type "Column[str]"; expected "str"  [arg-type]
                        target_id=edge_model.target_id,
                                  ^~~~~~~~~~~~~~~~~~~~
knowledge_graph/storage.py:378: error: Argument "properties" to "KnowledgeEdge"
has incompatible type "Column[Any] | dict[Never, Never]"; expected
"dict[str, Any]"  [arg-type]
                        properties=edge_model.properties or {},
                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
knowledge_graph/storage.py:379: error: Argument "created_at" to "KnowledgeEdge"
has incompatible type "Column[datetime]"; expected "datetime"  [arg-type]
                        created_at=edge_model.created_at,
                                   ^~~~~~~~~~~~~~~~~~~~~
knowledge_graph/storage.py:380: error: Argument "confidence" to "KnowledgeEdge"
has incompatible type "Column[float]"; expected "float"  [arg-type]
                        confidence=edge_model.confidence,
                                   ^~~~~~~~~~~~~~~~~~~~~
knowledge_graph/storage.py:502: error: Returning Any from function declared to
return "KnowledgeGraph | None"  [no-any-return]
                    return pickle.load(
                    ^
knowledge_graph/storage.py:548: error: Function is missing a return type
annotation  [no-untyped-def]
        def _save_metadata(self, metadata: Dict[str, Any]):
        ^
knowledge_graph/storage.py:554: error: Function is missing a return type
annotation  [no-untyped-def]
        def _update_metadata(self, graph: KnowledgeGraph):
        ^
auth/ssl_tls_config.py:83: error: Missing type parameters for generic type
"Callable"  [type-arg]
        sni_callback: Optional[Callable] = None
                               ^
auth/ssl_tls_config.py:200: error: Missing type parameters for generic type
"tuple"  [type-arg]
            self.cache: Dict[str, tuple] = {}
                                  ^
security/encryption_soar_examples.py:13: error: Function is missing a return
type annotation  [no-untyped-def]
    def field_encryption_example():
    ^
security/encryption_soar_examples.py:13: note: Use "-> None" if function does not return a value
security/encryption_soar_examples.py:66: error: Function is missing a return
type annotation  [no-untyped-def]
    def transparent_encryption_example():
    ^
security/encryption_soar_examples.py:66: note: Use "-> None" if function does not return a value
security/encryption_soar_examples.py:94: error: Function is missing a type
annotation  [no-untyped-def]
            def __init__(self, name, ssn, account_number, pin):
            ^
security/encryption_soar_examples.py:101: error: Call to untyped function
"Customer" in typed context  [no-untyped-call]
        customer = Customer(
                   ^
security/encryption_soar_examples.py:115: error: Function is missing a return
type annotation  [no-untyped-def]
    def quantum_resistant_example():
    ^
security/encryption_soar_examples.py:115: note: Use "-> None" if function does not return a value
security/encryption_soar_examples.py:173: error: Function is missing a return
type annotation  [no-untyped-def]
    async def soar_playbook_example():
    ^
security/encryption_soar_examples.py:173: note: Use "-> None" if function does not return a value
security/encryption_soar_examples.py:268: error: Unsupported left operand type
for - ("None")  [operator]
                f"Duration: {(context.end_time - context.start_time).total...
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/encryption_soar_examples.py:268: note: Left operand is of type "datetime | None"
security/encryption_soar_examples.py:275: error: Function is missing a return
type annotation  [no-untyped-def]
    async def incident_management_example():
    ^
security/encryption_soar_examples.py:275: note: Use "-> None" if function does not return a value
security/encryption_soar_examples.py:385: error: Value of type
"dict[str, Any] | None" is not indexable  [index]
            print(f"Timeline entries: {summary['timeline_entries']}")
                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/encryption_soar_examples.py:386: error: Value of type
"dict[str, Any] | None" is not indexable  [index]
            print(f"Indicators: {summary['indicators_count']}")
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/encryption_soar_examples.py:387: error: Value of type
"dict[str, Any] | None" is not indexable  [index]
            print(f"Notes: {summary['notes_count']}")
                           ^~~~~~~~~~~~~~~~~~~~~~~
security/encryption_soar_examples.py:397: error: Function is missing a return
type annotation  [no-untyped-def]
    def encryption_at_rest_example():
    ^
security/encryption_soar_examples.py:397: note: Use "-> None" if function does not return a value
security/encryption_soar_examples.py:433: error: Value of type
"Collection[str]" is not indexable  [index]
        print(f"  - SSN: {user_record['personal_info']['ssn']}")
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/encryption_soar_examples.py:452: error: Function is missing a return
type annotation  [no-untyped-def]
    async def integrated_security_example():
    ^
security/encryption_soar_examples.py:452: note: Use "-> None" if function does not return a value
security/encryption_soar_examples.py:557: error: Function is missing a return
type annotation  [no-untyped-def]
    async def main():
    ^
security/encryption_soar_examples.py:557: note: Use "-> None" if function does not return a value
security/encryption_soar_examples.py:564: error: Call to untyped function
"field_encryption_example" in typed context  [no-untyped-call]
        field_encryption_example()
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
security/encryption_soar_examples.py:570: error: Call to untyped function
"quantum_resistant_example" in typed context  [no-untyped-call]
        quantum_resistant_example()
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
security/encryption_soar_examples.py:573: error: Call to untyped function
"soar_playbook_example" in typed context  [no-untyped-call]
        await soar_playbook_example()
              ^~~~~~~~~~~~~~~~~~~~~~~
security/encryption_soar_examples.py:574: error: Call to untyped function
"incident_management_example" in typed context  [no-untyped-call]
        await incident_management_example()
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/encryption_soar_examples.py:577: error: Call to untyped function
"encryption_at_rest_example" in typed context  [no-untyped-call]
        encryption_at_rest_example()
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/encryption_soar_examples.py:580: error: Call to untyped function
"integrated_security_example" in typed context  [no-untyped-call]
        await integrated_security_example()
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/encryption_soar_examples.py:600: error: Call to untyped function
"main" in typed context  [no-untyped-call]
        asyncio.run(main())
                    ^~~~~~
security/testing/threat_intelligence.py:22: error: Unused "type: ignore"
comment  [unused-ignore]
    import redis.asyncio as redis  # type: ignore[import-untyped]
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/testing/threat_intelligence.py:205: error: Unused "type: ignore"
comment  [unused-ignore]
                    async with session.get(  # type: ignore[attr-defined]
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/testing/threat_intelligence.py:345: error: Unused "type: ignore"
comment  [unused-ignore]
                    async with session.get(  # type: ignore[attr-defined]
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/testing/threat_intelligence.py:480: error: Unused "type: ignore"
comment  [unused-ignore]
                    async with session.get(self.feed_url) as response:  # ...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
security/testing/threat_intelligence.py:633: error: Item "None" of "Any | None"
has no attribute "pipeline"  [union-attr]
            pipeline = self.redis_client.pipeline()
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~
security/testing/threat_intelligence.py:680: error: Item "None" of "Any | None"
has no attribute "get"  [union-attr]
            data = await self.redis_client.get(key)
                         ^~~~~~~~~~~~~~~~~~~~~
security/testing/threat_intelligence.py:787: error: Item "None" of "Any | None"
has no attribute "setex"  [union-attr]
            await self.redis_client.setex(key, self.config.block_duration,...
                  ^~~~~~~~~~~~~~~~~~~~~~~
security/testing/threat_intelligence.py:797: error: Item "None" of "Any | None"
has no attribute "get"  [union-attr]
            result = await self.redis_client.get(key)
                           ^~~~~~~~~~~~~~~~~~~~~
security/testing/threat_intelligence.py:859: error: Item "None" of "Any | None"
has no attribute "scard"  [union-attr]
                "blocked_ips": await self.redis_client.scard("blocked:ip:*...
                                     ^~~~~~~~~~~~~~~~~~~~~~~
security/testing/threat_intelligence.py:861: error: Item "None" of "Any | None"
has no attribute "scard"  [union-attr]
                    "ip": await self.redis_client.scard("threats:ip"),
                                ^~~~~~~~~~~~~~~~~~~~~~~
security/testing/threat_intelligence.py:862: error: Item "None" of "Any | None"
has no attribute "scard"  [union-attr]
                    "domain": await self.redis_client.scard("threats:domai...
                                    ^~~~~~~~~~~~~~~~~~~~~~~
security/testing/threat_intelligence.py:863: error: Item "None" of "Any | None"
has no attribute "scard"  [union-attr]
                    "url": await self.redis_client.scard("threats:url"),
                                 ^~~~~~~~~~~~~~~~~~~~~~~
security/testing/threat_intelligence.py:864: error: Item "None" of "Any | None"
has no attribute "scard"  [union-attr]
                    "hash": await self.redis_client.scard("threats:hash"),
                                  ^~~~~~~~~~~~~~~~~~~~~~~
security/testing/threat_intelligence.py:875: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
        def __init__(self, app, threat_engine: ThreatIntelligenceEngine):
        ^
security/testing/threat_intelligence.py:885: error: Function is missing a type
annotation  [no-untyped-def]
        async def __call__(self, scope, receive, send):
        ^
security/testing/threat_intelligence.py:901: error: Call to untyped function
"_send_blocked_response" in typed context  [no-untyped-call]
                    await self._send_blocked_response(send)
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/testing/threat_intelligence.py:923: error: Call to untyped function
"_send_blocked_response" in typed context  [no-untyped-call]
                        await self._send_blocked_response(send)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/testing/threat_intelligence.py:928: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
        def _get_header(self, scope, header_name: bytes) -> Optional[str]:
        ^
security/testing/threat_intelligence.py:935: error: Function is missing a type
annotation  [no-untyped-def]
        async def _send_blocked_response(self, send):
        ^
security/testing/threat_intelligence.py:954: error: Function is missing a
return type annotation  [no-untyped-def]
    def main():
    ^
security/testing/threat_intelligence.py:954: note: Use "-> None" if function does not return a value
security/testing/threat_intelligence.py:974: error: Function is missing a
return type annotation  [no-untyped-def]
        async def run():
        ^
security/testing/threat_intelligence.py:974: note: Use "-> None" if function does not return a value
security/testing/threat_intelligence.py:1001: error: Call to untyped function
"run" in typed context  [no-untyped-call]
        asyncio.run(run())
                    ^~~~~
security/testing/threat_intelligence.py:1005: error: Call to untyped function
"main" in typed context  [no-untyped-call]
        main()
        ^~~~~~
security/testing/dependency_monitor.py:332: error: Returning Any from function
declared to return "str | None"  [no-any-return]
                        return deps[package_name].get("version")
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/testing/dependency_monitor.py:345: error: Function is missing a return
type annotation  [no-untyped-def]
        async def __aenter__(self):
        ^
security/testing/dependency_monitor.py:349: error: Function is missing a type
annotation  [no-untyped-def]
        async def __aexit__(self, exc_type, exc_val, exc_tb):
        ^
security/testing/dependency_monitor.py:390: error: Item "None" of
"ClientSession | None" has no attribute "get"  [union-attr]
                async with self.session.get(
                           ^~~~~~~~~~~~~~~~
security/testing/dependency_monitor.py:444: error: Item "None" of
"ClientSession | None" has no attribute "get"  [union-attr]
                    async with self.session.get(
                               ^~~~~~~~~~~~~~~~
security/testing/dependency_monitor.py:499: error: Item "None" of
"ClientSession | None" has no attribute "post"  [union-attr]
                    async with self.session.post(
                               ^~~~~~~~~~~~~~~~~
security/testing/dependency_monitor.py:552: error: Item "None" of
"ClientSession | None" has no attribute "post"  [union-attr]
                    async with self.session.post(
                               ^~~~~~~~~~~~~~~~~
security/testing/dependency_monitor.py:583: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
        def _matches_spec(self, current_version, spec: str) -> bool:
        ^
security/testing/dependency_monitor.py:588: error: Returning Any from function
declared to return "bool"  [no-any-return]
                return current_version < target
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/testing/dependency_monitor.py:591: error: Returning Any from function
declared to return "bool"  [no-any-return]
                return current_version <= target
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/testing/dependency_monitor.py:594: error: Returning Any from function
declared to return "bool"  [no-any-return]
                return current_version > target
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/testing/dependency_monitor.py:597: error: Returning Any from function
declared to return "bool"  [no-any-return]
                return current_version >= target
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/testing/dependency_monitor.py:600: error: Returning Any from function
declared to return "bool"  [no-any-return]
                return current_version == target
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/testing/dependency_monitor.py:733: error: Returning Any from function
declared to return "str | None"  [no-any-return]
                            return data.get("info", {}).get("version")
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/testing/dependency_monitor.py:749: error: Returning Any from function
declared to return "str | None"  [no-any-return]
                            return data.get("version")
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~
security/testing/dependency_monitor.py:1068: error: Function is missing a
return type annotation  [no-untyped-def]
    def main():
    ^
security/testing/dependency_monitor.py:1068: note: Use "-> None" if function does not return a value
security/testing/dependency_monitor.py:1112: error: Call to untyped function
"main" in typed context  [no-untyped-call]
        main()
        ^~~~~~
security/testing/dast_integration.py:46: error: Invalid index type "RiskLevel"
for "dict[int, str]"; expected type "int"  [index]
            return names[self]
                         ^~~~
security/testing/dast_integration.py:140: error: Value of type "object" is not
indexable  [index]
                            url, technique["headers"]
                                 ^~~~~~~~~~~~~~~~~~~~
security/testing/dast_integration.py:173: error: Need type annotation for
"vulnerabilities" (hint: "vulnerabilities: list[<type>] = ...")  [var-annotated]
            vulnerabilities = []
            ^~~~~~~~~~~~~~~
security/testing/dast_integration.py:428: error: Name "test_url" is not defined
 [name-defined]
                    logger.debug(f"CORS test failed for {test_url}: {e}")
                                                        ^
security/testing/dast_integration.py:616: error: Returning Any from function
declared to return "str | None"  [no-any-return]
            return scan_id
            ^~~~~~~~~~~~~~
security/testing/dast_integration.py:699: error: "object" has no attribute
"extend"  [attr-defined]
                scan_results["vulnerabilities"].extend(auth_vulns)
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/testing/dast_integration.py:702: error: "object" has no attribute
"extend"  [attr-defined]
                scan_results["vulnerabilities"].extend(jwt_vulns)
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/testing/dast_integration.py:706: error: "object" has no attribute
"extend"  [attr-defined]
                scan_results["vulnerabilities"].extend(api_vulns)
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/testing/dast_integration.py:722: error: Argument 2 to
"_calculate_stats" of "DASTOrchestrator" has incompatible type "object";
expected "list[dict[str, Any]]"  [arg-type]
                    alerts, scan_results["vulnerabilities"]
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/testing/dast_integration.py:734: error: Unsupported left operand type
for - ("object")  [operator]
                scan_results["end_time"] - scan_results["start_time"]
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/testing/dast_integration.py:786: error: Function is missing a return
type annotation  [no-untyped-def]
    def main():
    ^
security/testing/dast_integration.py:786: note: Use "-> None" if function does not return a value
security/testing/dast_integration.py:830: error: Call to untyped function
"main" in typed context  [no-untyped-call]
        main()
        ^~~~~~
observability/log_aggregation.py:88: error: Function is missing a return type
annotation  [no-untyped-def]
        def __post_init__(self):
        ^
observability/log_aggregation.py:88: note: Use "-> None" if function does not return a value
observability/log_aggregation.py:165: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
observability/log_aggregation.py:165: note: Use "-> None" if function does not return a value
observability/log_aggregation.py:348: error: Missing type parameters for
generic type "Match"  [type-arg]
            self, match: re.Match, pattern: LogPattern, line: str
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/log_aggregation.py:405: error: Function is missing a return type
annotation  [no-untyped-def]
        def add_custom_pattern(self, pattern: LogPattern):
        ^
observability/log_aggregation.py:409: error: Function is missing a return type
annotation  [no-untyped-def]
        def add_custom_extractor(
        ^
observability/log_aggregation.py:434: error: Call to untyped function
"LogParser" in typed context  [no-untyped-call]
            self.parser = LogParser()
                          ^~~~~~~~~~~
observability/log_aggregation.py:447: error: Need type annotation for
"alert_patterns" (hint: "alert_patterns: list[<type>] = ...")  [var-annotated]
            self.alert_patterns = []
            ^~~~~~~~~~~~~~~~~~~
observability/log_aggregation.py:448: error: Need type annotation for
"active_alerts" (hint: "active_alerts: dict[<type>, <type>] = ...")
[var-annotated]
            self.active_alerts = {}
            ^~~~~~~~~~~~~~~~~~
observability/log_aggregation.py:449: error: Need type annotation for
"alert_callbacks" (hint: "alert_callbacks: list[<type>] = ...")  [var-annotated]
            self.alert_callbacks = []
            ^~~~~~~~~~~~~~~~~~~~
observability/log_aggregation.py:457: error: Call to untyped function
"_init_database" in typed context  [no-untyped-call]
            self._init_database()
            ^~~~~~~~~~~~~~~~~~~~~
observability/log_aggregation.py:461: error: Function is missing a return type
annotation  [no-untyped-def]
        def _init_database(self):
        ^
observability/log_aggregation.py:461: note: Use "-> None" if function does not return a value
observability/log_aggregation.py:525: error: Function is missing a return type
annotation  [no-untyped-def]
        async def start(self):
        ^
observability/log_aggregation.py:525: note: Use "-> None" if function does not return a value
observability/log_aggregation.py:532: error: Incompatible types in assignment
(expression has type "Task[Any]", variable has type "None")  [assignment]
            self.processing_task = asyncio.create_task(self._processing_lo...
                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
observability/log_aggregation.py:532: error: Call to untyped function
"_processing_loop" in typed context  [no-untyped-call]
    ...      self.processing_task = asyncio.create_task(self._processing_loop...
                                                        ^~~~~~~~~~~~~~~~~~~~~~~
observability/log_aggregation.py:535: error: Function is missing a return type
annotation  [no-untyped-def]
        async def stop(self):
        ^
observability/log_aggregation.py:535: note: Use "-> None" if function does not return a value
observability/log_aggregation.py:548: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _processing_loop(self):
        ^
observability/log_aggregation.py:548: note: Use "-> None" if function does not return a value
observability/log_aggregation.py:552: error: Call to untyped function
"_process_buffer" in typed context  [no-untyped-call]
                    await self._process_buffer()
                          ^~~~~~~~~~~~~~~~~~~~~~
observability/log_aggregation.py:560: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _process_buffer(self):
        ^
observability/log_aggregation.py:560: note: Use "-> None" if function does not return a value
observability/log_aggregation.py:576: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _process_batch(self, batch: List[LogEntry]):
        ^
observability/log_aggregation.py:599: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _store_batch(self, batch: List[LogEntry]):
        ^
observability/log_aggregation.py:602: error: Function is missing a return type
annotation  [no-untyped-def]
            def store_sync():
            ^
observability/log_aggregation.py:602: note: Use "-> None" if function does not return a value
observability/log_aggregation.py:639: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _check_alerts(self, batch: List[LogEntry]):
        ^
observability/log_aggregation.py:668: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _trigger_alert(self, entry: LogEntry, pattern: Dict[str,...
        ^
observability/log_aggregation.py:703: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _store_alert(self, alert: LogAlert):
        ^
observability/log_aggregation.py:706: error: Function is missing a return type
annotation  [no-untyped-def]
            def store_sync():
            ^
observability/log_aggregation.py:706: note: Use "-> None" if function does not return a value
observability/log_aggregation.py:734: error: Function is missing a return type
annotation  [no-untyped-def]
        def ingest_log_line(self, line: str, source: Optional[LogSource] =...
        ^
observability/log_aggregation.py:746: error: Function is missing a return type
annotation  [no-untyped-def]
        def ingest_log_entry(self, entry: LogEntry):
        ^
observability/log_aggregation.py:750: error: Function is missing a return type
annotation  [no-untyped-def]
        async def ingest_log_file(
        ^
observability/log_aggregation.py:774: error: Function is missing a return type
annotation  [no-untyped-def]
            def query_sync():
            ^
observability/log_aggregation.py:811: error: Argument 1 to "append" of "list"
has incompatible type "int"; expected "str"  [arg-type]
                params.append(limit)
                              ^~~~~
observability/log_aggregation.py:845: error: Function is missing a return type
annotation  [no-untyped-def]
        def add_alert_pattern(self, pattern: Dict[str, Any]):
        ^
observability/log_aggregation.py:849: error: Function is missing a return type
annotation  [no-untyped-def]
        def add_alert_callback(
        ^
observability/log_aggregation.py:875: error: Need type annotation for "clients"
(hint: "clients: set[<type>] = ...")  [var-annotated]
            self.clients = set()
            ^~~~~~~~~~~~
observability/log_aggregation.py:879: error: Function is missing a return type
annotation  [no-untyped-def]
        async def start(self):
        ^
observability/log_aggregation.py:879: note: Use "-> None" if function does not return a value
observability/log_aggregation.py:885: error: Incompatible types in assignment
(expression has type "Task[Any]", variable has type "None")  [assignment]
            self.server_task = asyncio.create_task(self._run_server())
                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/log_aggregation.py:885: error: Call to untyped function
"_run_server" in typed context  [no-untyped-call]
            self.server_task = asyncio.create_task(self._run_server())
                                                   ^~~~~~~~~~~~~~~~~~
observability/log_aggregation.py:888: error: Function is missing a return type
annotation  [no-untyped-def]
        async def stop(self):
        ^
observability/log_aggregation.py:888: note: Use "-> None" if function does not return a value
observability/log_aggregation.py:908: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _run_server(self):
        ^
observability/log_aggregation.py:913: error: Function is missing a type
annotation  [no-untyped-def]
                async def websocket_handler(request):
                ^
observability/log_aggregation.py:961: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _handle_client_message(self, ws, data: Dict[str, Any]):
        ^
observability/log_aggregation.py:961: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
        async def _handle_client_message(self, ws, data: Dict[str, Any]):
        ^
observability/log_aggregation.py:985: error: Function is missing a return type
annotation  [no-untyped-def]
        async def broadcast_log(self, entry: LogEntry):
        ^
observability/log_aggregation.py:1017: error: Function is missing a return type
annotation  [no-untyped-def]
    async def start_log_aggregation():
    ^
observability/log_aggregation.py:1017: note: Use "-> None" if function does not return a value
observability/log_aggregation.py:1019: error: Call to untyped function "start"
in typed context  [no-untyped-call]
        await log_aggregator.start()
              ^~~~~~~~~~~~~~~~~~~~~~
observability/log_aggregation.py:1020: error: Call to untyped function "start"
in typed context  [no-untyped-call]
        await log_streaming_server.start()
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/log_aggregation.py:1023: error: Function is missing a return type
annotation  [no-untyped-def]
    async def stop_log_aggregation():
    ^
observability/log_aggregation.py:1023: note: Use "-> None" if function does not return a value
observability/log_aggregation.py:1025: error: Call to untyped function "stop"
in typed context  [no-untyped-call]
        await log_aggregator.stop()
              ^~~~~~~~~~~~~~~~~~~~~
observability/log_aggregation.py:1026: error: Call to untyped function "stop"
in typed context  [no-untyped-call]
        await log_streaming_server.stop()
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/log_aggregation.py:1029: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
    def create_structured_log_entry(
    ^
observability/log_aggregation.py:1051: error: Function is missing a return type
annotation  [no-untyped-def]
    def log_agent_action(
    ^
observability/log_aggregation.py:1067: error: Function is missing a return type
annotation  [no-untyped-def]
    def log_api_request(
    ^
observability/log_aggregation.py:1084: error: Function is missing a return type
annotation  [no-untyped-def]
    def log_security_event(event_type: str, details: Dict[str, Any]):
    ^
knowledge_graph/conversation_monitoring.py:41: error: Function is missing a
return type annotation  [no-untyped-def]
        def __post_init__(self):
        ^
knowledge_graph/conversation_monitoring.py:41: note: Use "-> None" if function does not return a value
knowledge_graph/conversation_monitoring.py:52: error: Need type annotation for
"event_queue"  [var-annotated]
            self.event_queue = Queue()
                               ^~~~~~~
knowledge_graph/conversation_monitoring.py:53: error: Missing type parameters
for generic type "Callable"  [type-arg]
            self._subscribers: List[Callable] = []
                                    ^
knowledge_graph/conversation_monitoring.py:54: error: Missing type parameters
for generic type "Task"  [type-arg]
            self._processing_task: Optional[asyncio.Task] = None
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
knowledge_graph/conversation_monitoring.py:56: error: Function is missing a
return type annotation  [no-untyped-def]
        async def start(self):
        ^
knowledge_graph/conversation_monitoring.py:56: note: Use "-> None" if function does not return a value
knowledge_graph/conversation_monitoring.py:66: error: Call to untyped function
"_process_events" in typed context  [no-untyped-call]
    ...     self._processing_task = asyncio.create_task(self._process_events(...
                                                        ^~~~~~~~~~~~~~~~~~~~~~
knowledge_graph/conversation_monitoring.py:68: error: Function is missing a
return type annotation  [no-untyped-def]
        async def stop(self):
        ^
knowledge_graph/conversation_monitoring.py:68: note: Use "-> None" if function does not return a value
knowledge_graph/conversation_monitoring.py:84: error: Function is missing a
return type annotation  [no-untyped-def]
        async def process_message(self, message: Message):
        ^
knowledge_graph/conversation_monitoring.py:90: error: Argument "content" to
"ConversationEvent" has incompatible type "Column[str]"; expected "str | None"
[arg-type]
                content=message.content,
                        ^~~~~~~~~~~~~~~
knowledge_graph/conversation_monitoring.py:91: error: "Message" has no
attribute "created_at"  [attr-defined]
                timestamp=message.created_at,
                          ^~~~~~~~~~~~~~~~~~
knowledge_graph/conversation_monitoring.py:101: error: Need type annotation for
"events" (hint: "events: list[<type>] = ...")  [var-annotated]
            events = []
            ^~~~~~
knowledge_graph/conversation_monitoring.py:121: error: Function is missing a
return type annotation  [no-untyped-def]
        async def _process_event(self, event: ConversationEvent):
        ^
knowledge_graph/conversation_monitoring.py:131: error: Function is missing a
return type annotation  [no-untyped-def]
        async def _update_graph_from_message(self, event: ConversationEven...
        ^
knowledge_graph/conversation_monitoring.py:136: error: Function is missing a
return type annotation  [no-untyped-def]
        async def on_conversation_update(
        ^
knowledge_graph/conversation_monitoring.py:141: error: "KnowledgeGraph" has no
attribute "update_from_conversation"  [attr-defined]
                await self.graph_engine.update_from_conversation(
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
knowledge_graph/conversation_monitoring.py:148: error: Function is missing a
return type annotation  [no-untyped-def]
        def subscribe(self, callback: Callable):
        ^
knowledge_graph/conversation_monitoring.py:148: error: Missing type parameters
for generic type "Callable"  [type-arg]
        def subscribe(self, callback: Callable):
                                      ^
knowledge_graph/conversation_monitoring.py:152: error: Function is missing a
return type annotation  [no-untyped-def]
        async def notify_subscribers(self, event: ConversationEvent = None...
        ^
knowledge_graph/conversation_monitoring.py:152: error: Incompatible default for
argument "event" (default has type "None", argument has type
"ConversationEvent")  [assignment]
    ...  async def notify_subscribers(self, event: ConversationEvent = None):
                                                                       ^~~~
knowledge_graph/conversation_monitoring.py:152: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
knowledge_graph/conversation_monitoring.py:152: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
knowledge_graph/conversation_monitoring.py:179: error: Function is missing a
return type annotation  [no-untyped-def]
        async def _process_events(self):
        ^
knowledge_graph/conversation_monitoring.py:179: note: Use "-> None" if function does not return a value
examples/demo_memory_validation.py:53: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
examples/demo_memory_validation.py:53: note: Use "-> None" if function does not return a value
examples/demo_memory_validation.py:61: error: Returning Any from function
declared to return "float"  [no-any-return]
            return self.process.memory_info().rss / (1024 * 1024)
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_memory_validation.py:72: error: Missing type parameters for
generic type "Dict"  [type-arg]
    ... create_baseline_agent_simulation(self, num_agents: int = 10) -> Dict:
                                                                        ^
examples/demo_memory_validation.py:116: error: Missing type parameters for
generic type "Dict"  [type-arg]
    ...create_optimized_agent_simulation(self, num_agents: int = 10) -> Dict:
                                                                        ^
examples/demo_memory_validation.py:143: error: Argument "dtype" to
"LazyBeliefArray" has incompatible type "type[floating[Any]]"; expected
"dtype[Any]"  [arg-type]
    ...               "beliefs": LazyBeliefArray((50, 50), dtype=np.float32),
                                                                 ^~~~~~~~~~
examples/demo_memory_validation.py:163: error: "object" has no attribute
"update"  [attr-defined]
                    agent_data["beliefs"].update(sparse_beliefs)
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_memory_validation.py:167: error: "object" has no attribute
"add_action"  [attr-defined]
                        agent_data["action_history"].add_action(
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_memory_validation.py:176: error: "object" has no attribute
"add_state"  [attr-defined]
                        agent_data["temporal_states"].add_state(
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_memory_validation.py:186: error: "object" has no attribute
"add_node"  [attr-defined]
                        agent_data["knowledge_graph"].add_node(
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_memory_validation.py:192: error: "object" has no attribute
"add_edge"  [attr-defined]
                        agent_data["knowledge_graph"].add_edge(
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_memory_validation.py:197: error: "object" has no attribute
"memory_usage"  [attr-defined]
                    belief_mb = agent_data["beliefs"].memory_usage()
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_memory_validation.py:198: error: "object" has no attribute
"memory_usage_bytes"  [attr-defined]
                    action_mb = agent_data[
                                ^
examples/demo_memory_validation.py:201: error: "object" has no attribute
"memory_usage_stats"  [attr-defined]
                    temporal_mb = agent_data[
                                  ^
examples/demo_memory_validation.py:204: error: "object" has no attribute
"memory_usage_stats"  [attr-defined]
                    kg_mb = agent_data["knowledge_graph"].memory_usage_sta...
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_memory_validation.py:234: error: Call to untyped function
"shutdown" in typed context  [no-untyped-call]
            lifecycle_manager.shutdown()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_memory_validation.py:240: error: Missing type parameters for
generic type "Dict"  [type-arg]
            self, baseline: Dict, optimized: Dict
                            ^
examples/demo_memory_validation.py:241: error: Missing type parameters for
generic type "Dict"  [type-arg]
        ) -> Dict:
             ^
examples/demo_memory_validation.py:278: error: Missing type parameters for
generic type "Dict"  [type-arg]
        def test_agent_density_limits(self) -> Dict:
                                               ^
examples/demo_memory_validation.py:356: error: Missing type parameters for
generic type "Dict"  [type-arg]
        def benchmark_performance_impact(self) -> Dict:
                                                  ^
examples/demo_memory_validation.py:375: error: Missing type parameters for
generic type "Dict"  [type-arg]
        def _benchmark_belief_operations(self) -> Dict:
                                                  ^
examples/demo_memory_validation.py:389: error: Argument "dtype" to
"LazyBeliefArray" has incompatible type "type[floating[Any]]"; expected
"dtype[Any]"  [arg-type]
            lazy_belief = LazyBeliefArray((50, 50), dtype=np.float32)
                                                          ^~~~~~~~~~
examples/demo_memory_validation.py:408: error: Missing type parameters for
generic type "Dict"  [type-arg]
        def _benchmark_matrix_operations(self) -> Dict:
                                                  ^
examples/demo_memory_validation.py:438: error: Missing type parameters for
generic type "Dict"  [type-arg]
        def _benchmark_action_operations(self) -> Dict:
                                                  ^
examples/demo_memory_validation.py:483: error: Function is missing a return
type annotation  [no-untyped-def]
    def main():
    ^
examples/demo_memory_validation.py:491: error: Call to untyped function
"MemoryBenchmarker" in typed context  [no-untyped-call]
        benchmarker = MemoryBenchmarker()
                      ^~~~~~~~~~~~~~~~~~~
examples/demo_memory_validation.py:661: error: Call to untyped function "main"
in typed context  [no-untyped-call]
        main()
        ^~~~~~
observability/log_analysis_dashboard.py:89: error: Need type annotation for
"known_patterns" (hint: "known_patterns: dict[<type>, <type>] = ...")
[var-annotated]
            self.known_patterns = {}
            ^~~~~~~~~~~~~~~~~~~
observability/log_analysis_dashboard.py:90: error: Need type annotation for
"baseline_metrics" (hint: "baseline_metrics: dict[<type>, <type>] = ...")
[var-annotated]
            self.baseline_metrics = {}
            ^~~~~~~~~~~~~~~~~~~~~
observability/log_analysis_dashboard.py:226: error: Need type annotation for
"distribution"  [var-annotated]
            distribution = defaultdict(int)
            ^~~~~~~~~~~~
observability/log_analysis_dashboard.py:235: error: Need type annotation for
"distribution"  [var-annotated]
            distribution = defaultdict(int)
            ^~~~~~~~~~~~
observability/log_analysis_dashboard.py:275: error: Need type annotation for
"activity"  [var-annotated]
            activity = defaultdict(int)
            ^~~~~~~~
observability/log_analysis_dashboard.py:284: error: Need type annotation for
"hourly_data"  [var-annotated]
            hourly_data = defaultdict(lambda: defaultdict(int))
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/log_analysis_dashboard.py:374: error: Unsupported right operand
type for in ("dict[str, Any] | None")  [operator]
                if "response_time" in log.extra_fields:
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/log_analysis_dashboard.py:375: error: Value of type
"dict[str, Any] | None" is not indexable  [index]
                    response_times.append(log.extra_fields["response_time"...
                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/log_analysis_dashboard.py:554: error: Need type annotation for
"hourly_activity"  [var-annotated]
            hourly_activity = defaultdict(int)
            ^~~~~~~~~~~~~~~
observability/log_analysis_dashboard.py:575: error: Unsupported right operand
type for in ("dict[str, Any] | None")  [operator]
                if "action" in log.extra_fields:
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/log_analysis_dashboard.py:576: error: Value of type
"dict[str, Any] | None" is not indexable  [index]
                    actions.append(log.extra_fields["action"])
                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
observability/log_analysis_dashboard.py:616: error: Unsupported right operand
type for in ("dict[str, Any] | None")  [operator]
                if "response_time" in log.extra_fields:
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/log_analysis_dashboard.py:617: error: Value of type
"dict[str, Any] | None" is not indexable  [index]
                    response_times.append(log.extra_fields["response_time"...
                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/log_analysis_dashboard.py:692: error: Function is missing a
return type annotation  [no-untyped-def]
        async def generate_dashboard(
        ^
observability/log_analysis_dashboard.py:978: error: Function is missing a
return type annotation  [no-untyped-def]
    async def generate_log_dashboard(output_path: str = "logs/dashboard.ht...
    ^
observability/log_analysis_dashboard.py:983: error: Function is missing a
return type annotation  [no-untyped-def]
    async def analyze_recent_logs(hours: int = 24):
    ^
observability/log_analysis_dashboard.py:989: error: Function is missing a
return type annotation  [no-untyped-def]
    async def analyze_agent_performance(agent_id: str, hours: int = 24):
    ^
examples/websocket_secure_client.py:54: error: Function is missing a return
type annotation  [no-untyped-def]
        async def connect(self):
        ^
examples/websocket_secure_client.py:54: note: Use "-> None" if function does not return a value
examples/websocket_secure_client.py:72: error: Function does not return a value
(it only ever returns None)  [func-returns-value]
                self.websocket = await asyncio.wait_for(
                                 ^
examples/websocket_secure_client.py:73: error: Argument 1 to "wait_for" has
incompatible type "connect"; expected
"Future[None] | Generator[Any, None, None] | Awaitable[None]"  [arg-type]
                    websockets.connect(url, ssl=ssl_context), timeout=10.0
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/websocket_secure_client.py:73: note: Following member(s) of "connect" have conflicts:
examples/websocket_secure_client.py:73: note:     Expected:
examples/websocket_secure_client.py:73: note:         def __await__(self) -> Generator[Any, None, None]
examples/websocket_secure_client.py:73: note:     Got:
examples/websocket_secure_client.py:73: note:         def __await__(self) -> Generator[Any, None, ClientConnection]
examples/websocket_secure_client.py:81: error: Incompatible types in assignment
(expression has type "Task[Any]", variable has type "None")  [assignment]
                self.heartbeat_task = asyncio.create_task(self._heartbeat_...
                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
examples/websocket_secure_client.py:81: error: Call to untyped function
"_heartbeat_loop" in typed context  [no-untyped-call]
    ...       self.heartbeat_task = asyncio.create_task(self._heartbeat_loop(...
                                                        ^~~~~~~~~~~~~~~~~~~~~~
examples/websocket_secure_client.py:82: error: Incompatible types in assignment
(expression has type "Task[Any]", variable has type "None")  [assignment]
                self.receive_task = asyncio.create_task(self._receive_loop...
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/websocket_secure_client.py:82: error: Call to untyped function
"_receive_loop" in typed context  [no-untyped-call]
    ...         self.receive_task = asyncio.create_task(self._receive_loop())
                                                        ^~~~~~~~~~~~~~~~~~~~
examples/websocket_secure_client.py:91: error: Function is missing a return
type annotation  [no-untyped-def]
        async def disconnect(self):
        ^
examples/websocket_secure_client.py:91: note: Use "-> None" if function does not return a value
examples/websocket_secure_client.py:108: error: Function is missing a return
type annotation  [no-untyped-def]
        async def send_message(self, message_type: str, data: dict = None)...
        ^
examples/websocket_secure_client.py:108: error: Missing type parameters for
generic type "dict"  [type-arg]
    ...   async def send_message(self, message_type: str, data: dict = None):
                                                                ^
examples/websocket_secure_client.py:108: error: Incompatible default for
argument "data" (default has type "None", argument has type "dict[Any, Any]")
[assignment]
    ...   async def send_message(self, message_type: str, data: dict = None):
                                                                       ^~~~
examples/websocket_secure_client.py:108: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
examples/websocket_secure_client.py:108: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
examples/websocket_secure_client.py:132: error: Function is missing a return
type annotation  [no-untyped-def]
        async def subscribe_to_events(self, event_types: list):
        ^
examples/websocket_secure_client.py:132: error: Missing type parameters for
generic type "list"  [type-arg]
        async def subscribe_to_events(self, event_types: list):
                                                         ^
examples/websocket_secure_client.py:136: error: Function is missing a return
type annotation  [no-untyped-def]
        async def send_agent_command(
        ^
examples/websocket_secure_client.py:137: error: Missing type parameters for
generic type "dict"  [type-arg]
            self, agent_id: str, command: str, params: dict = None
                                                       ^
examples/websocket_secure_client.py:137: error: Incompatible default for
argument "params" (default has type "None", argument has type "dict[Any, Any]")
[assignment]
            self, agent_id: str, command: str, params: dict = None
                                                              ^~~~
examples/websocket_secure_client.py:137: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
examples/websocket_secure_client.py:137: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
examples/websocket_secure_client.py:145: error: Function is missing a return
type annotation  [no-untyped-def]
        async def query_agent_status(self):
        ^
examples/websocket_secure_client.py:145: note: Use "-> None" if function does not return a value
examples/websocket_secure_client.py:149: error: Function is missing a return
type annotation  [no-untyped-def]
        async def refresh_auth_token(self):
        ^
examples/websocket_secure_client.py:160: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _heartbeat_loop(self):
        ^
examples/websocket_secure_client.py:160: note: Use "-> None" if function does not return a value
examples/websocket_secure_client.py:177: error: Call to untyped function
"_handle_connection_loss" in typed context  [no-untyped-call]
                        await self._handle_connection_loss()
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/websocket_secure_client.py:184: error: Call to untyped function
"_handle_connection_loss" in typed context  [no-untyped-call]
                await self._handle_connection_loss()
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/websocket_secure_client.py:186: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _receive_loop(self):
        ^
examples/websocket_secure_client.py:186: note: Use "-> None" if function does not return a value
examples/websocket_secure_client.py:190: error: "None" has no attribute "recv"
[attr-defined]
                    message = await self.websocket.recv()
                                    ^~~~~~~~~~~~~~~~~~~
examples/websocket_secure_client.py:195: error: Call to untyped function
"_handle_connection_loss" in typed context  [no-untyped-call]
                await self._handle_connection_loss()
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/websocket_secure_client.py:200: error: Call to untyped function
"_handle_connection_loss" in typed context  [no-untyped-call]
                await self._handle_connection_loss()
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/websocket_secure_client.py:202: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _handle_message(self, message: dict):
        ^
examples/websocket_secure_client.py:202: error: Missing type parameters for
generic type "dict"  [type-arg]
        async def _handle_message(self, message: dict):
                                                 ^
examples/websocket_secure_client.py:220: error: Incompatible types in
assignment (expression has type "Any | None", variable has type "str")
[assignment]
                self.access_token = message.get("access_token")
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/websocket_secure_client.py:237: error: Call to untyped function
"refresh_auth_token" in typed context  [no-untyped-call]
                    await self.refresh_auth_token()
                          ^~~~~~~~~~~~~~~~~~~~~~~~~
examples/websocket_secure_client.py:245: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _handle_agent_event(self, message: dict):
        ^
examples/websocket_secure_client.py:245: error: Missing type parameters for
generic type "dict"  [type-arg]
        async def _handle_agent_event(self, message: dict):
                                                     ^
examples/websocket_secure_client.py:253: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _handle_connection_loss(self):
        ^
examples/websocket_secure_client.py:253: note: Use "-> None" if function does not return a value
examples/websocket_secure_client.py:267: error: Call to untyped function
"connect" in typed context  [no-untyped-call]
                    await self.connect()
                          ^~~~~~~~~~~~~~
examples/websocket_secure_client.py:271: error: Call to untyped function
"_handle_connection_loss" in typed context  [no-untyped-call]
                    await self._handle_connection_loss()
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/websocket_secure_client.py:274: error: Call to untyped function
"disconnect" in typed context  [no-untyped-call]
                await self.disconnect()
                      ^~~~~~~~~~~~~~~~~
examples/websocket_secure_client.py:276: error: Function is missing a return
type annotation  [no-untyped-def]
        async def run_interactive(self):
        ^
examples/websocket_secure_client.py:276: note: Use "-> None" if function does not return a value
examples/websocket_secure_client.py:313: error: Call to untyped function
"query_agent_status" in typed context  [no-untyped-call]
                            await self.query_agent_status()
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~
examples/websocket_secure_client.py:316: error: Call to untyped function
"refresh_auth_token" in typed context  [no-untyped-call]
                            await self.refresh_auth_token()
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~
examples/websocket_secure_client.py:334: error: Call to untyped function
"disconnect" in typed context  [no-untyped-call]
                await self.disconnect()
                      ^~~~~~~~~~~~~~~~~
examples/websocket_secure_client.py:337: error: Function is missing a return
type annotation  [no-untyped-def]
    async def main():
    ^
examples/websocket_secure_client.py:337: note: Use "-> None" if function does not return a value
examples/websocket_secure_client.py:352: error: Call to untyped function
"connect" in typed context  [no-untyped-call]
            await client.connect()
                  ^~~~~~~~~~~~~~~~
examples/websocket_secure_client.py:364: error: Call to untyped function
"run_interactive" in typed context  [no-untyped-call]
            await client.run_interactive()
                  ^~~~~~~~~~~~~~~~~~~~~~~~
examples/websocket_secure_client.py:369: error: Call to untyped function
"disconnect" in typed context  [no-untyped-call]
            await client.disconnect()
                  ^~~~~~~~~~~~~~~~~~~
examples/websocket_secure_client.py:373: error: Call to untyped function "main"
in typed context  [no-untyped-call]
        asyncio.run(main())
                    ^~~~~~
examples/websocket_client.py:26: error: Name
"websockets.WebSocketClientProtocol" is not defined  [name-defined]
            self.websocket: Optional[websockets.WebSocketClientProtocol] =...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
examples/websocket_client.py:27: error: Name
"websockets.WebSocketClientProtocol" is not defined  [name-defined]
            self.monitoring_websocket: Optional[
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/websocket_client.py:31: error: Function is missing a return type
annotation  [no-untyped-def]
        async def connect(self):
        ^
examples/websocket_client.py:31: note: Use "-> None" if function does not return a value
examples/websocket_client.py:48: error: Function is missing a return type
annotation  [no-untyped-def]
        async def disconnect(self):
        ^
examples/websocket_client.py:48: note: Use "-> None" if function does not return a value
examples/websocket_client.py:58: error: Function is missing a return type
annotation  [no-untyped-def]
        async def subscribe_to_events(self, event_types: list):
        ^
examples/websocket_client.py:58: error: Missing type parameters for generic
type "list"  [type-arg]
        async def subscribe_to_events(self, event_types: list):
                                                         ^
examples/websocket_client.py:68: error: Function is missing a return type
annotation  [no-untyped-def]
        async def start_monitoring(
        ^
examples/websocket_client.py:69: error: Missing type parameters for generic
type "list"  [type-arg]
            self, metrics: list, agents: list = None, sample_rate: float =...
                           ^
examples/websocket_client.py:69: error: Incompatible default for argument
"agents" (default has type "None", argument has type "list[Any]")  [assignment]
            self, metrics: list, agents: list = None, sample_rate: float =...
                                                ^~~~
examples/websocket_client.py:69: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
examples/websocket_client.py:69: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
examples/websocket_client.py:86: error: Function is missing a return type
annotation  [no-untyped-def]
        async def send_agent_command(
        ^
examples/websocket_client.py:87: error: Missing type parameters for generic
type "dict"  [type-arg]
            self, agent_id: str, command: str, params: dict = None
                                                       ^
examples/websocket_client.py:87: error: Incompatible default for argument
"params" (default has type "None", argument has type "dict[Any, Any]")
[assignment]
            self, agent_id: str, command: str, params: dict = None
                                                              ^~~~
examples/websocket_client.py:87: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
examples/websocket_client.py:87: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
examples/websocket_client.py:105: error: Function is missing a return type
annotation  [no-untyped-def]
        async def query_agent_status(self):
        ^
examples/websocket_client.py:105: note: Use "-> None" if function does not return a value
examples/websocket_client.py:115: error: Function is missing a return type
annotation  [no-untyped-def]
        async def listen_for_messages(self):
        ^
examples/websocket_client.py:115: note: Use "-> None" if function does not return a value
examples/websocket_client.py:158: error: Function is missing a return type
annotation  [no-untyped-def]
        async def handle_message(self, message: dict, source: str):
        ^
examples/websocket_client.py:158: error: Missing type parameters for generic
type "dict"  [type-arg]
        async def handle_message(self, message: dict, source: str):
                                                ^
examples/websocket_client.py:221: error: Function is missing a return type
annotation  [no-untyped-def]
        async def run_example(self):
        ^
examples/websocket_client.py:221: note: Use "-> None" if function does not return a value
examples/websocket_client.py:225: error: Call to untyped function "connect" in
typed context  [no-untyped-call]
                await self.connect()
                      ^~~~~~~~~~~~~~
examples/websocket_client.py:250: error: Call to untyped function
"query_agent_status" in typed context  [no-untyped-call]
                await self.query_agent_status()
                      ^~~~~~~~~~~~~~~~~~~~~~~~~
examples/websocket_client.py:263: error: Call to untyped function
"listen_for_messages" in typed context  [no-untyped-call]
                await self.listen_for_messages()
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~
examples/websocket_client.py:266: error: Call to untyped function "disconnect"
in typed context  [no-untyped-call]
                await self.disconnect()
                      ^~~~~~~~~~~~~~~~~
examples/websocket_client.py:269: error: Function is missing a return type
annotation  [no-untyped-def]
    async def main():
    ^
examples/websocket_client.py:269: note: Use "-> None" if function does not return a value
examples/websocket_client.py:272: error: Call to untyped function "run_example"
in typed context  [no-untyped-call]
        await client.run_example()
              ^~~~~~~~~~~~~~~~~~~~
examples/websocket_client.py:276: error: Call to untyped function "main" in
typed context  [no-untyped-call]
        asyncio.run(main())
                    ^~~~~~
examples/api_usage_examples.py:26: error: Function is missing a return type
annotation  [no-untyped-def]
        async def __aenter__(self):
        ^
examples/api_usage_examples.py:27: error: Incompatible types in assignment
(expression has type "ClientSession", variable has type "None")  [assignment]
            self.session = aiohttp.ClientSession()
                           ^~~~~~~~~~~~~~~~~~~~~~~
examples/api_usage_examples.py:30: error: Function is missing a type annotation
 [no-untyped-def]
        async def __aexit__(self, exc_type, exc_val, exc_tb):
        ^
examples/api_usage_examples.py:34: error: Missing type parameters for generic
type "Dict"  [type-arg]
        async def create_agent(self, agent_data: Dict) -> Dict:
                                                 ^
examples/api_usage_examples.py:36: error: "None" has no attribute "post"
[attr-defined]
            async with self.session.post(
                       ^~~~~~~~~~~~~~~~~
examples/api_usage_examples.py:39: error: Returning Any from function declared
to return "dict[Any, Any]"  [no-any-return]
                return await response.json()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/api_usage_examples.py:41: error: Missing type parameters for generic
type "Dict"  [type-arg]
        async def get_agent(self, agent_id: str) -> Dict:
                                                    ^
examples/api_usage_examples.py:43: error: "None" has no attribute "get"
[attr-defined]
            async with self.session.get(
                       ^~~~~~~~~~~~~~~~
examples/api_usage_examples.py:46: error: Returning Any from function declared
to return "dict[Any, Any]"  [no-any-return]
                return await response.json()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/api_usage_examples.py:48: error: Missing type parameters for generic
type "Dict"  [type-arg]
        async def list_agents(self) -> List[Dict]:
                                            ^
examples/api_usage_examples.py:50: error: "None" has no attribute "get"
[attr-defined]
            async with self.session.get(
                       ^~~~~~~~~~~~~~~~
examples/api_usage_examples.py:53: error: Returning Any from function declared
to return "list[dict[Any, Any]]"  [no-any-return]
                return await response.json()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/api_usage_examples.py:55: error: Missing type parameters for generic
type "Dict"  [type-arg]
    ...   async def update_agent(self, agent_id: str, updates: Dict) -> Dict:
                                                               ^
examples/api_usage_examples.py:57: error: "None" has no attribute "put"
[attr-defined]
            async with self.session.put(
                       ^~~~~~~~~~~~~~~~
examples/api_usage_examples.py:60: error: Returning Any from function declared
to return "dict[Any, Any]"  [no-any-return]
                return await response.json()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/api_usage_examples.py:64: error: "None" has no attribute "delete"
[attr-defined]
            async with self.session.delete(
                       ^~~~~~~~~~~~~~~~~~~
examples/api_usage_examples.py:67: error: Returning Any from function declared
to return "bool"  [no-any-return]
                return response.status == 200
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/api_usage_examples.py:69: error: Missing type parameters for generic
type "Dict"  [type-arg]
        async def start_agent(self, agent_id: str) -> Dict:
                                                      ^
examples/api_usage_examples.py:71: error: "None" has no attribute "post"
[attr-defined]
            async with self.session.post(
                       ^~~~~~~~~~~~~~~~~
examples/api_usage_examples.py:74: error: Returning Any from function declared
to return "dict[Any, Any]"  [no-any-return]
                return await response.json()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/api_usage_examples.py:76: error: Missing type parameters for generic
type "Dict"  [type-arg]
        async def stop_agent(self, agent_id: str) -> Dict:
                                                     ^
examples/api_usage_examples.py:78: error: "None" has no attribute "post"
[attr-defined]
            async with self.session.post(
                       ^~~~~~~~~~~~~~~~~
examples/api_usage_examples.py:81: error: Returning Any from function declared
to return "dict[Any, Any]"  [no-any-return]
                return await response.json()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/api_usage_examples.py:83: error: Missing type parameters for generic
type "Dict"  [type-arg]
    ... async def agent_step(self, agent_id: str, observation: Dict) -> Dict:
                                                               ^
examples/api_usage_examples.py:85: error: "None" has no attribute "post"
[attr-defined]
            async with self.session.post(
                       ^~~~~~~~~~~~~~~~~
examples/api_usage_examples.py:89: error: Returning Any from function declared
to return "dict[Any, Any]"  [no-any-return]
                return await response.json()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/api_usage_examples.py:91: error: Missing type parameters for generic
type "Dict"  [type-arg]
        async def get_agent_metrics(self, agent_id: str) -> Dict:
                                                            ^
examples/api_usage_examples.py:93: error: "None" has no attribute "get"
[attr-defined]
            async with self.session.get(
                       ^~~~~~~~~~~~~~~~
examples/api_usage_examples.py:96: error: Returning Any from function declared
to return "dict[Any, Any]"  [no-any-return]
                return await response.json()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/api_usage_examples.py:98: error: Missing type parameters for generic
type "Dict"  [type-arg]
        async def create_coalition(self, coalition_data: Dict) -> Dict:
                                                         ^
examples/api_usage_examples.py:100: error: "None" has no attribute "post"
[attr-defined]
            async with self.session.post(
                       ^~~~~~~~~~~~~~~~~
examples/api_usage_examples.py:103: error: Returning Any from function declared
to return "dict[Any, Any]"  [no-any-return]
                return await response.json()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/api_usage_examples.py:107: error: Missing type parameters for generic
type "Dict"  [type-arg]
        ) -> Dict:
             ^
examples/api_usage_examples.py:109: error: "None" has no attribute "post"
[attr-defined]
            async with self.session.post(
                       ^~~~~~~~~~~~~~~~~
examples/api_usage_examples.py:112: error: Returning Any from function declared
to return "dict[Any, Any]"  [no-any-return]
                return await response.json()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/api_usage_examples.py:116: error: Missing type parameters for generic
type "Dict"  [type-arg]
        ) -> Dict:
             ^
examples/api_usage_examples.py:119: error: "None" has no attribute "get"
[attr-defined]
            async with self.session.get(
                       ^~~~~~~~~~~~~~~~
examples/api_usage_examples.py:122: error: Returning Any from function declared
to return "dict[Any, Any]"  [no-any-return]
                return await response.json()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/api_usage_examples.py:125: error: Function is missing a return type
annotation  [no-untyped-def]
    async def example_1_basic_agent_lifecycle():
    ^
examples/api_usage_examples.py:125: note: Use "-> None" if function does not return a value
examples/api_usage_examples.py:177: error: Function is missing a return type
annotation  [no-untyped-def]
    async def example_2_gmn_agent_creation():
    ^
examples/api_usage_examples.py:177: note: Use "-> None" if function does not return a value
examples/api_usage_examples.py:233: error: Function is missing a return type
annotation  [no-untyped-def]
    async def example_3_multi_agent_coalition():
    ^
examples/api_usage_examples.py:233: note: Use "-> None" if function does not return a value
examples/api_usage_examples.py:307: error: Function is missing a return type
annotation  [no-untyped-def]
    async def example_4_realtime_monitoring():
    ^
examples/api_usage_examples.py:307: note: Use "-> None" if function does not return a value
examples/api_usage_examples.py:358: error: Function is missing a return type
annotation  [no-untyped-def]
    async def example_5_batch_operations():
    ^
examples/api_usage_examples.py:358: note: Use "-> None" if function does not return a value
examples/api_usage_examples.py:417: error: Function is missing a return type
annotation  [no-untyped-def]
    async def example_6_performance_testing():
    ^
examples/api_usage_examples.py:417: note: Use "-> None" if function does not return a value
examples/api_usage_examples.py:493: error: Function is missing a return type
annotation  [no-untyped-def]
    async def main():
    ^
examples/api_usage_examples.py:493: note: Use "-> None" if function does not return a value
examples/api_usage_examples.py:509: error: Call to untyped function (unknown)
in typed context  [no-untyped-call]
                await example()
                      ^~~~~~~~~
examples/api_usage_examples.py:527: error: Call to untyped function "main" in
typed context  [no-untyped-call]
        asyncio.run(main())
                    ^~~~~~
database/types.py:10: error: Missing type parameters for generic type
"TypeDecorator"  [type-arg]
    class GUID(TypeDecorator):
               ^
database/types.py:22: error: Function is missing a type annotation
[no-untyped-def]
        def load_dialect_impl(self, dialect):
        ^
database/types.py:29: error: Function is missing a type annotation
[no-untyped-def]
        def process_bind_param(self, value, dialect):
        ^
database/types.py:41: error: Function is missing a type annotation
[no-untyped-def]
        def process_result_value(self, value, dialect):
        ^
database/query_optimizer.py:45: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
database/query_optimizer.py:45: note: Use "-> None" if function does not return a value
database/query_optimizer.py:81: error: Function is missing a return type
annotation  [no-untyped-def]
        def track_performance(self, name: str, execution_time: float):
        ^
database/query_optimizer.py:111: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
database/query_optimizer.py:111: note: Use "-> None" if function does not return a value
database/query_optimizer.py:188: error: Function is missing a return type
annotation  [no-untyped-def]
        def _analyze_plan_node(
        ^
database/query_optimizer.py:211: error: Function is missing a return type
annotation  [no-untyped-def]
        def _analyze_for_optimizations(
        ^
database/query_optimizer.py:449: error: Function is missing a return type
annotation  [no-untyped-def]
        def add_pending_insert(self, table_name: str, record: Dict[str, An...
        ^
database/query_optimizer.py:453: error: Function is missing a return type
annotation  [no-untyped-def]
        def add_pending_update(self, table_name: str, update: Dict[str, An...
        ^
database/query_optimizer.py:494: error: Call to untyped function
"PreparedStatementManager" in typed context  [no-untyped-call]
            self.prepared_statements = PreparedStatementManager()
                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~
database/query_optimizer.py:495: error: Call to untyped function
"QueryPlanAnalyzer" in typed context  [no-untyped-call]
            self.query_analyzer = QueryPlanAnalyzer()
                                  ^~~~~~~~~~~~~~~~~~~
database/query_optimizer.py:558: error: Function is missing a return type
annotation  [no-untyped-def]
        def engine(self):
        ^
database/query_optimizer.py:564: error: Incompatible types in assignment
(expression has type "Engine", variable has type "None")  [assignment]
                self._engine = create_engine(
                               ^
database/query_optimizer.py:569: error: Call to untyped function
"_setup_engine_monitoring" in typed context  [no-untyped-call]
                self._setup_engine_monitoring(self._engine)
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
database/query_optimizer.py:574: error: Function is missing a return type
annotation  [no-untyped-def]
        def async_engine(self):
        ^
database/query_optimizer.py:585: error: Incompatible types in assignment
(expression has type "AsyncEngine", variable has type "None")  [assignment]
                self._async_engine = create_async_engine(
                                     ^
database/query_optimizer.py:591: error: Function is missing a type annotation
[no-untyped-def]
        def _setup_engine_monitoring(self, engine):
        ^
database/query_optimizer.py:595: error: Function is missing a type annotation
[no-untyped-def]
            def before_cursor_execute(
            ^
database/query_optimizer.py:602: error: Function is missing a type annotation
[no-untyped-def]
            def after_cursor_execute(
            ^
database/query_optimizer.py:611: error: Function is missing a return type
annotation  [no-untyped-def]
        def _track_query_performance(self, query: str, execution_time: flo...
        ^
database/query_optimizer.py:634: error: Function is missing a return type
annotation  [no-untyped-def]
        async def optimized_session(self):
        ^
database/query_optimizer.py:689: error: Call to untyped function "_clean_cache"
in typed context  [no-untyped-call]
                    self._clean_cache()
                    ^~~~~~~~~~~~~~~~~~~
database/query_optimizer.py:701: error: Function is missing a return type
annotation  [no-untyped-def]
        def _clean_cache(self):
        ^
database/query_optimizer.py:701: note: Use "-> None" if function does not return a value
database/query_optimizer.py:713: error: Function is missing a return type
annotation  [no-untyped-def]
        async def create_multi_agent_indexes(self, session: AsyncSession):
        ^
database/query_optimizer.py:751: error: Function is missing a return type
annotation  [no-untyped-def]
        async def analyze_and_vacuum_tables(
        ^
database/query_optimizer.py:809: error: Function is missing a return type
annotation  [no-untyped-def]
        async def setup_monitoring(self, session: AsyncSession):
        ^
database/optimization_example.py:29: error: Function is missing a return type
annotation  [no-untyped-def]
    async def setup_optimized_database():
    ^
database/optimization_example.py:75: error: Function is missing a type
annotation  [no-untyped-def]
    async def example_batch_operations(optimizer):
    ^
database/optimization_example.py:141: error: Function is missing a type
annotation  [no-untyped-def]
    async def example_prepared_statements(optimizer):
    ^
database/optimization_example.py:215: error: Function is missing a type
annotation  [no-untyped-def]
    async def example_query_caching(optimizer):
    ^
database/optimization_example.py:251: error: Function is missing a type
annotation  [no-untyped-def]
    async def example_query_analysis(optimizer):
    ^
database/optimization_example.py:304: error: Function is missing a type
annotation  [no-untyped-def]
    async def example_maintenance_scheduling(indexing_strategy):
    ^
database/optimization_example.py:315: error: No overload variant of
"sessionmaker" matches argument types "AsyncEngine", "type[AsyncSession]",
"bool"  [call-overload]
        async_session = sessionmaker(
                        ^
database/optimization_example.py:315: note: Possible overload variants:
database/optimization_example.py:315: note:     def [_S <: Session] __init__(self, bind: Engine | Connection | None = ..., *, class_: type[_S], autoflush: bool = ..., expire_on_commit: bool = ..., info: dict[Any, Any] | None = ..., **kw: Any) -> sessionmaker[_S]
database/optimization_example.py:315: note:     def [_S <: Session] __init__(self, bind: Engine | Connection | None = ..., *, autoflush: bool = ..., expire_on_commit: bool = ..., info: dict[Any, Any] | None = ..., **kw: Any) -> sessionmaker[Session]
database/optimization_example.py:349: error: Function is missing a type
annotation  [no-untyped-def]
    async def generate_performance_report(optimizer, indexing_strategy):
    ^
database/optimization_example.py:393: error: Function is missing a return type
annotation  [no-untyped-def]
    async def main():
    ^
database/optimization_example.py:393: note: Use "-> None" if function does not return a value
database/optimization_example.py:398: error: Call to untyped function
"setup_optimized_database" in typed context  [no-untyped-call]
        optimizer, indexing_strategy = await setup_optimized_database()
                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~
database/optimization_example.py:401: error: Call to untyped function
"example_batch_operations" in typed context  [no-untyped-call]
        await example_batch_operations(optimizer)
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
database/optimization_example.py:402: error: Call to untyped function
"example_prepared_statements" in typed context  [no-untyped-call]
        await example_prepared_statements(optimizer)
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
database/optimization_example.py:403: error: Call to untyped function
"example_query_caching" in typed context  [no-untyped-call]
        await example_query_caching(optimizer)
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
database/optimization_example.py:404: error: Call to untyped function
"example_query_analysis" in typed context  [no-untyped-call]
        await example_query_analysis(optimizer)
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
database/optimization_example.py:407: error: Call to untyped function
"generate_performance_report" in typed context  [no-untyped-call]
        await generate_performance_report(optimizer, indexing_strategy)
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
database/optimization_example.py:422: error: Call to untyped function "main" in
typed context  [no-untyped-call]
        asyncio.run(main())
                    ^~~~~~
database/models.py:133: error: Missing type parameters for generic type "dict"
[type-arg]
        def to_dict(self) -> dict:
                             ^
database/models.py:195: error: Missing type parameters for generic type "dict"
[type-arg]
        def to_dict(self) -> dict:
                             ^
inference/gnn/h3_spatial_integration.py:40: error: Incompatible default for
argument "resolution" (default has type "None", argument has type "int")
[assignment]
            self, lat: float, lon: float, resolution: int = None
                                                            ^~~~
inference/gnn/h3_spatial_integration.py:40: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
inference/gnn/h3_spatial_integration.py:40: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
inference/gnn/h3_spatial_integration.py:155: error: Incompatible types in
assignment (expression has type "Tensor", variable has type "list[float]")
[assignment]
                edge_weights = torch.tensor(edge_weights, dtype=torch.floa...
                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
inference/gnn/h3_spatial_integration.py:158: error: Incompatible types in
assignment (expression has type "Tensor", variable has type "list[float]")
[assignment]
                edge_weights = torch.empty(0, dtype=torch.float32)
                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
inference/gnn/h3_spatial_integration.py:160: error: Incompatible return value
type (got "tuple[Tensor, list[float]]", expected "tuple[Tensor, Tensor]")
[return-value]
            return edge_index, edge_weights
                   ^~~~~~~~~~~~~~~~~~~~~~~~
inference/gnn/h3_spatial_integration.py:166: error: Incompatible default for
argument "resolutions" (default has type "None", argument has type "list[int]")
[assignment]
        def __init__(self, resolutions: List[int] = None):
                                                    ^~~~
inference/gnn/h3_spatial_integration.py:166: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
inference/gnn/h3_spatial_integration.py:166: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
inference/gnn/h3_spatial_integration.py:193: error: "None" object is not
iterable  [misc]
                        center_lat, center_lon = self.processor.h3_to_latl...
                                                 ^
inference/gnn/h3_spatial_integration.py:205: error: Incompatible types in
assignment (expression has type "list[str | None]", target has type "Tensor")
[assignment]
                features[f"h3_indices_{resolution}"] = h3_indices
                                                       ^~~~~~~~~~
inference/gnn/h3_spatial_integration.py:264: error: Function is missing a
return type annotation  [no-untyped-def]
            def dfs_cluster(h3_index: str, current_cluster: Set[str]):
            ^
inference/gnn/h3_spatial_integration.py:342: error: Argument 1 to
"create_h3_spatial_graph" of "H3SpatialProcessor" has incompatible type
"Tensor"; expected "list[str]"  [arg-type]
                ) = self.h3_processor.create_h3_spatial_graph(h3_indices)
                                                              ^~~~~~~~~~
inference/gnn/h3_spatial_integration.py:350: error: Argument 1 to
"compute_spatial_relationships" of "H3MultiResolutionAnalyzer" has incompatible
type "Tensor"; expected "list[str]"  [arg-type]
                        multi_res_features["h3_indices_7"]
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
inference/gnn/h3_spatial_integration.py:376: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
    def integrate_h3_with_active_inference(
    ^
inference/gnn/h3_spatial_integration.py:397: error: Argument 1 to "zeros" has
incompatible type "int | float"; expected "int | SymInt"  [arg-type]
            spatial_adjacency = torch.zeros(num_nodes, num_nodes)
                                            ^~~~~~~~~
inference/gnn/h3_spatial_integration.py:397: error: Argument 2 to "zeros" has
incompatible type "int | float"; expected "int | SymInt"  [arg-type]
            spatial_adjacency = torch.zeros(num_nodes, num_nodes)
                                                       ^~~~~~~~~
inference/gnn/h3_spatial_integration.py:403: error: Incompatible types in
assignment (expression has type "int | float", target has type "Tensor")
[assignment]
            integration_results["spatial_connectivity"] = torch.sum(
                                                          ^
inference/gnn/h3_spatial_integration.py:415: error: Incompatible types in
assignment (expression has type "int | float", target has type "Tensor")
[assignment]
                ] = spatial_variance.mean().item()
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
inference/gnn/feature_extractor.py:59: error: Missing type parameters for
generic type "Callable"  [type-arg]
            self._custom_extractors: Dict[str, Callable] = {}
                                               ^
inference/gnn/feature_extractor.py:465: error: Missing type parameters for
generic type "List"  [type-arg]
            self, features: Union[Tensor, List]
                                          ^
inference/gnn/feature_extractor.py:684: error: Function is missing a return
type annotation  [no-untyped-def]
        def add_custom_extractor(
        ^
database/validation.py:289: error: Argument 1 to "array_equal" has incompatible
type "object"; expected
"_Buffer | _SupportsArray[dtype[Any]] | _NestedSequence[_SupportsArray[dtype[Any]]] | complex | bytes | str | _NestedSequence[complex | bytes | str]"
 [arg-type]
                if not np.array_equal(test_array, deserialized):
                                      ^~~~~~~~~~
database/gmn_reality_checkpoints.py:500: error: Item "None" of
"Row[Any] | None" has no attribute "avg_nodes"  [union-attr]
                        float(complexity_result.avg_nodes)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
database/gmn_reality_checkpoints.py:501: error: Item "None" of
"Row[Any] | None" has no attribute "avg_nodes"  [union-attr]
                        if complexity_result.avg_nodes
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
database/gmn_reality_checkpoints.py:505: error: Item "None" of
"Row[Any] | None" has no attribute "avg_edges"  [union-attr]
                        float(complexity_result.avg_edges)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
database/gmn_reality_checkpoints.py:506: error: Item "None" of
"Row[Any] | None" has no attribute "avg_edges"  [union-attr]
                        if complexity_result.avg_edges
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
database/gmn_reality_checkpoints.py:510: error: Item "None" of
"Row[Any] | None" has no attribute "avg_complexity"  [union-attr]
                        float(complexity_result.avg_complexity)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
database/gmn_reality_checkpoints.py:511: error: Item "None" of
"Row[Any] | None" has no attribute "avg_complexity"  [union-attr]
                        if complexity_result.avg_complexity
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
database/gmn_reality_checkpoints.py:514: error: Item "None" of
"Row[Any] | None" has no attribute "max_nodes"  [union-attr]
                    "max_nodes": complexity_result.max_nodes or 0,
                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~
database/gmn_reality_checkpoints.py:515: error: Item "None" of
"Row[Any] | None" has no attribute "max_edges"  [union-attr]
                    "max_edges": complexity_result.max_edges or 0,
                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~
database/gmn_reality_checkpoints.py:587: error: Item "None" of
"Row[Any] | None" has no attribute "total_transitions"  [union-attr]
                    "total_transitions": transition_result.total_transitio...
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
database/gmn_reality_checkpoints.py:588: error: Item "None" of
"Row[Any] | None" has no attribute "agents_with_transitions"  [union-attr]
                    "agents_with_transitions": transition_result.agents_wi...
                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~...
database/gmn_reality_checkpoints.py:591: error: Item "None" of
"Row[Any] | None" has no attribute "avg_change_summary_size"  [union-attr]
                        float(transition_result.avg_change_summary_size)
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
database/gmn_reality_checkpoints.py:592: error: Item "None" of
"Row[Any] | None" has no attribute "avg_change_summary_size"  [union-attr]
                        if transition_result.avg_change_summary_size
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
inference/llm/local_llm_manager.py:174: error: Argument "provider" to
"LLMResponse" has incompatible type "LocalLLMProvider"; expected "str"
[arg-type]
                    provider=LocalLLMProvider.OLLAMA,
                             ^~~~~~~~~~~~~~~~~~~~~~~
inference/llm/local_llm_manager.py:194: error: Missing type parameters for
generic type "Popen"  [type-arg]
            self.process: Optional[subprocess.Popen] = None
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
inference/llm/local_llm_manager.py:282: error: Argument 1 to "run" has
incompatible type "list[str | None]"; expected
"str | bytes | PathLike[str] | PathLike[bytes] | Sequence[str | bytes | PathLike[str] | PathLike[bytes]]"
 [arg-type]
                    cmd, capture_output=True, text=True, timeout=60
                    ^~~
inference/llm/local_llm_manager.py:307: error: Argument "provider" to
"LLMResponse" has incompatible type "LocalLLMProvider"; expected "str"
[arg-type]
                    provider=LocalLLMProvider.LLAMA_CPP,
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~
inference/llm/local_llm_manager.py:310: error: Argument 1 to "join" of "str"
has incompatible type "list[str | None]"; expected "Iterable[str]"  [arg-type]
                        "command": " ".join(cmd),
                                            ^~~
inference/llm/local_llm_manager.py:416: error: Function is missing a return
type annotation  [no-untyped-def]
        def __init__(self):
        ^
inference/llm/local_llm_manager.py:416: note: Use "-> None" if function does not return a value
inference/llm/local_llm_manager.py:483: error: Call to untyped function
"FallbackResponder" in typed context  [no-untyped-call]
            self.fallback_responder = FallbackResponder()
                                      ^~~~~~~~~~~~~~~~~~~
websocket/connection_pool.py:79: error: Function is missing a return type
annotation  [no-untyped-def]
        def __post_init__(self):
        ^
websocket/connection_pool.py:79: note: Use "-> None" if function does not return a value
websocket/connection_pool.py:110: error: Function is missing a return type
annotation  [no-untyped-def]
        def mark_connected(self):
        ^
websocket/connection_pool.py:110: note: Use "-> None" if function does not return a value
websocket/connection_pool.py:116: error: Function is missing a return type
annotation  [no-untyped-def]
        def mark_idle(self):
        ^
websocket/connection_pool.py:116: note: Use "-> None" if function does not return a value
websocket/connection_pool.py:121: error: Function is missing a return type
annotation  [no-untyped-def]
        def mark_in_use(self):
        ^
websocket/connection_pool.py:121: note: Use "-> None" if function does not return a value
websocket/connection_pool.py:126: error: Function is missing a return type
annotation  [no-untyped-def]
        def mark_disconnected(self):
        ^
websocket/connection_pool.py:126: note: Use "-> None" if function does not return a value
websocket/connection_pool.py:131: error: Function is missing a return type
annotation  [no-untyped-def]
        def mark_error(self):
        ^
websocket/connection_pool.py:131: note: Use "-> None" if function does not return a value
websocket/connection_pool.py:135: error: Function is missing a return type
annotation  [no-untyped-def]
        def set_metadata(self, key: str, value: Any):
        ^
websocket/connection_pool.py:151: error: Function is missing a return type
annotation  [no-untyped-def]
        async def close(self):
        ^
websocket/connection_pool.py:151: note: Use "-> None" if function does not return a value
websocket/connection_pool.py:162: error: Call to untyped function
"mark_disconnected" in typed context  [no-untyped-call]
                self.mark_disconnected()
                ^~~~~~~~~~~~~~~~~~~~~~~~
websocket/connection_pool.py:168: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
websocket/connection_pool.py:168: note: Use "-> None" if function does not return a value
websocket/connection_pool.py:186: error: Function is missing a return type
annotation  [no-untyped-def]
        def record_acquisition(self, wait_time: float, success: bool = Tru...
        ^
websocket/connection_pool.py:194: error: Function is missing a return type
annotation  [no-untyped-def]
        def record_release(self):
        ^
websocket/connection_pool.py:194: note: Use "-> None" if function does not return a value
websocket/connection_pool.py:198: error: Function is missing a return type
annotation  [no-untyped-def]
        def record_connection_created(self):
        ^
websocket/connection_pool.py:198: note: Use "-> None" if function does not return a value
websocket/connection_pool.py:202: error: Function is missing a return type
annotation  [no-untyped-def]
        def record_connection_destroyed(self):
        ^
websocket/connection_pool.py:202: note: Use "-> None" if function does not return a value
websocket/connection_pool.py:206: error: Function is missing a return type
annotation  [no-untyped-def]
        def record_health_check_failure(self):
        ^
websocket/connection_pool.py:206: note: Use "-> None" if function does not return a value
websocket/connection_pool.py:241: error: Missing type parameters for generic
type "Task"  [type-arg]
            self._task: Optional[asyncio.Task] = None
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
websocket/connection_pool.py:243: error: Function is missing a return type
annotation  [no-untyped-def]
        def start(self):
        ^
websocket/connection_pool.py:243: note: Use "-> None" if function does not return a value
websocket/connection_pool.py:247: error: Call to untyped function
"_monitor_loop" in typed context  [no-untyped-call]
                self._task = asyncio.create_task(self._monitor_loop())
                                                 ^~~~~~~~~~~~~~~~~~~~
websocket/connection_pool.py:250: error: Function is missing a return type
annotation  [no-untyped-def]
        async def stop(self):
        ^
websocket/connection_pool.py:250: note: Use "-> None" if function does not return a value
websocket/connection_pool.py:261: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _monitor_loop(self):
        ^
websocket/connection_pool.py:261: note: Use "-> None" if function does not return a value
websocket/connection_pool.py:265: error: Call to untyped function
"_health_check_cycle" in typed context  [no-untyped-call]
                    await self.pool._health_check_cycle()
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
websocket/connection_pool.py:274: error: Function is missing a type annotation
for one or more arguments  [no-untyped-def]
    async def create_websocket_connection(url: str, **kwargs) -> Any:
    ^
websocket/connection_pool.py:282: error: "ClientWebSocketResponse" has no
attribute "_session"  [attr-defined]
            ws._session = session
            ^~~~~~~~~~~
websocket/connection_pool.py:298: error: Call to untyped function
"ConnectionMetrics" in typed context  [no-untyped-call]
            self._metrics = ConnectionMetrics()
                            ^~~~~~~~~~~~~~~~~~~
websocket/connection_pool.py:320: error: Function is missing a return type
annotation  [no-untyped-def]
        async def initialize(self, url: str):
        ^
websocket/connection_pool.py:340: error: Call to untyped function "start" in
typed context  [no-untyped-call]
                self._health_monitor.start()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
websocket/connection_pool.py:360: error: Call to untyped function
"mark_connected" in typed context  [no-untyped-call]
                conn.mark_connected()
                ^~~~~~~~~~~~~~~~~~~~~
websocket/connection_pool.py:362: error: Call to untyped function
"record_connection_created" in typed context  [no-untyped-call]
                self._metrics.record_connection_created()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
websocket/connection_pool.py:383: error: Call to untyped function "mark_idle"
in typed context  [no-untyped-call]
                    conn.mark_idle()
                    ^~~~~~~~~~~~~~~~
websocket/connection_pool.py:418: error: Call to untyped function "mark_in_use"
in typed context  [no-untyped-call]
                                    conn.mark_in_use()
                                    ^~~~~~~~~~~~~~~~~~
websocket/connection_pool.py:429: error: Call to untyped function "mark_in_use"
in typed context  [no-untyped-call]
                            conn.mark_in_use()
                            ^~~~~~~~~~~~~~~~~~
websocket/connection_pool.py:436: error: Argument 1 to "_create_connection" of
"WebSocketConnectionPool" has incompatible type "str | None"; expected "str"
[arg-type]
    ...                       conn = await self._create_connection(self._url)
                                                                   ^~~~~~~~~
websocket/connection_pool.py:439: error: Call to untyped function "mark_in_use"
in typed context  [no-untyped-call]
                            conn.mark_in_use()
                            ^~~~~~~~~~~~~~~~~~
websocket/connection_pool.py:463: error: Function is missing a return type
annotation  [no-untyped-def]
        async def release(self, connection_id: str):
        ^
websocket/connection_pool.py:480: error: Call to untyped function
"record_connection_destroyed" in typed context  [no-untyped-call]
                    self._metrics.record_connection_destroyed()
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
websocket/connection_pool.py:486: error: Argument 1 to
"_create_and_add_connection" of "WebSocketConnectionPool" has incompatible type
"str | None"; expected "str"  [arg-type]
                            self._create_and_add_connection(self._url)
                                                            ^~~~~~~~~
websocket/connection_pool.py:490: error: Call to untyped function "mark_idle"
in typed context  [no-untyped-call]
                    conn.mark_idle()
                    ^~~~~~~~~~~~~~~~
websocket/connection_pool.py:494: error: Call to untyped function
"record_release" in typed context  [no-untyped-call]
                self._metrics.record_release()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
websocket/connection_pool.py:509: error: Call to untyped function
"record_health_check_failure" in typed context  [no-untyped-call]
                self._metrics.record_health_check_failure()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
websocket/connection_pool.py:512: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _health_check_cycle(self):
        ^
websocket/connection_pool.py:512: note: Use "-> None" if function does not return a value
websocket/connection_pool.py:541: error: Call to untyped function "close" in
typed context  [no-untyped-call]
                        await conn.close()
                              ^~~~~~~~~~~~
websocket/connection_pool.py:549: error: Call to untyped function
"record_connection_destroyed" in typed context  [no-untyped-call]
                        self._metrics.record_connection_destroyed()
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
websocket/connection_pool.py:556: error: Argument 1 to
"_create_and_add_connection" of "WebSocketConnectionPool" has incompatible type
"str | None"; expected "str"  [arg-type]
    ...              tasks.append(self._create_and_add_connection(self._url))
                                                                  ^~~~~~~~~
websocket/connection_pool.py:560: error: Call to untyped function
"_remove_idle_connections" in typed context  [no-untyped-call]
            await self._remove_idle_connections()
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
websocket/connection_pool.py:564: error: Call to untyped function "_auto_scale"
in typed context  [no-untyped-call]
                await self._auto_scale()
                      ^~~~~~~~~~~~~~~~~~
websocket/connection_pool.py:566: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _remove_idle_connections(self):
        ^
websocket/connection_pool.py:566: note: Use "-> None" if function does not return a value
websocket/connection_pool.py:569: error: Need type annotation for
"connections_to_remove" (hint: "connections_to_remove: list[<type>] = ...")
[var-annotated]
                connections_to_remove = []
                ^~~~~~~~~~~~~~~~~~~~~
websocket/connection_pool.py:582: error: Call to untyped function "close" in
typed context  [no-untyped-call]
                    await conn.close()
                          ^~~~~~~~~~~~
websocket/connection_pool.py:586: error: Call to untyped function
"record_connection_destroyed" in typed context  [no-untyped-call]
                    self._metrics.record_connection_destroyed()
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
websocket/connection_pool.py:588: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _auto_scale(self):
        ^
websocket/connection_pool.py:588: note: Use "-> None" if function does not return a value
websocket/connection_pool.py:610: error: Argument 1 to
"_create_and_add_connection" of "WebSocketConnectionPool" has incompatible type
"str | None"; expected "str"  [arg-type]
    ...              tasks.append(self._create_and_add_connection(self._url))
                                                                  ^~~~~~~~~
websocket/connection_pool.py:635: error: Call to untyped function "close" in
typed context  [no-untyped-call]
                        await conn.close()
                              ^~~~~~~~~~~~
websocket/connection_pool.py:638: error: Call to untyped function
"record_connection_destroyed" in typed context  [no-untyped-call]
                        self._metrics.record_connection_destroyed()
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
websocket/connection_pool.py:641: error: Function is missing a return type
annotation  [no-untyped-def]
        async def shutdown(self, graceful: bool = True):
        ^
websocket/connection_pool.py:648: error: Call to untyped function "stop" in
typed context  [no-untyped-call]
            await self._health_monitor.stop()
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
websocket/connection_pool.py:671: error: Call to untyped function "close" in
typed context  [no-untyped-call]
                    await conn.close()
                          ^~~~~~~~~~~~
api/models/security_validators.py:8: error: Function is missing a type
annotation  [no-untyped-def]
        def no_sql_injection(cls, v):
        ^
api/models/security_validators.py:26: error: Function is missing a type
annotation  [no-untyped-def]
        def no_xss(cls, v):
        ^
websocket/resource_manager.py:68: error: Function is missing a return type
annotation  [no-untyped-def]
        def __post_init__(self):
        ^
websocket/resource_manager.py:68: note: Use "-> None" if function does not return a value
websocket/resource_manager.py:106: error: Function is missing a return type
annotation  [no-untyped-def]
        def mark_active(self):
        ^
websocket/resource_manager.py:106: note: Use "-> None" if function does not return a value
websocket/resource_manager.py:111: error: Function is missing a return type
annotation  [no-untyped-def]
        def mark_idle(self):
        ^
websocket/resource_manager.py:111: note: Use "-> None" if function does not return a value
websocket/resource_manager.py:115: error: Function is missing a return type
annotation  [no-untyped-def]
        def mark_released(self):
        ^
websocket/resource_manager.py:115: note: Use "-> None" if function does not return a value
websocket/resource_manager.py:120: error: Function is missing a return type
annotation  [no-untyped-def]
        def mark_error(self):
        ^
websocket/resource_manager.py:120: note: Use "-> None" if function does not return a value
websocket/resource_manager.py:124: error: Function is missing a return type
annotation  [no-untyped-def]
        def update_usage(
        ^
websocket/resource_manager.py:133: error: Function is missing a return type
annotation  [no-untyped-def]
        def set_metadata(self, key: str, value: Any):
        ^
websocket/resource_manager.py:152: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
websocket/resource_manager.py:152: note: Use "-> None" if function does not return a value
websocket/resource_manager.py:160: error: Function is missing a return type
annotation  [no-untyped-def]
        def record_allocation(self):
        ^
websocket/resource_manager.py:160: note: Use "-> None" if function does not return a value
websocket/resource_manager.py:167: error: Function is missing a return type
annotation  [no-untyped-def]
        def record_release(self):
        ^
websocket/resource_manager.py:167: note: Use "-> None" if function does not return a value
websocket/resource_manager.py:172: error: Function is missing a return type
annotation  [no-untyped-def]
        def record_allocation_failure(self):
        ^
websocket/resource_manager.py:172: note: Use "-> None" if function does not return a value
websocket/resource_manager.py:209: error: Call to untyped function
"ResourceMetrics" in typed context  [no-untyped-call]
            self._metrics = ResourceMetrics()
                            ^~~~~~~~~~~~~~~~~
websocket/resource_manager.py:210: error: Missing type parameters for generic
type "Task"  [type-arg]
            self._cleanup_task: Optional[asyncio.Task] = None
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
websocket/resource_manager.py:214: error: Function is missing a return type
annotation  [no-untyped-def]
        async def start(self):
        ^
websocket/resource_manager.py:214: note: Use "-> None" if function does not return a value
websocket/resource_manager.py:218: error: Call to untyped function
"_cleanup_loop" in typed context  [no-untyped-call]
    ...        self._cleanup_task = asyncio.create_task(self._cleanup_loop())
                                                        ^~~~~~~~~~~~~~~~~~~~
websocket/resource_manager.py:221: error: Function is missing a return type
annotation  [no-untyped-def]
        async def stop(self):
        ^
websocket/resource_manager.py:221: note: Use "-> None" if function does not return a value
websocket/resource_manager.py:232: error: Call to untyped function
"force_release_all" in typed context  [no-untyped-call]
            await self.force_release_all()
                  ^~~~~~~~~~~~~~~~~~~~~~~~
websocket/resource_manager.py:290: error: Call to untyped function
"record_allocation" in typed context  [no-untyped-call]
                    self._metrics.record_allocation()
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
websocket/resource_manager.py:298: error: Call to untyped function
"record_allocation_failure" in typed context  [no-untyped-call]
                    self._metrics.record_allocation_failure()
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
websocket/resource_manager.py:324: error: Function is missing a return type
annotation  [no-untyped-def]
        async def activate_resource(self, agent_id: str):
        ^
websocket/resource_manager.py:333: error: Call to untyped function
"mark_active" in typed context  [no-untyped-call]
                resource.mark_active()
                ^~~~~~~~~~~~~~~~~~~~~~
websocket/resource_manager.py:336: error: Function is missing a return type
annotation  [no-untyped-def]
        async def release_resource(self, agent_id: str):
        ^
websocket/resource_manager.py:350: error: Call to untyped function
"mark_released" in typed context  [no-untyped-call]
                resource.mark_released()
                ^~~~~~~~~~~~~~~~~~~~~~~~
websocket/resource_manager.py:368: error: Call to untyped function
"record_release" in typed context  [no-untyped-call]
                self._metrics.record_release()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
websocket/resource_manager.py:371: error: Function is missing a return type
annotation  [no-untyped-def]
        async def update_resource_usage(
        ^
websocket/resource_manager.py:439: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _cleanup_loop(self):
        ^
websocket/resource_manager.py:439: note: Use "-> None" if function does not return a value
websocket/resource_manager.py:443: error: Call to untyped function
"_cleanup_stale_resources" in typed context  [no-untyped-call]
                    await self._cleanup_stale_resources()
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
websocket/resource_manager.py:451: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _cleanup_stale_resources(self):
        ^
websocket/resource_manager.py:451: note: Use "-> None" if function does not return a value
websocket/resource_manager.py:467: error: Function is missing a return type
annotation  [no-untyped-def]
        async def force_release_all(self):
        ^
websocket/resource_manager.py:467: note: Use "-> None" if function does not return a value
websocket/monitoring.py:45: error: Function is missing a return type annotation
 [no-untyped-def]
        def add_value(
        ^
websocket/monitoring.py:111: error: Missing type parameters for generic type
"Task"  [type-arg]
            self._monitoring_task: Optional[asyncio.Task] = None
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
websocket/monitoring.py:115: error: Function is missing a return type
annotation  [no-untyped-def]
        def start(self):
        ^
websocket/monitoring.py:115: note: Use "-> None" if function does not return a value
websocket/monitoring.py:119: error: Call to untyped function "_monitor_loop" in
typed context  [no-untyped-call]
    ...     self._monitoring_task = asyncio.create_task(self._monitor_loop())
                                                        ^~~~~~~~~~~~~~~~~~~~
websocket/monitoring.py:122: error: Function is missing a return type
annotation  [no-untyped-def]
        async def stop(self):
        ^
websocket/monitoring.py:122: note: Use "-> None" if function does not return a value
websocket/monitoring.py:133: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _monitor_loop(self):
        ^
websocket/monitoring.py:133: note: Use "-> None" if function does not return a value
websocket/monitoring.py:137: error: Call to untyped function "_collect_metrics"
in typed context  [no-untyped-call]
                    await self._collect_metrics()
                          ^~~~~~~~~~~~~~~~~~~~~~~
websocket/monitoring.py:145: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _collect_metrics(self):
        ^
websocket/monitoring.py:145: note: Use "-> None" if function does not return a value
websocket/monitoring.py:173: error: Function is missing a return type
annotation  [no-untyped-def]
        def log_event(
        ^
websocket/monitoring.py:360: error: Function is missing a return type
annotation  [no-untyped-def]
    def initialize_monitor(
    ^
websocket/monitoring.py:366: error: Call to untyped function "start" in typed
context  [no-untyped-call]
        monitor.start()
        ^~~~~~~~~~~~~~~
websocket/monitoring.py:374: error: Function is missing a return type
annotation  [no-untyped-def]
    async def get_monitoring_dashboard():
    ^
websocket/monitoring.py:385: error: Function is missing a return type
annotation  [no-untyped-def]
    async def get_current_metrics():
    ^
websocket/monitoring.py:404: error: Function is missing a return type
annotation  [no-untyped-def]
    async def get_connection_details():
    ^
websocket/monitoring.py:418: error: Function is missing a return type
annotation  [no-untyped-def]
    async def get_resource_details():
    ^
websocket/monitoring.py:428: error: Need type annotation for "by_state" (hint:
"by_state: dict[<type>, <type>] = ...")  [var-annotated]
        by_state = {}
        ^~~~~~~~
websocket/monitoring.py:443: error: Function is missing a return type
annotation  [no-untyped-def]
    async def get_metric_timeseries(metric: str, minutes: int = 30):
    ^
websocket/monitoring.py:483: error: Function is missing a return type
annotation  [no-untyped-def]
    async def get_recent_events(limit: int = 100):
    ^
websocket/monitoring.py:498: error: Function is missing a return type
annotation  [no-untyped-def]
    async def log_monitoring_event(
    ^
websocket/monitoring.py:544: error: Function is missing a return type
annotation  [no-untyped-def]
    async def run_performance_benchmark(request: BenchmarkRequest):
    ^
websocket/monitoring.py:565: error: Function is missing a return type
annotation  [no-untyped-def]
        async def agent_workload(agent_id: str):
        ^
security/zero_trust/identity_proxy.py:242: error: If x = b'abc' then f"{x}" or
"{}".format(x) produces "b'abc'", not "abc". If this is desired behavior, use
f"{x!r}" or "{!r}".format(x). Otherwise, decode the bytes  [str-bytes-safe]
    ...rtificate CN mismatch: expected {expected_service}, got {common_name}"
                                                               ^~~~~~~~~~~~~
security/zero_trust/identity_proxy.py:400: error: Incompatible types in
assignment (expression has type "int", target has type "bool")  [assignment]
            factors["failed_attempts"] = self._failed_attempts.get(
                                         ^
security/zero_trust/identity_proxy.py:405: error: Incompatible types in
assignment (expression has type "float", target has type "bool")  [assignment]
            factors["anomaly_score"] = 0.1  # Would be calculated by ML mo...
                                       ^~~
auth/security_logging.py:104: error: Variable "auth.security_logging.Base" is
not valid as a type  [valid-type]
    class SecurityAuditLog(Base):
                           ^
auth/security_logging.py:104: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
auth/security_logging.py:104: error: Invalid base class "Base"  [misc]
    class SecurityAuditLog(Base):
                           ^
auth/security_logging.py:128: error: Name "Engine" is not defined
[name-defined]
    audit_engine: Optional[Engine] = None
                           ^
auth/security_logging.py:129: error: Missing type parameters for generic type
"sessionmaker"  [type-arg]
    AuditSessionLocal: Optional[sessionmaker] = None
                                ^
auth/security_logging.py:167: error: Missing type parameters for generic type
"set"  [type-arg]
            self.suspicious_ips: set = set()
                                 ^
auth/security_logging.py:245: error: "None" not callable  [misc]
                db = AuditSessionLocal()
                     ^~~~~~~~~~~~~~~~~~~
auth/security_headers.py:415: error: Dict entry 4 has incompatible type "str":
"str | None"; expected "str": "str"  [dict-item]
                        "Clear-Site-Data": (
                        ^
auth/security_headers.py:437: error: Function is missing a type annotation for
one or more arguments  [no-untyped-def]
        def __init__(
        ^
auth/security_headers.py:444: error: Function is missing a type annotation for
one or more arguments  [no-untyped-def]
        async def dispatch(self, request: Request, call_next) -> Response:
        ^
auth/security_headers.py:462: error: Returning Any from function declared to
return "Response"  [no-any-return]
                return response
                ^~~~~~~~~~~~~~~
auth/security_headers.py:485: error: Function is missing a type annotation for
one or more arguments  [no-untyped-def]
    def setup_security_headers(app, policy: Optional[SecurityPolicy] = Non...
    ^
auth/security_headers.py:576: error: Function is missing a type annotation for
one or more arguments  [no-untyped-def]
    def add_security_headers(response) -> None:
    ^
auth/jwt_handler.py:265: error: Missing type parameters for generic type "list"
 [type-arg]
            permissions: list,
                         ^
auth/https_enforcement.py:59: error: Incompatible types in assignment
(expression has type "None", variable has type "list[str]")  [assignment]
        trusted_proxies: List[str] = None
                                     ^~~~
auth/https_enforcement.py:62: error: Incompatible types in assignment
(expression has type "None", variable has type "bool")  [assignment]
        production_mode: bool = None
                                ^~~~
auth/https_enforcement.py:117: error: Function is missing a type annotation for
one or more arguments  [no-untyped-def]
        def __init__(self, app, config: Optional[SSLConfiguration] = None)...
        ^
auth/https_enforcement.py:122: error: Function is missing a type annotation for
one or more arguments  [no-untyped-def]
        async def dispatch(self, request: Request, call_next) -> Response:
        ^
auth/https_enforcement.py:129: error: Returning Any from function declared to
return "Response"  [no-any-return]
                return await call_next(request)
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
auth/https_enforcement.py:148: error: Returning Any from function declared to
return "Response"  [no-any-return]
            return response
            ^~~~~~~~~~~~~~~
auth/https_enforcement.py:305: error: Value of type "list[str] | None" is not
indexable  [index]
            primary_domain = self.config.letsencrypt_domains[0]
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
auth/https_enforcement.py:524: error: Function is missing a type annotation for
one or more arguments  [no-untyped-def]
    def setup_https_enforcement(app, config: Optional[SSLConfiguration] = ...
    ^
api/performance_middleware.py:129: error: Need type annotation for "cache"
[var-annotated]
            self.cache = cachetools.TTLCache(
                         ^
api/performance_middleware.py:172: error: Returning Any from function declared
to return "dict[str, Any] | None"  [no-any-return]
                    return cached_response
                    ^~~~~~~~~~~~~~~~~~~~~~
api/performance_middleware.py:179: error: Function is missing a return type
annotation  [no-untyped-def]
        def set(self, request: Request, response_data: Dict[str, Any]):
        ^
api/performance_middleware.py:193: error: Function is missing a return type
annotation  [no-untyped-def]
        def invalidate_pattern(self, pattern: str):
        ^
api/performance_middleware.py:210: error: Function is missing a return type
annotation  [no-untyped-def]
        def clear(self):
        ^
api/performance_middleware.py:210: note: Use "-> None" if function does not return a value
api/performance_middleware.py:246: error: Missing type parameters for generic
type "Future"  [type-arg]
            self.pending_requests: Dict[str, asyncio.Future] = {}
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/performance_middleware.py:268: error: Function is missing a return type
annotation  [no-untyped-def]
        def _cleanup_expired(self):
        ^
api/performance_middleware.py:268: note: Use "-> None" if function does not return a value
api/performance_middleware.py:283: error: Missing type parameters for generic
type "Callable"  [type-arg]
            self, request: Request, handler: Callable
                                             ^
api/performance_middleware.py:289: error: Call to untyped function
"_cleanup_expired" in typed context  [no-untyped-call]
            self._cleanup_expired()
            ^~~~~~~~~~~~~~~~~~~~~~~
api/performance_middleware.py:298: error: Need type annotation for "future"
[var-annotated]
            future = asyncio.Future()
                     ^~~~~~~~~~~~~~~~
api/performance_middleware.py:385: error: Returning Any from function declared
to return "bytes"  [no-any-return]
                    return brotli.compress(
                    ^
api/performance_middleware.py:441: error: Class cannot subclass
"BaseHTTPMiddleware" (has type "Any")  [misc]
    class PerformanceMiddleware(BaseHTTPMiddleware):
                                ^
api/performance_middleware.py:444: error: Incompatible default for argument
"config" (default has type "None", argument has type "PerformanceConfig")
[assignment]
    ...   def __init__(self, app: FastAPI, config: PerformanceConfig = None):
                                                                       ^~~~
api/performance_middleware.py:444: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
api/performance_middleware.py:444: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
api/performance_middleware.py:476: error: Need type annotation for
"response_sizes"  [var-annotated]
            self.response_sizes = deque(maxlen=100)
                                  ^~~~~~~~~~~~~~~~~
api/performance_middleware.py:481: error: Missing type parameters for generic
type "Callable"  [type-arg]
            self, request: Request, call_next: Callable
                                               ^
api/performance_middleware.py:492: error: "Request" has no attribute
"_body_hash"  [attr-defined]
                request._body_hash = hashlib.md5(
                ^~~~~~~~~~~~~~~~~~
api/performance_middleware.py:515: error: Returning Any from function declared
to return "Response"  [no-any-return]
            return response
            ^~~~~~~~~~~~~~~
api/performance_middleware.py:523: error: Incompatible types in assignment
(expression has type "float", variable has type "int")  [assignment]
            self.total_response_time += response_time
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/performance_middleware.py:619: error: Function is missing a return type
annotation  [no-untyped-def]
        def invalidate_cache(self, pattern: str = None):
        ^
api/performance_middleware.py:619: error: Incompatible default for argument
"pattern" (default has type "None", argument has type "str")  [assignment]
        def invalidate_cache(self, pattern: str = None):
                                                  ^~~~
api/performance_middleware.py:619: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
api/performance_middleware.py:619: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
api/performance_middleware.py:625: error: Call to untyped function "clear" in
typed context  [no-untyped-call]
                    self.cache.clear()
                    ^~~~~~~~~~~~~~~~~~
api/performance_middleware.py:627: error: Function is missing a return type
annotation  [no-untyped-def]
        def warm_cache(self, endpoints: List[str]):
        ^
api/performance_middleware.py:650: error: Missing type parameters for generic
type "List"  [type-arg]
            self, data: Union[List, Dict], content_type: str = "applicatio...
                              ^
api/performance_middleware.py:650: error: Missing type parameters for generic
type "Dict"  [type-arg]
            self, data: Union[List, Dict], content_type: str = "applicatio...
                                    ^
api/performance_middleware.py:655: error: Function is missing a return type
annotation  [no-untyped-def]
            async def generate():
            ^
api/performance_middleware.py:669: error: Call to untyped function "generate"
in typed context  [no-untyped-call]
                generate(),
                ^~~~~~~~~~
api/performance_middleware.py:687: error: Incompatible default for argument
"config" (default has type "None", argument has type "PerformanceConfig")
[assignment]
        app: FastAPI, config: PerformanceConfig = None
                                                  ^~~~
api/performance_middleware.py:687: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
api/performance_middleware.py:687: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
api/performance_middleware.py:705: error: Function is missing a return type
annotation  [no-untyped-def]
    def invalidate_api_cache(pattern: str = None):
    ^
api/performance_middleware.py:705: error: Incompatible default for argument
"pattern" (default has type "None", argument has type "str")  [assignment]
    def invalidate_api_cache(pattern: str = None):
                                            ^~~~
api/performance_middleware.py:705: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
api/performance_middleware.py:705: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
api/performance_middleware.py:718: error: Function is missing a return type
annotation  [no-untyped-def]
    def warm_api_cache(endpoints: List[str]):
    ^
api/performance_middleware.py:725: error: Function is missing a return type
annotation  [no-untyped-def]
    async def benchmark_api_performance():
    ^
api/performance_middleware.py:725: note: Use "-> None" if function does not return a value
api/performance_middleware.py:771: error: Call to untyped function
"benchmark_api_performance" in typed context  [no-untyped-call]
        asyncio.run(benchmark_api_performance())
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/monitoring.py:154: error: Missing type parameters for generic type
"Task"  [type-arg]
            self.active_streams: Dict[str, asyncio.Task] = {}
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/monitoring.py:350: error: Argument 2 to "get_summary" of
"MetricsCollector" has incompatible type "float | None"; expected "float"
[arg-type]
        summary = metrics_collector.get_summary(metric_type, duration)
                                                             ^~~~~~~~
observability/performance_metrics.py:31: error: All conditional function
variants must have identical signatures  [misc]
        async def record_system_metric(
        ^
observability/performance_metrics.py:31: note: Original:
observability/performance_metrics.py:31: note:     def record_system_metric(metric_type: str, value: float, metadata: dict[str, Any] | None = ...) -> Coroutine[Any, Any, None]
observability/performance_metrics.py:31: note: Redefinition:
observability/performance_metrics.py:31: note:     def record_system_metric(metric: str, value: float, metadata: dict[str, Any] | None = ...) -> Coroutine[Any, Any, None]
observability/performance_metrics.py:36: error: All conditional function
variants must have identical signatures  [misc]
        async def record_agent_metric(
        ^
observability/performance_metrics.py:36: note: Original:
observability/performance_metrics.py:36: note:     def record_agent_metric(agent_id: str, metric_type: str, value: float, metadata: dict[str, Any] | None = ...) -> Coroutine[Any, Any, None]
observability/performance_metrics.py:36: note: Redefinition:
observability/performance_metrics.py:36: note:     def record_agent_metric(agent_id: str, metric: str, value: float, metadata: dict[str, Any] | None = ...) -> Coroutine[Any, Any, None]
observability/performance_metrics.py:60: error: Need type annotation for
"buffer"  [var-annotated]
            self.buffer = deque(maxlen=max_size)
                          ^~~~~~~~~~~~~~~~~~~~~~
observability/performance_metrics.py:136: error: Need type annotation for
"agent_metrics"  [var-annotated]
            self.agent_metrics = defaultdict(
                                 ^
observability/performance_metrics.py:181: error: Incompatible types in
assignment (expression has type "Task[None]", variable has type "None")
[assignment]
            self.collection_task = asyncio.create_task(self._collection_lo...
                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
observability/performance_metrics.py:181: note: Maybe you forgot to use "await"?
observability/belief_monitoring.py:26: error: All conditional function variants
must have identical signatures  [misc]
        async def record_agent_metric(
        ^
observability/belief_monitoring.py:26: note: Original:
observability/belief_monitoring.py:26: note:     def record_agent_metric(agent_id: str, metric_type: str, value: float, metadata: dict[str, Any] | None = ...) -> Coroutine[Any, Any, None]
observability/belief_monitoring.py:26: note: Redefinition:
observability/belief_monitoring.py:26: note:     def record_agent_metric(agent_id: str, metric: str, value: float, metadata: dict[str, Any] | None = ...) -> Coroutine[Any, Any, None]
observability/belief_monitoring.py:155: error: Returning Any from function
declared to return "float"  [no-any-return]
                            return -np.sum(
                            ^
observability/belief_monitoring.py:249: error: Returning Any from function
declared to return "bool"  [no-any-return]
                return z_score > self.anomaly_threshold
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/coordination_metrics.py:29: error: All conditional function
variants must have identical signatures  [misc]
        async def record_system_metric(
        ^
observability/coordination_metrics.py:29: note: Original:
observability/coordination_metrics.py:29: note:     def record_system_metric(metric_type: str, value: float, metadata: dict[str, Any] | None = ...) -> Coroutine[Any, Any, None]
observability/coordination_metrics.py:29: note: Redefinition:
observability/coordination_metrics.py:29: note:     def record_system_metric(metric: str, value: float, metadata: dict[str, Any] | None = ...) -> Coroutine[Any, Any, None]
observability/coordination_metrics.py:34: error: All conditional function
variants must have identical signatures  [misc]
        async def record_agent_metric(
        ^
observability/coordination_metrics.py:34: note: Original:
observability/coordination_metrics.py:34: note:     def record_agent_metric(agent_id: str, metric_type: str, value: float, metadata: dict[str, Any] | None = ...) -> Coroutine[Any, Any, None]
observability/coordination_metrics.py:34: note: Redefinition:
observability/coordination_metrics.py:34: note:     def record_agent_metric(agent_id: str, metric: str, value: float, metadata: dict[str, Any] | None = ...) -> Coroutine[Any, Any, None]
observability/coordination_metrics.py:70: error: Need type annotation for
"coordination_events"  [var-annotated]
            self.coordination_events = defaultdict(list)
            ^~~~~~~~~~~~~~~~~~~~~~~~
observability/coordination_metrics.py:71: error: Need type annotation for
"coalition_metrics" (hint: "coalition_metrics: dict[<type>, <type>] = ...")
[var-annotated]
            self.coalition_metrics = {}
            ^~~~~~~~~~~~~~~~~~~~~~
observability/coordination_metrics.py:72: error: Need type annotation for
"agent_coordination_stats"  [var-annotated]
            self.agent_coordination_stats = defaultdict(
                                            ^
api/v1/health.py:23: error: Function is missing a return type annotation
[no-untyped-def]
    async def health_check(db: Session = Depends(get_db)):
    ^
api/v1/health.py:52: error: Function is missing a type annotation
[no-untyped-def]
    def database_exception_handler(request, exc):
    ^
api/middleware/rate_limiter.py:119: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
api/middleware/rate_limiter.py:139: error: Need type annotation for "metrics"
[var-annotated]
            self.metrics = defaultdict(lambda: defaultdict(list))
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/middleware/rate_limiter.py:142: error: Missing type parameters for generic
type "Redis"  [type-arg]
            self, identifier: str, pattern_type: str, redis_client: redis....
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
api/middleware/rate_limiter.py:171: error: Incompatible default for argument
"default_anonymous_limit" (default has type "None", argument has type
"RateLimitConfig")  [assignment]
            default_anonymous_limit: RateLimitConfig = None,
                                                       ^~~~
api/middleware/rate_limiter.py:171: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
api/middleware/rate_limiter.py:171: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
api/middleware/rate_limiter.py:172: error: Incompatible default for argument
"default_authenticated_limit" (default has type "None", argument has type
"RateLimitConfig")  [assignment]
            default_authenticated_limit: RateLimitConfig = None,
                                                           ^~~~
api/middleware/rate_limiter.py:172: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
api/middleware/rate_limiter.py:172: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
api/middleware/rate_limiter.py:183: error: Missing type parameters for generic
type "Redis"  [type-arg]
            self.redis_client: Optional[redis.Redis] = None
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/middleware/rate_limiter.py:190: error: Call to untyped function
"SuspiciousPatternDetector" in typed context  [no-untyped-call]
            self.pattern_detector = SuspiciousPatternDetector()
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
api/middleware/rate_limiter.py:213: error: Function is missing a return type
annotation  [no-untyped-def]
        def load_config(self, config_file: str):
        ^
api/middleware/rate_limiter.py:244: error: Argument 1 to "append" of "list" has
incompatible type "IPv4Network | IPv6Network"; expected "IPv4Network"
[arg-type]
                        ipaddress.ip_network(network)
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/middleware/rate_limiter.py:249: error: Argument 1 to "append" of "list" has
incompatible type "IPv4Network | IPv6Network"; expected "IPv4Network"
[arg-type]
                        ipaddress.ip_network(network)
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/middleware/rate_limiter.py:270: error: Function is missing a return type
annotation  [no-untyped-def]
        async def connect(self):
        ^
api/middleware/rate_limiter.py:270: note: Use "-> None" if function does not return a value
api/middleware/rate_limiter.py:277: error: Function is missing a return type
annotation  [no-untyped-def]
        async def disconnect(self):
        ^
api/middleware/rate_limiter.py:277: note: Use "-> None" if function does not return a value
api/middleware/rate_limiter.py:351: error: Function is missing a return type
annotation  [no-untyped-def]
        async def block_identifier(
        ^
api/middleware/rate_limiter.py:407: error: "RateLimitingMetrics" has no
attribute "rate_limit_check_duration"  [attr-defined]
                rate_limiting_metrics.rate_limit_check_duration.labels(
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/middleware/rate_limiter.py:522: error: Argument 3 to "check_pattern" of
"SuspiciousPatternDetector" has incompatible type "Redis[Any] | None"; expected
"Redis[Any]"  [arg-type]
                    ip, "rapid_404", self.redis_client
                                     ^~~~~~~~~~~~~~~~~
api/middleware/rate_limiter.py:533: error: Argument 3 to "check_pattern" of
"SuspiciousPatternDetector" has incompatible type "Redis[Any] | None"; expected
"Redis[Any]"  [arg-type]
                    ip, "rapid_errors", self.redis_client
                                        ^~~~~~~~~~~~~~~~~
api/middleware/rate_limiter.py:543: error: Item "None" of "Redis[Any] | None"
has no attribute "sadd"  [union-attr]
            await self.redis_client.sadd(path_key, request.url.path)
                  ^~~~~~~~~~~~~~~~~~~~~~
api/middleware/rate_limiter.py:544: error: Item "None" of "Redis[Any] | None"
has no attribute "expire"  [union-attr]
            await self.redis_client.expire(path_key, 30)
                  ^~~~~~~~~~~~~~~~~~~~~~~~
api/middleware/rate_limiter.py:545: error: Item "None" of "Redis[Any] | None"
has no attribute "scard"  [union-attr]
            path_count = await self.redis_client.scard(path_key)
                               ^~~~~~~~~~~~~~~~~~~~~~~
api/middleware/rate_limiter.py:557: error: Argument 3 to "check_pattern" of
"SuspiciousPatternDetector" has incompatible type "Redis[Any] | None"; expected
"Redis[Any]"  [arg-type]
                    ip, "large_requests", self.redis_client
                                          ^~~~~~~~~~~~~~~~~
api/middleware/rate_limiter.py:592: error: Item "None" of "BlockReason | None"
has no attribute "value"  [union-attr]
                    content={"detail": f"Blocked: {block_reason.value}"},
                                                  ^~~~~~~~~~~~~~~~~~~
api/middleware/rate_limiter.py:638: error: Item "None" of "Redis[Any] | None"
has no attribute "incr"  [union-attr]
                violations = await self.redis_client.incr(violation_key)
                                   ^~~~~~~~~~~~~~~~~~~~~~
api/middleware/rate_limiter.py:639: error: Item "None" of "Redis[Any] | None"
has no attribute "expire"  [union-attr]
                await self.redis_client.expire(violation_key, 3600)
                      ^~~~~~~~~~~~~~~~~~~~~~~~
api/middleware/rate_limiter.py:679: error: Function "builtins.callable" is not
valid as a type  [valid-type]
            get_user_id: Optional[callable] = None,
                                  ^
api/middleware/rate_limiter.py:679: note: Perhaps you meant "typing.Callable" instead of "callable"?
api/middleware/rate_limiter.py:692: error: Function is missing a return type
annotation  [no-untyped-def]
        async def dispatch(self, request: Request, call_next):
        ^
api/middleware/rate_limiter.py:692: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
        async def dispatch(self, request: Request, call_next):
        ^
api/middleware/rate_limiter.py:695: error: Call to untyped function "connect"
in typed context  [no-untyped-call]
            await self.rate_limiter.connect()
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
api/middleware/rate_limiter.py:753: error: Function "builtins.callable" is not
valid as a type  [valid-type]
        get_user_id: Optional[callable] = None,
                              ^
api/middleware/rate_limiter.py:753: note: Perhaps you meant "typing.Callable" instead of "callable"?
api/middleware/rate_limiter.py:772: error: Function is missing a return type
annotation  [no-untyped-def]
    def rate_limit(
    ^
api/middleware/rate_limiter.py:779: error: Function is missing a type
annotation  [no-untyped-def]
        def decorator(func):
        ^
api/middleware/rate_limiter.py:780: error: Function is missing a return type
annotation  [no-untyped-def]
            async def wrapper(request: Request, *args, **kwargs):
            ^
api/middleware/rate_limiter.py:780: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
            async def wrapper(request: Request, *args, **kwargs):
            ^
api/middleware/rate_limiter.py:782: error: Call to untyped function "connect"
in typed context  [no-untyped-call]
                await rate_limiter.connect()
                      ^~~~~~~~~~~~~~~~~~~~~~
api/middleware/error_handlers.py:11: error: Function is missing a return type
annotation  [no-untyped-def]
    async def validation_exception_handler(
    ^
api/middleware/error_handlers.py:22: error: Function is missing a return type
annotation  [no-untyped-def]
    async def http_exception_handler(
    ^
api/middleware/error_handlers.py:40: error: Function is missing a return type
annotation  [no-untyped-def]
    async def general_exception_handler(request: Request, exc: Exception):
    ^
agents/connection_pool_manager.py:99: error: Function is missing a type
annotation  [no-untyped-def]
        def call(self, func, *args, **kwargs):
        ^
agents/connection_pool_manager.py:121: error: Call to untyped function
"_on_success" in typed context  [no-untyped-call]
                self._on_success()
                ^~~~~~~~~~~~~~~~~~
agents/connection_pool_manager.py:124: error: Call to untyped function
"_on_failure" in typed context  [no-untyped-call]
                self._on_failure()
                ^~~~~~~~~~~~~~~~~~
agents/connection_pool_manager.py:127: error: Function is missing a return type
annotation  [no-untyped-def]
        def _on_success(self):
        ^
agents/connection_pool_manager.py:127: note: Use "-> None" if function does not return a value
agents/connection_pool_manager.py:134: error: Function is missing a return type
annotation  [no-untyped-def]
        def _on_failure(self):
        ^
agents/connection_pool_manager.py:134: note: Use "-> None" if function does not return a value
agents/connection_pool_manager.py:138: error: Incompatible types in assignment
(expression has type "float", variable has type "int")  [assignment]
                self.last_failure_time = time.time()
                                         ^~~~~~~~~~~
agents/connection_pool_manager.py:155: error: Missing type parameters for
generic type "Dict"  [type-arg]
            self.connection_metadata: Dict[str, Dict] = {}
                                                ^
agents/connection_pool_manager.py:174: error: Call to untyped function
"_start_background_tasks" in typed context  [no-untyped-call]
            self._start_background_tasks()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/connection_pool_manager.py:176: error: Function is missing a return type
annotation  [no-untyped-def]
        def _start_background_tasks(self):
        ^
agents/connection_pool_manager.py:176: note: Use "-> None" if function does not return a value
agents/connection_pool_manager.py:178: error: Incompatible types in assignment
(expression has type "Thread", variable has type "None")  [assignment]
            self._cleanup_task = threading.Thread(
                                 ^
agents/connection_pool_manager.py:181: error: Incompatible types in assignment
(expression has type "Thread", variable has type "None")  [assignment]
            self._metrics_task = threading.Thread(
                                 ^
agents/connection_pool_manager.py:185: error: "None" has no attribute "start"
[attr-defined]
            self._cleanup_task.start()
            ^~~~~~~~~~~~~~~~~~~~~~~~
agents/connection_pool_manager.py:186: error: "None" has no attribute "start"
[attr-defined]
            self._metrics_task.start()
            ^~~~~~~~~~~~~~~~~~~~~~~~
agents/connection_pool_manager.py:195: error: Call to untyped function "call"
in typed context  [no-untyped-call]
                connection = await self.circuit_breaker.call(
                                   ^
agents/connection_pool_manager.py:211: error: Returning Any from function
declared to return "WebSocket"  [no-any-return]
                return connection
                ^~~~~~~~~~~~~~~~~
agents/connection_pool_manager.py:248: error: Incompatible return value type
(got "None", expected "WebSocket")  [return-value]
            return None  # Placeholder - would be actual WebSocket connect...
                   ^~~~
agents/connection_pool_manager.py:250: error: Function is missing a return type
annotation  [no-untyped-def]
        def return_connection(self, client_id: str):
        ^
agents/connection_pool_manager.py:267: error: Function is missing a return type
annotation  [no-untyped-def]
        def _cleanup_expired_connections(self):
        ^
agents/connection_pool_manager.py:267: note: Use "-> None" if function does not return a value
agents/connection_pool_manager.py:297: error: Function is missing a return type
annotation  [no-untyped-def]
        def _update_metrics(self):
        ^
agents/connection_pool_manager.py:297: note: Use "-> None" if function does not return a value
agents/connection_pool_manager.py:396: error: Function is missing a return type
annotation  [no-untyped-def]
        async def initialize(self):
        ^
agents/connection_pool_manager.py:396: note: Use "-> None" if function does not return a value
agents/connection_pool_manager.py:417: error: Function is missing a return type
annotation  [no-untyped-def]
        async def get_connection(self):
        ^
agents/connection_pool_manager.py:423: error: Call to untyped function "call"
in typed context  [no-untyped-call]
                connection = await self.circuit_breaker.call(self.pool.acq...
                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
agents/connection_pool_manager.py:423: error: "None" has no attribute "acquire"
 [attr-defined]
    ...       connection = await self.circuit_breaker.call(self.pool.acquire)
                                                           ^~~~~~~~~~~~~~~~~
agents/connection_pool_manager.py:442: error: "None" has no attribute "release"
 [attr-defined]
                    await self.pool.release(connection)
                          ^~~~~~~~~~~~~~~~~
agents/connection_pool_manager.py:446: error: Function is missing a return type
annotation  [no-untyped-def]
        async def close(self):
        ^
agents/connection_pool_manager.py:446: note: Use "-> None" if function does not return a value
agents/connection_pool_manager.py:474: error: Need type annotation for
"performance_metrics" (hint: "performance_metrics: dict[<type>, <type>] = ...")
[var-annotated]
            self.performance_metrics = {}
            ^~~~~~~~~~~~~~~~~~~~~~~~
agents/connection_pool_manager.py:479: error: Function is missing a return type
annotation  [no-untyped-def]
        async def initialize(self):
        ^
agents/connection_pool_manager.py:479: note: Use "-> None" if function does not return a value
agents/connection_pool_manager.py:481: error: Call to untyped function
"initialize" in typed context  [no-untyped-call]
            await self.database_pool.initialize()
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/connection_pool_manager.py:490: error: Function is missing a return type
annotation  [no-untyped-def]
        def return_websocket_connection(self, client_id: str):
        ^
agents/connection_pool_manager.py:495: error: Function is missing a return type
annotation  [no-untyped-def]
        async def get_database_connection(self):
        ^
agents/connection_pool_manager.py:519: error: Function is missing a return type
annotation  [no-untyped-def]
        async def close(self):
        ^
agents/connection_pool_manager.py:519: note: Use "-> None" if function does not return a value
agents/connection_pool_manager.py:521: error: Call to untyped function "close"
in typed context  [no-untyped-call]
            await self.database_pool.close()
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~
agents/connection_pool_manager.py:535: error: Need type annotation for
"metrics_history" (hint: "metrics_history: list[<type>] = ...")  [var-annotated]
            self.metrics_history = []
            ^~~~~~~~~~~~~~~~~~~~
agents/connection_pool_manager.py:544: error: Function is missing a return type
annotation  [no-untyped-def]
        def _monitor_resources(self):
        ^
agents/connection_pool_manager.py:544: note: Use "-> None" if function does not return a value
observability/pymdp_integration.py:24: error: Function is missing a return type
annotation  [no-untyped-def]
        async def record_agent_metric(
        ^
observability/pymdp_integration.py:24: error: All conditional function variants
must have identical signatures  [misc]
        async def record_agent_metric(
        ^
observability/pymdp_integration.py:24: note: Original:
observability/pymdp_integration.py:24: note:     def record_agent_metric(agent_id: str, metric_type: str, value: float, metadata: dict[str, Any] | None = ...) -> Coroutine[Any, Any, None]
observability/pymdp_integration.py:24: note: Redefinition:
observability/pymdp_integration.py:24: note:     def record_agent_metric(agent_id: str, metric: str, value: float, metadata: dict[str, Any] | None = ...) -> Coroutine[Any, Any, Any]
observability/pymdp_integration.py:29: error: Function is missing a return type
annotation  [no-untyped-def]
        async def record_system_metric(
        ^
observability/pymdp_integration.py:29: error: All conditional function variants
must have identical signatures  [misc]
        async def record_system_metric(
        ^
observability/pymdp_integration.py:29: note: Original:
observability/pymdp_integration.py:29: note:     def record_system_metric(metric_type: str, value: float, metadata: dict[str, Any] | None = ...) -> Coroutine[Any, Any, None]
observability/pymdp_integration.py:29: note: Redefinition:
observability/pymdp_integration.py:29: note:     def record_system_metric(metric: str, value: float, metadata: dict[str, Any] | None = ...) -> Coroutine[Any, Any, Any]
observability/pymdp_integration.py:38: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
observability/pymdp_integration.py:38: note: Use "-> None" if function does not return a value
observability/pymdp_integration.py:49: error: Function is missing a return type
annotation  [no-untyped-def]
        def monitor_inference_performance(self, agent_id: str):
        ^
observability/pymdp_integration.py:52: error: Function is missing a type
annotation  [no-untyped-def]
            def decorator(inference_func):
            ^
observability/pymdp_integration.py:54: error: Function is missing a type
annotation  [no-untyped-def]
                async def wrapper(*args, **kwargs):
                ^
observability/pymdp_integration.py:120: error: Function is missing a return
type annotation  [no-untyped-def]
        async def record_inference_metrics(
        ^
observability/pymdp_integration.py:151: error: Missing type parameters for
generic type "Dict"  [type-arg]
            beliefs_before: Dict,
                            ^
observability/pymdp_integration.py:152: error: Missing type parameters for
generic type "Dict"  [type-arg]
            beliefs_after: Dict,
                           ^
observability/pymdp_integration.py:234: error: Missing type parameters for
generic type "Dict"  [type-arg]
            self, beliefs_before: Dict, beliefs_after: Dict
                                  ^
observability/pymdp_integration.py:262: error: Missing type parameters for
generic type "Dict"  [type-arg]
        def calculate_belief_entropy(self, beliefs: Dict) -> Optional[floa...
                                                    ^
observability/pymdp_integration.py:277: error: Incompatible types in assignment
(expression has type "float", variable has type "int")  [assignment]
                        total_values += prob
                        ^~~~~~~~~~~~~~~~~~~~
observability/pymdp_integration.py:468: error: Call to untyped function
"PyMDPObservabilityIntegrator" in typed context  [no-untyped-call]
    pymdp_observer = PyMDPObservabilityIntegrator()
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/pymdp_integration.py:478: error: Missing type parameters for
generic type "Dict"  [type-arg]
        beliefs_before: Dict,
                        ^
observability/pymdp_integration.py:479: error: Missing type parameters for
generic type "Dict"  [type-arg]
        beliefs_after: Dict,
                       ^
observability/prometheus_metrics.py:279: error: Function is missing a return
type annotation  [no-untyped-def]
        def __init__(self):
        ^
observability/prometheus_metrics.py:279: note: Use "-> None" if function does not return a value
observability/prometheus_metrics.py:286: error: Call to untyped function
"_initialize_build_info" in typed context  [no-untyped-call]
            self._initialize_build_info()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/prometheus_metrics.py:290: error: Function is missing a return
type annotation  [no-untyped-def]
        def _initialize_build_info(self):
        ^
observability/prometheus_metrics.py:290: note: Use "-> None" if function does not return a value
observability/prometheus_metrics.py:318: error: Function is missing a return
type annotation  [no-untyped-def]
        async def start_collection(self):
        ^
observability/prometheus_metrics.py:318: note: Use "-> None" if function does not return a value
observability/prometheus_metrics.py:325: error: Call to untyped function
"_collection_loop" in typed context  [no-untyped-call]
    ...      self.collection_task = asyncio.create_task(self._collection_loop...
                                                        ^~~~~~~~~~~~~~~~~~~~~~~
observability/prometheus_metrics.py:328: error: Function is missing a return
type annotation  [no-untyped-def]
        async def stop_collection(self):
        ^
observability/prometheus_metrics.py:328: note: Use "-> None" if function does not return a value
observability/prometheus_metrics.py:339: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _collection_loop(self):
        ^
observability/prometheus_metrics.py:339: note: Use "-> None" if function does not return a value
observability/prometheus_metrics.py:343: error: Call to untyped function
"_collect_metrics" in typed context  [no-untyped-call]
                    await self._collect_metrics()
                          ^~~~~~~~~~~~~~~~~~~~~~~
observability/prometheus_metrics.py:351: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _collect_metrics(self):
        ^
observability/prometheus_metrics.py:351: note: Use "-> None" if function does not return a value
observability/prometheus_metrics.py:382: error: Call to untyped function
"_collect_agent_metrics" in typed context  [no-untyped-call]
                await self._collect_agent_metrics()
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/prometheus_metrics.py:385: error: Call to untyped function
"_collect_system_resources" in typed context  [no-untyped-call]
                await self._collect_system_resources()
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/prometheus_metrics.py:393: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _collect_agent_metrics(self):
        ^
observability/prometheus_metrics.py:393: note: Use "-> None" if function does not return a value
observability/prometheus_metrics.py:443: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _collect_system_resources(self):
        ^
observability/prometheus_metrics.py:443: note: Use "-> None" if function does not return a value
observability/prometheus_metrics.py:516: error: Function is missing a return
type annotation  [no-untyped-def]
    def record_agent_coordination_request(
    ^
observability/prometheus_metrics.py:525: error: Function is missing a return
type annotation  [no-untyped-def]
    def record_agent_coordination_error(
    ^
observability/prometheus_metrics.py:534: error: Function is missing a return
type annotation  [no-untyped-def]
    def record_agent_coordination_duration(
    ^
observability/prometheus_metrics.py:543: error: Function is missing a return
type annotation  [no-untyped-def]
    def record_belief_state_update(agent_id: str, update_type: str, succes...
    ^
observability/prometheus_metrics.py:552: error: Function is missing a return
type annotation  [no-untyped-def]
    def record_belief_convergence_time(
    ^
observability/prometheus_metrics.py:561: error: Function is missing a return
type annotation  [no-untyped-def]
    def update_belief_accuracy_ratio(agent_id: str, accuracy_ratio: float)...
    ^
observability/prometheus_metrics.py:566: error: Function is missing a return
type annotation  [no-untyped-def]
    def update_belief_free_energy(agent_id: str, free_energy: float):
    ^
observability/prometheus_metrics.py:571: error: Function is missing a return
type annotation  [no-untyped-def]
    def record_agent_inference_duration(
    ^
observability/prometheus_metrics.py:580: error: Function is missing a return
type annotation  [no-untyped-def]
    def record_agent_step(agent_id: str, step_type: str, success: bool):
    ^
observability/prometheus_metrics.py:589: error: Function is missing a return
type annotation  [no-untyped-def]
    def record_agent_error(agent_id: str, error_type: str, severity: str):
    ^
observability/prometheus_metrics.py:596: error: Function is missing a return
type annotation  [no-untyped-def]
    def record_business_inference_operation(operation_type: str, success: ...
    ^
observability/prometheus_metrics.py:603: error: Function is missing a return
type annotation  [no-untyped-def]
    def record_user_interaction(interaction_type: str, outcome: str):
    ^
observability/prometheus_metrics.py:610: error: Function is missing a return
type annotation  [no-untyped-def]
    def update_response_quality_score(response_type: str, score: float):
    ^
observability/prometheus_metrics.py:617: error: Function is missing a return
type annotation  [no-untyped-def]
    def record_authentication_attempt(method: str, outcome: str):
    ^
observability/prometheus_metrics.py:624: error: Function is missing a return
type annotation  [no-untyped-def]
    def record_security_anomaly(anomaly_type: str, severity: str):
    ^
observability/prometheus_metrics.py:631: error: Function is missing a return
type annotation  [no-untyped-def]
    def record_access_violation(violation_type: str, resource: str):
    ^
observability/prometheus_metrics.py:642: error: Call to untyped function
"PrometheusMetricsCollector" in typed context  [no-untyped-call]
    prometheus_collector = PrometheusMetricsCollector()
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/prometheus_metrics.py:645: error: Function is missing a return
type annotation  [no-untyped-def]
    async def start_prometheus_metrics_collection():
    ^
observability/prometheus_metrics.py:645: note: Use "-> None" if function does not return a value
observability/prometheus_metrics.py:647: error: Call to untyped function
"start_collection" in typed context  [no-untyped-call]
        await prometheus_collector.start_collection()
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/prometheus_metrics.py:650: error: Function is missing a return
type annotation  [no-untyped-def]
    async def stop_prometheus_metrics_collection():
    ^
observability/prometheus_metrics.py:650: note: Use "-> None" if function does not return a value
observability/prometheus_metrics.py:652: error: Call to untyped function
"stop_collection" in typed context  [no-untyped-call]
        await prometheus_collector.stop_collection()
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/monitoring_dashboard.py:78: error: Need type annotation for
"metric_history"  [var-annotated]
            self.metric_history = defaultdict(
            ^~~~~~~~~~~~~~~~~~~
observability/monitoring_dashboard.py:81: error: Need type annotation for
"event_history"  [var-annotated]
            self.event_history = deque(maxlen=100)
                                 ^~~~~~~~~~~~~~~~~
observability/monitoring_dashboard.py:82: error: Need type annotation for
"alert_history"  [var-annotated]
            self.alert_history = deque(maxlen=50)
                                 ^~~~~~~~~~~~~~~~
observability/monitoring_dashboard.py:96: error: Function is missing a return
type annotation  [no-untyped-def]
        async def start(self):
        ^
observability/monitoring_dashboard.py:96: note: Use "-> None" if function does not return a value
observability/monitoring_dashboard.py:102: error: Incompatible types in
assignment (expression has type "Task[Any]", variable has type "None")
[assignment]
            self.update_task = asyncio.create_task(self._update_loop())
                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/monitoring_dashboard.py:102: error: Call to untyped function
"_update_loop" in typed context  [no-untyped-call]
            self.update_task = asyncio.create_task(self._update_loop())
                                                   ^~~~~~~~~~~~~~~~~~~
observability/monitoring_dashboard.py:105: error: Function is missing a return
type annotation  [no-untyped-def]
        async def stop(self):
        ^
observability/monitoring_dashboard.py:105: note: Use "-> None" if function does not return a value
observability/monitoring_dashboard.py:116: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _update_loop(self):
        ^
observability/monitoring_dashboard.py:116: note: Use "-> None" if function does not return a value
observability/monitoring_dashboard.py:120: error: Call to untyped function
"_update_dashboard" in typed context  [no-untyped-call]
                    await self._update_dashboard()
                          ^~~~~~~~~~~~~~~~~~~~~~~~
observability/monitoring_dashboard.py:128: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _update_dashboard(self):
        ^
observability/monitoring_dashboard.py:128: note: Use "-> None" if function does not return a value
observability/monitoring_dashboard.py:150: error: Incompatible types in
assignment (expression has type "SystemDashboard", variable has type "None")
[assignment]
            self.current_dashboard = SystemDashboard(
                                     ^
observability/monitoring_dashboard.py:301: error: Need type annotation for
"time_series" (hint: "time_series: dict[<type>, <type>] = ...")  [var-annotated]
                    time_series = {}
                    ^~~~~~~~~~~
observability/monitoring_dashboard.py:358: error: "object" has no attribute
"get"  [attr-defined]
                            "threshold": self.alert_thresholds.get(
                                         ^
observability/monitoring_dashboard.py:372: error: "object" has no attribute
"get"  [attr-defined]
                            "threshold": self.alert_thresholds.get(
                                         ^
observability/monitoring_dashboard.py:421: error: "object" has no attribute
"get"  [attr-defined]
            if value >= thresholds.get("critical", float("inf")):
                        ^~~~~~~~~~~~~~
observability/monitoring_dashboard.py:423: error: "object" has no attribute
"get"  [attr-defined]
            elif value >= thresholds.get("warning", float("inf")):
                          ^~~~~~~~~~~~~~
observability/monitoring_dashboard.py:428: error: Function is missing a return
type annotation  [no-untyped-def]
        def record_event(self, event_type: str, data: Dict[str, Any]):
        ^
observability/monitoring_dashboard.py:537: error: Function is missing a return
type annotation  [no-untyped-def]
    async def start_monitoring_dashboard():
    ^
observability/monitoring_dashboard.py:537: note: Use "-> None" if function does not return a value
observability/monitoring_dashboard.py:539: error: Call to untyped function
"start" in typed context  [no-untyped-call]
        await monitoring_dashboard.start()
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/monitoring_dashboard.py:542: error: Function is missing a return
type annotation  [no-untyped-def]
    async def stop_monitoring_dashboard():
    ^
observability/monitoring_dashboard.py:542: note: Use "-> None" if function does not return a value
observability/monitoring_dashboard.py:544: error: Call to untyped function
"stop" in typed context  [no-untyped-call]
        await monitoring_dashboard.stop()
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/monitoring_dashboard.py:570: error: Function is missing a return
type annotation  [no-untyped-def]
    def record_dashboard_event(event_type: str, data: Dict[str, Any]):
    ^
observability/agent_metrics_integration.py:23: error: Missing type parameters
for generic type "Callable"  [type-arg]
    def measure_inference_time(agent_method: Callable) -> Callable:
                                             ^
observability/agent_metrics_integration.py:40: error: Function is missing a
type annotation  [no-untyped-def]
        def sync_wrapper(self, *args, **kwargs):
        ^
observability/agent_metrics_integration.py:87: error: Function is missing a
type annotation  [no-untyped-def]
        async def async_wrapper(self, *args, **kwargs):
        ^
observability/agent_metrics_integration.py:128: error: Missing type parameters
for generic type "Callable"  [type-arg]
    def measure_belief_update(agent_method: Callable) -> Callable:
                                            ^
observability/agent_metrics_integration.py:139: error: Function is missing a
type annotation  [no-untyped-def]
        def wrapper(self, *args, **kwargs):
        ^
observability/agent_metrics_integration.py:189: error: Missing type parameters
for generic type "Callable"  [type-arg]
    def measure_agent_step(agent_method: Callable) -> Callable:
                                         ^
observability/agent_metrics_integration.py:200: error: Function is missing a
type annotation  [no-untyped-def]
        def wrapper(self, *args, **kwargs):
        ^
observability/agent_metrics_integration.py:244: error: Function is missing a
type annotation  [no-untyped-def]
        def __enter__(self):
        ^
observability/agent_metrics_integration.py:245: error: Incompatible types in
assignment (expression has type "float", variable has type "None")  [assignment]
            self.start_time = time.time()
                              ^~~~~~~~~~~
observability/agent_metrics_integration.py:248: error: Function is missing a
type annotation  [no-untyped-def]
        def __exit__(self, exc_type, exc_val, exc_tb):
        ^
observability/agent_metrics_integration.py:250: error: Unsupported operand
types for - ("float" and "None")  [operator]
            execution_time_ms = (time.time() - self.start_time) * 1000
                                               ^~~~~~~~~~~~~~~
observability/agent_metrics_integration.py:255: error: Incompatible types in
assignment (expression has type "str", variable has type "None")  [assignment]
                self.error = str(exc_val)
                             ^~~~~~~~~~~~
observability/agent_metrics_integration.py:298: error: Function is missing a
type annotation  [no-untyped-def]
    def integrate_metrics_with_agent(agent_class):
    ^
observability/agent_metrics_integration.py:335: error: Function is missing a
return type annotation  [no-untyped-def]
    async def record_custom_agent_metric(
    ^
observability/agent_metrics_integration.py:352: error: Unexpected keyword
argument "metric" for "record_agent_metric"  [call-arg]
            await record_agent_metric(
                  ^
api/v1/monitoring.py:460: note: "record_agent_metric" defined here
observability/agent_metrics_integration.py:362: error: Function is missing a
type annotation for one or more arguments  [no-untyped-def]
    def get_metrics_summary(agent) -> Dict[str, Any]:
    ^
database/enhanced_connection_manager.py:66: error: Function is missing a return
type annotation  [no-untyped-def]
        async def initialize(self):
        ^
database/enhanced_connection_manager.py:66: note: Use "-> None" if function does not return a value
database/enhanced_connection_manager.py:68: error: Call to untyped function
"initialize" in typed context  [no-untyped-call]
            await self.pool_manager.initialize()
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
database/enhanced_connection_manager.py:164: error: Function is missing a
return type annotation  [no-untyped-def]
        async def get_connection(self):
        ^
database/enhanced_connection_manager.py:176: error: Function is missing a
return type annotation  [no-untyped-def]
        async def get_async_session(self):
        ^
database/enhanced_connection_manager.py:214: error: Function is missing a
return type annotation  [no-untyped-def]
        def close_sync_session(self, session: Session):
        ^
database/enhanced_connection_manager.py:274: error: Function is missing a
return type annotation  [no-untyped-def]
        async def close(self):
        ^
database/enhanced_connection_manager.py:274: note: Use "-> None" if function does not return a value
database/enhanced_connection_manager.py:288: error: Call to untyped function
"close" in typed context  [no-untyped-call]
                await self.pool_manager.close()
                      ^~~~~~~~~~~~~~~~~~~~~~~~~
database/enhanced_connection_manager.py:321: error: Function is missing a
return type annotation  [no-untyped-def]
    async def initialize_global_db_manager(database_url: Optional[str] = N...
    ^
database/enhanced_connection_manager.py:324: error: Call to untyped function
"initialize" in typed context  [no-untyped-call]
        await db_manager.initialize()
              ^~~~~~~~~~~~~~~~~~~~~~~
database/enhanced_connection_manager.py:328: error: Function is missing a
return type annotation  [no-untyped-def]
    async def close_global_db_manager():
    ^
database/enhanced_connection_manager.py:328: note: Use "-> None" if function does not return a value
database/enhanced_connection_manager.py:333: error: Call to untyped function
"close" in typed context  [no-untyped-call]
            await _global_db_manager.close()
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~
database/enhanced_connection_manager.py:339: error: Function is missing a
return type annotation  [no-untyped-def]
    async def get_db_session():
    ^
database/enhanced_connection_manager.py:347: error: Function is missing a
return type annotation  [no-untyped-def]
    async def get_db_connection():
    ^
auth/security_implementation.py:333: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
auth/security_implementation.py:333: note: Use "-> None" if function does not return a value
auth/security_implementation.py:350: error: Function is missing a return type
annotation  [no-untyped-def]
        def invalidate_csrf_token(self, session_id: str):
        ^
auth/security_implementation.py:359: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
auth/security_implementation.py:359: note: Use "-> None" if function does not return a value
auth/security_implementation.py:362: error: Call to untyped function
"CSRFProtection" in typed context  [no-untyped-call]
            self.csrf_protection = CSRFProtection()
                                   ^~~~~~~~~~~~~~~~
auth/security_implementation.py:498: error: Function is missing a return type
annotation  [no-untyped-def]
        def logout(self, token: str, user_id: Optional[str] = None):
        ^
auth/security_implementation.py:511: error: Function is missing a return type
annotation  [no-untyped-def]
        def set_token_cookie(
        ^
auth/security_implementation.py:525: error: Function is missing a return type
annotation  [no-untyped-def]
        def set_csrf_cookie(
        ^
auth/security_implementation.py:539: error: Function is missing a return type
annotation  [no-untyped-def]
        def cleanup_blacklist(self):
        ^
auth/security_implementation.py:539: note: Use "-> None" if function does not return a value
auth/security_implementation.py:547: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
auth/security_implementation.py:547: note: Use "-> None" if function does not return a value
auth/security_implementation.py:577: error: Function is missing a return type
annotation  [no-untyped-def]
        def clear_old_requests(self):
        ^
auth/security_implementation.py:577: note: Use "-> None" if function does not return a value
auth/security_implementation.py:593: error: Call to untyped function
"AuthenticationManager" in typed context  [no-untyped-call]
    auth_manager = AuthenticationManager()
                   ^~~~~~~~~~~~~~~~~~~~~~~
auth/security_implementation.py:594: error: Call to untyped function
"RateLimiter" in typed context  [no-untyped-call]
    rate_limiter = RateLimiter()
                   ^~~~~~~~~~~~~
auth/security_implementation.py:606: error: Function is missing a return type
annotation  [no-untyped-def]
    def rate_limit(max_requests: int = 100, window_minutes: int = 1):
    ^
auth/security_implementation.py:609: error: Function is missing a type
annotation  [no-untyped-def]
        def decorator(func):
        ^
auth/security_implementation.py:611: error: Function is missing a return type
annotation  [no-untyped-def]
            async def wrapper(request: Request, *args, **kwargs):
            ^
auth/security_implementation.py:611: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
            async def wrapper(request: Request, *args, **kwargs):
            ^
auth/security_implementation.py:669: error: Function is missing a return type
annotation  [no-untyped-def]
    def require_permission(permission: Permission):
    ^
auth/security_implementation.py:672: error: Function is missing a type
annotation  [no-untyped-def]
        def decorator(func):
        ^
auth/security_implementation.py:674: error: Function is missing a type
annotation  [no-untyped-def]
            async def wrapper(*args, **kwargs):
            ^
auth/security_implementation.py:707: error: Function is missing a return type
annotation  [no-untyped-def]
    def require_role(role: UserRole):
    ^
auth/security_implementation.py:710: error: Function is missing a type
annotation  [no-untyped-def]
        def decorator(func):
        ^
auth/security_implementation.py:712: error: Function is missing a type
annotation  [no-untyped-def]
            async def wrapper(*args, **kwargs):
            ^
auth/security_implementation.py:747: error: Function is missing a type
annotation  [no-untyped-def]
    def secure_database_query(query_func):
    ^
auth/security_implementation.py:751: error: Function is missing a type
annotation  [no-untyped-def]
        def wrapper(*args, **kwargs):
        ^
auth/security_implementation.py:782: error: Function is missing a type
annotation  [no-untyped-def]
    def require_csrf_token(func):
    ^
auth/security_implementation.py:786: error: Function is missing a return type
annotation  [no-untyped-def]
        async def wrapper(request: Request, *args, **kwargs):
        ^
auth/security_implementation.py:786: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
        async def wrapper(request: Request, *args, **kwargs):
        ^
auth/security_implementation.py:854: error: Function is missing a type
annotation  [no-untyped-def]
        def __init__(self, app):
        ^
auth/security_implementation.py:862: error: Function is missing a type
annotation  [no-untyped-def]
        async def __call__(self, scope, receive, send):
        ^
auth/security_implementation.py:886: error: Function is missing a type
annotation  [no-untyped-def]
                async def send_wrapper(message):
                ^
auth/comprehensive_audit_logger.py:25: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
auth/comprehensive_audit_logger.py:25: note: Use "-> None" if function does not return a value
auth/comprehensive_audit_logger.py:246: error: "type[SecurityEventType]" has no
attribute "TOKEN_REVOKED"  [attr-defined]
                "session_invalidated": SecurityEventType.TOKEN_REVOKED,
                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
auth/comprehensive_audit_logger.py:532: error: Need type annotation for
"user_decisions" (hint: "user_decisions: dict[<type>, <type>] = ...")
[var-annotated]
            user_decisions = {}
            ^~~~~~~~~~~~~~
auth/comprehensive_audit_logger.py:674: error: Unsupported operand types for +
("None" and "int")  [operator]
                    user_activity[user_id]["total"] += 1
                    ^
auth/comprehensive_audit_logger.py:674: note: Left operand is of type "int | Any | None"
auth/comprehensive_audit_logger.py:676: error: Unsupported operand types for +
("None" and "int")  [operator]
                        user_activity[user_id]["allowed"] += 1
                        ^
auth/comprehensive_audit_logger.py:676: note: Left operand is of type "int | Any | None"
auth/comprehensive_audit_logger.py:678: error: Unsupported operand types for +
("None" and "int")  [operator]
                        user_activity[user_id]["denied"] += 1
                        ^
auth/comprehensive_audit_logger.py:678: note: Left operand is of type "int | Any | None"
auth/comprehensive_audit_logger.py:783: error: Call to untyped function
"AccessDecisionAuditor" in typed context  [no-untyped-call]
    comprehensive_auditor = AccessDecisionAuditor()
                            ^~~~~~~~~~~~~~~~~~~~~~~
api/middleware/security_monitoring.py:27: error: Missing type parameters for
generic type "Callable"  [type-arg]
            self, request: Request, call_next: Callable
                                               ^
api/middleware/security_monitoring.py:66: error: Returning Any from function
declared to return "Response"  [no-any-return]
                return response
                ^~~~~~~~~~~~~~~
api/middleware/security_headers.py:27: error: Missing type parameters for
generic type "Callable"  [type-arg]
        request: Request, call_next: Callable
                                     ^
api/middleware/security_headers.py:59: error: Returning Any from function
declared to return "Response"  [no-any-return]
        return response
        ^~~~~~~~~~~~~~~
api/middleware/ddos_protection.py:13: error: Unused "type: ignore" comment
[unused-ignore]
    import redis.asyncio as aioredis  # type: ignore[import-untyped]
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/middleware/ddos_protection.py:99: error: Missing type parameters for
generic type "Redis"  [type-arg]
        def __init__(self, redis_client: aioredis.Redis):
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/middleware/ddos_protection.py:341: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
        def __init__(self, app, redis_url: Optional[str] = None):
        ^
api/middleware/ddos_protection.py:350: error: Missing type parameters for
generic type "Redis"  [type-arg]
            self.redis_client: Optional[aioredis.Redis] = None
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/middleware/ddos_protection.py:352: error: Missing type parameters for
generic type "ConnectionPool"  [type-arg]
            self._connection_pool: Optional[aioredis.ConnectionPool] = Non...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/middleware/ddos_protection.py:354: error: Missing type parameters for
generic type "Redis"  [type-arg]
        async def _get_redis_client(self) -> Optional[aioredis.Redis]:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/middleware/ddos_protection.py:394: error: Missing type parameters for
generic type "Callable"  [type-arg]
            self, request: Request, call_next: Callable
                                               ^
api/middleware/ddos_protection.py:399: error: Returning Any from function
declared to return "Response"  [no-any-return]
                return await call_next(request)
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/middleware/ddos_protection.py:421: error: Returning Any from function
declared to return "Response"  [no-any-return]
            return response
            ^~~~~~~~~~~~~~~
api/middleware/ddos_protection.py:423: error: Function is missing a return type
annotation  [no-untyped-def]
        async def __aenter__(self):
        ^
api/middleware/ddos_protection.py:428: error: Function is missing a type
annotation  [no-untyped-def]
        async def __aexit__(self, exc_type, exc_val, exc_tb):
        ^
api/middleware/ddos_protection.py:437: error: Missing type parameters for
generic type "Redis"  [type-arg]
        def __init__(self, redis_client: aioredis.Redis):
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/middleware/ddos_protection.py:494: error: Function is missing a return type
annotation  [no-untyped-def]
        async def release_connection(self, ip: str):
        ^
websocket/auth_handler.py:28: error: Call to untyped function
"AuthenticationManager" in typed context  [no-untyped-call]
    auth_manager = AuthenticationManager()
                   ^~~~~~~~~~~~~~~~~~~~~~~
websocket/auth_handler.py:77: error: Missing type parameters for generic type
"Dict"  [type-arg]
        metadata: Dict = Field(default_factory=dict)
                  ^
websocket/auth_handler.py:90: error: Missing type parameters for generic type
"list"  [type-arg]
            self.rate_limiter: Dict[
                     ^
websocket/auth_handler.py:406: error: Missing type parameters for generic type
"Dict"  [type-arg]
        def get_connection_info(self, client_id: str) -> Optional[Dict]:
                                                                  ^
websocket/auth_handler.py:433: error: Missing type parameters for generic type
"Dict"  [type-arg]
    ...async def broadcast_to_user(self, user_id: str, message: Dict) -> int:
                                                                ^
websocket/auth_handler.py:471: error: Missing type parameters for generic type
"Dict"  [type-arg]
    ... def handle_token_refresh(client_id: str, refresh_token: str) -> Dict:
                                                                        ^
websocket/auth_handler.py:490: error: Function is missing a return type
annotation  [no-untyped-def]
    async def websocket_heartbeat_monitor():
    ^
websocket/auth_handler.py:490: note: Use "-> None" if function does not return a value
security/zero_trust/example_usage.py:37: error: Function is missing a return
type annotation  [no-untyped-def]
    async def demonstrate_zero_trust_setup():
    ^
security/zero_trust/example_usage.py:37: note: Use "-> None" if function does not return a value
security/zero_trust/example_usage.py:133: error: Incompatible types in
assignment (expression has type "ServicePolicy", variable has type
"CertificateRotationPolicy")  [assignment]
        for policy in service_policies:
        ^
security/zero_trust/example_usage.py:134: error: Argument 1 to
"add_service_policy" of "IdentityAwareProxy" has incompatible type
"CertificateRotationPolicy"; expected "ServicePolicy"  [arg-type]
            proxy.add_service_policy(policy)
                                     ^~~~~~
security/zero_trust/example_usage.py:136: error: "CertificateRotationPolicy"
has no attribute "source_service"  [attr-defined]
                f"   🛡️  Policy added: {policy.source_service} → {policy.t...
                                            ^~~~~~~~~~~~~~~~~~~~~~
security/zero_trust/example_usage.py:136: error: "CertificateRotationPolicy"
has no attribute "target_service"  [attr-defined]
    ...  🛡️  Policy added: {policy.source_service} → {policy.target_service}"
                                                            ^~~~~~~~~~~~~~~~~
security/zero_trust/example_usage.py:275: error: Incompatible types in
assignment (expression has type "TrafficPolicy", variable has type
"CertificateRotationPolicy")  [assignment]
        for policy in traffic_policies:
        ^
security/zero_trust/example_usage.py:276: error: Argument 1 to
"add_traffic_policy" of "ServiceMeshConfig" has incompatible type
"CertificateRotationPolicy"; expected "TrafficPolicy"  [arg-type]
            mesh_config.add_traffic_policy(policy)
                                           ^~~~~~
security/zero_trust/example_usage.py:277: error: "CertificateRotationPolicy"
has no attribute "name"  [attr-defined]
            print(f"   🌐 Traffic policy added: {policy.name}")
                                                  ^~~~~~~~~~~~
security/zero_trust/example_usage.py:371: error: Function is missing a return
type annotation  [no-untyped-def]
    def main():
    ^
security/zero_trust/example_usage.py:371: note: Use "-> None" if function does not return a value
security/zero_trust/example_usage.py:374: error: Call to untyped function
"demonstrate_zero_trust_setup" in typed context  [no-untyped-call]
            asyncio.run(demonstrate_zero_trust_setup())
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/zero_trust/example_usage.py:385: error: Call to untyped function
"main" in typed context  [no-untyped-call]
        main()
        ^~~~~~
observability/security_monitoring.py:105: error: Function is missing a return
type annotation  [no-untyped-def]
        def __init__(self):
        ^
observability/security_monitoring.py:105: note: Use "-> None" if function does not return a value
observability/security_monitoring.py:108: error: Missing type parameters for
generic type "deque"  [type-arg]
            self.security_events: deque = deque(maxlen=10000)
                                  ^
observability/security_monitoring.py:145: error: Call to untyped function
"_initialize_threat_indicators" in typed context  [no-untyped-call]
            self._initialize_threat_indicators()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/security_monitoring.py:148: error: Missing type parameters for
generic type "Task"  [type-arg]
            self.monitoring_task: Optional[asyncio.Task] = None
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/security_monitoring.py:149: error: Missing type parameters for
generic type "Task"  [type-arg]
            self.cleanup_task: Optional[asyncio.Task] = None
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/security_monitoring.py:154: error: Function is missing a return
type annotation  [no-untyped-def]
        def _initialize_threat_indicators(self):
        ^
observability/security_monitoring.py:154: note: Use "-> None" if function does not return a value
observability/security_monitoring.py:199: error: Function is missing a return
type annotation  [no-untyped-def]
        async def start_monitoring(self):
        ^
observability/security_monitoring.py:199: note: Use "-> None" if function does not return a value
observability/security_monitoring.py:205: error: Call to untyped function
"_monitoring_loop" in typed context  [no-untyped-call]
    ...      self.monitoring_task = asyncio.create_task(self._monitoring_loop...
                                                        ^~~~~~~~~~~~~~~~~~~~~~~
observability/security_monitoring.py:206: error: Call to untyped function
"_cleanup_loop" in typed context  [no-untyped-call]
            self.cleanup_task = asyncio.create_task(self._cleanup_loop())
                                                    ^~~~~~~~~~~~~~~~~~~~
observability/security_monitoring.py:210: error: Function is missing a return
type annotation  [no-untyped-def]
        async def stop_monitoring(self):
        ^
observability/security_monitoring.py:210: note: Use "-> None" if function does not return a value
observability/security_monitoring.py:230: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _monitoring_loop(self):
        ^
observability/security_monitoring.py:230: note: Use "-> None" if function does not return a value
observability/security_monitoring.py:234: error: Call to untyped function
"_analyze_security_events" in typed context  [no-untyped-call]
                    await self._analyze_security_events()
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/security_monitoring.py:235: error: Call to untyped function
"_detect_threats" in typed context  [no-untyped-call]
                    await self._detect_threats()
                          ^~~~~~~~~~~~~~~~~~~~~~
observability/security_monitoring.py:236: error: Call to untyped function
"_update_metrics" in typed context  [no-untyped-call]
                    await self._update_metrics()
                          ^~~~~~~~~~~~~~~~~~~~~~
observability/security_monitoring.py:244: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _cleanup_loop(self):
        ^
observability/security_monitoring.py:244: note: Use "-> None" if function does not return a value
observability/security_monitoring.py:248: error: Call to untyped function
"_cleanup_old_data" in typed context  [no-untyped-call]
                    await self._cleanup_old_data()
                          ^~~~~~~~~~~~~~~~~~~~~~~~
observability/security_monitoring.py:256: error: Function is missing a return
type annotation  [no-untyped-def]
        async def process_security_event(self, event: Dict[str, Any]):
        ^
observability/security_monitoring.py:287: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _check_for_threats(self, event: Dict[str, Any]):
        ^
observability/security_monitoring.py:298: error: Argument 2 to
"_check_brute_force" of "SecurityMonitoringSystem" has incompatible type
"Any | None"; expected "str"  [arg-type]
                await self._check_brute_force(source_ip, user_id, event)
                                                         ^~~~~~~
observability/security_monitoring.py:340: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _check_brute_force(
        ^
observability/security_monitoring.py:372: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _check_ddos(self, source_ip: str, event: Dict[str, Any])...
        ^
observability/security_monitoring.py:412: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _generate_alert(
        ^
observability/security_monitoring.py:473: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _send_alert_notification(self, alert: SecurityAlert):
        ^
observability/security_monitoring.py:487: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _analyze_security_events(self):
        ^
observability/security_monitoring.py:487: note: Use "-> None" if function does not return a value
observability/security_monitoring.py:496: error: Need type annotation for
"event_types"  [var-annotated]
            event_types = defaultdict(int)
            ^~~~~~~~~~~
observability/security_monitoring.py:497: error: Need type annotation for
"source_ips"  [var-annotated]
            source_ips = defaultdict(int)
            ^~~~~~~~~~
observability/security_monitoring.py:498: error: Need type annotation for
"error_patterns"  [var-annotated]
            error_patterns = defaultdict(int)
            ^~~~~~~~~~~~~~
observability/security_monitoring.py:508: error: Call to untyped function
"_detect_anomalies" in typed context  [no-untyped-call]
            await self._detect_anomalies(event_types, source_ips, error_pa...
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
observability/security_monitoring.py:510: error: Function is missing a type
annotation  [no-untyped-def]
        async def _detect_anomalies(self, event_types, source_ips, error_p...
        ^
observability/security_monitoring.py:539: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _detect_threats(self):
        ^
observability/security_monitoring.py:539: note: Use "-> None" if function does not return a value
observability/security_monitoring.py:542: error: Call to untyped function
"_update_threat_indicators" in typed context  [no-untyped-call]
            await self._update_threat_indicators()
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/security_monitoring.py:545: error: Call to untyped function
"_check_behavioral_anomalies" in typed context  [no-untyped-call]
            await self._check_behavioral_anomalies()
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/security_monitoring.py:548: error: Call to untyped function
"_check_privilege_escalation" in typed context  [no-untyped-call]
            await self._check_privilege_escalation()
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/security_monitoring.py:550: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _update_threat_indicators(self):
        ^
observability/security_monitoring.py:550: note: Use "-> None" if function does not return a value
observability/security_monitoring.py:557: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _check_behavioral_anomalies(self):
        ^
observability/security_monitoring.py:557: note: Use "-> None" if function does not return a value
observability/security_monitoring.py:578: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _check_privilege_escalation(self):
        ^
observability/security_monitoring.py:578: note: Use "-> None" if function does not return a value
observability/security_monitoring.py:584: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _update_metrics(self):
        ^
observability/security_monitoring.py:584: note: Use "-> None" if function does not return a value
observability/security_monitoring.py:588: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _cleanup_old_data(self):
        ^
observability/security_monitoring.py:588: note: Use "-> None" if function does not return a value
observability/security_monitoring.py:626: error: Need type annotation for
"top_attack_types"  [var-annotated]
            top_attack_types = defaultdict(int)
            ^~~~~~~~~~~~~~~~
observability/security_monitoring.py:631: error: Need type annotation for
"top_source_ips"  [var-annotated]
            top_source_ips = defaultdict(int)
            ^~~~~~~~~~~~~~
observability/security_monitoring.py:636: error: Need type annotation for
"threat_level_distribution"  [var-annotated]
            threat_level_distribution = defaultdict(int)
            ^~~~~~~~~~~~~~~~~~~~~~~~~
observability/security_monitoring.py:659: error: Argument 1 to "dict" has
incompatible type "defaultdict[AttackType, Any]"; expected
"SupportsKeysAndGetItem[str, int]"  [arg-type]
                top_attack_types=dict(top_attack_types),
                                      ^~~~~~~~~~~~~~~~
observability/security_monitoring.py:661: error: Argument 1 to "dict" has
incompatible type "defaultdict[ThreatLevel, Any]"; expected
"SupportsKeysAndGetItem[str, int]"  [arg-type]
                threat_level_distribution=dict(threat_level_distribution),
                                               ^~~~~~~~~~~~~~~~~~~~~~~~~
observability/security_monitoring.py:728: error: Call to untyped function
"SecurityMonitoringSystem" in typed context  [no-untyped-call]
    security_monitor = SecurityMonitoringSystem()
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~
observability/security_monitoring.py:731: error: Function is missing a return
type annotation  [no-untyped-def]
    async def start_security_monitoring():
    ^
observability/security_monitoring.py:731: note: Use "-> None" if function does not return a value
observability/security_monitoring.py:733: error: Call to untyped function
"start_monitoring" in typed context  [no-untyped-call]
        await security_monitor.start_monitoring()
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/security_monitoring.py:736: error: Function is missing a return
type annotation  [no-untyped-def]
    async def stop_security_monitoring():
    ^
observability/security_monitoring.py:736: note: Use "-> None" if function does not return a value
observability/security_monitoring.py:738: error: Call to untyped function
"stop_monitoring" in typed context  [no-untyped-call]
        await security_monitor.stop_monitoring()
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/metrics_exporter.py:71: error: Need type annotation for
"metrics_buffer" (hint: "metrics_buffer: list[<type>] = ...")  [var-annotated]
            self.metrics_buffer = []
            ^~~~~~~~~~~~~~~~~~~
observability/metrics_exporter.py:76: error: Call to untyped function
"_setup_custom_metrics" in typed context  [no-untyped-call]
            self._setup_custom_metrics()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/metrics_exporter.py:80: error: Function is missing a return type
annotation  [no-untyped-def]
        def _setup_custom_metrics(self):
        ^
observability/metrics_exporter.py:80: note: Use "-> None" if function does not return a value
observability/metrics_exporter.py:148: error: Function is missing a return type
annotation  [no-untyped-def]
        async def start(self):
        ^
observability/metrics_exporter.py:148: note: Use "-> None" if function does not return a value
observability/metrics_exporter.py:155: error: Incompatible types in assignment
(expression has type "Task[Any]", variable has type "None")  [assignment]
            self.export_task = asyncio.create_task(self._export_loop())
                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/metrics_exporter.py:155: error: Call to untyped function
"_export_loop" in typed context  [no-untyped-call]
            self.export_task = asyncio.create_task(self._export_loop())
                                                   ^~~~~~~~~~~~~~~~~~~
observability/metrics_exporter.py:159: error: Function is missing a return type
annotation  [no-untyped-def]
        async def stop(self):
        ^
observability/metrics_exporter.py:159: note: Use "-> None" if function does not return a value
observability/metrics_exporter.py:176: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _export_loop(self):
        ^
observability/metrics_exporter.py:176: note: Use "-> None" if function does not return a value
observability/metrics_exporter.py:180: error: Call to untyped function
"_export_metrics" in typed context  [no-untyped-call]
                    await self._export_metrics()
                          ^~~~~~~~~~~~~~~~~~~~~~
observability/metrics_exporter.py:188: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _export_metrics(self):
        ^
observability/metrics_exporter.py:188: note: Use "-> None" if function does not return a value
observability/metrics_exporter.py:192: error: Call to untyped function
"_update_system_health_indicators" in typed context  [no-untyped-call]
                await self._update_system_health_indicators()
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/metrics_exporter.py:195: error: Call to untyped function
"_update_agent_resource_usage" in typed context  [no-untyped-call]
                await self._update_agent_resource_usage()
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/metrics_exporter.py:198: error: Call to untyped function
"_update_business_value_metrics" in typed context  [no-untyped-call]
                await self._update_business_value_metrics()
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/metrics_exporter.py:201: error: Call to untyped function
"_export_to_timeseries" in typed context  [no-untyped-call]
                await self._export_to_timeseries()
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/metrics_exporter.py:204: error: Call to untyped function
"_export_to_logs" in typed context  [no-untyped-call]
                await self._export_to_logs()
                      ^~~~~~~~~~~~~~~~~~~~~~
observability/metrics_exporter.py:212: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _update_system_health_indicators(self):
        ^
observability/metrics_exporter.py:212: note: Use "-> None" if function does not return a value
observability/metrics_exporter.py:263: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _update_agent_resource_usage(self):
        ^
observability/metrics_exporter.py:263: note: Use "-> None" if function does not return a value
observability/metrics_exporter.py:297: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _update_business_value_metrics(self):
        ^
observability/metrics_exporter.py:297: note: Use "-> None" if function does not return a value
observability/metrics_exporter.py:337: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _export_to_timeseries(self):
        ^
observability/metrics_exporter.py:337: note: Use "-> None" if function does not return a value
observability/metrics_exporter.py:353: error: "MetricsBuffer" has no attribute
"count"  [attr-defined]
                            buffer["inference_times"].count
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/metrics_exporter.py:366: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _export_to_logs(self):
        ^
observability/metrics_exporter.py:366: note: Use "-> None" if function does not return a value
observability/metrics_exporter.py:384: error: "RealTimePerformanceTracker" has
no attribute "get_average_inference_time"  [attr-defined]
    ...                       "average_inference_time": performance_tracker.g...
                                                        ^~~~~~~~~~~~~~~~~~~~~...
observability/metrics_exporter.py:396: error: Function is missing a return type
annotation  [no-untyped-def]
        def record_agent_lifecycle_event(
        ^
observability/metrics_exporter.py:406: error: Function is missing a return type
annotation  [no-untyped-def]
        def record_coalition_formation(
        ^
observability/metrics_exporter.py:414: error: Function is missing a return type
annotation  [no-untyped-def]
        def record_knowledge_graph_operation(
        ^
observability/metrics_exporter.py:422: error: Function is missing a return type
annotation  [no-untyped-def]
        def record_inference_performance(
        ^
observability/metrics_exporter.py:436: error: Function is missing a return type
annotation  [no-untyped-def]
        def record_custom_application_event(
        ^
observability/metrics_exporter.py:523: error: Function is missing a return type
annotation  [no-untyped-def]
    async def start_metrics_export(export_interval: float = 10.0):
    ^
observability/metrics_exporter.py:526: error: Call to untyped function "start"
in typed context  [no-untyped-call]
        await exporter.start()
              ^~~~~~~~~~~~~~~~
observability/metrics_exporter.py:530: error: Function is missing a return type
annotation  [no-untyped-def]
    async def stop_metrics_export():
    ^
observability/metrics_exporter.py:530: note: Use "-> None" if function does not return a value
observability/metrics_exporter.py:535: error: Call to untyped function "stop"
in typed context  [no-untyped-call]
            await _metrics_exporter.stop()
                  ^~~~~~~~~~~~~~~~~~~~~~~~
observability/metrics_exporter.py:540: error: Function is missing a return type
annotation  [no-untyped-def]
    async def integrate_with_prometheus_metrics():
    ^
observability/metrics_exporter.py:540: note: Use "-> None" if function does not return a value
observability/metrics_exporter.py:544: error: Call to untyped function
"start_collection" in typed context  [no-untyped-call]
            await prometheus_collector.start_collection()
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/metrics_exporter.py:557: error: Function is missing a return type
annotation  [no-untyped-def]
    def record_agent_startup(agent_id: str, success: bool):
    ^
observability/metrics_exporter.py:563: error: Function is missing a return type
annotation  [no-untyped-def]
    def record_agent_shutdown(agent_id: str, success: bool):
    ^
observability/metrics_exporter.py:569: error: Function is missing a return type
annotation  [no-untyped-def]
    def record_coalition_formed(
    ^
observability/metrics_exporter.py:577: error: Function is missing a return type
annotation  [no-untyped-def]
    def record_knowledge_graph_update(success: bool):
    ^
observability/metrics_exporter.py:583: error: Function is missing a return type
annotation  [no-untyped-def]
    def record_inference_operation(
    ^
observability/intelligent_alerting.py:79: error: Function is missing a return
type annotation  [no-untyped-def]
        def __post_init__(self):
        ^
observability/intelligent_alerting.py:79: note: Use "-> None" if function does not return a value
observability/intelligent_alerting.py:108: error: Function is missing a return
type annotation  [no-untyped-def]
        def __post_init__(self):
        ^
observability/intelligent_alerting.py:108: note: Use "-> None" if function does not return a value
observability/intelligent_alerting.py:159: error: Need type annotation for
"training_data" (hint: "training_data: list[<type>] = ...")  [var-annotated]
            self.training_data = []
            ^~~~~~~~~~~~~~~~~~
observability/intelligent_alerting.py:162: error: Function is missing a return
type annotation  [no-untyped-def]
        def add_training_data(self, value: float, timestamp: datetime):
        ^
observability/intelligent_alerting.py:180: error: Function is missing a return
type annotation  [no-untyped-def]
        def train(self):
        ^
observability/intelligent_alerting.py:197: error: Incompatible types in
assignment (expression has type "ndarray[Any, Any]", variable has type
"list[list[Any]]")  [assignment]
            features = np.array(features)
                       ^~~~~~~~~~~~~~~~~~
observability/intelligent_alerting.py:238: error: Need type annotation for
"metric_data" (hint: "metric_data: dict[<type>, <type>] = ...")  [var-annotated]
            self.metric_data = {}
            ^~~~~~~~~~~~~~~~
observability/intelligent_alerting.py:239: error: Need type annotation for
"thresholds" (hint: "thresholds: dict[<type>, <type>] = ...")  [var-annotated]
            self.thresholds = {}
            ^~~~~~~~~~~~~~~
observability/intelligent_alerting.py:241: error: Function is missing a return
type annotation  [no-untyped-def]
        def add_data_point(
        ^
observability/intelligent_alerting.py:303: error: Returning Any from function
declared to return "float | None"  [no-any-return]
            return self.thresholds.get(metric_name, {}).get(threshold_type...
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/intelligent_alerting.py:309: error: Function is missing a return
type annotation  [no-untyped-def]
        def __init__(self):
        ^
observability/intelligent_alerting.py:309: note: Use "-> None" if function does not return a value
observability/intelligent_alerting.py:315: error: Function is missing a return
type annotation  [no-untyped-def]
        def add_correlation_rule(self, rule: Dict[str, Any]):
        ^
observability/intelligent_alerting.py:396: error: Function is missing a return
type annotation  [no-untyped-def]
        def __init__(self):
        ^
observability/intelligent_alerting.py:396: note: Use "-> None" if function does not return a value
observability/intelligent_alerting.py:407: error: Call to untyped function
"AlertCorrelationEngine" in typed context  [no-untyped-call]
            self.correlation_engine = AlertCorrelationEngine()
                                      ^~~~~~~~~~~~~~~~~~~~~~~~
observability/intelligent_alerting.py:429: error: Call to untyped function
"_setup_default_rules" in typed context  [no-untyped-call]
            self._setup_default_rules()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/intelligent_alerting.py:433: error: Function is missing a return
type annotation  [no-untyped-def]
        def _setup_default_rules(self):
        ^
observability/intelligent_alerting.py:433: note: Use "-> None" if function does not return a value
observability/intelligent_alerting.py:437: error: Missing positional argument
"conditions" in call to "AlertRule"  [call-arg]
                AlertRule(
                ^
observability/intelligent_alerting.py:453: error: Missing positional argument
"conditions" in call to "AlertRule"  [call-arg]
                AlertRule(
                ^
observability/intelligent_alerting.py:470: error: Missing positional argument
"conditions" in call to "AlertRule"  [call-arg]
                AlertRule(
                ^
observability/intelligent_alerting.py:487: error: Missing positional argument
"conditions" in call to "AlertRule"  [call-arg]
                AlertRule(
                ^
observability/intelligent_alerting.py:502: error: Missing positional argument
"conditions" in call to "AlertRule"  [call-arg]
                AlertRule(
                ^
observability/intelligent_alerting.py:533: error: Function is missing a return
type annotation  [no-untyped-def]
        async def start(self):
        ^
observability/intelligent_alerting.py:533: note: Use "-> None" if function does not return a value
observability/intelligent_alerting.py:542: error: Call to untyped function
"_evaluation_loop" in typed context  [no-untyped-call]
    ...      self.evaluation_task = asyncio.create_task(self._evaluation_loop...
                                                        ^~~~~~~~~~~~~~~~~~~~~~~
observability/intelligent_alerting.py:545: error: Call to untyped function
"_training_loop" in typed context  [no-untyped-call]
            self.training_task = asyncio.create_task(self._training_loop()...
                                                     ^~~~~~~~~~~~~~~~~~~~~
observability/intelligent_alerting.py:549: error: Function is missing a return
type annotation  [no-untyped-def]
        async def stop(self):
        ^
observability/intelligent_alerting.py:549: note: Use "-> None" if function does not return a value
observability/intelligent_alerting.py:574: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _evaluation_loop(self):
        ^
observability/intelligent_alerting.py:574: note: Use "-> None" if function does not return a value
observability/intelligent_alerting.py:578: error: Call to untyped function
"_evaluate_all_rules" in typed context  [no-untyped-call]
                    await self._evaluate_all_rules()
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
observability/intelligent_alerting.py:586: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _training_loop(self):
        ^
observability/intelligent_alerting.py:586: note: Use "-> None" if function does not return a value
observability/intelligent_alerting.py:590: error: Call to untyped function
"_train_anomaly_detectors" in typed context  [no-untyped-call]
                    await self._train_anomaly_detectors()
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/intelligent_alerting.py:598: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _evaluate_all_rules(self):
        ^
observability/intelligent_alerting.py:598: note: Use "-> None" if function does not return a value
observability/intelligent_alerting.py:607: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _evaluate_rule(self, rule: AlertRule):
        ^
observability/intelligent_alerting.py:727: error: Returning Any from function
declared to return "AnomalyDetector"  [no-any-return]
            return self.anomaly_detectors[metric_name]
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/intelligent_alerting.py:729: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _train_anomaly_detectors(self):
        ^
observability/intelligent_alerting.py:729: note: Use "-> None" if function does not return a value
observability/intelligent_alerting.py:757: error: Returning Any from function
declared to return "float | None"  [no-any-return]
                    return performance_tracker.get_average_inference_time(...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/intelligent_alerting.py:757: error: "RealTimePerformanceTracker"
has no attribute "get_average_inference_time"  [attr-defined]
                    return performance_tracker.get_average_inference_time(...
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/intelligent_alerting.py:774: error: Returning Any from function
declared to return "Alert | None"  [no-any-return]
                    return alert
                    ^~~~~~~~~~~~
observability/intelligent_alerting.py:777: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _trigger_alert(self, alert: Alert):
        ^
observability/intelligent_alerting.py:781: error: Unsupported operand types for
+ ("object" and "int")  [operator]
                self.stats["suppressed_alerts"] += 1
                ^
observability/intelligent_alerting.py:795: error: Unsupported operand types for
+ ("object" and "int")  [operator]
            self.stats["total_alerts"] += 1
            ^
observability/intelligent_alerting.py:796: error: Value of type "object" is not
indexable  [index]
            self.stats["alerts_by_severity"][alert.severity.value] += 1
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/intelligent_alerting.py:796: error: Unsupported target for
indexed assignment ("object")  [index]
            self.stats["alerts_by_severity"][alert.severity.value] += 1
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/intelligent_alerting.py:797: error: Value of type "object" is not
indexable  [index]
            self.stats["alerts_by_type"][alert.alert_type.value] += 1
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/intelligent_alerting.py:797: error: Unsupported target for
indexed assignment ("object")  [index]
            self.stats["alerts_by_type"][alert.alert_type.value] += 1
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/intelligent_alerting.py:809: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _resolve_alert(self, alert: Alert):
        ^
observability/intelligent_alerting.py:841: error: Function is missing a return
type annotation  [no-untyped-def]
        def add_rule(self, rule: AlertRule):
        ^
observability/intelligent_alerting.py:846: error: Function is missing a return
type annotation  [no-untyped-def]
        def remove_rule(self, rule_id: str):
        ^
observability/intelligent_alerting.py:852: error: Function is missing a return
type annotation  [no-untyped-def]
        def add_alert_callback(self, callback: Callable[[Alert], None]):
        ^
observability/intelligent_alerting.py:856: error: Function is missing a return
type annotation  [no-untyped-def]
        def add_suppression_rule(self, rule: Dict[str, Any]):
        ^
observability/intelligent_alerting.py:860: error: Function is missing a return
type annotation  [no-untyped-def]
        def acknowledge_alert(self, alert_id: str, acknowledged_by: str):
        ^
observability/intelligent_alerting.py:872: error: Function is missing a return
type annotation  [no-untyped-def]
        def suppress_alert(self, alert_id: str, duration: int):
        ^
observability/intelligent_alerting.py:910: error: Call to untyped function
"IntelligentAlertingSystem" in typed context  [no-untyped-call]
    intelligent_alerting = IntelligentAlertingSystem()
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/intelligent_alerting.py:913: error: Function is missing a return
type annotation  [no-untyped-def]
    async def start_intelligent_alerting():
    ^
observability/intelligent_alerting.py:913: note: Use "-> None" if function does not return a value
observability/intelligent_alerting.py:915: error: Call to untyped function
"start" in typed context  [no-untyped-call]
        await intelligent_alerting.start()
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/intelligent_alerting.py:918: error: Function is missing a return
type annotation  [no-untyped-def]
    async def stop_intelligent_alerting():
    ^
observability/intelligent_alerting.py:918: note: Use "-> None" if function does not return a value
observability/intelligent_alerting.py:920: error: Call to untyped function
"stop" in typed context  [no-untyped-call]
        await intelligent_alerting.stop()
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/intelligent_alerting.py:924: error: Function is missing a return
type annotation  [no-untyped-def]
    async def integrate_with_prometheus_alertmanager():
    ^
observability/intelligent_alerting.py:924: note: Use "-> None" if function does not return a value
observability/intelligent_alerting.py:927: error: Function is missing a return
type annotation  [no-untyped-def]
        async def prometheus_alert_callback(alert: Alert):
        ^
observability/intelligent_alerting.py:955: error: Argument 1 to
"add_alert_callback" of "IntelligentAlertingSystem" has incompatible type
"Callable[[Alert], Coroutine[Any, Any, Any]]"; expected
"Callable[[Alert], None]"  [arg-type]
        intelligent_alerting.add_alert_callback(prometheus_alert_callback)
                                                ^~~~~~~~~~~~~~~~~~~~~~~~~
observability/integrated_observability.py:102: error: Function is missing a
return type annotation  [no-untyped-def]
        async def start(self):
        ^
observability/integrated_observability.py:102: note: Use "-> None" if function does not return a value
observability/integrated_observability.py:122: error: Call to untyped function
"start_prometheus_metrics_collection" in typed context  [no-untyped-call]
                    await start_prometheus_metrics_collection()
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/integrated_observability.py:129: error: Function is missing a
return type annotation  [no-untyped-def]
        async def stop(self):
        ^
observability/integrated_observability.py:129: note: Use "-> None" if function does not return a value
observability/integrated_observability.py:148: error: Call to untyped function
"stop_prometheus_metrics_collection" in typed context  [no-untyped-call]
                    await stop_prometheus_metrics_collection()
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/integrated_observability.py:155: error: Function is missing a
return type annotation  [no-untyped-def]
        async def register_agent(
        ^
observability/integrated_observability.py:156: error: Missing type parameters
for generic type "Dict"  [type-arg]
    ... self, agent_id: str, agent_type: str, metadata: Optional[Dict] = None
                                                                 ^
observability/integrated_observability.py:186: error: Function is missing a
return type annotation  [no-untyped-def]
        async def unregister_agent(self, agent_id: str, reason: str = "sto...
        ^
observability/integrated_observability.py:215: error: Function is missing a
return type annotation  [no-untyped-def]
        async def monitor_agent_operation(
        ^
observability/integrated_observability.py:216: error: Missing type parameters
for generic type "Dict"  [type-arg]
    ...  self, agent_id: str, operation: str, metadata: Optional[Dict] = None
                                                                 ^
observability/integrated_observability.py:268: error: Function is missing a
return type annotation  [no-untyped-def]
        async def monitor_belief_update_detailed(
        ^
observability/integrated_observability.py:302: error: Function is missing a
return type annotation  [no-untyped-def]
        async def monitor_coordination_event(
        ^
observability/integrated_observability.py:309: error: Missing type parameters
for generic type "Dict"  [type-arg]
            metadata: Optional[Dict] = None,
                               ^
observability/integrated_observability.py:342: error: Function is missing a
return type annotation  [no-untyped-def]
        async def _check_operation_alerts(
        ^
observability/integrated_observability.py:561: error: Function is missing a
return type annotation  [no-untyped-def]
    async def start_observability():
    ^
observability/integrated_observability.py:561: note: Use "-> None" if function does not return a value
observability/integrated_observability.py:563: error: Call to untyped function
"start" in typed context  [no-untyped-call]
        await observability_manager.start()
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/integrated_observability.py:566: error: Function is missing a
return type annotation  [no-untyped-def]
    async def stop_observability():
    ^
observability/integrated_observability.py:566: note: Use "-> None" if function does not return a value
observability/integrated_observability.py:568: error: Call to untyped function
"stop" in typed context  [no-untyped-call]
        await observability_manager.stop()
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/integrated_observability.py:571: error: Function is missing a
return type annotation  [no-untyped-def]
    async def register_agent_for_observability(
    ^
observability/integrated_observability.py:572: error: Missing type parameters
for generic type "Dict"  [type-arg]
        agent_id: str, agent_type: str, metadata: Optional[Dict] = None
                                                           ^
observability/integrated_observability.py:578: error: Function is missing a
return type annotation  [no-untyped-def]
    async def unregister_agent_from_observability(
    ^
observability/integrated_observability.py:585: error: Function is missing a
return type annotation  [no-untyped-def]
    async def monitor_agent_operation(
    ^
observability/integrated_observability.py:586: error: Missing type parameters
for generic type "Dict"  [type-arg]
        agent_id: str, operation: str, metadata: Optional[Dict] = None
                                                          ^
knowledge_graph/nlp_entity_extractor.py:74: error: Call to untyped function
"_setup_custom_patterns" in typed context  [no-untyped-call]
            self._setup_custom_patterns()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
knowledge_graph/nlp_entity_extractor.py:81: error: Function is missing a return
type annotation  [no-untyped-def]
        def _setup_custom_patterns(self):
        ^
knowledge_graph/nlp_entity_extractor.py:81: note: Use "-> None" if function does not return a value
knowledge_graph/nlp_entity_extractor.py:218: error: Argument 2 to "add" of
"Matcher" has incompatible type "list[object]"; expected
"list[list[dict[str, Any]]]"  [arg-type]
            self.matcher.add("TECHNOLOGY", tech_patterns)
                                           ^~~~~~~~~~~~~
knowledge_graph/nlp_entity_extractor.py:219: error: Argument 2 to "add" of
"Matcher" has incompatible type "list[object]"; expected
"list[list[dict[str, Any]]]"  [arg-type]
            self.matcher.add("CONCEPT", concept_patterns)
                                        ^~~~~~~~~~~~~~~~
knowledge_graph/nlp_entity_extractor.py:268: error: Incompatible types in
assignment (expression has type "EntityType | None", variable has type
"EntityType")  [assignment]
                entity_type = self._map_spacy_label_to_entity_type(ent.lab...
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
knowledge_graph/nlp_entity_extractor.py:306: error: Function is missing a
return type annotation  [no-untyped-def]
        def add_custom_patterns(self, patterns: List[Dict[str, Any]]):
        ^
examples/websocket_auth_demo.py:24: error: Function is missing a return type
annotation  [no-untyped-def]
    async def demo_websocket_authentication():
    ^
examples/websocket_auth_demo.py:24: note: Use "-> None" if function does not return a value
examples/websocket_auth_demo.py:30: error: Call to untyped function
"AuthenticationManager" in typed context  [no-untyped-call]
        auth_manager = AuthenticationManager()
                       ^~~~~~~~~~~~~~~~~~~~~~~
examples/websocket_auth_demo.py:36: error: Argument "password" to
"register_user" of "AuthenticationManager" has incompatible type "str | None";
expected "str"  [arg-type]
            password=os.getenv("PASSWORD"),
                     ^~~~~~~~~~~~~~~~~~~~~
examples/websocket_auth_demo.py:138: error: Function is missing a return type
annotation  [no-untyped-def]
    async def demo_authentication_failure():
    ^
examples/websocket_auth_demo.py:138: note: Use "-> None" if function does not return a value
examples/websocket_auth_demo.py:173: error: Function is missing a return type
annotation  [no-untyped-def]
    async def demo_permission_testing():
    ^
examples/websocket_auth_demo.py:173: note: Use "-> None" if function does not return a value
examples/websocket_auth_demo.py:179: error: Call to untyped function
"AuthenticationManager" in typed context  [no-untyped-call]
        auth_manager = AuthenticationManager()
                       ^~~~~~~~~~~~~~~~~~~~~~~
examples/websocket_auth_demo.py:184: error: Argument "password" to
"register_user" of "AuthenticationManager" has incompatible type "str | None";
expected "str"  [arg-type]
            password=os.getenv("PASSWORD"),
                     ^~~~~~~~~~~~~~~~~~~~~
examples/websocket_auth_demo.py:191: error: Argument 1 to "create_access_token"
of "AuthenticationManager" has incompatible type "User | None"; expected "User"
[arg-type]
    ...bserver_token = auth_manager.create_access_token(authenticated_observe...
                                                        ^~~~~~~~~~~~~~~~~~~~~~
examples/websocket_auth_demo.py:242: error: Function is missing a return type
annotation  [no-untyped-def]
    def print_usage_instructions():
    ^
examples/websocket_auth_demo.py:242: note: Use "-> None" if function does not return a value
examples/websocket_auth_demo.py:268: error: Function is missing a return type
annotation  [no-untyped-def]
    async def main():
    ^
examples/websocket_auth_demo.py:268: note: Use "-> None" if function does not return a value
examples/websocket_auth_demo.py:270: error: Call to untyped function
"print_usage_instructions" in typed context  [no-untyped-call]
        print_usage_instructions()
        ^~~~~~~~~~~~~~~~~~~~~~~~~~
examples/websocket_auth_demo.py:275: error: Call to untyped function
"demo_websocket_authentication" in typed context  [no-untyped-call]
        await demo_websocket_authentication()
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/websocket_auth_demo.py:276: error: Call to untyped function
"demo_authentication_failure" in typed context  [no-untyped-call]
        await demo_authentication_failure()
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/websocket_auth_demo.py:277: error: Call to untyped function
"demo_permission_testing" in typed context  [no-untyped-call]
        await demo_permission_testing()
              ^~~~~~~~~~~~~~~~~~~~~~~~~
examples/websocket_auth_demo.py:290: error: Call to untyped function "main" in
typed context  [no-untyped-call]
        asyncio.run(main())
                    ^~~~~~
database/query_optimization.py:30: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
database/query_optimization.py:30: note: Use "-> None" if function does not return a value
database/query_optimization.py:42: error: Function is missing a return type
annotation  [no-untyped-def]
        async def create_performance_indexes(self, session: AsyncSession):
        ^
database/query_optimization.py:456: error: "type[Agent]" has no attribute
"outerjoin"  [attr-defined]
                Agent.outerjoin(Coalition).outerjoin(agent_coalition_assoc...
                ^~~~~~~~~~~~~~~
database/query_optimization.py:463: error: Item "None" of "Row[Any] | None" has
no attribute "total_agents"  [union-attr]
                "total_agents": row.total_agents or 0,
                                ^~~~~~~~~~~~~~~~
database/query_optimization.py:464: error: Item "None" of "Row[Any] | None" has
no attribute "active_agents"  [union-attr]
                "active_agents": row.active_agents or 0,
                                 ^~~~~~~~~~~~~~~~~
database/query_optimization.py:465: error: Item "None" of "Row[Any] | None" has
no attribute "total_coalitions"  [union-attr]
                "total_coalitions": row.total_coalitions or 0,
                                    ^~~~~~~~~~~~~~~~~~~~
database/query_optimization.py:466: error: Item "None" of "Row[Any] | None" has
no attribute "active_coalitions"  [union-attr]
                "active_coalitions": row.active_coalitions or 0,
                                     ^~~~~~~~~~~~~~~~~~~~~
database/query_optimization.py:468: error: Item "None" of "Row[Any] | None" has
no attribute "avg_inferences_per_agent"  [union-attr]
                    row.avg_inferences_per_agent or 0
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
database/query_optimization.py:470: error: Item "None" of "Row[Any] | None" has
no attribute "total_inferences"  [union-attr]
                "total_inferences": row.total_inferences or 0,
                                    ^~~~~~~~~~~~~~~~~~~~
database/query_optimization.py:471: error: Item "None" of "Row[Any] | None" has
no attribute "total_steps"  [union-attr]
                "total_steps": row.total_steps or 0,
                               ^~~~~~~~~~~~~~~
database/query_optimization.py:473: error: Item "None" of "Row[Any] | None" has
no attribute "avg_coalition_performance"  [union-attr]
                    row.avg_coalition_performance or 0
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
database/query_optimization.py:475: error: Item "None" of "Row[Any] | None" has
no attribute "total_memberships"  [union-attr]
                "total_memberships": row.total_memberships or 0,
                                     ^~~~~~~~~~~~~~~~~~~~~
database/query_optimization.py:476: error: Item "None" of "Row[Any] | None" has
no attribute "active_agents"  [union-attr]
                "agent_utilization": (row.active_agents or 0)
                                      ^~~~~~~~~~~~~~~~~
database/query_optimization.py:477: error: Item "None" of "Row[Any] | None" has
no attribute "total_agents"  [union-attr]
                / max(row.total_agents or 1, 1),
                      ^~~~~~~~~~~~~~~~
database/query_optimization.py:478: error: Item "None" of "Row[Any] | None" has
no attribute "active_coalitions"  [union-attr]
                "coalition_utilization": (row.active_coalitions or 0)
                                          ^~~~~~~~~~~~~~~~~~~~~
database/query_optimization.py:479: error: Item "None" of "Row[Any] | None" has
no attribute "total_coalitions"  [union-attr]
                / max(row.total_coalitions or 1, 1),
                      ^~~~~~~~~~~~~~~~~~~~
database/query_optimization.py:489: error: Function is missing a return type
annotation  [no-untyped-def]
        def _track_query_performance(self, query_name: str, query_time: fl...
        ^
database/query_optimization.py:491: error: Unsupported operand types for +
("object" and "int")  [operator]
            self.query_stats["total_queries"] += 1
            ^
database/query_optimization.py:497: error: Unsupported operand types for *
("object" and "int")  [operator]
                current_avg * (total_queries - 1) + query_time
                ^
database/query_optimization.py:497: error: Unsupported operand types for -
("object" and "int")  [operator]
                current_avg * (total_queries - 1) + query_time
                               ^
database/query_optimization.py:498: error: Unsupported operand types for /
("float" and "object")  [operator]
            ) / total_queries
                ^~~~~~~~~~~~~
database/query_optimization.py:502: error: "object" has no attribute "append"
[attr-defined]
                self.query_stats["slow_queries"].append(
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
database/query_optimization.py:511: error: Argument 1 to "len" has incompatible
type "object"; expected "Sized"  [arg-type]
                if len(self.query_stats["slow_queries"]) > 50:
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
database/query_optimization.py:512: error: "object" has no attribute "pop"
[attr-defined]
                    self.query_stats["slow_queries"].pop(0)
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
database/query_optimization.py:523: error: Argument 1 to "len" has incompatible
type "object"; expected "Sized"  [arg-type]
                "slow_queries_count": len(self.query_stats["slow_queries"]...
                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
database/query_optimization.py:524: error: Value of type "object" is not
indexable  [index]
                "slow_queries": self.query_stats["slow_queries"][
                                ^
database/query_optimization.py:529: error: No overload variant of "max" matches
argument types "object", "int"  [call-overload]
                    / max(self.query_stats["total_queries"], 1)
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
database/query_optimization.py:529: note: Possible overload variants:
database/query_optimization.py:529: note:     def [SupportsRichComparisonT] max(SupportsRichComparisonT, SupportsRichComparisonT, /, *_args: SupportsRichComparisonT, key: None = ...) -> SupportsRichComparisonT
database/query_optimization.py:529: note:     def [_T] max(_T, _T, /, *_args: _T, key: Callable[[_T], SupportsDunderLT[Any] | SupportsDunderGT[Any]]) -> _T
database/query_optimization.py:529: note:     def [SupportsRichComparisonT] max(Iterable[SupportsRichComparisonT], /, *, key: None = ...) -> SupportsRichComparisonT
database/query_optimization.py:529: note:     def [_T] max(Iterable[_T], /, *, key: Callable[[_T], SupportsDunderLT[Any] | SupportsDunderGT[Any]]) -> _T
database/query_optimization.py:529: note:     def [SupportsRichComparisonT, _T] max(Iterable[SupportsRichComparisonT], /, *, key: None = ..., default: _T) -> SupportsRichComparisonT | _T
database/query_optimization.py:529: note:     def [_T1, _T2] max(Iterable[_T1], /, *, key: Callable[[_T1], SupportsDunderLT[Any] | SupportsDunderGT[Any]], default: _T2) -> _T1 | _T2
database/query_optimization.py:544: error: Call to untyped function
"QueryOptimizer" in typed context  [no-untyped-call]
            _query_optimizer = QueryOptimizer()
                               ^~~~~~~~~~~~~~~~
database/query_optimization.py:550: error: Function is missing a return type
annotation  [no-untyped-def]
    def cache_query(cache_key: str, ttl: int = 300):
    ^
database/query_optimization.py:553: error: Function is missing a type
annotation  [no-untyped-def]
        def decorator(func):
        ^
database/query_optimization.py:554: error: Function is missing a type
annotation  [no-untyped-def]
            async def wrapper(*args, **kwargs):
            ^
database/query_optimization.py:560: error: Unsupported operand types for +
("object" and "int")  [operator]
                    optimizer.query_stats["cache_hits"] += 1
                    ^
database/query_optimization.py:572: error: Unsupported operand types for +
("object" and "int")  [operator]
                optimizer.query_stats["cache_misses"] += 1
                ^
auth/rbac_security_enhancements.py:79: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
auth/rbac_security_enhancements.py:79: note: Use "-> None" if function does not return a value
auth/rbac_security_enhancements.py:188: error: Function is missing a return
type annotation  [no-untyped-def]
        def __init__(self):
        ^
auth/rbac_security_enhancements.py:188: note: Use "-> None" if function does not return a value
auth/rbac_security_enhancements.py:459: error: Function is missing a return
type annotation  [no-untyped-def]
        def _log_decision(
        ^
auth/rbac_security_enhancements.py:469: error: "AccessDecisionAuditor" has no
attribute "log_authorization_decision"  [attr-defined]
            comprehensive_auditor.log_authorization_decision(
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
auth/rbac_security_enhancements.py:559: error: Function is missing a return
type annotation  [no-untyped-def]
        def __init__(self):
        ^
auth/rbac_security_enhancements.py:559: note: Use "-> None" if function does not return a value
auth/rbac_security_enhancements.py:631: error: Call to untyped function
"PrivilegeEscalationDetector" in typed context  [no-untyped-call]
    privilege_escalation_detector = PrivilegeEscalationDetector()
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
auth/rbac_security_enhancements.py:632: error: Call to untyped function
"ZeroTrustValidator" in typed context  [no-untyped-call]
    zero_trust_validator = ZeroTrustValidator()
                           ^~~~~~~~~~~~~~~~~~~~
auth/rbac_security_enhancements.py:633: error: Call to untyped function
"RateLimiter" in typed context  [no-untyped-call]
    rate_limiter = RateLimiter()
                   ^~~~~~~~~~~~~
auth/rbac_enhancements.py:129: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
auth/rbac_enhancements.py:129: note: Use "-> None" if function does not return a value
auth/rbac_enhancements.py:136: error: Call to untyped function
"_setup_default_abac_rules" in typed context  [no-untyped-call]
            self._setup_default_abac_rules()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
auth/rbac_enhancements.py:140: error: Function is missing a return type
annotation  [no-untyped-def]
        def _setup_default_abac_rules(self):
        ^
auth/rbac_enhancements.py:140: note: Use "-> None" if function does not return a value
auth/rbac_enhancements.py:222: error: Argument "id" to "ABACRule" has
incompatible type "object"; expected "str"  [arg-type]
                    id=rule_data["id"],
                       ^~~~~~~~~~~~~~~
auth/rbac_enhancements.py:223: error: Argument "name" to "ABACRule" has
incompatible type "object"; expected "str"  [arg-type]
                    name=rule_data["name"],
                         ^~~~~~~~~~~~~~~~~
auth/rbac_enhancements.py:224: error: Argument "description" to "ABACRule" has
incompatible type "object"; expected "str"  [arg-type]
                    description=rule_data["description"],
                                ^~~~~~~~~~~~~~~~~~~~~~~~
auth/rbac_enhancements.py:225: error: Argument "resource_type" to "ABACRule"
has incompatible type "object"; expected "str"  [arg-type]
                    resource_type=rule_data["resource_type"],
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~
auth/rbac_enhancements.py:226: error: Argument "action" to "ABACRule" has
incompatible type "object"; expected "str"  [arg-type]
                    action=rule_data["action"],
                           ^~~~~~~~~~~~~~~~~~~
auth/rbac_enhancements.py:227: error: Argument "subject_conditions" to
"ABACRule" has incompatible type "object"; expected "dict[str, Any]"  [arg-type]
                    subject_conditions=rule_data["subject_conditions"],
                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
auth/rbac_enhancements.py:228: error: Argument "resource_conditions" to
"ABACRule" has incompatible type "object"; expected "dict[str, Any]"  [arg-type]
                    resource_conditions=rule_data["resource_conditions"],
                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
auth/rbac_enhancements.py:229: error: Argument "environment_conditions" to
"ABACRule" has incompatible type "object"; expected "dict[str, Any]"  [arg-type]
                    environment_conditions=rule_data["environment_conditio...
                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
auth/rbac_enhancements.py:230: error: Argument "effect" to "ABACRule" has
incompatible type "object"; expected "ABACEffect"  [arg-type]
                    effect=rule_data["effect"],
                           ^~~~~~~~~~~~~~~~~~~
auth/rbac_enhancements.py:231: error: Argument "priority" to "ABACRule" has
incompatible type "object"; expected "int"  [arg-type]
                    priority=rule_data["priority"],
                             ^~~~~~~~~~~~~~~~~~~~~
auth/rbac_enhancements.py:504: error: Function is missing a return type
annotation  [no-untyped-def]
        def _log_abac_decision(
        ^
auth/rbac_enhancements.py:860: error: Call to untyped function
"EnhancedRBACManager" in typed context  [no-untyped-call]
    enhanced_rbac_manager = EnhancedRBACManager()
                            ^~~~~~~~~~~~~~~~~~~~~
auth/rbac_enhancements.py:863: error: Function is missing a return type
annotation  [no-untyped-def]
    def enhanced_permission_check(permission: Permission):
    ^
auth/rbac_enhancements.py:866: error: Function is missing a type annotation
[no-untyped-def]
        def decorator(func):
        ^
auth/rbac_enhancements.py:868: error: Function is missing a type annotation
[no-untyped-def]
            async def wrapper(*args, **kwargs):
            ^
api/v1/system.py:117: error: Missing type parameters for generic type "dict"
[type-arg]
    async def get_system_info() -> dict:
                                   ^
api/v1/system.py:155: error: Missing type parameters for generic type "dict"
[type-arg]
    async def get_recent_logs(limit: int = 100) -> List[dict]:
                                                        ^
api/v1/inference.py:55: error: Untyped decorator makes function
"perform_inference" untyped  [misc]
    @require_permission(Permission.MODIFY_AGENT)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/inference.py:95: error: Untyped decorator makes function
"perform_batch_inference" untyped  [misc]
    @require_permission(Permission.MODIFY_AGENT)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/inference.py:125: error: Untyped decorator makes function
"update_beliefs" untyped  [misc]
    @require_permission(Permission.MODIFY_AGENT)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/inference.py:155: error: Untyped decorator makes function "get_beliefs"
untyped  [misc]
    @require_permission(Permission.VIEW_AGENTS)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/inference.py:190: error: Untyped decorator makes function
"get_inference_status" untyped  [misc]
    @require_permission(Permission.VIEW_METRICS)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/inference.py:211: error: Untyped decorator makes function
"get_inference_capabilities" untyped  [misc]
    @require_permission(Permission.VIEW_AGENTS)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/dashboard.py:24: error: Function is missing a return type annotation
[no-untyped-def]
    async def startup_event():
    ^
api/v1/dashboard.py:24: note: Use "-> None" if function does not return a value
api/v1/dashboard.py:27: error: Call to untyped function
"start_monitoring_dashboard" in typed context  [no-untyped-call]
            await start_monitoring_dashboard()
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/dashboard.py:34: error: Function is missing a return type annotation
[no-untyped-def]
    async def shutdown_event():
    ^
api/v1/dashboard.py:34: note: Use "-> None" if function does not return a value
api/v1/dashboard.py:37: error: Call to untyped function
"stop_monitoring_dashboard" in typed context  [no-untyped-call]
            await stop_monitoring_dashboard()
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/dashboard.py:44: error: Function is missing a return type annotation
[no-untyped-def]
    async def get_dashboard():
    ^
api/v1/dashboard.py:74: error: Function is missing a return type annotation
[no-untyped-def]
    async def get_metric_history(
    ^
api/v1/dashboard.py:105: error: Function is missing a return type annotation
[no-untyped-def]
    async def get_alerts(
    ^
api/v1/dashboard.py:141: error: Function is missing a return type annotation
[no-untyped-def]
    async def get_events(
    ^
api/v1/dashboard.py:177: error: Function is missing a return type annotation
[no-untyped-def]
    async def record_event(event_data: Dict):
    ^
api/v1/dashboard.py:177: error: Missing type parameters for generic type "Dict"
 [type-arg]
    async def record_event(event_data: Dict):
                                       ^
api/v1/dashboard.py:207: error: Function is missing a return type annotation
[no-untyped-def]
    async def dashboard_health():
    ^
api/middleware/websocket_rate_limiting.py:10: error: Unused "type: ignore"
comment  [unused-ignore]
    import redis.asyncio as aioredis  # type: ignore[import-untyped]
    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/middleware/websocket_rate_limiting.py:31: error: Missing type parameters
for generic type "Redis"  [type-arg]
            self.redis_client: Optional[aioredis.Redis] = None
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/middleware/websocket_rate_limiting.py:35: error: Missing type parameters
for generic type "Redis"  [type-arg]
        async def _get_redis_client(self) -> Optional[aioredis.Redis]:
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/middleware/websocket_rate_limiting.py:166: error: Function is missing a
return type annotation  [no-untyped-def]
        async def register_connection(
        ^
api/middleware/websocket_rate_limiting.py:177: error: Function is missing a
return type annotation  [no-untyped-def]
        async def unregister_connection(self, connection_id: str):
        ^
api/middleware/websocket_rate_limiting.py:193: error: Function is missing a
return type annotation  [no-untyped-def]
        async def handle_websocket_with_rate_limiting(
        ^
api/middleware/websocket_rate_limiting.py:197: error: Missing type parameters
for generic type "Callable"  [type-arg]
            message_handler: Callable,
                             ^
api/middleware/__init__.py:18: error: Module
"api.middleware.security_monitoring" does not explicitly export attribute
"SecurityHeadersMiddleware"  [attr-defined]
    from .security_monitoring import (
    ^
agents/enhanced_agent_coordinator.py:98: error: Function is missing a return
type annotation  [no-untyped-def]
        async def initialize(self):
        ^
agents/enhanced_agent_coordinator.py:98: note: Use "-> None" if function does not return a value
agents/enhanced_agent_coordinator.py:100: error: Call to untyped function
"initialize" in typed context  [no-untyped-call]
            await self.pool_manager.initialize()
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/enhanced_agent_coordinator.py:103: error: Call to untyped function
"initialize" in typed context  [no-untyped-call]
                await self.db_manager.initialize()
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/enhanced_agent_coordinator.py:108: error: Missing type parameters for
generic type "Dict"  [type-arg]
    ...      self, agent_id: str, agent: Any, metadata: Optional[Dict] = None
                                                                 ^
agents/enhanced_agent_coordinator.py:178: error: Returning Any from function
declared to return "dict[str, Any]"  [no-any-return]
                return await self.coordination_circuit_breaker.call(
                ^
agents/enhanced_agent_coordinator.py:178: error: Call to untyped function
"call" in typed context  [no-untyped-call]
                return await self.coordination_circuit_breaker.call(
                             ^
agents/enhanced_agent_coordinator.py:404: error: "object" has no attribute
"append"  [attr-defined]
                health_status["issues"].append(f"Pool manager error: {e}")
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/enhanced_agent_coordinator.py:414: error: "object" has no attribute
"append"  [attr-defined]
                        health_status["issues"].append(
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/enhanced_agent_coordinator.py:418: error: "object" has no attribute
"append"  [attr-defined]
                    health_status["issues"].append(
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/enhanced_agent_coordinator.py:427: error: "object" has no attribute
"append"  [attr-defined]
                health_status["issues"].append(f"Resource monitor error: {...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/enhanced_agent_coordinator.py:432: error: Argument 1 to "len" has
incompatible type "object"; expected "Sized"  [arg-type]
                    "degraded" if len(health_status["issues"]) < 3 else "u...
                                      ^~~~~~~~~~~~~~~~~~~~~~~
agents/enhanced_agent_coordinator.py:437: error: Function is missing a return
type annotation  [no-untyped-def]
        async def shutdown(self):
        ^
agents/enhanced_agent_coordinator.py:437: note: Use "-> None" if function does not return a value
agents/enhanced_agent_coordinator.py:466: error: Call to untyped function
"close" in typed context  [no-untyped-call]
                await self.db_manager.close()
                      ^~~~~~~~~~~~~~~~~~~~~~~
agents/enhanced_agent_coordinator.py:469: error: Call to untyped function
"close" in typed context  [no-untyped-call]
            await self.pool_manager.close()
                  ^~~~~~~~~~~~~~~~~~~~~~~~~
agents/enhanced_agent_coordinator.py:491: error: Function is missing a return
type annotation  [no-untyped-def]
    async def initialize_global_coordinator(
    ^
agents/enhanced_agent_coordinator.py:497: error: Call to untyped function
"initialize" in typed context  [no-untyped-call]
        await coordinator.initialize()
              ^~~~~~~~~~~~~~~~~~~~~~~~
agents/enhanced_agent_coordinator.py:501: error: Function is missing a return
type annotation  [no-untyped-def]
    async def shutdown_global_coordinator():
    ^
agents/enhanced_agent_coordinator.py:501: note: Use "-> None" if function does not return a value
agents/enhanced_agent_coordinator.py:506: error: Call to untyped function
"shutdown" in typed context  [no-untyped-call]
            await _global_coordinator.shutdown()
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/vulnerability_scanner.py:97: error: Function is missing a return
type annotation  [no-untyped-def]
        def __init__(self):
        ^
observability/vulnerability_scanner.py:97: note: Use "-> None" if function does not return a value
observability/vulnerability_scanner.py:140: error: Missing type parameters for
generic type "Task"  [type-arg]
            self.scanning_task: Optional[asyncio.Task] = None
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/vulnerability_scanner.py:145: error: Function is missing a return
type annotation  [no-untyped-def]
        async def start_scanning(self):
        ^
observability/vulnerability_scanner.py:145: note: Use "-> None" if function does not return a value
observability/vulnerability_scanner.py:151: error: Call to untyped function
"_scanning_loop" in typed context  [no-untyped-call]
            self.scanning_task = asyncio.create_task(self._scanning_loop()...
                                                     ^~~~~~~~~~~~~~~~~~~~~
observability/vulnerability_scanner.py:155: error: Function is missing a return
type annotation  [no-untyped-def]
        async def stop_scanning(self):
        ^
observability/vulnerability_scanner.py:155: note: Use "-> None" if function does not return a value
observability/vulnerability_scanner.py:168: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _scanning_loop(self):
        ^
observability/vulnerability_scanner.py:168: note: Use "-> None" if function does not return a value
observability/vulnerability_scanner.py:172: error: Call to untyped function
"_run_all_scanners" in typed context  [no-untyped-call]
                    await self._run_all_scanners()
                          ^~~~~~~~~~~~~~~~~~~~~~~~
observability/vulnerability_scanner.py:180: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _run_all_scanners(self):
        ^
observability/vulnerability_scanner.py:180: note: Use "-> None" if function does not return a value
observability/vulnerability_scanner.py:626: error: Need type annotation for
"vulnerabilities" (hint: "vulnerabilities: list[<type>] = ...")  [var-annotated]
                vulnerabilities = []
                ^~~~~~~~~~~~~~~
observability/vulnerability_scanner.py:655: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _process_scan_result(self, result: ScanResult):
        ^
observability/vulnerability_scanner.py:774: error: Function is missing a return
type annotation  [no-untyped-def]
        def suppress_vulnerability(self, vuln_id: str, reason: str = ""):
        ^
observability/vulnerability_scanner.py:784: error: Function is missing a return
type annotation  [no-untyped-def]
        def mark_false_positive(self, vuln_id: str, reason: str = ""):
        ^
observability/vulnerability_scanner.py:814: error: Unsupported target for
indexed assignment ("object")  [index]
                stats["by_severity"][severity_key] = (
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/vulnerability_scanner.py:815: error: "object" has no attribute
"get"  [attr-defined]
                    stats["by_severity"].get(severity_key, 0) + 1
                    ^~~~~~~~~~~~~~~~~~~~~~~~
observability/vulnerability_scanner.py:820: error: Unsupported target for
indexed assignment ("object")  [index]
                stats["by_type"][type_key] = stats["by_type"].get(type_key...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~
observability/vulnerability_scanner.py:820: error: "object" has no attribute
"get"  [attr-defined]
                stats["by_type"][type_key] = stats["by_type"].get(type_key...
                                             ^~~~~~~~~~~~~~~~~~~~
observability/vulnerability_scanner.py:824: error: Unsupported target for
indexed assignment ("object")  [index]
                stats["by_status"][status_key] = (
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/vulnerability_scanner.py:825: error: "object" has no attribute
"get"  [attr-defined]
                    stats["by_status"].get(status_key, 0) + 1
                    ^~~~~~~~~~~~~~~~~~~~~~
observability/vulnerability_scanner.py:830: error: Unsupported target for
indexed assignment ("object")  [index]
                stats["by_scanner"][scanner_key] = (
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/vulnerability_scanner.py:831: error: "object" has no attribute
"get"  [attr-defined]
                    stats["by_scanner"].get(scanner_key, 0) + 1
                    ^~~~~~~~~~~~~~~~~~~~~~~
observability/vulnerability_scanner.py:836: error: Unsupported operand types
for + ("object" and "int")  [operator]
                    stats["open_vulnerabilities"] += 1
                    ^
observability/vulnerability_scanner.py:842: error: Call to untyped function
"VulnerabilityScanner" in typed context  [no-untyped-call]
    vulnerability_scanner = VulnerabilityScanner()
                            ^~~~~~~~~~~~~~~~~~~~~~
observability/vulnerability_scanner.py:845: error: Function is missing a return
type annotation  [no-untyped-def]
    async def start_vulnerability_scanning():
    ^
observability/vulnerability_scanner.py:845: note: Use "-> None" if function does not return a value
observability/vulnerability_scanner.py:847: error: Call to untyped function
"start_scanning" in typed context  [no-untyped-call]
        await vulnerability_scanner.start_scanning()
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/vulnerability_scanner.py:850: error: Function is missing a return
type annotation  [no-untyped-def]
    async def stop_vulnerability_scanning():
    ^
observability/vulnerability_scanner.py:850: note: Use "-> None" if function does not return a value
observability/vulnerability_scanner.py:852: error: Call to untyped function
"stop_scanning" in typed context  [no-untyped-call]
        await vulnerability_scanner.stop_scanning()
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/tracing_integration.py:186: error: Call to untyped function
"_setup_span_hooks" in typed context  [no-untyped-call]
            self._setup_span_hooks()
            ^~~~~~~~~~~~~~~~~~~~~~~~
observability/tracing_integration.py:189: error: Call to untyped function
"_setup_alerting_rules" in typed context  [no-untyped-call]
            self._setup_alerting_rules()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/tracing_integration.py:193: error: Function is missing a return
type annotation  [no-untyped-def]
        def _setup_span_hooks(self):
        ^
observability/tracing_integration.py:193: note: Use "-> None" if function does not return a value
observability/tracing_integration.py:198: error: Function is missing a return
type annotation  [no-untyped-def]
            def hooked_finish_span(
            ^
observability/tracing_integration.py:208: error: Cannot assign to a method
[method-assign]
            self.tracer.finish_span = hooked_finish_span
            ^~~~~~~~~~~~~~~~~~~~~~~
observability/tracing_integration.py:210: error: Function is missing a return
type annotation  [no-untyped-def]
        def _setup_alerting_rules(self):
        ^
observability/tracing_integration.py:210: note: Use "-> None" if function does not return a value
observability/tracing_integration.py:214: error: Missing positional argument
"conditions" in call to "AlertRule"  [call-arg]
                AlertRule(
                ^
observability/tracing_integration.py:231: error: Missing positional argument
"conditions" in call to "AlertRule"  [call-arg]
                AlertRule(
                ^
observability/tracing_integration.py:246: error: Function is missing a return
type annotation  [no-untyped-def]
        async def start(self):
        ^
observability/tracing_integration.py:246: note: Use "-> None" if function does not return a value
observability/tracing_integration.py:255: error: Incompatible types in
assignment (expression has type "Task[Any]", variable has type "None")
[assignment]
            self.integration_task = asyncio.create_task(self._integration_...
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
observability/tracing_integration.py:255: error: Call to untyped function
"_integration_loop" in typed context  [no-untyped-call]
    ...     self.integration_task = asyncio.create_task(self._integration_loo...
                                                        ^~~~~~~~~~~~~~~~~~~~~~~~
observability/tracing_integration.py:258: error: Incompatible types in
assignment (expression has type "Task[Any]", variable has type "None")
[assignment]
            self.metrics_export_task = asyncio.create_task(
                                       ^
observability/tracing_integration.py:259: error: Call to untyped function
"_metrics_export_loop" in typed context  [no-untyped-call]
                self._metrics_export_loop()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/tracing_integration.py:264: error: Function is missing a return
type annotation  [no-untyped-def]
        async def stop(self):
        ^
observability/tracing_integration.py:264: note: Use "-> None" if function does not return a value
observability/tracing_integration.py:289: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _integration_loop(self):
        ^
observability/tracing_integration.py:289: note: Use "-> None" if function does not return a value
observability/tracing_integration.py:293: error: Call to untyped function
"_perform_integration_tasks" in typed context  [no-untyped-call]
                    await self._perform_integration_tasks()
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/tracing_integration.py:301: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _metrics_export_loop(self):
        ^
observability/tracing_integration.py:301: note: Use "-> None" if function does not return a value
observability/tracing_integration.py:305: error: Call to untyped function
"_export_tracing_metrics" in typed context  [no-untyped-call]
                    await self._export_tracing_metrics()
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/tracing_integration.py:313: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _perform_integration_tasks(self):
        ^
observability/tracing_integration.py:313: note: Use "-> None" if function does not return a value
observability/tracing_integration.py:344: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _export_tracing_metrics(self):
        ^
observability/tracing_integration.py:344: note: Use "-> None" if function does not return a value
observability/tracing_integration.py:371: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _export_span_metrics(self, span: TraceSpan):
        ^
observability/tracing_integration.py:451: error: "TracingMetrics" has no
attribute "to_dict"  [attr-defined]
                    self.analyzer.analyze_traces().to_dict()
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/tracing_integration.py:468: error: Function is missing a return
type annotation  [no-untyped-def]
    async def get_traces(limit: int = Query(100, ge=1, le=1000)):
    ^
observability/tracing_integration.py:481: error: Function is missing a return
type annotation  [no-untyped-def]
    async def get_trace(trace_id: str):
    ^
observability/tracing_integration.py:496: error: Function is missing a return
type annotation  [no-untyped-def]
    async def get_trace_stats():
    ^
observability/tracing_integration.py:512: error: Function is missing a return
type annotation  [no-untyped-def]
    async def get_trace_analysis(time_window: int = Query(3600, ge=60, le=...
    ^
observability/tracing_integration.py:541: error: Function is missing a return
type annotation  [no-untyped-def]
    async def start_tracing_integration():
    ^
observability/tracing_integration.py:541: note: Use "-> None" if function does not return a value
observability/tracing_integration.py:543: error: Call to untyped function
"start" in typed context  [no-untyped-call]
        await tracing_integration.start()
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/tracing_integration.py:546: error: Function is missing a return
type annotation  [no-untyped-def]
    async def stop_tracing_integration():
    ^
observability/tracing_integration.py:546: note: Use "-> None" if function does not return a value
observability/tracing_integration.py:548: error: Call to untyped function
"stop" in typed context  [no-untyped-call]
        await tracing_integration.stop()
              ^~~~~~~~~~~~~~~~~~~~~~~~~~
observability/tracing_integration.py:552: error: Function is missing a return
type annotation  [no-untyped-def]
    async def trace_agent_operation(
    ^
observability/tracing_integration.py:552: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
    async def trace_agent_operation(
    ^
observability/tracing_integration.py:575: error: Function is missing a return
type annotation  [no-untyped-def]
    async def trace_coordination_operation(
    ^
observability/tracing_integration.py:575: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
    async def trace_coordination_operation(
    ^
observability/tracing_integration.py:602: error: Function is missing a return
type annotation  [no-untyped-def]
    async def trace_inference_operation(
    ^
observability/tracing_integration.py:602: error: Function is missing a type
annotation for one or more arguments  [no-untyped-def]
    async def trace_inference_operation(
    ^
observability/incident_response.py:129: error: Function is missing a return
type annotation  [no-untyped-def]
        def __init__(self):
        ^
observability/incident_response.py:129: note: Use "-> None" if function does not return a value
observability/incident_response.py:139: error: Call to untyped function
"_initialize_playbooks" in typed context  [no-untyped-call]
            self._initialize_playbooks()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/incident_response.py:144: error: Need type annotation for
"notification_channels"  [var-annotated]
            self.notification_channels = {"email": [], "slack": [], "webho...
                                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
observability/incident_response.py:147: error: Missing type parameters for
generic type "Task"  [type-arg]
            self.monitoring_task: Optional[asyncio.Task] = None
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/incident_response.py:148: error: Missing type parameters for
generic type "Task"  [type-arg]
            self.escalation_task: Optional[asyncio.Task] = None
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/incident_response.py:153: error: Function is missing a return
type annotation  [no-untyped-def]
        def _initialize_playbooks(self):
        ^
observability/incident_response.py:153: note: Use "-> None" if function does not return a value
observability/incident_response.py:288: error: Function is missing a return
type annotation  [no-untyped-def]
        async def start_monitoring(self):
        ^
observability/incident_response.py:288: note: Use "-> None" if function does not return a value
observability/incident_response.py:294: error: Call to untyped function
"_monitoring_loop" in typed context  [no-untyped-call]
    ...      self.monitoring_task = asyncio.create_task(self._monitoring_loop...
                                                        ^~~~~~~~~~~~~~~~~~~~~~~
observability/incident_response.py:295: error: Call to untyped function
"_escalation_loop" in typed context  [no-untyped-call]
    ...      self.escalation_task = asyncio.create_task(self._escalation_loop...
                                                        ^~~~~~~~~~~~~~~~~~~~~~~
observability/incident_response.py:299: error: Function is missing a return
type annotation  [no-untyped-def]
        async def stop_monitoring(self):
        ^
observability/incident_response.py:299: note: Use "-> None" if function does not return a value
observability/incident_response.py:319: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _monitoring_loop(self):
        ^
observability/incident_response.py:319: note: Use "-> None" if function does not return a value
observability/incident_response.py:323: error: Call to untyped function
"_check_incident_status" in typed context  [no-untyped-call]
                    await self._check_incident_status()
                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/incident_response.py:331: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _escalation_loop(self):
        ^
observability/incident_response.py:331: note: Use "-> None" if function does not return a value
observability/incident_response.py:335: error: Call to untyped function
"_check_escalations" in typed context  [no-untyped-call]
                    await self._check_escalations()
                          ^~~~~~~~~~~~~~~~~~~~~~~~~
observability/incident_response.py:402: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _trigger_automated_response(self, incident: SecurityInci...
        ^
observability/incident_response.py:467: error: Argument 1 to "_block_ip" of
"IncidentResponseSystem" has incompatible type "str | None"; expected "str"
[arg-type]
                    await self._block_ip(incident.source_ip)
                                         ^~~~~~~~~~~~~~~~~~
observability/incident_response.py:481: error: Argument 1 to
"_apply_rate_limit" of "IncidentResponseSystem" has incompatible type
"str | None"; expected "str"  [arg-type]
                    await self._apply_rate_limit(incident.source_ip)
                                                 ^~~~~~~~~~~~~~~~~~
observability/incident_response.py:541: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _block_ip(self, ip: str):
        ^
observability/incident_response.py:556: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _suspend_user(self, user_id: str):
        ^
observability/incident_response.py:570: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _apply_rate_limit(self, ip: str):
        ^
observability/incident_response.py:575: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _alert_security_team(self, incident: SecurityIncident):
        ^
observability/incident_response.py:593: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _quarantine_host(self, host: str):
        ^
observability/incident_response.py:599: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _disable_endpoint(self, endpoint: str):
        ^
observability/incident_response.py:613: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _notify_management(self, incident: SecurityIncident):
        ^
observability/incident_response.py:620: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _escalate_incident(self, incident: SecurityIncident):
        ^
observability/incident_response.py:641: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _send_webhook_alert(
        ^
observability/incident_response.py:665: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _check_incident_status(self):
        ^
observability/incident_response.py:665: note: Use "-> None" if function does not return a value
observability/incident_response.py:679: error: Function is missing a return
type annotation  [no-untyped-def]
        async def _check_escalations(self):
        ^
observability/incident_response.py:679: note: Use "-> None" if function does not return a value
observability/incident_response.py:722: error: Unsupported target for indexed
assignment ("object")  [index]
                stats["by_severity"][severity_key] = (
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/incident_response.py:723: error: "object" has no attribute "get"
[attr-defined]
                    stats["by_severity"].get(severity_key, 0) + 1
                    ^~~~~~~~~~~~~~~~~~~~~~~~
observability/incident_response.py:728: error: Unsupported target for indexed
assignment ("object")  [index]
                stats["by_attack_type"][attack_type_key] = (
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/incident_response.py:729: error: "object" has no attribute "get"
[attr-defined]
                    stats["by_attack_type"].get(attack_type_key, 0) + 1
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/incident_response.py:734: error: Unsupported target for indexed
assignment ("object")  [index]
                stats["by_status"][status_key] = (
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/incident_response.py:735: error: "object" has no attribute "get"
[attr-defined]
                    stats["by_status"].get(status_key, 0) + 1
                    ^~~~~~~~~~~~~~~~~~~~~~
observability/incident_response.py:810: error: Call to untyped function
"IncidentResponseSystem" in typed context  [no-untyped-call]
    incident_response = IncidentResponseSystem()
                        ^~~~~~~~~~~~~~~~~~~~~~~~
observability/incident_response.py:813: error: Function is missing a return
type annotation  [no-untyped-def]
    async def start_incident_response():
    ^
observability/incident_response.py:813: note: Use "-> None" if function does not return a value
observability/incident_response.py:815: error: Call to untyped function
"start_monitoring" in typed context  [no-untyped-call]
        await incident_response.start_monitoring()
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/incident_response.py:818: error: Function is missing a return
type annotation  [no-untyped-def]
    async def stop_incident_response():
    ^
observability/incident_response.py:818: note: Use "-> None" if function does not return a value
observability/incident_response.py:820: error: Call to untyped function
"stop_monitoring" in typed context  [no-untyped-call]
        await incident_response.stop_monitoring()
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/cicd_integration.py:104: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
observability/cicd_integration.py:104: note: Use "-> None" if function does not return a value
observability/cicd_integration.py:107: error: Call to untyped function
"_setup_default_gates" in typed context  [no-untyped-call]
            self._setup_default_gates()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/cicd_integration.py:109: error: Function is missing a return type
annotation  [no-untyped-def]
        def _setup_default_gates(self):
        ^
observability/cicd_integration.py:109: note: Use "-> None" if function does not return a value
observability/cicd_integration.py:162: error: Function is missing a return type
annotation  [no-untyped-def]
        def add_gate(self, gate: PerformanceGate):
        ^
observability/cicd_integration.py:166: error: Function is missing a return type
annotation  [no-untyped-def]
        def remove_gate(self, name: str):
        ^
observability/cicd_integration.py:235: error: Returning Any from function
declared to return "float | None"  [no-any-return]
                    return performance_tracker.get_average_inference_time(...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/cicd_integration.py:235: error: "RealTimePerformanceTracker" has
no attribute "get_average_inference_time"  [attr-defined]
                    return performance_tracker.get_average_inference_time(...
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/cicd_integration.py:255: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
observability/cicd_integration.py:255: note: Use "-> None" if function does not return a value
observability/cicd_integration.py:257: error: Call to untyped function
"PerformanceGateManager" in typed context  [no-untyped-call]
            self.gate_manager = PerformanceGateManager()
                                ^~~~~~~~~~~~~~~~~~~~~~~~
observability/cicd_integration.py:268: error: Call to untyped function
"_setup_deployment_alerting" in typed context  [no-untyped-call]
            self._setup_deployment_alerting()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
observability/cicd_integration.py:272: error: Function is missing a return type
annotation  [no-untyped-def]
        def _setup_deployment_alerting(self):
        ^
observability/cicd_integration.py:272: note: Use "-> None" if function does not return a value
observability/cicd_integration.py:414: error: Function is missing a return type
annotation  [no-untyped-def]
        async def complete_deployment(self, deployment_id: str, success: b...
        ^
observability/cicd_integration.py:458: error: Function is missing a return type
annotation  [no-untyped-def]
        async def rollback_deployment(self, deployment_id: str, reason: st...
        ^
observability/cicd_integration.py:504: error: "RealTimePerformanceTracker" has
no attribute "get_average_inference_time"  [attr-defined]
                    "avg_inference_time": performance_tracker.get_average_...
                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
observability/cicd_integration.py:646: error: Function is missing a type
annotation  [no-untyped-def]
        def add_pre_deployment_hook(self, hook):
        ^
observability/cicd_integration.py:650: error: Function is missing a type
annotation  [no-untyped-def]
        def add_post_deployment_hook(self, hook):
        ^
observability/cicd_integration.py:654: error: Function is missing a type
annotation  [no-untyped-def]
        def add_rollback_hook(self, hook):
        ^
observability/cicd_integration.py:710: error: Function is missing a return type
annotation  [no-untyped-def]
    async def run_performance_gates():
    ^
observability/cicd_integration.py:710: note: Use "-> None" if function does not return a value
observability/cicd_integration.py:712: error: Call to untyped function
"CICDIntegration" in typed context  [no-untyped-call]
        cicd = CICDIntegration()
               ^~~~~~~~~~~~~~~~~
observability/cicd_integration.py:771: error: Function is missing a return type
annotation  [no-untyped-def]
    async def start_deployment_endpoint(request: StartDeploymentRequest):
    ^
observability/cicd_integration.py:773: error: Call to untyped function
"CICDIntegration" in typed context  [no-untyped-call]
        cicd = CICDIntegration()
               ^~~~~~~~~~~~~~~~~
observability/cicd_integration.py:781: error: Function is missing a return type
annotation  [no-untyped-def]
    async def validate_deployment_endpoint(deployment_id: str):
    ^
observability/cicd_integration.py:783: error: Call to untyped function
"CICDIntegration" in typed context  [no-untyped-call]
        cicd = CICDIntegration()
               ^~~~~~~~~~~~~~~~~
observability/cicd_integration.py:794: error: Function is missing a return type
annotation  [no-untyped-def]
    async def complete_deployment_endpoint(request: CompleteDeploymentRequ...
    ^
observability/cicd_integration.py:796: error: Call to untyped function
"CICDIntegration" in typed context  [no-untyped-call]
        cicd = CICDIntegration()
               ^~~~~~~~~~~~~~~~~
observability/cicd_integration.py:802: error: Function is missing a return type
annotation  [no-untyped-def]
    async def rollback_deployment_endpoint(request: RollbackDeploymentRequ...
    ^
observability/cicd_integration.py:804: error: Call to untyped function
"CICDIntegration" in typed context  [no-untyped-call]
        cicd = CICDIntegration()
               ^~~~~~~~~~~~~~~~~
observability/cicd_integration.py:810: error: Function is missing a return type
annotation  [no-untyped-def]
    async def get_deployment_history(limit: int = 20):
    ^
observability/cicd_integration.py:812: error: Call to untyped function
"CICDIntegration" in typed context  [no-untyped-call]
        cicd = CICDIntegration()
               ^~~~~~~~~~~~~~~~~
observability/cicd_integration.py:817: error: Function is missing a return type
annotation  [no-untyped-def]
    async def get_deployment_statistics():
    ^
observability/cicd_integration.py:819: error: Call to untyped function
"CICDIntegration" in typed context  [no-untyped-call]
        cicd = CICDIntegration()
               ^~~~~~~~~~~~~~~~~
observability/cicd_integration.py:824: error: Function is missing a return type
annotation  [no-untyped-def]
    async def get_performance_gates():
    ^
observability/cicd_integration.py:826: error: Call to untyped function
"CICDIntegration" in typed context  [no-untyped-call]
        cicd = CICDIntegration()
               ^~~~~~~~~~~~~~~~~
observability/cicd_integration.py:848: error: Call to untyped function
"CICDIntegration" in typed context  [no-untyped-call]
    cicd_integration = CICDIntegration()
                       ^~~~~~~~~~~~~~~~~
observability/cicd_integration.py:856: error: Call to untyped function
"run_performance_gates" in typed context  [no-untyped-call]
            asyncio.run(run_performance_gates())
                        ^~~~~~~~~~~~~~~~~~~~~~~
knowledge_graph/entity_node_mapper.py:83: error: Function is missing a return
type annotation  [no-untyped-def]
        def __init__(self):
        ^
knowledge_graph/entity_node_mapper.py:83: note: Use "-> None" if function does not return a value
knowledge_graph/entity_node_mapper.py:104: error: Missing type parameters for
generic type "Dict"  [type-arg]
            self, name: str, context: Optional[Dict] = None
                                               ^
knowledge_graph/entity_node_mapper.py:243: error: Function is missing a type
annotation  [no-untyped-def]
        async def update_from_conversation(self, conversation, message):
        ^
auth/resource_access_control.py:307: error: Function is missing a return type
annotation  [no-untyped-def]
    def require_resource_access(
    ^
auth/resource_access_control.py:310: error: Incompatible default for argument
"resource_id_param" (default has type "None", argument has type "str")
[assignment]
        resource_id_param: str = None,
                                 ^~~~
auth/resource_access_control.py:310: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
auth/resource_access_control.py:310: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
auth/resource_access_control.py:323: error: Missing type parameters for generic
type "Callable"  [type-arg]
        def decorator(func: Callable) -> Callable:
                            ^
auth/resource_access_control.py:325: error: Function is missing a type
annotation  [no-untyped-def]
            async def wrapper(*args, **kwargs):
            ^
auth/resource_access_control.py:368: error: Argument 4 to
"validate_agent_access" of "ResourceAccessValidator" has incompatible type
"Any | None"; expected "Session"  [arg-type]
    ...                        current_user, resource_id, action, db, request
                                                                  ^~
auth/resource_access_control.py:508: error: Function is missing a return type
annotation  [no-untyped-def]
    def require_ownership(
    ^
auth/resource_access_control.py:522: error: Missing type parameters for generic
type "Callable"  [type-arg]
        def decorator(func: Callable) -> Callable:
                            ^
auth/resource_access_control.py:524: error: Function is missing a type
annotation  [no-untyped-def]
            async def wrapper(*args, **kwargs):
            ^
auth/resource_access_control.py:623: error: Function is missing a return type
annotation  [no-untyped-def]
    def require_department_access(
    ^
auth/resource_access_control.py:634: error: Missing type parameters for generic
type "Callable"  [type-arg]
        def decorator(func: Callable) -> Callable:
                            ^
auth/resource_access_control.py:636: error: Function is missing a type
annotation  [no-untyped-def]
            async def wrapper(*args, **kwargs):
            ^
auth/ml_threat_detection.py:137: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
auth/ml_threat_detection.py:278: error: Need type annotation for "requests"
[var-annotated]
            for requests in [
            ^
auth/ml_threat_detection.py:296: error: Need type annotation for "requests"
[var-annotated]
            for requests in [
            ^
auth/ml_threat_detection.py:312: error: Need type annotation for "requests"
[var-annotated]
            for requests in [
            ^
auth/ml_threat_detection.py:331: error: Need type annotation for "requests"
[var-annotated]
            for requests in [
            ^
auth/ml_threat_detection.py:355: error: Need type annotation for "requests"
[var-annotated]
            for requests in [
            ^
auth/ml_threat_detection.py:375: error: Need type annotation for "requests"
[var-annotated]
            for requests in [
            ^
auth/ml_threat_detection.py:455: error: Need type annotation for "requests"
[var-annotated]
            for requests in [
            ^
auth/ml_threat_detection.py:485: error: Need type annotation for "requests"
[var-annotated]
            for requests in [
            ^
auth/ml_threat_detection.py:509: error: Need type annotation for "requests"
[var-annotated]
            for requests in [
            ^
auth/ml_threat_detection.py:537: error: Need type annotation for "requests"
[var-annotated]
            for requests in [
            ^
auth/ml_threat_detection.py:562: error: Need type annotation for "requests"
[var-annotated]
            for requests in [
            ^
auth/ml_threat_detection.py:643: error: Call to untyped function
"FeatureExtractor" in typed context  [no-untyped-call]
            self.feature_extractor = FeatureExtractor()
                                     ^~~~~~~~~~~~~~~~~~
auth/ml_threat_detection.py:658: error: Need type annotation for
"prediction_times"  [var-annotated]
            self.prediction_times = deque(maxlen=1000)
                                    ^~~~~~~~~~~~~~~~~~
auth/ml_threat_detection.py:659: error: Need type annotation for
"recent_predictions"  [var-annotated]
            self.recent_predictions = deque(maxlen=10000)
                                      ^~~~~~~~~~~~~~~~~~~
auth/ml_threat_detection.py:662: error: Call to untyped function "_load_model"
in typed context  [no-untyped-call]
            self._load_model()
            ^~~~~~~~~~~~~~~~~~
auth/ml_threat_detection.py:693: error: Call to untyped function "_save_model"
in typed context  [no-untyped-call]
                self._save_model()
                ^~~~~~~~~~~~~~~~~~
auth/ml_threat_detection.py:902: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _log_high_risk_prediction(
        ^
auth/ml_threat_detection.py:908: error: "type[SecurityEventSeverity]" has no
attribute "HIGH"  [attr-defined]
                severity=SecurityEventSeverity.HIGH,
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~
auth/ml_threat_detection.py:924: error: Function is missing a return type
annotation  [no-untyped-def]
        def _save_model(self):
        ^
auth/ml_threat_detection.py:924: note: Use "-> None" if function does not return a value
auth/ml_threat_detection.py:933: error: Function is missing a return type
annotation  [no-untyped-def]
        def _load_model(self):
        ^
auth/ml_threat_detection.py:933: note: Use "-> None" if function does not return a value
auth/ml_threat_detection.py:979: error: Function is missing a return type
annotation  [no-untyped-def]
        def update_user_baseline(self, user_id: str, request_data: Dict[st...
        ^
auth/ml_threat_detection.py:1037: error: Call to untyped function
"SecurityMonitoringSystem" in typed context  [no-untyped-call]
            security_monitor = SecurityMonitoringSystem()
                               ^~~~~~~~~~~~~~~~~~~~~~~~~~
auth/mfa_service.py:42: error: Variable "auth.mfa_service.Base" is not valid as
a type  [valid-type]
    class MFASettings(Base):
                      ^
auth/mfa_service.py:42: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
auth/mfa_service.py:42: error: Invalid base class "Base"  [misc]
    class MFASettings(Base):
                      ^
auth/mfa_service.py:60: error: Function is missing a type annotation
[no-untyped-def]
        def __repr__(self):
        ^
auth/mfa_service.py:72: error: Function is missing a type annotation
[no-untyped-def]
        def validate_method(cls, v):
        ^
auth/mfa_service.py:86: error: Missing type parameters for generic type "Dict"
[type-arg]
        hardware_key_response: Optional[Dict] = None
                                        ^
auth/mfa_service.py:198: error: Incompatible types in assignment (expression
has type "None", variable has type "Column[datetime]")  [assignment]
                mfa_settings.locked_until = None
                                            ^~~~
auth/mfa_service.py:199: error: Incompatible types in assignment (expression
has type "int", variable has type "Column[int]")  [assignment]
                mfa_settings.failed_attempts = 0
                                               ^
auth/mfa_service.py:202: error: Incompatible return value type (got
"ColumnElement[bool]", expected "bool")  [return-value]
            return mfa_settings.failed_attempts < self.max_failed_attempts
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
auth/mfa_service.py:211: error: Incompatible types in assignment (expression
has type "ColumnElement[int]", variable has type "Column[int]")  [assignment]
                mfa_settings.failed_attempts += 1
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
auth/mfa_service.py:215: error: Incompatible types in assignment (expression
has type "datetime", variable has type "Column[datetime]")  [assignment]
                        datetime.utcnow() + self.lockout_duration
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
auth/mfa_service.py:239: error: Incompatible types in assignment (expression
has type "int", variable has type "Column[int]")  [assignment]
                mfa_settings.failed_attempts = 0
                                               ^
auth/mfa_service.py:240: error: Incompatible types in assignment (expression
has type "None", variable has type "Column[datetime]")  [assignment]
                mfa_settings.locked_until = None
                                            ^~~~
auth/mfa_service.py:241: error: Incompatible types in assignment (expression
has type "datetime", variable has type "Column[datetime]")  [assignment]
                mfa_settings.last_used = datetime.utcnow()
                                         ^~~~~~~~~~~~~~~~~
auth/mfa_service.py:313: error: Unused "type: ignore" comment  [unused-ignore]
            qr = qrcode.QRCode(  # type: ignore[attr-defined]
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
auth/mfa_service.py:349: error: Incompatible types in assignment (expression
has type "str", variable has type "Column[str]")  [assignment]
                mfa_settings.totp_secret = encrypted_secret
                                           ^~~~~~~~~~~~~~~~
auth/mfa_service.py:350: error: Incompatible types in assignment (expression
has type "str", variable has type "Column[str]")  [assignment]
                mfa_settings.backup_codes = encrypted_backup_codes
                                            ^~~~~~~~~~~~~~~~~~~~~~
auth/mfa_service.py:365: error: Unused "type: ignore" comment  [unused-ignore]
                severity=SecurityEventSeverity.INFO,  # type: ignore[attr-...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
auth/mfa_service.py:424: error: Argument 2 to "_verify_backup_code" of
"MFAService" has incompatible type "str | None"; expected "str"  [arg-type]
                        mfa_settings, request.backup_code
                                      ^~~~~~~~~~~~~~~~~~~
auth/mfa_service.py:438: error: Incompatible types in assignment (expression
has type "bool", variable has type "Column[bool]")  [assignment]
                        mfa_settings.is_enabled = True
                                                  ^~~~
auth/mfa_service.py:444: error: Unused "type: ignore" comment  [unused-ignore]
                        severity=SecurityEventSeverity.INFO,  # type: igno...
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
auth/mfa_service.py:476: error: "type[SecurityEventSeverity]" has no attribute
"HIGH"  [attr-defined]
                    severity=SecurityEventSeverity.HIGH,
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~
auth/mfa_service.py:496: error: Argument 1 to "_decrypt_secret" of "MFAService"
has incompatible type "Column[str]"; expected "str"  [arg-type]
                secret = self._decrypt_secret(mfa_settings.totp_secret)
                                              ^~~~~~~~~~~~~~~~~~~~~~~~
auth/mfa_service.py:519: error: Argument 1 to "_decrypt_secret" of "MFAService"
has incompatible type "Column[str]"; expected "str"  [arg-type]
    ...          encrypted_codes = self._decrypt_secret(mfa_settings.backup_c...
                                                        ^~~~~~~~~~~~~~~~~~~~~...
auth/mfa_service.py:534: error: Incompatible types in assignment (expression
has type "str", variable has type "Column[str]")  [assignment]
                    mfa_settings.backup_codes = self._encrypt_secret(
                                                ^
auth/mfa_service.py:568: error: Incompatible types in assignment (expression
has type "bool", variable has type "Column[bool]")  [assignment]
                mfa_settings.is_enabled = False
                                          ^~~~~
auth/mfa_service.py:569: error: Incompatible types in assignment (expression
has type "None", variable has type "Column[str]")  [assignment]
                mfa_settings.totp_secret = None
                                           ^~~~
auth/mfa_service.py:570: error: Incompatible types in assignment (expression
has type "None", variable has type "Column[str]")  [assignment]
                mfa_settings.backup_codes = None
                                            ^~~~
auth/mfa_service.py:571: error: Incompatible types in assignment (expression
has type "None", variable has type "Column[str]")  [assignment]
                mfa_settings.hardware_keys = None
                                             ^~~~
auth/mfa_service.py:572: error: Incompatible types in assignment (expression
has type "int", variable has type "Column[int]")  [assignment]
                mfa_settings.failed_attempts = 0
                                               ^
auth/mfa_service.py:573: error: Incompatible types in assignment (expression
has type "None", variable has type "Column[datetime]")  [assignment]
                mfa_settings.locked_until = None
                                            ^~~~
auth/mfa_service.py:592: error: Missing type parameters for generic type "Dict"
 [type-arg]
        async def get_mfa_status(self, user_id: str) -> Dict:
                                                        ^
auth/mfa_service.py:619: error: Argument 1 to "_decrypt_secret" of "MFAService"
has incompatible type "Column[str]"; expected "str"  [arg-type]
                        mfa_settings.backup_codes
                        ^~~~~~~~~~~~~~~~~~~~~~~~~
auth/mfa_service.py:675: error: Incompatible types in assignment (expression
has type "str", variable has type "Column[str]")  [assignment]
                mfa_settings.backup_codes = self._encrypt_secret(
                                            ^
auth/mfa_service.py:683: error: Unused "type: ignore" comment  [unused-ignore]
                    severity=SecurityEventSeverity.INFO,  # type: ignore[a...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
api/v1/websocket.py:34: error: Function is missing a type annotation
[no-untyped-def]
        def validate_type(cls, v):
        ^
api/v1/websocket.py:41: error: Function is missing a type annotation
[no-untyped-def]
        def validate_data(cls, v):
        ^
api/v1/websocket.py:52: error: Function is missing a return type annotation
[no-untyped-def]
        def __init__(self):
        ^
api/v1/websocket.py:52: note: Use "-> None" if function does not return a value
api/v1/websocket.py:59: error: Missing type parameters for generic type "dict"
[type-arg]
            self.connection_metadata: Dict[str, dict] = {}
                                                ^
api/v1/websocket.py:61: error: Function is missing a return type annotation
[no-untyped-def]
        async def connect(
        ^
api/v1/websocket.py:65: error: Missing type parameters for generic type "dict"
[type-arg]
            metadata: Optional[dict] = None,
                               ^
api/v1/websocket.py:86: error: Function is missing a return type annotation
[no-untyped-def]
        def disconnect(self, client_id: str):
        ^
api/v1/websocket.py:98: error: Function is missing a return type annotation
[no-untyped-def]
        async def send_personal_message(self, message: dict, client_id: st...
        ^
api/v1/websocket.py:98: error: Missing type parameters for generic type "dict"
[type-arg]
    ...  async def send_personal_message(self, message: dict, client_id: str)...
                                                        ^
api/v1/websocket.py:108: error: Function is missing a return type annotation
[no-untyped-def]
        async def broadcast(self, message: dict, event_type: Optional[str]...
        ^
api/v1/websocket.py:108: error: Missing type parameters for generic type "dict"
 [type-arg]
        async def broadcast(self, message: dict, event_type: Optional[str]...
                                           ^
api/v1/websocket.py:126: error: Function is missing a return type annotation
[no-untyped-def]
        def subscribe(self, client_id: str, event_type: str):
        ^
api/v1/websocket.py:133: error: Function is missing a return type annotation
[no-untyped-def]
        def unsubscribe(self, client_id: str, event_type: str):
        ^
api/v1/websocket.py:141: error: Call to untyped function "ConnectionManager" in
typed context  [no-untyped-call]
    manager = ConnectionManager()
              ^~~~~~~~~~~~~~~~~~~
api/v1/websocket.py:145: error: Function is missing a return type annotation
[no-untyped-def]
    async def websocket_endpoint(
    ^
api/v1/websocket.py:221: error: Argument "type" to "WebSocketMessage" has
incompatible type "Any | None"; expected "str"  [arg-type]
                            type=message.get("type"), data=message.get("da...
                                 ^~~~~~~~~~~~~~~~~~~
api/v1/websocket.py:305: error: Function is missing a return type annotation
[no-untyped-def]
    async def heartbeat_handler(websocket: WebSocket, client_id: str):
    ^
api/v1/websocket.py:324: error: Function is missing a return type annotation
[no-untyped-def]
    async def handle_client_message_with_auth(client_id: str, message: dic...
    ^
api/v1/websocket.py:324: error: Missing type parameters for generic type "dict"
 [type-arg]
    ...nc def handle_client_message_with_auth(client_id: str, message: dict):
                                                                       ^
api/v1/websocket.py:441: error: Function is missing a return type annotation
[no-untyped-def]
    async def handle_agent_command(client_id: str, command_data: dict):
    ^
api/v1/websocket.py:441: error: Missing type parameters for generic type "dict"
 [type-arg]
    async def handle_agent_command(client_id: str, command_data: dict):
                                                                 ^
api/v1/websocket.py:504: error: Function is missing a return type annotation
[no-untyped-def]
    async def handle_query(client_id: str, query_data: dict):
    ^
api/v1/websocket.py:504: error: Missing type parameters for generic type "dict"
 [type-arg]
    async def handle_query(client_id: str, query_data: dict):
                                                       ^
api/v1/websocket.py:542: error: Function is missing a return type annotation
[no-untyped-def]
    async def broadcast_agent_event(agent_id: str, event_type: str, data: ...
    ^
api/v1/websocket.py:542: error: Missing type parameters for generic type "dict"
 [type-arg]
    ...def broadcast_agent_event(agent_id: str, event_type: str, data: dict):
                                                                       ^
api/v1/websocket.py:554: error: Function is missing a return type annotation
[no-untyped-def]
    async def broadcast_world_event(event_type: str, data: dict):
    ^
api/v1/websocket.py:554: error: Missing type parameters for generic type "dict"
 [type-arg]
    async def broadcast_world_event(event_type: str, data: dict):
                                                           ^
api/v1/websocket.py:565: error: Function is missing a return type annotation
[no-untyped-def]
    async def broadcast_system_event(event_type: str, data: dict):
    ^
api/v1/websocket.py:565: error: Missing type parameters for generic type "dict"
 [type-arg]
    async def broadcast_system_event(event_type: str, data: dict):
                                                            ^
api/v1/websocket.py:578: error: Function is missing a return type annotation
[no-untyped-def]
    async def get_active_connections():
    ^
api/v1/websocket.py:603: error: Function is missing a return type annotation
[no-untyped-def]
    async def get_subscriptions():
    ^
api/v1/graphql_schema.py:14: error: Incompatible types in assignment
(expression has type "None", variable has type Module)  [assignment]
        strawberry = None
                     ^~~~
api/v1/graphql_schema.py:160: error: Function is missing a return type
annotation  [no-untyped-def]
    def _create_graphql_types():
    ^
api/v1/graphql_schema.py:172: error: Function is missing a return type
annotation  [no-untyped-def]
    def _create_graphql_input_types():
    ^
api/v1/graphql_schema.py:177: error: Function is missing a return type
annotation  [no-untyped-def]
    def _create_query_resolvers(
    ^
api/v1/graphql_schema.py:189: error: Variable "Agent" is not valid as a type
[valid-type]
            ) -> List[Agent]:
                      ^
api/v1/graphql_schema.py:189: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
api/v1/graphql_schema.py:221: error: Variable "Agent" is not valid as a type
[valid-type]
            def agent(self, id: str) -> Optional[Agent]:
                                                 ^
api/v1/graphql_schema.py:221: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
api/v1/graphql_schema.py:225: error: Returning Any from function declared to
return "Agent? | None"  [no-any-return]
                    return Agent(
                    ^
api/v1/graphql_schema.py:240: error: Variable "Coalition" is not valid as a
type  [valid-type]
            ) -> List[Coalition]:
                      ^
api/v1/graphql_schema.py:240: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
api/v1/graphql_schema.py:266: error: Variable "Coalition" is not valid as a
type  [valid-type]
            def coalition(self, id: str) -> Optional[Coalition]:
                                                     ^
api/v1/graphql_schema.py:266: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
api/v1/graphql_schema.py:270: error: Returning Any from function declared to
return "Coalition? | None"  [no-any-return]
                    return Coalition(
                    ^
api/v1/graphql_schema.py:287: error: Variable "Objective" is not valid as a
type  [valid-type]
            ) -> List[Objective]:
                      ^
api/v1/graphql_schema.py:287: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
api/v1/graphql_schema.py:319: error: Variable "WorldState" is not valid as a
type  [valid-type]
            def world_state(self) -> Optional[WorldState]:
                                              ^
api/v1/graphql_schema.py:319: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
api/v1/graphql_schema.py:322: error: Returning Any from function declared to
return "WorldState? | None"  [no-any-return]
                return WorldState(
                ^
api/v1/graphql_schema.py:330: error: Variable "SystemMetrics" is not valid as a
type  [valid-type]
            def system_metrics(self) -> SystemMetrics:
                                        ^
api/v1/graphql_schema.py:330: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
api/v1/graphql_schema.py:333: error: Returning Any from function declared to
return SystemMetrics?  [no-any-return]
                return SystemMetrics(
                ^
api/v1/graphql_schema.py:346: error: Variable "Agent" is not valid as a type
[valid-type]
            ) -> List[Agent]:
                      ^
api/v1/graphql_schema.py:346: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
api/v1/graphql_schema.py:349: error: Missing positional argument "resolver" in
call to "__call__" of "StrawberryField"  [call-arg]
                all_agents = self.agents()
                             ^~~~~~~~~~~~~
api/v1/graphql_schema.py:353: error: "StrawberryField" has no attribute
"__iter__" (not iterable)  [attr-defined]
                    a for a in all_agents if query.lower() in a.name.lower...
                               ^~~~~~~~~~
api/v1/graphql_schema.py:369: error: Function is missing a return type
annotation  [no-untyped-def]
    def _create_mutation_resolvers(
    ^
api/v1/graphql_schema.py:386: error: Variable "AgentInput" is not valid as a
type  [valid-type]
            def create_agent(self, input: AgentInput) -> Agent:
                                          ^
api/v1/graphql_schema.py:386: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
api/v1/graphql_schema.py:386: error: Variable "Agent" is not valid as a type
[valid-type]
            def create_agent(self, input: AgentInput) -> Agent:
                                                         ^
api/v1/graphql_schema.py:389: error: Returning Any from function declared to
return Agent?  [no-any-return]
                return Agent(
                ^
api/v1/graphql_schema.py:391: error: AgentInput? has no attribute "name"
[attr-defined]
                    name=input.name,
                         ^~~~~~~~~~
api/v1/graphql_schema.py:403: error: Variable "Agent" is not valid as a type
[valid-type]
            ) -> Optional[Agent]:
                          ^
api/v1/graphql_schema.py:403: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
api/v1/graphql_schema.py:407: error: Returning Any from function declared to
return "Agent? | None"  [no-any-return]
                    return Agent(
                    ^
api/v1/graphql_schema.py:420: error: Variable "CoalitionInput" is not valid as
a type  [valid-type]
            def create_coalition(self, input: CoalitionInput) -> Coalition...
                                              ^
api/v1/graphql_schema.py:420: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
api/v1/graphql_schema.py:420: error: Variable "Coalition" is not valid as a
type  [valid-type]
    ...       def create_coalition(self, input: CoalitionInput) -> Coalition:
                                                                   ^
api/v1/graphql_schema.py:423: error: Returning Any from function declared to
return Coalition?  [no-any-return]
                return Coalition(
                ^
api/v1/graphql_schema.py:425: error: CoalitionInput? has no attribute "name"
[attr-defined]
                    name=input.name,
                         ^~~~~~~~~~
api/v1/graphql_schema.py:429: error: CoalitionInput? has no attribute
"objective_ids"  [attr-defined]
                    objectives_count=len(input.objective_ids),
                                         ^~~~~~~~~~~~~~~~~~~
api/v1/graphql_schema.py:439: error: Variable "Coalition" is not valid as a
type  [valid-type]
            ) -> Optional[Coalition]:
                          ^
api/v1/graphql_schema.py:439: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
api/v1/graphql_schema.py:443: error: Returning Any from function declared to
return "Coalition? | None"  [no-any-return]
                    return Coalition(
                    ^
api/v1/graphql_schema.py:458: error: Variable "ObjectiveInput" is not valid as
a type  [valid-type]
            def create_objective(self, input: ObjectiveInput) -> Objective...
                                              ^
api/v1/graphql_schema.py:458: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
api/v1/graphql_schema.py:458: error: Variable "Objective" is not valid as a
type  [valid-type]
    ...       def create_objective(self, input: ObjectiveInput) -> Objective:
                                                                   ^
api/v1/graphql_schema.py:461: error: Returning Any from function declared to
return Objective?  [no-any-return]
                return Objective(
                ^
api/v1/graphql_schema.py:463: error: ObjectiveInput? has no attribute
"description"  [attr-defined]
                    description=input.description,
                                ^~~~~~~~~~~~~~~~~
api/v1/graphql_schema.py:464: error: ObjectiveInput? has no attribute
"priority"  [attr-defined]
                    priority=input.priority,
                             ^~~~~~~~~~~~~~
api/v1/graphql_schema.py:467: error: ObjectiveInput? has no attribute
"required_capabilities"  [attr-defined]
                    required_capabilities=input.required_capabilities,
                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/graphql_schema.py:468: error: ObjectiveInput? has no attribute
"deadline"  [attr-defined]
                    deadline=input.deadline,
                             ^~~~~~~~~~~~~~
api/v1/graphql_schema.py:474: error: Variable "Objective" is not valid as a
type  [valid-type]
            ) -> Optional[Objective]:
                          ^
api/v1/graphql_schema.py:474: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
api/v1/graphql_schema.py:478: error: Returning Any from function declared to
return "Objective? | None"  [no-any-return]
                    return Objective(
                    ^
api/v1/graphql_schema.py:490: error: Variable "InferenceInput" is not valid as
a type  [valid-type]
            def perform_inference(self, input: InferenceInput) -> Inferenc...
                                               ^
api/v1/graphql_schema.py:490: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
api/v1/graphql_schema.py:490: error: Variable "InferenceResult" is not valid as
a type  [valid-type]
    ...def perform_inference(self, input: InferenceInput) -> InferenceResult:
                                                             ^
api/v1/graphql_schema.py:493: error: Returning Any from function declared to
return InferenceResult?  [no-any-return]
                return InferenceResult(
                ^
api/v1/graphql_schema.py:494: error: InferenceInput? has no attribute
"agent_id"  [attr-defined]
                    agent_id=input.agent_id or "default_agent",
                             ^~~~~~~~~~~~~~
api/v1/graphql_schema.py:495: error: InferenceInput? has no attribute
"input_text"  [attr-defined]
                    input_text=input.input_text,
                               ^~~~~~~~~~~~~~~~
api/v1/graphql_schema.py:496: error: InferenceInput? has no attribute
"input_text"  [attr-defined]
                    output_text=f"Processed: {input.input_text[:50]}...",
                                              ^~~~~~~~~~~~~~~~
api/v1/graphql_schema.py:505: error: Function is missing a return type
annotation  [no-untyped-def]
    def _create_subscription_resolvers(Agent: Type[Any], Coalition: Type[A...
    ^
api/v1/graphql_schema.py:513: error: Function is missing a return type
annotation  [no-untyped-def]
            async def agent_updates(self, agent_id: Optional[str] = None):
            ^
api/v1/graphql_schema.py:532: error: Function is missing a return type
annotation  [no-untyped-def]
            async def coalition_updates(self, coalition_id: Optional[str] ...
            ^
api/v1/graphql_schema.py:552: error: Function is missing a return type
annotation  [no-untyped-def]
            async def system_metrics_stream(self):
            ^
api/v1/graphql_schema.py:571: error: Function is missing a return type
annotation  [no-untyped-def]
    def _create_graphql_schema_and_router():
    ^
api/v1/graphql_schema.py:584: error: Call to untyped function
"_create_graphql_types" in typed context  [no-untyped-call]
        ) = _create_graphql_types()
            ^~~~~~~~~~~~~~~~~~~~~~~
api/v1/graphql_schema.py:590: error: Call to untyped function
"_create_graphql_input_types" in typed context  [no-untyped-call]
        ) = _create_graphql_input_types()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/graphql_schema.py:622: error: Call to untyped function
"_create_graphql_schema_and_router" in typed context  [no-untyped-call]
        graphql_app = _create_graphql_schema_and_router()
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/graphql_schema.py:635: error: Function is missing a return type
annotation  [no-untyped-def]
        async def graphql_unavailable():
        ^
api/v1/auth.py:66: error: Untyped decorator makes function "register_user"
untyped  [misc]
    @rate_limit(
     ^
api/v1/auth.py:69: error: Function is missing a return type annotation
[no-untyped-def]
    async def register_user(
    ^
api/v1/auth.py:149: error: Untyped decorator makes function "login_user"
untyped  [misc]
    @rate_limit(max_requests=10, window_minutes=5)  # Rate limit login att...
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/auth.py:150: error: Function is missing a return type annotation
[no-untyped-def]
    async def login_user(
    ^
api/v1/auth.py:216: error: Function is missing a return type annotation
[no-untyped-def]
    async def get_current_user_info(
    ^
api/v1/auth.py:230: error: Untyped decorator makes function "logout_user"
untyped  [misc]
    @require_csrf_token
     ^~~~~~~~~~~~~~~~~~
api/v1/auth.py:231: error: Function is missing a return type annotation
[no-untyped-def]
    async def logout_user(
    ^
api/v1/auth.py:246: error: Argument 1 to "logout" of "AuthenticationManager"
has incompatible type "str | None"; expected "str"  [arg-type]
        auth_manager.logout(token, user_id=current_user.user_id)
                            ^~~~~
api/v1/auth.py:267: error: Untyped decorator makes function "refresh_token"
untyped  [misc]
    @rate_limit(max_requests=5, window_minutes=1)  # Rate limit refresh at...
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/auth.py:268: error: Function is missing a return type annotation
[no-untyped-def]
    async def refresh_token(
    ^
api/v1/auth.py:314: error: Function is missing a return type annotation
[no-untyped-def]
    async def get_user_permissions(
    ^
api/v1/auth.py:333: error: Function is missing a return type annotation
[no-untyped-def]
    async def get_csrf_token(
    ^
api/v1/admin.py:58: error: Unexpected keyword argument "regex" for "Field"
[call-arg]
        email: str = Field(..., regex=r"^[^\s@]+@[^\s@]+\.[^\s@]+$")
                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
venv/lib/python3.12/site-packages/pydantic/fields.py:685: note: "Field" defined here
api/v1/admin.py:66: error: Unexpected keyword argument "regex" for "Field"
[call-arg]
        email: Optional[str] = Field(None, regex=r"^[^\s@]+@[^\s@]+\.[^\s@]+$")
                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
venv/lib/python3.12/site-packages/pydantic/fields.py:685: note: "Field" defined here
api/v1/admin.py:121: error: Untyped decorator makes function "list_users"
untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/admin.py:159: error: Untyped decorator makes function "create_user"
untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/admin.py:213: error: Untyped decorator makes function "get_user" untyped
 [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/admin.py:238: error: Untyped decorator makes function "update_user"
untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/admin.py:266: error: "type[SecurityEventType]" has no attribute
"USER_UPDATED"  [attr-defined]
            SecurityEventType.USER_UPDATED,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/admin.py:289: error: Untyped decorator makes function "delete_user"
untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/admin.py:319: error: "type[SecurityEventType]" has no attribute
"USER_DEACTIVATED"  [attr-defined]
            SecurityEventType.USER_DEACTIVATED,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/admin.py:335: error: Untyped decorator makes function
"request_role_change" untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/admin.py:369: error: Argument "target_username" to
"request_role_assignment" of "EnhancedRBACManager" has incompatible type
"Any | None"; expected "str"  [arg-type]
            target_username=target_username,
                            ^~~~~~~~~~~~~~~
api/v1/admin.py:385: error: Untyped decorator makes function
"get_role_requests" untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/admin.py:433: error: Untyped decorator makes function
"approve_role_request" untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/admin.py:456: error: Untyped decorator makes function
"reject_role_request" untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/admin.py:480: error: Untyped decorator makes function
"get_permissions_overview" untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/admin.py:507: error: Untyped decorator makes function "list_abac_rules"
untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/admin.py:553: error: Untyped decorator makes function "create_abac_rule"
untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/admin.py:607: error: Untyped decorator makes function "update_abac_rule"
untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/admin.py:665: error: Untyped decorator makes function "delete_abac_rule"
untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/admin.py:700: error: Untyped decorator makes function
"get_access_audit_log" untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/admin.py:734: error: Untyped decorator makes function
"generate_audit_report" untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/admin.py:743: error: Untyped decorator makes function
"test_access_control" untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/admin.py:818: error: Untyped decorator makes function
"expire_old_requests" untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/admin.py:846: error: Untyped decorator makes function "get_rbac_stats"
untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/base_agent.py:34: error: Function is missing a type annotation
[no-untyped-def]
    def safe_array_to_int(value):
    ^
agents/base_agent.py:109: error: Function is missing a return type annotation
[no-untyped-def]
        def monitor_pymdp_inference(agent_id: str):
        ^
agents/base_agent.py:119: error: Function is missing a type annotation
[no-untyped-def]
            def decorator(func):
            ^
agents/base_agent.py:124: error: Function is missing a return type annotation
[no-untyped-def]
        async def record_belief_update(
        ^
agents/base_agent.py:124: error: All conditional function variants must have
identical signatures  [misc]
        async def record_belief_update(
        ^
agents/base_agent.py:124: note: Original:
agents/base_agent.py:124: note:     def record_belief_update(agent_id: str, beliefs_before: dict[Any, Any], beliefs_after: dict[Any, Any], free_energy: float | None = ...) -> Coroutine[Any, Any, None]
agents/base_agent.py:124: note: Redefinition:
agents/base_agent.py:124: note:     def record_belief_update(agent_id: str, beliefs_before: dict[Any, Any], beliefs_after: dict[Any, Any], free_energy: float = ...) -> Coroutine[Any, Any, Any]
agents/base_agent.py:126: error: Missing type parameters for generic type
"dict"  [type-arg]
            beliefs_before: dict,
                            ^
agents/base_agent.py:127: error: Missing type parameters for generic type
"dict"  [type-arg]
            beliefs_after: dict,
                           ^
agents/base_agent.py:128: error: Incompatible default for argument
"free_energy" (default has type "None", argument has type "float")  [assignment]
            free_energy: float = None,
                                 ^~~~
agents/base_agent.py:128: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
agents/base_agent.py:128: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
agents/base_agent.py:140: error: Function is missing a return type annotation
[no-untyped-def]
        async def record_agent_lifecycle_event(
        ^
agents/base_agent.py:140: error: All conditional function variants must have
identical signatures  [misc]
        async def record_agent_lifecycle_event(
        ^
agents/base_agent.py:140: note: Original:
agents/base_agent.py:140: note:     def record_agent_lifecycle_event(agent_id: str, event: str, metadata: dict[str, Any] | None = ...) -> Coroutine[Any, Any, None]
agents/base_agent.py:140: note: Redefinition:
agents/base_agent.py:140: note:     def record_agent_lifecycle_event(agent_id: str, event: str, metadata: dict[str, Any] = ...) -> Coroutine[Any, Any, Any]
agents/base_agent.py:141: error: Incompatible default for argument "metadata"
(default has type "None", argument has type "dict[str, Any]")  [assignment]
            agent_id: str, event: str, metadata: Dict[str, Any] = None
                                                                  ^~~~
agents/base_agent.py:141: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
agents/base_agent.py:141: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
agents/base_agent.py:152: error: Function is missing a return type annotation
[no-untyped-def]
        async def monitor_belief_update(
        ^
agents/base_agent.py:152: error: All conditional function variants must have
identical signatures  [misc]
        async def monitor_belief_update(
        ^
agents/base_agent.py:152: note: Original:
agents/base_agent.py:152: note:     def monitor_belief_update(agent_id: str, beliefs: dict[str, Any], free_energy: float | None = ..., metadata: dict[str, Any] | None = ...) -> Coroutine[Any, Any, BeliefSnapshot | None]
agents/base_agent.py:152: note: Redefinition:
agents/base_agent.py:152: note:     def monitor_belief_update(agent_id: str, beliefs: dict[Any, Any], free_energy: float = ..., metadata: dict[str, Any] = ...) -> Coroutine[Any, Any, Any]
agents/base_agent.py:154: error: Missing type parameters for generic type
"dict"  [type-arg]
            beliefs: dict,
                     ^
agents/base_agent.py:155: error: Incompatible default for argument
"free_energy" (default has type "None", argument has type "float")  [assignment]
            free_energy: float = None,
                                 ^~~~
agents/base_agent.py:155: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
agents/base_agent.py:155: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
agents/base_agent.py:156: error: Incompatible default for argument "metadata"
(default has type "None", argument has type "dict[str, Any]")  [assignment]
            metadata: Dict[str, Any] = None,
                                       ^~~~
agents/base_agent.py:156: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
agents/base_agent.py:156: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
agents/base_agent.py:232: error: Item "None" of "dict[str, Any] | None" has no
attribute "get"  [union-attr]
            self.performance_mode = config.get(
                                    ^~~~~~~~~~
agents/base_agent.py:235: error: Item "None" of "dict[str, Any] | None" has no
attribute "get"  [union-attr]
            self.selective_update_interval = config.get(
                                             ^~~~~~~~~~
agents/base_agent.py:259: error: Incompatible types in assignment (expression
has type "None", variable has type "LocalLLMManager")  [assignment]
                self.llm_manager = None
                                   ^~~~
agents/base_agent.py:274: error: Item "None" of "dict[str, Any] | None" has no
attribute "get"  [union-attr]
    ...  self.observability_enabled = OBSERVABILITY_AVAILABLE and config.get(
                                                                  ^~~~~~~~~~
agents/base_agent.py:281: error: Item "None" of "dict[str, Any] | None" has no
attribute "get"  [union-attr]
                and config.get("enable_belief_monitoring", True)
                    ^~~~~~~~~~
agents/base_agent.py:289: error: Call to untyped function
"PerformanceOptimizer" in typed context  [no-untyped-call]
            self.performance_optimizer = PerformanceOptimizer()
                                         ^~~~~~~~~~~~~~~~~~~~~~
agents/base_agent.py:378: error: Missing type parameters for generic type
"Callable"  [type-arg]
    ...self, matrix_name: str, matrix_data: Any, normalization_func: Callable
                                                                     ^
agents/base_agent.py:583: error: Unexpected keyword argument "max_tokens" for
"generate" of "LocalLLMManager"  [call-arg]
                response = self.llm_manager.generate(prompt, max_tokens=20...
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
inference/llm/local_llm_manager.py:528: note: "generate" of "LocalLLMManager" defined here
agents/base_agent.py:595: error: Function is missing a return type annotation
[no-untyped-def]
        def start(self):
        ^
agents/base_agent.py:595: note: Use "-> None" if function does not return a value
agents/base_agent.py:603: error: Function is missing a return type annotation
[no-untyped-def]
        def stop(self):
        ^
agents/base_agent.py:603: note: Use "-> None" if function does not return a value
agents/base_agent.py:914: error: Function is missing a return type annotation
[no-untyped-def]
        def _capture_beliefs_before_update(self):
        ^
agents/base_agent.py:920: error: "None" has no attribute "qs"  [attr-defined]
                and self.pymdp_agent.qs is not None
                    ^~~~~~~~~~~~~~~~~~~
agents/base_agent.py:929: error: "None" has no attribute "qs"  [attr-defined]
                            len(self.pymdp_agent.qs) if self.pymdp_agent.q...
                                ^~~~~~~~~~~~~~~~~~~
agents/base_agent.py:936: error: Function is missing a return type annotation
[no-untyped-def]
        def _perform_state_inference(self):
        ^
agents/base_agent.py:941: error: "None" has no attribute "infer_states"
[attr-defined]
                    lambda: self.pymdp_agent.infer_states(
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/base_agent.py:942: error: Cannot determine type of "current_observation"
 [has-type]
                        self.current_observation
                        ^~~~~~~~~~~~~~~~~~~~~~~~
agents/base_agent.py:949: error: Function is missing a type annotation
[no-untyped-def]
        def _calculate_belief_entropy(self, qs):
        ^
agents/base_agent.py:966: error: Function is missing a return type annotation
[no-untyped-def]
        def _update_free_energy_metrics(self):
        ^
agents/base_agent.py:966: note: Use "-> None" if function does not return a value
agents/base_agent.py:972: error: "None" has no attribute "F"  [attr-defined]
                    and self.pymdp_agent.F is not None
                        ^~~~~~~~~~~~~~~~~~
agents/base_agent.py:975: error: "None" has no attribute "F"  [attr-defined]
                        np.mean(self.pymdp_agent.F)
                                ^~~~~~~~~~~~~~~~~~
agents/base_agent.py:978: error: Function is missing a type annotation
[no-untyped-def]
        def _record_belief_monitoring(self, qs, beliefs_before, beliefs_af...
        ^
agents/base_agent.py:1027: error: Function is missing a type annotation
[no-untyped-def]
        def _process_belief_states(self, qs, beliefs_before):
        ^
agents/base_agent.py:1030: error: Call to untyped function
"_calculate_belief_entropy" in typed context  [no-untyped-call]
            entropy = self._calculate_belief_entropy(qs)
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/base_agent.py:1038: error: Call to untyped function
"_update_free_energy_metrics" in typed context  [no-untyped-call]
            self._update_free_energy_metrics()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/base_agent.py:1047: error: Call to untyped function
"_record_belief_monitoring" in typed context  [no-untyped-call]
                self._record_belief_monitoring(qs, beliefs_before, beliefs...
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
agents/base_agent.py:1049: error: Untyped decorator makes function
"update_beliefs" untyped  [misc]
        @performance_monitor("belief_update")
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/base_agent.py:1097: error: Incompatible types in assignment (expression
has type "floating[Any]", target has type "float")  [assignment]
            self.metrics["belief_entropy"] = np.mean(self.uncertainty_map)
                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/base_agent.py:1103: error: Untyped decorator makes function
"select_action" untyped  [misc]
        @performance_monitor("action_selection")
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/base_agent.py:1215: error: Incompatible types in assignment (expression
has type "float", variable has type "int")  [assignment]
                            goal_bonus = 0.5
                                         ^~~
agents/base_agent.py:1229: error: Argument "key" to "max" has incompatible type
overloaded function; expected
"Callable[[str], SupportsDunderLT[Any] | SupportsDunderGT[Any]]"  [arg-type]
    ...           selected_action = max(action_values, key=action_values.get)
                                                           ^~~~~~~~~~~~~~~~~
agents/base_agent.py:1231: error: Returning Any from function declared to
return "str"  [no-any-return]
            return selected_action
            ^~~~~~~~~~~~~~~~~~~~~~
agents/base_agent.py:1264: error: Dict entry 0 has incompatible type "str":
"str"; expected "str": "float"  [dict-item]
                return {"error": "PyMDP not available"}
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
benchmarks/performance_suite.py:75: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
benchmarks/performance_suite.py:75: note: Use "-> None" if function does not return a value
benchmarks/performance_suite.py:82: error: Function is missing a return type
annotation  [no-untyped-def]
        def start(self):
        ^
benchmarks/performance_suite.py:82: note: Use "-> None" if function does not return a value
benchmarks/performance_suite.py:89: error: Function is missing a return type
annotation  [no-untyped-def]
        def sample(self):
        ^
benchmarks/performance_suite.py:98: error: Call to untyped function "sample" in
typed context  [no-untyped-call]
            end_memory = self.sample()
                         ^~~~~~~~~~~~~
benchmarks/performance_suite.py:103: error: Function is missing a return type
annotation  [no-untyped-def]
    def track_performance(name: str, category: str):
    ^
benchmarks/performance_suite.py:105: error: Call to untyped function
"MemoryTracker" in typed context  [no-untyped-call]
        tracker = MemoryTracker()
                  ^~~~~~~~~~~~~~~
benchmarks/performance_suite.py:106: error: Call to untyped function "start" in
typed context  [no-untyped-call]
        tracker.start()
        ^~~~~~~~~~~~~~~
benchmarks/performance_suite.py:142: error: Function is missing a type
annotation  [no-untyped-def]
        def benchmark_single_agent_spawn(benchmark):
        ^
benchmarks/performance_suite.py:146: error: Function is missing a return type
annotation  [no-untyped-def]
            def spawn_agent():
            ^
benchmarks/performance_suite.py:158: error: Function is missing a type
annotation  [no-untyped-def]
        def benchmark_batch_agent_spawn(benchmark):
        ^
benchmarks/performance_suite.py:162: error: Function is missing a type
annotation  [no-untyped-def]
            def spawn_batch(count=10):
            ^
benchmarks/performance_suite.py:177: error: Function is missing a type
annotation  [no-untyped-def]
        def benchmark_concurrent_agent_spawn(benchmark):
        ^
benchmarks/performance_suite.py:181: error: Function is missing a type
annotation  [no-untyped-def]
            def spawn_concurrent(count=10):
            ^
benchmarks/performance_suite.py:185: error: Unexpected keyword argument
"num_states" for "submit" of "Executor"  [call-arg]
                        future = executor.submit(
                                 ^
benchmarks/performance_suite.py:324: error: Module
"agents.memory_optimization.belief_compression" has no attribute
"compress_beliefs"  [attr-defined]
            from agents.memory_optimization.belief_compression import (
            ^
benchmarks/performance_suite.py:438: error: Module "websocket.connection_pool"
has no attribute "ConnectionPool"; maybe "ConnectionPoolError" or
"WebSocketConnectionPool"?  [attr-defined]
            from websocket.connection_pool import ConnectionPool
            ^
benchmarks/performance_suite.py:452: error: Module "websocket.connection_pool"
has no attribute "ConnectionPool"; maybe "ConnectionPoolError" or
"WebSocketConnectionPool"?  [attr-defined]
            from websocket.connection_pool import ConnectionPool
            ^
venv/lib/python3.12/site-packages/mypy/typeshed/stdlib/concurrent/futures/_base.pyi:61: note: "submit" of "Executor" defined here
benchmarks/performance_suite.py:185: error: Unexpected keyword argument
"num_actions" for "submit" of "Executor"  [call-arg]
                        future = executor.submit(
                                 ^
venv/lib/python3.12/site-packages/mypy/typeshed/stdlib/concurrent/futures/_base.pyi:61: note: "submit" of "Executor" defined here
benchmarks/performance_suite.py:185: error: Unexpected keyword argument
"num_observations" for "submit" of "Executor"  [call-arg]
                        future = executor.submit(
                                 ^
venv/lib/python3.12/site-packages/mypy/typeshed/stdlib/concurrent/futures/_base.pyi:61: note: "submit" of "Executor" defined here
benchmarks/performance_suite.py:206: error: Function is missing a type
annotation  [no-untyped-def]
        def benchmark_single_message_pass(benchmark):
        ^
benchmarks/performance_suite.py:210: error: Need type annotation for
"message_queue"  [var-annotated]
            message_queue = deque()
                            ^~~~~~~
benchmarks/performance_suite.py:212: error: Function is missing a return type
annotation  [no-untyped-def]
            def pass_message():
            ^
benchmarks/performance_suite.py:225: error: Function is missing a type
annotation  [no-untyped-def]
        def benchmark_bulk_message_throughput(benchmark):
        ^
benchmarks/performance_suite.py:229: error: Function is missing a type
annotation  [no-untyped-def]
            def process_messages(count=1000):
            ^
benchmarks/performance_suite.py:230: error: Need type annotation for "queue"
[var-annotated]
                queue = deque()
                        ^~~~~~~
benchmarks/performance_suite.py:250: error: Function is missing a type
annotation  [no-untyped-def]
        async def benchmark_async_message_throughput(benchmark):
        ^
benchmarks/performance_suite.py:254: error: Function is missing a type
annotation  [no-untyped-def]
            async def async_message_processing(count=1000):
            ^
benchmarks/performance_suite.py:255: error: Need type annotation for "queue"
[var-annotated]
                queue = asyncio.Queue()
                        ^~~~~~~~~~~~~~~
benchmarks/performance_suite.py:258: error: Function is missing a return type
annotation  [no-untyped-def]
                async def produce():
                ^
benchmarks/performance_suite.py:258: note: Use "-> None" if function does not return a value
benchmarks/performance_suite.py:263: error: Function is missing a return type
annotation  [no-untyped-def]
                async def consume():
                ^
benchmarks/performance_suite.py:271: error: Call to untyped function "produce"
in typed context  [no-untyped-call]
                producer = asyncio.create_task(produce())
                                               ^~~~~~~~~
benchmarks/performance_suite.py:272: error: Call to untyped function "consume"
in typed context  [no-untyped-call]
                processed = await consume()
                                  ^~~~~~~~~
benchmarks/performance_suite.py:280: error: Call to untyped function
"async_message_processing" in typed context  [no-untyped-call]
                lambda: loop.run_until_complete(async_message_processing(1...
                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~...
benchmarks/performance_suite.py:290: error: Function is missing a type
annotation  [no-untyped-def]
        def benchmark_agent_memory_lifecycle(benchmark):
        ^
benchmarks/performance_suite.py:294: error: Function is missing a return type
annotation  [no-untyped-def]
            def agent_lifecycle():
            ^
benchmarks/performance_suite.py:299: error: Unexpected keyword argument
"num_states" for "BasicExplorerAgent"  [call-arg]
                    agent = BasicExplorerAgent(
                            ^
agents/base_agent.py:682: note: "BasicExplorerAgent" defined here
benchmarks/performance_suite.py:299: error: Unexpected keyword argument
"num_actions" for "BasicExplorerAgent"  [call-arg]
                    agent = BasicExplorerAgent(
                            ^
agents/base_agent.py:682: note: "BasicExplorerAgent" defined here
benchmarks/performance_suite.py:299: error: Unexpected keyword argument
"num_observations" for "BasicExplorerAgent"  [call-arg]
                    agent = BasicExplorerAgent(
                            ^
agents/base_agent.py:682: note: "BasicExplorerAgent" defined here
benchmarks/performance_suite.py:322: error: Function is missing a type
annotation  [no-untyped-def]
        def benchmark_belief_compression(benchmark):
        ^
benchmarks/performance_suite.py:328: error: Function is missing a return type
annotation  [no-untyped-def]
            def compress_large_beliefs():
            ^
benchmarks/performance_suite.py:344: error: Function is missing a type
annotation  [no-untyped-def]
        def benchmark_matrix_pooling(benchmark):
        ^
benchmarks/performance_suite.py:348: error: Function is missing a return type
annotation  [no-untyped-def]
            def use_matrix_pool():
            ^
benchmarks/performance_suite.py:349: error: Unexpected keyword argument
"max_matrices" for "MatrixPool"  [call-arg]
                pool = MatrixPool(shape=(50, 50), max_matrices=10)
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/memory_optimization/matrix_pooling.py:70: note: "MatrixPool" defined here
benchmarks/performance_suite.py:376: error: Function is missing a type
annotation  [no-untyped-def]
        def benchmark_single_query(benchmark):
        ^
benchmarks/performance_suite.py:380: error: Function is missing a return type
annotation  [no-untyped-def]
            def mock_query():
            ^
benchmarks/performance_suite.py:389: error: Function is missing a type
annotation  [no-untyped-def]
        def benchmark_batch_queries(benchmark):
        ^
benchmarks/performance_suite.py:392: error: Function is missing a type
annotation  [no-untyped-def]
            def batch_query(count=100):
            ^
benchmarks/performance_suite.py:404: error: Function is missing a type
annotation  [no-untyped-def]
        def benchmark_connection_pool(benchmark):
        ^
benchmarks/performance_suite.py:408: error: Function is missing a return type
annotation  [no-untyped-def]
            def use_connection_pool():
            ^
benchmarks/performance_suite.py:410: error: Need type annotation for "pool"
[var-annotated]
                pool = Queue(maxsize=10)
                       ^~~~~~~~~~~~~~~~~
benchmarks/performance_suite.py:436: error: Function is missing a type
annotation  [no-untyped-def]
        def benchmark_connection_setup(benchmark):
        ^
benchmarks/performance_suite.py:440: error: Function is missing a return type
annotation  [no-untyped-def]
            def setup_connection():
            ^
benchmarks/performance_suite.py:450: error: Function is missing a type
annotation  [no-untyped-def]
        def benchmark_concurrent_connections(benchmark):
        ^
benchmarks/performance_suite.py:454: error: Function is missing a type
annotation  [no-untyped-def]
            def handle_concurrent_connections(count=50):
            ^
benchmarks/performance_suite.py:472: error: Function is missing a type
annotation  [no-untyped-def]
        def benchmark_message_broadcast(benchmark):
        ^
benchmarks/performance_suite.py:475: error: Function is missing a type
annotation  [no-untyped-def]
            def broadcast_messages(clients=100, messages=10):
            ^
benchmarks/performance_suite.py:515: error: Need type annotation for
"by_category" (hint: "by_category: dict[<type>, <type>] = ...")  [var-annotated]
            by_category = {}
            ^~~~~~~~~~~
benchmarks/performance_suite.py:546: error: Unsupported target for indexed
assignment ("Collection[str]")  [index]
                report["benchmarks"][category] = category_stats
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
benchmarks/performance_suite.py:616: error: Function is missing a return type
annotation  [no-untyped-def]
    def performance_tracker():
    ^
benchmarks/performance_suite.py:620: error: Function is missing a return type
annotation  [no-untyped-def]
        def track(metrics: BenchmarkMetrics):
        ^
benchmarks/performance_suite.py:633: error: Function is missing a return type
annotation  [no-untyped-def]
    def memory_baseline():
    ^
websocket/pool_integration.py:44: error: Function is missing a return type
annotation  [no-untyped-def]
        async def initialize(self, websocket_url: str = "ws://localhost:80...
        ^
websocket/pool_integration.py:59: error: Call to untyped function "start" in
typed context  [no-untyped-call]
            await self.resource_manager.start()
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
websocket/pool_integration.py:67: error: Function is missing a return type
annotation  [no-untyped-def]
        async def shutdown(self):
        ^
websocket/pool_integration.py:67: note: Use "-> None" if function does not return a value
websocket/pool_integration.py:72: error: Call to untyped function "stop" in
typed context  [no-untyped-call]
                await self.resource_manager.stop()
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
websocket/pool_integration.py:93: error: Item "None" of
"AgentResourceManager | None" has no attribute "allocate_resource"  [union-attr]
            resource = await self.resource_manager.allocate_resource(
                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
websocket/pool_integration.py:98: error: Item "None" of
"AgentResourceManager | None" has no attribute "activate_resource"  [union-attr]
            await self.resource_manager.activate_resource(agent_id)
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
websocket/pool_integration.py:105: error: Function is missing a return type
annotation  [no-untyped-def]
        async def release_agent_connection(self, agent_id: str):
        ^
websocket/pool_integration.py:110: error: Item "None" of
"AgentResourceManager | None" has no attribute "release_resource"  [union-attr]
            await self.resource_manager.release_resource(agent_id)
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
websocket/pool_integration.py:113: error: Function is missing a return type
annotation  [no-untyped-def]
        async def send_agent_message(self, agent_id: str, message: Dict[st...
        ^
websocket/pool_integration.py:116: error: Item "None" of
"AgentResourceManager | None" has no attribute "get_agent_connection"
[union-attr]
            conn = await self.resource_manager.get_agent_connection(agent_...
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
websocket/pool_integration.py:145: error: Function is missing a return type
annotation  [no-untyped-def]
    async def websocket_pool_lifespan(app: FastAPI):
    ^
websocket/pool_integration.py:153: error: Call to untyped function "shutdown"
in typed context  [no-untyped-call]
        await pooled_connection_manager.shutdown()
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
websocket/pool_integration.py:156: error: Function is missing a return type
annotation  [no-untyped-def]
    def setup_websocket_pool(
    ^
websocket/pool_integration.py:180: error: Function is missing a return type
annotation  [no-untyped-def]
        async def startup_event():
        ^
websocket/pool_integration.py:180: note: Use "-> None" if function does not return a value
websocket/pool_integration.py:184: error: Function is missing a return type
annotation  [no-untyped-def]
        async def shutdown_event():
        ^
websocket/pool_integration.py:184: note: Use "-> None" if function does not return a value
websocket/pool_integration.py:185: error: Call to untyped function "shutdown"
in typed context  [no-untyped-call]
            await pooled_connection_manager.shutdown()
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
websocket/pool_integration.py:193: error: Function is missing a return type
annotation  [no-untyped-def]
    async def example_agent_lifecycle():
    ^
websocket/pool_integration.py:193: note: Use "-> None" if function does not return a value
websocket/pool_integration.py:217: error: Item "None" of
"AgentResourceManager | None" has no attribute "update_resource_usage"
[union-attr]
            await pooled_connection_manager.resource_manager.update_resour...
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
websocket/pool_integration.py:227: error: Function is missing a return type
annotation  [no-untyped-def]
    async def example_multi_agent_scenario():
    ^
websocket/pool_integration.py:227: note: Use "-> None" if function does not return a value
websocket/pool_integration.py:270: error: Function is missing a return type
annotation  [no-untyped-def]
    async def benchmark_without_pooling(num_agents: int, duration: int):
    ^
websocket/pool_integration.py:277: error: Function is missing a return type
annotation  [no-untyped-def]
        async def agent_work(agent_id: str):
        ^
websocket/pool_integration.py:314: error: Function is missing a return type
annotation  [no-untyped-def]
    async def benchmark_with_pooling(num_agents: int, duration: int):
    ^
websocket/pool_integration.py:327: error: Function is missing a return type
annotation  [no-untyped-def]
        async def agent_work(agent_id: str):
        ^
websocket/pool_integration.py:393: error: Function is missing a return type
annotation  [no-untyped-def]
    async def run_performance_comparison(num_agents: int = 50, duration: i...
    ^
knowledge_graph/conversation_auto_updater.py:38: error: Call to untyped
function "GraphEngine" in typed context  [no-untyped-call]
            self.graph_engine = graph_engine or GraphEngine()
                                                ^~~~~~~~~~~~~
knowledge_graph/conversation_auto_updater.py:41: error: Argument 1 to
"ConversationMonitor" has incompatible type "GraphEngine"; expected
"KnowledgeGraph"  [arg-type]
    ...    self.conversation_monitor = ConversationMonitor(self.graph_engine)
                                                           ^~~~~~~~~~~~~~~~~
knowledge_graph/conversation_auto_updater.py:57: error: Function is missing a
return type annotation  [no-untyped-def]
        async def start(self):
        ^
knowledge_graph/conversation_auto_updater.py:57: note: Use "-> None" if function does not return a value
knowledge_graph/conversation_auto_updater.py:59: error: Call to untyped
function "start" in typed context  [no-untyped-call]
            await self.conversation_monitor.start()
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
knowledge_graph/conversation_auto_updater.py:62: error: Function is missing a
return type annotation  [no-untyped-def]
        async def stop(self):
        ^
knowledge_graph/conversation_auto_updater.py:62: note: Use "-> None" if function does not return a value
knowledge_graph/conversation_auto_updater.py:64: error: Call to untyped
function "stop" in typed context  [no-untyped-call]
            await self.conversation_monitor.stop()
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
knowledge_graph/conversation_auto_updater.py:116: error: Argument "text" to
"extract_entities" of "NLPEntityExtractor" has incompatible type "Column[str]";
expected "str"  [arg-type]
                    text=message.content,
                         ^~~~~~~~~~~~~~~
knowledge_graph/conversation_auto_updater.py:120: error: "Message" has no
attribute "role"  [attr-defined]
                        "role": message.role,
                                ^~~~~~~~~~~~
knowledge_graph/conversation_auto_updater.py:121: error: "Message" has no
attribute "created_at"  [attr-defined]
                        "timestamp": message.created_at.isoformat(),
                                     ^~~~~~~~~~~~~~~~~~
knowledge_graph/conversation_auto_updater.py:154: error: Function is missing a
return type annotation  [no-untyped-def]
        async def _handle_conversation_event(self, event: ConversationEven...
        ^
knowledge_graph/conversation_auto_updater.py:173: error: Function is missing a
return type annotation  [no-untyped-def]
        async def _process_message(self, message: Message, stats: Dict[str...
        ^
knowledge_graph/conversation_auto_updater.py:190: error: Function is missing a
return type annotation  [no-untyped-def]
        def reset_statistics(self):
        ^
knowledge_graph/conversation_auto_updater.py:190: note: Use "-> None" if function does not return a value
knowledge_graph/conversation_auto_updater.py:229: error: Incompatible types in
assignment (expression has type "dict[str, float | dict[str, Any] | str]",
variable has type "KnowledgeNode")  [assignment]
                for node in related_nodes:
                ^
knowledge_graph/conversation_auto_updater.py:231: error: Value of type
"KnowledgeNode" is not indexable  [index]
                        if edge.source_id == node["id"]:
                                             ^~~~~~~~~~
knowledge_graph/conversation_auto_updater.py:247: error: Incompatible return
value type (got "dict[str, object]", expected "list[dict[str, Any]]")
[return-value]
                return {
                       ^
knowledge_graph/conversation_auto_updater.py:258: error: Incompatible return
value type (got "dict[str, str]", expected "list[dict[str, Any]]")
[return-value]
                return {"error": str(e)}
                       ^~~~~~~~~~~~~~~~~
knowledge_graph/conversation_auto_updater.py:330: error: No overload variant of
"__setitem__" of "list" matches argument types "str",
"dict[str, Collection[Any]]"  [call-overload]
                knowledge["extraction_metadata"] = {
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
knowledge_graph/conversation_auto_updater.py:330: note: Possible overload variants:
knowledge_graph/conversation_auto_updater.py:330: note:     def __setitem__(self, SupportsIndex, dict[str, Any], /) -> None
knowledge_graph/conversation_auto_updater.py:330: note:     def __setitem__(self, slice, Iterable[dict[str, Any]], /) -> None
knowledge_graph/conversation_auto_updater.py:335: error: "list[dict[str, Any]]"
has no attribute "get"  [attr-defined]
                            for node in knowledge.get("direct_entities", [...
                                        ^~~~~~~~~~~~~
knowledge_graph/conversation_auto_updater.py:343: error: Incompatible return
value type (got "list[dict[str, Any]]", expected "dict[str, Any]")
[return-value]
                return knowledge
                       ^~~~~~~~~
examples/error_handling_demo.py:11: error: Function is missing a return type
annotation  [no-untyped-def]
    def demonstrate_error_recovery():
    ^
examples/error_handling_demo.py:11: note: Use "-> None" if function does not return a value
examples/error_handling_demo.py:19: error: Call to untyped function "start" in
typed context  [no-untyped-call]
        agent.start()
        ^~~~~~~~~~~~~
examples/error_handling_demo.py:38: error: Incompatible types in assignment
(expression has type "MagicMock", variable has type "None")  [assignment]
        agent.pymdp_agent = mock_agent
                            ^~~~~~~~~~
examples/error_handling_demo.py:79: error: Function is missing a return type
annotation  [no-untyped-def]
    def demonstrate_error_recovery_strategies():
    ^
examples/error_handling_demo.py:84: error: Call to untyped function "start" in
typed context  [no-untyped-call]
        agent.start()
        ^~~~~~~~~~~~~
examples/error_handling_demo.py:93: error: Function is missing a return type
annotation  [no-untyped-def]
        def failing_infer_policies():
        ^
examples/error_handling_demo.py:102: error: Incompatible types in assignment
(expression has type "MagicMock", variable has type "None")  [assignment]
        agent.pymdp_agent = mock_agent
                            ^~~~~~~~~~
examples/error_handling_demo.py:128: error: Function is missing a return type
annotation  [no-untyped-def]
    def demonstrate_concurrent_error_handling():
    ^
examples/error_handling_demo.py:128: note: Use "-> None" if function does not return a value
examples/error_handling_demo.py:138: error: Call to untyped function "start" in
typed context  [no-untyped-call]
            agent.start()
            ^~~~~~~~~~~~~
examples/error_handling_demo.py:159: error: Incompatible types in assignment
(expression has type "MagicMock", variable has type "None")  [assignment]
                agent.pymdp_agent = mock_agent
                                    ^~~~~~~~~~
examples/error_handling_demo.py:176: error: Call to untyped function
"demonstrate_error_recovery" in typed context  [no-untyped-call]
        demonstrate_error_recovery()
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/error_handling_demo.py:177: error: Call to untyped function
"demonstrate_error_recovery_strategies" in typed context  [no-untyped-call]
        demonstrate_error_recovery_strategies()
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/error_handling_demo.py:178: error: Call to untyped function
"demonstrate_concurrent_error_handling" in typed context  [no-untyped-call]
        demonstrate_concurrent_error_handling()
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_simple.py:34: error: Function is missing a return type annotation
 [no-untyped-def]
    def check_pymdp_availability():
    ^
examples/demo_simple.py:48: error: Function is missing a return type annotation
 [no-untyped-def]
    def create_world_environment():
    ^
examples/demo_simple.py:55: error: Argument 1 to "set_cell" of "GridWorld" has
incompatible type "int"; expected "Position"  [arg-type]
        world.set_cell(4, 4, 1)  # Goal
                       ^
examples/demo_simple.py:55: error: Argument 2 to "set_cell" of "GridWorld" has
incompatible type "int"; expected "CellType"  [arg-type]
        world.set_cell(4, 4, 1)  # Goal
                          ^
examples/demo_simple.py:56: error: Argument 1 to "set_cell" of "GridWorld" has
incompatible type "int"; expected "Position"  [arg-type]
        world.set_cell(2, 2, -1)  # Obstacle
                       ^
examples/demo_simple.py:56: error: Argument 2 to "set_cell" of "GridWorld" has
incompatible type "int"; expected "CellType"  [arg-type]
        world.set_cell(2, 2, -1)  # Obstacle
                          ^
examples/demo_simple.py:65: error: Function is missing a return type annotation
 [no-untyped-def]
    def create_and_setup_agents():
    ^
examples/demo_simple.py:77: error: Call to untyped function "start" in typed
context  [no-untyped-call]
        agent1.start()
        ^~~~~~~~~~~~~~
examples/demo_simple.py:78: error: Call to untyped function "start" in typed
context  [no-untyped-call]
        agent2.start()
        ^~~~~~~~~~~~~~
examples/demo_simple.py:88: error: Function is missing a type annotation
[no-untyped-def]
    def print_agent_metrics(agent, agent_name):
    ^
examples/demo_simple.py:102: error: Function is missing a type annotation
[no-untyped-def]
    def update_position(agent, action):
    ^
examples/demo_simple.py:114: error: Function is missing a type annotation
[no-untyped-def]
    def display_world_state(world, agent1, agent2, step):
    ^
examples/demo_simple.py:134: error: Function is missing a type annotation
[no-untyped-def]
    def run_agent_step(agent, world, agent_num):
    ^
examples/demo_simple.py:145: error: Call to untyped function
"print_agent_metrics" in typed context  [no-untyped-call]
        print_agent_metrics(agent, f"Agent {agent_num}")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_simple.py:150: error: Function is missing a type annotation
[no-untyped-def]
    def run_simulation_loop(world, agent1, agent2):
    ^
examples/demo_simple.py:161: error: Call to untyped function "run_agent_step"
in typed context  [no-untyped-call]
            action1 = run_agent_step(agent1, world, 1)
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_simple.py:162: error: Call to untyped function "run_agent_step"
in typed context  [no-untyped-call]
            action2 = run_agent_step(agent2, world, 2)
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_simple.py:165: error: Call to untyped function "update_position"
in typed context  [no-untyped-call]
            update_position(agent1, action1)
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_simple.py:166: error: Call to untyped function "update_position"
in typed context  [no-untyped-call]
            update_position(agent2, action2)
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_simple.py:170: error: Call to untyped function
"display_world_state" in typed context  [no-untyped-call]
                display_world_state(world, agent1, agent2, step)
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_simple.py:175: error: Function is missing a type annotation
[no-untyped-def]
    def print_final_metrics(agent1, agent2):
    ^
examples/demo_simple.py:207: error: Function is missing a return type
annotation  [no-untyped-def]
    def print_demo_summary():
    ^
examples/demo_simple.py:207: note: Use "-> None" if function does not return a value
examples/demo_simple.py:221: error: Function is missing a return type
annotation  [no-untyped-def]
    def main():
    ^
examples/demo_simple.py:221: note: Use "-> None" if function does not return a value
examples/demo_simple.py:227: error: Call to untyped function
"check_pymdp_availability" in typed context  [no-untyped-call]
        if not check_pymdp_availability():
               ^~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_simple.py:231: error: Call to untyped function
"create_world_environment" in typed context  [no-untyped-call]
        world = create_world_environment()
                ^~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_simple.py:232: error: Call to untyped function
"create_and_setup_agents" in typed context  [no-untyped-call]
        agent1, agent2 = create_and_setup_agents()
                         ^~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_simple.py:236: error: Call to untyped function
"run_simulation_loop" in typed context  [no-untyped-call]
            run_simulation_loop(world, agent1, agent2)
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_simple.py:239: error: Call to untyped function
"print_final_metrics" in typed context  [no-untyped-call]
            print_final_metrics(agent1, agent2)
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/demo_simple.py:242: error: Call to untyped function
"print_demo_summary" in typed context  [no-untyped-call]
            print_demo_summary()
            ^~~~~~~~~~~~~~~~~~~~
examples/demo_simple.py:251: error: Call to untyped function "main" in typed
context  [no-untyped-call]
        main()
        ^~~~~~
examples/demo_gmn.py:36: error: Function is missing a return type annotation
[no-untyped-def]
    def main():
    ^
examples/demo_gmn.py:36: note: Use "-> None" if function does not return a value
examples/demo_gmn.py:63: error: Call to untyped function "GMNParser" in typed
context  [no-untyped-call]
        parser = GMNParser()
                 ^~~~~~~~~~~
examples/demo_gmn.py:116: error: Call to untyped function "start" in typed
context  [no-untyped-call]
        agent.start()
        ^~~~~~~~~~~~~
examples/demo_gmn.py:165: error: Call to untyped function "stop" in typed
context  [no-untyped-call]
        agent.stop()
        ^~~~~~~~~~~~
examples/demo_gmn.py:224: error: Call to untyped function "main" in typed
context  [no-untyped-call]
        main()
        ^~~~~~
examples/active_inference_demo.py:59: error: Function is missing a return type
annotation  [no-untyped-def]
        def add_agent(self, agent: BasicExplorerAgent, start_pos: Tuple[in...
        ^
examples/active_inference_demo.py:63: error: Call to untyped function "start"
in typed context  [no-untyped-call]
            agent.start()
            ^~~~~~~~~~~~~
examples/active_inference_demo.py:68: error: Missing type parameters for
generic type "Dict"  [type-arg]
        def get_observation(self, agent: BasicExplorerAgent) -> Dict:
                                                                ^
examples/active_inference_demo.py:139: error: Function is missing a return type
annotation  [no-untyped-def]
        def step(self):
        ^
examples/active_inference_demo.py:139: note: Use "-> None" if function does not return a value
examples/active_inference_demo.py:157: error: Argument 1 to "remove" of "list"
has incompatible type "tuple[int, ...]"; expected "tuple[int, int]"  [arg-type]
                    self.resources.remove(pos_tuple)
                                          ^~~~~~~~~
examples/active_inference_demo.py:163: error: "BasicExplorerAgent" has no
attribute "known_goals"  [attr-defined]
                        agent.known_goals = set()
                        ^~~~~~~~~~~~~~~~~
examples/active_inference_demo.py:164: error: "BasicExplorerAgent" has no
attribute "known_goals"  [attr-defined]
                    agent.known_goals.add(pos_tuple)
                    ^~~~~~~~~~~~~~~~~
examples/active_inference_demo.py:178: error: Function is missing a return type
annotation  [no-untyped-def]
        def display(self):
        ^
examples/active_inference_demo.py:178: note: Use "-> None" if function does not return a value
examples/active_inference_demo.py:222: error: Function is missing a return type
annotation  [no-untyped-def]
    def run_active_inference_demo():
    ^
examples/active_inference_demo.py:222: note: Use "-> None" if function does not return a value
examples/active_inference_demo.py:252: error: Call to untyped function
"display" in typed context  [no-untyped-call]
        world.display()
        ^~~~~~~~~~~~~~~
examples/active_inference_demo.py:261: error: Call to untyped function "step"
in typed context  [no-untyped-call]
            world.step()
            ^~~~~~~~~~~~
examples/active_inference_demo.py:265: error: Call to untyped function
"display" in typed context  [no-untyped-call]
                world.display()
                ^~~~~~~~~~~~~~~
examples/active_inference_demo.py:314: error: Call to untyped function
"run_active_inference_demo" in typed context  [no-untyped-call]
        run_active_inference_demo()
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
auth/zero_trust_architecture.py:154: error: Function is missing a return type
annotation  [no-untyped-def]
        def update_trust_level(self, new_score: float):
        ^
auth/zero_trust_architecture.py:175: error: Incompatible default for argument
"ca_cert_path" (default has type "None", argument has type "str")  [assignment]
        def __init__(self, ca_cert_path: str = None, ca_key_path: str = No...
                                               ^~~~
auth/zero_trust_architecture.py:175: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
auth/zero_trust_architecture.py:175: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
auth/zero_trust_architecture.py:175: error: Incompatible default for argument
"ca_key_path" (default has type "None", argument has type "str")  [assignment]
    ...def __init__(self, ca_cert_path: str = None, ca_key_path: str = None):
                                                                       ^~~~
auth/zero_trust_architecture.py:200: error: Incompatible return value type (got
"tuple[Certificate, DHPrivateKey | Ed25519PrivateKey | Ed448PrivateKey | RSAPrivateKey | DSAPrivateKey | EllipticCurvePrivateKey | X25519PrivateKey | X448PrivateKey]",
expected "tuple[Certificate, RSAPrivateKey]")  [return-value]
                    return ca_cert, ca_key
                           ^~~~~~~~~~~~~~~
auth/zero_trust_architecture.py:433: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
auth/zero_trust_architecture.py:433: note: Use "-> None" if function does not return a value
auth/zero_trust_architecture.py:777: error: Unsupported target for indexed
assignment ("Collection[str]")  [index]
                config["services"][service_name] = {
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
auth/zero_trust_architecture.py:788: error: "Collection[str]" has no attribute
"append"  [attr-defined]
                config["policies"].append(
                ^~~~~~~~~~~~~~~~~~~~~~~~~
auth/zero_trust_architecture.py:808: error: Unsupported target for indexed
assignment ("Collection[str]")  [index]
                config["certificates"][service_name] = {
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
auth/zero_trust_architecture.py:952: error: Item "None" of "Address | None" has
no attribute "host"  [union-attr]
            session_data = f"{request.client.host}:{request.headers.get('X...
                             ^~~~~~~~~~~~~~~~~~~~
auth/zero_trust_architecture.py:957: error: Call to untyped function
"ZeroTrustPolicyEngine" in typed context  [no-untyped-call]
    zero_trust_engine = ZeroTrustPolicyEngine()
                        ^~~~~~~~~~~~~~~~~~~~~~~
auth/zero_trust_architecture.py:971: error: Function is missing a return type
annotation  [no-untyped-def]
    def configure_default_zero_trust_policies():
    ^
auth/zero_trust_architecture.py:971: note: Use "-> None" if function does not return a value
auth/zero_trust_architecture.py:1034: error: Call to untyped function
"configure_default_zero_trust_policies" in typed context  [no-untyped-call]
        configure_default_zero_trust_policies()
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/security.py:146: error: Untyped decorator makes function
"get_security_summary" untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/security.py:177: error: Untyped decorator makes function
"get_security_events" untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/security.py:202: error: "SecurityAuditor" has no attribute
"AuditSessionLocal"  [attr-defined]
        if not security_auditor.AuditSessionLocal:
               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/security.py:209: error: "SecurityAuditor" has no attribute
"AuditSessionLocal"  [attr-defined]
            audit_db = security_auditor.AuditSessionLocal()
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/security.py:266: error: Untyped decorator makes function
"get_suspicious_activity" untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/security.py:288: error: Untyped decorator makes function
"test_security_alert" untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/security.py:335: error: Untyped decorator makes function
"get_security_alerts" untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/security.py:362: error: Untyped decorator makes function
"get_security_metrics" untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/security.py:386: error: Untyped decorator makes function
"resolve_security_alert" untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/security.py:418: error: Untyped decorator makes function
"mark_alert_false_positive" untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/security.py:454: error: Untyped decorator makes function
"get_vulnerabilities" untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/security.py:495: error: Untyped decorator makes function
"get_vulnerability_stats" untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/security.py:507: error: Untyped decorator makes function
"suppress_vulnerability" untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/security.py:533: error: Untyped decorator makes function
"mark_vulnerability_false_positive" untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/security.py:561: error: Untyped decorator makes function
"get_security_incidents" untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/security.py:596: error: Untyped decorator makes function
"get_incident_stats" untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/security.py:608: error: Untyped decorator makes function
"resolve_incident" untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/security.py:643: error: Untyped decorator makes function
"mark_incident_false_positive" untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/security.py:677: error: Untyped decorator makes function
"get_blocked_ips" untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/security.py:694: error: Untyped decorator makes function "unblock_ip"
untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/security.py:725: error: Untyped decorator makes function
"trigger_security_scan" untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/security.py:734: error: Call to untyped function "_run_all_scanners" in
typed context  [no-untyped-call]
        asyncio.create_task(vulnerability_scanner._run_all_scanners())
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/security.py:849: error: Untyped decorator makes function
"get_certificate_info" untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/security.py:933: error: Untyped decorator makes function
"trigger_ssl_renewal" untyped  [misc]
    @require_permission(Permission.ADMIN_SYSTEM)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/security.py:1004: error: "type[SecurityEventType]" has no attribute
"SECURITY_VIOLATION"  [attr-defined]
                SecurityEventType.SECURITY_VIOLATION,
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/security.py:1027: error: "type[SecurityEventType]" has no attribute
"SECURITY_VIOLATION"  [attr-defined]
                SecurityEventType.SECURITY_VIOLATION,
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/mfa.py:47: error: Call to untyped function "SecurityMonitoringSystem" in
typed context  [no-untyped-call]
            lambda: SecurityMonitoringSystem()
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/mfa.py:55: error: Untyped decorator makes function "enroll_mfa" untyped
[misc]
    @rate_limit(MFA_RATE_LIMITS["enroll"])
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/mfa.py:55: error: Argument 1 to "rate_limit" has incompatible type
"str"; expected "int"  [arg-type]
    @rate_limit(MFA_RATE_LIMITS["enroll"])
                ^~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/mfa.py:125: error: Untyped decorator makes function "verify_mfa" untyped
 [misc]
    @rate_limit(MFA_RATE_LIMITS["verify"])
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/mfa.py:125: error: Argument 1 to "rate_limit" has incompatible type
"str"; expected "int"  [arg-type]
    @rate_limit(MFA_RATE_LIMITS["verify"])
                ^~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/mfa.py:198: error: Untyped decorator makes function "get_mfa_status"
untyped  [misc]
    @rate_limit(MFA_RATE_LIMITS["status"])
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/mfa.py:198: error: Argument 1 to "rate_limit" has incompatible type
"str"; expected "int"  [arg-type]
    @rate_limit(MFA_RATE_LIMITS["status"])
                ^~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/mfa.py:202: error: Missing type parameters for generic type "Dict"
[type-arg]
    ) -> Dict:
         ^
api/v1/mfa.py:240: error: Untyped decorator makes function "disable_mfa"
untyped  [misc]
    @rate_limit(MFA_RATE_LIMITS["disable"])
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/mfa.py:240: error: Argument 1 to "rate_limit" has incompatible type
"str"; expected "int"  [arg-type]
    @rate_limit(MFA_RATE_LIMITS["disable"])
                ^~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/mfa.py:294: error: Untyped decorator makes function
"regenerate_backup_codes" untyped  [misc]
    @rate_limit(MFA_RATE_LIMITS["regenerate"])
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/mfa.py:294: error: Argument 1 to "rate_limit" has incompatible type
"str"; expected "int"  [arg-type]
    @rate_limit(MFA_RATE_LIMITS["regenerate"])
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/mfa.py:346: error: Untyped decorator makes function
"get_available_methods" untyped  [misc]
    @rate_limit(MFA_RATE_LIMITS["status"])
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/mfa.py:346: error: Argument 1 to "rate_limit" has incompatible type
"str"; expected "int"  [arg-type]
    @rate_limit(MFA_RATE_LIMITS["status"])
                ^~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/mfa.py:347: error: Missing type parameters for generic type "Dict"
[type-arg]
    async def get_available_methods() -> Dict:
                                         ^
api/v1/mfa.py:400: error: Untyped decorator makes function "test_mfa_token"
untyped  [misc]
    @rate_limit("3/1m")  # Very restrictive for testing
     ^~~~~~~~~~~~~~~~~~
api/v1/mfa.py:400: error: Argument 1 to "rate_limit" has incompatible type
"str"; expected "int"  [arg-type]
    @rate_limit("3/1m")  # Very restrictive for testing
                ^~~~~~
api/v1/mfa.py:405: error: Missing type parameters for generic type "Dict"
[type-arg]
    ) -> Dict:
         ^
api/v1/mfa.py:466: error: Missing type parameters for generic type "Dict"
[type-arg]
    ) -> Dict:
         ^
api/v1/knowledge.py:35: error: Call to untyped function "EvolutionEngine" in
typed context  [no-untyped-call]
    evolution_engine = EvolutionEngine()
                       ^~~~~~~~~~~~~~~~~
api/v1/knowledge.py:225: error: Function is missing a return type annotation
[no-untyped-def]
    async def delete_graph(graph_id: str):
    ^
api/v1/knowledge.py:391: error: Function is missing a return type annotation
[no-untyped-def]
    async def update_node(graph_id: str, node_id: str, properties: Dict[st...
    ^
api/v1/knowledge.py:408: error: Function is missing a return type annotation
[no-untyped-def]
    async def delete_node(graph_id: str, node_id: str):
    ^
api/v1/knowledge.py:624: error: Function is missing a return type annotation
[no-untyped-def]
    async def evolve_graph(graph_id: str, request: EvolutionRequest):
    ^
api/v1/knowledge.py:630: error: Call to untyped function "clear_cache" in typed
context  [no-untyped-call]
            query_engines[graph_id].clear_cache()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/resource_collector.py:106: error: Incompatible types in assignment
(expression has type "None", variable has type "LocalLLMManager")  [assignment]
            self.llm_manager = None  # Will be set by base class if availa...
                               ^~~~
agents/resource_collector.py:271: error: Function is missing a return type
annotation  [no-untyped-def]
        def _update_resource_memory(self, visible_cells: List[Dict[str, An...
        ^
agents/resource_collector.py:315: error: Unexpected keyword argument
"max_tokens" for "generate" of "LocalLLMManager"  [call-arg]
                    response = self.llm_manager.generate(prompt, max_token...
                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
inference/llm/local_llm_manager.py:528: note: "generate" of "LocalLLMManager" defined here
agents/resource_collector.py:402: error: Invalid index type "tuple[int, ...]"
for "dict[tuple[int, int], dict[str, Any]]"; expected type "tuple[int, int]"
[index]
                resource = self.resource_memory[current_pos]
                                                ^~~~~~~~~~~
agents/resource_collector.py:449: error: Returning Any from function declared
to return "str"  [no-any-return]
            return np.random.choice(directions)
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/resource_collector.py:473: error: Function is missing a return type
annotation  [no-untyped-def]
        def _update_collection_metrics(self, action: str):
        ^
agents/coalition_coordinator.py:51: error: Function is missing a type
annotation  [no-untyped-def]
            async def record_coordination_start(self, *args, **kwargs):
            ^
agents/coalition_coordinator.py:55: error: Function is missing a type
annotation  [no-untyped-def]
            async def record_coordination_end(self, *args, **kwargs):
            ^
agents/coalition_coordinator.py:59: error: Function is missing a type
annotation  [no-untyped-def]
            async def record_coalition_formation(self, *args, **kwargs):
            ^
agents/coalition_coordinator.py:63: error: Function is missing a type
annotation  [no-untyped-def]
            async def record_coalition_dissolution(self, *args, **kwargs):
            ^
agents/coalition_coordinator.py:67: error: Function is missing a type
annotation  [no-untyped-def]
            async def record_inter_agent_message(self, *args, **kwargs):
            ^
agents/coalition_coordinator.py:71: error: Incompatible types in assignment
(expression has type "MockCoordinationMetrics", variable has type
"CoordinationMetricsCollector")  [assignment]
        coordination_metrics = MockCoordinationMetrics()
                               ^~~~~~~~~~~~~~~~~~~~~~~~~
agents/coalition_coordinator.py:73: error: Function is missing a type
annotation  [no-untyped-def]
        async def record_coordination(*args, **kwargs):
        ^
agents/coalition_coordinator.py:73: error: All conditional function variants
must have identical signatures  [misc]
        async def record_coordination(*args, **kwargs):
        ^
agents/coalition_coordinator.py:73: note: Original:
agents/coalition_coordinator.py:73: note:     def record_coordination(coordinator_id: str, participant_ids: list[str], coordination_type: str, start_time: float, success: bool, metadata: dict[str, Any] | None = ...) -> Coroutine[Any, Any, None]
agents/coalition_coordinator.py:73: note: Redefinition:
agents/coalition_coordinator.py:73: note:     def record_coordination(*args: Any, **kwargs: Any) -> Any
agents/coalition_coordinator.py:77: error: Function is missing a type
annotation  [no-untyped-def]
        async def record_coalition_event(*args, **kwargs):
        ^
agents/coalition_coordinator.py:77: error: All conditional function variants
must have identical signatures  [misc]
        async def record_coalition_event(*args, **kwargs):
        ^
agents/coalition_coordinator.py:77: note: Original:
agents/coalition_coordinator.py:77: note:     def record_coalition_event(event_type: str, coalition_id: str, coordinator_id: str, member_ids: list[str], duration_ms: float, success: bool = ...) -> Coroutine[Any, Any, None]
agents/coalition_coordinator.py:77: note: Redefinition:
agents/coalition_coordinator.py:77: note:     def record_coalition_event(*args: Any, **kwargs: Any) -> Any
agents/coalition_coordinator.py:81: error: Function is missing a return type
annotation  [no-untyped-def]
        def get_agent_coordination_stats(agent_id: str):
        ^
agents/coalition_coordinator.py:81: error: All conditional function variants
must have identical signatures  [misc]
        def get_agent_coordination_stats(agent_id: str):
        ^
agents/coalition_coordinator.py:81: note: Original:
agents/coalition_coordinator.py:81: note:     def get_agent_coordination_stats(agent_id: str) -> dict[str, Any]
agents/coalition_coordinator.py:81: note: Redefinition:
agents/coalition_coordinator.py:81: note:     def get_agent_coordination_stats(agent_id: str) -> Any
agents/coalition_coordinator.py:189: error: Incompatible types in assignment
(expression has type "None", variable has type "LocalLLMManager")  [assignment]
            self.llm_manager = None  # Will be set by base class if availa...
                               ^~~~
agents/coalition_coordinator.py:284: error: Returning Any from function
declared to return "ndarray[tuple[Any, ...], dtype[Any]]"  [no-any-return]
            return utils.norm_dist(np.ones(self.num_states))
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/coalition_coordinator.py:438: error: Function is missing a return type
annotation  [no-untyped-def]
        def _update_agent_registry(self, visible_agents: List[Dict[str, An...
        ^
agents/coalition_coordinator.py:459: error: Function is missing a return type
annotation  [no-untyped-def]
        def _update_coalition_status(self, coalition_status: Dict[str, Any...
        ^
agents/coalition_coordinator.py:498: error: Unexpected keyword argument
"max_tokens" for "generate" of "LocalLLMManager"  [call-arg]
                    response = self.llm_manager.generate(prompt, max_token...
                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
inference/llm/local_llm_manager.py:528: note: "generate" of "LocalLLMManager" defined here
agents/coalition_coordinator.py:633: error: Function is missing a return type
annotation  [no-untyped-def]
        def _update_coordination_metrics(self, action: str):
        ^
agents/async_agent_manager.py:32: error: Incompatible types in assignment
(expression has type "None", variable has type "str")  [assignment]
        operation_id: str = None
                            ^~~~
agents/async_agent_manager.py:34: error: Function is missing a return type
annotation  [no-untyped-def]
        def __post_init__(self):
        ^
agents/async_agent_manager.py:34: note: Use "-> None" if function does not return a value
agents/async_agent_manager.py:85: error: Call to untyped function "start" in
typed context  [no-untyped-call]
                    agent.start()
                    ^~~~~~~~~~~~~
agents/async_agent_manager.py:96: error: Dict entry 0 has incompatible type
"str": "float"; expected "str": "str"  [dict-item]
                    "belief_entropy": agent.metrics.get("belief_entropy", ...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/async_agent_manager.py:97: error: Dict entry 1 has incompatible type
"str": "float"; expected "str": "str"  [dict-item]
                    "avg_free_energy": agent.metrics.get("avg_free_energy"...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
agents/async_agent_manager.py:108: error: Dict entry 1 has incompatible type
"str": "list[int]"; expected "str": "str"  [dict-item]
                    "position": agent.position,
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~
agents/async_agent_manager.py:109: error: Dict entry 2 has incompatible type
"str": "int"; expected "str": "str"  [dict-item]
                    "total_steps": agent.total_steps,
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/async_agent_manager.py:110: error: Dict entry 3 has incompatible type
"str": "dict[str, float]"; expected "str": "str"  [dict-item]
                    "metrics": dict(agent.metrics),
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/async_agent_manager.py:163: error: Need type annotation for
"operation_queue"  [var-annotated]
            self.operation_queue = asyncio.Queue()
                                   ^~~~~~~~~~~~~~~
agents/async_agent_manager.py:164: error: Missing type parameters for generic
type "Future"  [type-arg]
            self.result_callbacks: Dict[str, asyncio.Future] = {}
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/async_agent_manager.py:177: error: Function is missing a return type
annotation  [no-untyped-def]
        async def __aenter__(self):
        ^
agents/async_agent_manager.py:179: error: Call to untyped function "start" in
typed context  [no-untyped-call]
            await self.start()
                  ^~~~~~~~~~~~
agents/async_agent_manager.py:182: error: Function is missing a type annotation
 [no-untyped-def]
        async def __aexit__(self, exc_type, exc_val, exc_tb):
        ^
agents/async_agent_manager.py:184: error: Call to untyped function "stop" in
typed context  [no-untyped-call]
            await self.stop()
                  ^~~~~~~~~~~
agents/async_agent_manager.py:186: error: Function is missing a return type
annotation  [no-untyped-def]
        async def start(self):
        ^
agents/async_agent_manager.py:186: note: Use "-> None" if function does not return a value
agents/async_agent_manager.py:189: error: Incompatible types in assignment
(expression has type "ThreadPoolExecutor", variable has type "None")
[assignment]
            self.process_pool = ThreadPoolExecutor(max_workers=self.max_wo...
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
agents/async_agent_manager.py:192: error: Call to untyped function
"_process_operations" in typed context  [no-untyped-call]
            self.worker_task = asyncio.create_task(self._process_operation...
                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
agents/async_agent_manager.py:196: error: Function is missing a return type
annotation  [no-untyped-def]
        async def stop(self):
        ^
agents/async_agent_manager.py:196: note: Use "-> None" if function does not return a value
agents/async_agent_manager.py:211: error: Function is missing a return type
annotation  [no-untyped-def]
        def register_agent(self, agent_id: str, agent_config: Dict[str, An...
        ^
agents/async_agent_manager.py:223: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _process_operations(self):
        ^
agents/async_agent_manager.py:223: note: Use "-> None" if function does not return a value
agents/async_agent_manager.py:259: error: Incompatible types in assignment
(expression has type "float", target has type "int")  [assignment]
                    self.stats["total_execution_time"] += result.execution...
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~...
agents/async_agent_manager.py:261: error: Incompatible types in assignment
(expression has type "float", target has type "int")  [assignment]
                        self.stats["total_execution_time"]
                        ^
agents/async_agent_manager.py:306: error: Need type annotation for "future"
[var-annotated]
            future = asyncio.Future()
                     ^~~~~~~~~~~~~~~~
agents/async_agent_manager.py:315: error: Returning Any from function declared
to return "AgentOperationResult"  [no-any-return]
                return result
                ^~~~~~~~~~~~~
agents/async_agent_manager.py:369: error: Argument 1 to "append" of "list" has
incompatible type "AgentOperationResult | BaseException"; expected
"AgentOperationResult"  [arg-type]
                    processed_results.append(result)
                                             ^~~~~~
agents/async_agent_manager.py:407: error: Function is missing a return type
annotation  [no-untyped-def]
    async def benchmark_async_multi_agent_performance():
    ^
agents/async_agent_manager.py:517: error: Call to untyped function
"benchmark_async_multi_agent_performance" in typed context  [no-untyped-call]
        results = asyncio.run(benchmark_async_multi_agent_performance())
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/agent_adapter.py:16: error: Function is missing a return type annotation
 [no-untyped-def]
        def __init__(self):
        ^
agents/agent_adapter.py:16: note: Use "-> None" if function does not return a value
agents/agent_adapter.py:52: error: Function is missing a return type annotation
 [no-untyped-def]
        def unregister_agent(self, agent_id: str):
        ^
agents/agent_adapter.py:143: error: Function is missing a return type
annotation  [no-untyped-def]
        def sync_agent_state(self, agent_id: str):
        ^
examples/performance_benchmark_demo.py:35: error: Function is missing a return
type annotation  [no-untyped-def]
    def demo_memory_tracking():
    ^
examples/performance_benchmark_demo.py:35: note: Use "-> None" if function does not return a value
examples/performance_benchmark_demo.py:39: error: Call to untyped function
"MemoryTracker" in typed context  [no-untyped-call]
        tracker = MemoryTracker()
                  ^~~~~~~~~~~~~~~
examples/performance_benchmark_demo.py:40: error: Call to untyped function
"start" in typed context  [no-untyped-call]
        tracker.start()
        ^~~~~~~~~~~~~~~
examples/performance_benchmark_demo.py:51: error: Call to untyped function
"sample" in typed context  [no-untyped-call]
            current_mem = tracker.sample()
                          ^~~~~~~~~~~~~~~~
examples/performance_benchmark_demo.py:64: error: Function is missing a return
type annotation  [no-untyped-def]
    def demo_performance_tracking():
    ^
examples/performance_benchmark_demo.py:64: note: Use "-> None" if function does not return a value
examples/performance_benchmark_demo.py:87: error: Function is missing a return
type annotation  [no-untyped-def]
    def demo_regression_detection():
    ^
examples/performance_benchmark_demo.py:87: note: Use "-> None" if function does not return a value
examples/performance_benchmark_demo.py:168: error: Function is missing a return
type annotation  [no-untyped-def]
    def demo_ci_integration():
    ^
examples/performance_benchmark_demo.py:168: note: Use "-> None" if function does not return a value
examples/performance_benchmark_demo.py:229: error: Function is missing a return
type annotation  [no-untyped-def]
    def demo_report_generation():
    ^
examples/performance_benchmark_demo.py:229: note: Use "-> None" if function does not return a value
examples/performance_benchmark_demo.py:289: error: Function is missing a return
type annotation  [no-untyped-def]
    def main():
    ^
examples/performance_benchmark_demo.py:289: note: Use "-> None" if function does not return a value
examples/performance_benchmark_demo.py:295: error: Call to untyped function
"demo_memory_tracking" in typed context  [no-untyped-call]
            demo_memory_tracking()
            ^~~~~~~~~~~~~~~~~~~~~~
examples/performance_benchmark_demo.py:296: error: Call to untyped function
"demo_performance_tracking" in typed context  [no-untyped-call]
            demo_performance_tracking()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/performance_benchmark_demo.py:297: error: Call to untyped function
"demo_regression_detection" in typed context  [no-untyped-call]
            demo_regression_detection()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
examples/performance_benchmark_demo.py:298: error: Call to untyped function
"demo_ci_integration" in typed context  [no-untyped-call]
            demo_ci_integration()
            ^~~~~~~~~~~~~~~~~~~~~
examples/performance_benchmark_demo.py:299: error: Call to untyped function
"demo_report_generation" in typed context  [no-untyped-call]
            demo_report_generation()
            ^~~~~~~~~~~~~~~~~~~~~~~~
examples/performance_benchmark_demo.py:319: error: Call to untyped function
"main" in typed context  [no-untyped-call]
        main()
        ^~~~~~
examples/demo.py:42: error: Function is missing a return type annotation
[no-untyped-def]
    def main():
    ^
examples/demo.py:42: note: Use "-> None" if function does not return a value
examples/demo.py:70: error: Argument 2 to "set_cell" of "GridWorld" has
incompatible type "int"; expected "CellType"  [arg-type]
        world.set_cell(Position(6, 6), 1)  # Goal
                                       ^
examples/demo.py:71: error: Argument 2 to "set_cell" of "GridWorld" has
incompatible type "int"; expected "CellType"  [arg-type]
        world.set_cell(Position(3, 3), -1)  # Obstacle
                                       ^~
examples/demo.py:72: error: Argument 2 to "set_cell" of "GridWorld" has
incompatible type "int"; expected "CellType"  [arg-type]
        world.set_cell(Position(1, 6), 1)  # Another goal
                                       ^
examples/demo.py:84: error: Call to untyped function "start" in typed context
[no-untyped-call]
        explorer.start()
        ^~~~~~~~~~~~~~~~
examples/demo.py:90: error: Call to untyped function "start" in typed context
[no-untyped-call]
        collector.start()
        ^~~~~~~~~~~~~~~~~
examples/demo.py:105: error: Call to untyped function "EvolutionEngine" in
typed context  [no-untyped-call]
        evolution_engine = EvolutionEngine()
                           ^~~~~~~~~~~~~~~~~
examples/demo.py:122: error: Argument 1 to "get_observation" of "GridWorld" has
incompatible type "int"; expected "str"  [arg-type]
                    explorer.position[0], explorer.position[1]
                    ^~~~~~~~~~~~~~~~~~~~
examples/demo.py:143: error: Argument 1 to "get_observation" of "GridWorld" has
incompatible type "int"; expected "str"  [arg-type]
                    collector.position[0], collector.position[1]
                    ^~~~~~~~~~~~~~~~~~~~~
examples/demo.py:209: error: Non-overlapping equality check (left operand type:
"Cell", right operand type: "Literal[1]")  [comparison-overlap]
                        elif world.grid[x][y] == 1:
                             ^~~~~~~~~~~~~~~~~~~~~
examples/demo.py:211: error: Non-overlapping equality check (left operand type:
"Cell", right operand type: "Literal[-1]")  [comparison-overlap]
                        elif world.grid[x][y] == -1:
                             ^~~~~~~~~~~~~~~~~~~~~~
examples/demo.py:256: error: Call to untyped function "stop" in typed context
[no-untyped-call]
        explorer.stop()
        ^~~~~~~~~~~~~~~
examples/demo.py:257: error: Call to untyped function "stop" in typed context
[no-untyped-call]
        collector.stop()
        ^~~~~~~~~~~~~~~~
examples/demo.py:261: error: Call to untyped function "main" in typed context
[no-untyped-call]
        main()
        ^~~~~~
agents/threading_profiler.py:39: error: Function is missing a return type
annotation  [no-untyped-def]
        def __post_init__(self):
        ^
agents/threading_profiler.py:39: note: Use "-> None" if function does not return a value
agents/threading_profiler.py:86: error: Function is missing a return type
annotation  [no-untyped-def]
        def acquire(self, blocking: bool = True, timeout: float = -1):
        ^
agents/threading_profiler.py:110: error: Function is missing a return type
annotation  [no-untyped-def]
        def release(self):
        ^
agents/threading_profiler.py:110: note: Use "-> None" if function does not return a value
agents/threading_profiler.py:114: error: Function is missing a type annotation
[no-untyped-def]
        def __enter__(self):
        ^
agents/threading_profiler.py:119: error: Function is missing a type annotation
[no-untyped-def]
        def __exit__(self, exc_type, exc_val, exc_tb):
        ^
agents/threading_profiler.py:121: error: Call to untyped function "release" in
typed context  [no-untyped-call]
            self.release()
            ^~~~~~~~~~~~~~
agents/threading_profiler.py:127: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
agents/threading_profiler.py:127: note: Use "-> None" if function does not return a value
agents/threading_profiler.py:142: error: Function is missing a return type
annotation  [no-untyped-def]
        def _record_lock_acquisition(
        ^
agents/threading_profiler.py:172: error: Function is missing a return type
annotation  [no-untyped-def]
        def profile_thread(self, name: str = None):
        ^
agents/threading_profiler.py:172: error: Incompatible default for argument
"name" (default has type "None", argument has type "str")  [assignment]
        def profile_thread(self, name: str = None):
                                             ^~~~
agents/threading_profiler.py:172: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
agents/threading_profiler.py:172: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
agents/threading_profiler.py:196: error: Missing type parameters for generic
type "Callable"  [type-arg]
            workload: List[Callable],
                           ^
agents/threading_profiler.py:197: error: Missing type parameters for generic
type "Tuple"  [type-arg]
            workload_args: List[Tuple] = None,
                                ^
agents/threading_profiler.py:197: error: Incompatible default for argument
"workload_args" (default has type "None", argument has type
"list[tuple[Any, ...]]")  [assignment]
            workload_args: List[Tuple] = None,
                                         ^~~~
agents/threading_profiler.py:197: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True
agents/threading_profiler.py:197: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase
agents/threading_profiler.py:249: error: Function is missing a return type
annotation  [no-untyped-def]
        def _profile_worker(self, func: Callable, *args, **kwargs):
        ^
agents/threading_profiler.py:249: error: Function is missing a type annotation
for one or more arguments  [no-untyped-def]
        def _profile_worker(self, func: Callable, *args, **kwargs):
        ^
agents/threading_profiler.py:249: error: Missing type parameters for generic
type "Callable"  [type-arg]
        def _profile_worker(self, func: Callable, *args, **kwargs):
                                        ^
agents/threading_profiler.py:278: error: Function is missing a return type
annotation  [no-untyped-def]
            def cpu_bound_work():
            ^
agents/threading_profiler.py:282: error: Incompatible types in assignment
(expression has type "float", variable has type "int")  [assignment]
                    result += math.sqrt(i)
                    ^~~~~~~~~~~~~~~~~~~~~~
agents/threading_profiler.py:288: error: Call to untyped function
"cpu_bound_work" in typed context  [no-untyped-call]
                cpu_bound_work()
                ^~~~~~~~~~~~~~~~
agents/threading_profiler.py:307: error: Missing type parameters for generic
type "Callable"  [type-arg]
            self, workload: Callable, max_threads: int = 32
                            ^
agents/threading_profiler.py:382: error: Unsupported operand types for <
("float" and "object")  [operator]
                    if cv > 0.3:  # >30% coefficient of variation
                       ^
agents/threading_profiler.py:469: error: Missing type parameters for generic
type "Callable"  [type-arg]
    def profile_code_section(func: Callable) -> Tuple[Any, pstats.Stats]:
                                   ^
agents/threading_profiler.py:487: error: Function is missing a return type
annotation  [no-untyped-def]
    def benchmark_threading_implementations():
    ^
agents/threading_profiler.py:496: error: Call to untyped function
"ThreadingProfiler" in typed context  [no-untyped-call]
        profiler = ThreadingProfiler()
                   ^~~~~~~~~~~~~~~~~~~
agents/threading_profiler.py:499: error: Function is missing a return type
annotation  [no-untyped-def]
        def simulate_agent_work():
        ^
agents/threading_profiler.py:555: error: Call to untyped function
"benchmark_threading_implementations" in typed context  [no-untyped-call]
        benchmark_threading_implementations()
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/agent_manager.py:20: error: Function is missing a return type annotation
 [no-untyped-def]
        def __init__(self):
        ^
agents/agent_manager.py:20: note: Use "-> None" if function does not return a value
agents/agent_manager.py:24: error: Call to untyped function
"ActiveInferenceGridAdapter" in typed context  [no-untyped-call]
            self.adapter = ActiveInferenceGridAdapter()
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/agent_manager.py:72: error: Function is missing a type annotation for
one or more arguments  [no-untyped-def]
        def create_agent(self, agent_type: str, name: str, **kwargs) -> st...
        ^
agents/agent_manager.py:126: error: Function is missing a return type
annotation  [no-untyped-def]
        def _queue_event(self, agent_id: str, event_type: str, data: dict)...
        ^
agents/agent_manager.py:126: error: Missing type parameters for generic type
"dict"  [type-arg]
    ...   def _queue_event(self, agent_id: str, event_type: str, data: dict):
                                                                       ^
agents/agent_manager.py:136: error: Function is missing a return type
annotation  [no-untyped-def]
        def _process_event_queue(self):
        ^
agents/agent_manager.py:136: note: Use "-> None" if function does not return a value
agents/agent_manager.py:160: error: Function is missing a return type
annotation  [no-untyped-def]
        async def _broadcast_agent_event(
        ^
agents/agent_manager.py:161: error: Missing type parameters for generic type
"dict"  [type-arg]
            self, agent_id: str, event_type: str, data: dict
                                                        ^
agents/agent_manager.py:185: error: Call to untyped function "start" in typed
context  [no-untyped-call]
            agent.start()
            ^~~~~~~~~~~~~
agents/agent_manager.py:208: error: Call to untyped function "stop" in typed
context  [no-untyped-call]
            agent.stop()
            ^~~~~~~~~~~~
agents/agent_manager.py:274: error: Argument 1 to "convert_observation" of
"ActiveInferenceGridAdapter" has incompatible type "dict[str, Any] | None";
expected "dict[str, Any]"  [arg-type]
    ...   ai_observation = self.adapter.convert_observation(grid_observation)
                                                            ^~~~~~~~~~~~~~~~
api/v1/graphql_resolvers.py:24: error: Call to untyped function "AgentManager"
in typed context  [no-untyped-call]
        agent_manager = AgentManager()
                        ^~~~~~~~~~~~~~
api/v1/graphql_resolvers.py:25: error: Call to untyped function
"CoalitionManager" in typed context  [no-untyped-call]
        coalition_manager = CoalitionManager()
                            ^~~~~~~~~~~~~~~~~~
api/v1/graphql_resolvers.py:37: error: Function is missing a return type
annotation  [no-untyped-def]
        def __init__(self):
        ^
api/v1/graphql_resolvers.py:37: note: Use "-> None" if function does not return a value
api/v1/graphql_resolvers.py:77: error: Argument 1 to "fromisoformat" of "date"
has incompatible type "Any | None"; expected "str"  [arg-type]
                                    agent_status.get("last_action_at")
                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/graphql_resolvers.py:117: error: Argument 1 to "fromisoformat" of "date"
has incompatible type "Any | None"; expected "str"  [arg-type]
                        datetime.fromisoformat(agent_status.get("last_acti...
                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~...
api/v1/graphql_resolvers.py:404: error: Call to untyped function
"GraphQLResolvers" in typed context  [no-untyped-call]
    resolvers = GraphQLResolvers()
                ^~~~~~~~~~~~~~~~~~
api/v1/agents.py:29: error: Missing type parameters for generic type "dict"
[type-arg]
        parameters: Optional[dict] = Field(default_factory=dict)
                             ^
api/v1/agents.py:77: error: Call to untyped function "AgentManager" in typed
context  [no-untyped-call]
        agent_manager = AgentManager()
                        ^~~~~~~~~~~~~~
api/v1/agents.py:83: error: Incompatible types in assignment (expression has
type "None", variable has type "AgentManager")  [assignment]
        agent_manager = None
                        ^~~~
api/v1/agents.py:88: error: Untyped decorator makes function "create_agent"
untyped  [misc]
    @require_permission(Permission.CREATE_AGENT)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/agents.py:131: error: Argument "name" to "Agent" has incompatible type
"Column[str]"; expected "str"  [arg-type]
            name=db_agent.name,
                 ^~~~~~~~~~~~~
api/v1/agents.py:132: error: Argument "template" to "Agent" has incompatible
type "Column[str]"; expected "str"  [arg-type]
            template=db_agent.template,
                     ^~~~~~~~~~~~~~~~~
api/v1/agents.py:134: error: Argument "created_at" to "Agent" has incompatible
type "Column[datetime]"; expected "datetime"  [arg-type]
            created_at=db_agent.created_at,
                       ^~~~~~~~~~~~~~~~~~~
api/v1/agents.py:135: error: Argument "parameters" to "Agent" has incompatible
type "Column[Any]"; expected "dict[str, Any]"  [arg-type]
            parameters=db_agent.parameters,
                       ^~~~~~~~~~~~~~~~~~~
api/v1/agents.py:136: error: Argument "inference_count" to "Agent" has
incompatible type "Column[int]"; expected "int"  [arg-type]
            inference_count=db_agent.inference_count,
                            ^~~~~~~~~~~~~~~~~~~~~~~~
api/v1/agents.py:141: error: Untyped decorator makes function "list_agents"
untyped  [misc]
    @require_permission(Permission.VIEW_AGENTS)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/agents.py:169: error: Argument "name" to "Agent" has incompatible type
"Column[str]"; expected "str"  [arg-type]
                name=agent.name,
                     ^~~~~~~~~~
api/v1/agents.py:170: error: Argument "template" to "Agent" has incompatible
type "Column[str]"; expected "str"  [arg-type]
                template=agent.template,
                         ^~~~~~~~~~~~~~
api/v1/agents.py:172: error: Argument "created_at" to "Agent" has incompatible
type "Column[datetime]"; expected "datetime"  [arg-type]
                created_at=agent.created_at,
                           ^~~~~~~~~~~~~~~~
api/v1/agents.py:173: error: Argument "last_active" to "Agent" has incompatible
type "Column[datetime]"; expected "datetime | None"  [arg-type]
                last_active=agent.last_active,
                            ^~~~~~~~~~~~~~~~~
api/v1/agents.py:174: error: Argument "inference_count" to "Agent" has
incompatible type "Column[int]"; expected "int"  [arg-type]
                inference_count=agent.inference_count,
                                ^~~~~~~~~~~~~~~~~~~~~
api/v1/agents.py:175: error: Argument "parameters" to "Agent" has incompatible
type "Column[Any]"; expected "dict[str, Any]"  [arg-type]
                parameters=agent.parameters,
                           ^~~~~~~~~~~~~~~~
api/v1/agents.py:182: error: Untyped decorator makes function "get_agent"
untyped  [misc]
    @require_permission(Permission.VIEW_AGENTS)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/agents.py:210: error: Argument "name" to "Agent" has incompatible type
"Column[str]"; expected "str"  [arg-type]
            name=db_agent.name,
                 ^~~~~~~~~~~~~
api/v1/agents.py:211: error: Argument "template" to "Agent" has incompatible
type "Column[str]"; expected "str"  [arg-type]
            template=db_agent.template,
                     ^~~~~~~~~~~~~~~~~
api/v1/agents.py:213: error: Argument "created_at" to "Agent" has incompatible
type "Column[datetime]"; expected "datetime"  [arg-type]
            created_at=db_agent.created_at,
                       ^~~~~~~~~~~~~~~~~~~
api/v1/agents.py:214: error: Argument "last_active" to "Agent" has incompatible
type "Column[datetime]"; expected "datetime | None"  [arg-type]
            last_active=db_agent.last_active,
                        ^~~~~~~~~~~~~~~~~~~~
api/v1/agents.py:215: error: Argument "inference_count" to "Agent" has
incompatible type "Column[int]"; expected "int"  [arg-type]
            inference_count=db_agent.inference_count,
                            ^~~~~~~~~~~~~~~~~~~~~~~~
api/v1/agents.py:216: error: Argument "parameters" to "Agent" has incompatible
type "Column[Any]"; expected "dict[str, Any]"  [arg-type]
            parameters=db_agent.parameters,
                       ^~~~~~~~~~~~~~~~~~~
api/v1/agents.py:221: error: Untyped decorator makes function
"update_agent_status" untyped  [misc]
    @require_permission(Permission.MODIFY_AGENT)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/agents.py:227: error: Missing type parameters for generic type "dict"
[type-arg]
    ) -> dict:
         ^
api/v1/agents.py:258: error: Incompatible types in assignment (expression has
type "AgentStatus", variable has type "Column[AgentStatus]")  [assignment]
        db_agent.status = status_enum
                          ^~~~~~~~~~~
api/v1/agents.py:259: error: Incompatible types in assignment (expression has
type "datetime", variable has type "Column[datetime]")  [assignment]
        db_agent.last_active = datetime.now()
                               ^~~~~~~~~~~~~~
api/v1/agents.py:276: error: Untyped decorator makes function "delete_agent"
untyped  [misc]
    @require_permission(Permission.DELETE_AGENT)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/agents.py:281: error: Missing type parameters for generic type "dict"
[type-arg]
    ) -> dict:
         ^
api/v1/agents.py:315: error: Untyped decorator makes function
"get_agent_metrics" untyped  [misc]
    @require_permission(Permission.VIEW_METRICS)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/agents.py:341: error: Need type annotation for "metrics_data"
[var-annotated]
        metrics_data = db_agent.metrics or {}
                       ^~~~~~~~~~~~~~~~~~~~~~
api/v1/agents.py:345: error: Argument "total_inferences" to "AgentMetrics" has
incompatible type "Column[int]"; expected "int"  [arg-type]
            total_inferences=db_agent.inference_count,
                             ^~~~~~~~~~~~~~~~~~~~~~~~
api/v1/agents.py:348: error: Argument "last_update" to "AgentMetrics" has
incompatible type "Column[datetime]"; expected "datetime"  [arg-type]
            last_update=db_agent.updated_at,
                        ^~~~~~~~~~~~~~~~~~~
api/v1/agents.py:369: error: Untyped decorator makes function
"create_agent_from_gmn" untyped  [misc]
    @require_permission(Permission.CREATE_AGENT)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/agents.py:394: error: Call to untyped function "GMNParser" in typed
context  [no-untyped-call]
            parser = GMNParser()
                     ^~~~~~~~~~~
api/v1/agents.py:431: error: Argument "name" to "Agent" has incompatible type
"Column[str]"; expected "str"  [arg-type]
                name=db_agent.name,
                     ^~~~~~~~~~~~~
api/v1/agents.py:432: error: Argument "template" to "Agent" has incompatible
type "Column[str]"; expected "str"  [arg-type]
                template=db_agent.template,
                         ^~~~~~~~~~~~~~~~~
api/v1/agents.py:434: error: Argument "created_at" to "Agent" has incompatible
type "Column[datetime]"; expected "datetime"  [arg-type]
                created_at=db_agent.created_at,
                           ^~~~~~~~~~~~~~~~~~~
api/v1/agents.py:435: error: Argument "parameters" to "Agent" has incompatible
type "Column[Any]"; expected "dict[str, Any]"  [arg-type]
                parameters=db_agent.parameters,
                           ^~~~~~~~~~~~~~~~~~~
api/v1/agents.py:436: error: Argument "inference_count" to "Agent" has
incompatible type "Column[int]"; expected "int"  [arg-type]
                inference_count=db_agent.inference_count,
                                ^~~~~~~~~~~~~~~~~~~~~~~~
api/v1/agents.py:447: error: Untyped decorator makes function
"get_agent_gmn_spec" untyped  [misc]
    @require_permission(Permission.VIEW_AGENTS)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/agents.py:452: error: Missing type parameters for generic type "dict"
[type-arg]
    ) -> dict:
         ^
api/v1/agents.py:484: error: Untyped decorator makes function
"update_agent_gmn_spec" untyped  [misc]
    @require_permission(Permission.MODIFY_AGENT)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/agents.py:490: error: Missing type parameters for generic type "dict"
[type-arg]
    ) -> dict:
         ^
api/v1/agents.py:511: error: Call to untyped function "GMNParser" in typed
context  [no-untyped-call]
            parser = GMNParser()
                     ^~~~~~~~~~~
api/v1/agents.py:516: error: Incompatible types in assignment (expression has
type "str", variable has type "Column[str]")  [assignment]
            db_agent.gmn_spec = gmn_spec
                                ^~~~~~~~
api/v1/agents.py:517: error: Incompatible types in assignment (expression has
type "Column[Any] | dict[Never, Never]", variable has type "Column[Any]")
[assignment]
            db_agent.parameters = db_agent.parameters or {}
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/agents.py:546: error: Untyped decorator makes function
"get_gmn_examples" untyped  [misc]
    @require_permission(Permission.VIEW_AGENTS)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/agents.py:549: error: Missing type parameters for generic type "dict"
[type-arg]
    ) -> dict:
         ^
api/v1/agents.py:609: error: Untyped decorator makes function
"list_agent_templates" untyped  [misc]
    @require_permission(Permission.VIEW_AGENTS)
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
api/v1/agents.py:612: error: Missing type parameters for generic type "dict"
[type-arg]
    ) -> List[dict]:
              ^
agents/threading_optimization_analysis.py:54: error: Function is missing a
return type annotation  [no-untyped-def]
        def __init__(self):
        ^
agents/threading_optimization_analysis.py:54: note: Use "-> None" if function does not return a value
agents/threading_optimization_analysis.py:56: error: Call to untyped function
"ThreadingProfiler" in typed context  [no-untyped-call]
            self.profiler = ThreadingProfiler()
                            ^~~~~~~~~~~~~~~~~~~
agents/threading_optimization_analysis.py:71: error: Function is missing a type
annotation  [no-untyped-def]
                def __init__(self, agent_id):
                ^
agents/threading_optimization_analysis.py:78: error: Function is missing a type
annotation  [no-untyped-def]
                def step(self, observation):
                ^
agents/threading_optimization_analysis.py:88: error: Call to untyped function
"MockAgent" in typed context  [no-untyped-call]
                agent = MockAgent(f"agent_{i}")
                        ^~~~~~~~~~~~~~~~~~~~~~~
agents/threading_optimization_analysis.py:158: error: Function is missing a
return type annotation  [no-untyped-def]
            def io_bound_work():
            ^
agents/threading_optimization_analysis.py:163: error: Function is missing a
return type annotation  [no-untyped-def]
            def cpu_bound_work():
            ^
agents/threading_optimization_analysis.py:170: error: Function is missing a
return type annotation  [no-untyped-def]
            def mixed_work():
            ^
agents/threading_optimization_analysis.py:252: error: Function is missing a
return type annotation  [no-untyped-def]
            def check_blocking_io():
            ^
agents/threading_optimization_analysis.py:252: note: Use "-> None" if function does not return a value
agents/threading_optimization_analysis.py:277: error: Call to untyped function
"check_blocking_io" in typed context  [no-untyped-call]
            check_blocking_io()
            ^~~~~~~~~~~~~~~~~~~
agents/threading_optimization_analysis.py:367: error: Function is missing a
return type annotation  [no-untyped-def]
            def measure_context_switches():
            ^
agents/threading_optimization_analysis.py:394: error: Call to untyped function
"measure_context_switches" in typed context  [no-untyped-call]
            switches = measure_context_switches()
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~
agents/threading_optimization_analysis.py:491: error: Value of type "object" is
not indexable  [index]
                summary["by_category"][opp.category] += 1
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/threading_optimization_analysis.py:491: error: Unsupported target for
indexed assignment ("object")  [index]
                summary["by_category"][opp.category] += 1
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/threading_optimization_analysis.py:496: error: Function is missing a
return type annotation  [no-untyped-def]
    def generate_optimization_report():
    ^
agents/threading_optimization_analysis.py:503: error: Call to untyped function
"ThreadingOptimizationAnalyzer" in typed context  [no-untyped-call]
        analyzer = ThreadingOptimizationAnalyzer()
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
agents/threading_optimization_analysis.py:578: error: Call to untyped function
"generate_optimization_report" in typed context  [no-untyped-call]
        opportunities, summary = generate_optimization_report()
                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/rbac_comprehensive_security_audit.py:50: error: Module
"auth.security_implementation" has no attribute "verify_token"  [attr-defined]
        from auth.security_implementation import (
        ^
security/rbac_comprehensive_security_audit.py:72: error: Name "UserRole"
already defined (possibly by an import)  [no-redef]
        class UserRole:
        ^
security/rbac_comprehensive_security_audit.py:78: error: Name "Permission"
already defined (possibly by an import)  [no-redef]
        class Permission:
        ^
security/rbac_comprehensive_security_audit.py:113: error: Name "AccessContext"
already defined (possibly by an import)  [no-redef]
        class AccessContext:
        ^
security/rbac_comprehensive_security_audit.py:114: error: Function is missing a
type annotation  [no-untyped-def]
            def __init__(self, **kwargs):
            ^
security/rbac_comprehensive_security_audit.py:118: error: Name
"ResourceContext" already defined (possibly by an import)  [no-redef]
        class ResourceContext:
        ^
security/rbac_comprehensive_security_audit.py:119: error: Function is missing a
type annotation  [no-untyped-def]
            def __init__(self, **kwargs):
            ^
security/rbac_comprehensive_security_audit.py:123: error: Name
"enhanced_rbac_manager" already defined (possibly by an import)  [no-redef]
        class enhanced_rbac_manager:
        ^
security/rbac_comprehensive_security_audit.py:129: error: Function is missing a
type annotation  [no-untyped-def]
            def evaluate_abac_access(access_context, resource_context, act...
            ^
security/rbac_comprehensive_security_audit.py:133: error: Function is missing a
type annotation  [no-untyped-def]
            def request_role_assignment(*args, **kwargs):
            ^
security/rbac_comprehensive_security_audit.py:141: error: Function is missing a
type annotation  [no-untyped-def]
        def create_access_token(data):
        ^
security/rbac_comprehensive_security_audit.py:141: error: All conditional
function variants must have identical signatures  [misc]
        def create_access_token(data):
        ^
security/rbac_comprehensive_security_audit.py:141: note: Original:
security/rbac_comprehensive_security_audit.py:141: note:     def create_access_token(data: dict[str, Any], expires_delta: timedelta | None = ...) -> str
security/rbac_comprehensive_security_audit.py:141: note: Redefinition:
security/rbac_comprehensive_security_audit.py:141: note:     def create_access_token(data: Any) -> Any
security/rbac_comprehensive_security_audit.py:144: error: Function is missing a
type annotation  [no-untyped-def]
        def verify_token(token):
        ^
security/rbac_comprehensive_security_audit.py:185: error: Function is missing a
return type annotation  [no-untyped-def]
        def __init__(self):
        ^
security/rbac_comprehensive_security_audit.py:185: note: Use "-> None" if function does not return a value
security/rbac_comprehensive_security_audit.py:194: error: Call to untyped
function "_setup_test_environment" in typed context  [no-untyped-call]
            self._setup_test_environment()
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/rbac_comprehensive_security_audit.py:198: error: Function is missing a
return type annotation  [no-untyped-def]
        def _setup_test_environment(self):
        ^
security/rbac_comprehensive_security_audit.py:198: note: Use "-> None" if function does not return a value
security/rbac_comprehensive_security_audit.py:317: error: Call to untyped
function (unknown) in typed context  [no-untyped-call]
                    await test_method()
                          ^~~~~~~~~~~~~
security/rbac_comprehensive_security_audit.py:335: error: List comprehension
has incompatible type List[dict[str, object]]; expected List[str]  [misc]
                {
                ^
security/rbac_comprehensive_security_audit.py:347: error: List comprehension
has incompatible type List[dict[str, Sequence[str] | None]]; expected List[str]
[misc]
                {
                ^
security/rbac_comprehensive_security_audit.py:365: error: Incompatible types in
assignment (expression has type "list[dict[str, Any]]", target has type
"Collection[str]")  [assignment]
            audit_results["recommendations"] = self._generate_recommendati...
                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~...
security/rbac_comprehensive_security_audit.py:370: error: Function is missing a
return type annotation  [no-untyped-def]
        async def _test_role_permission_matrix(self):
        ^
security/rbac_comprehensive_security_audit.py:370: note: Use "-> None" if function does not return a value
security/rbac_comprehensive_security_audit.py:393: error: Need type annotation
for "permission_overlap" (hint:
"permission_overlap: dict[<type>, <type>] = ...")  [var-annotated]
            permission_overlap = {}
            ^~~~~~~~~~~~~~~~~~
security/rbac_comprehensive_security_audit.py:454: error: Function is missing a
return type annotation  [no-untyped-def]
        async def _test_principle_of_least_privilege(self):
        ^
security/rbac_comprehensive_security_audit.py:454: note: Use "-> None" if function does not return a value
security/rbac_comprehensive_security_audit.py:484: error: Unsupported operand
types for + ("object" and "int")  [operator]
                    analysis["privilege_score"] += weight
                    ^
security/rbac_comprehensive_security_audit.py:487: error: "object" has no
attribute "append"  [attr-defined]
                        analysis["high_risk_permissions"].append(permissio...
                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
security/rbac_comprehensive_security_audit.py:492: error: Unsupported operand
types for < ("int" and "object")  [operator]
                if role == UserRole.OBSERVER and analysis["privilege_score...
                                                 ^
security/rbac_comprehensive_security_audit.py:500: error: Unsupported operand
types for < ("int" and "object")  [operator]
                    and analysis["privilege_score"] > 20
                        ^
security/rbac_comprehensive_security_audit.py:526: error: Function is missing a
return type annotation  [no-untyped-def]
        async def _test_vertical_privilege_escalation(self):
        ^
security/rbac_comprehensive_security_audit.py:526: note: Use "-> None" if function does not return a value
security/rbac_comprehensive_security_audit.py:556: error: Invalid index type
"str" for "dict[UserRole, list[Permission]]"; expected type "UserRole"  [index]
    ...           source_permissions = ROLE_PERMISSIONS[scenario["source_role...
                                                        ^~~~~~~~~~~~~~~~~~~~~~~
security/rbac_comprehensive_security_audit.py:608: error: Function is missing a
return type annotation  [no-untyped-def]
        async def _test_horizontal_access_controls(self):
        ^
security/rbac_comprehensive_security_audit.py:608: note: Use "-> None" if function does not return a value
security/rbac_comprehensive_security_audit.py:683: error: Function is missing a
return type annotation  [no-untyped-def]
        async def _test_abac_policy_evaluation(self):
        ^
security/rbac_comprehensive_security_audit.py:683: note: Use "-> None" if function does not return a value
security/rbac_comprehensive_security_audit.py:778: error: Need type annotation
for "priority_conflicts" (hint:
"priority_conflicts: dict[<type>, <type>] = ...")  [var-annotated]
            priority_conflicts = {}
            ^~~~~~~~~~~~~~~~~~
security/rbac_comprehensive_security_audit.py:805: error: Function is missing a
return type annotation  [no-untyped-def]
        async def _test_audit_logging_integrity(self):
        ^
security/rbac_comprehensive_security_audit.py:805: note: Use "-> None" if function does not return a value
security/rbac_comprehensive_security_audit.py:873: error: Function is missing a
return type annotation  [no-untyped-def]
        async def _test_role_hierarchy_validation(self):
        ^
security/rbac_comprehensive_security_audit.py:873: note: Use "-> None" if function does not return a value
security/rbac_comprehensive_security_audit.py:906: error: Unsupported right
operand type for in ("object")  [operator]
                    should_approve = target_role in can_approve
                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~
security/rbac_comprehensive_security_audit.py:947: error: Unsupported left
operand type for < ("object")  [operator]
                    if other_info["level"] < level:
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~
security/rbac_comprehensive_security_audit.py:979: error: Function is missing a
return type annotation  [no-untyped-def]
        async def _test_indirect_object_references(self):
        ^
security/rbac_comprehensive_security_audit.py:979: note: Use "-> None" if function does not return a value
security/rbac_comprehensive_security_audit.py:1071: error: Function is missing
a return type annotation  [no-untyped-def]
        async def _test_api_endpoint_authorization(self):
        ^
security/rbac_comprehensive_security_audit.py:1071: note: Use "-> None" if function does not return a value
security/rbac_comprehensive_security_audit.py:1143: error: Invalid index type
"str" for "dict[UserRole, list[Permission]]"; expected type "UserRole"  [index]
    ...         if test["required_permission"] not in ROLE_PERMISSIONS[role]:
                                                                       ^~~~
security/rbac_comprehensive_security_audit.py:1172: error: Function is missing
a return type annotation  [no-untyped-def]
        async def _test_session_management_security(self):
        ^
security/rbac_comprehensive_security_audit.py:1172: note: Use "-> None" if function does not return a value
security/rbac_comprehensive_security_audit.py:1202: error: Unsupported operand
types for < ("timedelta" and "object")  [operator]
                if test["token_type"] == "access" and test[
                                                      ^
security/rbac_comprehensive_security_audit.py:1210: error: Unsupported operand
types for < ("timedelta" and "object")  [operator]
                if test["token_type"] == "refresh" and test[
                                                       ^
security/rbac_comprehensive_security_audit.py:1255: error: Function is missing
a return type annotation  [no-untyped-def]
        async def _test_token_manipulation_attacks(self):
        ^
security/rbac_comprehensive_security_audit.py:1255: note: Use "-> None" if function does not return a value
security/rbac_comprehensive_security_audit.py:1266: error: Unexpected keyword
argument "email" for "TokenData"  [call-arg]
                token_data = TokenData(
                             ^
security/rbac_comprehensive_security_audit.py:1275: error: Argument 1 to
"create_access_token" has incompatible type "TokenData"; expected
"dict[str, Any]"  [arg-type]
                token = create_access_token(token_data)
                                            ^~~~~~~~~~
security/rbac_comprehensive_security_audit.py:1346: error: Function is missing
a return type annotation  [no-untyped-def]
        async def _test_concurrent_access_control(self):
        ^
security/rbac_comprehensive_security_audit.py:1346: note: Use "-> None" if function does not return a value
security/rbac_comprehensive_security_audit.py:1425: error: Function is missing
a return type annotation  [no-untyped-def]
        async def _test_resource_level_authorization(self):
        ^
security/rbac_comprehensive_security_audit.py:1425: note: Use "-> None" if function does not return a value
security/rbac_comprehensive_security_audit.py:1523: error: "str" has no
attribute "value"  [attr-defined]
    ... f"Sensitivity level '{test['level']}' allows: {[r.value for r in test...
                                                        ^~~~~~~
security/rbac_comprehensive_security_audit.py:1540: error: Function is missing
a return type annotation  [no-untyped-def]
        async def _test_cross_tenant_isolation(self):
        ^
security/rbac_comprehensive_security_audit.py:1540: note: Use "-> None" if function does not return a value
security/rbac_comprehensive_security_audit.py:1627: error: Function is missing
a return type annotation  [no-untyped-def]
        async def _test_authentication_bypass_attempts(self):
        ^
security/rbac_comprehensive_security_audit.py:1627: note: Use "-> None" if function does not return a value
security/rbac_comprehensive_security_audit.py:1712: error: Function is missing
a return type annotation  [no-untyped-def]
        async def _test_authorization_boundary_conditions(self):
        ^
security/rbac_comprehensive_security_audit.py:1712: note: Use "-> None" if function does not return a value
security/rbac_comprehensive_security_audit.py:1769: error: Incompatible types
in assignment (expression has type "object", variable has type
"dict[str, Collection[str]]")  [assignment]
            for test in performance_tests:
            ^
security/rbac_comprehensive_security_audit.py:1788: error: Incompatible types
in assignment (expression has type "dict[str, str]", variable has type
"dict[str, Collection[str]]")  [assignment]
            for test in resource_limit_tests:
            ^
security/rbac_comprehensive_security_audit.py:1788: note: "Dict" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
security/rbac_comprehensive_security_audit.py:1788: note: Consider using "Mapping" instead, which is covariant in the value type
security/rbac_comprehensive_security_audit.py:2065: error: Function is missing
a return type annotation  [no-untyped-def]
    async def main():
    ^
security/rbac_comprehensive_security_audit.py:2065: note: Use "-> None" if function does not return a value
security/rbac_comprehensive_security_audit.py:2072: error: Call to untyped
function "RBACSecurityAuditor" in typed context  [no-untyped-call]
        auditor = RBACSecurityAuditor()
                  ^~~~~~~~~~~~~~~~~~~~~
security/rbac_comprehensive_security_audit.py:2119: error: Call to untyped
function "main" in typed context  [no-untyped-call]
        asyncio.run(main())
                    ^~~~~~
api/main.py:35: error: Function is missing a return type annotation
[no-untyped-def]
    async def lifespan(app: FastAPI):
    ^
api/main.py:122: error: Function is missing a return type annotation
[no-untyped-def]
    async def root():
    ^
api/main.py:133: error: Function is missing a return type annotation
[no-untyped-def]
    async def health_check():
    ^

<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="5" failures="0" skipped="0" tests="5" time="13.537" timestamp="2025-07-24T18:37:15.889829+00:00" hostname="pkrvmpptgkbjq6m"><testcase classname="" name="tests.unit.test_api_agents" time="0.000"><error message="collection failure">ImportError while importing test module '/home/runner/work/FreeAgentics/FreeAgentics/tests/unit/test_api_agents.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
venv/lib/python3.12/site-packages/pydantic/networks.py:419: in import_email_validator
    import email_validator
E   ModuleNotFoundError: No module named 'email_validator'

The above exception was the direct cause of the following exception:
/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/importlib/__init__.py:90: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/unit/test_api_agents.py:14: in &lt;module&gt;
    from api.main import app
api/main.py:11: in &lt;module&gt;
    from api.v1 import (
api/v1/auth.py:38: in &lt;module&gt;
    class UserRegistration(BaseModel):
venv/lib/python3.12/site-packages/pydantic/_internal/_model_construction.py:224: in __new__
    complete_model_class(
venv/lib/python3.12/site-packages/pydantic/_internal/_model_construction.py:577: in complete_model_class
    schema = cls.__get_pydantic_core_schema__(cls, handler)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/main.py:671: in __get_pydantic_core_schema__
    return handler(source)
           ^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_schema_generation_shared.py:83: in __call__
    schema = self._handler(source_type)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:655: in generate_schema
    schema = self._generate_schema_inner(obj)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:924: in _generate_schema_inner
    return self._model_schema(obj)
           ^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:739: in _model_schema
    {k: self._generate_md_field_schema(k, v, decorators) for k, v in fields.items()},
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:1115: in _generate_md_field_schema
    common_field = self._common_field_schema(name, field_info, decorators)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:1308: in _common_field_schema
    schema = self._apply_annotations(
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:2107: in _apply_annotations
    schema = get_inner_schema(source_type)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_schema_generation_shared.py:83: in __call__
    schema = self._handler(source_type)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:2086: in inner_handler
    from_property = self._generate_schema_from_property(obj, source_type)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:821: in _generate_schema_from_property
    schema = get_schema(
venv/lib/python3.12/site-packages/pydantic/networks.py:459: in __get_pydantic_core_schema__
    import_email_validator()
venv/lib/python3.12/site-packages/pydantic/networks.py:421: in import_email_validator
    raise ImportError('email-validator is not installed, run `pip install pydantic[email]`') from e
E   ImportError: email-validator is not installed, run `pip install pydantic[email]`</error></testcase><testcase classname="" name="tests.unit.test_api_agents_broken" time="0.000"><error message="collection failure">ImportError while importing test module '/home/runner/work/FreeAgentics/FreeAgentics/tests/unit/test_api_agents_broken.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
venv/lib/python3.12/site-packages/pydantic/networks.py:419: in import_email_validator
    import email_validator
E   ModuleNotFoundError: No module named 'email_validator'

The above exception was the direct cause of the following exception:
/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/importlib/__init__.py:90: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/unit/test_api_agents_broken.py:20: in &lt;module&gt;
    from api.main import app
api/main.py:11: in &lt;module&gt;
    from api.v1 import (
api/v1/auth.py:38: in &lt;module&gt;
    class UserRegistration(BaseModel):
venv/lib/python3.12/site-packages/pydantic/_internal/_model_construction.py:224: in __new__
    complete_model_class(
venv/lib/python3.12/site-packages/pydantic/_internal/_model_construction.py:577: in complete_model_class
    schema = cls.__get_pydantic_core_schema__(cls, handler)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/main.py:671: in __get_pydantic_core_schema__
    return handler(source)
           ^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_schema_generation_shared.py:83: in __call__
    schema = self._handler(source_type)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:655: in generate_schema
    schema = self._generate_schema_inner(obj)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:924: in _generate_schema_inner
    return self._model_schema(obj)
           ^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:739: in _model_schema
    {k: self._generate_md_field_schema(k, v, decorators) for k, v in fields.items()},
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:1115: in _generate_md_field_schema
    common_field = self._common_field_schema(name, field_info, decorators)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:1308: in _common_field_schema
    schema = self._apply_annotations(
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:2107: in _apply_annotations
    schema = get_inner_schema(source_type)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_schema_generation_shared.py:83: in __call__
    schema = self._handler(source_type)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:2086: in inner_handler
    from_property = self._generate_schema_from_property(obj, source_type)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:821: in _generate_schema_from_property
    schema = get_schema(
venv/lib/python3.12/site-packages/pydantic/networks.py:459: in __get_pydantic_core_schema__
    import_email_validator()
venv/lib/python3.12/site-packages/pydantic/networks.py:421: in import_email_validator
    raise ImportError('email-validator is not installed, run `pip install pydantic[email]`') from e
E   ImportError: email-validator is not installed, run `pip install pydantic[email]`</error></testcase><testcase classname="" name="tests.unit.test_api_agents_simple" time="0.000"><error message="collection failure">ImportError while importing test module '/home/runner/work/FreeAgentics/FreeAgentics/tests/unit/test_api_agents_simple.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
venv/lib/python3.12/site-packages/pydantic/networks.py:419: in import_email_validator
    import email_validator
E   ModuleNotFoundError: No module named 'email_validator'

The above exception was the direct cause of the following exception:
/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/importlib/__init__.py:90: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/unit/test_api_agents_simple.py:12: in &lt;module&gt;
    from api.main import app
api/main.py:11: in &lt;module&gt;
    from api.v1 import (
api/v1/auth.py:38: in &lt;module&gt;
    class UserRegistration(BaseModel):
venv/lib/python3.12/site-packages/pydantic/_internal/_model_construction.py:224: in __new__
    complete_model_class(
venv/lib/python3.12/site-packages/pydantic/_internal/_model_construction.py:577: in complete_model_class
    schema = cls.__get_pydantic_core_schema__(cls, handler)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/main.py:671: in __get_pydantic_core_schema__
    return handler(source)
           ^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_schema_generation_shared.py:83: in __call__
    schema = self._handler(source_type)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:655: in generate_schema
    schema = self._generate_schema_inner(obj)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:924: in _generate_schema_inner
    return self._model_schema(obj)
           ^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:739: in _model_schema
    {k: self._generate_md_field_schema(k, v, decorators) for k, v in fields.items()},
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:1115: in _generate_md_field_schema
    common_field = self._common_field_schema(name, field_info, decorators)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:1308: in _common_field_schema
    schema = self._apply_annotations(
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:2107: in _apply_annotations
    schema = get_inner_schema(source_type)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_schema_generation_shared.py:83: in __call__
    schema = self._handler(source_type)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:2086: in inner_handler
    from_property = self._generate_schema_from_property(obj, source_type)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:821: in _generate_schema_from_property
    schema = get_schema(
venv/lib/python3.12/site-packages/pydantic/networks.py:459: in __get_pydantic_core_schema__
    import_email_validator()
venv/lib/python3.12/site-packages/pydantic/networks.py:421: in import_email_validator
    raise ImportError('email-validator is not installed, run `pip install pydantic[email]`') from e
E   ImportError: email-validator is not installed, run `pip install pydantic[email]`</error></testcase><testcase classname="" name="tests.unit.test_api_agents_simple_broken" time="0.000"><error message="collection failure">ImportError while importing test module '/home/runner/work/FreeAgentics/FreeAgentics/tests/unit/test_api_agents_simple_broken.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
venv/lib/python3.12/site-packages/pydantic/networks.py:419: in import_email_validator
    import email_validator
E   ModuleNotFoundError: No module named 'email_validator'

The above exception was the direct cause of the following exception:
/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/importlib/__init__.py:90: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/unit/test_api_agents_simple_broken.py:13: in &lt;module&gt;
    from api.main import app
api/main.py:11: in &lt;module&gt;
    from api.v1 import (
api/v1/auth.py:38: in &lt;module&gt;
    class UserRegistration(BaseModel):
venv/lib/python3.12/site-packages/pydantic/_internal/_model_construction.py:224: in __new__
    complete_model_class(
venv/lib/python3.12/site-packages/pydantic/_internal/_model_construction.py:577: in complete_model_class
    schema = cls.__get_pydantic_core_schema__(cls, handler)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/main.py:671: in __get_pydantic_core_schema__
    return handler(source)
           ^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_schema_generation_shared.py:83: in __call__
    schema = self._handler(source_type)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:655: in generate_schema
    schema = self._generate_schema_inner(obj)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:924: in _generate_schema_inner
    return self._model_schema(obj)
           ^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:739: in _model_schema
    {k: self._generate_md_field_schema(k, v, decorators) for k, v in fields.items()},
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:1115: in _generate_md_field_schema
    common_field = self._common_field_schema(name, field_info, decorators)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:1308: in _common_field_schema
    schema = self._apply_annotations(
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:2107: in _apply_annotations
    schema = get_inner_schema(source_type)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_schema_generation_shared.py:83: in __call__
    schema = self._handler(source_type)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:2086: in inner_handler
    from_property = self._generate_schema_from_property(obj, source_type)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:821: in _generate_schema_from_property
    schema = get_schema(
venv/lib/python3.12/site-packages/pydantic/networks.py:459: in __get_pydantic_core_schema__
    import_email_validator()
venv/lib/python3.12/site-packages/pydantic/networks.py:421: in import_email_validator
    raise ImportError('email-validator is not installed, run `pip install pydantic[email]`') from e
E   ImportError: email-validator is not installed, run `pip install pydantic[email]`</error></testcase><testcase classname="" name="tests.unit.test_api_auth_security" time="0.000"><error message="collection failure">ImportError while importing test module '/home/runner/work/FreeAgentics/FreeAgentics/tests/unit/test_api_auth_security.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
venv/lib/python3.12/site-packages/pydantic/networks.py:419: in import_email_validator
    import email_validator
E   ModuleNotFoundError: No module named 'email_validator'

The above exception was the direct cause of the following exception:
/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/importlib/__init__.py:90: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
tests/unit/test_api_auth_security.py:19: in &lt;module&gt;
    from api.main import app
api/main.py:11: in &lt;module&gt;
    from api.v1 import (
api/v1/auth.py:38: in &lt;module&gt;
    class UserRegistration(BaseModel):
venv/lib/python3.12/site-packages/pydantic/_internal/_model_construction.py:224: in __new__
    complete_model_class(
venv/lib/python3.12/site-packages/pydantic/_internal/_model_construction.py:577: in complete_model_class
    schema = cls.__get_pydantic_core_schema__(cls, handler)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/main.py:671: in __get_pydantic_core_schema__
    return handler(source)
           ^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_schema_generation_shared.py:83: in __call__
    schema = self._handler(source_type)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:655: in generate_schema
    schema = self._generate_schema_inner(obj)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:924: in _generate_schema_inner
    return self._model_schema(obj)
           ^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:739: in _model_schema
    {k: self._generate_md_field_schema(k, v, decorators) for k, v in fields.items()},
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:1115: in _generate_md_field_schema
    common_field = self._common_field_schema(name, field_info, decorators)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:1308: in _common_field_schema
    schema = self._apply_annotations(
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:2107: in _apply_annotations
    schema = get_inner_schema(source_type)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_schema_generation_shared.py:83: in __call__
    schema = self._handler(source_type)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:2086: in inner_handler
    from_property = self._generate_schema_from_property(obj, source_type)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
venv/lib/python3.12/site-packages/pydantic/_internal/_generate_schema.py:821: in _generate_schema_from_property
    schema = get_schema(
venv/lib/python3.12/site-packages/pydantic/networks.py:459: in __get_pydantic_core_schema__
    import_email_validator()
venv/lib/python3.12/site-packages/pydantic/networks.py:421: in import_email_validator
    raise ImportError('email-validator is not installed, run `pip install pydantic[email]`') from e
E   ImportError: email-validator is not installed, run `pip install pydantic[email]`</error></testcase></testsuite></testsuites>